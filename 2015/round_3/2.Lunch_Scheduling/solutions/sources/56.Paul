#include <vector>
#include <string>
#include <stdlib.h>
#include <math.h>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <sstream>
#include <map>
#include <ctime>
#include <cassert>

using namespace std;

ofstream fout("../../../output.txt");
ifstream fin("../../../input.txt");


bool cmp(pair<int,int> a,pair<int,int> b)
{
    if(a.first!=b.first)
        return(a.first<b.first);
    else
        return(a.second<b.second);
}

int rets[3002][3002];




int main(void)
{
    int ttt;
    fin >> ttt;
    
    if(ttt>100000)
        ttt=100000;
    int ct = 0;
    
    cout.precision(9);
    fout.precision(9);
    
    cout << "HELLO" <<  " " << ttt << endl;
    
    
    
    while(ttt>0)
    {
        ct++;
        ttt--;
        //CUT HERE
        long long ans = -1;
        
        vector<pair<int,int> > alist;
        vector<pair<int,int> > blist;
        
        int a,b,l;
        
        fin >> a >> b >> l;
        int i,j,k;
        
        memset(rets,0,sizeof(rets));
        
        for(i=0; i<a; i++)
        {
            pair<int,int> tmp;
            fin >> tmp.first >> tmp.second;
            alist.push_back(tmp);
        }
        for(i=0; i<b; i++)
        {
            pair<int,int> tmp;
            fin >> tmp.first >> tmp.second;
            blist.push_back(tmp);
        }
        sort(alist.begin(),alist.end(),cmp);
        sort(blist.begin(),blist.end(),cmp);
        
        k = 0;
        
        for(i=0; i<a; i++)
        {
            if(k < alist[i].second)
                k=alist[i].second;
            else
                alist[i].second=k;
        }
        k = 0;
        
        for(i=0; i<b; i++)
        {
            if(k < blist[i].second)
                k=blist[i].second;
            else
                blist[i].second=k;
        }
        
        
        rets[0][0]=l;
        ans = 50000;
        
        for(i=0; i<=a; i++)
        {
            for(j=0; j<=b; j++)
            {
                
                //cout << i << " " << j << " " << rets[i][j] << endl;
                if(rets[i][j]==0)
                    continue;
                if(rets[i][j]>80000000)
                {
                    k = max(i,j);
                    if(k<ans)
                        ans=k;
                    continue;
                }
                
                int x = rets[i][j];
                int mn,mx;
                
                if(alist.size() ==0 || alist[0].first >= x)
                {
                    ;
                }
                else{
                    mn = 0;
                    mx = a;
                    
                    while(mn < mx-1)
                    {
                        int mid = (mx+mn)/2;
                        if(alist[mid].first<x)
                        {
                            mn=mid;
                        }
                        else
                        {
                            mx=mid;
                        }
                    }
                    int y= alist[mn].second + l;
                    if(rets[i+1][j]==0 || y>rets[i+1][j])
                        rets[i+1][j]=y;
                }
                if(blist.size()==0 || blist[0].first >= x)
                {
                    ;
                }
                else{
                    mn = 0;
                    mx = b;
                    
                    while(mn < mx-1)
                    {
                        int mid = (mx+mn)/2;
                        if(blist[mid].first<x)
                        {
                            mn=mid;
                        }
                        else
                        {
                            mx=mid;
                        }
                    }
                    int y= blist[mn].second + l;
                    if(rets[i][j+1]==0 || y>rets[i][j+1])
                        rets[i][j+1]=y;
                }

            }
        }
        
        
        
        alist.clear();
        blist.clear();
        
        cout << "Case #" << ct << ": ";
        fout << "Case #" << ct << ": ";
        
        if(ans<50000)
        {
            cout << ans;
            fout << ans;
        }
        else{
            cout << "Lunchtime";
            fout << "Lunchtime";
        }
        
        
        
        
        
        fout << endl;
        cout << endl;
        
    }
    
    
    return 0;
}

