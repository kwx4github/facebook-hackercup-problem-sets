// by shik {{{
#include <bits/stdc++.h>
#include <unistd.h>
#define SZ(x) ((int)(x).size())
#define ALL(c) begin(c),end(c)
#define REP(i,n) for ( int i=0; i<(int)(n); i++ )
#define REP1(i,a,b) for ( int i=(int)(a); i<=(int)(b); i++ )
#define FOR(it,c) for ( auto it=(c).begin(); it!=(c).end(); it++ )
#define MP make_pair
#define PB push_back
using namespace std;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef long long LL;

void RI() {}

template<typename... T>
void RI( int& head, T&... tail ) {
    scanf("%d",&head);
    RI(tail...);
}

template<typename T>
void _dump( const char* s, T&& head ) { cerr<<s<<"="<<head<<endl; }

template<typename T, typename... Args>
void _dump( const char* s, T&& head, Args&&... tail ) {
    cout << __PRETTY_FUNCTION__ << endl;
    int c=0;
    while ( *s!=',' || c!=0 ) {
        if ( *s=='(' || *s=='[' || *s=='{' ) c++;
        if ( *s==')' || *s==']' || *s=='}' ) c--;
        cerr<<*s++;
    }
    cerr<<"="<<head<<", ";
    _dump(s+1,tail...);
}

#define dump(...) _dump(#__VA_ARGS__, __VA_ARGS__);

template<typename Iter>
ostream& _out( ostream &s, Iter b, Iter e ) {
    s<<"[";
    for ( auto it=b; it!=e; it++ ) s<<(it==b?"":" ")<<*it;
    s<<"]";
    return s;
}

template<typename A, typename B>
ostream& operator <<( ostream &s, const pair<A,B> &p ) { return s<<"("<<p.first<<","<<p.second<<")"; }
template<typename T>
ostream& operator <<( ostream &s, const vector<T> &c ) { return _out(s,ALL(c)); }
template<typename T>
ostream& operator <<( ostream &s, const set<T> &c ) { return _out(s,ALL(c)); }
template<typename A, typename B>
ostream& operator <<( ostream &s, const map<A,B> &c ) { return _out(s,ALL(c)); }

/// }}}

inline void chkmin( int &a, int b ) {
    if ( b<a ) a=b;
}

const int N=3010;

struct R {
    int l,r,w;
    void read() {
        RI(l,r);
    }
} a[N],b[N];

bool cmp_len( R x, R y ) {
    return x.r-x.l<y.r-y.l;
}

bool cmp_l( R x, R y ) {
    return x.l<y.l;
}

bool cmp_r( R x, R y ) {
    return x.r<y.r;
}

void strip( int &n, R c[] ) {
    static bool good[N];
    REP(i,n) good[i]=1;
    sort(c,c+n,cmp_len);
    REP(i,n) REP(j,i) if ( c[i].l<=c[j].l && c[j].r<=c[i].r ) good[j]=0;
    int nn=0;
    REP(i,n) if ( good[i] ) c[nn++]=c[i];
    n=nn;
    sort(c,c+n,cmp_l);
}

int n,m,d;
void input() {
    RI(n,m,d);
    REP(i,n) a[i].read();
    REP(i,m) b[i].read();
}

const int INF=1e9;
int zn,nx[2*N],mx[2*N],dp[2*N][N];
R z[2*N];
void solve() {
    if ( d>80000000 ) {
        puts("0");
        return;
    }
    strip(n,a);
    strip(m,b);
    zn=0;
    REP(i,n) z[zn++]=R{a[i].l,a[i].r,1};
    REP(i,m) z[zn++]=R{b[i].l,b[i].r,2};
    sort(z,z+zn,cmp_r);
    REP(i,zn) {
        nx[i]=mx[i]=-1;
        REP(j,zn) {
            if ( z[j].r<=z[i].r ) continue;
            if ( z[j].w==1 && z[j].l-z[i].r<d ) nx[i]=j;
            if ( z[j].w==2 && z[j].l-z[i].r<d ) mx[i]=j;
        }
    }
    REP(i,zn) REP(j,n+1) dp[i][j]=INF;
    REP(i,zn) if ( z[i].l<d ) {
        if ( z[i].w==1 ) dp[i][1]=0;
        else dp[i][0]=1;
    }
    REP(i,zn) REP(j,n+1) if ( dp[i][j]<INF ) {
        int me=dp[i][j];
        if ( nx[i]!=-1 ) chkmin(dp[nx[i]][j+1],me);
        if ( mx[i]!=-1 ) chkmin(dp[mx[i]][j],me+1);
    }
    int ans=INF;
    REP(i,zn) if ( 80000000-z[i].r<d ) {
        REP(j,n+1) {
            int now=max(j,dp[i][j]);
            chkmin(ans,now);
        }
    }
    if ( ans==INF ) puts("Lunchtime");
    else printf("%d\n",ans);
}

int main( int argc, char *argv[] ) {
    int n_case;
    RI(n_case);
    REP1(i,1,n_case) {
        input();
        if ( argc==2 && atoi(argv[1])!=i ) continue;
        printf("Case #%d: ",i);
        solve();
        fflush(stdout);
    }
    return 0;
}

