#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <cctype> 
#include <string> 
#include <cstring> 
#include <ctime> 

using namespace std;

#define _int64 long long
#define mat 80000000 

int d[8100][8100];
int dd[8100][8100];
int d1[8100];

int lowbit(int x)
{
  return (x&(x-1))^x;
}

void add1(int x,int y,int v)
{
  int i;
  x=8000-x;
  for (i=x;i<8100;i+=lowbit(i))
    if (v<dd[y][i]) dd[y][i]=v;
}

int get1(int x,int y)
{
  int i,ret;
  x=8000-x;
  ret=2000000000;
  for (i=x;i>0;i-=lowbit(i))
    if (dd[y][i]<ret) ret=dd[y][i];
  return ret;
}

int main()
{
  int i,j,k,m,n,l,x,y,tmp,ans,nn,jj,tmp1,t,ll;
  vector<pair<pair<int,int>,int> > a;
  scanf("%d",&t);
  for (ll=0;ll<t;ll++)
  {
    scanf("%d%d%d",&n,&m,&l);
    a.clear();
    for (i=0;i<n;i++)
    {
      scanf("%d%d",&x,&y);
      a.push_back(make_pair(make_pair(y,x),0));
    }
    for (i=0;i<m;i++)
    {
      scanf("%d%d",&x,&y);
      a.push_back(make_pair(make_pair(y,x),1));
    }
    a.push_back(make_pair(make_pair(0,0),-1));
    sort(a.begin(),a.end());
    memset(d,-1,sizeof(d));
    for (i=0;i<8100;i++)
      for (j=0;j<8100;j++)
      {
        d[i][j]=2000000000;
        dd[i][j]=2000000000;
      }
    nn=a.size();
    d[0][0]=0;
    add1(0,0,0);
    ans=2000000000;
    for (i=1;i<nn;i++)
    {
      for (jj=i-1;jj>=0;jj--)
        if (a[jj].first.first+l<=a[i].first.second) break;
      //cout<<"i jj: "<<i<<" "<<jj<<endl;
      for (j=0;j<8000;j++)
      {
        d1[j]=get1(jj+1,j);
        //if (j<10)
        //  cout<<j<<": "<<d1[j]<<endl;
      }
      for (j=0;j<8000;j++)
      {
        tmp=j;
        if (a[i].second==0) tmp--;
        tmp1=d1[tmp];
        if (a[i].second==1) tmp1++;
        if (tmp1<d[i][j])
        {
          d[i][j]=tmp1;
          add1(i,j,tmp1);
        }
      }
      if (a[i].first.first+l>mat)
      {
        for (j=0;j<8000;j++)
          if (d[i][j]!=2000000000)
          {
            tmp=j;
            if (d[i][j]>tmp) tmp=d[i][j];
            if (tmp<ans) ans=tmp;
          }
      }
    }
    if (ans==2000000000)
    {
      printf("Case #%d: Lunchtime\n",ll+1);
    }
    else printf("Case #%d: %d\n",ll+1,ans);
  }
  return 0;
}
