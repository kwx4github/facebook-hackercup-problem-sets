#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>
#include<stack>

using namespace std;

typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)			memset(a,b,sizeof a)
#define pb				push_back

int n,m,L;
int a[3333];
int b[3333];
int c[3333];
int d[3333];
int START;
int END;

int r[3333][3333];

typedef pair<pii,int> p3;

p3 t1[3333];
p3 t2[3333];

int check(p3 *t, int RES,int n){
	int pos = lower_bound(t,t+n,p3(pii(RES,0),0))-t;
	if(pos>0){
		pos--;
		return t[pos].second;
	}
	return RES;
}

int go(int A,int B){
	if(r[A][B]!=-1) return r[A][B];
	int to = START;
	if(A>0){
		int r1 = go(A-1,B);
		to=max(to,check(t1,r1,n));
	}
	if(B>0){
		int r2 = go(A,B-1);
		to=max(to,check(t2,r2,m));
	}
	return r[A][B]=to;
}


void build(int *a,int *b,int n,p3 *t){
	REP(i,n)t[i]=p3(pii(a[i],b[i]),0);
	sort(t,t+n);
	REP(i,n){
		t[i].second=t[i].first.second;
		if(i){
			t[i].second=max(t[i].second,t[i-1].second);
		}
	}
}

int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif

	int tc;
	cin>>tc;
	REP(TC,tc){		
		printf("Case #%d: ",TC+1);

		cin>>n>>m>>L;
		REP(i,n)cin>>a[i]>>b[i];
		REP(i,m)cin>>c[i]>>d[i];

		REP(i,n)a[i]*=10,b[i]*=10;
		REP(i,m)c[i]*=10,d[i]*=10;
		L*=10;

		REP(i,n)a[i]-=(L/2-1),b[i]+=(L/2-1);
		REP(i,m)c[i]-=(L/2-1),d[i]+=(L/2-1);

		START=L/2-1;
		END=800000000 - (L/2-1);

		build(a,b,n,t1);
		build(c,d,m,t2);
		
		CL(r,-1);

		int bestres = 1e9;
		REP(i,n+1)REP(j,m+1){
			int t = go(i,j);
			if(t>END)bestres=min(bestres,max(i,j));
		}
		if(bestres>1e8)puts("Lunchtime");
		else cout<<bestres<<endl;


	}

#ifdef LocalHost
//	printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}