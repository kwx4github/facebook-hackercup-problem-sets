#include <bits/stdc++.h>
using namespace std;
int A[3005], B[3005], C[3005], D[3005], F[3005][3005];
map<int, int> nexA, nexB;
const int INF = 1000000000;
int main() {
	int TC;
	scanf("%d", &TC);
	for (int cn = 1; cn <= TC; ++cn) {
		int J, W, L, ans = INF;
		scanf("%d%d%d", &J, &W, &L);
		--L;
		nexA.clear();
		nexB.clear();
		for (int i = 1; i <= J; ++i) {
			scanf("%d%d", &A[i], &B[i]);
			A[i] = A[i] * 2 - L;
			B[i] = B[i] * 2 + L;
			nexA[B[i]] = nexB[B[i]] = 1;
		}
		for (int i = 1; i <= W; ++i) {
			scanf("%d%d", &C[i], &D[i]);
			C[i] = C[i] * 2 - L;
			D[i] = D[i] * 2 + L;
			nexA[D[i]] = nexB[D[i]] = 1;
		}
		nexA[L] = nexB[L] = 1;
		for (auto &i : nexA) {
			int mx = i.first;
			for (int j = 1; j <= J; ++j)
				if (A[j] <= i.first)
					mx = max(mx, B[j]);
			i.second = mx;
		}
		for (auto &i : nexB) {
			int mx = i.first;
			for (int j = 1; j <= W; ++j)
				if (C[j] <= i.first)
					mx = max(mx, D[j]);
			i.second = mx;
		}
		F[0][0] = L;
		for (int j = 0; j <= J; ++j) {
			for (int w = 0; w <= W; ++w) {
				F[j][w] = L;
				if (j) F[j][w] = max(F[j][w], nexA[F[j - 1][w]]);
				if (w) F[j][w] = max(F[j][w], nexB[F[j][w - 1]]);
				if (F[j][w] >= 160000000 - L) ans = min(ans, max(j, w));
			}
		}
		printf("Case #%d: ", cn);
		if (ans < INF) printf("%d\n", ans);
		else printf("Lunchtime\n");
	}
}

