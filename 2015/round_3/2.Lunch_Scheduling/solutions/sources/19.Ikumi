#include<stdio.h>
#include<algorithm>
using namespace std;
int dp[12100][3100];
int z[12100];
int A[3100];
int B[3100];
int C[3100];
int D[3100];
int pv[3100];
int qv[3100];
pair<int,int>p[3100];
pair<int,int>q[3100];
int main(){
	int T;scanf("%d",&T);
	for(int t=1;t<=T;t++){
		int a,b,c;
		scanf("%d%d%d",&a,&b,&c);
		int sz=0;
		for(int i=0;i<a;i++)pv[i]=0;
		for(int i=0;i<b;i++)qv[i]=0;
		z[sz++]=0;
		z[sz++]=80000000;
		for(int i=0;i<a;i++){
			scanf("%d%d",A+i,B+i);
			z[sz++]=A[i];
			z[sz++]=B[i];
		}
		for(int i=0;i<b;i++){
			scanf("%d%d",C+i,D+i);
			z[sz++]=C[i];
			z[sz++]=D[i];
		}
		for(int i=0;i<a;i++){
			for(int j=0;j<a;j++){
				if(i==j)continue;
				if(A[j]<=A[i]&&B[i]<=B[j])pv[i]=1;
			}
		}
		for(int i=0;i<b;i++){
			for(int j=0;j<b;j++){
				if(i==j)continue;
				if(C[j]<=C[i]&&D[i]<=D[j])qv[i]=1;
			}
		}
		std::sort(z,z+sz);
		int ps=0;
		int qs=0;
		for(int i=0;i<a;i++){
			if(pv[i])continue;
			p[ps++]=make_pair(A[i],B[i]);
		}
		for(int i=0;i<b;i++){
			if(qv[i])continue;
			q[qs++]=make_pair(C[i],D[i]);
		}
		std::sort(p,p+ps);
		std::sort(q,q+qs);
		for(int i=0;i<sz+10;i++){
			for(int j=0;j<a+10;j++){
				dp[i][j]=999999999;
			}
		}
		dp[0][0]=0;
		for(int i=0;i<sz;i++){
			for(int j=0;j<=a;j++){
				if(dp[i][j]>9999999)continue;
			//	printf("%d %d: %d\n",z[i],j,dp[i][j]);
				int at=lower_bound(p,p+ps,make_pair(z[i]+c,0))-p-1;
				if(at>=0&&z[i]<p[at].second){
					int to=lower_bound(z,z+sz,p[at].second)-z;
					dp[to][j+1]=min(dp[to][j+1],dp[i][j]);
				}
				at=lower_bound(p,p+ps,make_pair(z[i],0))-p-1;
				if(at>=0&&z[i]<p[at].second){
					int to=lower_bound(z,z+sz,p[at].second)-z;
					dp[to][j+1]=min(dp[to][j+1],dp[i][j]);
				}
				at=lower_bound(q,q+qs,make_pair(z[i]+c,0))-q-1;
				if(at>=0&&z[i]<q[at].second){
					int to=lower_bound(z,z+sz,q[at].second)-z;
					dp[to][j]=min(dp[to][j],dp[i][j]+1);
				}
				at=lower_bound(q,q+ps,make_pair(z[i],0))-q-1;
				if(at>=0&&z[i]<q[at].second){
					int to=lower_bound(z,z+sz,q[at].second)-z;
					dp[to][j]=min(dp[to][j],dp[i][j]+1);
				}
			}
		}
		int ret=999999999;
		for(int i=0;i<sz;i++)
			for(int j=0;j<=a;j++){
				if(80000000-z[i]<c)ret=min(ret,max(j,dp[i][j]));
			}
		if(ret>9999999)printf("Case #%d: Lunchtime\n",t);
		else printf("Case #%d: %d\n",t,ret);
	}
}