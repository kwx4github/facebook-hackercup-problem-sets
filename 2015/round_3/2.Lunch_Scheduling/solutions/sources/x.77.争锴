#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <map>
#include <vector>
#define fi first
#define se second

using namespace std;

int tt;
int n,m,l;
pair<int,int> p[3000];
pair<int,int> q[3000];
int lp[3000],lq[3000];
int rp[3000],rq[3000];
int f[3010][3010];

void go(int x,int y) {
	int cur=f[x][y];
	int nn=lower_bound(lp,lp+n,cur+l)-lp;
	if (nn==0) return;
	--nn;
	f[x+1][y]=max(f[x+1][y],rp[nn]);
}

void go1(int x,int y) {
	int cur=f[x][y];
	int nn=lower_bound(lq,lq+m,cur+l)-lq;
	if (nn==0) return;
	--nn;
	f[x][y+1]=max(f[x][y+1],rq[nn]);
}

int main() {
	freopen("b.in","r",stdin);
	freopen("b.out","w",stdout);

	scanf("%d",&tt);
	for (int ii=1;ii<=tt;++ii) {
		printf("Case #%d: ",ii);

		scanf("%d%d",&n,&m);
		scanf("%d",&l);

		for (int i=0;i<n;++i) {
			int x,y;
			scanf("%d%d",&x,&y);
			p[i].fi=x,p[i].se=y;
		}
		for (int i=0;i<m;++i) {
			int x,y;
			scanf("%d%d",&x,&y);
			q[i].fi=x,q[i].se=y;
		}
		sort(p,p+n);
		sort(q,q+n);
		for (int i=0;i<n;++i)
			lp[i]=p[i].fi,rp[i]=p[i].se;
		for (int i=0;i<m;++i)
			lq[i]=q[i].fi,rq[i]=q[i].se;
		for (int i=1;i<n;++i)
			rp[i]=max(rp[i],rp[i-1]);
		for (int i=1;i<m;++i)
			rq[i]=max(rq[i],rq[i-1]);

		for (int i=0;i<=n;++i)
			for (int j=0;j<=m;++j)
				f[i][j]=0;
		for (int i=0;i<=n;++i)
			for (int j=0;j<=m;++j) {
				go(i,j);
				go1(i,j);
			}
		int ans=10000;
		for (int i=0;i<=n;++i)
			for (int j=0;j<=m;++j)
				if (80000000-f[i][j]<l)
					ans=min(ans,max(i,j));
		if (ans==10000) printf("Lunchtime\n");
		else printf("%d\n",ans);
	}
}

