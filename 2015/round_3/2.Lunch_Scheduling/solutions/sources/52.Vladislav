#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const int MAX = 80*1000*1000;

int n;
int m;
int len;

vector<pair<ii, int> > v;

deque<ii> q[3001];

int main () {
    int tt;
    cin >> tt;
    for (int it = 1; it <= tt; it++) {
		scanf ("%d%d%d", &n, &m, &len);
		v.clear ();
		for (int i = 0; i < n; i++) {
			int a, b;
			scanf ("%d%d", &a, &b);
			v.pb (mp (mp (b, a), 0));
		}
		for (int i = 0; i < m; i++) {
			int a, b;
			scanf ("%d%d", &a, &b);
			v.pb (mp (mp (b, a), 1));
		}
		sort (all (v));
		for (int i = 0; i <= n; i++) q[i].clear ();
		int ans = 1e9;
		for (int i = sz (v) - 1; i >= 0; i--) {
			int a = v[i].fi.se;
			int b = v[i].fi.fi;
			int c = v[i].se;
			for (int j = 0; j <= n; j++)
				while (!q[j].empty () && q[j].front ().fi >= b + len) q[j].pop_front ();
			for (int j = 0; j <= n; j++) {
				int cur = 1e9;
				if (c == 0) {
			    	if (j > 0) {
			    		if (b + len > MAX) cur = 0; else {
			    			if (!q[j - 1].empty ()) cur = q[j - 1].front ().se;
			    		}
			    	}             	
				} else {
					if (b + len > MAX) cur = 1; else {
						if (!q[j].empty ()) cur = q[j].front ().se + 1;
					}
				}
				if (cur < 1e8) {
					if (q[j].empty () || q[j].back ().fi >= a) {
//						printf ("add %d %d %d\n", j, a, cur);
						while (!q[j].empty () && q[j].back ().se >= cur) q[j].pop_back ();
						q[j].pb (mp (a, cur));
					}	
					if (a < len) ans = min (ans, max (j, cur));
				}
//				printf ("%d %d %d = %d %d\n", a, b, c, j, cur);
			}
		}	
        cout << "Case #" << it << ": ";
        if (ans < 1e8) cout << ans; else cout << "Lunchtime";
        cout << endl;
        fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
    }
    return 0;
}