#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const ld eps = 1e-8;
const ld pi = 2 * asin (1.0);

int n;
int m;

int x[3000];
int y[3000];
int x0, y0, d;

inline ld vect (ld x1, ld y1, ld x2, ld y2) {
	re x1 * y2 - x2 * y1;
}

inline ld scal (ld x1, ld y1, ld x2, ld y2) {
	re x1 * x2 + y1 * y2;
}

int main () {
    int tt;
    cin >> tt;
    for (int it = 1; it <= tt; it++) {
		scanf ("%d%d%d%d", &x0, &y0, &d, &n);
		for (int i = 0; i < n; i++) scanf ("%d%d", &x[i], &y[i]);
		int ans = 0;
		for (int i = 0; i < n; i++) {
			ld d1 = sqrt (sqr ((ld)x[i] - x0) + sqr ((ld)y[i] - y0));
			ld x1 = x0 + (x[i] - x0) / d1 * d;
			ld y1 = y0 + (y[i] - y0) / d1 * d;
			int A = 0;
			int B = 0;
			vector<ld> v;
			for (int j = 0; j < n; j++) {
				ld vp = vect (x[j] - x0, y[j] - y0, x[j] - x1, y[j] - y1);
				ld sp = scal (x[j] - x0, y[j] - y0, x[j] - x1, y[j] - y1);
				if (abs (vp) < eps && sp < eps) A++;
				if (abs (x[j] - x1) < eps && abs (y[j] - y1) < eps)
					B++;
				else
					v.pb (atan2l (y[j] - y1, x[j] - x1));	
			}
			sort (all (v));
			int o = sz (v);
			for (int j = 0; j < o; j++) v.pb (v[j] + 2 * pi);
			for (int j = 0; j < sz (v); ) {
				int k = j;
				while (k < sz (v) && abs (v[k] - v[j]) < eps) k++;
				ans = max (ans, A * (B + (k - j)));
				j = k;
			} 
		}
        cout << "Case #" << it << ": " << ans;
        cout << endl;
        fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
    }
    return 0;
}