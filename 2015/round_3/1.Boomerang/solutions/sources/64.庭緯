// by shik {{{
#include <bits/stdc++.h>
#include <unistd.h>
#define SZ(x) ((int)(x).size())
#define ALL(c) begin(c),end(c)
#define REP(i,n) for ( int i=0; i<(int)(n); i++ )
#define REP1(i,a,b) for ( int i=(int)(a); i<=(int)(b); i++ )
#define FOR(it,c) for ( auto it=(c).begin(); it!=(c).end(); it++ )
#define MP make_pair
#define PB push_back
using namespace std;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef long long LL;

void RI() {}

template<typename... T>
void RI( int& head, T&... tail ) {
    scanf("%d",&head);
    RI(tail...);
}

template<typename T>
void _dump( const char* s, T&& head ) { cerr<<s<<"="<<head<<endl; }

template<typename T, typename... Args>
void _dump( const char* s, T&& head, Args&&... tail ) {
    cout << __PRETTY_FUNCTION__ << endl;
    int c=0;
    while ( *s!=',' || c!=0 ) {
        if ( *s=='(' || *s=='[' || *s=='{' ) c++;
        if ( *s==')' || *s==']' || *s=='}' ) c--;
        cerr<<*s++;
    }
    cerr<<"="<<head<<", ";
    _dump(s+1,tail...);
}

#define dump(...) _dump(#__VA_ARGS__, __VA_ARGS__);

template<typename Iter>
ostream& _out( ostream &s, Iter b, Iter e ) {
    s<<"[";
    for ( auto it=b; it!=e; it++ ) s<<(it==b?"":" ")<<*it;
    s<<"]";
    return s;
}

template<typename A, typename B>
ostream& operator <<( ostream &s, const pair<A,B> &p ) { return s<<"("<<p.first<<","<<p.second<<")"; }
template<typename T>
ostream& operator <<( ostream &s, const vector<T> &c ) { return _out(s,ALL(c)); }
template<typename T>
ostream& operator <<( ostream &s, const set<T> &c ) { return _out(s,ALL(c)); }
template<typename A, typename B>
ostream& operator <<( ostream &s, const map<A,B> &c ) { return _out(s,ALL(c)); }

/// }}}

const int N=5140;
const double pi=acos(-1);

struct P {
    double x,y,d;
    double a;
    void read() {
        scanf("%lf%lf",&x,&y);
    }
} p[N];

P operator -( P a, P b ) { return P{a.x-b.x,a.y-b.y,0,0}; }

int cmp_eps( double a, double b, double eps=1e-9 ) {
    double d=fabs(a-b);
    if ( d<eps ) {
        //assert(d<0.1*eps);
        return 0;
    } else {
        //assert(d>10*eps);
        return a<b?-1:+1;
    }
}

bool cmp( P a, P b ) {
    if ( cmp_eps(a.a,b.a)==0 ) return a.d<b.d;
    else return a.a<b.a;
}

int d,n;
void input() {
    P o;
    o.read();
    RI(d,n);
    REP(i,n) p[i].read();
    REP(i,n) p[i]=p[i]-o;
}

double z[2*N];
void solve() {
    REP(i,n) {
        p[i].d=p[i].x*p[i].x+p[i].y*p[i].y;
        p[i].a=atan2(p[i].y,p[i].x);
    }
    int ans=0;
    REP(i,n) {
        int a=0,b=0;
        REP(j,n) {
            int sg=cmp_eps(p[i].a,p[j].a);
            if ( sg==0 && p[j].d<=d*d ) a++;
        }
        P o{d*cos(p[i].a),d*sin(p[i].a),0,0};
        int base=0,zn=0;
        REP(j,n) {
            if ( cmp_eps(o.x,p[j].x)==0 && cmp_eps(o.y,p[j].y)==0 ) {
                base++;
                continue;
            }
            z[zn++]=atan2(p[j].y-o.y,p[j].x-o.x);
        }
        assert(base<=1);
        REP(j,zn) z[zn+j]=z[j]+2*pi;
        zn+=zn;
        sort(z,z+zn);
        int mxb=0;
        for ( int j=0,k; j<zn; j++ ) {
            for ( k=j; k<zn && k<j+zn/2 && cmp_eps(z[j],z[k])==0; k++ );
            mxb=max(mxb,k-j);
        }
        b=base+mxb;
        assert(a<=n);
        assert(b<=n);
        ans=max(ans,a*b);
    }
    printf("%d\n",ans);
}

int main( int argc, char *argv[] ) {
    int n_case;
    RI(n_case);
    REP1(i,1,n_case) {
        input();
        if ( argc==2 && atoi(argv[1])!=i ) continue;
        printf("Case #%d: ",i);
        solve();
        fflush(stdout);
    }
    return 0;
}

