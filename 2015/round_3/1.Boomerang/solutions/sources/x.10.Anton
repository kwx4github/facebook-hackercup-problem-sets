#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>
#include<stack>

using namespace std;

typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)			memset(a,b,sizeof a)
#define pb				push_back

int d,n;
int x[3333],y[3333];
int best;

const double eps = 1e-10;
const double pi = acos(-1.);

void testF(double X,double Y){
	int a = 0;
	REP(i,n){
		double x1 = hypot(x[i],y[i]);
		double x2 = hypot(X-x[i],Y-y[i]);
		if(fabs(x1+x2-d)<eps)a++;
	}
	int best_b = 0;
	int addb=0;
	vector<double> v;
	REP(i,n){
		double dd = hypot(X-x[i],Y-y[i]);
		if(dd<eps){addb++;continue;}
		double angle = atan2(y[i]-Y,x[i]-X);
		if(angle<0)angle+=pi;
		v.pb(angle);
	}
	SORT(v);
	for(int i=0;i<v.size();){
		int j = i;
		while(j<v.size() && fabs(v[j]-v[i])<eps)j++;
		best_b=max(best_b,j-i);
		i=j;
	}
	best=max(best, a*(best_b+addb));
}

int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif

	int tc;
	cin>>tc;
	REP(TC,tc){
		int x0,y0;
		cin>>x0>>y0;
		cin>>d>>n;
		REP(i,n)cin>>x[i]>>y[i],x[i]-=x0,y[i]-=y0;
		best = 0;

		testF(d,0);
		REP(i,n){
			double dd = hypot(x[i],y[i]);
			if(dd<eps) continue;
			double k = d/dd;
			testF(x[i]*k,y[i]*k);
		}

		printf("Case #%d: %d\n",TC+1,best);
	}

#ifdef LocalHost
//	printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}