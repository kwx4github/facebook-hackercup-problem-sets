#include <string>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <cstring>
#include <numeric>
using namespace std;
typedef long long ll;
#define F0(i,n) for (int i = 0; i < n; i++)
#define F1(i,n) for (int i = 1; i <= n; i++)
#define CL(a,x) memset(x, a, sizeof(x));
#define SZ(x) ((int)x.size())
const double eps = 1e-10;
const int inf = 1000000009;
int i, j, k, m, n, l;
const int N = 3005;
int ans;
int x[N], y[N], D;

int main() {
	freopen("a.in", "r", stdin);
	freopen("a.txt", "w", stdout);
	int tn; cin >> tn; F1(tt, tn) 
	{
		cin >> x[0] >> y[0];
		cin >> D >> n;
		F1(i, n) cin >> x[i] >> y[i];

		ans = 0;
		F1(i, n) {
			int z = (x[i] - x[0])*(x[i] - x[0]) + (y[i] - y[0])*(y[i] - y[0]);
			if (z > D*D) continue;

			double dx = (x[i] - x[0]) / sqrt(1.0*z);
			double dy = (y[i] - y[0]) / sqrt(1.0*z);
			double xx = x[0] + dx * D;
			double yy = y[0] + dy * D;
			int A = 0, B = 0, C = 0;
			F1(j, n) if (x[j] >= min(x[0], x[i]) && x[j] <= max(x[0], x[i]) &&
				y[j] >= min(y[0], y[i]) && y[j] <= max(y[0], y[i])) {
				int z = (x[0] - x[i]) * (y[0] - y[j]) - (x[0] - x[j]) * (y[0] - y[i]);
				if (z == 0) A++;
			}
			if (A == 0) throw 15;

			vector<double> at;
			F1(j, n) {
				if (fabs(xx - x[j]) < 1e-9 && fabs(yy - y[j]) < 1e-9) {
					C = 1;
				}
				else {
					at.push_back(atan2(y[j] - yy, x[j] - xx));
				}
			}
			sort(at.begin(), at.end());
			for (int j = 0; j < SZ(at);) {
				int k = j;
				while (k < SZ(at) && fabs(at[k] - at[j]) < 1e-9) k++;
				B = max(B, k - j);
				j = k;
			}
			
			B += C;
			ans = max(ans, A*B);
		}

		cout << "Case #" << tt << ": ";
		cout << ans << endl;
	}
	return 0;
}
