//Facebook Hacker Cup
//Round 3
//1 Feb 2015

//start of jonathanirvings' template v2.0.0 (BETA)

#define jonathan using
#define ganteng namespace
#define banget std
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <deque>
#include <string>
#include <string.h>
#include <vector>
#include <stack>
#include <queue>
#include <math.h>
#include <stdlib.h>
#include <map>
#include <set>
#include <time.h>
#include <bitset>
#include <list>
jonathan ganteng banget;

typedef long long LL;
typedef pair<int,int> pii;
typedef pair<pii,pii> ppi;
typedef pair<LL,LL> pll;
typedef pair<string,string> pss;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pii> vii;
typedef vector<LL> vl;
typedef vector<vl> vvl;
typedef vector<string> vstr;
typedef vector<char> vc;

double EPS = 1e-9;
int INF = 2000000000;
long long INFF = 8000000000000000000LL;
double PI = acos(-1);
int dirx[8] = {-1,0,0,1,-1,-1,1,1};
int diry[8] = {0,1,-1,0,-1,1,-1,1};

#ifdef TESTING
	#define DEBUG fprintf(stderr,"====TESTING====\n")
	#define VALUE(x) cerr << "The value of " << #x << " is " << x << endl
	#define debug(...) fprintf(stderr, __VA_ARGS__)
#else
	#define DEBUG 
	#define VALUE(x)
	#define debug(...)
#endif

#define FOR(a,b,c) for (int (a)=(b);(a)<(c);++(a))
#define FORN(a,b,c) for (int (a)=(b);(a)<=(c);++(a))
#define FORD(a,b,c) for (int (a)=(b);(a)>=(c);--(a))
#define FORSQ(a,b,c) for (int (a)=(b);(a)*(a)<=(c);++(a))
#define FORL(a,b,c) for (LL (a)=(b);(a)<=(c);++(a))
#define FORLSQ(a,b,c) for (int (a)=(b);(LL)(a)*(LL)(a)<=(c);++(a))
#define FORC(a,b,c) for (char (a)=(b);(a)<=(c);++(a))
#define REP(i,n) FOR(i,0,n)
#define REPN(i,n) FORN(i,1,n)
#define REPD(i,n) FORD(i,n,1)
#define MAX(a,b) a = max(a,b)
#define MIN(a,b) a = min(a,b)
#define SQR(x) ((x) * (x))
#define RESET(a,b) memset(a,b,sizeof(a))
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define ALL(v) v.begin(),v.end()
#define ALLA(arr,sz) arr,arr+sz
#define SIZE(v) (int)v.size()
#define SORT(v) sort(ALL(v))
#define REVERSE(v) reverse(ALL(v))
#define SORTA(arr,sz) sort(ALLA(arr,sz))
#define REVERSEA(arr,sz) reverse(ALLA(arr,sz))
#define PERMUTE next_permutation
#define TC(t) while(t--)
#define READ(n,data) {scanf("%d",&n); REPN(i,n) scanf("%d",&data[i]);}

inline string IntToString(int a){
    char x[100];
    sprintf(x,"%d",a); string s = x;
    return s;
}

inline int StringToInt(string a){
    char x[100]; int res;
    strcpy(x,a.c_str()); sscanf(x,"%d",&res);
    return res;
}

inline string GetString(void){
	char x[1000005];
	scanf("%s",x); string s = x;
	return s;
}

inline string uppercase(string s){
	int n = SIZE(s); 
	REP(i,n) if (s[i] >= 'a' && s[i] <= 'z') s[i] = s[i] - 'a' + 'A';
	return s;
}

inline string lowercase(string s){
	int n = SIZE(s); 
	REP(i,n) if (s[i] >= 'A' && s[i] <= 'Z') s[i] = s[i] - 'A' + 'a';
	return s;
}

inline void OPEN (string s) {
    freopen ((s + ".in").c_str (), "r", stdin);
    freopen ((s + ".out").c_str (), "w", stdout);
}

//end of jonathanirvings' template v2.0.0 (BETA)

typedef pair<double,double> pdd;

int T;
int n;
double d;
pair<double,double> data[3005];
pair<double,double> awal;
vector<pdd> lain;
pdd patok;

double jarak(pdd a, pdd b)
{
    return sqrt(SQR(a.fi - b.fi) + SQR(a.se - b.se));
}

bool inside(pdd x,pdd y,pdd cek)
{
    return fabs(jarak(x,y) - jarak(x,cek) - jarak(cek,y)) <= EPS;
}

double grad(pair<LL,LL> a){
    double x = a.fi - patok.fi;
    double y = a.se - patok.se;
    if (x == 0) return INFF;
    return y/x;
}

bool cmp(pair<LL,LL> a,pair<LL,LL> b) {
    double x = grad(a);
    double y = grad(b);
    return (x < y);
}

int main()
{
	scanf("%d",&T);
	REPN(cases,T)
	{
		printf("Case #%d: ",cases);
        scanf("%lf %lf",&awal.fi,&awal.se);
        scanf("%lf",&d);
        scanf("%d",&n);
        REP(i,n) scanf("%lf %lf",&data[i].fi,&data[i].se);
        if (n == 1 && data[0] == awal)
        {
            printf("2\n");
            continue;
        }
        int risan = 0;
        REP(i,n) if(data[i] != awal)
        {
            double X = data[i].fi - awal.fi;
            double Y = data[i].se - awal.se;
            double SZ = sqrt(SQR(X) + SQR(Y));
            double oneX = X / SZ;
            double oneY = Y / SZ;
            pair<double,double> pt = mp(awal.fi + oneX * d, awal.se + oneY * d);
            int now = 0;
            REP(i,n)
            {
                if (inside(awal,pt,data[i])) ++now;
            }
            bool ada = 0;
            REP(i,n) if(data[i] == pt) ada = 1;
            //printf("%d %d\n",i,now);
            //printf("%lf %lf\n",pt.fi,pt.se);

            patok = pt;
            lain.clear();
            REP(i,n) if(data[i] != pt) lain.pb(data[i]);
            sort(ALL(lain),cmp);
            int bef = 0;
            int now2 = 0;
            REP(j,SIZE(lain)) 
            {
                if (j == 0 || fabs(grad(lain[j]) - grad(lain[j-1])) > EPS) {
                    if (j > 0) MAX(now2,j - bef);
                    bef = j;
                }
            }
            MAX(now2,SIZE(lain) - bef);
            if (ada) ++now2;
            MAX(risan,now * now2);
        }
        printf("%d\n",risan);
        fprintf(stderr,"%d\n",risan);
	}
	return 0;
}











