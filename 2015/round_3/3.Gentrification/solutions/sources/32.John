#include <cstdlib>
#include <cassert>
#include <vector>
#include <string>
#include <cstring>
#include <cstdio>
#include <stack>
using namespace std;

#define V(x) vector<x >
#define vs V(string)
#define vi V(int)
#define vd V(double)
#define vll V(long long)

#define fr(x,y,z) for((x)=(y);(x)<(z);(x)++)
#define fo(x,y) fr(x,0,y)
#define fir(n) fo(i,n)
#define fjr(n) fo(j,n)
#define fkr(n) fo(k,n)
#define fi fir(n)
#define fj fjr(n)

#define pb push_back
#define sz size()
#define cs c_str()

#define fk fkr(n)
#include <map>
//#include <set>
#include <algorithm>
#define ll long long
//#define flr(n) fo(l,n)
//#define fl flr(n)
//#define ins(x) insert(x)
//#define df double
//#define srt(f) sort(f.begin(),f.end())


int n,m;
int f[1000][1000];

int ma[1000],mb[1000];
bool seen[1000];
int ne;

bool bar(int w);
bool foo(int w) {
  if(seen[w]) return false;
  seen[w]=true;
  int i;
  fir(n+ne) if((f[w][i] || i>=n+ne) && bar(i)) {
    ma[w]=i; mb[i]=w;
    return true;
  }
  return false;
}
bool bar(int w) {
  if(mb[w]==-1) return true;
  return foo(mb[w]);
}

int main(void) {
  int i,j,k;
  int nc;
  assert(scanf("%d",&nc)==1);
  for(int cas=1;cas<=nc;cas++) {
    assert(scanf("%d%d",&n,&m)==2);
    int r[500][500];
    fi fj r[i][j]=0;
    fir(m)  {
      int a,b;
      assert(scanf("%d%d",&a,&b)==2);
      r[a][b]=1;
    }

    fj fi fk r[i][k]|=(r[i][j]&r[j][k]);
    fir(1000) fjr(1000) f[i][j]=0;
    fi fj f[i][j]=(r[i][j] && !r[j][i]);
    //fi { fj printf("%d",r[i][j]); puts(""); } puts("");
    //fi { fj printf("%d",f[i][j]); puts(""); } puts("");

    fir(1000) ma[i]=mb[i]=-1;
    ne=0;
    fi {
      fjr(1000) seen[j]=false;
      if(!foo(i)) {
        ma[i]=n+ne;
        mb[n+ne]=i;
        ne++;
      }
    }
    //fi printf("%d -> %d\n",i,ma[i]);
    printf("Case #%d: %d\n",cas,ne);
  }
  return 0;
}
