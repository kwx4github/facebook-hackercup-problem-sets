#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>
#include<stack>

using namespace std;

typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)			memset(a,b,sizeof a)
#define pb				push_back

int n;
bool a[555][555];

int g[555];

int f[1111][1111];
bool u[1111];

bool dfs(int from,int to){
	if(from==to)return true;
	if(u[from])return false;
	u[from]=true;
	if(f[from][to]){
		return f[from][to]--,f[to][from]++,true;
	}
	REP(i,n+n)if(f[from][i])
		if(dfs(i,to)) return f[from][i]--,f[i][from]++,true;
	return false;
}

int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif

	int tc;
	cin>>tc;
	REP(TC,tc){		
		int m;
		cin>>n>>m;
		//n=500;m=100;
		CL(a,0);
		REP(i,m){
			int x,y;
			cin>>x>>y;
			//x=rand()%n;
			//y=rand()%n;
			a[x][y]=true;
		}
		REP(k,n)REP(i,n)REP(j,n)a[i][j]|=a[i][k]&a[k][j];

		
		REP(i,n){
			g[i]=i;
			REP(j,i)if(a[i][j]&&a[j][i])g[i]=g[j];
		}

		CL(f,0);
		REP(i,n){
			int num=0;
			REP(j,n)if(g[j]==g[i])num++;
			REP(j,n)if(g[j]!=g[i]&&a[g[i]][g[j]]){
				f[g[i]][g[j]+n]=1000;
			}
			f[n+n][g[i]]=num;
			f[g[i]+n][n+n+1]=num;
		}
		int res = n;
		while(1){
			CL(u,0);
			if(dfs(n+n,n+n+1)) res--;
			else break;
		}
		printf("Case #%d: %d\n",TC+1,res);
	}

#ifdef LocalHost
//	printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}