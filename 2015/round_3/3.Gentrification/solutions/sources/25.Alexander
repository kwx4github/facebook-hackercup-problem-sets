#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <string.h>
#include <math.h>
#include <fstream>
#include <iostream>
using namespace std;
#define N 1010
int g[N][N], b[N], y[N];
#define K 1000010
#define M 1001000
int n, l, e[2*K], a[2*K], u[N], p[N];
vector <int> m[N];
queue <int> q;
int dfs(int i, int l, int f)
{
	int j, k, r;
	if(!f || i==l) return f;
	for(r=0; p[i]<m[i].size(); p[i]++)
		if(u[e[j=m[i][p[i]]]]==u[i]+1) { k=dfs(e[j], l, min(f, a[j])); a[j]-=k; a[j^1]+=k; f-=k; r+=k; if(!f) break; }
	return r;
}
bool bfs(int b, int l)
{
	int i, j;
	for(i=0; i<n; u[i]=0, p[i]=0, i++);
	for(q.push(b), u[b]=1; !q.empty(); )
		for(i=q.front(), q.pop(), j=0; j<m[i].size(); j++)
			if(a[m[i][j]] && !u[e[m[i][j]]]) { u[e[m[i][j]]]=u[i]+1; q.push(e[m[i][j]]); }
	return u[l]>0;
}
int mxfl(int b, int e)
{
	int f;
	for(f=0; bfs(b, e); f+=dfs(b, e, M));
	return f;
}
void add(int i, int j, int c)
{
	e[l]=j; a[l]=c; m[i].push_back(l++);
	e[l]=i; a[l]=0; m[j].push_back(l++);
}
void solve()
{
	int i, j, n, k;
	scanf("%d%d", &n, &k);
	for(i=0; i<n; i++)
		for(j=0; j<n; g[i][j]=0, j++);
	for(; k--; scanf("%d%d", &i, &j), g[i][j]=1);
	for(i=0; i<n; g[i][i]=1, i++);
	for(i=0; i<n; i++)
		for(j=0; j<n; j++)
			if(g[i][j])
				for(k=0; k<n; g[k][j]|=g[k][i], k++);
	int z=0;
	int c=0;
	for(i=0; i<n; b[i]=-1, y[i]=0, i++);
	for(i=0; i<n; i++)
	{
		k=0;
		for(j=0; j<n; k+=g[i][j] && g[j][i], j++);
		z=max(z, k);
		if(b[i]==-1)
		{
			for(j=0; j<n; j++)
				if(g[i][j] && g[j][i]) { b[j]=c; y[c]++; }
			c++;
		}
	}
	l=0;
	for(i=0; i<2*c+2; m[i].clear(), i++);
	for(i=0; i<n; i++)
		for(j=0; j<n; j++)
			if(b[i]!=b[j] && g[i][j]) add(2*b[i], 2*b[j]+1, M);
	j=0;
	for(i=0; i<c; j+=y[i], add(2*c, 2*i, y[i]), add(2*i+1, 2*c+1, y[i]), i++);
	::n=2*c+2;
	k=mxfl(2*c, 2*c+1);
	z=max(z, j-k);
	printf("%d\n", z);
}
int main()
{
	int ts;
	scanf("%d", &ts);
	for(int t=1; t<=ts; t++)
	{
		printf("Case #%d: ", t);
		solve();
	}
	return 0;
}