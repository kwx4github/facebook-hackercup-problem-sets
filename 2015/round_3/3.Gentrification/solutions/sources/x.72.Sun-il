#include <stdio.h>
#include <memory.h>
#define MN 500
int N, M, r;
bool d[MN][MN], v[MN][MN];
bool vis[MN], asdf[MN]; int mat[MN];
bool dfs(int p) {
	vis[p] = true;
	for (int q = 0; q < N; q++) {
		if (d[p][q]) {
			if (mat[q] == -1) {
				mat[q] = p;
				return true;
			}
			else if (!vis[mat[q]]) {
				if (dfs(mat[q])) {
					mat[q] = p;
					return true;
				}
			}
		}
	}
	return false;
}
int main()
{
	freopen("input.txt","r",stdin);
	FILE *out=fopen("output.txt","w");
	int t, T, i, j, k;
	
	scanf("%d",&T);
	for (t = 1; t <= T; t++) {
		printf("Case #%d: ",t);
		fprintf(out,"Case #%d: ",t);
		memset(d,0,sizeof(d));
		scanf("%d%d",&N,&M);
		for (i = 0; i < M; i++) {
			scanf("%d%d",&j,&k);
			d[j][k] = true;
		}
		memset(v,0,sizeof(v));
		for (i = 0; i < N; i++) {
			for (j = 0; j < N; j++)
				v[i][j] = d[i][j];
			v[i][i] = true;
		}
		for (k = 0; k < N; k++) {
			for (i = 0; i < N; i++) {
				for (j = 0; j < N; j++) {
					if (v[i][k] && v[k][j])
						v[i][j] = true;
				}
			}
		}
		for (i = 0; i < N; i++) {
			for (j = 0; j < N; j++) {
				if (d[i][j] && v[j][i])
					d[i][j] = false;
			}
		}
		r = 0;
		memset(asdf,0,sizeof(asdf));
		memset(mat,-1,sizeof(mat));
		for (;;) {
			memset(vis,0,sizeof(vis));
			for (i = 0; i < N; i++) {
				if (!asdf[i] && !vis[i]) {
					if (dfs(i)) {
						asdf[i] = true;
						break;
					}
				}
			}
			if (i >= N) break;
			r++;
		}
		fprintf(out,"%d\n",N-r);
	}
	fclose(out);
	return 0;
}