
#include <bits/stdc++.h>
#include <sys/time.h>

using namespace std;

#define FI first
#define SE second
#define X first
#define Y second
#define ST first
#define ND second
#define MP make_pair
#define PB push_back

typedef long long LL;
typedef vector<int> VI;
typedef long double LD;
typedef pair<int,int> PII;

#define REP(i,n) for(int i=0;i<(n);++i)
#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORE(a,b) for(VAR(a,(b).begin());a!=(b).end();++a)
#define VAR(a,b) __typeof(b) a=(b)
#define ALL(x) (x).begin(),(x).end()
#define CLR(x,a) memset(x,a,sizeof(x))

double getTime() {
	timeval tv;
	gettimeofday(&tv, NULL);
	return tv.tv_sec + tv.tv_usec * 1e-6;
}

const int N = 605;

bool e[N][N];

int n;

bool match_e[N][N];

int matchedL[N];
int matchedR[N];
bool visited[N];

bool dfs(int x) {
    if (visited[x]) {
        return false;
    }
    visited[x] = true;
    REP (i, n) {
        if (match_e[x][i]) {
            if (matchedR[i] == -1 || dfs(matchedR[i])) {
                matchedL[x] = i;
                matchedR[i] = x;
                return true;
            }
        }
    }
    return false;
}

int alg() {
    int m;
    cin >> n >> m;
    CLR(e, 0);
    REP (i, m) {
        int a, b;
        cin >> a >> b;
        e[a][b] = true;
    }
    REP (k, n) {
        REP (i, n) {
            REP (j, n) {
                e[i][j] |= e[i][k] & e[k][j];
            }
        }
    }
    CLR(match_e, 0);
    REP (i, n) {
        REP (j, n) {
            if (!e[i][j] || !e[j][i]) {
                match_e[i][j] = e[i][j];
            } else {
                match_e[i][j] = false;
            }
        }
    }
    REP (i, n) {
        matchedL[i] = matchedR[i] = -1;
    }
    int sz = 0;
    REP (i, n) {
        if (matchedL[i] == -1) {
            CLR(visited, 0);
            if (dfs(i)) {
                ++sz;
            }
        }
    }
    return n - sz;
}

int main() {
    int d;
    cin >> d;
    FOR (i, 1, d + 1) {
        cout << "Case #" << i << ": " << alg() << endl;
    }
}
