program gentrification;
uses math;

var	e, f: array[ 0..500, 0..500 ] of longInt;
	p: array[ 1..500 ] of longInt;
	vis: array[ 1..500 ] of boolean;
	n: longInt;
	
function dfs( v: longInt ): boolean;
var	i: longInt;
begin
	if ( vis[v] ) then
		exit( false );
	
	vis[v] := true;
	
	for i := 1 to n do
		if ( e[v][i] = 1 ) and ( ( p[i] = 0 ) or ( dfs( p[i] ) ) ) then
		begin
			p[i] := v;
			
			exit( true );
		end;
	
	exit( false );
end;

var	_t, _tt, m, i, j, k, u, v, ans: longInt;

begin
	readln( _tt );
	for _t := 1 to  _tt do
	begin
		fillchar( e, sizeOf(e), 0 );
		fillchar( f, sizeOf(f), 0 );
		fillchar( p, sizeOf(p), 0 );
	
		readln( n, m );
		for i := 1 to m do
		begin
			readln( u, v );
			
			e[u + 1][v + 1] := 1;
		end;
		
		for i := 1 to n do
			e[i][i] := 1;
		
		for k := 1 to n do
			for i := 1 to n do
				for j := 1 to n do
					e[i][j] := e[i][j] or ( e[i][k] and e[k][j] );
		
		for i := 1 to n do
			for j := 1 to n do
				if ( e[i][j] = 1 ) and ( e[j][i] = 0 ) then
					f[i][j] := 1;
		
		for i := 1 to n do
			for j := 1 to n do
				e[i][j] := f[i][j];
		
		ans := n;
		for i := 1 to n do
		begin
			fillchar( vis, sizeOf(vis), 0 );
			
			if ( dfs( i ) ) then
				dec( ans );
		end;
		
		writeln( 'Case #', _t, ': ', ans );
	end;
end.
