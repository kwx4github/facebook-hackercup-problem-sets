#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>

using namespace std;

const int N = 500 + 10;

int n, m;
int a[N][N];
int vis[N];
int match[N];

int findIt(int u)
{
	if (vis[u]) return false;
	vis[u] = true;
	for(int i = 0; i < n; ++ i) {
		if (a[u][i] && ! a[i][u]) {
			if (match[i] == -1 || findIt(match[i])) {
				match[i] = u;
				return true;
			}
		}
	}
	return false;
}

void solve()
{
	cin >> n >> m;
	for(int i = 0; i < n; ++ i) {
		for(int j = 0; j < n; ++ j) {
			a[i][j] = 0;
		}
		a[i][i] = 1;
		match[i] = -1;
	}
	for(int i = 0; i < m; ++ i) {
		int x, y;
		cin >> x >> y;
		a[x][y] = 1;
	}
	for(int k = 0; k < n; ++ k) {
		for(int i = 0; i < n; ++ i) {
			for(int j = 0; j < n; ++ j) {
				a[i][j] |= a[i][k] && a[k][j];
			}
		}
	}

	int ret = 0;
	for(int i = 0; i < n; ++ i) {
		memset(vis, 0, sizeof vis);
		ret += findIt(i);
	}
	cout << n - ret << endl;
}

int main()
{
	int t;
	cin >> t;
	for(int i = 0; i < t; ++ i) {
		printf("Case #%d: ", i + 1);
		solve();
	}
	return 0;
}
