#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define fi first
#define se second
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

typedef double pmatrix[4][4];
const int N=13000;
int r1[N][4][4],r2[N][4][4],rk[N*4],n,p,d,x,y,z,ty,_,__;
pmatrix p1[N],p2[N],nd[N*4];
double g[10][10],ret[10],cr[10];

bool sk[10];
void gauss(int n) {
	rep(i,0,n) {
		int p=i;
		sk[i]=0;
		rep(j,0,n) if ((j<i&&sk[j])||j>=i) if (fabs(g[j][i])>=fabs(g[p][i])) p=j;
		rep(j,i,n+1) swap(g[i][j],g[p][j]);
		if (fabs(g[i][i])<=1e-9) { sk[i]=1; continue;}
		rep(k,i+1,n+1) g[i][k]/=g[i][i]; g[i][i]=1;
		rep(j,i+1,n) {
			double cof=-g[j][i];
			rep(k,i,n+1) g[j][k]+=cof*g[i][k];
		}
	}
	per(i,0,n) {
		rep(j,0,i) g[j][n]-=g[j][i]*g[i][n];
	}
}
void refresh(int x) {
	pmatrix a,b;
	rep(i,0,4) rep(j,0,4) if (rk[x*4+i]) a[i][j]=1.*r1[x][i][j]/rk[x*4+i]; else a[i][j]=0;
	rep(i,0,4) rep(j,0,4) if (rk[x*4+i]) b[i][j]=1.*r2[x][i][j]/rk[x*4+i]; else b[i][j]=0;
	rep(k,0,4) {
		memset(g,0,sizeof(g));
		rep(i,0,4) {
			rep(j,0,4) g[i][j]=(i==j)-a[i][j];
			g[i][4]=b[i][k];
		}
		gauss(4);
		rep(i,0,4) p2[x][i][k]=g[i][4];
	}
	rep(k,0,4) {
		memset(g,0,sizeof(g));
		rep(i,0,4) if (i!=k) {
			rep(j,0,4) g[i][j]=(i==j)-a[i][j];
		} else { g[i][i]=1; g[i][4]=1;}
		gauss(4);
		rep(i,0,4) p1[x][i][k]=g[i][4];		
	}
}
void build(int p,int l,int r) {
	if (l==r) { rep(i,0,4) rep(j,0,4) nd[p][i][j]=p2[l][i][j];} 
	else {
		int md=(l+r)>>1;
		build(p+p,l,md);
		build(p+p+1,md+1,r);
		rep(i,0,4) rep(j,0,4) {
			nd[p][i][j]=0;
			rep(k,0,4) nd[p][i][j]+=nd[p+p][i][k]*nd[p+p+1][k][j];
		}
	}
}
void modify(int p,int l,int r,int x) {
	if (l==r) { rep(i,0,4) rep(j,0,4) nd[p][i][j]=p2[x][i][j];}
	else {
		int md=(l+r)>>1;
		if (x<=md) modify(p+p,l,md,x);
		else modify(p+p+1,md+1,r,x);
		rep(i,0,4) rep(j,0,4) {
			nd[p][i][j]=0;
			rep(k,0,4) nd[p][i][j]+=nd[p+p][i][k]*nd[p+p+1][k][j];
		}
	}
}
void query(int p,int l,int r,int tl,int tr) {
	if (l==tl&&r==tr) {
		rep(i,0,4) cr[i]=0;
		rep(i,0,4) rep(j,0,4) cr[j]+=ret[i]*nd[p][i][j];
		rep(i,0,4) ret[i]=cr[i];
	} else {
		int md=(l+r)>>1;
		if (tr<=md) query(p+p,l,md,tl,tr);
		else if (tl>md) query(p+p+1,md+1,r,tl,tr);
		else query(p+p,l,md,tl,md),query(p+p+1,md+1,r,md+1,tr);
	}
}
void gao() {
	scanf("%d%d%d",&n,&p,&d);
	while (n%4!=0) ++n;
	rep(i,0,n) rk[i]=0;
	rep(i,0,n/4) {
		rep(j,0,4) rep(k,0,4) r1[i][j][k]=0;
		rep(j,0,4) rep(k,0,4) r2[i][j][k]=0;
	}
	rep(i,0,p) {
		scanf("%d%d%d",&x,&y,&z); 
		rk[x]+=z;
		if (x/4==y/4) r1[x/4][x%4][y%4]+=z;
		else r2[x/4][x%4][y%4]+=z;
	}
	rep(i,0,n/4) refresh(i);
	build(1,0,n/4-1);
	rep(i,0,d) {
		scanf("%d%d%d",&ty,&x,&y);
		if (ty==1) {
			scanf("%d",&z);
			rk[x]+=z;
			if (x/4==y/4) r1[x/4][x%4][y%4]+=z;
			else r2[x/4][x%4][y%4]+=z;
			refresh(x/4);
			modify(1,0,n/4-1,x/4);
		} else if (ty==2) {
			if (x/4==y/4) z=r1[x/4][x%4][y%4],r1[x/4][x%4][y%4]=0;
			else z=r2[x/4][x%4][y%4],r2[x/4][x%4][y%4]=0;
			rk[x]-=z;
			refresh(x/4);
			modify(1,0,n/4-1,x/4);
		} else {
			rep(i,0,4) ret[i]=0;
			ret[x%4]=1;
			if (x/4<=y/4-1) query(1,0,n/4-1,x/4,y/4-1);
			double ans=0;
			rep(i,0,4) ans+=ret[i]*p1[y/4][i][y%4];
			printf("%.6f ",ans);
		}
	}
	fprintf(stderr,"%d\n",__);
	puts("");
}
int main() {
//	freopen("in.txt","r",stdin);
	for (scanf("%d",&_);_;_--) {
		printf("Case #%d: ",++__);
		gao();
	}
}
