#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>
#include<stack>

using namespace std;

typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)			memset(a,b,sizeof a)
#define pb				push_back

int n,p,d;
int         S[55555];
int v[55555][8];
vector<pii> vv[55555];

float r[55555];


const double eps = 1e-8;
	
double m[4][4];
double b[4];
	
void solve2(int s,int B){
	CL(m,0);CL(b,0);
	double k,t;
	REP(i,4){
		m[i][i]=1;
		if(s+i==B){
			b[i]=1;
		}else{
			if(!S[s+i])continue;
			t=1./S[s+i];
			REP(j,4)if(v[s+i][j]){
				m[i][j] -= v[s+i][j] *t;
			}
			FOR(j,4,8)if(v[s+i][j]){
				b[i]+=r[s+j]*v[s+i][j] *t;
			}
		}
	}
	/*
	REP(i,4){
		int pos=-1;
		REP(j,4)if(fabs(m[i][j])>eps){pos=j;break;}
		double k = 1./m[i][pos];
		REP(j,4)m[i][j]*=k;
		b[i]*=k;
		if(pos==-1)continue;
		REP(q,4)if(q!=i){
			k=m[q][pos];
			REP(j,4)m[q][j]-=m[i][j]*k;
			b[q]-=b[i]*k;
		}
	}
	
	REP(i,4){
		double sum = 0;
		REP(j,4)sum+=fabs(m[i][j]);
		if(fabs(sum-1)<eps){
			REP(j,4){
				if(fabs(m[i][j]-1)<eps){
					r[s+j]=b[i];
				}
			}
		}
	}*/
	REP(i,4){
		if(fabs(m[i][i])<eps)continue;
		double k = 1./m[i][i];
		REP(j,4)m[i][j]*=k;
		b[i]*=k;
		REP(q,4)if(q!=i){
			k=m[q][i];
			REP(j,4)m[q][j]-=m[i][j]*k;
			b[q]-=b[i]*k;
		}
	}
	
	REP(i,4)if(fabs(m[i][i]-1)<eps)r[s+i]=b[i];
}

bool DEBUG=0;

void solve(int A,int B){
	CL(r,0);
	r[B]=1;

	for(int i=B/4;i>=A/4;i--){
		solve2(i*4,B);
	}

	if(!DEBUG)printf(" %.6lf",r[A]);
}



int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif

	int tc;
	cin>>tc;
	REP(TC,tc){
		printf("Case #%d:",TC+1);
		if(!DEBUG)cin>>n>>p>>d;
		else{n=50000;p=100000;d=200;}
		CL(v,0);CL(S,0);
		REP(i,n)vv[i].clear();
		REP(i,p){
			int A,B,R;
			if(!DEBUG)cin>>A>>B>>R;
			else{
				A=rand()%n;
				B = min(n-1,A/4*4 + rand()%8);
				if(A==B)continue;
			}
			v[A][B-A/4*4]=R;
			vv[A].pb(pii(B,R));
			S[A]+=R;
		}
		REP(i,d){
			int E,A,B,Z;
			if(!DEBUG)cin>>E>>A>>B;
			else{
				E=3;A=0;B=n-1;
				if(i%100==0)cout<<i<<endl;
			}
			if(E==1){
				cin>>Z;
				v[A][B-A/4*4]=Z;
				vv[A].pb(pii(B,Z));
				S[A]+=Z;
			}
			if(E==2){
				S[A]-=v[A][B-A/4*4];
				v[A][B-A/4*4]=0;
				REP(i,vv[A].size())if(vv[A][i].first==B){
					vv[A].erase(vv[A].begin()+i);
					break;
				}
			}
			if(E==3){
				solve(A,B);
			}
		}
		puts("");
	}

#ifdef LocalHost
	//printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}