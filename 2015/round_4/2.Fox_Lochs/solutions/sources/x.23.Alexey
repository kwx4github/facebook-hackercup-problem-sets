#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <queue>
#include <stack>
#include <sstream>
#include <cstring>
#include <numeric>
#include <ctime>

#define re return
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)
#define y0 y32479
#define y1 y95874
#define fill(x, y) memset(x, y, sizeof(x))
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
#define spc(i,n) " \n"[i == n - 1]

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef double D;
typedef long double LD;
typedef long long ll;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;

template<class T> T abs(T x) { return x > 0 ? x : -x;}

int m;
int n;

vii v;
vi vx, vy;
int cx1[100], cy1[100], cx2[100], cy2[100];

double check(vii v) {
	sort(all(v));
	double ans = 0;
	rep(i, sz(v)) {
		int cr = v[i].se;
		for (int j = i + 1; j <= sz(v); j++) {
			if (j == sz(v) || v[j].fi > cr) {
				ans = max(ans, (double)cr - v[i].fi);
				break;
			}
			cr = max(cr, v[j].se);
		}
	}
	re ans;
}

double check2(vector<pair<double, double> > v) {
	sort(all(v));
	double ans = 0;
	rep(i, sz(v)) {
		double cr = v[i].se;
		for (int j = i + 1; j <= sz(v); j++) {
			if (j == sz(v) || v[j].fi > cr + 1e-9) {
				ans = max(ans, (double)cr - v[i].fi);
				break;
			}
			cr = max(cr, v[j].se);
		}
	}
	re ans;
}

double checkx(int x) {
	vii tmp;
	rep(i, n) {
		if (x >= cx1[i] && x <= cx2[i])
			tmp.pb(mp(cy1[i], cy2[i]));
	}
	re check(tmp);
}

double checky(int y) {
	vii tmp;
	rep(i, n) {
		if (y >= cy1[i] && y <= cy2[i])
			tmp.pb(mp(cx1[i], cx2[i]));
	}
	re check(tmp);
}

int check1(double x, double y) {
	rep(i, n) {
		if (cx1[i] <= x && cx2[i] >= x && cy1[i] <= y + 1e-9 && cy2[i] >= y - 1e-9)
			re 1;
	}
	re 0;
}

double check(int x1, int y1, int x2, int y2) {
	double dy = ((double) (y2 - y1) / (double) (x2 - x1));
	double dx = ((double) (x2 - x1) / (double) (y2 - y1));
	vector<pair<double, double> > tmp;
	vector<double> p;
	rep(i, sz(vx)) {
		p.pb(vx[i]);
	}
	rep(i, sz(vy)) {
		double y = vy[i];
		double x = dx * (y - y1) + x1;
		p.pb(x);
	}

	sort(all(p));
	rep(i, sz(p) - 1) {
		double x = (p[i] + p[i + 1]) / 2;
		double y = (x - x1) * dy + y1;
		if (check1(x, y))
			tmp.pb(mp(p[i], p[i + 1]));
	}

	double o = check2(tmp);
	re o * (sqrt(1 + dy * dy));
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int tc;
	cin >> tc;
	rep(tt, tc) {
		cout << "Case #" << tt + 1 << ": ";

		vx.clear();
		vy.clear();
		v.clear();

		cin >> n;
		double ans = 0;
		rep(i, n) {
			int x1, y1, x2, y2;
			cin >> x1 >> y1 >> x2 >> y2;
			if (x1 > x2)
				swap(x1, x2);
			if (y1 > y2)
				swap(y1, y2);
			cx1[i] = x1;
			cx2[i] = x2;
			cy1[i] = y1;
			cy2[i] = y2;
			v.pb(mp(x1, y1));
			v.pb(mp(x1, y2));
			v.pb(mp(x2, y1));
			v.pb(mp(x2, y2));
			vx.pb(x1);
			vx.pb(x2);
			vy.pb(y1);
			vy.pb(y2);
		}
		sort(all(vx));
		sort(all(vy));
		unq(vx);
		unq(vy);
		rep(i, sz(vx))
			ans = max(ans, checkx(vx[i]));
		rep(i, sz(vy))
			ans = max(ans, checky(vy[i]));
		rep(i, sz(v)) {
			int x1 = v[i].fi;
			int y1 = v[i].se;
			ans = max(ans, check(x1, y1, x1 + 1, y1 + 1));
			ans = max(ans, check(x1, y1, x1 + 1, y1 - 1));
			for (int j = i + 1; j < sz(v); j++) {
				int x2 = v[j].fi;
				int y2 = v[j].se;
				if (x1 == x2 || y1 == y2)
					continue;
				ans = max(ans, check(x1, y1, x2, y2));
			}
		}
		printf("%.7lf\n", ans);
	}
	cout << flush;


	re 0;
}

