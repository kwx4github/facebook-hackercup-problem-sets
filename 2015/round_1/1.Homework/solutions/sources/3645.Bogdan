#!/usr/bin/python

import sys

L = 10**7 + 1

nr_list = [ i for i in xrange(L) ]
numbers = [ 0 for _ in xrange(L) ]

def genPrimes():
	global nr_list, numbers

	for i in xrange(2, L):
		if nr_list[i] == 0 or ((i != 2) and (i % 2 == 0)):
			continue
		numbers[i] = 1
		for k in xrange(2, L / i + 1):
			a = i * k
			if a >= L:
				break
			nr_list[a] = 0
			numbers[a] = numbers[a] + 1

genPrimes()

def solng(A, B, K):
	sol = 0
	for i in xrange(A, B+1):
		if numbers[i] == K:
			sol = sol + 1
	return sol


T = int(raw_input().strip())
for Ci in xrange(T):
	A, B, K = [ int(i) for i in raw_input().strip().split() ]

	print "Case #%d: %d" % (Ci+1, solng(A, B, K))

