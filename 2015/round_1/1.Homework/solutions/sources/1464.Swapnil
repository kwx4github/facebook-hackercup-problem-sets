#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;

inline int toInt(string s){int i;stringstream (s)>>i;return i;}
inline string toString(int i){string s;stringstream ss;ss<<i;ss>>s;return s;}

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef pair<ULL,ULL> PUU;
typedef vector<int> VI;
typedef vector<long> VL;
typedef vector<string> VS;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORE(i,a,b) for(int i=a;i<=b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define ALL(c) (c).begin(), (c).end()
#define RALL(c) (c).rbegin(), (c).rend()
#define SORT(c) sort(ALL(c))
#define PB push_back
#define MP make_pair

#define INF (long)1e9
#define EPS 1e-9

LL _sieve_size;
bitset<10000010> bs;
VI primes,p(10000010);
set<int> factors;
void sieve(LL upperbound){
    _sieve_size = upperbound + 1;
    bs.reset(); bs.flip();
    bs.set(0, false); bs.set(1, false);
    for (LL i = 2; i <= _sieve_size; i++)
        if (bs.test((size_t)i)){
            for (LL j = i * i; j <= _sieve_size; j += i)
                bs.set((size_t)j, false);
            primes.push_back((int)i);
        }
}

void primeFactors(int N) {
    factors.clear();
    int PF_idx = 0, PF = primes[PF_idx],tmp=N;
    while (N != 1 && (PF * PF <= N)) {
        while (N % PF == 0) {
            N /= PF;
            factors.insert(PF);
        }
        PF = primes[++PF_idx];
    }
    if (N != 1) factors.insert(N);
    p[tmp]=factors.size();
    //cout<<tmp<<'-';for(auto x:factors)cout<<x<<' ';cout<<endl;
}

int main(){_
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int t,a,b,k,ans;cin>>t;
    sieve(10000000);
    REP(i,10000001)primeFactors(i);
    //REP(i,20)cout<<i<<" -> "<<p[i]<<endl;
    //partial_sum(ALL(p),p.begin());
    FORE(z,1,t){
        cin>>a>>b>>k;
        ans=0;
        FORE(i,a,b)if(p[i]==k)ans++;
        cout<<"Case #"<<z<<": "<<ans<<endl;
    }
    return 0;
}
