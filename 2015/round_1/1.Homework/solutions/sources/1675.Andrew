import time
import math


def primes(n):
    np1 = n + 1
    s = range(np1)
    s[1] = 0
    sqrtn = int(round(n**0.5))
    for i in xrange(2, sqrtn + 1):
        if s[i]:
            s[i*i: np1: i] = [0] * len(xrange(i*i, np1, i))
    return filter(None, s)


def primacity(n):
    np1 = n + 1   
    s = { x: 0 for x in xrange(np1) }
    for i in primes(n):
        if s[i] == 0:
            for x in xrange(i + i, np1, i): s[x] += 1
    for i in xrange(0, np1):
         if s[i] == 0: s[i] = 1
            
    return s


start_time = time.clock()

N = 10000000
primacity_cache = primacity(N)

f = open('C:\\temp\\homework.txt')
out = open('C:\\temp\\homework_output.txt', 'w')
T = int(f.readline().strip())

for t in range(1, T + 1):
    A, B, K = [int(x) for x in f.readline().strip().split()]
    result = "Case #{0}: {1}".format(t, sum(1 for x in xrange(A, B + 1) if primacity_cache[x] == K))
    out.write(result + "\n")
    print result

out.close()

print time.clock() - start_time, "seconds"

