#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>
using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef vector<int> VI;

#define clr(a,b)    (memset(a,b,sizeof(a)))
#define PB push_back
#define MP make_pair
#define rep(i,a)    for(int i=0; i<(int)a.size(); i++)

const int INF = 0x3f3f3f3f;
const double eps = 1E-8;

int T;
int a, b, k;


const int MAX = 1E7;
bool isprm[MAX+10];
int prm[MAX+10],fac[MAX+10];

int minfac(int n)
{
    fac[1] = 1;
    clr(isprm, true);
    int cnt = 0;
    for(int i=2; i<=n; i++)
    {
        if(isprm[i])    prm[++cnt] = fac[i] = i;
        for(int j=1; j<=cnt && (LL)i*prm[j]<=n; j++)
        {
            isprm[ i*prm[j] ] = false;
            fac[ i*prm[j] ] = prm[j];
            if(i % prm[j] == 0)  break;
        }
    }
    return cnt;
}

int ans[11][MAX + 10], s[11][MAX + 10];

int main()
{
    freopen("homework.txt","r", stdin);
    freopen("out","w",stdout);
    int cas = 1;
    scanf("%d",&T);

    minfac(MAX);
    clr(ans, 0);
    clr(s, 0);

    for(int i=2; i<=MAX; i++)
    {
    	int cnt = 0;
    	int cur = i;
    	int p = fac[cur];

    	while(p != 1)
    	{
			cnt++;
			while(cur % p == 0)
				cur /= p;

			p = fac[cur];
    	}
    	ans[cnt][i]++;
    }

	for(int i=1; i<=10; i++)
	{
		for(int j=2; j<=MAX; j++)
			s[i][j] = s[i][j-1] + ans[i][j];
	}

    while(T--)
    {
    	scanf("%d%d%d",&a,&b,&k);

		if(k > 10)
			printf("Case #%d: 0\n",cas++);
		else
		{
			int res = s[k][b] - s[k][a - 1];
			printf("Case #%d: %d\n",cas++, res);
		}
    }
    return 0;
}
