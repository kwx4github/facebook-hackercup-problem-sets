#include <iostream>
#include <string>
#include <algorithm>
#include <map>
#include <utility>
#include <climits>
#include <stack>
#include <cstdio>
#include <cstring>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <cassert>

#define fr(i,f,t) for(int i = f; i < t; i++)
#define rfr(i,f,t) for(int i = f; i > t; i--)

#define pb push_back
#define mp make_pair

using namespace std;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<int> vi;

const int M = 10000001;
int pc[M];
vi lpc[9];
void pre()
{
	memset(pc, 0, sizeof(pc));

	pc[1] = -1;
	pc[2] = 0;

	fr(i, 2, M)
	{
		if(pc[i] == 0)
		{
			pc[i] = 1;
			int j = 2;
			while(j*i < M)
			{
				pc[i*j]++;
				j++;
			}
		}
	}

	// int kmx = 0;
	// fr(i,2,M)
	// {
	// 	kmx = max(kmx, pc[i]);
	// }

	// cout<<kmx<<endl;

	
	lpc[0].pb(1);

	fr(i,2,M)
	{
		lpc[pc[i]].pb(i);
	}

	// fr(i,1,9)
	// {
	// 	fr(j,0,10)
	// 		cout<<lpc[i][j]<<" ";
	// 	cout<<endl;
	// }
	// cout<<endl;
}

void solve(int t)
{

	int a,b,k, ans;

	cin>>a>>b>>k;
	if(k <= 8)
	{
		ans = upper_bound(lpc[k].begin(), lpc[k].end(), b) - lower_bound(lpc[k].begin(), lpc[k].end(), a);
	}
	else
		ans = 0;
	cout<<"Case #"<<t<<": ";
	cout<<ans<<endl;
}
 
int main()
{
	pre();
	int t;
	cin>>t;
	fr(i,1,t+1)
		solve(i);
	
	
	return 0;
 
}  

