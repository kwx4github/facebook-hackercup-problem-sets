#include "bits/stdc++.h"

#define maxd 25
using namespace std;

typedef long long ll;

const int maxn = 1e7 + 5;
const int upto = sqrt( maxn );

vector < int > v[ maxd ];
vector < int > prime;
bitset < maxn > bit;

void sieve()
{
  bit.set();
  for( int i = 2; i < upto; i++ )
    if( bit[ i ] )
    {
      for( int j = i * i; j < upto; j += i )
        bit[ j ] = false;
      prime.push_back( i );
    }
}

void build()
{
  for( int i = 0; i < maxd; i++ )
    v[ i ].push_back( 0 );
  
  for( int i = 2; i < maxn; i++ )
  {
    int k = 0, t = i;
    for( int p : prime )
    {
      if( t % p == 0 )
        k++;
      while( t % p == 0 )
        t /= p;
    }
    
    if( t != 1 )  k++;
    
    v[ k ].push_back( i );
  }
}
  
int bs( int k, int x )
{
  int l = 0, r = v[ k ].size() - 1;
  while( l < r )
  {
    int m = ( l + r + 1 ) >> 1;
    
    if( v[ k ][ m ] <= x )
      l = m;
    else
      r = m - 1;
  }
  
  return l;
}

int main()
{
  int test;
  cin >> test;
  sieve();
  build();
  
  for( int t = 1; t <= test; t++ )
  {
    int a, b, k;
    cin >> a >> b >> k;
    int ans = bs( k, b ) - bs( k, a - 1 );
    printf( "Case #%d: %d\n", t, ans );
  }
  
  return 0;
}
