package com.facebook.hackercup2015.round1;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Homework {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    PrintWriter writer = new PrintWriter(System.out);

    Homework() throws IOException {
        reader = new BufferedReader(new FileReader("input.txt"));
        writer = new PrintWriter(new FileWriter("output.txt"));
    }

    StringTokenizer stringTokenizer;

    String next() throws IOException {
        while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {
            stringTokenizer = new StringTokenizer(reader.readLine());
        }
        return stringTokenizer.nextToken();
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    void solve() throws IOException {
        int t = nextInt();
        for(int i = 1; i <= t; i++) {
            solve(i);
        }
        writer.close();
    }

    int[] primacity;

    private void solve(int testNumber) throws IOException {
        writer.printf("Case #%d: ", testNumber);
        if(primacity == null) {
            primacity = new int[10 * 1000 * 1000 + 1];
            for(int i = 2; i < primacity.length; i++) {
                if(primacity[i] == 0) {
                    for(int j = i; j < primacity.length; j += i) {
                        primacity[j]++;
                    }
                }
            }
        }
        int a = nextInt();
        int b = nextInt();
        int k = nextInt();
        int answer = 0;
        for(int i = a; i <= b; i++) {
            if(primacity[i] == k) {
                answer++;
            }
        }
        writer.println(answer);
    }

    public static void main(String[] args) throws IOException {
        new Homework().solve();
    }
}
