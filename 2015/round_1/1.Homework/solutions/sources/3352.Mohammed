/*
 muhammad magdi
 acm.magdi@gmail.com
 */
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#define all(v)          v.begin(),v.end()
#define allr(v)         v.rbegin(),v.rend()
#define rep(i, m)        for(int i=0;i<(int)m;i++)
#define REP(i, k, m)      for(int i=k;i<(int)m;i++)
#define mem(a, b)        memset(a,b,sizeof(a))
#define mp              make_pair
#define pb              push_back
#define X real()
#define Y imag()

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pair<int, int> > vpii;
typedef complex<long double> point;

int diri[] = {-1, 0, 1, 0, -1, 1, 1, -1};
int dirj[] = {0, 1, 0, -1, 1, 1, -1, -1};

int compare(double d1, double d2) {
    if (fabs(d1 - d2) < 1e-9)
        return 0;
    if (d1 < d2)
        return -1;
    return 1;
}

#define OO ((int)1e9)
#define MAX 100001
#define MOD 1000000009

bool prime[10000001];
vector<int> v;
void seive(int mx)
{
    memset(prime , 1 , sizeof(prime));
    prime[0] = prime[1] = 0;
    for(int i = 2 ; i*i <= mx; i ++)
        if(prime[i])
            for(int k = i+i ; k <= mx ; k+=i)
                prime[k] = 0;
    for(int i = 0 ; i <= mx ; i ++)if(prime[i])v.pb(i);
}

int factorize(int n) {
    vector<pair<int, int> > result;
    result.clear();
    int i, d = 1;
    for (i = 2; i * i <= n; i += d, d = 2) {
        if (n % i == 0)
            result.push_back(make_pair(i, 0));
        while (n % i == 0) {
            n /= i;
            result.back().second++;
        }
    }
    if (n != 1)
        result.push_back(make_pair(n, 1));
    return result.size();
} // worst square root(n)


int main() {
//    std::ios_base::sync_with_stdio(false);
#ifndef ONLINE_JUDGE
    freopen("/Users/magdi/ClionProjects/codeforces/1.in", "r", stdin);
//    freopen("A.in", "r", stdin);
    freopen("/Users/magdi/ClionProjects/codeforces/A1.out", "w", stdout);
#endif
    vector<int> res(20);
    map<int,vector<int> > resForInt;
    set<int> wantedNumbers ;
    vector<pair<pair<int,int> , int > > cases ;
    int  t , a , b , c;
    cin >> t ;
    for(int tt = 0 ; tt < t ; tt++){
        cin >> a >> b >> c ;
        a--;
        cases.pb(mp(mp(a,b),c));
        wantedNumbers.insert(a);
        wantedNumbers.insert(b);
    }

    const clock_t begin_time = clock();
    for(int i = 1 ; i <= 10000000 ; i++){
        res[factorize(i)]++;
        if(wantedNumbers.count(i)) {
            resForInt[i] = res;
        }

    }
    cerr << float( clock () - begin_time ) /  CLOCKS_PER_SEC;

    for(int i = 0 ; i < cases.size() ; i++){
        int ans = 0 ;
        if(cases[i].second >= 20){
            ans = 0 ;
        }else {
            int ind = cases[i].second ;
            int a = cases[i].first.first ;
            int b = cases[i].first.second ;
            ans = resForInt[b][ind] - resForInt[a][ind];
        }
        printf("Case %d: %d\n",i+1 , ans);
    }
    return 0;
}
//end