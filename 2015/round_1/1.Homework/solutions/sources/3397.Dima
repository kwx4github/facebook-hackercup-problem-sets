def sieve():
    "Return all primes <= n."
    n = 10**7 + 10000
    np1 = n + 1
    s = list(range(np1)) 
    s[1] = 0
    sqrtn = int(round(n**0.5))
    for i in range(2, sqrtn + 1): 
        if s[i]:
            s[i*i: np1: i] = [0] * len(range(i*i, np1, i))
    t = []
    for i in s:
        if i != 0:
            t.append(i)
    return t

def primality_precount():
    n = 11000001
    p = [0]*n
    for i in t:
        j = i
        while j < n:
            p[j] += 1
            j += i
    return p 

t = sieve()
p = primality_precount() 

T = int(input())

for i in range(T):
    a, b, k = [int(x) for x in input().split()]
    q = p[a : b + 1].count(k)
    print("Case #" + str(i + 1) + ": "  + str(q))