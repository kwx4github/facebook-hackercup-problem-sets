uses math;
const fi=''; fo=''; maxn=10000000;
var a:array[1..maxn]of boolean;
    b:array[1..maxn]of longint;
    f:array[0..8,0..maxn]of longint;
    n:longint;
function divide(x:longint):longint;
var i,res,t:longint;
begin
	res:=0; t:=round(sqrt(n))+1;
    for i:=1 to n do
    if x=1 then exit(res)
    else if not a[x] then
    begin
    	if x mod b[i]=0 then inc(res);
        while x mod b[i]=0 do x:=x div b[i];
        if b[i]>t then exit(res);
    end else exit(res+1);
end;
procedure process;
var fin,fout:text;
	i,j,k,t,test:longint;
begin
	assign(fin,fi); reset(fin); assign(fout,fo); rewrite(fout);
    a[1]:=false;
    for i:=2 to maxn do a[i]:=true;
    for i:=2 to maxn div 2 do
    if a[i] then
    begin
    	for j:=2 to maxn div i do a[i*j]:=false;
    end;
    n:=0;
	for i:=1 to maxn do if a[i] then
    begin
    	inc(n); b[n]:=i;
    end;
    for i:=1 to maxn do
    begin
		k:=divide(i);
    	for j:=0 to 8 do if j<>k then f[j,i]:=f[j,i-1];
        f[k,i]:=f[k,i-1]+1;	
    end;
    readln(fin,t);
    for test:=1 to t do
    begin
    	readln(fin,i,j,k);
        if k>8 then writeln(fout,'Case #',test,': 0')
        else writeln(fout,'Case #',test,': ',f[k,j]-f[k,i-1]);
    end;
    close(fin); close(fout);
end;
begin
	process;
end.

