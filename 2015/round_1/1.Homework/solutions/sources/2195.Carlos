import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Scanner;


public class Solution {
	
	//This is the precomputed table up to the square root of the limit( sqrt(10^7) < 3200):
	
	public static int[] Eratos(){
		
		int N = 10000000;
		int[] table = new int[N+1];
		
		for(int i = 2;i<N+1;i++){
			
			if (table[i] == 0) {
				
                for (int j = i; j < N+1; j += i){
                	table[j]++; //Marking the divisible numbers;
                }
            }
		}
		
		return table;
	}
	
	//This is the class that resolves the call:
	public static int resolve(int[] table, int A, int B, int K){

		int count = 0;
		
		for(int i = A; i<= B; i++){
			if(table[i] == K) 
				count++;
		}
		
		return count;
	}
	

	public static void main(String[] args) throws FileNotFoundException {
		//Input header:
		FileInputStream inputFile = new FileInputStream("src/homework.txt");
		PrintStream outputFile = new PrintStream(new FileOutputStream("src/output.txt"));
		System.setIn(inputFile);
		System.setOut(outputFile);
		Scanner input = new Scanner(System.in);
		
		int[] table = Eratos(); //Making the sieve;
		
		//Getting the input:
		int T = input.nextInt();
		for(int i = 0;i<T;i++){
			
			int A = input.nextInt();
			int B = input.nextInt();
			int K = input.nextInt();
			
			System.out.println("Case #" +(i+1)+": "+resolve(table,A,B,K));
		}
		
		input.close();
	}

}
