// Author: Harhro94 [Harutyunyan Hrayr]
#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define FOR(i, n) for (int i = 0; i < (n); ++i)
typedef pair<int, int> pii;
typedef long long LL;
typedef long double LD;
#define pb push_back
#define mp make_pair
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

const int N = 10000007;

int cnt, lp[N], pr[N], dp[N];

void sieve() {
   for (int i = 2; i < N; ++i) {
      if (lp[i] == 0) {
         lp[i] = i;
         pr[cnt++] = i;
      }
      for (int j = 0; j < cnt && pr[j] <= lp[i] && (LL)pr[j] * i < N; ++j) {
         lp[pr[j] * i] = pr[j];
      }
   }
}

void solve() {

   sieve();
   for (int i = 2; i < N; ++i) {
      int n = i;
      while (n > 1) {
         int p = lp[n];
         ++dp[i];
         while (n % p == 0) n /= p;
      }
   }

   int T;
   cin >> T;
   for (int test = 1; test <= T; ++test) {
      int a, b, k;
      cin >> a >> b >> k;
      int ans = 0;
      for (int i = a; i <= b; ++i) {
         if (dp[i] == k) ++ans;
      }
      cout << "Case #" << test << ": " << ans << endl;
   }
}

void testGen() {
   FILE *f = fopen("input.txt", "w");
   fclose(f);
}

int main() {
#ifdef harhro94
   //testGen();
   freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);
#else
#define task "game"
   //freopen(task".in", "r", stdin);
   //freopen(task".out", "w", stdout);
#endif

   cerr << fixed;
   cerr.precision(5);

   solve();

#ifdef harhro94
   cerr << fixed << setprecision(3) << "\nExecution time = " << clock() / 1000.0 << "s\n";
#endif
   return 0;
}