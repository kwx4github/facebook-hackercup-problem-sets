#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <cstdlib>
using namespace std;

const int MAX_N = 10000000;
vector<int> G[MAX_N+1];
int prime[MAX_N+1];
bool isPrime[MAX_N+1];
int T,A,B,K;

int sieve(){
    int p = 0;
    for(int i=0;i<=MAX_N;i++) isPrime[i] = true;
    isPrime[0] = isPrime[1] = false;
    for(int i=2;i<=MAX_N;i++){
        if( isPrime[i] ){
            prime[p++] = i;
            for(int j=i+i;j<=MAX_N;j+=i) isPrime[j] = false;
        }
    }
    return p;
}

void init(int p){
    for(int i=0;i<p;i++){
        for(int j=prime[i];j<=MAX_N;j+=prime[i]){
            G[j].push_back(prime[i]);
        }
    }
}

int main(){
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);
    int upb = sieve();
    //printf("upb=%d\n",upb);
    init(upb);
    //printf("********\n");
    scanf("%d",&T);
    for(int cases = 1; cases <= T; cases++){
        scanf("%d%d%d",&A,&B,&K);
        int len = min(B,MAX_N);
        int ans = 0;
        for(int i=A;i<=len;i++){
            if( G[i].size()==K ) ans++;
        }
        printf("Case #%d: %d\n",cases,ans);
    }
    return 0;
}
