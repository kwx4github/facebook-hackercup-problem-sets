import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.FilenameFilter;
import java.util.Locale;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.Writer;
import java.io.FileReader;
import java.io.IOException;
import java.io.FileOutputStream;
import java.io.File;
import java.util.StringTokenizer;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 * @author Agostinho Junior (junior94)
 */
public class Main {
	public static void main(String[] args) {
		Locale.setDefault(Locale.US);
		InputStream inputStream;
		try {
			final String regex = "homework.*[.]txt";
			File directory = new File(".");
			File[] candidates = directory.listFiles(new FilenameFilter() {
				public boolean accept(File dir, String name) {
					return name.matches(regex);
				}
			});
			File toRun = null;
			for (File candidate : candidates) {
				if (toRun == null || candidate.lastModified() > toRun.lastModified())
					toRun = candidate;
			}
			inputStream = new FileInputStream(toRun);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("homework.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		OutputWriter out = new OutputWriter(outputStream);
		Homework solver = new Homework();
		int testCount = Integer.parseInt(in.next());
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}
}

class Homework {

	private int[] primacity = new int[(int)1e7 + 1];

	public Homework() {
		for (int i = 2; i < primacity.length; i++) {
			if (primacity[i] == 0) {
				for (int j = i; j < primacity.length; j += i) {
					primacity[j]++;
				}
			}
		}
	}

	public void solve(int testNumber, InputReader in, OutputWriter out) {
		int a = in.readInt();
		int b = in.readInt();
		int k = in.readInt();
		int res = 0;
		while (a <= b) {
			if (primacity[a++] == k) {
				res++;
			}
		}
		out.printfln("Case #%d: %d", testNumber, res);
	}

}

class InputReader {
    private BufferedReader input;
    private StringTokenizer line = new StringTokenizer("");

	public InputReader(InputStream in) {
        input = new BufferedReader(new InputStreamReader(in));
    }

	public void fill() {
        try {
            if(!line.hasMoreTokens()) line = new StringTokenizer(input.readLine());
        } catch(IOException io) { io.printStackTrace(); System.exit(0);}
    }
    public String next() {
        fill();
        return line.nextToken();
    }

	public int readInt() {
        fill();
        return Integer.parseInt(line.nextToken());
    }
}

class OutputWriter {
    private PrintWriter output;

	public OutputWriter(OutputStream out) {
        output = new PrintWriter(out);
    }

	public void printfln(String format, Object... o) {
        output.printf(format + "\n", o);
    }

	public void close() {
        output.close();
    }
}

