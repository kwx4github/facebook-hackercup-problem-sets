#include <cstdio>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

const int MAXP = 3162;
const int MAXN = 10000000;

vector<int> prime;

bool used[MAXP];
int con[MAXN + 1];

int ret[9][MAXN + 2];

void createPrime() {
    for (long long i = 2; i < MAXP; i++) {
        if (used[i]) continue;

        prime.push_back(i);
        for (long long j = i * i; j < MAXP; j += i) {
            used[j] = true;
        }
    }
}

void createTable() {
    int maxv = 0;
    for (int i = 1; i <= MAXN; i++) {
        int t = i;
        for (int j = 0; j < (int)prime.size() && t; j++) {
            if (t % prime[j] == 0) con[i]++;
            while (t % prime[j] == 0) t /= prime[j];
        }
        maxv = max(maxv, con[i]);
    }

    for (int i = 1; i <= 8; i++) {
        for (int j = 1; j <= MAXN; j++) {
            ret[i][j + 1] = ret[i][j] + (con[j] == i);
        }
    }
}

int main() {
    createPrime();
    createTable();

    int T, a, b, k;
    scanf("%d", &T);

    for (int times = 0; times < T; times++) {
        scanf("%d%d%d", &a, &b, &k);
        if (k > 8) printf("Case #%d: %d\n", times + 1, 0);
        else printf("Case #%d: %d\n", times + 1, ret[k][b + 1] - ret[k][a]);
    }
}
