def read_int(fin):
    return int(fin.readline()[:-1])

def read_ss_ints(fin):
    return [int(i) for i in fin.readline()[:-1].split()]

def is_prime(i, primes):
    for prime in primes:
        if not (i == prime or i % prime):
            return False
    primes.add(i)

    return i

def calc_primes(n):
    primacity = [0] * (n + 1)
    i = 2
    while i <= n:
        if primacity[i] == 0:
            t = i
            while t <= n:
                primacity[t] += 1
                t += i
        i += 1
    return primacity

def primes(input_file, output_file):
    fin = open(input_file, 'r')
    fout = open(output_file, 'w')

    primes = []

    num_lines = read_int(fin)
    all_reqs = []
    max_num = 0
    for line in range(num_lines):	
        read = read_ss_ints(fin)
        max_num = max(max_num, read[1])
        all_reqs.append(read)

    primacity = calc_primes(max_num)

    for line_no, req in enumerate(all_reqs):
        (lower, upper, k) = req

        result = 0
        for i in range(lower, upper + 1):
            if primacity[i] == k:
                result += 1

        fout.write("Case #")
        fout.write(str(line_no + 1)) 
        fout.write(": ")
        fout.write(str(result))
        fout.write('\n')


primes("primes_input_final.txt", "primes_output_final.txt")