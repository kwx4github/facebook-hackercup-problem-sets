#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <vector>
#include <algorithm>
#include <set>
#include <queue>
#include <map>
#include <climits>
using namespace std;

#define REP(i,n) for(int i=0; i<(int)(n); i++)
#define RREP(i,n) for(int i=(int)n-1; i>=0; i--)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define RFOR(i,c) for(__typeof((c).rbegin())i=(c).rbegin();i!=(c).rend();++i)
#define ALL(c) (c).begin(), (c).end()

typedef long long int ll;
typedef pair<int, int> pii;
typedef pair<int, pair<int, int> > pipii;
typedef vector<int> vi;

const int INF = 1e9;
const int MOD = 1e9+7;

int primacity[10001000];

int main(void){
    int l = 2;
    while(l < 10000010){
        while(l < 10000010 && primacity[l]) l++;
        primacity[l] = 1;
        for(int k = 2; (ll)k * l < 10000010; k++){
           primacity[l * k] = primacity[k];
           if(k % l) primacity[l * k]++;
        }
    }

    /*
     for(int i = 2; i < 110; i++){
       int k = 0;
       int r = i;
       for(int j = 2; j < 1010; j++){
            if((r % j)) continue;
            while((r % j) == 0) r /= j;
            k++;
       }
       cout << i << ":" << k << endl;
       if(r != 1) primacity[i] = k + 1;
       else primacity[i] = k;
    }
    */

    int T;
    cin >> T;
    for(int tt = 1; tt <= T; tt++){
        int a, b, k;
        cin >> a >> b >> k;
        int ans = 0;
        for(int i = a; i <= b; i++){
            if(primacity[i] == k) ans++;
        }
        printf("Case #%d: %d\n", tt, ans);
    }
	return 0;
}

