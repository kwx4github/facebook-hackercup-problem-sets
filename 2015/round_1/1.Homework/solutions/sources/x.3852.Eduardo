#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <algorithm>
#include <limits>
#include <vector>
#include <queue>
#include <utility>
#include <set>
#include <map>
#include <bitset>
#include <iostream>
#include <ctype.h>

#define gc getchar  //unlocked linux
#define MOD 1000000007
#define INF numeric_limits<int>::max();
#define FOR(i,v,n) for(i=v;i<n;i++)
#define scan(i) scanf(" %d",&i)
#define scan2(i,j) scanf(" %d %d",&i,&j)
#define scan3(i,j,k) scanf(" %d %d %d",&i,&j,&k)
#define print(i) printf("%d\n",i);
#define pb push_back
#define sz(i) i.size()
#define reset(vec) memset(vec,0,sizeof(vec))
#define ord(vec) sort(vec.begin(),vec.end())
#define rev(vec) reverse(vec.begin(),vec.end())
#define MAX 35

using namespace std;

inline void scanint(int &x){
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int cmp_double(double a, double b, double eps = 1e-9){
    return a + eps > b ? b + eps > a ? 0 : 1 : -1;  //0 = iguais, 1 = a maior
}

int dp[10000010];
bool primo[10000010];

void sieve(int n){
    for (int i = 0; i<=n; i++) primo[i] = 1;
    primo[0] = 0;
    primo[1] = 0;
    primo[2] = 1;
    int bound = sqrt(n) + 1;
    for (int i = 2; i<=bound; i++) {
        if (primo[i]){
            dp[i] = 1;
            for (int j = i+i; j <= n; j += i) {
                primo[j] = 0;
                dp[j]++;
            }
        }
    }
}

int main(){
    int t, caso = 1;
    cin >> t;
    for (int i = 0; i <= 10000001; i++) dp[i] = 0;
    dp[0] = 0;
    dp[1] = 0;
    dp[2] = 1;
    sieve(10000001);
    while(t--){
        int A, B, K;
        cin >> A >> B >> K;
        int ans = 0;
        for (int i = A; i <= B; i++) if (dp[i]==K) ans++;
        printf("Case #%d: %d\n", caso++, ans);
    }
    return 0;
}




