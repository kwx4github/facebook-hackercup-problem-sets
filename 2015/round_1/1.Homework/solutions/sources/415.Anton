#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <string>
#include <algorithm>
#include <memory.h>

using namespace std;

#define forn(i, n) for(int i = 0; i < (n); ++i)
#define forv(i, a) forn(i, (int)a.size())

vector<int> nums[11]; 

int getPrimacity(int num) {
    int res = 0;
    for (int i = 2; i * i <= num; ++i) {
        if (num % i == 0) {
            ++res;
            while (num%i == 0) {
                num /= i;
            }
        }
    }

    if (num != 1) {
        ++res;
    }

    return res;
}

void init() {
    for (int i = 2; i <= 1000 * 1000 * 10; ++i) {
        int k = getPrimacity(i);
        nums[k].push_back(i);
    }
}

int solve(int from, int to, int k) {
    vector<int> & cur = nums[k];
    
    int b = lower_bound(cur.begin(), cur.end(), from) - cur.begin();
    int e = upper_bound(cur.begin(), cur.end(), to) - cur.begin();

    return e - b;
}

int main() {
#ifdef __ASD__
	//freopen("input.txt", "rt", stdin);
	//freopen("output.txt", "wt", stdout);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    init();
    
    int T;
    cin >> T;

    for (int tc = 0; tc < T; ++tc) {
        int a, b, k;
        cin >> a >> b >> k;

        int res = solve(a, b, k);
        cout << "Case #" << tc + 1 << ": " << res << endl;
    }

	return 0;
}