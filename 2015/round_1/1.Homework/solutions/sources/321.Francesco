#include <iostream>
#include <cassert>
using namespace std;

int primality[10000001];
int isp[10000001][8];
int a, b, k;

int solve(){
	cin >> a >> b >> k;
	k--;
	if(k >= 8) return 0;
	return isp[b][k] - isp[a-1][k];
}

int main(){
	for(int i=2; i<=1e7; i++) if(!primality[i]){
		for(int j=i; j<=1e7; j+=i) primality[j]++;
	}
	for(int i=2; i<=1e7; i++){
		for(int x=0; x<8; x++) isp[i][x] = isp[i-1][x];
		assert(primality[i] <= 8);
		isp[i][primality[i]-1]++;
	}
	
	int t;
	cin >> t;
	for(int i=1; i<=t; i++){
		cout << "Case #" << i << ": " << solve() << '\n';
	}
	return 0;
}
