#include<bits/stdc++.h>
using namespace std;
const int N = 10000001;
int lp[N+1];
vector<int> prime;

void init(){
    int j, i;
    for (i=2; i<=N; ++i){
        if (lp[i] == 0){
            lp[i] = i;
            prime.push_back (i);
        }
        for (j=0; j<prime.size() && prime[j]<=lp[i] && i*prime[j]<=N; ++j)
            lp[i * prime[j]] = prime[j];
    }
}

int count(int n){
    int primality = 0;
    int c = 0;
    while (n!=1){
        int min = lp[n];
        if (min != c) ++primality, c = min;

        n/=min;
    }
    return primality;
}

int f(int a, int b, int c){
    int cnt = 0, i;
    for (i = a; i <= b; i++){
        if (count(i)==c){
            ++cnt;
        }
    }
    return cnt;
}

int main(){
    int a, b, k;
    //cout<<"ENTER A, B, K"<<endl;
    int t, i;
    cin>>t;
    for(i=1; i<=t; i++){
        init();
        cin>>a>>b>>k;
        cout<<"Case #"<<i<<": "<<f(a, b, k)<<endl;
    }
    return 0;
}
