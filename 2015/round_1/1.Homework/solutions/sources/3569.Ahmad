import java.io.*;
import java.util.*;


public class SolutionA {
	public void solve(){
		int MAX = 10000001;
		int[] ar = new int[MAX];
		for(int i = 2 ; i < MAX ; i++){
			if(ar[i] > 0) continue;
			for(int j = i ; j < MAX ; j+=i) ar[j]++;
		}
		int t = nextInt();
		for(int k = 0 ; k < t ; k++){
			int A = nextInt(), B = nextInt(), K = nextInt(), sum = 0;
			for(int i = A ; i <= B ; i++) if(ar[i] == K) sum++;
			out.println("Case #"+(k+1)+": "+sum);
		}
	}
	public void run(){
		try {
			bf = new BufferedReader(new InputStreamReader(new FileInputStream("A.txt")));
			out = new PrintWriter(new File("out.txt")); 
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		solve();
		out.close();
	}
	public static void main(String args[]){
		new SolutionA().run();
	}
	BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	PrintWriter out = new PrintWriter(System.out);
	String line;
	StringTokenizer st;
	public String nextLine(){
		try {
			line = bf.readLine();
			st = new StringTokenizer(line);
		} catch (IOException e) {
			return null;
		}
		return line;
	}
	public String nextString(){
		while (st == null || !st.hasMoreElements()) {
            try {
                line = bf.readLine();
                st = new StringTokenizer(line);
            } catch (IOException e) {
                return null;
            }
        }
        return st.nextToken();
	}
	public int nextInt(){
		return Integer.parseInt(nextString());
	}
	public long nextLong(){
		return Long.parseLong(nextString());
	}
	public double nextDouble(){
		return Double.parseDouble(nextString());
	}
}
