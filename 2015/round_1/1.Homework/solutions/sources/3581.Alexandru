import math

T = input()
questions = []
B = 2
for idx in xrange(T):
    questions.append(map(int, raw_input().split()))
    if questions[idx][1] > B:
        B = questions[idx][1]

end = B / 2 + 1

eratostene = [True] * (B + 1)
for p in xrange(4, B + 1, 2):
    eratostene[p] = False

for p in xrange(3, end, 2):
    for n in xrange(p ** 2, B + 1, p):
        eratostene[n] = False
primelist = [2]

for p in xrange(3, end, 2):
    if eratostene[p]:
        primelist.append(p)

for idx in xrange(T):
    [A, B, K] = questions[idx]
    has_primacity_of_k = 0
    for n in xrange(A, B + 1):
        aux = n
        k = 0
        start = 0
        while aux > 1:
            if eratostene[aux]:
                k += 1
                break
            if aux % primelist[start] == 0:
                k += 1
                while aux % primelist[start] == 0:
                    aux = aux / primelist[start]
            start += 1

        if k == K:
            has_primacity_of_k += 1

    print "Case #%s: %s" % (idx + 1, has_primacity_of_k)

