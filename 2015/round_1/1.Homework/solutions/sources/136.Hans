/* gcc version 4.9.2 20141224
 * g++ -Wall -Wextra -Wconversion -std=c++11 -g
 */
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for(__typeof__((c).begin()) i=(c).begin(); i!=(c).end(); i++)
#define mp make_pair
#define pb push_back
#define has(c,i) ((c).find(i) != (c).end())
#define DBG(...) ({ if(1) fprintf(stderr, __VA_ARGS__); })
#define DBGDO(X) ({ if(1) cerr << "DBGDO: " << (#X) << " = " << (X) << endl; })

int TC;
const int maxP = 1e7 + 1e4;

int prim[maxP];

int main() {
	ios::sync_with_stdio(false);

	FOR(p,2,maxP) {
		if (prim[p] > 0) continue;
		for (int x = p; x < maxP; x += p)
			prim[x]++;
	}

	map<int,vi> cnt;

	FOR(p,0,maxP)
		cnt[prim[p]].pb(p);


	cin >> TC;
	FOR(tc, 1, TC+1) {
		int A, B, K;
		cin >> A >> B >> K;
		int result = 0;
		if (has(cnt, K)) {
			int a = int(lower_bound(all(cnt[K]), A) - cnt[K].begin());
			int b = int(lower_bound(all(cnt[K]), B+1) - cnt[K].begin());
			result = b - a;
		}
		printf("Case #%d: %d\n", tc, result);
	}
}
