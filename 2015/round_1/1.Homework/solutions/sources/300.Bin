/* ***********************************************
Author        :kuangbin
Created Time  :2015/1/18 9:21:46
File Name     :hackercup_R1\A.cpp
************************************************ */

#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <math.h>
#include <stdlib.h>
#include <time.h>
using namespace std;

const int MAXN = 10000000;
int prime[MAXN+1];
int leastprime[MAXN+1];
void getPrime(){
	memset(prime,0,sizeof(prime));
	for(int i = 2;i <= MAXN;i++){
		if(!prime[i]){
			prime[++prime[0]] = i;
			leastprime[i] = i;
		}
		for(int j = 1;j <= prime[0] && prime[j] <= MAXN/i;j++){
			prime[i*prime[j]] = 1;
			leastprime[i*prime[j]] = prime[j];
			if(i%prime[j] == 0)break;
		}
	}
}
vector<int>vec[25];
int num[MAXN+1];

int main()
{
    freopen("homework.txt","r",stdin);
    freopen("A.txt","w",stdout);
    getPrime();
	num[1] = 0;
	for(int i = 2;i <= MAXN;i++){
		int tmp = i;
		while(tmp%leastprime[i] == 0)
			tmp /= leastprime[i];
		num[i] = num[tmp]+1;
		vec[num[i]].push_back(i);
	}
	int T;
	int A,B,K;
	scanf("%d",&T);
	int iCase = 0;
	while(T--){
		iCase++;
		scanf("%d%d%d",&A,&B,&K);
		if(K > 20){
			printf("Case #%d: 0\n",iCase);
			continue;
		}
		int ans = upper_bound(vec[K].begin(),vec[K].end(),B)
			- lower_bound(vec[K].begin(),vec[K].end(),A);
		printf("Case #%d: %d\n",iCase,ans);
	}
    return 0;
}
