<?php
ini_set('memory_limit', '2000M');
function findp($i){
  global $allp,$st;
  $n=0;
  $i0=$i;
  if ($i==1){ return 0; }
  if (isset($allp[$i])) return 1;
  if (isset($st[$i])) return $st[$i];
  $qr=floor(sqrt($i));
  foreach($allp as $k=>$v){
    if ($k>$qr) break;
    if ($i<$k) break;
    if ($i % $k == 0){
      while(($i % $k ==0)) $i=$i/$k;
      $n++;
      if ($i==1) break;
    }
  }
  if ($i==1) { return $st[$i0]=$n; }
  return $st[$i0]=($n+1);
}
function seenp($i){
  global $allp,$seen;
  if ($i==1){ return; }
  if (isset($seen[$i])) return;
  else $seen[$i]=1;
  $qr=floor(sqrt($i));
  $ak=array_keys($allp);
  foreach($ak as $v){
    if ($v>$qr) break;
    if ($i%$v==0){
      return;
    }
  }
  $allp[$i]=1;
}

if ($argc>1){
  $lines=file($argv[1]);
  $t=trim($lines[0]);
    $allp=array();
    for($x=1;$x<3200;$x++){
      seenp($x);
    }
    ksort($allp);
    $st=array();
  for($count=1;$count<=$t;$count++){
    $line=trim($lines[$count]);
    list($a,$b,$k)=explode(' ',$line);

    $x=0;
    if ($k<=500){
      for($i=$b;$i>=$a;$i--){
        $n=findp($i);
        if ($n==$k) $x++;
      }
    }

    echo "Case #".$count.": ".$x."\n";
  }
}
?>
