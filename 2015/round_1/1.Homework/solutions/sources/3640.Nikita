#include <iostream>
using namespace std;

int primes[446];
char cons[10000001];

void gen()
{
	memset(&cons, 1, 3163);
	cons[0] = cons[1] = 0;
	for (int i = 2; i * i < 3163; ++i)
		if (cons[i])
			for (int j = i * i; j < 3163; j += i)
				cons[j] = 0;
	int j = 0;
	for (int i = 0; i < 3163; ++i)
	{
		if (cons[i])
		{
			primes[j] = i;
			j++;
		}
	}
	int tmp;
	bool done = false;
	for (int i = 2; i < 10000001; ++i)
	{
		tmp = i;
		for (int j = 0; j < 446; ++j)
		{
			while (tmp % primes[j] == 0)
			{
				tmp /= primes[j];
			}
			if (tmp != i)
			{
				cons[i] = cons[tmp] + 1;
				done = true;
				break;
			}
		}
		if (!done)
		{
			cons[i] = 1;
		}
		else
			done = false;
	}
}

int solve(int A, int B, long long int K)
{
	int answer = 0;
	long long int k = 0;
	if (K > 8) return 0;
	for (int i = A; i <= B; ++i)
	{
		if (cons[i] == K) answer++;
	}
	return answer;
}

int main()
{
	gen();
	int T, A, B;
	long long int K;
	cin >> T;
	for (int i = 0; i < T; ++i)
	{
		cin >> A >> B >> K;
		cout << "Case #" << i + 1 << ": " << solve(A, B, K) << '\n';
	}
	return 0;
}