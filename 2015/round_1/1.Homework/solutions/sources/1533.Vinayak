#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

const int totalnum = 10000001;
int* primecounts;

int primacity(int num)
{
	if(primecounts[num] != 0)
		return primecounts[num];
	int a = num;
	vector<int> primes;
	while(a % 2 == 0)
		a /= 2;
	if(a < num)
		primes.push_back(2);
	for(int i = 3; i <= (sqrt(a) + 1); i+=2)
	{
		int b = a;
		while(a % i == 0)
			a /= i;
		if(b > a)
			primes.push_back(i);
	}
	if(a > 2)
		primes.push_back(a);
	primecounts[num] = primes.size();
	return primes.size();
}

int main()
{
	primecounts = new int[totalnum]();
	int t, ti = 1;
	cin >> t;
	while(ti <= t)
	{
		int a, b, k;
		cin >> a >> b >> k;
		int count = 0;
		
		for(int i = a; i <= b; i++)
		{
			if(primacity(i) == k)
				count++;
		}
		if(ti != 1)
			cout << endl;
		cout << "Case #" << ti << ": " << count;
		ti++;
	}
	delete []primecounts;
}