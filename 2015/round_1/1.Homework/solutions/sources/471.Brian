#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
int in(){int r=0,c;for(c=getchar_unlocked();c<=32;c=getchar_unlocked());if(c=='-') return -in();for(;c>32;r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());return r;}


#define MAXN 10010010

int acum[11][MAXN];
int cont[MAXN];
int prime[MAXN];

void criba(){
  memset(cont,0,sizeof cont);
  memset(acum,0,sizeof acum);
  
  
  for(int i=0;i<MAXN;i++){
    prime[i]=i;
  }
  for(int i=2;i<MAXN;i++){
    if(prime[i]==i){
      for(int j=i;j<MAXN;j+=i){
        prime[j]=i;
        cont[j]++;
      }
    }
  }
  
  
  //~ int mx = 0;
  int i,j;
  for(i=2;i<MAXN;i++){
    //~ if(cont[i]>mx){
      //~ cout << cont[i]<< ' ' << i<< endl;
      //~ mx = cont[i];
    //~ }
    if(cont[j] == 0) cout<<"Fail"<<endl;
    
    
    for(j=1;j<11;j++){
      acum[j][i] = acum[j][i-1];
    }
    acum[cont[i]][i]++;
    
  }
}






void solve(){
  int A = in();
  int B = in();
  int K = in();
  
  cout << acum[K][B] - acum[K][A-1] << endl;
}

int main(){
  
  criba();
  
  
  
  for(int i=0,T=in();i<T;i++){
      cout <<"Case #"<<i+1<<": ";
      solve();
    }
}
