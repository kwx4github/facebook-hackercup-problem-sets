#include <stdio.h>
#include <set>

std::set<int> primeArr[10000000];

void SetPrime()
{
	int halfNum = 0;
	int divisionNum = 0;
	
	for (int i = 2; i <= 10000000; i++)
	{
		if (i % 2 == 0)
		{
			primeArr[i - 1].insert(2);
			primeArr[i - 1].insert(primeArr[i / 2 - 1].begin(), primeArr[i / 2 - 1].end());
		}
		else
		{
			halfNum = sqrt(i) + 3;
			for (int j = 3; j <= halfNum; j += 2)
			{
				if (i % j == 0)
				{
					primeArr[i - 1].insert(primeArr[j - 1].begin(), primeArr[j - 1].end());
					primeArr[i - 1].insert(primeArr[i / j - 1].begin(), primeArr[i / j - 1].end());
				}
			}
		}

		if (primeArr[i - 1].size() == 0)
		{
			primeArr[i - 1].insert(i);
		}
	}
}

int main()
{
	int T;

	std::set<int> temSet;

	SetPrime();

	scanf_s("%d", &T);

	for (int testN = 1; testN <= T; testN++)
	{
		int result = 0;
		int A;
		int B;
		int K;

		scanf_s("%d%d%d", &A, &B, &K);

		for (int i = A; i <= B; i++)
		{
			if (primeArr[i - 1].size() == K)
			{
				result++;
			}
		}

		printf("Case #%d: %d\n", testN, result);
	}
}