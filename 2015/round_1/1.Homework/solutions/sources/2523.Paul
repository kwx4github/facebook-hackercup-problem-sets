#include <cstdio>
#include <cmath>
using namespace std;
const int N=10000100;
int prime[N];
int ptop;
bool isPrime[N];
int count[N][30];
int countK(int a){
	int res=0;
	for(int i=0;i<ptop;i++){
		if(a%prime[i]==0){
			res++;
			while(a%prime[i]==0)a/=prime[i];
		}
		if(prime[i]>a)break;
	}
	if(a>1)res++;
	return res;
}
int solve(int a,int b,int k){
	return count[b][k]-count[a-1][k];
}
void init(){
	for(int i=2;i<sqrt(N);i++){
		if(!isPrime[i]){
			prime[ptop++]=i;
			for(int j=i*2;j<N;j+=i){
				isPrime[j]=true;
			}
		}
	
	}
	for(int i=1;i<N;i++){
		int now = countK(i);
		//if(i%10000==0)printf("%d %d\n",i,now);
		for(int j=1;j<10;j++){
			count[i][j] = count[i-1][j];
		}
		count[i][now]++;
	}
	//for(int i=0;i<10;i++)printf("%d ",prime[i]);puts("");
}

int main(){
	init();	
	int T,idx=0;
	scanf("%d",&T);
	while((idx++) < T){
		int a,b,k;
		scanf("%d %d %d",&a,&b,&k);
		printf("Case #%d: %d\n",idx,solve(a,b,k));
	
	
	}

}
