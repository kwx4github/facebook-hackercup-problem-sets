#include <iostream>
#include <string>
#include <cmath>

using namespace std;

int calc(int n, int K){
	int p = 0;
	int limit = (int)sqrt(n);
	// int limit2 = (int)pow(n, 1.0/(K-p)) + 1;
	for (int i = 2; i <= limit; i++) {
	//	if (i > limit2) return -1;
		if (n%i == 0) {
			p++;
	//		if (p > K) return -1;
			do { n/=i; } while (n%i == 0);
			limit = (int)sqrt(n);
	//		limit2 = (int)pow(n, 1.0/(K-p)) + 1;
		}
	}
	if (n!=1) p++;
	return p;
}

#define SZ 10000002
int primacity[SZ] = {0}; // 10^7

int main() {
	int T;
	cin >> T;
	for (int t = 0; t < T; t++) {
		int A,B,K;
		cin >> A >> B >> K;

		int ans = 0;
		for (int n = A; n <= B; n++) {
			int c = primacity[n]; // calc(n,K);
			if (c == 0) c = primacity[n] = calc(n,K);
			if (c == K) ans++;
		}
		cout << "Case #" << (t+1) << ": " << ans << endl;
	}
	return 0;
}

