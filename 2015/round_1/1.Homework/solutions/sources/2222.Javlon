#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <stdio.h>
#include <math.h>
#include <set>

#define M 1000000000;
long long MAX = 10000000000;
using namespace std;
struct node{
    int number;
    vector<int> eq_i;
};
int main() {
    freopen("homework.txt", "r", stdin);
    freopen("homework_example_output.txt", "w", stdout);
    ios_base::sync_with_stdio(0);
    int m7 = 10000010;
    node x;
    x.number = 0;
    x.eq_i.resize(9, 0);
    vector<node> prime (m7, x);
    for (int i=2; i<= m7; ++i) {
        if (prime[i].number == 0)
            for (int j = i; j <= m7; j += i)
                prime[j].number++;
        prime[i].eq_i = prime[i-1].eq_i;
        prime[i].eq_i[prime[i].number]++;
    }
    int t, a, b, k;
    cin >> t;
    for(int i = 0; i < t; ++i){
        cin >> a >> b >> k;
        if(k <= 8) {
            cout << "Case #" << i + 1 << ":" << prime[b].eq_i[k] - prime[a - 1].eq_i[k] << "\n";
        }
        else{
            cout << "Case #" << i + 1 << ":" << 0 << "\n";
        }
    }


    return 0;
}