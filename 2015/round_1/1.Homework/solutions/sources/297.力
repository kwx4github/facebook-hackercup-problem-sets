
// default code for competitive programming
// c2251393 ver 3.141 {{{

// Includes
#include <bits/stdc++.h>

// Defines
#define NAME(x) #x
#define SZ(c) (int)(c).size()
#define ALL(c) (c).begin(), (c).end()
#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define REP(i, s, e) for(int i = (s); i <= (e); i++)
#define REPD(i, s, e) for(int i = (s); i >= (e); i--)
#define DEBUG 1
#define fst first
#define snd second
 
using namespace std;

// Typedefs
typedef double real;
typedef long long ll;
typedef pair<ll, int> pli;
typedef tuple<ll, int> tli;
typedef pair<int, int> pii;
typedef tuple<int, int> tii;
typedef unsigned long long ull;

// Some common const.
const double EPS = -1e8;
const double Pi = acos(-1);
 
// Equal for double
bool inline equ(double a, double b)
{return fabs(a - b) < EPS;}

// }}}
// start ~~QAQ~~

const int MAXN = 10000010;
const int UB   = 50;

bool npr[MAXN];
int cnt[MAXN];

vector<int> pos[UB];

inline void init()
{
  for(int i = 2; i < MAXN; i++)
  {
    if(npr[i]) continue ;
    cnt[i] = 1;
    for(int j = i+i; j < MAXN; j += i)
      cnt[j]++, npr[j] = 1;
  }
  for(int i = 2; i < MAXN; i++)
    pos[cnt[i]].push_back(i);
}

int main()
{
  init();
  int tc;
  scanf("%d", &tc);
  for(int _ = 1; _ <= tc; _++)
  {printf("Case #%d: ", _);
    int a, b, k;scanf("%d%d%d", &a, &b, &k);
    if(k >= UB) puts("0");
    else
    {
      int ans = upper_bound(ALL(pos[k]), b) - lower_bound(ALL(pos[k]), a);
      printf("%d\n", ans);
    }
  }
}
