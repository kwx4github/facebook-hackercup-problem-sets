#pragma comment(linker, "/STACK:16777216")
#include <iostream>
#include <climits>
#include <fstream>
#include <cstring>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <iomanip>
#include <cstdio>
#include <ctime>
#include <functional>
#include <iterator>
#include <complex>
#include <queue>
#include <cassert>
#include <sstream>
#include <cstdlib>

#define PROBLEM_ID ""

using namespace std;

double pi = acos((double) -1);
const int MOD = 1000000007;
const int INF = 2147483647;
const long long LLONG_INF = 9223372036854775807LL;

void fill_primacity(int k, vector<int>& primacity, vector<bool>& is_prime) {
    int counter = 0;

    is_prime[k] = true;
    for (int i = 2; i <= min(sqrt(k) + 1, (double)k / 2); i++) {
        if (k % i == 0)
            is_prime[k] = false;

        if (k % i == 0 && is_prime[i]) {
            counter++;
            counter += primacity[k / i];
            if ((k / i) % i == 0)
                counter--;
            break;
        }
    }

    if (counter == 0)
        counter++;

    primacity[k] = counter;
}

int main() {
    clock_t tStart = clock();
    //freopen(PROBLEM_ID".in", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //
    int maxn = 10000000 + 5;
    vector<int> primacity(maxn, -1);
    vector<bool> is_prime(maxn, true);
    for (int i = 2; i < maxn; i++) {
        fill_primacity(i, primacity, is_prime);
    }

    int tests;
    cin >> tests;
    for (int test = 1; test <= tests; test++) {
        int a, b, k;
        cin >> a >> b >> k;
        int answer = 0;
        for (int i = a; i <= b; i++) {
            if (primacity[i] == k) {
                answer++;
            }
        }

        cout << "Case #" << test << ": " << answer << endl;
    }
    //printf("Time taken: %.2fs\n", (double)(clock() - tStart)/CLOCKS_PER_SEC);
}
