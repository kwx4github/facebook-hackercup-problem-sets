#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <deque>
#include <cmath>
#include <ctime>
#include <stack>
#include <set>
#include <map>
#include <cassert>
#include <memory.h>

using namespace std;

#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()

typedef long long li;
typedef long double ld;
typedef vector<int> vi;
typedef pair <int, int> pi;

void solve();

void precalc();

#define FILENAME "souvenir"

int main() {
	string s = FILENAME;
#ifdef RIAD
	freopen("input", "r", stdin);
#ifndef DEBUG
	freopen("output", "w", stdout);
#endif
	//cout<<FILENAME<<endl;
	//assert (s != "change me please");
	clock_t start = clock();
#else
	//freopen(FILENAME ".in", "r", stdin);
	//freopen(FILENAME ".out", "w", stdout);
#endif
	cout.sync_with_stdio(0);
	cout.precision(20);
	cout << fixed;
	int t = 1;
	cin >> t;

	precalc();
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
#ifdef DEBUG
	cerr << "\n\n" << (clock() - start) / 1.0 / CLOCKS_PER_SEC << "\n\n\n";
#endif
	return 0;
}
const int MAXN = 10000000;
int cnt[MAXN + 1];
int lp[MAXN + 1];

void precalc() {

	
	vector<int> pr;

	for (int i = 2; i <= MAXN; ++i) {
		if (lp[i] == 0) {
			lp[i] = i;
			pr.push_back(i);
		}
		for (int j = 0; j < (int) pr.size() && pr[j] <= lp[i] && i * pr[j] <= MAXN; ++j)
			lp[i * pr[j]] = pr[j];
	}
	
	for(int i = 2; i <= MAXN; ++i) {
		cnt[i] = cnt[i / lp[i]];
		if(lp[i] != lp[i / lp[i]])
			++cnt[i];
	}
}

void solve() {
	int a, b, k;
	cin >> a >> b >> k;
	int ans = 0;
	for(int i = a; i <= b; ++i) {
		if(cnt[i] == k) {
			//cout << i << endl;
			++ans;
		}
	}
	cout << ans << endl;
}