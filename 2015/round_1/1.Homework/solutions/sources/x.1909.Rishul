/*Author: Rishul Aggarwal*/

#include<bits/stdc++.h>

#define mod 1000000007
#define ll long long
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define in(type,x) scanf("%" #type,&x)
#define debug(args...) {dbg,args; cerr<<endl;}
#define test int t;\
in(d,t);\
while(t--)

using namespace std;

struct debugger
{template<typename T> debugger& operator,(const T& v)
{cerr<< v <<" ";
return *this;
}
}dbg;

ll gcd(ll a,ll b) {if(b==0) return a; return gcd(b,a%b);}

ll power(ll b,ll exp,ll m) {ll ans=1; b%=m; while(exp){if(exp&1) ans=(ans*b)%m; exp>>=1; b=(b*b)%m; } return ans; }

bool prime[10000002];
int p[10000002];
vector<int>s[10];
int ma=-1,x;

void sieve()
{
	for(int i=2;i*i<=10000000;i++)
	{
	 if(prime[i]==0)
	 {
	  p[i]=1;
	  for(int j=2;j*i<=10000000;j++)
	   prime[i*j]=1,p[i*j]++;
	 }
	}
	
	
	for(int i=2;i<=10000000;i++)
	 s[p[i]].push_back(i);
	
	//for(int i=1;i<=8;i++)
	 //{for(int j=0;j<5 && j<s[i].size();j++) cout<<s[i][j]<<" "; cout<<endl;} 
}

int main()
{sieve();
 freopen("input.txt","r",stdin);
 freopen("output.txt","w",stdout);
 int cas=1;
  test
  {
  	int a,b,k;
  	cin>>a>>b>>k;
  	cout<<"Case #"<<cas<<": ";
  	cas++;
  	if(k>8) {cout<<"0\n"; continue;} 
  	int ans=0;
  	vector<int>::iterator it1,it2;
  	it1=lower_bound(s[k].begin(),s[k].end(),a);
  	it2=lower_bound(s[k].begin(),s[k].end(),b);
  	//debug(*it1,*it2);
  	for(vector<int>::iterator it=it1;it<=it2 && it!=s[k].end();it++)
  	 if(*it>=a && *it<=b)
  	  ans++;
  	cout<<ans<<endl;  
  }

  return 0;
}

