package r1;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;

public class pr01 {

	final static int limit = 10_000_000;
	final static int limit2 = 1000_000_000;
	static int[] sieve;

	public static void main(String[] args) throws IOException {
		generatePrimalities(limit);
		BufferedReader reader = new BufferedReader(new FileReader(
				"r1/homework.txt"));
		int t = Integer.parseInt(reader.readLine());
		PrintWriter writer = new PrintWriter(new FileWriter("r1/p1_output.txt"));
		for (int i = 0; i < t; i++) {
			int[] ns = readInt(reader.readLine());

			int A = ns[0];
			int B = ns[1];
			int K = ns[2];

			long n = 0;

			for (int j = A; j <= B; j++) {
				if (sieve[j] == K) {
					n++;
				}
			}
			
			writer.printf("Case #%d: %d\n", i + 1, n);
		}
		reader.close();
		writer.close();
	}

	public static void generatePrimalities(int limit) {
		sieve = new int[limit + 1];
		Arrays.fill(sieve, 0);

		int pr = 2;
		while (pr <= limit) {
			for (int i = pr; i < (limit + 1); i += pr) {
				sieve[i]++;
			}

			int next = pr + 1;
			while (next < (limit + 1) && sieve[next] != 0) {
				++next;
			}
			pr = next;
		}
	}

	public static int[] readInt(String line) {
		String[] s = line.split(" ");
		int[] a = new int[s.length];

		for (int i = 0; i < s.length; i++) {
			a[i] = Integer.parseInt(s[i]);
		}
		return a;
	}

	public static double[] readDouble(String line) {
		String[] s = line.split(" ");
		double[] a = new double[s.length];

		for (int i = 0; i < s.length; i++) {
			a[i] = Double.parseDouble(s[i]);
		}
		return a;
	}

}
