#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
typedef vector<int> VI;
#define FOR(x, b, e) for(int (x)=(b); x<=(e); ++(x))
#define REP(x, n) for(int x=0; x<(n); ++x)

const int M = 10000000 + 5;

int main() {
    vector<int> primacity(M, 0);
    vector<bool> primes(M, true);
    int m_pri = 0;
    FOR(i, 2, M - 1) {
        if (primes[i]) {
            primacity[i] = 1;
            for (int j = 2 * i; j < M; j += i) {
                primes[j] = false;
                primacity[j]++;
            }
        }
        m_pri = max(primacity[i], m_pri);
    }
    vector<VI> pref(m_pri + 1, VI(M, 0));
    FOR(i, 2, M - 1) {
        FOR(j, 1, m_pri)
            pref[j][i] = pref[j][i - 1];
        pref[primacity[i]][i]++;
    }
    int t;
    scanf("%d", &t);
    FOR(z, 1, t) {
        int a, b, k;
        scanf("%d %d %d", &a, &b, &k);
        int ans = (k > m_pri) ? 0 : pref[k][b] - pref[k][a-1];
        printf("Case #%d: %d\n", z, ans);
    }
    return 0;
}
