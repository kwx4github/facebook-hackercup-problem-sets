/* Supto
   Dept. Of CSE
   University Of Dhaka
*/
//#include<bits/stdc++.h>
#include <cstdio>
#include <sstream>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <iostream>
#include <fstream>
#include <numeric>
#include <string>
#include <vector>
#include <cstring>
#include <map>
#include <iterator>

#define pb push_back
#define ins insert
#define ff first
#define ss second
#define ll long long int
#define llu long long unsigned
#define sss stringstream
#define oss ostringstream
#define iss istringstream
#define pii pair<int,int>
#define _sq(x) ((x)*(x))
#define lcm(a,b) ((a)*((b)/gcd(a,b)))
#define mem(a) memset(a,0,sizeof(a))
#define _set(a) memset(a,-1,sizeof(a))
#define popcount(n) __builtin_popcount(n)
#define popcountl(n) __builtin_popcountll(n)
#define ctz(x) __builtin_ctz(x) //number of trailing zeroes in a digit
#define ctzl(x) __builtin_ctzll(x)
#define clz(x) __builtin_clz(x)
#define clzl(x) __builtin_clzll(x) //number of leading zeroes in a digit
//If Long Long (mask & (1LL << k))
#define check(mask, k) (mask & (1 << k))
#define set1(mask, k) (mask | (1 << k))
#define set0(mask ,k) (mask & (~(1<<k)))
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

using namespace std;
#define pi acos(-1.0)
#define inf (1<<30)
#define eps 1e-9
#define MAX 10000010
#define MAXL 15

//const ll mod = 1000003;
//int dx[] = {0,0,1,-1};
//int dy[] = {1,-1,0,0};
//int dx[] = {-1,-1,-1,0,0,1,1,1};
//int dy[] = {-1,0,1,-1,1,-1,0,1};
vector <int> store[25];
bool table[MAX];
int fr[MAX];
void sieve()
{
    int i, j, k;
    int sq = sqrt(MAX);
    for(i = 4; i < MAX; i += 2) table[i] = 1;
    for(i = 3; i <= sq; i += 2)
    {
        if(table[i] == 0)
        {
            for(j = i+i; j < MAX; j += i) table[j] = 1;
        }
    }
    for(i = 2, j = 1; i < MAX; i += 2, j++)
    {
        fr[i]++;
        if(j > sq && table[j] == 0) fr[i]++;
    }
    for(i = 3; i <= sq; i += 2)
    {
        if(table[i] == 0)
        {
            fr[i]++;
            for(j = i+i, k = 2; j < MAX; j += i, k++)
            {
                fr[j]++;
                if(k > sq && table[k] == 0) fr[j]++;
            }
        }
    }
    for(i = 3; i < MAX; i += 2)
    {
        if(k > sq && table[k] == 0) fr[k]++;
    }
    for(i = 2; i < MAX; i++) store[fr[i]].pb(i);
}
int main()
{
    READ("homework.txt");
    WRITE("output.txt");
    //ios_base::sync_with_stdio(false);
    sieve();
    //for(int i = 1; i < 25; i++) printf("%d ", store[i].size());
    int ncase, tcase = 1, a, b, k;
    scanf("%d", &ncase);
    while(ncase--)
    {
        scanf("%d %d %d", &a, &b, &k);
        if(k > 8)
        {
            printf("Case #%d: 0\n", tcase++);
            continue;
        }
        int l = lower_bound(store[k].begin(), store[k].end(), a) - store[k].begin() + 1;
        int r = upper_bound(store[k].begin(), store[k].end(), b) - store[k].begin();
        //printf("%d %d\n", r, l);
        printf("Case #%d: %d\n", tcase++, r-l+1);
    }
    return 0;
}
