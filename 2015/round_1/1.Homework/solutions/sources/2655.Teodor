#include<bits/stdc++.h>
using namespace std;

ifstream fin("input.txt");
ofstream fout("output.txt");

#define MAX_VAL 10000001
#define MAX_K 8

vector<int> v[MAX_K + 1];

void pregen() {
  for (int val = 2; val < MAX_VAL; ++val) {
    int cval = val, nrPrimes = 0;
    for (int d = 2; d * d <= cval; ++d)
      if (cval % d == 0) {
        ++nrPrimes;
        while (cval % d == 0)
          cval /= d;
      }
    if (cval != 1)
      ++nrPrimes;

    v[nrPrimes].push_back(val);
  }
}

int binarySearch(int x, int k) {
  int i, pas = 1 << 24;
  for (i = -1; pas; pas >>= 1)
    if (i + pas < (int)v[k].size() && v[k][i + pas] <= x)
      i += pas;
  return i + 1;
}

int solve(int a, int b, int k) {
  if (k > MAX_K)
    return 0;
  return binarySearch(b, k) - binarySearch(a - 1, k);
}

int main() {
  int t;
  fin >> t;

  pregen();

  for (int T = 1; T <= t; ++T) {
    int a, b, k;
    fin >> a >> b >> k;

    fout << "Case #" << T << ": " << solve(a, b, k) << "\n";
  }
}

