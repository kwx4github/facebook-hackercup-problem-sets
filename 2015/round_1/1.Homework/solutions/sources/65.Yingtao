#!/usr/bin/env pypy3

def get_primacy(n):
    n_old = n

    res = 0
    i = 2
    while i*i <= n:
        if n % i == 0:
            res += 1
            while n % i == 0:
                n //= i
        i += 1
    if n != 1:
        res += 1
        n = 1

    return res

MAXV = 10**7 + 1

f = [0] * MAXV

for i in range(2,MAXV):
    f[i] = get_primacy(i)

MAX_PRIMACY = max(f) + 1
counter = [ [0] * MAX_PRIMACY for i in range(MAXV)]

for i in range(2,MAXV):
    for j in range(MAX_PRIMACY):
        counter[i][j] = counter[i-1][j]
    counter[i][f[i]] += 1

def solve(A, B, K):
    if K >= MAX_PRIMACY:
        return 0
    return counter[B][K] - counter[A-1][K]

T = int(input())
for Case in range(T):
    A, B, K = map(int,input().split())
    answer = solve(A,B,K)
    print('Case #%d: %d'%(Case+1,answer))
