#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

const int N = 1e7 + 100;
vector<int> prime;
bool flag[N];

void gen_prime() {
  for (int i = 2; i < N; ++i) {
    if (!flag[i]) prime.push_back(i);
    int k;
    for (int j = 0; j < prime.size() && (k = prime[j] * i) < N; ++j) {
      flag[k] = true;
      if (i % prime[j] == 0) break;
    }
  }
}

int cnt[N];

int factor(int n) {
  int ret = 0;
  for (int i = 0; i < prime.size(); ++i) {
    int k = prime[i];
    if (k * k > n) break;
    if (n % k == 0) {
      ++ret;
      while (n % k == 0) {
        n /= k;
      }
    }
  }
  if (n > 1) ++ret;
  return ret;
}

int main() {
  freopen("A.in", "r", stdin);
  freopen("A.out", "w", stdout);
  gen_prime();
  for (int i = 2; i < N; ++i) {
    cnt[i] = factor(i);
  }
  int cas;
  scanf("%d", &cas);
  for (int num = 1; num <= cas; ++num) {
    int a, b, k;
    scanf("%d%d%d", &a, &b, &k);
    int ret = 0;
    for (int i = a; i <= b; ++i) {
      if (cnt[i] == k) ++ret;
    }
    printf("Case #%d: %d\n", num, ret);
  }
  return 0;
}
