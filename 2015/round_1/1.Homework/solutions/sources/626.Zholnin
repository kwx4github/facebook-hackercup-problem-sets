#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <fstream>

using namespace std;

void generate()
{
	ofstream A;
	A.open("reference.txt");

	vector<int> Primes;
	vector<int> Eulers(10000001);
	Primes.push_back(2);
	for (int j = 2; j <= 10000000; j += 2)
		Eulers[j]++;

	for (int i = 3; i < 10000000; i += 2)
	{
		bool prime = true;
		for (int j = 1; j < Primes.size(); j++)
		if (i % Primes[j] == 0)
		{
			prime = false;
			break;
		}

		if (prime)
		{
			Primes.push_back(i);
			for (int j = i; j <= 10000000; j += i)
				Eulers[j]++;
			if (Primes.size() % 10000 == 0) cout << i << "\n";
		}

	}

	for (int i = 0; i < 10000001; i++)
		A << Eulers[i] << " ";
}


int main()
{
	//freopen("INPUT.TXT", "r", stdin);
	freopen("OUTPUT.TXT", "w", stdout);

//	generate();
//	exit(0);

	vector<int> Eulers(10000001);
	ifstream A;
	A.open("reference.txt");

	for (int i = 0; i < 10000001; i++)
		A >> Eulers[i];

	int t, c = 1;
	cin >> t;

	while (t--)
	{
		int A, B, K;
		cin >> A >> B >> K;
		int count = 0;

		for (int i = A; i <= B; i++)
		if (Eulers[i] == K) count++;

		cout << "Case #" << c++ << ": " << count << "\n";
	}

}