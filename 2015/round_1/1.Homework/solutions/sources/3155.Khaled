//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <sstream>
#include <cstring>
#include <fstream>
#include <functional>
#include <cstdio>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
using namespace std;

#define all(S) S.begin(), S.end()
#define sortb(S) sort(S.rbegin(), S.rend())
#define sorta(S) sort(all(S))
#define cinp(N) cin>>N.first>>N.second
#define coutp(N) cout<<N.first<<" "<<N.second<<endl
#define co(x) cout<<x<<endl
#define mem(C, V) memset(C, V, sizeof C)
#define clr(S, V) fill(all(S), V)
#define ssum(N) (ll)N*(N+1)/2
#define gt(S) getline(cin, S)
#define sp(N) setprecision(N)<<fixed
#define siz(S) S.size()
#define mk make_pair
#define go continue
#define rep(i, j) for (int i = 0; i < int(j); i++)
#define rrep(i, j) for (int i = j - 1; i > -1; i--)
#define Rep(i, j, k) for (int i = j; i < k; i++)
#define RRep(i, j, k) for (int i = k-1; i >= j; i--)
#define srep(S) for (auto it:S)
#define tester int tes; scanf("%d", &tes); Rep(casa, 1, tes+1)
#define getdis(x1, y1, x2, y2) double(sqrt((x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2)))
#define pi 3.1415926535897932384626433832795
#define ex 2.7182818284
#define mod 1000000007
#define soo s(1e5+1, '9')
#define oo 2e9+1

typedef stringstream ss;
typedef string s;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vi> vii;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<ll> vll;
typedef vector<bool> vb;
typedef vector<s> vs;
typedef map<ll, ll> mii;
typedef map<char, ll> mci;
typedef map<s, ll> msi;

int di[] = { 0, 1, 0, -1 };
int dj[] = { 1, 0, -1, 0 };
int dik[] = { 1, 1, 2, 2, -1, -1, -2, -2 };
int djk[] = { 2, -2, 1, -1, -2, 2, -1, 1 };

ll gcd(ll x, ll y){ return !y ? x : gcd(y, x%y); }

vll primes;
ll fun[(ll)1e7 + 1];
bitset<(ll)1e8> vis;
void solve(ll range){
	vis.set();
	for (ll i = 2; i*i <= range; i++) if (vis[i])
	for (ll j = i*i; j <= range; j += i) vis[j] = 0;
	Rep(i, 2, range) if (vis[i]) primes.push_back(i), fun[i] = 1;
}
int main(){
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	mem(fun, 0), solve(10000000);
	ll a, b, k, idx, ans, now, tmp, hope, len = siz(primes);
	tester{
		cin >> a >> b >> k, ans = 0;
		Rep(i, a, b + 1){
			idx = 0, now = primes[idx], tmp = i, hope = 0;
			if (fun[i]){
				ans += k == 1;
				go;
			}
			while (now*now <= tmp && idx + 1 < len){
				bool ent = 0;
				if (fun[tmp]) break;
				while (!(tmp%now)) tmp /= now, ent = 1;
				now = primes[++idx], hope += ent;
			}
			hope += tmp > 1;
			ans += hope == k;
		}
		cout << "Case #" << casa << ": " << ans << endl;
	}
	return 0;
}










