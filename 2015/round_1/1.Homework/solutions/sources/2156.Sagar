#include <stdio.h>
#include <vector>
#include <queue>
#include <string.h>
#include <stdlib.h>
#include <cstdio>
#include <map>
#include <string>
#include <iostream>
#include <algorithm>
#include <math.h>
#include <limits.h>
#define llu long long unsigned
#define ld long
#define F first
#define S second
#define ll long long
#define LN 14
#define Max(x,y) ((x>y)?x:y)
#define Min(x,y) ((x<y)?x:y)
#define res 1000000007
using namespace std;

std::vector<int> v[10];
int vis[10000003],count1[10000003];
int main()
{
	// std::vector<int> ::iterator temp1,temp2;
	int t,i,j,k,temp1,temp2,count2=1;
	scanf("%d",&t);
	memset(vis,0,sizeof(vis));
	memset(count1,0,sizeof(count1));
	for(i=2;i<10000001;i++)
	{
		if(!vis[i])
		{
			j=i;
			// printf("%d\n", i);
			while(j<10000001)
			{
				count1[j]++;
				// v[i].push_back(j);
				vis[j]=1;
				j=j+i;
			}
			// vis[j]
		}
	}
	for(i=2;i<10000003;i++)
	{
		v[count1[i]].push_back(i);
	}
	// printf("%d\n", v[2].size());
	// printf("al\n");
	while(t--)
	{
		int x,y,k;
		scanf("%d%d%d",&x,&y,&k);
		if(k>8) printf("Case #%d: 0\n",count2++);
		else
		{
			temp1=lower_bound(v[k].begin(),v[k].end(),x)-v[k].begin();
			temp2=upper_bound(v[k].begin(),v[k].end(),y)-v[k].begin();
			printf("Case #%d: %d\n",count2++, temp2-temp1);
		}
	}
	return 0;
}
