#include <bits/stdc++.h>

using namespace std;

int arr[10000001];

// marks all mutiples of 'a' ( greater than 'a' but less than equal to 'n') as 1.
void markMultiples(int arr[], int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        arr[ num-1 ]++; // minus 1 because index starts from 0.
        ++i;
    }
}
 
// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0
        
        memset(arr, 0, sizeof(arr));
 
        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i=1; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
                //printf("%d ", i+1);
                markMultiples(arr, i+1, n);
            }
        }
    }
}
 
// Driver Program to test above function
int main()
{
    int n = 10000000;
    //printf("Following are the prime numbers below %d\n", n);
    SieveOfEratosthenes(n);
    int T;
    cin >> T;
    int i = 0;
    while(i<T){
    	int a,b,k;
    	cin >> a >> b >> k;
    	int p = 0;
    	for(int j=a; j<=b; j++) {
    		if(arr[j-1] == k) p++;
    	}
    	cout << "Case #" << i+1 << ": " << p << endl;
    	i++;
    }
    return 0;
}
