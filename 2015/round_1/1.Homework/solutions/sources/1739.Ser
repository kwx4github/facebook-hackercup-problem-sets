#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

const int MAXN = 10000001;

bool isp[MAXN + 100];
int cnt[MAXN + 100] = { }, t, a, b, k;
vector<int> adj[9];

int main() {
	ios_base::sync_with_stdio(0);
	#ifndef ONLINE_JUDGE
		freopen("D:/in.txt","r",stdin);
		freopen("D:/out.txt","w",stdout);
		clock_t start = clock();
	#endif
	
	fill(isp, isp + MAXN + 100, 1);
	fill(cnt, cnt + MAXN + 100, 0);
	isp[0] = isp[1] = 0;
	for(int i = 2; i < MAXN; ++i) if(isp[i]) {
		++cnt[i];
		for(int j = i + i; j < MAXN; j += i) {
			isp[j] = 0;
			++cnt[j];
		}
	}
	for(int i = 0; i < MAXN; ++i)
		adj[cnt[i]].push_back(i);
	
	cin >> t;
	for(int tc = 1; tc <= t; ++tc) {
		cin >> a >> b >> k;
		int ans;
		if(k > 8) ans = 0;
		else {
			ans = upper_bound(adj[k].begin(), adj[k].end(), b) - lower_bound(adj[k].begin(), adj[k].end(), a);
		}
		cout << "Case #" << tc << ": "<< ans << '\n';
	}
	
	#ifndef ONLINE_JUDGE
		fprintf(stderr, "\ntime=%.3lfsec\n", 0.001 * (clock() - start));
	#endif
	return 0;
}
