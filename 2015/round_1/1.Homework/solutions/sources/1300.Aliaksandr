#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <utility>
#include <string>
#include <fstream>
#include <map>
#include <set>
#include <queue>
#include <memory.h>

using namespace std;

typedef vector<int> VI;
typedef pair<int, int> PI;
typedef vector<PI> VPI;

#define FOR(i,a,n) for (int i = (a); i < (n); ++i)
#define FORE(i,a,n) for (int i = (a); i <= (n); ++i)
#define FORD(i,a,b) for (int i = (a); i >= (b); --i)
#define REP(i,n) FOR(i,0,n)
#define REPE(i,n) FORE(i,0,n)
#define LL long long
#define FIR(n) REP(i,n)
#define FJR(n) REP(j,n)
#define ALL(v) v.begin(), v.end()

#define FI FIR(n)
#define FJ FJR(n)
#define FR(i,a) FOR(i,a,n)
#define REPN(i) REP(i,n)

#define GI(n) scanf("%d", &n)
#define GI2(n,m) scanf("%d %d", &n, &m)


#define N 10000008

int pr[N], f[N];

int solve() {
	int a, b, K;
	GI2(a, b); GI(K);
	int res = 0;
	FORE(i, a, b) if (f[i] == K)++res;
	return res;
}

int main() {
freopen("a-in.txt", "rt", stdin); freopen("a-out.txt", "w", stdout);
	
	FIR(N) pr[i] = 1;
	for (int i =2; i*i < N; ++i) if (pr[i])
		for (int j = i*i; j < N; j += i)
			pr[j] = 0;

	FOR(i, 2, N) if (pr[i])
		for (int j = i; j < N; j += i)
			++f[j];

	int ntc; GI(ntc);
	FORE(tc, 1, ntc) {
		int res = solve();
		printf("Case #%d: %d\n", tc, res);
		
		fprintf(stderr, "Case #%d: %d\n", tc, res);
	}

}

