#include <bits/stdc++.h>

using namespace std;

bool not_prime[10000005];
vector<int> primes;

void generate_sieve(int n)
{
	for(int i=2;i*i<=n;)
	{
		if(not_prime[i]==0)
		{
			long long k=i*i;
			while(k<=n)
			{
				not_prime[k]=1;
				k+=i;
			}
		}
		if(i==2)
		i++;
		else
		i+=2;
	}
	
	for(int i=2;i<=n;i++)
	{
		if(not_prime[i]==0)
		{
			primes.push_back(i);
		}
	}
}

vector<int> factors(10000005);

int ans[10000005][10];

int main(int argc, char** argv) {
	freopen("in1.txt","r",stdin);
	freopen("out.txt","w",stdout);
	int n = 10000000;
	generate_sieve(n);
	
	for(int i=0;i<primes.size();i++)
	{
		long long k = primes[i];
		while(k<=n && k>0)
		{
			factors[k]++;
			k+=primes[i];
		}
	}
	
	for(int i=2;i<=n;i++)
	{
		for(int j=1;j<=10;j++)
		{
			ans[i][j] = ans[i-1][j] + ((j==factors[i]) ? 1 : 0);
		}
	}
	
	int q;
	cin>>q;
	int cases =1;
	while(q--)
	{
		int l,r,k;
		cin>>l>>r>>k;
		
		if(k<=10)
		cout<<"Case #"<<cases<<": "<<ans[r][k] - ans [l-1][k]<<endl;
		else
		cout<<"Case #"<<cases<<": 0"<<endl;
		cases++;
	}
	return 0;
}

