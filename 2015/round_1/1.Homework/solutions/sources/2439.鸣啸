#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <queue>
#include <cmath>
#include <stack>
#include <map>

#pragma comment(linker, "/STACK:1024000000");
#define EPS (1e-8)
#define LL long long
#define ULL unsigned long long
#define _LL __int64
#define INF 0x3f3f3f3f
#define Mod 6000007

//** I/O Accelerator Interface .. **/
#define g (c=getchar())
#define d isdigit(g)
#define p x=x*10+c-'0'
#define n x=x*10+'0'-c
#define pp l/=10,p
#define nn l/=10,n
template<class T> inline T& RD(T &x)
{
    char c;
    while(!d);
    x=c-'0';
    while(d)p;
    return x;
}
template<class T> inline T& RDD(T &x)
{
    char c;
    while(g,c!='-'&&!isdigit(c));
    if (c=='-')
    {
        x='0'-g;
        while(d)n;
    }
    else
    {
        x=c-'0';
        while(d)p;
    }
    return x;
}
inline double& RF(double &x)      //scanf("%lf", &x);
{
    char c;
    while(g,c!='-'&&c!='.'&&!isdigit(c));
    if(c=='-')if(g=='.')
        {
            x=0;
            double l=1;
            while(d)nn;
            x*=l;
        }
        else
        {
            x='0'-c;
            while(d)n;
            if(c=='.')
            {
                double l=1;
                while(d)nn;
                x*=l;
            }
        }
    else if(c=='.')
    {
        x=0;
        double l=1;
        while(d)pp;
        x*=l;
    }
    else
    {
        x=c-'0';
        while(d)p;
        if(c=='.')
        {
            double l=1;
            while(d)pp;
            x*=l;
        }
    }
    return x;
}
#undef nn
#undef pp
#undef n
#undef p
#undef d
#undef g

using namespace std;

int ans[10000010];

int main()
{
    freopen("homework.txt","r",stdin);
    //freopen("homeworkout.txt","w",stdout);

    int T,icase;

    int i ,j,n = 10000000,A,B,K;

    memset(ans,0,sizeof(ans));

    for(i = 2;i <= n; ++i)
    {
        if(ans[i])
            continue;

        ans[i]++;

        for(j = i+i;j <= n; j += i)
        {
            ans[j] ++;
        }
    }

    int sum = 0;

    scanf("%d",&T);

    for(icase = 1;icase <= T; ++icase)
    {
        scanf("%d %d %d",&A,&B,&K);

        sum = 0;

        for(i = A;i <= B; ++i)
        {
            if(ans[i] == K)
                sum++;
        }

        printf("Case #%d: %d\n",icase,sum);
    }


    return 0;
}























