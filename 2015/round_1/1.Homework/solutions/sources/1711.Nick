import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.HashSet;
import java.util.Scanner;


public class homework {
	public static void main(String[] args) throws FileNotFoundException {
		int max = 10000003;
		PrimeSieve PS = new PrimeSieve(max);
		int[] primality = new int[max];
		for(int a=2;a<=10000000;a++){
			int cur = a;
			HashSet<Integer> HS = new HashSet<Integer>();
			while(!PS.isPrime(cur)){
				HS.add(PS.prime[cur]);
				cur/=PS.prime[cur];
			}
			HS.add(cur);
			HS.add(1);
			primality[a]=HS.size()-1;
		}
		Scanner sc = new Scanner(new File("homework.in"));
		PrintWriter out = new PrintWriter(new File("homework.out"));
		int T = sc.nextInt();
		for(int t=1;t<=T;t++){
			int ans = 0;
			int S = sc.nextInt();
			int E = sc.nextInt();
			int K = sc.nextInt();
			for(int a=S;a<=E;a++){
				if(primality[a]==K)ans++;
			}
			out.printf("Case #%d: %d%n",t,ans);
			System.out.printf("Case #%d: %d%n",t,ans);
		}
		out.close();
	}
	
	static class PrimeSieve {
		int[] prime;
		PrimeSieve(int N){
			prime = new int[N+1];
			prime[1] = -1;
			int M = (int)Math.sqrt(N);
			for(int a=2;a<=M;a++)
				if(prime[a]==0)
					for(int b=a*a;b<=N;b+=a)
						if(prime[b]==0)
							prime[b]=a;
		}	
		boolean isPrime(int N){
			return prime[N]==0;
		}
	}
}
