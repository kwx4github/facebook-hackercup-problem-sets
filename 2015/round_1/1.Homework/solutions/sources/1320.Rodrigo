#include <stdlib.h>
#include <stdio.h>


int primality_calc(int* numbers, int x)
{
	if (numbers[x] == 0)
		return 1;
	
	int p = 0;
	int pfactor = -1, factor;
	while (numbers[x])
	{
		factor = numbers[x];
		if (factor != pfactor)
		{
			p++;
			pfactor = factor;
		}
		x/=factor;
	}
	if (x != pfactor)
		p++;
	
	return p;
}

int main()
{
	int* numbers = (int*) calloc(10000001, sizeof(int));
	int* prim = (int*) calloc(10000001, sizeof(int));
	int i, j;
	int T, A, B, K, c = 1, ans;
	
	for (i=2; i<=10000000; i++)
	{
		if (numbers[i] == 0)
		{
			for (j=2*i; j<=10000000; j+=i)
			{
				if (numbers[j] == 0)
					numbers[j] = i;
			}
		}
	}
	for (i=2; i<=10000000; i++)
	{
		prim[i] = primality_calc(numbers, i);
	}
	
	scanf("%d", &T);
	while(c <= T)
	{
		scanf("%d %d %d", &A, &B, &K);
		ans = 0;
		for (i=A; i<=B; i++)
		{
			if (prim[i] == K)
				ans++;
		}
		printf("Case #%d: %d\n", c, ans);
		
		c++;
	}
	
	free(numbers);
	free(prim);
	return 0;
}
