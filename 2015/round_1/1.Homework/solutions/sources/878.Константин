#include <bits/stdc++.h>

using namespace std;

#define sz(x) ((int) (x).size())

typedef long long ll;
typedef long double ld;

const int INF = 1000001000;
const ll INFL = 2000000000000001000;
int solve();

const int bd = 20000000;
int minp[bd];
vector <int> p;

void precalc()
{
    for (int i = 2; i <= bd; ++i)
    {
        if (minp[i] == 0)
        {
            p.push_back(i);
            minp[i] = i;
        }
        for (int j = 0; j < sz(p) && p[j] * i <= bd && p[j] <= minp[i]; ++j)
            minp[p[j] * i] = p[j];
    }
}

int main()
{
	srand(2317);
	cout.precision(10);
	cout.setf(ios::fixed);
	#ifdef LOCAL
	freopen("a.in", "r", stdin);
	#else
	#endif
	int tn = 1;
    cin >> tn;
    precalc();
	for (int i = 0; i < tn; ++i)
		solve();
	#ifdef LOCAL
	cerr << "Time: " << double(clock()) / CLOCKS_PER_SEC << '\n';
	#endif
}

int test = 1;

int solve()
{
    int a, b, k;
    cin >> a >> b >> k;
    int ans = 0;
    for (int i = a; i <= b; ++i)
    {
        int c = i;
        int last = -1, cnt = 0;
        while (c > 1)
        {
            if (minp[c] != last)
                ++cnt;
            last = minp[c];
            c /= last;
        }
        ans += (cnt == k);
    }
    cout << "Case #" << test++ << ": " << ans << "\n";
	return 0;
}
