#include <iostream>
#include <string>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string.h>
#include <utility>
#include <queue>
#include <stack>
#include <iomanip>
#include <ctype.h>
#include <sstream>
#include <map>
#include <set>
#include <stdio.h>
#include <assert.h>
#include <ctype.h>
 
using namespace std;

typedef long long LL;

#define FOR(i,n) for(int i = 0;i < n;i++)
#define MP make_pair
#define PB push_back
#define ALL(a) (a).begin(),(a).end()
#define PII pair<int, int>
#define CLEAR(a) memset(a, 0, sizeof(a))
#define INF 2000000000
const double EPS = 1E-8;
const LL mod = 1000000007;
 
using namespace std;

int a,b,k;
int q[10000005];
vector<char> prime (10000+1, true);
vector<int> p;

void solve(int tn) {
  cin >> a >> b >> k;
  cout << "Case #" << tn << ": ";

  int c = 0;
  for (int i = a; i <= b; i++) {
    if (q[i] == k)
      c++;
  }

  cout << c << endl;
}

int main() {
  CLEAR(q);
  prime[0] = prime[1] = false;
  for (int i=2; i<=10000; ++i)
  if (prime[i]) {
    p.push_back(i);
    if (i * 1ll * i <= 10000)
    for (int j=i*i; j<=10000; j+=i) prime[j] = false;
  }

  for (int i = 1; i <= 10000002; i++) {
    int x = i;
    FOR(j, p.size()) {
      if (p[j] > x)
        break;
      if (x % p[j] == 0) {
        q[i]++;
      }
      while (x % p[j] == 0) {
        x /= p[j];
      }
    }

    if (x > 1)
      q[i]++;
  }

  int t;
  cin >> t;
  FOR(i, t) {
    solve(i+1);
  }

  return 0;
}