#include <bits/stdc++.h>
using namespace std;
#define N 10000010
typedef long long ll;
typedef unsigned long long ull;
bool isprime[N];
int primacity[N];
vector<int> primes(0);
int getPri(int n)
{
    if(primacity[n]!= -1)
        return primacity[n];
    if(isprime[n])
        return 1;
    int sum=0;
    for(int i=0;primes[i]<=n;i++)
    {
        if(n%primes[i]==0)
            sum++;
    }
    primacity[n]=sum;
    return sum;
}
void sieve()
{
    memset(isprime,-1,sizeof isprime);
    isprime[0]=isprime[1]=0;
    for (int i=0;i*i<=N;i++)
    {
        if(isprime[i])
        {
            primacity[i]=1;
            primes.push_back(i);
            for(int j=i*2;j<=N;j+=i)
                {
                    isprime[j]=0;
                    primacity[j]++;
                }
        }
    }
    for(int i=0;i<=N;i++)
        if(isprime[i])
        {
            primes.push_back(i);
        }
}
int main()
{
    ios_base::sync_with_stdio(0);
    freopen("homework.txt","r",stdin);
    freopen("outro.txt","w",stdout);
    memset(primacity,0,sizeof primacity);
    sieve();
    int t,o,j,cot,hm;
    cin>>t;
    for(int i=1;i<=t;i++)
    {

        cot=0;
        cin>>o>>j>>hm;
        for(int k=o;k<=j;k++)
            if(primacity[k]==hm)
            cot++;
        printf("Case #%d: ",i);
        fflush(stdout);
        cout<<cot<<endl;
    }
    return 0;
}
