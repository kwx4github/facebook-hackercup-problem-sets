#include <iostream>
#include <fstream>
#include <cstdio>
#include <math.h>
#include <vector>
#include <string.h>
#include <algorithm>
#include <climits>
#include <stack>
#include <queue>
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a<b?a:b
#define SWAP(a,b) {int tmp=a;a=b;b=tmp;}
#define GCD(a,b)  { return (b==0)?a:GCD(b,a%b); }
#define LCM(a,b)  { return a*b/GCD(a,b);  }
#define FOR(i,n) for(i=0;i<n;i++)
#define FOR_X(i,n,x) for(i=x;i<n;i++)
#define FORN(i,n) for(i=n;i>=0;i--)
#define FORN_X(i,n,x) for(i=n;i>=x;i--)

typedef long long int lld;
using namespace std;

int cnt=0;

int primes[100000];

int pcount[10000007];

void prime_gen(){

	int num=3200;
	bool is_prime[3300];
	int i,j;

	memset(is_prime,1,sizeof(is_prime));

	for( i=0;i<num;i+=2)
		is_prime[i]=false;

	primes[cnt++]=2;

	for(i=3;i<=num;i+=2){
		if(is_prime[i]){
			primes[cnt++]=i;
			for(j=i*2;j<=num;j+=i)
				is_prime[j]=false;
		}
	}


	for(i=0;i<=10000004;i++)
		pcount[i]=0;

	for(i=0;i<cnt;i++){
		for(j=primes[i];j<=10000003;j+=primes[i]){
			pcount[j]=pcount[j]+1;
		}
	}

	return;

}

int main(){
    //freopen("/home/lakhan/Desktop/output1.txt","w",stdout);
	prime_gen();
    //for(int i=0;i<10000000;i++){
		//if(i%10==0)
		//cout<<endl;
		//cout<<pcount[i]<<" ";
    //}
    int t,c=0;
    cin>>t;
    while(t--){
        c++;
        int a,b,k;
        cin>>a>>b>>k;
        int i,cc=0;
        for(i=a;i<=b;i++){
            if(pcount[i]==k)
                cc++;
        }

        printf("Case #%d: %d",c,cc);
        cout<<endl;
    }
}

