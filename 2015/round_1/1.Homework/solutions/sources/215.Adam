#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <string>
#include <sstream>
#include <iostream>
#include <set>
#include <map>
#include <cassert>

#define REP(AA,BB) for(int AA=0; AA<(BB); ++AA)
#define FOR(AA,BB,CC) for(int AA=(BB); AA<(CC); ++AA)
#define FC(AA,BB) for(__typeof((AA).begin()) BB=(AA).begin(); BB!=(AA).end(); ++BB)
#define SZ(AA) ((int)((AA).size()))
#define ALL(AA) (AA).begin(), (AA).end()
#define PB push_back
#define MP make_pair

using namespace std;

typedef vector<int> VI;
typedef pair<int, int> PII;
typedef long long LL;
typedef long double LD;

const int MAXN = 10000000;
int c[MAXN + 10], r[MAXN + 10];
VI p[20];

void prep() {
  for (int i = 2; i * i <= MAXN; ) {
    for (int j = i + i; j <= MAXN; j += i) {
      c[j] = i;
    }
    while (c[++i]);
  }
  for (int i = 2; i <= MAXN; ++i) {
    if (c[i] == 0) {
      c[i] = i;
      r[i] = 1;
    } else {
      r[i] = r[i / c[i]] + (c[i] == c[i / c[i]] ? 0 : 1);
    }
    p[r[i]].PB(i);
  }
}

int main(void) {
  prep();
  int T; scanf("%d", &T);
  for (int t = 1; t <= T; ++t) {
    int a, b, k; scanf("%d%d%d", &a, &b, &k);
    int res = 0;
    if (k < 15) {
      res = int(upper_bound(ALL(p[k]), b) - lower_bound(ALL(p[k]), a));
    }
    printf("Case #%d: %d\n", t, res);
  }
  return 0;
}

