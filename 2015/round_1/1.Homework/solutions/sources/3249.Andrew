/***********************************************
 *                                             *
 *  Name: Andrew Wilkening                     *
 *  Date: 17 January 2015                      *
 *  Desc: This file solves the "Homework"      *
 *    problem for Facebook Hacker Cup 2015.    *
 *                                             *
 ***********************************************/

#include<string>
#include<iostream>
#include<fstream>
#include<vector>

using namespace std;

int main()
{
  ifstream fin("homework.txt");
  ofstream fout("homeworkOut.txt");
  int runs, total, tally, A, B, K, check, NO_PRIMES;
  vector<bool> prime;
  vector<int> primes;
  vector<int> primality;
  for(int i = 0; i < 10000001; i++)
  {
    prime.push_back(true);
  }
  for(int i = 2; i < 3163; i++)
  {
    if(prime[i])
    {
      for(int j = i*i; j <= 10000000; j+=i)
      {
        prime[j] = false;
      }
    }
  }
  for(int i = 2; i <= 10000000; i++)
  {
    if(prime[i])
      primes.push_back(i);
  }
  prime.clear();
  NO_PRIMES = primes.size();
  fin >> runs;
  for(int i = 1; i <= runs; i++)
  {
    total = 0;
    fin >> A >> B >> K;
    for(int j = A; j <= B; j++)
      primality.push_back(0);
    for(int j = 0; j < NO_PRIMES; j++)
    {
      if(primes[j] < A)
      {
        check = A/primes[j];
        if(check*primes[j] != A)
          check++;
        check = check*primes[j];
        if(check < B)
        {
          for(int k = check-A; k <= B-A; k+=primes[j])
            primality[k]++;
        }
        else if(check == B)
        {
          if(B%primes[j] == 0)
            primality[primality.size() - 1]++;
        }
      }
      else if(primes[j] >= A && primes[j] <= B)
      {
        for(int k = primes[j]-A; k <= B-A; k+=primes[j])
          primality[k]++;
      }
      else
        j = NO_PRIMES;
    }
    for(int j = 0; j < primality.size(); j++)
    {
      if(primality[j] == K)
        total++;
    }
    primality.clear();
    fout << "Case #" << i << ": " << total << endl;
  }
  return 0;
}
