#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <math.h>
using namespace std;

int prime[1000000];
int prima[10000005];
int pdb = 0;

int powad(int a, int d, int n) {
    //printf("%d %d %d\n", a, d, n);
    long long table[30];
    int power[30];
    power[0] = 0; table[0] = 1;
    power[1] = 1; table[1] = (long long)a;
    int db = 1;
    while (power[db] < d) {
        db++; power[db] = power[db-1]*2;
        table[db] = (long long)(table[db-1]*table[db-1]) % n;
    }
    //printf("db=%d\n", db);
    long long ans = 1;
    for (int i = db; i>=0; i--) {
        if (power[i] <= d) {
            d-=power[i];
            ans = (ans*table[i]) % n;
        }
    }
    return (int) ans;
}

bool isPrime(int n) {
    if (n == 2 || n == 3) return true;
    if (n == 1 || n % 2 == 0) return false;
    int s = 0;
    int two = 1;
    while ((n-1) % (two*2) == 0) { s++; two*=2; }
    int d = (n-1)/two;
    //printf("s=%d d=%d\n", s, d);
    for (int i = 1; i<=10; i++) {
    //printf("i=%d\n", i);
        int a = rand() % (n-4) + 2;
        //printf("a=%d\n", a);
        int x = powad(a, d, n);
        if (x == 1 || x == n-1) continue;
        for (int j = 1; j<s; j++) {
            x = (x*x) % n;
            if (x == 1) return false;
            if (x == n-1) break;
        }
        if (x == n-1) continue;
        return false;
    }
    return true;
}



int primacity(int x) {
    int _x = x;
    if (x == 1) return 0;
    //printf("q %d -> %d\n", x, prima[x]);
    if (prima[x] != -1) return prima[x];
    if (isPrime(x)) { prima[x] = 1; return 1; }
    for (int i = 1; i<=pdb; i++) {
        if (x % prime[i] == 0) {
            while (x % prime[i] == 0) x /= prime[i];
            prima[_x] = primacity(x)+1;
            return prima[_x];
        }
    }
}


int main()
{
    //printf("%d\n", powad(238284, 2000001, 8000005));
    //return 0;


    for (int i = 1; i<=10000000; i++) {
        prima[i] = -1;
        if (isPrime(i)) prime[++pdb] = i;
        //if (i % 1000000 == 0) printf("%d/10\n", i/1000000);
    }
    //printf("%d primes found\n", pdb);


    for (int i = 1; i<=10000000; i++) {
        prima[i] = primacity(i);
        //if (i % 100000 == 0) printf("%d/100\n", i/100000);
    }

    int nn;
    scanf("%d", &nn);
    for (int i = 1; i<=nn; i++) {
        int a,b,c; scanf("%d%d%d", &a, &b, &c);
        //printf("%d %d %d\n", a,b , c);
        int ans = 0;
        for (int j = a; j<=b; j++) if (primacity(j) == c) ans++;
        printf("Case #%d: %d\n", i, ans);
    }



    return 0;
}
