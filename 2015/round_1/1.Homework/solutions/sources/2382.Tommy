<?php
ini_set('memory_limit', '3000M');
function findp($i){
  global $ap,$sto;
  $n=0;
  $oi=$i;
  if ($i==1){ return 0; }
  if (isset($ap[$i])) return 1;
  if (isset($sto[$i])) return $sto[$i];
  $qr=floor(sqrt($i));
  foreach($ap as $k=>$v){
    if ($k>$qr) break;
    if ($i<$k) break;
    if ($i % $k == 0){
      while(($i % $k ==0)) $i=$i/$k;
      $n++;
      if ($i==1) break;
    }
  }
  if ($i==1) { return $sto[$oi]=$n; }
  return $sto[$oi]=($n+1);
}
function locp($i){
  global $ap,$seen;
  if ($i==1){ return; }
  if (isset($seen[$i])) return;
  else $seen[$i]=1;
  $qr=floor(sqrt($i));
  $ak=array_keys($ap);
  foreach($ak as $v){
    if ($v>$qr) break;
    if ($i%$v==0) return;
  }
  $ap[$i]=1;
}

if ($argc>1){
  $lines=file($argv[1]);
  $t=trim($lines[0]);
  $ap=array();
  for($x=1;$x<3200;$x++){
    locp($x);
  }
  ksort($ap);
  $sto=array();
  for($c=1;$c<=$t;$c++){
    $line=trim($lines[$c]);
    list($a,$b,$k)=explode(' ',$line);

    $x=0;
    if ($k<=499){
      for($i=$b;$i>=$a;$i--){
        $n=findp($i);
        if ($n==$k) $x++;
      }
    }

    echo "Case #".$c.": ".$x."\n";
  }
}
?>
