#include <cassert>
#include <cstring>

#include <algorithm>
#include <iostream>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < int(b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

int main(void) {
  const int MAXN = 1e7 + 123;
  vector<int> P(MAXN, -1);
  vector<int> primacity(MAXN, 0);

  P[0] = P[1] = 0;
  for (int i = 2; i < MAXN; ++i)
    if (P[i] == -1) {
      for (llint j = (llint)i*i; j < MAXN; j += i)
        if (P[j] == -1)
          P[j] = i;
      P[i] = i;
    }

  for (int i = 2; i < MAXN; ++i) {
    for (int j = i; j != 1; ) {
      int div = P[j];      
      while (P[j] == div) j /= div;
      ++primacity[i];      
    }
  }

  int ntc; scanf("%d", &ntc);
  REP(tc, ntc) {
    int a, b, k; scanf("%d %d %d", &a, &b, &k); ++b;
    int cnt = 0;
    FOR(i, a, b) cnt += (primacity[i] == k);
    printf("Case #%d: %d\n", tc+1, cnt);
  }
  return 0;
}   
