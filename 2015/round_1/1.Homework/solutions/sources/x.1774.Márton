#include <iostream>

using namespace std;

int T;
int a,b,k;

bool isnprime[10000001];

int numpdiv[10000001];
int ak[10000001][10];

int used[10];

void ok(long long n, int e, int k) {
    if(n > 10000000) return;
    numpdiv[n] = e;
    ok(n*used[k],e,k);
    if(k < e-1) ok(n*used[k+1],e,k+1);
}

void calc(int k, int e, int n) {
    numpdiv[n] = e;
    if(e) ok(n,e,0);
    for(long long i=k; i*n<=10000000; i++) {
        if(isnprime[i]) continue;
        used[e] = i;
        calc(i+1,e+1,i*n);
    }
}

int main()
{
    isnprime[0] = 1;
    isnprime[1] = 1;
    for(long long i=2; i<=10000000; i++) {
        if(isnprime[i]) continue;
        for(long long j=i*i; j<10000000; j+=i) {
            isnprime[j] = 1;
        }
    }

    //cerr << "sieve is ready" << endl;

    calc(2,0,1);

    //cerr << "calc is ready" << endl;

    for(int i=1; i<=10000000; i++) {
        //cerr << i << ": " << numpdiv[i] << endl;
        //if(numpdiv[i] > 9) cerr << i << ": " << numpdiv[i] << endl;
        for(int j=1; j<10; j++) {
            ak[i][j] = ak[i-1][j] + (numpdiv[i]==j);
        }
    }

    cin >> T;
    for(int t=1; t<=T; t++) {
        cin >> a >> b >> k;
        cout << "Case #" << t << ": " << ak[b][k]-ak[a-1][k] << endl;
    }

    return 0;
}
