#include <algorithm>
#include <iostream>
#include <string.h>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <string.h>
using namespace std;
#define MAXN 10000001
#define xx first 
#define yy second 
#define INF 1000000000
#define mp make_pair
#define pb push_back
using namespace std;
int n;
bool prime[MAXN] = {0};
int cache[MAXN] = {0};
int meme[MAXN] = {0};
void prepare () {
    
    for ( int i = 2; i < MAXN; i ++ ) {
        if ( !prime[i] ) 
           for ( int j = i; j < MAXN; j += i ) {
               prime[j] = true;
               cache[j] ++;  
           } 
    } 
   
}
vector< pair< pair<int,int>,pair<int, int> > > saves;
vector< pair< int , int > > result;
void build (int k) {
     
    for ( int i = 1; i < MAXN; i ++ ) {
        meme[i] = meme[ i - 1 ];
        if ( cache[i] == k ) meme[i] ++;
    }     
    
}
int pre_k = -1;

int calc (int a , int b , int k) {
    if ( k > 8 ) return 0;
    if (k != pre_k ) build (k);
    int r_a = meme[a - 1];
    int r_b = meme[b ];
    pre_k = k;
    return r_b - r_a;
}

int main() {
    
    prepare ();
    freopen ("homework.txt" , "r" , stdin);
    freopen  ("out.txt" , "w", stdout);
    int T;
    
    cin >> T;
    
    for ( int test = 1; test <= T; test ++ ) {
        int a , b , k;
        cin >> a >> b >> k;
        saves.pb ( mp ( mp( k,test) , mp( a ,b ) ) );
    } 
    
    sort (saves.begin () , saves.end() );
    
    for ( int i = 0; i < T; i ++ ) {
        int r = calc (saves[i].yy.xx , saves[i].yy.yy , saves[i].xx.xx );
        result.pb (mp (saves[i].xx.yy , r));
    }
    
    sort (result.begin () , result.end() );
    
    for (int i = 0; i < T; i ++ ) {
        cout <<"Case #"<< i + 1 <<": "<< result[i].yy << endl;
    }
//system("pause");    
return 0;
}


