/*
***************************************************************************************************************

							Author : Yash Sadhwani

**************************************************************************************************************
*/
#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define sc(x) scanf("%c",&x)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mod 1000000007
#define mem(x,y) memset(x,y,sizeof(x))
#define f(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define max_long_value 9223372036854775807


//qsort(ww,cc,sizeof(tp),compare);
/*int compare(const void *a,const void *b){
	ll y=((((tp*)a)->w)-(((tp*)b)->w));
	if(y>0)return 1;
	else if(y==0)return 0;
	else return -1;
}*/

#define MAXN 10000010

bool isprimes[MAXN];
int primaticity[MAXN];

void sieve(void){
	for(int i=2;i<MAXN;i++){
		if(isprimes[i]){
			primaticity[i]++;
			for(int j=2*i;j<MAXN;j+=i){
				primaticity[j]++;
				isprimes[j]=false;
			}
		}
	}
}

int ans[MAXN];

int main()
{
	fill(isprimes,isprimes+MAXN,true);
	fill(primaticity,primaticity+MAXN,0);
	fill(ans,ans+MAXN,0);
	sieve();
	int t; si(t);
	int g=1;
	while(t--){
		int a,b,k;
		si(a); si(b); si(k);
		int ans=0;
		for(int i=a;i<=b;i++){
			if(primaticity[i]==k)ans++;
		}
		printf("Case #%d: %d\n",g,ans );
		g++;
	}
	return 0;
}
