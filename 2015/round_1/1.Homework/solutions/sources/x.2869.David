package outputs;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class homework {
	
	static int a, b, k;
	public static void main (String args[]) throws Exception {
		fillVectors();
		BufferedReader br = new BufferedReader (new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine());
		for (int i = 0; i < t; i ++) {
			String line = br.readLine();
			StringTokenizer st = new StringTokenizer(line);
			a = Integer.parseInt(st.nextToken());
			b = Integer.parseInt(st.nextToken());
			k = Integer.parseInt(st.nextToken());
			System.out.println("Case #" + (i + 1) + ": "	+ solve());
		}
	}
	static boolean[] primes = new boolean[10000001];
	static int[] primacity = new int[10000001];
	static int[] cumulativePrimacity = new int[10000001];
	static private void fillVectors() {
		Arrays.fill(primes, true);
		for (int i = 2; i * i < primes.length; i++) {
			if (primes[i]) {
				primacity[i] = 1;
				for (int j = i + i; j < primes.length; j+=i) {
					primes[j] = false;
					primacity[j] = primacity[j] + 1;
				}
			}
		}
		//System.out.println(primes[0]);
	}
	private static int solve() {
		int ans = 0;
		for (int i = a; i <= b; i++) {
			if (primacity[i] == k) {
				ans++;
			}
		}
		return ans;
	}
}
