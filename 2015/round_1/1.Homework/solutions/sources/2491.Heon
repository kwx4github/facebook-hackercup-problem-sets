#include <iostream>
#include <sys/wait.h>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <sstream>
#include <numeric>
#include <iterator>
#include <queue>
#include <set>
#include <map>
#include <vector>

#define mp make_pair
#define pb push_back
#define sqr(x) ((x)*(x))
#define foreach(it,c) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)

using namespace std;

typedef vector<int> VI;
typedef vector<VI> VVI;
typedef vector<string> VS;
typedef pair<int,int> PII;

template<typename T> int size(const T &a) { return a.size(); } 

const int dx[] = {-1,0,1,0};
const int dy[] = {0,1,0,-1};

vector<int> primes;

int cnt(int aa) {
    if(aa == 1) return 0;
    int ret = 0;
    for(int i=0;i<size(primes);i++) {
        if(primes[i] * primes[i] > aa) break;
        if(aa % primes[i]) continue;
        ret++;
        while((aa % primes[i]) == 0) aa /= primes[i];
    }
    if(aa != 1) ret++;
    return ret;
}

void process() {
    int a,b,k;
    scanf(" %d %d %d", &a, &b, &k);
    int ret = 0;
    for(int i=a;i<=b;i++) {
        if(cnt(i) == k) {
            ret++;
        }
    }
    cout << ret << endl;
}

int main(void) {
    primes.clear();
    primes.pb(2);
    for(int i=3;i*i < 1000000007;i+=2) {
        bool comp = false;
        for(int j=0;j<size(primes);j++) {
            if ((i % primes[j]) == 0) {
                comp = true; break;
            }
            if (primes[j] * primes[j] > i) break;
        }
        if(!comp) primes.pb(i);
    }

    int T;
    scanf("%d", &T);
    for(int i=1;i<=T;i++) {
        printf("Case #%d: ", i);
        process();
    }
    return 0;
}
