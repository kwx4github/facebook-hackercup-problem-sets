#include <map>
#include <set>
#include <cmath>
#include <deque>
#include <limits>
#include <vector>
#include <string>
#include <iostream>
#include <cinttypes>
#include <algorithm>
#include <unordered_map>

using namespace std;
typedef uint64_t LL;

vector<LL> count;

int main(int, char**)
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    LL const N = 1e7 + 1;
    vector<LL> pr;
    vector<LL> lp(N + 1, 0);
    vector<set<LL>> count(N + 1);

    for (LL i = 2; i <= N; ++i)
    {
        if (lp[i] == 0)
        {
            lp[i] = i;
            pr.push_back (i);
            count[i].insert(i);
        }
        for (LL j = 0; j < pr.size() && pr[j] <= lp[i] && i * pr[j] <= N; ++j)
        {
            LL k = i * pr[j];
            lp[k] = pr[j];
            count[k] = count[i];
            count[k].insert(pr[j]);
            /*
            cerr
                << "i=" << i << ", "
                << "count[" << k << "]=" << count[k].size() << ", "
                << endl;
            */
        }
    }

    LL T;
    cin >> T;
    for (int t = 1; t <= T; ++t)
    {
        LL A, B, K;
        cin >> A >> B >> K;
        LL R = 0;
        for (LL i = A; i <= B; ++i)
            R += (count[i].size() == K);

        cout << "Case #" << t << ": " << R << endl;
    }

    return 0;
}

