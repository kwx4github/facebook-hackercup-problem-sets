#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <iostream>
#include <sstream>
#include <vector>
#include <string>
#include <math.h>
#include <queue>
#include <list>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <ctime>
using namespace std;

#define ALL(c) (c).begin(),(c).end()
#define IN(x,c) (find(c.begin(),c.end(),x) != (c).end())
#define REP(i,n) for (int i=0;i<(int)(n);i++)
#define FOR(i,a,b) for (int i=(a);i<=(b);i++)
#define INIT(a,v) memset(a,v,sizeof(a))
#define SORT_UNIQUE(c) (sort(c.begin(),c.end()), c.resize(distance(c.begin(),unique(c.begin(),c.end()))))
template<class A, class B> A cvt(B x) { stringstream ss; ss<<x; A y; ss>>y; return y; }

typedef pair<int,int> PII;
typedef long long int64;

#define MOD 1000000007
#define N 10000000

int tests;
int p[N+1];
vector<int> kp[20];

int main() {
	freopen("homework.txt","r",stdin);
	freopen("homework.out","wb",stdout);
	int m=0;
	FOR (x,2,N) {
		p[x]=1;
		for (int d=2;d*d<=x;d++) {
			if (p[d]==1 && x%d==0) {
				int y=x/d;
				p[x]=p[y];
				if (y%d!=0) p[x]++;
				break;
			}
		}
		kp[p[x]].push_back(x);
	}
	scanf("%d",&tests);
	FOR (test,1,tests) {
		cerr << test << endl;
		int a,b,k,r;
		scanf("%d %d %d",&a,&b,&k);
		if (k>=20) r=0;
		else {
			auto lo = lower_bound(ALL(kp[k]),a);
			auto hi = upper_bound(ALL(kp[k]),b);
			r=hi-lo;
		}
		printf("Case #%d: %d\n",test,r);
	}
	return 0;
}
