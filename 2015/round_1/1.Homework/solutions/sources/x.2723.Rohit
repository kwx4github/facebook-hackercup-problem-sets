#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int i = 0; i <n; i++)
typedef long long ll;

bool prime[10000009];
int lim = 10000009;
vector<int> primes;

void seive(){
    rep(i, lim) if (i&1) prime[i] = true; else prime[i] = false;
    prime[2] = true;
    for (int i = 3; i < 350; i++){
        if (prime[i]){
            for (int j = i*i; j < lim; j+=2*i){
                prime[j] = false;
            }
        }
    }
    for (int i = 2; i < lim; i++)
        if (prime[i]) primes.push_back(i);
}

int main(){
	seive();
	int* primacity = new int[10000009];
	rep(i, 10000009) primacity[i] = 0;
	rep(i, primes.size()){
		int temp = primes[i];
		while(temp < 10000009){
			primacity[temp]++;
			temp+=primes[i];
		}
	}


	int t; cin >> t;
	rep(q, t){
		int a,b,k;
		cin >> a>>b>>k;
		int count = 0;
		for (int i = a; i<=b; i++){
			if (primacity[i] == k) count++;
		}

		cout << "Case #" << q+1 << ": " << count <<"\n";
		//if (found) cout << "Case #" << q+1 << ": " << "yes" <<"\n";
		//else cout << "Case #" << q+1 << ": " << "no" <<"\n";

	}
}