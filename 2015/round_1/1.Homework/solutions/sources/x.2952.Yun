#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <fstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <ctime> 
#include <cctype> 
#include <cassert>
using namespace std;

const int N = 10000002;
bool isPrime[10000002];
int primeCount[N];
void computePrime()
{
	memset(isPrime, true, sizeof(isPrime));
	memset(primeCount, 0, sizeof(primeCount));
	for (int i = 2; i*i < N; i++) {
		if (isPrime[i]) {
			assert(primeCount[i] == 0);
			primeCount[i] = 1;
			//cout << i << " ";
			for (int n = i * 2; n < N; n += i) {
				isPrime[n] = false;
				primeCount[n] += 1;
			}
		}
	}
}

int main()
{
	ifstream in("homework.txt");
	ofstream out("homework_output.txt");
	computePrime();
	int T;
	in >> T;
	int A, B, K;
	for (int t = 1; t <= T; t++)
	{
		in >> A >> B >> K;
		int res = 0;
		for (int i = A; i <= B; i++){
			if (primeCount[i] == K) {
				res++;
			}
		}
		out << "Case #" << t << ": " << res << endl;
		cout << "Case #" << t << ": " << res << endl;
	}
	
	return 0;
}