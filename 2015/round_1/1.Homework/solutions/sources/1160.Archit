#include<bits/stdc++.h>
using namespace std;

#define MAX 10000001
int primality[MAX];
int tree[MAX][12];

void update(int idx,int p)
{
    while(idx<MAX)
    {
        tree[idx][p]+=1;
        idx+=(idx&(-idx));
    }
}

int read(int idx,int p)
{
    int sum = 0;
    while(idx>0)
    {
        sum = sum + tree[idx][p];
        idx-=(idx&(-idx));
    }
    return sum;
}

void sieve()
{
    memset(primality,0,sizeof(primality));
    memset(tree,0,sizeof(tree));

    for(int i=2;i<MAX;i++)
    {
        if(primality[i]==0)
        {
            for(int j=i;j<MAX;j+=i)
                primality[j] +=1;
        }
    }
    for(int i=2;i<MAX;i++)
        update(i,primality[i]);

}

int main()
{
    sieve();

    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);

    int t,a,b;
    long k;

    scanf("%d",&t);

    for(int tst=1;tst<=t;tst++)
    {
        scanf("%d%d%ld",&a,&b,&k);

        printf("Case #%d: ",tst);
        if(k<1||k>10)
            printf("0\n");
        else
        {
            int ans = read(b,k) - read(a-1,k);
            printf("%d\n",ans);
        }

    }

    return 0;
}
