#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int const N = 10000000;

vector<int> primacity;
vector<vector<int>> cum_prim_n;

void init()
{
	primacity.resize(N+1, 0);
	for (int i = 2; i <= N; ++i )
		if (primacity[i] == 0) // prime
			for (int j = i; j <= N; j += i)
				++primacity[j];
	cum_prim_n.resize(9);
	for (int i = 1; i <= 8; ++i)
	{
		cum_prim_n[i].resize(N+1);
		for (int j = 2; j <= N; ++j)
			cum_prim_n[i][j] = cum_prim_n[i][j-1] + (primacity[j] == i);
	}
}

int main()
{
	init();
	int T;
	cin>>T;
	for (int z = 1, A, B, K; z <= T; ++z)
	{
		cin>>A>>B>>K;
		int res = K > 8 ? 0 : (cum_prim_n[K][B]-cum_prim_n[K][A-1]);
		cout<<"Case #"<<z<<": "<<res<<endl;
	}
	return 0;
}

