def gen_primes():
  D = {}  
  q = 2  
  while True:
    if q not in D:
      yield q        
      D[q * q] = [q]
    else:
      for p in D[q]:
        D.setdefault(p + q, []).append(p)
      del D[q]
    q += 1
ks = [0]*10000001
for p in gen_primes():
  if p > 10000000: break
  for i in range(p, 10000001, p):
    ks[i] += 1

_T = int(raw_input())
for _t in range(1, _T+1):
  A, B, K = map(int, raw_input().split())

  res = 0
  for x in range(A, B+1):
    if ks[x] == K: res += 1

  print 'Case #{}: {}'.format(_t, res)
