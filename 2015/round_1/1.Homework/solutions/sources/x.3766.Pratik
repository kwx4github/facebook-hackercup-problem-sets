#include<bits/stdc++.h>
using namespace std;
vector<int> primes;
vector<bool> candidates(10000001);
vector<int> primacity(10000001);

void prime_sieve(){
    fill(primacity.begin(), primacity.end(), 0);
    fill(candidates.begin(), candidates.end(), 1);

    for(int i = 2; i <= 10000; i++ ){
        if(candidates[i] == 1){
            for(int j = 2*i; j <= 10000000; j+= i){
                if(candidates[j] == 1){
                    candidates[j] = 0;
                }
                primacity[j]++;
            }
        }
    }
    for(int i = 2; i <= 10000000; i++)
        if(candidates[i])
            primacity[i]++;
    int count = 0;
    for(int i = 2; i <= 10000000; i++){
        if(candidates[i] == 1){
            primes.push_back(i);
            count++;
        }
    }
   // cout << "primes found: " <<count<<endl;
   // for(int i = 2; i < 101; i++)
    //cout<<i<<" "<<primacity[i]<<endl;
}
int main(){
    ifstream ip ("input.txt");
    ofstream op ("output.txt");
    prime_sieve();
    int t, case1 = 0, sum = 0;
    ip >> t;
    while(t--){
        case1++;
        int a, b, k, counter = 0 ;
        ip>>a>>b>>k;
        for(int i = a; i <= b;i++){
            if(primacity[i] == k){
                 counter++;
             }
        }
        op<<"Case #"<<case1<<": "<<counter<<endl;
        sum+= counter;
    }
    //cout << sum <<endl;
    return 0;
}
