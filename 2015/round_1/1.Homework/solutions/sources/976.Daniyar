import java.util.*;
import java.io.*;

public class A {
    FastScanner in;
    PrintWriter out;

    public static final int MAX = 10000000;

    public void solve() throws IOException {
        int[] cnt = new int[MAX + 1];
        for (int i = 2; i <= MAX; i++) {
            if (cnt[i] == 0) {
                for (int j = 2; i * j <= MAX; j++) {
                    cnt[i * j]++;
                }
                cnt[i] = 1;
            }
        }
        int t = in.nextInt();
        for (int i = 1; i <= t; i++) {
            int a = in.nextInt();
            int b = in.nextInt();
            int k = in.nextInt();
            int ans = 0;
            for (int j = a; j <= b; j++) {
                if (cnt[j] == k) {
                    ans++;
                }
            }
            out.println("Case #" + i + ": " + ans);
        }
    }

    public void run() {
        try {
            in = new FastScanner(new File("a.in"));
            out = new PrintWriter(new File("a.out"));
            solve();

            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    class FastScanner {
        BufferedReader br;
        StringTokenizer st;

        FastScanner(File f) {
            try {
                br = new BufferedReader(new FileReader(f));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }

        String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    public static void main(String[] arg) {
        new A().run();
    }
}