<?php
ini_set('memory_limit' , '2500M');
//$handle = fopen ("php://stdin","r");
$handle = fopen("homework_2.txt", "r");
//$handle = fopen("input.txt", "r");
$cases = trim(fgets($handle));


$sieve = sieve(10000000);
for ($z = 1; $z <= $cases; $z++) {

    $numbers = explode(" ", trim(fgets($handle)));
    $a = $numbers[0];
    $b = $numbers[1];
    $veces = $numbers[2];

    $casos[] = array($a,$b,$veces);
}
//echo 'Casos almacenados';

$a = 2;
$b = 10000000;
$veces = 1000000000;


$almacenados = array();
$resultado = array();
foreach($sieve as $primo => $value){
    //$prod = floor($a/$primo);
    $start = $primo;

    for($j=$start; $j<=$b; $j+=$primo)
    {
        if($j < $a){
            continue;
        }
        if($j > $b){
            break;
        }

        if(!isset($almacenados[$j])){
            $almacenados[$j] = 1;
        }
        else{
            $almacenados[$j]++;
        }

        //if($almacenados[$j] == $veces)
         //   $resultado++;
        //else if($almacenados[$j] == $veces+1)
        //    $resultado--;
    }
}



for($i=0;$i<count($casos);$i++){
    $resultado[$i] = 0;
}

//$resultado = 0;
foreach($almacenados as $key => $value){

    foreach($casos as $numCaso => $valores){
        if($value == $valores[2] && $key >= $valores[0] && $key <= $valores[1]){
            $resultado[$numCaso]++;
        }
    }

}


foreach($casos as $numCaso => $valores){
    echo 'Case #'.($numCaso+1).': '.$resultado[$numCaso]."\n";
}



function sieve($n)
{
   $prime=array();
    for($i = 0;$i<=$n;$i++){
        $prime[$i] = true;
    }

   unset($prime[0]);
   unset($prime[1]);
   $m=sqrt($n);

   for ($i=2; $i<=$m; $i++)
      if ($prime[$i])
         for ($k=$i*$i; $k<=$n; $k+=$i)
            unset($prime[$k]);

   return $prime;
}


?>