def primes(n):
    if n<=2:
        return []
    sieve=[True] * (n+1)
    for x in range(3, int(n**0.5) + 1, 2):
        for y in range(3, (n//x) + 1, 2):
            sieve[(x*y)] = False

    return [2] + [i for i in range(3, n, 2) if sieve[i]]


def prime_factors(n, primes):
    num_factors = {}
    for num in xrange(2, n):
        num_factors[num] = 0

    for prime in primes:
        for num in xrange(prime, n, prime):
            divides = False
            origin = num
            while num % prime == 0:
                divides = True
                num = num / prime
            if divides:
                num_factors[origin] += 1

    return num_factors

def how_many_range (x, y, k):
    global pre_factors
    count = 0
    for i in xrange(x, y + 1):
        if pre_factors[i] == k:
            count += 1
    return count


limit = 10 ** 7 + 1

pre_primes = primes(limit)
pre_factors = prime_factors(limit, pre_primes)




output = []

with open('homework.txt', 'r') as f:
    T = int(f.readline().rstrip())

    for i in xrange(T):
        a, b, k = [int(x) for x in f.readline().rstrip().split()]
        res = "Case #%d: %s\n" % (i + 1, how_many_range(a, b, k))
        output.append(res)

with open('output.txt', 'w') as f:
    f.writelines(output)



