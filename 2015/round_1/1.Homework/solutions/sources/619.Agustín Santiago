#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <queue>
#include <vector>
#include <set>
#include <map>
#include <cassert>

using namespace std;

#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n);i++)
#define dforn(i,n) for(int i=(n)-1;i>=0;i--)

#define forall(it,c) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define dforall(it,c) for(typeof((c).rbegin()) it = (c).rbegin(); it != (c).rend(); it++)

#define esta(x,c) ((c).find(x) != (c).end())

#define all(c) (c).begin(), (c).end()

typedef long long tint;
typedef pair<int,int> pint;

const int MAXN = 11000000;

int primacity[MAXN];

void initPrimacity()
{
    memset(primacity, 0 ,sizeof(primacity));
    forsn(i, 2, MAXN)
    if (primacity[i] == 0)
    {
        primacity[i] = 1;
        for (int j = 2*i; j < MAXN; j += i)
            primacity[j]++;
    }
}

int main()
{
    initPrimacity();
    int TT; cin >> TT;
    forn(tt,TT)
    {
        int a,b,k; cin >> a >> b >> k;
        assert(a < MAXN);
        assert(b < MAXN);
        int res = 0;
        forsn(i, a, b+1)
            res += primacity[i] == k;
        cout << "Case #" << tt+1 << ": " << res << endl;
    }
    return 0;
}
