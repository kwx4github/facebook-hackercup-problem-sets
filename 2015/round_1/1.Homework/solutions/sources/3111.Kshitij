#include <bits/stdc++.h>
using namespace std;

const int MAX = 10000000;

int not_prime[MAX];
int primacity[MAX];
int dp[MAX][10];

int main() {
    ios_base::sync_with_stdio(false);
    cout.precision(30);

    for(long long i = 2; i < MAX; ++i)
        if(!not_prime[i]) {
            primacity[i] += 1;
            for(long long j = 2 * i; j <= MAX; j += i) {
                not_prime[j] = 1;
                primacity[j] += 1;
            }
        }

    for(int i = 2; i <= MAX; ++i)
        for(int j = 0; j <= 8; ++j) {
            dp[i][j] = dp[i - 1][j];
            if(j == primacity[i])
                ++dp[i][j];

            // cout << "i = " << i << ", j = " << j << ", dp = " << dp[i][j] << endl;
        }
    /*
       for(int i = 2; i < MAX; ++i) {
       cout << "i = " << i << ", primacity = " << primacity[i] << endl;
       }
     */

    int T;
    cin >> T;
    for(int test = 1; test <= T; ++test) {
        cout << "Case #" << test << ": ";

        int A, B, K;
        cin >> A >> B >> K;
        if(K > 8) {
            cout << "0" << endl;
            return 0;
        }

        cout << dp[B][K] - dp[A - 1][K] << endl;
    }

    return 0;
}
