//#include <bits/stdc++.h>
#include <iostream>
#include <cstring>

using namespace std;

const int maxp = 1000000, maxr = 10000100, maxnum = 10;

int pr[maxp], h[maxr][maxnum];
bool isp[maxr];

int main() {
	memset(isp, 1, sizeof(isp));
	isp[0] = isp[1] = 0;
	int pn = 0;
	for (int i = 2; i * i < maxr; ++i)
		if (isp[i]) {
			for (int j = i * i; j < maxr; j += i) {
				isp[j] = 0;
			}
		}
	for (int i = 2; i < maxr; ++i)
		if (isp[i])
			pr[pn++] = i;

	for (int i = 2; i < maxr; ++i) {
		memcpy(h[i], h[i - 1], sizeof(h[i]));
		if (isp[i]) {
			h[i][1]++;
		} else {
			int ans = 0, ti = i;
			for (int j = 0; j < pn && pr[j] * pr[j] <= ti; ++j) {
				if (ti % pr[j] == 0) {
					while (ti % pr[j] == 0) {
						ti /= pr[j];
					}
					ans++;
				}
			}
			if (ti > 1)
				ans++;
			h[i][ans]++;
		}
	}


	int Tn;
	scanf("%d", &Tn);
	for (int Tc = 1; Tc <= Tn; ++Tc) {
		int a, b, k;
		scanf("%d%d%d", &a, &b, &k);
		int ans = 0;
		if (k >= maxnum) {
			ans = 0;
		} else {
			ans = h[b][k] - h[a - 1][k];
		}
		printf("Case #%d: %d\n", Tc, ans);
	}

	return 0;
}
