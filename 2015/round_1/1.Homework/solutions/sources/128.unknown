#!/usr/bin/python

"""
 Author: Veselin Georgiev
 Problem: "Homework" (A)
 Contest: Facebook Hacker Cup 2015
"""


def erathostenesSieve(maxn):
	sieve = [ False ] * (maxn + 2)
	
	i = 2
	while i*i <= maxn:
		if not sieve[i]: 
			j = i*2
			while j <= maxn:
				sieve[j] = True
				j += i
		i += 1
	return [i for i in xrange(2, maxn + 1) if (not sieve[i])]

MAX = 10**7

primes = erathostenesSieve(MAX)
precalc = [0] * (MAX + 1)


T = int(raw_input().strip())

answer = 0
A = 0
B = 0
K = 0

def bt(lastIdx, product, primacity):
	if primacity > 8: return
	if product > MAX: return
	global precalc
	precalc[product] = primacity
	
	if lastIdx + 1 >= len(primes): return
	for idx in xrange(lastIdx + 1, len(primes)):
		if product * primes[idx] > MAX: return
		p = product
		while True:
			p *= primes[idx]
			if p > MAX: break
			bt(idx, p, primacity + 1)

def solve(a, b, k):
	count = 0
	for i in xrange(a, b + 1):
		if precalc[i] == k:
			count += 1
	return count

bt(-1, 1, 0)

for tc in xrange(1, T + 1):
	a, b, k = map(int, raw_input().strip().split())
	answer = 0
	print "Case #%d: %d" % (tc, solve(a, b, k))
