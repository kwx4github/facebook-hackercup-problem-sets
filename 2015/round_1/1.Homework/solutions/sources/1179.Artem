import java.io.*;
import java.util.*;

public class Homework {

	FastScanner in;
	PrintWriter out;
	
	int MAX = 10_000_000;
	int[] prime;
	
	void precalc() {
		prime = new int[MAX + 1];
		
		for (int i = 2; i <= MAX; i++) {
			if (prime[i] == 0) {
				for (int j = i; j <= MAX; j += i) {
					prime[j]++;
				}
			}
		}
	}

	void solve() {
		int a = in.nextInt(), b = in.nextInt();
		int k = in.nextInt();
		int ans = 0;
		for (int i = a; i <= b; i++) {
			if (prime[i] == k) {
				ans++;
			}
		}
		out.println(ans);
	}

	void run() {
		try {
			in = new FastScanner("input.txt");
			out = new PrintWriter("output.txt");
			precalc();
			int T = in.nextInt();
			for (int test = 1; test <= T; test++) {
				out.print(String.format("Case #%d: ", test));
				solve();
			}
			out.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	class FastScanner {
		BufferedReader br;
		StringTokenizer st;

		public FastScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		public FastScanner(String s) {
			try {
				br = new BufferedReader(new FileReader(s));
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}

		String nextToken() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(nextToken());
		}

		long nextLong() {
			return Long.parseLong(nextToken());
		}

		double nextDouble() {
			return Double.parseDouble(nextToken());
		}
	}

	public static void main(String[] args) {
		new Homework().run();
	}
}
