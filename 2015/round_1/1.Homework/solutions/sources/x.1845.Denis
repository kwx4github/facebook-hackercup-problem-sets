package org.denisg.facebook2015.round1;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class ProblemA {

	public static void main(String[] args) throws FileNotFoundException {

		Scanner in = new Scanner(new File("input.txt"));
		PrintStream out = new PrintStream(new File("output.txt"));
		try {
			int t = in.nextInt();
			int[] primacity = calculatePrimacity(calculatePrimes());
			for (int i = 1; i <= t; i++) {
				out.println("Case #" + i + ": " + solve(in.nextInt(), in.nextInt(), in.nextInt(), primacity));
			}
		} finally {
			in.close();
			out.close();
		}

	}

	public static List<Integer> calculatePrimes() {
		List<Integer> primes = new ArrayList<Integer>();
		// 10000 > sqrt(10^7)
		for (int number = 2; number <= 10000; number++) {
			boolean isPrime = true;
			for (int prime : primes) {
				if (number % prime == 0) {
					isPrime = false;
					break;
				}
			}
			if (isPrime) {
				primes.add(number);
			}
		}
		return primes;
	}

	public static int[] calculatePrimacity(List<Integer> primes) {
		int[] primacity = new int[10000001];
		
		for (int prime : primes) {
			for (int i = prime; i < primacity.length; i += prime) {
				primacity[i]++;
			}
		}
		
		return primacity;
	}

	public static int solve(int a, int b, int k, int[] primacity) {
		int count = 0;
		for (int i = a; i <= b; i++) {
			if (primacity[i] == k) {
				count++;
			}
		}
		return count;
	}

}
