#include <stdio.h>
#include <string.h>
#include<bits/stdc++.h>
using namespace std;


vector<int> prime[10000002];
bool arr[10000002];

// marks all mutiples of 'a' ( greater than 'a' but less than equal to 'n') as 1.
void markMultiples(bool arr[], int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
		prime[num].push_back(a);
        arr[ num-1 ] = 1; // minus 1 because index starts from 0.
        ++i;
    }
}

// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0
        
        memset(arr, 0, sizeof(arr));

        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i=1; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
                prime[i+1].push_back(i+1);
                //printf("%d ", i+1);
                markMultiples(arr, i+1, n);
            }
        }
    }
}

// Driver Program to test above function
int main()
{
    int n = 10000001;
    //printf("Following are the prime numbers below %d\n", n);
    SieveOfEratosthenes(n);
    int t;
    printf("done\n");
    ifstream cin("in1.txt");
    ofstream cout("out.txt");
    cin>>t;
    int r = 0;
    while(t--)
    {
		r++;
		cout<<"Case #"<<r<<": ";
		int a,b,k;
		cin>>a>>b>>k;
		int ans  = 0;
		for(int i=a;i<=b;i++)
		{
			if(prime[i].size() == k)
			ans++;
		}
		cout<<ans<<endl;
	}
	printf("completed\n");
	scanf("%d",&t);
    return 0;
}
