

def primes2(n):
    """ Input n>=6, Returns a list of primes, 2 <= p < n """
    n, correction = n-n%6+6, 2-(n%6>1)
    sieve = [True] * (n/3)
    for i in xrange(1,int(n**0.5)/3+1):
        if sieve[i]:
            k=3*i+1|1
            sieve[      k*k/3      ::2*k] = [False] * ((n/6-k*k/6-1)/k+1)
            sieve[k*(k-2*(i&1)+4)/3::2*k] = [False] * ((n/6-k*(k-2*(i&1)+4)/6-1)/k+1)
    return [2,3] + [3*i+1|1 for i in xrange(1,n/3-correction) if sieve[i]]

def pre():
    for i  in xrange(len(primes)):
        tmp=primes[i]
        while tmp<=10000000:
            allnum[tmp]+=1
            tmp+=primes[i]
    
def solve():
    c=0
    for i in range(a,b+1):
        if allnum[i]==k:
            c+=1
    return c
    

fin=open('../in','r') ; fout=open('../out','w')
cases=int(fin.readline().strip())
primes=primes2(5000000)
allnum={k: 0 for k in range(10000001)}
pre()
for case in range(1,cases+1):
    print case
    a,b,k=[int(x) for x in fin.readline().strip().split(' ')]
    fout.write("Case #"+str(case)+": "+str(solve())+"\n")