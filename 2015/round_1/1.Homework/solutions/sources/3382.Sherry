#include <iostream>
#include <vector>

using namespace std;

const int MINN = 2;
const int MAXN = 10000005;
const int MAXK = 1000000000;

vector<bool> isComposite(MAXN);
vector<int> primacity(MAXN);

void
makePrimes()
{
    for (int i = 2; i < MAXN;) {
        primacity[i] = 1;

        for (int j = i+i; j < MAXN; j += i) {
            primacity[j] += (isComposite[j] = true);
        }
        while (isComposite[++i]);
    }
}

int
solve(int a, int b, int k)
{
    int c = 0;

    for (int i = a; i <= b; ++i) {
        c += (k == primacity[i]);
    }

    return c;
}

int
main()
{
    makePrimes();

    int t;
    cin >> t;
    int a, b, k;
    for (int _t = 1; _t <= t; ++_t) {
        cin >> a >> b >> k; 
        cout << "Case #" << _t << ": " << solve(a, b, k) << "\n";
    }
    return 0;
}
