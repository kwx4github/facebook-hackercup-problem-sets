#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int prim[10000007];
int ile[10][102];
int il[10];
vector<tuple<int, int, int> > pytania;
vector<int > places;
int main(){
ios_base::sync_with_stdio(0);
    for(int i = 2; i <= 10000005; ++i){
        
        if(!prim[i]) {
            prim[i] = 1;
            for(int k = i *2; k <= 10000005; k+=i)
                prim[k]++;
        }
//         if(i < 100) cout << i << " " << prim[i] << "\n";
    }
    int t, a, b, c;
    cin >> t;
    for(int tt = 0; tt  <t ;++tt) {
        cin >> a >> b >> c;
        pytania.push_back(make_tuple(a-1, b, c));
        places.push_back(a-1);
        places.push_back(b);
    }
    sort(places.begin(), places.end());
    int k = 0;
    for(int i = 1; i <10000005 ;++i) {
        il[prim[i]]++;
        while(k < places.size() && places[k] == i){
            for(int c = 1; c <=8; ++c) {
                ile[c][k] = il[c];
            }
            k++;
        }
    }
    for(int j = 0; j < pytania.size(); ++j) {
        a = get<0>(pytania[j]);
        b = get<1>(pytania[j]);
        c = get<2>(pytania[j]);
        int ans = 0;
//         for(int i = a; i <= b; ++i) {
//             if(prim[i] == c)
//                 ++ans;
//         }
        
        for(int i = 0; i < (int)places.size();++i) {
//             cout << "przemierzam "<<i << " " << places[i] << " " << c << " " << ile[c][i] << "\n";
            if(places[i] == a){
//                 cout << "bum" << "\n";
                ans -=ile[c][i];
                break;
            }}
        for(int i = 0; i < (int)places.size();++i) {
//         cout << "przemierzam "<<i << " " << places[i] << " " << c << " " << ile[c][i] << "\n";
            if(places[i] == b){
//                 cout << "BAM" << "\n";
                ans +=ile[c][i];
                break;
            }
        }
        cout << "Case #"<<j+1<<": "<<ans<<"\n";
    }
    
    
    return 0;
}