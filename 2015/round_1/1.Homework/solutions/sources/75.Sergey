#if 1
#include <functional>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <sstream>
#include <numeric>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <list>
 
using namespace std;
 
typedef long long LL;
typedef long double LD;
typedef pair<int, int> pii;
 
const LD eps = 1e-9;
const LD pi = acos(-1.0);
const LL inf = 1e+9;
 
#define mp make_pair
#define pb push_back
#define X first
#define Y second
 
#define dbg(x) { cerr << #x << " = " << x << endl; }
 
// extended template
#pragma comment(linker, "/STACK:36777216")
typedef vector<int> vi;
typedef vector<vi> vvi;
 
#define forn(i, n) for (int i = 0; i < n; ++i)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
 
template<typename T> istream & operator >> (istream &, vector<T> &);
template<typename T> ostream & operator << (ostream &, const vector<T> &);
 
#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;
 
#define NAME "improvements"

const int maxn = 1e7 + 100;
vi divs(maxn, -1);
vi prms(maxn, -1);

int f[100];

int prm(int x)
{
    int fs = 0;
    while (x > 1)
    {
        f[fs++] = divs[x];
        x /= divs[x];
    }
    int res = 0;
    forn(i, fs)
        res += i == 0 || f[i] != f[i - 1];
    return res;
}

void init()
{
    for (int i = 2; i < maxn; ++i)
        if (divs[i] == -1)
            for (int j = i; j < maxn; j += i)
                if (divs[j] == -1)
                    divs[j] = i;

    for (int i = 2; i < maxn; ++i)
        prms[i] = prm(i);
}

int solve()
{
    int a, b, k; cin >> a >> b >> k;

    int res = 0;
    for (int i = a; i <= b; ++i)
        res += prms[i] == k;

    return res;
}
 
int main()
{
    START
    // freopen(NAME ".in", "r", stdin); freopen(NAME ".out", "w", stdout);
    freopen("homework.txt", "r", stdin); freopen("homework_out.txt", "w", stdout);
 
    ios_base::sync_with_stdio(false);

    cerr << "init...";
    init();
    cerr << "ready!" << endl;

    int t; cin >> t;
    forn(i, t)
        cout << "Case #" << i + 1 << ": " << solve() << endl;
 
    END
    return 0;
}
/*******************************************
*******************************************/
 
template<typename T> istream & operator >> (istream &is, vector<T> &v)
{
    forn(i, v.size())
        is >> v[i];
    return is;
}
template<typename T> ostream & operator << (ostream &os, const vector<T> &v)
{
    forn(i, v.size())
        os << v[i] << " ";
    return os;
}
#endif