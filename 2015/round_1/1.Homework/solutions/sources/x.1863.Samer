#include <iostream>
#include <vector>
#include <deque>
#include <cmath>
#include <fstream>
using namespace std;

vector<int> primeston(int n)
{
    int kSize = floor(0.5 * (n-3)) +1;
    vector<int> primes;
    primes.push_back(2);
    deque<bool> is_prime(kSize,true);

    for(long long i=0; i<kSize; ++i)
    {
        if(is_prime[i])
        {
            int p=(i*2)+3;
            primes.push_back(p);
            for(long long j=((i*i)*2)+6*i + 3; j<kSize; j += p)
            {
                is_prime[j]=false;
            }
        }
    }
    return primes;
}

int primacity[10000001];

int main()
{
    freopen("homework.txt","r",stdin);
    freopen("homework_out.txt","w",stdout);
    vector<int> primes = primeston(3200);
    //cout << primes.size() << endl;

    int kCount;
    //int nums=0;
    for(int x=2; x<=10000000; ++x)
    {
        kCount=0;
        for(unsigned int i=0; i<primes.size(); ++i)
        {
            int qi = x/primes[i];
            if(qi*primes[i] == x)
                kCount++;
        }
        primacity[x]=kCount;
    }


    int T;
    cin >> T;
    int A,B,K;
    for(int t=0; t<T; t++)
    {
        cin >> A >> B >> K;

        /*int kCount;
        int nums=0;
        for(int x=A; x<=B; ++x)
        {
            kCount=0;
            for(unsigned int i=0; i<primes.size(); ++i)
            {
                int qi = x/primes[i];
                if(qi*primes[i] == x)
                    kCount++;
            }
            if(kCount==K)
                nums++;
        }*/

        int nums=0;
        for(int x=A; x<=B; ++x)
        {
            if(primacity[x]==K)
                nums++;
        }
        cout << "Case #" << t+1 << ": " << nums << endl;
    }
    return 0;
}
