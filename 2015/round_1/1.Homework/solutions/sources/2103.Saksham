
#include <bits/stdc++.h>

using namespace std;
typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef vector<LL> VLL;
typedef pair<int, int> PI;

#define SI(x) scanf("%d", &x)
#define SLL(x) scanf("%lld", &x)
#define SORTV(v) sort(v.begin(), v.end())
#define EACH(it, v) for(__typeof(v.begin()) it(v.begin()); it != v.end(); it++)
#define pb(x) push_back(x)
#define mp(x, y) make_pair(x, y)
#define f first
#define s second

template<class T> void print_array(T a[], int size) { for(int i=0; i<size; i++) cout<<a[i]<<" "; cout<<endl; }

template<class T> void print_array_v(T &a) { int size = a.size(); for(int i=0; i<size; i++) cout<<a[i]<<" "; cout<<endl; }

VI p(10000100, 1);
VI k(10000100, 0);
vector< VI > cnt(10);

int main()
{
	k[0] = 0;
	k[1] = 1;
	p[0] = p[1] = 0;
	for(int i=2; i<1e7+100; i++)
		if(p[i] == 1)
		{
			for(int j=i; j<1e7+100; j+=i)
			{
				p[j] = 0;
				k[j]++;
			}
		}
	for(int i=2; i<1e7+100; i++)
		cnt[k[i]].pb(i);

	int T;
	scanf("%d", &T);
	for(int t=1; t<=T; t++)
	{
		int a, b, k;
		SI(a); SI(b); SI(k);
		VI::iterator it1, it2;
		int ans = 0;
		if(k<9)
		{
			it2 = upper_bound(cnt[k].begin(), cnt[k].end(), b);
			it1 = lower_bound(cnt[k].begin(), cnt[k].end(), a);
			ans = it2-it1;
		}
		printf("Case #%d: %d\n", t, ans);
	}
	return 0;
}
