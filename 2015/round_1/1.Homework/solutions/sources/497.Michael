import java.io.InputStreamReader;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.io.FileInputStream;
import java.util.StringTokenizer;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream;
		try {
			inputStream = new FileInputStream("homework.in");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("homework.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Homework solver = new Homework();
		int testCount = Integer.parseInt(in.next());
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}
}

class Homework {
    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int a = in.nextInt();
        int b = in.nextInt();
        int k = in.nextInt();
        int[] divisor = precalc(b + 1);
        int answer = 0;
        for (int i = a; i <= b; i++) {
            if (primality(i, divisor) == k) {
                ++answer;
            }
        }
        out.println("Case #" + testNumber + ": " + answer);
    }

    private int primality(int n, int[] divisor) {
        int ans = 0;
        while (n > 1) {
            int p = divisor[n];
            ans++;
            while (n % p == 0) {
                n /= p;
            }
        }
        return ans;
    }

    private int[] precalc(int n) {
        n = Math.max(n, 10);
        int[] divisor = new int[n];
        for (int i = 2; i < n; i++) {
            if (divisor[i] == 0) {
                for (int j = i; j < n; j += i) {
                    divisor[j] = i;
                }
            }
        }
        return divisor;
    }
}

class InputReader {
    BufferedReader br;
    StringTokenizer st;

    public InputReader(InputStream stream) {
        br = new BufferedReader(new InputStreamReader(stream));
    }

    public String next() {
        return nextToken();
    }

    public String nextToken() {
        while (st == null || !st.hasMoreTokens()) {
            String line = null;
            try {
                line = br.readLine();
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
            if (line == null) {
                return null;
            }
            st = new StringTokenizer(line);
        }
        return st.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(nextToken());
    }

}

