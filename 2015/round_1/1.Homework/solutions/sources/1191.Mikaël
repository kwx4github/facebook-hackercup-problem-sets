#include <iostream>

using namespace std;

int A, B, K;
int pc;

int prim[1000000];
int num[10000000];

int max_val = 10000000;

void backtrack(int value, int i)
{
    if (i == pc) return;
    
    int maxi = max_val / prim[i];
    int old = value;
  
    while (value <= maxi)
    {
        backtrack(value, i+1);    
        
        value *= prim[i];
        num[value] = num[old];
        if (i != pc-1) num[value]++;           
    }
}

void initialize()
{
    num[0] = 0;
    num[1] = 0;
    pc = 0;
    
    for (int i = 2; i <= max_val; i++) num[i] = 0;
    
    int n;
    for (int i = 2; i <= max_val; i++)
    {        
        if (num[i] != 0) continue;
        
        num[i] = 1;
        prim[pc++] = i;
        backtrack(i, 0);
    }
}

void RunInstance()
{
    cin >> A >> B >> K;
    
    if (K > 664580)
    {
        cout << 0 ; 
        return;
    }
    
    int cnt = 0;
    for (int i = A; i <= B; i++)
    {
        if (num[i] == K) cnt++;
    }
    
    cout << cnt ;
}

// ============================ Nothing to change here ============================ //

int main() 
{
    int num_of_instances = 0;
    cin >> num_of_instances;
    
    initialize();
    
    for (int i = 1; i <= num_of_instances; ++i) 
    {
        cout << "Case #" << i << ": ";
        RunInstance();
        cout << endl;
    }
}