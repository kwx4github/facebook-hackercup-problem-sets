import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class A {

	public static void main(String[] args) throws IOException {
		int[] v = new int[10000005];
		for (long i = 2; i < v.length; i++) {
			if (v[(int) i] == 0) {
				for (long j = i; j < v.length; j += i) {
					v[(int) j]++;
				}
			}
		}
		br = new BufferedReader(new FileReader("A.in"));
		out = new PrintWriter("A.out");
		sc = new StringTokenizer("");
		int tc = nxtInt();
		for (int i = 1; i <= tc; i++) {
			int a = nxtInt();
			int b = nxtInt();
			int k = nxtInt();
			int res = 0;
			for (int j = a; j <= b; j++) {
				if (v[j] == k)
					res++;
			}
			out.println("Case #" + i + ": " + res);
		}
		br.close();
		out.close();
	}

	static BufferedReader br;
	static StringTokenizer sc;
	static PrintWriter out;

	static String nxtTok() throws IOException {
		while (!sc.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			sc = new StringTokenizer(s.trim());
		}
		return sc.nextToken();
	}

	static int nxtInt() throws IOException {
		return Integer.parseInt(nxtTok());
	}

	static long nxtLng() throws IOException {
		return Long.parseLong(nxtTok());
	}

	static double nxtDbl() throws IOException {
		return Double.parseDouble(nxtTok());
	}

	static int[] nxtIntArr(int n) throws IOException {
		int[] a = new int[n];
		for (int i = 0; i < n; i++)
			a[i] = nxtInt();
		return a;
	}

	static long[] nxtLngArr(int n) throws IOException {
		long[] a = new long[n];
		for (int i = 0; i < n; i++)
			a[i] = nxtLng();
		return a;
	}

	static char[] nxtCharArr() throws IOException {
		return nxtTok().toCharArray();
	}
}