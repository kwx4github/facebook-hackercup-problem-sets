import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;


public class Homework {

	static boolean[] primes = new boolean[ (int)5e6 + 1 ];//false -> prime, true -> composite
	static int[] primacity = new int[ (int)1e7 + 1 ];
	
	public static void main(String[] args) throws IOException {
		BufferedReader input = new BufferedReader( new FileReader( "homework.txt" ) );
		BufferedWriter output = new BufferedWriter( new FileWriter( "out.txt" ) );
		
		int i, j;
		for( i = 2; i < primes.length; i++ ){
			if( !primes[i] && checkPrime(i) ){	
				primacity[i]++;
				for( j = 2*i; j < primes.length; j += i ){
					primes[j] = true;
					primacity[j]++;
				}
				for( ; j < primacity.length; j += i )
					primacity[j]++;
			}
		}
		
		int T = Integer.parseInt( input.readLine() );
		int nums[];
		int cnt;
		for( i = 1; i <= T; i++ ){
			nums = readNums( input.readLine() );
			cnt = 0;
			for( j = nums[0]; j <= nums[1]; j++ )
				if( primacity[j] == nums[2] ) cnt++;
			output.append( "Case #" + i + ": " + cnt + "\n");
		}
		
		input.close();
		output.close();
	}
	
	public static int[] readNums( String str ){
		String[] strs = str.split(" ");
		int[] nums = new int[ strs.length ];
		for( int i = 0; i < strs.length; i++ )
			nums[i] = Integer.parseInt( strs[i] );
		return nums;
	}
	
	public static boolean checkPrime( int n ) {
	    if(n == 2 || n == 3) return true;
	    int aux = (int)Math.sqrt(n) + 1;
	    for(int i = 6; i <= aux; i += 6) {
	        if( ( n % (i-1) == 0 ) || ( n % (i+1) == 0 ) ) return false;
	    }
	    return true;
	}
	
}
