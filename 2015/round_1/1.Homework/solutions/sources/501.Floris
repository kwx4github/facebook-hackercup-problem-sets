__author__ = 'fkint'


def find_left(arr, A):
    """
    :param arr:
    :param A:
    :return: the lowest index where arr[i]>=A
    """
    if arr[0] >= A:
        return 0
    if arr[-1] <= A:
        return len(arr)
    left = 0
    right = len(arr)
    while left < right - 1:
        mid = (left + right + 1) // 2
        if arr[mid] < A:
            left = mid
        elif arr[mid] > A:
            right = mid
        else:
            return mid
    return right


def find_right(arr, B):
    """
    :param arr: array
    :param B: upper bound
    :return: the highest index where arr[i]<=B
    """
    if arr[-1] <= B:
        return len(arr) - 1
    if arr[0] > B:
        return -1
    left = 0
    right = len(arr)
    while left < right - 1:
        mid = (left + right) // 2
        if arr[mid] < B:
            left = mid
        elif arr[mid] > B:
            right = mid
        else:
            return mid
    return left


assert (find_left([1, 2, 3, 4], 5) == 4)
assert (find_left([1, 2, 3, 4], 3) == 2)
assert (find_left([1, 2, 3, 4], -1) == 0)
assert (find_left([1, 5, 10, 15], 7) == 2)

assert (find_right([1, 2, 3, 4], 0) == -1)
assert (find_right([1, 2, 3, 4], 5) == 3)
assert (find_right([1, 2, 3, 4], 3) == 2)
assert (find_right([1, 5, 10, 15], 7) == 1)

NB_PRIMES = 10 ** 4 + 2
MAX_NUM = 10 ** 7 + 2
non_prime = [False] * MAX_NUM

primacity = [0] * MAX_NUM
current_prod = 1

for current_num in range(2, MAX_NUM):
    if non_prime[current_num]:
        continue
    for j in range(current_num, MAX_NUM, current_num):
        non_prime[j] = True
        primacity[j] += 1

primacity_by_nb = dict();
for i in range(len(primacity)):
    p = primacity[i]
    if p in primacity_by_nb:
        primacity_by_nb[p].append(i)
    else:
        primacity_by_nb[p] = [i]


def count(K, A, B):
    if K not in primacity_by_nb:
        return 0
    arr = primacity_by_nb[K]
    if len(arr) == 0:
        return 0
    a = find_left(arr, A)
    b = find_right(arr, B)
    if a > b:
        return 0
    return b - a + 1


import sys

lines = sys.stdin.readlines()
T = int(lines[0])
for curr_case in range(1, T + 1):
    A, B, K = [int(x) for x in lines[curr_case].split()]
    print("Case #" + str(curr_case) + ": " + str(count(K, A, B)))
