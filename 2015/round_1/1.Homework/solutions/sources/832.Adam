#include <cstdio>
#include <vector>

using namespace std;

#define MAX_PRIME 11000000

bool is_composite[MAX_PRIME];
int primacity[MAX_PRIME];
vector<int>primes;
int primacity_count[11][MAX_PRIME+1];

int main(){
	for(long long int i=2;i<MAX_PRIME;i++){
		if(!is_composite[i]){
			primes.push_back(i);
			for(long long int j=i*i;j<MAX_PRIME;j+=i){
				is_composite[j]=1;
			}
		}
	}
	for(int i=0;i<primes.size();i++){
		for(int j=primes[i];j<MAX_PRIME;j+=primes[i]){
			primacity[j]++;
		}
	}
	for(int i=0;i<11;i++){
		primacity_count[i][0]=0;
		for(int j=0;j<MAX_PRIME;j++){
			primacity_count[i][j+1]=primacity_count[i][j]+(primacity[j]==i);
		}
	}
	int t;
	scanf("%d",&t);
	for(int tc=1;tc<=t;tc++){
		printf("Case #%d: ",tc);
		int a,b,k;
		scanf("%d %d %d",&a,&b,&k);
		if(k>10){
			printf("0\n");
			continue;
		}
		printf("%d\n",primacity_count[k][b+1]-primacity_count[k][a]);
	}
}
