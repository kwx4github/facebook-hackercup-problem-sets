#include<bits/stdc++.h>

using namespace std;
 
#define FOR(i,a,b) for(ll i=a;i<b;i++)
#define For(i,a,b) for(int i=a-1;i>=0;i--)
#define K 10000000LL
#define L 400
#define ll long long
#define s1(a) scanf("%d",&a);
#define s2(a) scanf("%lld",&a);
#define s3(a,b) scanf("%lld%lld",&a,&b);
#define s4(a,b,c) scanf("%lld%lld%lld",&a,&b,&c);
#define pb push_back
#define mp make_pair
#define F first
#define S second 
/*******************************MAIN CODE STARTS*******************************/
vector<ll> pr,ha[9];
ll a,b,ka;

int bin_lesse(int low,int high,ll key,ll k)
{
	if(low>high)
	{
		//cout<<low<<' '<<high<<'\n';
		if(low==ha[k].size())
			--low;
		while(ha[k][low]<key)
		{
			if(low!=ha[k].size()-1)
				++low;
			else
				break;
		}
		while(ha[k][low]>key)
		{
			if(low!=0)
				--low;
			else
				break;
		}
		if(low==0 && ha[k][low]>key)
			return -1;
		return low;
	}
	int mid=(high+low)/2;
	if(ha[k][mid]==key)
	{
		//cout<<mid<<'\n';
		//cout<<mid<<'\n';
		return mid;
	}
	else if(ha[k][mid]>key)
		return bin_lesse(low,mid-1,key,k);
	else if(ha[k][mid]<key)
		return bin_lesse(mid+1,high,key,k);
}

int bin_less(int low,int high,ll key,ll k)
{
	if(low>high)
	{
		//cout<<low<<' '<<high<<'\n';
		if(low==ha[k].size())
			--low;
		while(ha[k][low]<key)
		{
			if(low!=ha[k].size()-1)
				++low;
			else
				break;
		}
		while(ha[k][low]>key)
		{
			if(low!=0)
				--low;
			else
				break;
		}
		if(low==0 && ha[k][low]>key)
			return -1;
		return low;
	}
	int mid=(high+low)/2;
	if(ha[k][mid]==key)
	{
		//cout<<mid<<'\n';
		//cout<<mid<<'\n';
		return (mid-1);
	}
	else if(ha[k][mid]>key)
		return bin_less(low,mid-1,key,k);
	else if(ha[k][mid]<key)
		return bin_less(mid+1,high,key,k);
}

void precompute()
{
	int *h;
	h=new int[K+1];
	FOR(i,2,K+1)
		h[i]=0;
	h[1]=1;
	FOR(i,2,K)
	{
		if(h[i]==0)
		{
		pr.pb(i);
		//cout<<i<<'\n';
		for(int j=2;;j++)
		{
			ll k=i*j;
			if((k)>K)
				break;
			//cout<<i*j<<'\n';
			//cout<<k<<'\n';
			h[k]=1;
		}
		}
	}
	FOR(i,2,K+1)
		h[i]=0;
	FOR(i,0,pr.size())
	{
		for(int j=1;;j++)
		{
			ll k=pr[i]*j;
			if((k)>K)
				break;
			//cout<<i*j<<'\n';
			++h[k];
		}
	}
	//cout<<pr.size()<<'\n';
	FOR(i,2,K+1)
		ha[h[i]].pb(i);
}

void scan()
{
	s4(a,b,ka)
}

void out()
{
	if(ka<=8)
		cout<<bin_lesse(0,ha[ka].size()-1,b,ka)-bin_less(0,ha[ka].size()-1,a,ka)<<'\n';
	else
		cout<<"0\n";
}

int main()
{
	precompute();
	int t;
	s1(t)
	FOR(i,1,t+1)
	{
		scan();
		printf("Case #%lld: ",i);
		out();
	}
	return 0;
}
