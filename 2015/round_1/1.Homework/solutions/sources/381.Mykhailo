#pragma comment(linker, "/STACK:64777216")
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

vector<vector<int> > g;
const int N = 10000000;
int f[N+10];

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	double beg = clock();
#else
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif

	MEMS(f, -1);
	for (int i = 2; i <= N; ++i)
	{
		if (f[i] == -1)
		{
			f[i] = i;
			for (int j = i + i; j <= N; j += i)
				f[j] = i;
		}
	}
	g.resize(30);
	FOR(i, 2, N + 1)
	{
		int last = 1;
		int v = i;
		int cnt = 0;
		while (v > 1)
		{
			int c = f[v];
			if (c != last)
				cnt++;
			last = c;
			v /= c;
		}
		g[cnt].push_back(i);
	}
	int t;
	scanf("%d", &t);
	FOR(it, 1, t + 1)
	{
		fprintf(stderr, "%d\n", it);
		int a, b, k;
		scanf("%d%d%d", &a, &b, &k);
		int res = 0;
		if (k < 30)
		{
			FOR(j, 0, g[k].size())
			{
				if ((g[k][j] >= a) && (g[k][j] <= b))
					res++;
			}
		}
		printf("Case #%d: %d\n", it, res);
	}

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}