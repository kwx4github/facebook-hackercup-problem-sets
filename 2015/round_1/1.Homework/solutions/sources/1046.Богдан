import java.io.*;
import java.util.*;

public class Main {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(System.out, true);
    static StringTokenizer st;

    public static void main(String[] args) throws Exception {
        int[] ans = new int[10000001];
        for(int i = 2;i < ans.length;i++) {
            ans[i] = getPrimacity(i);
        }
        out.println("done " + ans[10000000]);
        int T = nextInt();
        for(int t = 1;t <= T;t++) {
            int a = nextInt(), b = nextInt(), k = nextInt(), res = 0;
            for(int i = a;i <= b;i++) {
                if(ans[i] == k) {
                    res++;
                }
            }
            out.println("Case #" + t + ": " + res);
        }
    }

    public static int nextInt() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Integer.parseInt(st.nextToken());
    }

    public static long nextLong() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Long.parseLong(st.nextToken());
    }

    public static double nextDouble() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Double.parseDouble(st.nextToken());
    }

    public static String nextToken() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return st.nextToken();
    }

    public static int getPrimacity(int n) {
        int res = 0;
        for(int i = 2;i * i <= n;i++) {
            if(n % i == 0) res++;
            while(n % i == 0) {
                n /= i;
            }
        }
        if(n != 1) res++;
        return res;
    }

}