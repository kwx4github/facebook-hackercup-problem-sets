#include <algorithm>
#include <iomanip>
#include <istream>
#include <map>
#include <ostream>
#include <set>
#include <sstream>
#include <utility>
#include <vector>

using namespace std;
// Solution template generated by caide


class Solution {
public:
    void solve(std::istream& in, std::ostream& out) {
		int T;
		in >> T;
		const long long MAX = 10000000LL;
		vector<int> primacity(MAX + 10);
		primacity[1] = 0;
		for (long long n = 2; n <= MAX; ++n) if (primacity[(int)n] == 0) {
			for (long long i = n; i <= MAX; i += n)
				++primacity[(int)i];
		}

		vector<vector<int> > accumCount(9);
		for (auto& v : accumCount)
			v.resize(MAX + 10);
		for (int n = 1; n <= MAX; ++n)
			for (int j = 0; j <= 8; ++j)
				accumCount[j][n] = accumCount[j][n - 1] + (j == primacity[n]);

		for (int test = 1; test <= T; ++test) {
			out << "Case #" << test << ": ";
			int A, B, K;
			in >> A >> B >> K;
			if (K > 8) {
				out << 0 << endl;
			}
			else {
				out << (accumCount[K][B] - accumCount[K][A - 1]) << endl;
			}
		}
    }
};

void solve(std::istream& in, std::ostream& out)
{
    out << std::setprecision(12);
    Solution solution;
    solution.solve(in, out);
}


#include <iostream>


int main() {
    std::ios_base::sync_with_stdio(0);
    std::cin.tie(0);
    solve(std::cin, std::cout);
    return 0;
}


























