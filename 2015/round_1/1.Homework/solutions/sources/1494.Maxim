#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <sstream>
#include <string>
#include <map>
#include <set>
#include <algorithm>
#include <iomanip>
#include <functional>
#include <bitset>
#include <cassert>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <memory.h>
#include <complex>
#include <numeric>
using namespace std;
#pragma comment(linker, "/STACK:256000000")
#define mp make_pair
#define pb push_back
#define all(C) (C).begin(), (C).end()
#define sz(C) (int)(C).size()
#define PRIME 1103
#define PRIME1 31415
#define INF ((1ll << 30) - 1)
// #define INF 1e20
#define MOD 1000000009
#define FAIL ++*(int*)0
#define EPS 1e-8
#define IT 10000
template<class T> T sqr(T a) {return a * a;}
typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pi64;
typedef pair<int, pii> piii;
typedef vector<int> vi;
typedef vector<int64> vi64;
typedef vector<vi64> vvi64;
typedef vector<pi64> vpi64;
typedef vector<vpi64 > vvpi64;
typedef vector<pii> vpii;
typedef vector<vector<int> > vvi;
typedef vector<vvi> vvvi;
typedef vector<vector<pair<int, int > > > vvpii;
typedef vector<vector<vector<pair<int, int > > > > vvvpii;
typedef complex<double> cd;
#define TASK "test"
//------------------------------------------------------------

const int MAXN = 10000001;
int primacity[MAXN];

void precalc()
{
    vi was(MAXN, 0);
    
    for(int i = 2; i < MAXN; ++i)
    {
        if(was[i]) 
            continue;

        for(int j = i; j < MAXN; j += i)
        {
            was[j] = 1;
            ++primacity[j];
        }
    }
}

int main()
{
#ifdef __APPLE__
    freopen(TASK ".in", "r", stdin);
    freopen(TASK ".out", "w", stdout);
#endif
    precalc();

    int test;
    scanf("%d", &test);

    for(int t = 1; t <= test; ++t)
    {
        int a, b, k;
        scanf("%d%d%d", &a, &b, &k);
        int res = 0;

        for(int i = a; i <= b; ++i)
            res += primacity[i] == k;

        printf("Case #%d: %d\n", t, res );
    }

    return 0;
}




