#include <fstream>
#include <vector>
#include <iostream>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <list>
#include <queue>
#include <algorithm>
#include <math.h>
#include <stdlib.h>
using namespace std;

string myitoa (int i) {
	string ret;
	if (i == 0)
		return string("0");
	while (i > 0) {
		ret.push_back('0' + i % 10);
		i /= 10;
	}
	reverse(ret.begin(), ret.end());
	return ret;
}

void getPrimes(vector<int>&primes, int m)
{
	for (int i = 2 ; i <= m ; i ++) {			
		bool a = true;

		for (int j = 0 ; j < primes.size(); j ++) {
			if (i % primes[j] == 0) {
				a = false;
				break;
			}
		}			
		if (a) 
			primes.push_back(i);

	}
}

int main()
{
	ifstream curFile;
	curFile.open("homework.txt", ios::in);
	vector<int> ret;
	int N;
	int A;
	int B;
	int k;
	vector <int> his(10000000 + 1 , 0);
	int m = sqrt (10000000) + 1;
	vector<int> primes;
	getPrimes(primes, m);
	for (int i = 0 ; i < primes.size() ; i ++) {
			int c = primes[i];
			for (int j = 1 ; (j * c) <= 10000000 ; j++) {
				his[j * c] += 1;
			}
	}
	if(curFile)
	{
		curFile >> N;		
		while (N -- > 0) {
			int r = 0;
			curFile >> A;
			curFile>>B;
			curFile>>k;

			for (int i = A ; i <= B ; i++) {
				if (his[i] == 0)
					his[i] = 1;
				if (his[i] == k)
					r ++;
				
			}		
			ret.push_back(r);

		}
	}
	else {
		cout << "Can't open input file << endl;";
	}
	curFile.close();
	ofstream outfile;
	outfile.open("output.txt", ios::out);
	if(outfile)
	{
		for(int i = 0; i < ret.size() ; i++) {
			outfile << "Case #" << i + 1<< ": " << ret[i] << endl;
			cout << "Case #" << i + 1<< ": " <<ret[i]<< endl;
		}
	}
	outfile.close();
	return 0;
}
