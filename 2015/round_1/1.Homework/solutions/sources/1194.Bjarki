#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#define all(o) (o).begin(), (o).end()
#define allr(o) (o).rbegin(), (o).rend()
const int INF = 2147483647;
typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
template <class T> int size(T &x) { return x.size(); }

// assert or gtfo

int main() {

    int max = 10001000;
    int *pf = new int[max];
    int *cnt = new int[max];
    memset(pf, -1, max << 2);

    pf[1] = 1;
    cnt[1] = 0;

    for (int i = 2; i < max; i++) {
        if (pf[i] == -1) {
            pf[i] = i;
            for (int j = i + i; j < max; j += i) {
                pf[j] = i;
            }
        }
    }

    for (int i = 2; i < max; i++) {
        int t = i;
        while (t % pf[i] == 0) {
            t /= pf[i];
        }

        cnt[i] = 1 + cnt[t];
    }

    int ts;
    scanf("%d\n", &ts);

    for (int t = 0; t < ts; t++) {
        int a, b, k;
        scanf("%d %d %d\n", &a, &b, &k);

        int res = 0;
        for (int i = a; i <= b; i++) {
            if (cnt[i] == k) {
                res++;
            }
        }

        printf("Case #%d: %d\n", t + 1, res);
    }

    return 0;
}

