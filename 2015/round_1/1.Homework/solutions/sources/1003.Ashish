import java.io.*;
import java.util.*;
public class Solution {
	static HashMap<Integer,Integer> hm;
	static int[] primes;
	static int MAX = 10000001;
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int T = in.nextInt();
		int done = 1;
		hm = new HashMap<Integer,Integer>();
		primes = new int[700000];
		int num = initialize();
		fillMap(num);
		while(done <= T) {
			int a = in.nextInt();
			int b = in.nextInt();
			int k = in.nextInt();
			int count = 0;
			int c = a;
			while(c <= b) {
				int p = hm.get(c);
				if(p == k) count++;
				c++;
			}
			System.out.println("Case #"+done+": "+count);
			done++;
		}
	}
	public static int initialize() {
		int idx = 0;
		for(int i = 2; i < MAX; i++) {
			boolean prime = true;
			for(int j=2;j<=Math.sqrt(i);j++) {
				if(i%j == 0) {
					prime = false;
					break;
				}
			}
			if(prime) {
				primes[idx] = i;
				idx++;
			}
		}
		return idx;
	}
	public static void fillMap(int N) {
		for(int i=0;i<MAX;i++) hm.put(i,0);
		for(int k : primes) {
			if(k==0) break;
			else {
				int num = k;
				int mul = 1;
				while(true) {
					num = k*mul;
					if(num >= MAX) break;
					int c = hm.get(num);
					mul++;
					hm.put(num,c+1);
				}
			}
		}
	}
}
