#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define maxnum 10000000
#define sqrtmaxnum 3162

void findprimes()
{
  // initialize array
  unsigned short *primes = new unsigned short[maxnum+1];
  for (unsigned int i = 2; i <= maxnum; i++) primes[i] = 0;

  // mark non-primes
  for (unsigned int i = 2; i <= sqrtmaxnum; i++)
  {
    for (unsigned int j = i*2; j <= maxnum; j += i)
    {
      primes[j] = 1;
    }
  }

  // print primes
  unsigned int count = 0;
  FILE *fp = fopen("primes.txt", "w");
  for (unsigned int i = 2; i <= maxnum; i++)
  {
    if (primes[i] == 0)
    {
      count++;
      fprintf(fp, "%d\n", i);
    }
  }
  fclose(fp);

  // clean up array
  delete [] primes;
  //printf("COUNT: %d\n\n", count);
}

void findprimacities(unsigned short *primacities)
{
  // initialize array
  for (unsigned int i = 2; i <= maxnum; i++) primacities[i] = 0;

  // calculate primacities
  FILE *fp = fopen("primes.txt", "r");
  int value = 0;
  while (fscanf(fp, "%d", &value) == 1)
  {
    for (unsigned int i = value; i <= maxnum; i += value)
    {
      primacities[i]++;
    }
  }
  fclose(fp);
}

int main(int argc, char **argv)
{
  // PREPROCESS
  findprimes();

  unsigned short *primacities = new unsigned short[maxnum+1];
  findprimacities(primacities);

  FILE *fp = fopen("homework.txt", "r");
  int numtests = 0;
  fscanf(fp, "%d", &numtests);
  for (unsigned short i = 1; i <= numtests; i++)
  {
    int start = 0;
    int end = 0;
    int value = 0;
    fscanf(fp, "%d %d %d", &start, &end, &value);

    int total = 0;
    for (unsigned int j = start; j <= end; j++) if (primacities[j] == value) total++;

    printf("Case #%d: %d\n", i, total);
  }
  fclose(fp);
  delete [] primacities;

  return 0;
}
