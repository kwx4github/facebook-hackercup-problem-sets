#include<cstdio>
#include<algorithm>
#include<set>

using namespace std;

enum {
	MAX = 104,
	MAXN = 10000003
};

int val[MAX], res[MAX];
typedef pair<int,int> PI;
int primacy[MAXN];
int eval[MAXN];
PI events[MAX*2];

int main() {
	for(int i = 0; i < MAXN; i++)
		eval[i] = i;
	for(int i = 2; i < 10000; i++) {
		if(!primacy[i]) {
			for(int j = i; j < MAXN; j += i) {
				primacy[j]++;
				while(!(eval[j]%i)) eval[j] /= i;
			}
		}
	}
	for(int i = 10000; i < MAXN; i++)
		if(eval[i] > 1) primacy[i]++;
	int T;
	scanf("%d", &T);
	for(int i = 0; i < T; i++) {
		int a, b, k; scanf("%d%d%d", &a, &b, &k);
		events[i*2] = PI(a,i);
		events[i*2+1] = PI(b,i+T);
		res[i] = 0;
		val[i] = k;
	}
	sort(events,events+(T*2));
	set<int> s;
	int ev_id = 0;
	for(int i = 0; i < MAXN; i++) {
		while(ev_id < T*2 && events[ev_id].first == i && events[ev_id].second < T) {
			s.insert(events[ev_id].second);
			ev_id++;
		}
		for(set<int>::iterator it = s.begin(); it != s.end(); it++) {
			if(val[*it] == primacy[i])
				res[*it]++;
		}
		while(ev_id < T*2 && events[ev_id].first == i) {
			s.erase(events[ev_id].second - T);
			ev_id++;
		}
	}
	for(int i = 0; i < T; i++) {
		printf("Case #%d: %d\n", i+1, res[i]);
	}
	return 0;
}
