#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

typedef long long ll;

bool is_prime[20000000];
int primacity[20000000];
int OAO[20000000];

vector<int> v[300];

void process()
{
    fill(is_prime, is_prime+20000000, true);
    is_prime[0] = is_prime[1] = false;

    primacity[0] = primacity[1] = 0;

    for(int i = 2; i <= 10000000; i++)
    {
        if( !is_prime[i] )
        {
            if( i%(OAO[i]*OAO[i]) == 0 ) primacity[i] = primacity[i/OAO[i] ];
            else primacity[i] = primacity[i/OAO[i] ]+1;

            v[primacity[i] ].push_back(i);
            continue;
        }

        primacity[i] = 1;
        v[primacity[i] ].push_back(i);

        if( (ll)i*i > 10000000 ) continue;

        for(int j = i*i; j <= 10000000; j += i)
        {
            if( is_prime[j] ) OAO[j] = i;
            is_prime[j] = false;
        }
    }
}

int bs(int pos, int val)
{
    int l = -1, r = v[pos].size();

    while( l+1 != r )
    {
        int mid = (l+r)/2;

        if( v[pos][mid] <= val ) l = mid;
        else r = mid;
    }

    return l+1;
}

int T;
int A, B, K;

int main()
{
    freopen("homework.txt", "r", stdin);
    freopen("a.txt", "w", stdout);

    process();

    scanf("%d", &T);

    for(int Ti = 1; Ti <= T; Ti++)
    {
        scanf("%d %d %d", &A, &B, &K);

        printf("Case #%d: ", Ti);

        if( K > 200 ) puts("0");
        else
        {
            printf("%d", bs(K, B)-bs(K, A-1));
            puts("");
        }
    }
}
