program homework;

{$APPTYPE CONSOLE}
{$mode delphi}

{$R *.res}

uses
  SysUtils;

const
  MaxN = 10 * 1000 * 1000;
  MaxPrimes = 350 * 1000;

var
  PrimeCount: Int64;
  Primes: array [0..700 * 1000] of Int64;
  DP: array [0..MaxN] of Int64;

procedure PopulatePrimes;
var
  i, j, p: Integer;
begin
  PrimeCount := 1;
  Primes[0] := 2;
  for i := 3 to MaxN do
  begin
    for j := 0 to PrimeCount - 1 do
    begin
      p := Primes[j];
      if i mod p = 0 then
        Break
      else if p * p > i then
      begin
        Primes[PrimeCount] := i;
        Inc(PrimeCount);
        Break;
      end;
    end;
  end;
end;

procedure PopulateDP;
var
  i: Integer;
  p, tp: Int64;
begin
  for i := 0 to PrimeCount - 1 do
  begin
    p := Primes[i];
    tp := p;
    while tp <= MaxN do
    begin
      Inc(DP[tp]);
      Inc(tp, p);
    end;
  end;
end;

function Solve: Int64;
var
  A, B, K: Integer;
  i: Integer;
begin
  Readln(A, B, K);
  Result := 0;
  for i := A to B do
  begin
    if DP[i] = K then
      Inc(Result);
  end;
end;

var
  i, T: Integer;
begin
  PopulatePrimes;
  PopulateDP;
  Readln(T);
  for i := 1 to T do
    Writeln('Case #', i, ': ', Solve);
end.
