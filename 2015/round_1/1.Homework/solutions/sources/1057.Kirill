using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            List<int> primes = new List<int>();
            Dictionary<int, int> primacity = new Dictionary<int, int>();
            primes.Add(2);
            primacity.Add(2, 1);

            for (int i = 3; i <= 10000000; i += 1)
            {
                int prim = 0;
                bool isPrime = true;

                // calculating primacity
                foreach (int p in primes)
                {
                    if (i % p == 0)
                    {
                        if (i % (p * p) == 0)
                            primacity.Add(i, primacity[i / p]);
                        else
                            primacity.Add(i, primacity[i / p] + 1);

                        isPrime = false;
                        break;
                    }
                    if (p > Math.Sqrt(i) + 1)
                        break;
                }
                if (isPrime)
                {
                    primes.Add(i);
                    prim++;
                    primacity.Add(i, prim);
                }
            }
            
            DirectoryInfo di = new DirectoryInfo(System.Environment.CurrentDirectory);
            string input = di.GetFiles().Where(fi => 
                fi.Extension == ".txt" 
                && !fi.Name.Contains("output")
                ).First().FullName;

            using (StreamWriter sw = new StreamWriter("output.txt"))
            {
                using (StreamReader sr = new StreamReader(input))
                {
                    var txt = sr.ReadToEnd().Split('\n').ToList();
                    int cnt = int.Parse(txt[0]);
                    txt.RemoveAt(0);

                    for (int i = 0; i < cnt; i++)
                    {
                        List<int> inp = txt[i].Split(' ').ToList().Select(s=>int.Parse(s)).ToList();
                                                
                        sw.WriteLine("Case #{0}: {1}\n", i + 1, primacity.ToList().Where(kv=>kv.Key>=inp[0] && kv.Key<=inp[1] && kv.Value == inp[2]).Count());                        
                    }
                }                
            }
        }

        private static void AddInt(HashSet<int> hs, string s)
        {
            if (s[0] != '0')
            {
                int si = int.Parse(s);
                if (!hs.Contains(si))
                    hs.Add(si);
            }
        }
    }
}
