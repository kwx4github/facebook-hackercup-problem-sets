#include <vector>
#include<cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <string>
#include <map>
#include <deque>
#include <set>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
#include <unordered_map>
#include <unordered_set>
#include <cassert>
#endif
#include <ctime>
#include <queue>
#include <stack>
#include<iomanip>
#include <sstream>
#include <cmath>
#include <list>
using namespace std;

typedef long long ll;
typedef pair<int, int> PII;
typedef pair<int, double> PID;
typedef pair<string, string> PSS;
typedef pair<PII, int> PIP;

const int A = int(1e7) + 2;
vector<int> primacity;
vector<vector<int>> dp;
void init() {
    primacity.assign(A, 0);
    for(int i = 2; i < A; i ++) {
        if (primacity[i] == 0) {
            primacity[i] = 1;
            for(int j = i + i; j < A; j += i) primacity[j] ++;
        }
    }
    //cerr << *max_element(primacity.begin(), primacity.end()) << endl;
    dp.assign(A, vector<int>(10, 0));
    for(int i = 2; i < A; i ++) {
        dp[i] = dp[i - 1];
        dp[i][primacity[i]] ++;
    }
}
void solve(int ncase) {
    int a, b, k;
    cin >> a >> b >> k;
    cout << "Case #" << ncase << ": ";
    if (k > 9) {
        cout << "0\n";
        return;
    }
    cout << dp[b][k] - dp[a - 1][k] << endl;
}

int main() {
    ios::sync_with_stdio(false);
    //cout << std::fixed;
    cout << setprecision(16) << endl;
#ifdef _zzz_
     freopen("homework.txt", "r", stdin);
     freopen("out.txt", "w", stdout);
#endif
    int T = 1;

    //scanf("%d", &T);
    int ncase = 0;
    init();
    cin >> T;
    while(T --) {
        solve(++ ncase);
    }
}
