#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <complex>
#include <string>
#include <sstream>
#include <algorithm>
#include <numeric>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <iostream>
#include <map>
#include <set>
using namespace std;
typedef pair<int,int> P;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
#define pu push
#define pb push_back
#define mp make_pair
#define eps 1e-9
#define INF 1000000000
#define sz(x) ((int)(x).size())
#define fi first
#define sec second
#define SORT(x) sort((x).begin(),(x).end())
#define all(x) (x).begin(),(x).end()
#define EQ(a,b) (abs((a)-(b))<eps)
const int MAX_N = 10000000;
bool prime[MAX_N+10];
int big[MAX_N+10];
int dp[MAX_N+10];
int rec(int x)
{
	if(dp[x]!=-1)return dp[x];
	int X=x;
	while(X%big[x]==0)X/=big[x];
	return dp[x]=rec(X)+1;
}
void eratos()
{
    for(int i=0;i<MAX_N;i++)prime[i]=true;
    prime[0]=prime[1]=false;
    for(int i=2;i*i<=MAX_N;i++)if(prime[i])
    {
        for(int j=i*2;j<=MAX_N;j+=i)
		{
			prime[j]=false;
			big[j]=i;
		}
    }
	for(int i=0;i<=MAX_N;i++)if(prime[i])big[i]=i;
    return;
}
int main()
{
	eratos();
	memset(dp,-1,sizeof(dp));
	dp[1]=0;
	for(int x=1;x<=MAX_N;x++)rec(x);
	int T;
	scanf("%d",&T);
	for(int t=0;t<T;t++)
	{
		int A,B,K;
		scanf("%d %d %d",&A,&B,&K);
		if(K>8){printf("0\n");continue;}
		int ans=0;
		for(int i=A;i<=B;i++)if(dp[i]==K)ans++;
		printf("Case #%d: %d\n",t+1,ans);
	}
	return 0;
}
