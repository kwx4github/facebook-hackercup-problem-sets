import  math
import sys 
rang = 10 ** 7 
primes = range(rang)
def find_primes():
    for p in primes[2:]:
        top = len(primes) - 1 
        if p:
            bottom = p * p 
            primes[p*p::p] = [0] * ( 1+ (top - bottom )  // p ) 

find_primes()

primes = filter(None, primes)
primes = primes[1:]

primacities = [0] *  (rang)

for p in primes: 
    if p < len(primacities):
        primacities[p] = 1
    if  2*p < len(primacities):
        b = [i + 1 for i in  primacities[2*p::p]]
        primacities[2*p::p] = b


def primacity (no ) : 
    if no < len(primacities):
        return primacities[no] 
    count = 0 ; 
    limit = int ( math.ceil(math.sqrt(no)))
    for p in primes:
        if p <= limit and p <= no : 
            while no % p == 0 : 
                count += 1
                no = no / p 
        else :
            break

f = sys.stdin

line  = f.readline()
cases = int(line)
case_count = 0 
for i in range(cases):
    case_count += 1
    line  = f.readline()
    a, b, c = map( int , line.split())
    l = primacities[a:b+1]
    eq = lambda x : x == c
    cnt = len(filter(eq, l)  )
    print "Case #{0}: {1}".format(case_count, cnt)



