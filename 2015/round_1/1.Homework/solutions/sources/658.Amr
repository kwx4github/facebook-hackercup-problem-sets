#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int DP[10000002];

vector<int> primes;

void get_primes(LL MAX)
{
    bool visited[MAX + 10];
    setzero(visited);
    for(LL x = 2; x <= MAX; x++)
        if(!visited[x])
        {
            primes.push_back(x);
            for(LL j = x*x; j <= MAX; j += x)
                visited[j] = true;
        }
}

int main()
{
    ios_base::sync_with_stdio(0);
    freopen("homework.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    int t,L,R,k;
    cin >> t;
    get_primes(3170);
    for(int i=2;i<=10000000;i++)
    {
        int c = 0, temp = i;
        for(int j=0;j<primes.size() && primes[j] * primes[j] <= temp && temp != 1;j++)
        {
            if(temp % primes[j] == 0) c++;
            while(temp % primes[j] == 0) temp/=primes[j];
        }
        if(temp != 1) c++;
        DP[i] = c;
    }
    int tt = 1;
    while(t--)
    {
        int res = 0;
        cin >> L >> R >> k;
        for(int i=L;i<=R;i++)
            if(DP[i] == k)
                res++;
        cout << "Case #" << tt++ << ": " << res << "\n";
    }
    return 0;
}
