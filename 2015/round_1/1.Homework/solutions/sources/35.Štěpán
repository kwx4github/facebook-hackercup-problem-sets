#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define ull unsigned long long
#define ld long double
#define pb push_back
#define popb pop_back

#define pii pair<int,int>
#define mp make_pair
#define X first
#define Y second
#define vi vector<int>
#define vii vector< pii >

#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)

#define maxN 10000005
#define maxK 10

int smallest_prime[maxN];
int primacity[maxN];
//vector<int> change[maxK];
int lesser_than[maxK][maxN];

int T;
int A, B, K;

int main(){
  scanf("%d", &T);
  FOR(i, 2, maxN) smallest_prime[i] = i;
  primacity[0] = primacity[1] = 0;
  int mp = 0;
  FOR(i, 2, maxN) {
    if (smallest_prime[i] == i) {
      for (int j = 1; (long long)j * i < maxN; ++j)
        smallest_prime[j * i] = min(smallest_prime[j * i], i);
    }
    int j = i;
    while (j % smallest_prime[i] == 0) j /= smallest_prime[i];
    primacity[i] = 1 + primacity[j];
    mp = max(mp, primacity[i]);
//    if (i < 100) printf("%d: %d, %d\n", i, smallest_prime[i], primacity[i]);
//    change[primacity[i]].push_back(i);
  }
//  printf("%d\n", mp);

  FOR(k, 1, maxK - 1) {
    lesser_than[k][0] = lesser_than[k][1] = 0;
    FOR(i, 2, maxN - 1) {
      lesser_than[k][i] = lesser_than[k][i-1];
      if (primacity[i] == k)
        ++lesser_than[k][i];
    }
  }

  FOR(t, 1, T) {
    scanf("%d%d%d", &A, &B, &K);
    printf("Case #%d: %d\n", t, lesser_than[K][B] - lesser_than[K][A - 1]);
  }

  return 0;
}
