#include <algorithm>
#include <iostream>
#include <stdlib.h>
#include <string.h>
#include <iomanip>
#include <stdio.h>
#include <string>
#include <queue>
#include <cmath>
#include <stack>
#include <ctime>
#include <map>
#include <set>
#define eps 1e-9
///#define M 1000100
///#define LL __int64
#define LL long long
///#define INF 0x7ffffff
#define INF 0x3f3f3f3f
#define PI 3.1415926535898
#define zero(x) ((fabs(x)<eps)?0:x)
#define mod 1000000007

#define Read freopen("homework.in", "r", stdin);
#define Write freopen("homework.out", "w", stdout);

using namespace std;

const int maxn = 10000010;


inline int read()
{
    char ch;
    bool flag = false;
    int a = 0;
    while(!((((ch = getchar()) >= '0') && (ch <= '9')) || (ch == '-')));
    if(ch != '-')
    {
        a *= 10;
        a += ch - '0';
    }
    else
    {
        flag = true;
    }
    while(((ch = getchar()) >= '0') && (ch <= '9'))
    {
        a *= 10;
        a += ch - '0';
    }
    if(flag)
    {
        a = -a;
    }
    return a;
}
void write(int a)
{
    if(a < 0)
    {
        putchar('-');
        a = -a;
    }
    if(a >= 10)
    {
        write(a / 10);
    }
    putchar(a % 10 + '0');
}


int k[maxn], f[maxn];
int t;
int vis[maxn];

void Prime()
{
    memset(f, 0, sizeof(f));
    t = 0;
    for(int i = 2; i <= maxn-10; i++)
    {
        if(!f[i]) k[t++] = i;
        for(int j = 0; j < t; j++)
        {
            if(i*k[j] > maxn-10) break;
            f[i*k[j]] = true;
            if(i%k[j] == 0) break;
        }
    }
}


void Del()
{
    memset(vis, 0, sizeof(vis));
    for(int i = 2; i <= 10000000; i++)
    {
        int x = i;
        for(int j = 0; j < t; j++)
        {
            if(x == 1) break;
            if(x < maxn-10 && !f[x])
            {
                vis[i]++;
                break;
            }
            if(!f[x])
            {
                vis[i]++;
                break;
            }
            if(x%k[j]) continue;
            vis[i]++;
            while(x%k[j] == 0) x /= k[j];
        }
    }
}

int main()
{
    Prime();
    Del();
    freopen("homework.in","r",stdin);
    freopen("homework.out","w",stdout);

    int T;
    scanf("%d", &T);
    int Case = 1;
    while(T--)
    {
        int n, m, k;
        scanf("%d %d %d", &n, &m, &k);
//        n = read();
//        m = read();
//        k = read();
        int sum = 0;
        for(int i = n; i <= m; i++)
        {
            if(vis[i] == k) sum++;
        }
        printf("Case #%d: %d\n", Case++, sum);
    }
}
