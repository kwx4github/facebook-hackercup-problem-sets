package main

import (
	"fmt"
	"os"
)

var primacity [10000001]int

func check(e error) {
	if e != nil {
		panic(e)
	}
}

func getPrimacity() {
	for i := 2; i <= 10000000; i++ {
		if primacity[i] == 0 {
			for j := 1; i*j <= 10000000; j++ {
				primacity[i*j]++
			}
		}
	}
}

func main() {
	fileIn, err := os.Open("input.txt")
	check(err)
	defer fileIn.Close()
	fileOut, err := os.Create("output.txt")
	check(err)
	defer fileOut.Close()

	var (
		problems int
		a        int
		b        int
		k        int
		ans      int
	)

	getPrimacity()

	fmt.Fscanf(fileIn, "%d\n", &problems)
	for cases := 1; cases <= problems; cases++ {
		fmt.Fscanf(fileIn, "%d %d %d", &a, &b, &k)
		if k > 8 {
			// Primacity cannot exceed 8
			// because multiple of first 8 integer is near 10^7. (9699690)
			fmt.Fprintf(fileOut, "Case #%d: 0\n", cases)
		} else {
			ans = 0
			for i := a; i <= b; i++ {
				if primacity[i] == k {
					ans++
				}
			}
			fmt.Fprintf(fileOut, "Case #%d: %d\n", cases, ans)
		}
	}
}
