import math

def build_sieve(lim=10**7):
  sieve_size = int(math.floor(math.sqrt(lim)))
  sieve = [0 for i in xrange(lim+1)]

  sieve[0] = 0
  sieve[1] = 1
  for i in xrange(2,lim):
    if sieve[i] == 0:  # still a prime
      j = 1
      while i * j <= lim:
        sieve[i*j] += 1
        j += 1
  return sieve 


if __name__ == '__main__':
  sieve = build_sieve(10**7)
  T = int(raw_input())
  for i in xrange(T):
    A,B,K = tuple(int(x) for x in raw_input().split())
    print "Case #%s: %s" % (i+1, sum([1 for x in sieve[A:B+1] if x == K]))
