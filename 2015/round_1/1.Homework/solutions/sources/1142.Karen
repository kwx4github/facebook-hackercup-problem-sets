#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

const int maxn = 1e7 + 7;

void get(vector<int> &primes) {
    vector<int> a(maxn, 0);

    for (int i = 2; i < a.size(); i++) {
        if (a[i] == 0) {
            a[i] = i;
            for (int j = 1; j * i < a.size(); j++) {
                a[i * j] = i;
            }
        }
    }
    primes = a;
}

vector<int> gen(vector<int> &primes) {
    vector<int> din(maxn, 0);
    for (int i = 2; i < maxn; i++) {
        if (primes[i] == i) {
            din[i] = 1;
        } else {
            din[i] = din[i / primes[i]] + ((i / primes[i]) % primes[i] != 0);
        }
    }
    return din;
}

int main() {
    ifstream cin("input");
    ofstream cout("output");
    vector<int> primes;
    get(primes);
    vector<int> din = gen(primes);

    int t;
    cin >> t;
    for (int l = 0; l < t; l++) {
        int a, b, k;
        cin >> a >> b >> k;
        int ans = 0;
        for (int i = a; i <= b; i++) {
            if (din[i] == k)
                ans++;
        }

        cout << "Case #" << l + 1 << ": " << ans << endl;
    }
}
