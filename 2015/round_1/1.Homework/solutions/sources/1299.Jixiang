#include <algorithm>
#include <cmath>
#include <iostream>
#include <fstream>
#include <map>
#include <queue> // push, front, pop
#include <sstream>
#include <string>
#include <stack> // push, top, pop
#include <set>
#include <vector>
#include <list> // list.insert(it, data); data inserted before it..
#include <iomanip>
#include <stdio.h>
#include <string.h> 

#define PI 3.14159265358979323846264338327950288
#define fill_(x,v) memset(x,v,sizeof(x))
#define min(x,y) (((x)>(y)) ? (y) :(x))
#define max(x,y) (((y)>(x)) ? (y) :(x))
#define Pi  3.1415926535
#define ll long long

using namespace std;

ifstream fin("c:\\tmp\\homework.txt");
ofstream fout("c:\\tmp\\out.txt");

vector<long long> primes;
long long primarity[10000001];
long long run() {
     long long a, b, k;
     fin >> a >> b >> k;
     long long ret = 0; 
     for (int i = a; i <= b; i++) {
         if (primarity[i] == k) {
            ret++;
        }
     }
     return ret;
}

bool isPrime(long long n) {
     for (int i = 0; i < primes.size(); i++) {
         if (primes[i] * primes[i] > n) break;
         if (n % primes[i] == 0) return false;
     }
     return true;
}

long long cal(long long n) {
     for (int i = 0; i < primes.size(); i++) {
         if (primes[i] * primes[i] > n) break;
         if (n % primes[i] == 0) {
             long long tmp = n;
             while (tmp % primes[i] == 0) tmp /= primes[i];
             return primarity[tmp] + 1;
         }
     }
     return 1;
}

int main() {
    int p = 0;
    int tot = 0;
    for (long long i = 2; i <= 10000000LL; i++) {
       if (isPrime(i)) {
           primes.push_back(i);
           tot++;
       }
    }
    cout<<tot<<endl;
    
    fill_(primarity, 0);
    for (long long i = 2; i <= 10000000LL; i++) {
        primarity[i] = cal(i);
    }
    
	int N;
	fin >> N;
  
	for( int n = 1; n <= N; n++){
		long long ret = run();
		cout<<"Case #"<<n<<": "<<ret<<endl;
		fout<<"Case #"<<n<<": "<<ret<<endl;
		//fout<<"Case #"<<n<<": "<<(ret? "YES" : "NO")<<endl;
		//cout<<"Case #"<<n<<": "<endl;
		//fout << fixed;
		//fout<<"Case #"<<n<<": "<<setprecision(10)<<ret<<endl;
   }
   return 0;
}
