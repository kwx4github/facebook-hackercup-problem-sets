#include <iostream>

#define MAXN 10000000
#define MAXPRIMA 9

int Primacity[MAXN + 1];

int PrimacityCnt[MAXN + 1][MAXPRIMA + 1];

void GenPrimacity()
{
	for (int i = 2; i <= MAXN; ++i)
	{
		if (Primacity[i] != 0)
			continue;
		for (int j = i; j <= MAXN; j += i)
		{
			Primacity[j]++;
		}
	}

	for (int i = 1; i <= MAXN; ++i)
	{
		for (int j = 0; j <= MAXPRIMA; ++j)
		{
			PrimacityCnt[i][j] = PrimacityCnt[i-1][j];
		}
		PrimacityCnt[i][ Primacity[i] ]++;
	}
}


int main()
{
	GenPrimacity();

	int T;
	std::cin >> T;

	for (int tc = 1; tc <= T; ++tc)
	{
		int A, B, K;
		std::cin >> A >> B >> K;

		int res;
		if (K > MAXPRIMA)
		{
			res = 0;
		}
		else
		{
			res = PrimacityCnt[B][K] - PrimacityCnt[A-1][K];
		}

		std::cout << "Case #" << tc << ": " << res << "\n";
	}

	return 0;
}
