#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <ctime>

const int SIZE = 10000000  + 10 ;
const int RAN = SIZE ;

FILE *out ;

int T , A , B , K ;

int nex[SIZE] , pre[SIZE] , chk[SIZE] ;

int MAXK ;
int primacity[SIZE] ;

void clear(void){}

int main(void)
{
	out = fopen("a.out" , "w") ;
	
	for(int i = 0 ; i < RAN ; ++i) nex[i] = i + 1 , pre[i] = i - 1 ;
	for(int i = 2 ; i * i < RAN ; i = nex[i])
		for(int j = i ; j * i < RAN ; j = nex[j])
		{
			chk[j * i] = 1 ;
			if(chk[j] == 1)
				pre[nex[j]] = pre[j] , nex[pre[j]] = nex[j] ;
		}

	for(int i = 2 ; i < SIZE ; i = nex[i])
		if(chk[i] == 0)
			for(int j = i ; j < SIZE ; j += i) ++primacity[j] ;
	
	for(int i = 2 ; i < SIZE ; ++i) MAXK = std::max(MAXK , primacity[i]) ;
	
	scanf("%d" , &T) ;
	for(int count = 1 ; count <= T ; ++count , clear())
	{
		scanf("%d%d%d" , &A , &B , &K) ;
		
		int ans = 0 ;
		if(K <= MAXK)
			for(int i = A ; i <= B ; ++i)
				if(primacity[i] == K) ++ans ;
		
		fprintf(out , "Case #%d: %d\n" , count , ans) ;
	}
	
	fclose(out) ;
	
	return 0 ;
}
