#include <iostream>
#include <fstream>
#include <math.h>
#include <vector>
using namespace std;

vector<int> primes;

int calcPrimacity(int num) {
	int initialNum = num;
	int rootNum = sqrt(num);
	int count = 0;
	for (int i = 0; i < primes.size(); i++) {
		int currPrime = primes[i];
		if (currPrime > rootNum) {
			count++;
			if (count == 1) {
				primes.push_back(initialNum);
			}
			break;
		}
		int numTimes = 0;
		while (num % currPrime == 0) {
			num /= currPrime;
			numTimes++;
		}
		if (numTimes > 0) { count++; }
		if (num == 1) break;
	}
	return count;
}

int main() {
	// pre-processing
	int *primacity = new int[10000001];
	primacity[2] = 1;
	primes.push_back(2);
	for (int i = 3; i <= 10000000; i++) {
		primacity[i] = calcPrimacity(i);
	}

	cout << "Preprocessing finished." << endl;

	//for (int i = 0; i < 25; i++) cout << primacity[i] << endl;

	ifstream infile("homework.txt");
	ofstream outfile("Q1.out");
	int T;
	infile >> T;
	for (int t = 1; t <= T; t++) {
		int A;
		int B;
		int K;
		infile >> A;
		infile >> B;
		infile >> K;
		int count = 0;
		for (int i = A; i <= B; i++) {
			if (primacity[i] == K) count++;
		}

		cout << "Case #" << t << ": " << count << endl;
		outfile << "Case #" << t << ": " << count << endl;
	}

	return 0;
}
