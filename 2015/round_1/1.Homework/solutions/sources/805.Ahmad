/*
Bismillahir Rahmanir Rahim
Coder: Ahmad Faiyaz
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
#include <fstream>
#include <ctime>


# define FOR(i, a, b) for (int i=a; i<b; i++)
# define REP(i, a) FOR(i,0,a)

#define EPS 1e-11
#define inf 1234567891
#define LL long long

#define abs(x) (((x)< 0) ? (-(x)) : (x))
#define all(x) (x).begin(), (x).end()
#define ms(x, a) memset((x), (a), sizeof(x))

#define pb push_back
#define FORIT(i,m) for(__typeof((m).begin()) i=(m).begin();i!=(m).end();i++)
#define pii pair<int,int>
#define UNIQUE(c) (c).resize( unique( all(c) ) - (c).begin() )

#define READ(f) {ifstream infile(f) ;if(infile.good()) freopen(f, "r", stdin);}
#define WRITE(f) freopen(f, "w", stdout)
#define CIN ios_base::sync_with_stdio(0);
///int rrr[]={1,0,-1,0};int ccc[]={0,1,0,-1}; //4 Direction
///int rrr[]={1,1,0,-1,-1,-1,0,1};int ccc[]={0,1,1,1,0,-1,-1,-1};//8 direction
///int rrr[]={2,1,-1,-2,-2,-1,1,2};int ccc[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int rrr[]={2,1,-1,-2,-1,1};int ccc[]={0,1,1,0,-1,-1}; //Hexagonal Direction
///int month[]={31,28,31,30,31,30,31,31,30,31,30,31}; //month

using namespace std;

#define M 10000007
bool p[M];
vector <int> prime;
void sieve()
{

    for(int i=3; i*i <= M; i+=2)
    {
        if( !p[i] )
        {
            for(int j=i+i+i; j < M; j+=i+i)
                p[j] = 1;
        }
    }
}

void prime_gen(){
    sieve();
    prime.pb(2);
    for(int i=3;i<M;i+=2){
        if(!p[i])
        prime.pb(i);
    }
}

long long int primeFactorize( long long int n ) {
    long long int count=0;
    //long long int sqrtN = (long long int)( sqrt(n) ); // find the sqrt of the number
    for( long long int i = 0; prime[i]*prime[i]<=n && i<prime.size(); i++ ) { // we check up to the sqrt
        if( n % prime[i] == 0 ) { // n is multiple of prime[i]
            while( n % prime[i] == 0 ) {
                n /= prime[i]; // we have divided n by prime[i]
            }
            count++;
        }
    }

    if(n>1){
        count++;
    }
    return count;
}

int cnt [M];


int main(){
    #if defined( faiyaz_pc )
       // READ("homework.txt");
       // WRITE("res.txt");
    #endif

    prime_gen();
    int t, A, B, K, chk = 1;


    for(int i=2;i<M;i++){
        cnt[i] = primeFactorize(i);
    }

    CIN;



    cin>>t;

    while(t--){
        cin>>A>>B>>K;
        int res = 0;
        for(int i=A;i<=B;i++){
            int r = cnt[i];
            //cout<<i<<" "<<r<<endl;
            if(r==K){
                res++;
            }
        }

        cout<<"Case #"<<chk++<<": "<<res<<"\n";
    }
    return 0;
}
