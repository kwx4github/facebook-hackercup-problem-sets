#include <iostream>
#include <cstring>
#include <stdio.h>
#include <stdlib.h>
#include <cmath>
#include <vector>
#include <algorithm>
using namespace std;
#define Size 10000005

bool mark[Size];
vector <int> primeList;
int countPrime[Size];
int start,last,target;

void seive(){
    memset (mark, true, sizeof (mark));
    memset (countPrime, 0, sizeof (countPrime));
    mark [0] = mark [1] = false;

    for(int i = 4;i<Size;i+=2) mark [i] = false;

    for(int i=3;i*i<=Size;i++){
        if(mark[i]){
            for(int j=i*i;j<Size;j+=2*i)
                mark [j] = false;
        }
    }
    int cnt = 1;
    primeList.clear ();
    primeList.push_back (2);
    for(int i=3;i<Size;i++){
        if(mark[i]){
            primeList.push_back (i);
        }
    }
    for(int i = 0;i<primeList.size();i++){
        int add = primeList[i];
        for(int cur = primeList[i];cur<Size;){
            countPrime[cur]++;
            cur = cur + add;
        }
    }
}



int main(){
    seive();
    int nCase;
    scanf("%d",&nCase);
    for(int cs = 1;cs<=nCase;cs++){
        scanf("%d %d %d",&start,&last,&target);
        long long cnt = 0;
        for(int cur = start;cur<=last;cur++){
            if(countPrime[cur] == target) cnt++;
        }
        cout<<"Case #"<<cs<<": "<<cnt<<endl;;
    }
}
