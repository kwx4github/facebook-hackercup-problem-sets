#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORD(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define REP(i,n) FOR(i,0,n)
#define REPD(i,n) FORD(i,0,n)
#define VAR(v,w) __typeof(w) v=(w)
#define FORE(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define PB push_back
#define ALL(c) (c).begin(),(c).end()
#define SIZE(c) ((int)(c).size())
#define MP make_pair
#define FT first
#define SD second
#define CLEAR(a) memset((a), 0, sizeof(a))
#define INT(x) int x; scanf("%d", &x)
#define LLG(x) LL x; scanf("%lld", &x)
#define STR(n,x) char x[n]; scanf("%s", x)
#define LINE(n,x) char x[n]; gets(x)

typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<VI> VVI;
typedef vector<PII> VII;
typedef vector<double> VD;
typedef vector<LD> VLD;
typedef vector<LL> VLL;
typedef vector<bool> VB;

void GEN(int a, int b, int c, int r, int k, int x[]) {
	x[0] = a;
	FOR(i,1,k) x[i] = (LL(x[i - 1]) * b + c) % r;
}

void oneCase();

const int N = 10000001;
int pri[N];

VLL FACTOR(LL x) {
	VLL r;
	LL d = 2;
	while (d * d <= x) {
		while (!(x % d)) {
			x /= d;
			r.PB(d);
		}
		d++;
	}
	if (x > 1)
		r.PB(x);
	return r;
}

template<class T>
map<typename T::value_type, int> HOWMANY(const T& c) {
	map<typename T::value_type, int> r;
	FORE(it,c)
		r[*it]++;
	return r;
}

void init() {
	FOR(i,1,N) {
		pri[i] = HOWMANY(FACTOR(i)).size();
		if (!(i%100000)) fprintf(stderr, "%d\n", i);
	}
}


int main() {
	init();
	int ttt;
	scanf("%d\n", &ttt);
	REP(tt, ttt) {
		printf("Case #%d: ", tt + 1);
		oneCase();
		fprintf(stderr, "Case #%d.\n", tt + 1);
		fflush(stderr);
	}
}




void oneCase() {
	INT(a);
	INT(b);
	INT(k);
	LL res = 0;
	FOR(i,a,b+1) if (pri[i] == k) ++res;
	printf("%lld\n", res);
}
