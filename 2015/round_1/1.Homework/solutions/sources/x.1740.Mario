#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>

using namespace std;

#define MAXN 10000000

int pdiv[MAXN + 1],primacity[MAXN + 1];
vector<int> a[9];

int solve(int x, int K){
    if(K > 8 || a[K].empty() || x < a[K][0]) return 0;
    
    int lo = 0,hi = a[K].size(),mi;
    
    while(lo < hi){
        int mi = (lo + hi + 1) >> 1;
        
        if(a[K][mi] > x) hi = mi - 1;
        else lo = mi;
    }
    
    return lo + 1;
}

int main(){
    ios::sync_with_stdio(0);
    
    primacity[1] = 0;
    
    for(int i = 2;i <= MAXN;++i){
        if(pdiv[i] == 0){
            pdiv[i] = i;
            
            if(i <= 3162)
                for(int j = i * i;j <= MAXN;j += i)
                    pdiv[j] = i;
        }
        
        int aux = i;
        int p = pdiv[i];
        
        while(aux % p == 0) aux /= p;
        
        primacity[i] = primacity[aux] + 1;
        
        a[ primacity[i] ].push_back(i);
    }
    
    int T,A,B,K;
    
    cin >> T;
    
    for(int tc = 1;tc <= T;++tc){
        cin >> A >> B >> K;
        
        cout << "Case #" << tc << ": " << solve(B,K) - solve(A - 1,K) << '\n';
    }
    
    return 0;
}
