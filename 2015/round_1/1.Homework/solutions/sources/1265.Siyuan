#include <fstream>
#include <iostream>
#include <vector>
#include <cstring>
#include <string>

using namespace std;

ifstream input;
ofstream output;

const int MAXT = 10000;
const int MAXN = 10000000 + 100;

bool isPrime[MAXT];

vector<int> primes;

int prCnt[MAXN];

int getCnt(int x)
{
	int cnt = 0;
	for (int i=0; i<primes.size() && x > 1; i++)
	{
		if (x % primes[i] == 0)
		{
			cnt++;
			while (x % primes[i] == 0) 
				x /= primes[i];
		}
	}
	if (x > 1) cnt++;
	return cnt;
}

void init()
{
	memset(isPrime, 1, sizeof(isPrime));
	isPrime[0] = isPrime[1] = false;
	for (int i=2; i<MAXT; i++) if (isPrime[i])
	{
		primes.push_back(i);
		for (int j=i*2; j<MAXT; j+=i)
			isPrime[j] = false;
	}

	memset(prCnt, 0, sizeof(prCnt));

	prCnt[0] = 0; prCnt[1] = 0;
	for (int i=2; i<MAXN; i++)
		prCnt[i] = getCnt(i);
}

void singleCase(int case_num)
{
	int A, B, K;
	input >> A >> B >> K;
	int cnt = 0;
	for (int i=A; i<=B; i++)
	{
		if (prCnt[i] == K) cnt++;
	}
	output << "Case #" << case_num << ": " << cnt << endl;
}

int main()
{
	init();
	string inputFile;

	cout << "Input file name: ";
	cin >> inputFile;

	input.open(inputFile);
	output.open("primes.out");

	int T;
	input >> T;
	for (int i=0; i<T; i++)
	{
		singleCase(i + 1);
	}

	return 0;
}