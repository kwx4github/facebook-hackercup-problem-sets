#include<stdio.h>
#include<string>
#include<stdlib.h>
#include<string.h>
#include<algorithm>
#include<vector>
#include<iostream>
#include<map>
#include<queue>
#include<stack>
#include<math.h>
#include<set>
using namespace std;
int maxn=10000000;
bool *primo;
int *primalidad;
int k;
vector<int> primos;

int factorizar(int n){
	
	if(primo[n]){
		primalidad[n]=1;
		return 1;
	}
	
	if(primalidad[n]!=0) return primalidad[n];
	
	for(int i=0;i<k;i++){
		if(n%primos[i]==0){
			primalidad[n]+=1+factorizar(n/primos[i]);
				if((n/primos[i])%primos[i]==0)
					primalidad[n]--;
				break;
				
		}
	}
	return primalidad[n];
	
	
	

}



int main(){
	
	primo=new bool[maxn+1];
	for(int i=0;i<=maxn;i++){
		primo[i]=true;
	}
	int raiz=(int)sqrt(maxn)+1;
	for(int i=2;i<=raiz;i++){
		if(primo[i]){
			for(int j=2;i*j<=maxn;j++){
				primo[i*j]=false;
			}
		}
	}
	
	for(int i=2;i<=maxn;i++){
		if(primo[i]) primos.push_back(i);
	}
	//delete primo;
	k=primos.size();
	//cout<<k<<endl;
	primalidad=new int[maxn+1];
	for(int i=2;i<=maxn;i++){
		factorizar(i);
	}
	
	int t;
	scanf("%d",&t);
	
	for(int c=0;c<t;c++){
		int a,b,l;
		scanf("%d %d %d",&a,&b,&k);
		if(k>primos.size()){
			printf("Case #%d: %d\n",c+1,0);
			
		}else{
		
			int can=0;
			for(int i=a;i<=b;i++){
				if(primalidad[i]==k)can++;
			}
			printf("Case #%d: %d\n",c+1,can);
		}
	}
	
	
	
	
	
	
	
	
	
	

}