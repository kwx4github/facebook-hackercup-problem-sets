#include<bits/stdc++.h>
using namespace std;
int sieve[10000001]={0};
vector <int> vec1;
vector <int> vec2;
vector <int> vec3;
vector <int> vec4;
vector <int> vec5;
vector <int> vec6;
vector <int> vec7;
vector <int> vec8;
long long int a,b,k,t,i,j;
int main()
{
	vector<int>::iterator low,up;
	for(i=2;i<=10000000;i++)
	{
		if(sieve[i]==0)
		{
			for(j=2;j*i<=10000000;j++)
			{
				sieve[j*i]++;
			}
			sieve[i]=1;
		}
	}
	for(i=2;i<=10000000;i++)
	{
		switch(sieve[i])
		{
			case 1:
				{
					vec1.push_back(i);
					break;
				}
			case 2:
				{
					vec2.push_back(i);
					break;
				}
			case 3:
				{
					vec3.push_back(i);
					break;
				}
			case 4:
				{
					vec4.push_back(i);
					break;
				}
			case 5:
				{
					vec5.push_back(i);
					break;
				}
			case 6:
				{
					vec6.push_back(i);
					break;
				}
			case 7:
				{
					vec7.push_back(i);
					break;
				}
			case 8:
				{
					vec8.push_back(i);
					break;
				}
		}
	}
	cin >>t;
	for(i=1;i<=t;i++)
	{
		cin >>a>>b>>k;
		if(k>8)
		{
			cout <<"Case #"<<i<<": 0\n";
		}
		else
		{
			switch(k)
			{
				case 1:
					{
						low=lower_bound(vec1.begin(),vec1.end(),a);
						up=upper_bound(vec1.begin(),vec1.end(),b);
						if(low==vec1.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec1.end())
							{
								cout <<"Case #"<<i<<": "<<vec1.size()-(low-vec1.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec1.begin())-(low-vec1.begin())<<"\n";
							}
						}
						break;
					}
				case 2:
					{
						low=lower_bound(vec2.begin(),vec2.end(),a);
						up=upper_bound(vec2.begin(),vec2.end(),b);
						if(low==vec2.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec2.end())
							{
								cout <<"Case #"<<i<<": "<<vec2.size()-(low-vec2.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec2.begin())-(low-vec2.begin())<<"\n";
							}
						}
						break;
					}
				case 3:
					{
						low=lower_bound(vec3.begin(),vec3.end(),a);
						up=upper_bound(vec3.begin(),vec3.end(),b);
						if(low==vec3.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec3.end())
							{
								cout <<"Case #"<<i<<": "<<vec3.size()-(low-vec3.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec3.begin())-(low-vec3.begin())<<"\n";
							}
						}
						break;
					}
				case 4:
					{
						low=lower_bound(vec4.begin(),vec4.end(),a);
						up=upper_bound(vec4.begin(),vec4.end(),b);
						if(low==vec4.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec4.end())
							{
								cout <<"Case #"<<i<<": "<<vec4.size()-(low-vec4.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec4.begin())-(low-vec4.begin())<<"\n";
							}
						}
						break;
					}
				case 5:
					{
						low=lower_bound(vec5.begin(),vec5.end(),a);
						up=upper_bound(vec5.begin(),vec5.end(),b);
						if(low==vec5.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec5.end())
							{
								cout <<"Case #"<<i<<": "<<vec5.size()-(low-vec5.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec5.begin())-(low-vec5.begin())<<"\n";
							}
						}
						break;
					}
				case 6:
					{
						low=lower_bound(vec6.begin(),vec6.end(),a);
						up=upper_bound(vec6.begin(),vec6.end(),b);
						if(low==vec6.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec6.end())
							{
								cout <<"Case #"<<i<<": "<<vec6.size()-(low-vec6.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec6.begin())-(low-vec6.begin())<<"\n";
							}
						}
						break;
					}
				case 7:
					{
						low=lower_bound(vec7.begin(),vec7.end(),a);
						up=upper_bound(vec7.begin(),vec7.end(),b);
						if(low==vec7.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec7.end())
							{
								cout <<"Case #"<<i<<": "<<vec7.size()-(low-vec7.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec7.begin())-(low-vec7.begin())<<"\n";
							}
						}
						break;
					}
				case 8:
					{
						low=lower_bound(vec8.begin(),vec8.end(),a);
						up=upper_bound(vec8.begin(),vec8.end(),b);
						if(low==vec1.end())
						{
							cout <<"Case #"<<i<<": 0\n";
						}
						else
						{
							if(up==vec8.end())
							{
								cout <<"Case #"<<i<<": "<<vec8.size()-(low-vec8.begin())<<"\n";
							}
							else
							{
								cout <<"Case #"<<i<<": "<<(up-vec8.begin())-(low-vec8.begin())<<"\n";
							}
						}
						break;
					}
			}
			
		}
		
	}
		return 0;
}
