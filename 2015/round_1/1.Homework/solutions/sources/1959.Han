//bcw0x1bd2 {{{
#include<bits/stdc++.h>
using namespace std;
#define FZ(n) memset((n),0,sizeof(n))
#define FMO(n) memset((n),-1,sizeof(n))
#define MC(n,m) memcpy((n),(m),sizeof(n))
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define FOR(x,y) for(__typeof(y.begin())x=y.begin();x!=y.end();x++)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0);
#ifdef ONLINE_JUDGE
#define FILEIO(name) \
  freopen(name".in", "r", stdin); \
  freopen(name".out", "w", stdout);
#else
#define FILEIO(name)
#endif

void RI() {}

template<typename... T>
void RI( int& head, T&... tail ) {
	    scanf("%d",&head);
			    RI(tail...);
}

mt19937 rng(0x5EED);
int randint(int lb, int ub) {
    return uniform_int_distribution<int>(lb, ub)(rng);
}
// Let's Fight! }}}

const int MX = 10000005;
int pfac[MX];
int A,B,K;
vector<int> ans[MX];

int f(int x){
	if (K >= MX) return 0;
	return upper_bound(ans[K].begin(),ans[K].end(),x) - ans[K].begin();
}
int main(int argc, char** argv){
	for (int i=2; i<MX; i++){
		if (pfac[i] == 0){
			for (int j=i; j<MX; j+=i)
				pfac[j]++;
		}
	}
	for (int i=2; i<MX; i++)
		ans[pfac[i]].PB(i);
	int nT;
	RI(nT);
	for (int t=1; t<=nT; t++){
		RI(A,B,K);
		int ret = f(B) - f(A-1);
		printf("Case #%d: %d\n", t, ret);
	}
	return 0;
}

