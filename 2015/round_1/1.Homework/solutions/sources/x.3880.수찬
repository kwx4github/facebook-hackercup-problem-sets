#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <memory.h>
#include <math.h>
#include <assert.h>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <functional>
#include <vector>
#include <deque>
#include <utility>
#include <bitset>
#include <limits.h>
#include <time.h>

using namespace std;
typedef long long ll;
typedef unsigned long long llu;
typedef double lf;
typedef unsigned int uint;
typedef long double llf;
typedef pair<int, int> pii;

int TC, TCC;

const int SZ = (int)1e7 + 5;
vector<int> primes;
int table[SZ];

void precalc(){
    primes.push_back(2);
    for(int i = 3; i * i <= (int)1e7; i += 2) {
        bool chk = true;
        for(int j = 1; j < primes.size() && chk; j++) if(i % primes[j] == 0) chk = false;//break;
        if(chk) primes.push_back(i);
    }
    
    for(int i = 2; i <= (int)1e7; i++) {
        int t = i;
        for(int j = 0; j < primes.size() && t > 0; j++) {
            int pl = 0;
            while(t % primes[j] == 0) {
                t /= primes[j];
                pl = 1;
            }
            table[i] += pl;
        }
        if(i % 1000 == 0) printf("%d/%d\n", i/1000, 10000);
    }

}

void init () {
}

void solve () {
    init();
    
    int A, B, K; scanf("%d%d%d", &A, &B, &K);
    
    int ans = 0;
    if(K <= 24) {
        for(int i = A; i <= B; i++) if(table[i] == K) ++ans;
    }
    
    printf("Case #%d: ", TCC);
    
    printf("%d", ans);
    
    printf("\n");
}

int main() {
    precalc();
    printf("precalc completed!");
    scanf("%*s");
    
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    
    scanf("%d", &TC);
    
    
    while(++TCC <= TC) solve();
    return 0;
}