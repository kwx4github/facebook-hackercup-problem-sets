open Printf
open Scanf

external id : 'a -> 'a = "%identity"

let n = 10_000_000

let primes =
  let l = Array.make n 0 in
  let ln = ref 0 in
  for i = 2 to n do
    let mj = int_of_float @@ sqrt @@ float_of_int i in
    let rec loop = function
      | j when j >= !ln || l.(j) > mj -> true
      | j when i mod l.(j) = 0 -> false
      | j -> loop (j + 1)
    in
    if loop 0 then begin
      l.(!ln) <- i;
      incr ln
    end
  done;
  Array.to_list @@ Array.sub l 0 !ln

let primacities =
  let a = Array.make (n + 1) 0 in
  List.iter begin fun p ->
    for i = 1 to n / p do
      let ii = i * p in
      a.(ii) <- a.(ii) + 1
    done
  end primes;
  a

let solve () =
  let (a, b, k) = scanf " %d %d %d" (fun a b k -> a, b, k) in
  let c = ref 0 in
  for i = a to b do
    if primacities.(i) = k then incr c
  done;
  printf "%d" !c

let () =
(*
  print_endline @@ String.concat ", " @@ List.map string_of_int primes;
  Array.iteri (fun i p -> printf "%d: %d\n" i p) primacities;
  exit 0;
*)
  let t' = scanf " %d" id in
  for i' = 1 to t' do
    printf "Case #%d: " i';
    solve ();
    printf "\n"
  done
