#include <bits/stdc++.h>

using namespace std;

#define MAXK 10
#define MAXN 10000050

int T, A, B, K;

vector<int> S[MAXK];
int mem[MAXN];

int primality(int n) {
	int nn = n;
	int ret = 0;
	for (int i = 2; i * i <= n; i++) {
		if (n % i == 0) {
			ret++;
			while (n % i == 0) {
				n /= i;
			}
			if (mem[n] != -1) {
				ret += mem[n];
				n = 1;
			}
		}
	}
	if (n > 1) {
		ret++;
	}
	mem[nn] = ret;
	return ret;
}

int main() {
	freopen("date.in", "r", stdin);
	freopen("date.out","w", stdout);
	cin.sync_with_stdio(false);
	
	memset(mem, -1, sizeof(mem));
	int maxk = 0;
	for (int i = 2; i < MAXN; i++) {
		int k = primality(i);
		S[k].push_back(i);
		maxk = max(maxk, k);
		if (i % 100000 == 0) {
			cerr << i << '\n';
		}
	}
	
//	cerr << maxk << '\n';
	
	cin >> T;
	for (int t = 1; t <= T; t++) {
		cerr << t << '\n';
	
		cin >> A >> B >> K;
		cout << "Case #" << t << ": ";
		
		if (K > maxk) {
			cout << 0 << endl;
		}
		else {
			int ans = upper_bound(S[K].begin(), S[K].end(), B)
					- lower_bound(S[K].begin(), S[K].end(), A);
			cout << ans << endl;
		}
	}
	
	return 0;
}
