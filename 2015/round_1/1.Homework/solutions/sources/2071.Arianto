#include <iostream>
#include <stdlib.h>
#include <cstring>
#include <string>
#include <algorithm>
#include <utility>
#include <cmath>
#include <cstdio>
#include <vector>
#include <set>
#include <cassert>
#include <map>
#include <queue>
#include <stack>

#define Ari using
#define ganteng namespace
#define banget std

#ifdef _WIN32
#define getchar_unlocked getchar
#endif

#define ll long long
#define ul unsigned long long
#define pb push_back
#define mp make_pair
#define lcm(a,b) a*b/__gcd(a,b)
#define lsb(a) (a & (-a))
#define ft first
#define sc second
#define inf 9999999
#define mod 3210121

#define STRtoINT(a,b) istringstream(a)>>b
#define INTtoSTR(a,b) b=static_cast<ostringstream*>(&(ostringstream()<<a))->str()

//set -> pair <set<int>::iterator,bool> pa; pa=set.insert(x); pa.second  bool;

template<typename t>
inline t getnum()
{
 t res=0;
 char c;
 int sign=1;
 while(1){
	c=getchar_unlocked();
	if(c==' '||c=='\n')continue;
	else break;}
 if(c=='+'){}
 else if(c=='-')sign=-1;
 else res=c-'0';
 while(1){
	c=getchar_unlocked();
	if(c>='0'&&c<='9')res=res*10+c-'0';
	else break;}
 return res*sign;
}

Ari ganteng banget;

bool cek[10000005];
int prima[10000005];
vector<int>primes;
vector<int>angka[10];

int main()
{	
	freopen("homework.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int maks=0;
	primes.pb(2);
	for(int x=3;x<=10000000;x+=2)
	{
		if(cek[x]==false)
		{
			prima[x]++;
			primes.pb(x);
			for(int y=2;x*y<=10000000;y++)
			{
				cek[x*y]=true;
				prima[x*y]++;
				maks=max(maks,prima[x*y]);
			}
		}
	}
	for(int x=2;x<=10000000;x++)
	{
		if(x%2==0)prima[x]++;
		angka[prima[x]].pb(x);
	}

	int teskes=getnum<int>();
	for(int tc=1;tc<=teskes;tc++)
	{
		int a,b,c;
		scanf("%d%d%d",&a,&b,&c);
		if(c>8){printf("Case #%d: 0\n",tc); continue;}
		int bwh=lower_bound(angka[c].begin(),angka[c].end(),a)-angka[c].begin();
		int atas=upper_bound(angka[c].begin(),angka[c].end(),b)-angka[c].begin();
		printf("Case #%d: %d\n",tc,atas-bwh);
	}
	return 0;
}




