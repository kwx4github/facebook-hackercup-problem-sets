def findIndex(arr, elem, left, right) :
	#print(elem, left, right, arr[left], arr[(left+right)//2], arr[right])
	if left == right :
		return left
	mid = (left + right) //2
	if arr[mid] == elem  or (arr[mid] < elem and (mid+1 > right or arr[mid+1] > elem)):
		return mid
	elif elem < arr[mid] :
		return findIndex(arr, elem, left, mid-1)
	else :
		return findIndex(arr, elem, mid+1, right)

L = 10 ** 7 + 1
arr = [0] * L 
for num in range(2, L) :
	if arr[num] == 0 :
		temp = num
		while temp < L :
			arr[temp] += 1
			temp += num

kSet = [None] * (max(arr) + 1)
for i in range(len(kSet)) :
	kSet[i] = list()
	
for i in range(0, L) :
	kSet[arr[i]].append(i)
	

for t in range(int(input())) :
	answer = 0
	A, B, K = [int(x) for x in str(input()).split()]
	if K < len(kSet) :
		left = 0 if kSet[K][0] > A else findIndex(kSet[K], A, 0, len(kSet[K])-1)
		right = findIndex(kSet[K], B, 0, len(kSet[K])-1)
		#print(A, B, K, left, right, kSet[K][left])
		answer = right - left
		if kSet[K][left] == A  or kSet[K][left] > A:
			answer += 1
		if kSet[K][right] > B  and answer != 0 :
			answer -= 1
		
	print('Case #{}: {}'.format(t+1, answer))