#include <bits/stdc++.h>

#define jjs(i, s, x) for (int i = (s); i < (x); i++)
#define jjl(i, x) jjs(i, 0, x)
#define ji(x) jjl(i, x)
#define jj(x) jjl(j, x)
#define jk(x) jjl(k, x)
#define jij(a, b) ji(a) jj(b)
#define INF ((int) 1e9+10)
#define pb push_back
#define mp make_pair
#define rint(x) scanf("%d", &(x))
#define rlong(x) scanf("%lld", &(x))
#define MOD 1000000007

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;
typedef pair<ll, ll> pll;

#define LIM 10000001
#define L2 25

bool composite[LIM];
vector<int> primes;
int primacity[LIM];
int prefix[LIM][L2];

int main()
{
	composite[0] = composite[1] = true;
	ji(LIM) if (!composite[i])
	{
		primes.pb(i);
		for (int j = i*2; j < LIM; j += i)
			composite[j] = true;
	}
	for (int p : primes)
	{
		for (int i = p; i < LIM; i += p)
			primacity[i]++;
	}
	jij(LIM, L2)
	{
		if (i > 0)
			prefix[i][j] += prefix[i-1][j];
		if (primacity[i] == j)
			prefix[i][j]++;
	}
	int T;
	rint(T);
	jk(T)
	{
		int A, B, K;
		rint(A); rint(B); rint(K);
		int ans;
		if (K >= L2)
			ans = 0;
		else
			ans = prefix[B][K] - prefix[A-1][K];
		printf("Case #%d: %d\n", k+1, ans);
	}
}