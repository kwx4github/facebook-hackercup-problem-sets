#include <iostream>
#include <cmath>
#include <vector>

using namespace std;

bool isPrime(int number){
	if(number == 0 || number == 1)return false;
	if(number == 2)return true;
	if(number%2 == 0)return false;
	for(int x=3; x < sqrt(number) + 1; x+=2){
		if(number%x == 0)return false;
	}
	return true;
}

int numOfDivisors(const vector<int> primes, int n){
	int sum = 0;

	for(int x=0; primes[x] <= n; x++){
		if(n%primes[x] == 0)sum++;
	}
	return sum;
}

int divisors[10000010];

int main(){
	vector<int> primes;
	primes.push_back(2);
	for(int x=3; x<10000010; x+=2){
		if(isPrime(x)){
			primes.push_back(x);
		}
	}

	for(int x=0; x<primes.size(); x++){
		for(long long y=primes[x]; y<10000010; y+=primes[x]){
			divisors[y]++;
		}
	}


	int t;
	cin >> t;
	
	for(int test=0; test<t; test++){
		int a, b, k;
		cin >> a >> b >> k;
		int sum = 0;
		for(int x=a; x<=b; x++){
			if(divisors[x] == k)sum++;	
		}
		cout << "Case #" << test+1 << ": " << sum << "\n";
	}


}
