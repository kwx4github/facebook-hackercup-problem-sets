#include <bits/stdc++.h>

using namespace std;
const int N = 10000005;

vector<int> primes;
bool b[N];
void sieve(){

    for(int i = 2; i < N; ++i){
        if(!b[i]){
            for(long long bad = (long long)i*i; bad < N; bad += i){
                b[bad] = true;
            }
        primes.push_back(i);
        }
    }
}

int dp[N][10];
int solve(){
    int A , B , k;
    cin >> A  >> B >> k;

    return dp[B][k] -  dp[A-1][k];
}

int get(int x){

    int res = 0;
    for(int i = 0; i < primes.size() && primes[i]*primes[i] <= x; ++i){
        if(x % primes[i] == 0){
            res++;
            while(x % primes[i] == 0) x /= primes[i];
        }
    }
    if( x > 1){
        res++;
    }
    return res;
}

int main(){
    //freopen("/tmp/preventing_alzheimers.txt","r",stdin);


    sieve();

    for(int i = 2; i < N; ++i){
        dp[i][get(i)]++;
    }

    for(int k = 0; k < 10; ++k)
        for(int i = 2; i < N; ++i){
            dp[i][k] += dp[i-1][k];
        }

    freopen("in.c","r",stdin);
    freopen("on.c","w",stdout);

    int tc , nc = 1;

    cin >> tc;

    while(tc--){
        printf("Case #%d: %d\n",nc++,solve());
    }




    return 0;
}
