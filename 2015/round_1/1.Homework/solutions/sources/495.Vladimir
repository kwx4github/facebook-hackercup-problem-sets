import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;

public class A {

    private static final String FILE_IN = A.class.getSimpleName() + ".in";
    private static final String FILE_OUT = A.class.getSimpleName() + ".out";

    final int MAXN = (int) 1e7 + 1;
    int[] primacity = new int[MAXN];

    private final void solveTest(final int testId, final Scanner in, final PrintWriter out) throws Exception {

        int a = in.nextInt();
        int b = in.nextInt();
        int k = in.nextInt();

        int result = 0;
        for (int i = a; i <= b; ++i) {
            if (primacity[i] == k) {
                ++result;
            }
        }

        out.printf("Case #%d: %d%n", testId, result);
    }

    private final void preProcess() {
        boolean[] f = new boolean[MAXN];

        for (int i = 2; i < MAXN; ++i) {
            if (f[i]) {
                continue;
            }

            for (int j = i; j < MAXN; j += i) {
                f[j] = true;
                ++primacity[j];
            }
        }
    }

    private final void solve(final Scanner in, final PrintWriter out) throws Exception {

        preProcess();

        for (int testId = 1, testCount = in.nextInt(); testId <= testCount; ++testId) {
            solveTest(testId, in, out);
        }
    }

    public static void main(String[] _args) {
        final String[] args = _args;
        Thread th = new Thread(null, new Runnable() {
            @Override
            public void run() {
                runMain(args);
            }
        }, "test", 16 << 20);
        th.setPriority(Thread.MAX_PRIORITY);
        th.start();
        try {
            th.join();
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
    }

    private static final void runMain(String[] args) {
        try {
            final Scanner in = new Scanner(new File(FILE_IN));
            final PrintWriter out = new PrintWriter(new File(FILE_OUT));
            new A().solve(in, out);
            out.close();
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }
    }
}
