#include <bitset>
#include <cmath>
#include <cstdio>
#include <map>
#include <vector>
#include <cstring>

using namespace std;

#define BOUND 10000010

typedef long long ll;
typedef vector<int> vi;
typedef map<int, int> mii;

ll _sieve_size;
bitset<BOUND> bs;
vi primes;

void sieve(ll upperbound) {
   _sieve_size = upperbound + 1;
   bs.set();
   bs[0] = bs[1] = 0;
   for(ll i = 2; i <= _sieve_size; i++) if(bs[i]) {
      for(ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0;
      primes.push_back((int)i);
   }
}

int main() {
   sieve(BOUND);
   short int *W = (short int *)malloc(sizeof(short int)*BOUND);
   memset(W,(0),sizeof(short int)*BOUND);
   for(int i = 0; i < (int)primes.size(); i++) {
      for(int j = 1; j*primes[i] < BOUND; j++) {
         W[j*primes[i]] += 1;
   }}
   int T, A, B, K;
   scanf("%d", &T);
   int ans = 0;
for(int kase = 1; kase <= T; kase++) {
   ans = 0;
   scanf("%d %d %d", &A, &B, &K);
   for(int i = A; i <= B; i++)
      if(W[i] == K) ++ans;
   printf("Case #%d: %d\n", kase, ans);
}
   return 0;
}
