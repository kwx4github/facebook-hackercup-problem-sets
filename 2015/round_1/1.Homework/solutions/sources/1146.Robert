#include <bits/stdc++.h>

using namespace std;

bool primes[10000005];
int primacity_v[10000005];

bool is_prime(int x) {

  int sq = (int)sqrt(x) + 1;

  for (int i = 2; i <= sq; ++i) {
    if (x % i == 0) {
      return false;
    }
  }

  return true;

}

void generate_primes(int n) {
  primes[2] = true;
  for (int i = 2; i <= n; ++i) {
    if (is_prime(i)) {
      primes[i] = true;
    }
  }
}

int primacity(int x) {

  if (x < 2) {
    return 0;
  }

  if (primacity_v[x] > 0) {
    return primacity_v[x];
  }

  int res = 0;

  int sq = (int)sqrt(x) + 1;

  for (int i = 1; i <= sq; ++i) {
    if (x % i == 0) {
      int a = i;
      int b = x / i;

      if (a <= b) {
        if (primes[a]) {
          res += 1;
        }

        if (a < b && primes[b]) {
          res += 1;
        }
      }
    }
  }

  primacity_v[x] = res;

  return res;
}

int main() {

  int T;
  cin >> T;

  generate_primes(10000000);

  for (int t = 0; t < T; ++t) {

    int A, B, K;
    cin >> A >> B >> K;

    int res = 0;

    for (int i = A; i <= B; ++i) {
      if (primacity(i) == K) {
        res += 1;
      }
    }

    cout << "Case #" << t + 1 << ": " << res << "\n";

  }

  return 0;
}