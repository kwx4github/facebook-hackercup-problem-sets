#include <iostream>
#include <fstream>
#include <vector>
#include <stack>
#include <queue>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <unordered_map>

using namespace std;

long long X[10000010];
long long Y[10000010];

vector<vector<long long> > R(9);

long long BB = 10000000;

void init() {
    long long i,j,k;
    memset(X,0,sizeof(X));
    for (i = 2;i <= BB;i++) Y[i] = i;
    for (i = 2;i <= BB;i++) {
        if (Y[i] == i) {
            for (j = i;j <= BB;j += i) {
                while (Y[j] % i == 0) {
                    Y[j] /= i;
                }
                X[j]++;
            }
        }
    }
    for (i = 2;i <= BB;i++) {
        j = X[i];
        R[j].push_back(i);
    }
    return;
}

long long A,B,K;

long long solve() {
    long long res = 0;
    long long i;
    for (i = 0;i < R[K].size();i++) {
        if (R[K][i] > B) break;
        if (R[K][i] <= B && R[K][i] >= A) res++;
    }
    return res;
}

int main() {
    clock_t st,ed;
    st = clock();
    ifstream filein;
    ofstream fileout;
    filein.open("homework.txt",ios::in);
    //filein.open("A",ios::in);
    fileout.open("output",ios::out);
    init();
    int T;
    filein >> T;
    for (int z1 = 1;z1 <= T;z1++) {
        fileout << "Case #" << z1 << ": ";
        filein >> A >> B >> K;
        if (K > 8) {
            fileout << 0 << endl;
            cout << 0 << endl;
        }
        else {
            long long res = solve();
            fileout << res << endl;
            cout << z1 << ' ' << res << endl;
        }
    }
    fileout.close();
    ed = clock();
    cout << double(ed - st) / double(CLOCKS_PER_SEC) << endl;
}