
require 'scanf'
require 'prime'

def compK(p_arr,map,start,val,k)
(start..700000).each do |p_index|
tot = p_arr[p_index-1]*val
break if tot > 10000000
count = (start==p_index)? k : k+1
count = 1 if count==0
map[tot]=count
compK(p_arr,map,p_index,tot,count)
end
end

def homework(map)
t=Integer(gets.chomp)
t.times do |i|
a,b,k = gets.scanf("%d %d %d")
count=0
(a..b).each do |n|
count+=1 if map[n]==k
end
puts "Case ##{i+1}: #{count}"
end
end

map = {}
p_arr = Prime.first(700000)
compK(p_arr,map,1,1,0)

$stdin = File.open("homework_example_input.txt")
$stdout = File.open("output.txt","w")

homework(map)


