/*
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
__$_____________________________$_____$
__$_____$$$$$$$_____$$$$$$$_____$_____$
__$___$$_________ __________$$___$_____$___$$____$$
__$_______$$$$$$___$$$$$$_______$_____$__$_$__$$__$$
__$______$______$_$______$______$_____$__$_$$$___$_ _
__$_____$___$$$__$___$$$__$_____$_____$__$________$_$
__$_____$___$$$__$___$$$__$_____$_____$___$_________$
__$______$______$_$______$ ______$_____$___$_______$$
__$_______$$$$$$$__$$$$$$_______$_____$___$__$$$$
__$___________$$__$_____________$_____$__$__$
__$__________$ ____$_____________$_____$_$__$
__$____$$$$___$$$$______$$$$____$___$$$$__$
_$$________$$_________$$________$________$
_$$__________$$$$$$ $$$__________$___$$$$$
$_$$_________$__$_$__$__________$_____$
$_$$_________$$$$_$$$$__________$_____$
$_$$____________________________$_ ___$$
$__$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$__$_______$____$__$____$_______$_$$$$$
_$_$$$$$$$$$$$$$$__$$$$$$$$$$$$$$_$$$$$
_$_$$_$$$_ $$$__$____$__$$$$_$$$_$_$$$$
_$_$$_$$$_$$$__$____$__$$$$_$$$_$_$$
_$_$$$$$$$$$$$$$$__$$$$$$$$$$$$$$
__$$$$_______$___$______$___$
______ _______$___$______$___$
_____________$$$$$______$$$$$
_____________$$$$$______$$$$$
_____________$___$______$___$
____________$$$$$$____ _$$$$$$$
_________$$$$$$$$$____$$$$$$$$$
______$$$$$$$$$$$$____$$$$$$$$$
*/


#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <stack>
#include <ctime>
#include <conio.h>
#include <algorithm>

#define ll long long 
#define ull unsigned long long
#define mp make_pair
#define eb emplace_back
#define y yyy
#define N 10000000
#define md 1000007
#define sqr(x) ((x) * (x))
#define INF (1 << 30)
//#define LOCAL

using namespace std;

int ld[N];
int answers[N];

class taskA
{
public:
	int tests;
	vector <int> primes;
	

	taskA()
	{
		scanf("%d", &tests);
		primes.resize(0);
		getPrimes();

		for (int test = 1; test <= tests; test++)
		{
			int a, b, k;
			scanf("%d %d %d", &a, &b, &k);
			printCase(test, getAns(a, b, k));
		}
	}

	void getPrimes()
	{
		for (int i = 2; i < N; ++i)
		{
			if (!ld[i])
			{
				primes.emplace_back(i);
				ld[i] = i;
				answers[i] = 1;
			}
			else
			{
				int t = i;
				while (!(t % ld[i]))
					t /= ld[i];
				answers[i] = answers[t] + 1;
			}
			for (int j = 0; j < primes.size() && primes[j] <= ld[i] && i * primes[j] <= N; ++j)
				ld[i * primes[j]] = primes[j];
		}
	}

	int getK(int n)
	{
		return answers[n];
	}

	int getAns(int a, int b, int k)
	{
		int result = 0;
		for (int i = a; i <= b; i++)
		{
			if (k == getK(i)) ++result;
		}
		return result;
	}

	void printCase(int test, int ans)
	{
		printf("Case #%d: %d", test, ans);
		if (test < tests) 
			printf("\n");
	}
};

void gen()
{
	freopen("input.txt", "w", stdout);
	cout << 100 << endl;
	for (int i = 0; i < 100; i++)
	{
		cout << "2 " << N << " " << i * N / 100 + 1 << endl;
	}
}

bool checker()
{
	freopen("input.txt", "r", stdin);
	return true;
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#ifdef LOCAL
	gen();
	//checker();
	return 0;

#endif
	new taskA();
	//cout << endl << (double)clock() / CLOCKS_PER_SEC;
	return 0;
}