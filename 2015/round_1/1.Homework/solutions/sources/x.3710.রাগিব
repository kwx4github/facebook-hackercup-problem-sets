#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <utility>

#include <cmath>
#include <iostream>
#include <fstream>

#include <string>
#include <vector>
#include <queue>
#include <map>
#include <algorithm>
#include <set>
#include <sstream>
#include <stack>
using namespace std;

#define MEM(a, b) memset(a, (b), sizeof(a))
#define CLR(a) memset(a, 0, sizeof(a))
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define S(X) ( (X) * (X) )
#define SZ(V) (int )V.size()
#define FORN(i, n) for(i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define ALL(V) V.begin(), V.end()

typedef pair<int,int> PII;
typedef pair<double, double> PDD;
typedef pair<int, long long> PILL;
typedef vector<int> VI;
typedef vector<PII > VP;

#define IN freopen("homework.txt", "r", stdin);
// #define IN freopen("homework_example_input.txt", "r", stdin);

#define OUT freopen("output.txt", "w", stdout);

#define MAX_SIZE 11

#define MAXPRIME 10000010

bool isnp[MAXPRIME];
int factors[MAXPRIME];

void sieve()
{
	unsigned int i,j;

    for(i=2;i*i<=MAXPRIME;i++) {
    	if(isnp[i]==0) {
			// primes[pcnt++]=i;
			factors[i]++;
            for(j=i+i;j<=MAXPRIME;j+=i) {
            	factors[j]++;
            	isnp[j]=true;
            }

		}
    }
        
}

int T;
int A, B, K;

int main()
{
    IN
    OUT
    
    sieve();

    int i, t;
    scanf("%d", &T);

    FORAB(t, 1, T) {
    	scanf("%d %d %d", &A, &B, &K);

    	int count = 0;
    	FORAB(i, A, B) {
    		// printf("%d -> %d\n", i, factors[i]);
    		if(factors[i] == K) {
    			count++;
    		}
    	}

        printf("Case #%d: %d\n", t, count);
    }
    
    return 0;
}