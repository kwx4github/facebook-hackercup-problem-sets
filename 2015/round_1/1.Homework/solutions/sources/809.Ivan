#include <iostream> 
#include <cstdio> 
#include <fstream>
#include <functional>
#include <set> 
#include <map> 
#include <vector> 
#include <queue> 
#include <stack> 
#include <cmath> 
#include <algorithm> 
#include <cstring> 
#include <bitset> 
#include <ctime> 
#include <sstream>
#include <stack> 
#include <cassert> 
#include <list> 
#include <deque>
//#include <unordered_set> 
using namespace std;
typedef long long li;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pi;

#define mp make_pair 
#define pb push_back
#define y1 botva
#define all(s) s.begin(), s.end() 
void solve();

#define NAME "changemeplease"

void prec();

int main() {
#ifdef YA 
	//cerr << NAME << endl;
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout); 
	clock_t start = clock();
#else 
	freopen("input.txt", "r", stdin); 
	freopen("output.txt", "w", stdout); 
#endif 
	ios_base::sync_with_stdio(false);
	cout << fixed;
	cout.precision(10);
	int t = 1;
	prec();
	cin >> t;  
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
#ifdef YA 
	//cout << "\n\n\nTime:" << ((clock() - start) / 1.0 / CLOCKS_PER_SEC);
#endif 
	return 0;
}

vector <int> tmp;
vector < set <int> > ans;

void prec() {
	int maxn = 10000010;
	
	tmp.resize(maxn);
	ans.resize(maxn);

	for (int i = 2; i < maxn; ++i) {
		if (tmp[i] == 0) {
			ans[i].insert(i);
			for (li j = li(i) * li(i); j < maxn; j += i) {
				if (tmp[j] == 0) {
					tmp[j] = i;
				}
			}
		}
		else {
			ans[i].insert(tmp[i]);
			for (auto t : ans[i / tmp[i]]) {
				ans[i].insert(t);
			}
		}
	}
	/*
	for (int i = 2; i <= 1000; ++i) {
		cout << i << ": ";
		for (auto t : ans[i]) {
			cout << t << " ";
		}
		cout << "\n";
	}
	*/
}

void solve() {
	int A, B, k;
	cin >> A >> B >> k;
	int res = 0;
	for (int i = A; i <= B; ++i) {
		if (ans[i].size() == k) {
			++res;
		}
	}
	cout << res << endl;
}