#include <stdio.h>
#define N 10000000
#define M 4000

int p[M], pn;
char ip[M/2+1];
int cnt[N+1];

void sieve()
{
    int i, j;

    for( i=3; i*i<M; i+=2 )
        if ( !ip[i/2] )
            for( j=i*i; j<M; j+=2*i )
                ip[j/2] = 1;
    p[0] = 2;
    pn = 1;
    for( i=3; i<M; i+=2 ) if ( !ip[i/2] ) p[pn++] = i;
}

int primacity(int n)
{
    if ( cnt[n] ) return cnt[n];
    int i;
    for( i=0; i<pn && p[i]*p[i]<=n; i++ )
        if ( n % p[i] == 0 )
        {
            int m = n / p[i];
            int pm = primacity(m);
            int c = ( m % p[i] == 0 ) ? pm : pm + 1;
            return (cnt[n] = c);
        }
    return (cnt[n] = 1);
}

int main()
{
    sieve();
    int i;
    for( i=2; i<=N; i++ )
        cnt[i] = primacity(i);
    int T, t;
    scanf("%d", &T);
    for( t=1; t<=T; t++ )
    {
        int a, b, k, ans = 0;
        scanf("%d %d %d", &a, &b, &k);
        for( i=a; i<=b; i++ )
            if ( cnt[i] == k ) ans++;
        printf("Case #%d: %d\n", t, ans);
    }
    return 0;
}

