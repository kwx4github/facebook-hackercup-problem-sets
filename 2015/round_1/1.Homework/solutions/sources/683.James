#include <iostream>
#include <vector>
#include <bitset>
#include <cstring>
#include <cmath>

using namespace std;

vector<int> pri;
bitset<10000010> bs;
int pf[10000010];

void sieve() {
  bs.reset();
  bs[0] = bs[1] = 1;
  for (long long i = 2; i < 10000010; i++) {
    if (!bs[i]) {
      for (long long j = i*i; j < 10000010; j+=i) {
        bs[j] = 1;
      }
      //pri.push_back(i);
    }
  }
}

int main() {
  ofstream fout("10.out");
  sieve();
  memset(pf, 0, sizeof pf);
  for (int i = 2; i < 10000010; i++) {
    int cur = i;
    int ans = 0;
    int p = 0;
    if (!bs[i]) {
      pf[i] = 1;
    } else {
      if (i % 2 == 0) {
        for (int j = 2; j <= sqrt(i); j++) {
          if (i % j == 0) {
            if (!bs[j]) ans++;
            if (!bs[i/j] && i/j != j) ans++;
          }
        }
      } else {
        for (int j = 3; j <= sqrt(i); j+=2) {
          if (i % j == 0) {
            if (!bs[j]) ans++;
            if (!bs[i/j] && i/j != j) ans++;
          }
        }
      }
      pf[i] = ans;
    }
  }
  int t;
  cin >> t;
  for (int ii = 1; ii <= t; ii++) {
    int a, b, k;
    cin >> a >> b >> k;
    int ans = 0;
    for (int i = a; i <= b; i++) {
      if (pf[i] == k) {
        ans++;
      }
    }
    cout << "Case #" << ii << ": " << ans << '\n';
  }
}