#include <bits/stdc++.h>

using namespace std ;

typedef long long ll; ///NOTES:int64
typedef vector<int> vi;

const double eps = 1e-8; ///NOTES:eps
const int dx[] = {1, 0, -1, 0};
const int dy[] = {0, 1, 0, -1};
const double pi = acos(-1.0); ///NOTES:pi
const int MAX = 1000000000 ; /// 10^9


#define SZ(x)           (int)x.size()
#define ALL(x)          (x).begin()                                                                                                                                                                                                                                                                                                                                                                                                                                                               ,(x).end()
#define ALLR(x)         (x).rbegin(),(x).rend()
#define PB( x )         push_back(x)
#define MP(x , y)           make_pair(x,y)
#define rep(i,st,en) for(int i=st ; i< en; i++)
#define repR(i,st,en) for(int i=st;i>=en ; i--)

///-----------*  Topcoder Contest class  *-----------------///////////////////

class TheGridDivTwo
{
public :



};
int mx = 10000005;
vector<int>primes;
vector<int>isPrime(mx , true);

void setPrimes()
{
    isPrime[0] = isPrime[1] = 0 ;

    for( int i=2 ; i*i <= mx-5 ; i++)
    {
        if(isPrime[i])
        {
            for(int j=i+i ; j<=mx-5 ; j+=i)
            {
                isPrime[j] = 0 ;
            }
        }
    }

    rep(i,0,mx-4)
    {
        if(isPrime[i]) primes.PB(i);
    }
}

vector<int>factor(mx , 0);

void setFactors()
{
    rep(i,0,SZ(primes))
    {
        for(int j=primes[i] ; j <= mx ; j+=primes[i]  )
        {
            factor[j]++;
        }
    }
}

///----------------------   ------------------------///
int main()
{
 freopen("homework.txt" , "rt",stdin);
 freopen("homework_output.txt", "wt", stdout);

setPrimes();

setFactors();

int T , t , a , b , k ;

cin >> T ;

rep(t,1,T+1)
{

    cin >> a >> b >> k ;

    int cnt = 0 ;

    rep(i,a ,b+1 )
    {
        if(factor[i] == k) cnt++;
    }

    cout << "Case #" << t << ": " << cnt << endl ;

}



return 0;
}
