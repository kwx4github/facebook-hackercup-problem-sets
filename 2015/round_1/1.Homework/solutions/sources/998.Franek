#include<cstdio>
#include<bits/stdc++.h>
using namespace std;
const int MAXN=(int)1e7+1000;
vector<int> PRM[70];
int tab[MAXN];
int licz(int k){
	if(tab[k]==1) return 1;
	int odp=0;
	int z=(int)sqrt(k);
	if(z*z==k) return tab[z];
	for(int i=2;i*i<=k;i++){
		if(k%i==0){
			int k1=k/i;
			if(k1%i==0) return tab[k1];
			else return tab[k1]+1;
		}
	}
	return odp;
}	
void prepr(int n){
	//for(int i=2;i<=20;i++){printf("%d %d\n",i,tab[i]);}
	for(int i=2;i<=n;i++){
		int x=licz(i);
		tab[i]=x;
		PRM[x].push_back(i);
		//if(i<=20) printf("%d %d\n",i,x);
	}
}
void sito(int n){
	for(int i=2;i<=n;i++){
		if(tab[i]==-1) continue;
		tab[i]=1;
		for(int j=i+i;j<=n;j+=i)
			tab[j]=-1;
	}
}
	
main(){
	sito(MAXN);
	prepr(MAXN);
	//puts("A");
	int test;scanf("%d",&test);
	for(int casenr=1;casenr<=test;casenr++){
		int a,b,k;scanf("%d%d%d",&a,&b,&k);
		int odp=
		upper_bound(PRM[k].begin(),PRM[k].end(),b)-PRM[k].begin()-
		(lower_bound(PRM[k].begin(),PRM[k].end(),a)-PRM[k].begin());
		printf("Case #%d: %d\n",casenr,odp);
	}
	return 0;
}
