#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <vector>

using namespace std;

#define FOR(prom, a, b) for(int prom = (a); prom < (b); prom++)
#define FORD(prom, a, b) for(int prom = (a); prom > (b); prom--)
#define FORDE(prom, a, b) for(int prom = (a); prom >= (b); prom--)

#define DRI(a) int a; scanf("%d ", &a);
#define DRII(a, b) int a, b; scanf("%d %d ", &a, &b);
#define DRIII(a, b, c) int a, b, c; scanf("%d %d %d ", &a, &b, &c);
#define DRIIII(a, b, c, d) int a, b, c, d; scanf("%d %d %d %d ", &a, &b, &c, &d);
#define RI(a) scanf("%d ", &a);
#define RII(a, b) scanf("%d %d ", &a, &b);
#define RIII(a, b, c) scanf("%d %d %d ", &a, &b, &c);
#define RIIII(a, b, c, d) scanf("%d %d %d %d ", &a, &b, &c, &d);

#define PB push_back
#define MP make_pair

#define ll long long
#define ull unsigned long long

#define MM(co, cim) memset((co), (cim), sizeof((co)))

#define DEB(x) cerr << ">>> " << #x << " : " << x << endl;

int isPrime[10000007];
//int primes[10][10000007];
int mx;
vector<int> pr[30];

void era() {
  //FOR(i,0,10000007) isPrime[i] = 0;
  FOR(i,2,10000007) {
    if(isPrime[i] == 0) {
      //isPrime[i]++;
      for(int j = i; j < 10000007; j += i) isPrime[j]++;
    }
    pr[isPrime[i]].PB(i);
    //FOR(j,0,30) primes[j][i] = primes[j][i-1];
    //++primes[isPrime[i]][i];
    mx = max(mx,isPrime[i]);
  }
}

int main ()
{
  era();
  //cout <<mx << endl;
  DRI(T);
  FOR(t,0,T) {
    DRIII(A,B,K);
    if(K > mx) printf("Case #%d: %d\n", t+1, 0);
    else {
      int cnt = 0;
      FOR(i,0,pr[K].size()) if(pr[K][i] >= A && pr[K][i] <= B) cnt++;
      printf("Case #%d: %d\n", t+1, cnt);
    }
  }
  return 0;
}










