    /*
            Author of this code - Shubham Shukla (shuklas664)
    */

#include <iostream>
#include<iomanip>
#include<stdio.h>
#include<math.h>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<string>
#include<string.h>

#define gc getchar_unlocked
#define scl(t) scanf("%ld",&t)
#define scll(t) scanf("%lld",&t)
#define sc(t) scanf("%d",&t)
#define scf(t) scanf("%f",&t)
#define scl2(n,m) scanf("%ld %ld",&n,&m)
#define scll2(n,m) scanf("%lld %lld",&n,&m)
#define sc2(n,m) scanf("%d %d",&n,&m)
#define scf2(n,m) scanf("%f %f",&n,&m)

#define prl(t) printf("%ld",t)
#define prll(t) printf("%lld\n",t)
#define pr(t) printf("%d\n",t)
#define prf(t) printf("%f",t)
#define prl2(n,m) printf("%ld %ld",n,m)
#define prll2(n,m) printf("%lld %lld",n,m)
#define pr2(n,m) printf("%d %d",n,m)
#define prf2(n,m) printf("%f %f",n,m)

#define INDEX_TO_CHAR(i) ((char)(i+'a'))
#define max(a,b) (a>=b?a:b)
#define in(a,b) (a<b?a:b)
#define ll long long
#define MOD 1000000007
#define l 10000005
using namespace std;

char p[l];
int m[l];

void sieve()
{   int j;
    memset(p,'0',l);
    for ( int i = 2; i <l;i++)
    		{
        		if (p[i] == '0')
        		{
                    j = i;
            		p[j]=(char)i+'0';
            		m[j]++;
                    j+=i;

            		while (j<l)
            		{
                		p[j]=(char)i+'0';
                		m[j]++;
                		j = j + i;
            		}
        		}

   			}

}
/*
void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

*/

int main()
{

    int t,a,b,k,c,i,d=0;
    for(i=0;i<l;i++)
    {
        p[i]=m[i]=0;
    }
    sieve();
    sc(t);
    while(t--)
    {
        d++;
        sc(a);
        sc(b);
        sc(k);
        c=0;
        for(i=a;i<=b;i++)
        {
            if(m[i]==k)
                c++;
        }
        cout<<"Case #"<<d<<": "<<c<<endl;
    }

}