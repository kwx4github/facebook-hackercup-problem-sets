//Template

// By Anurag :P
//Includes
#include <bits/stdc++.h>

using namespace std;

//Shortforms
typedef long long ll;
typedef vector <int> vi;
typedef vector <long long> vl;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)  a.begin(),a.end() 
#define ESP (1e-9)

#define gi(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define dg(s,n); printf("%s %d",s,n)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const int N = 10000100;

int lp[N+1];

vector<int> primes;

void precomp()
{
    for (int i=2; i<=N; ++i) 
	{
		if (lp[i] == 0) 
		{
			lp[i] = i;
			primes.push_back (i);
		}
		for (int j=0; j<primes.size() && primes[j]<=lp[i] && i*primes[j]<=N; ++j)
			lp[i * primes[j]] = primes[j];
	}
}



int count(int n)
{
	int ans = 0;
	int curprime = 0;
	while (n!=1)
	{
		int minp = lp[n];
		
		if (minp != curprime) {
			++ans;
			curprime = minp;
		}

		n/=minp;
	}
	return ans;
}




int main()
{
	precomp();
	int test;
	cin>>test;
	for(int i=1;i<=test;i++){
		
		int a, b, c; 
		cin>>a>>b>>c;
		
		int cnt = 0;
		for (int j = a; j <= b; ++j)
			if (count(j)==c)
				++cnt;
		cout <<"Case #"<<i<<": "<<cnt<<endl;
	} 
}
