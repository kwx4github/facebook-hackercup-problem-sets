#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

const int MAXN = 10000000;

vector<int> modified_sieve(int n)
{
    vector<int> primacity(n+1, 0);
    for(int k=2;k<=n;++k)
    {
        if(primacity[k] == 0)
        {
            int m = k;
            while(m <= n)
            {
                primacity[m]++;
                m += k;
            }
            
        }
    }
    
    return primacity;
}

int main()
{
    auto primacity = modified_sieve(MAXN);
    int t;
    cin >> t;
    for(int lp=1;lp<=t;++lp)
    {
        int a, b, k;
        cin >> a >> b >> k;
        auto resp = count(&primacity[a], &primacity[b] + 1, k);
        cout << "Case #" << lp << ": " << resp << "\n";
    }
    
    return 0;
}