#include <stdio.h>
#include <math.h>
#include <vector>
#include <iostream>
using namespace std;
#define S 10000007
#define PS S
int a, b, k, txt, t, mx, prime[PS/32+1], p[S];
int all[10][S];
vector<int>pr;
void setbit(int i){
    int p=i>>5,q=i&31;
    prime[p]|=(1<<q);
}
bool checkbit(int i){
    int p=i>>5,q=i&31;
    return prime[p]&(1<<q)?true:false;
}
void buildprime(int n){
    int i,j,k=sqrt(double(n));
    prime[0]=3;
    for(i=4;i<n;i+=2)setbit(i);
    for(i=3;i<=k;i+=2){
        if(!checkbit(i)){
            int ii=i+i;
            for(j=i*i;j<n;j+=ii)setbit(j);
        }
    }
}
void build(){
    for(int i = 2; i < S; ++i)if(!checkbit(i))pr.push_back(i);
    for(int i = 2; i < S; ++i){
        int ii = i;
        int tot = 0;
        for(int j = 0; j < pr.size(); ++j){
            int jj = pr[j];
            if(jj * jj > ii)break;
            if(ii % jj == 0){
                tot++;
                while(ii % jj == 0)ii /= jj;
            }
        }
        if(ii != 1)tot++;
        p[i] = tot;
        all[tot][i] = 1; 
        if(tot > mx)mx = tot;
    } 
}
int main(){
    freopen("A.in", "r", stdin);
    freopen("A_output", "w", stdout);
    buildprime(S);
    build();
    for(int i = 1; i <= mx; ++i)for(int j = 1; j < S; ++j){
        all[i][j] += all[i][j-1];
    }
    scanf("%d", &t);
    while(t--){
        scanf("%d %d %d",&a, &b, &k);
        int ans = 0;
        if(k <= mx){
            int ta = all[k][b];
            int tb = all[k][a - 1];
            ans = ta - tb;
        }
        printf("Case #%d: %d\n", ++txt, ans);
    }
    return 0;
}
