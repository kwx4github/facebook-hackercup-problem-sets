#include <cstdio>
#include <cstdlib>
#include <cstring>

#define MAXN 10000010

int T, t;
int f[MAXN];
int cnt[MAXN];
int bit[10][MAXN];

int find(int n, int kn) {
    int k = 0;
    while (n > 0) {
        k += bit[kn][n];
        n -= n & -n;
    }
    return k;
}

int solve(int A, int B, int K) {
    if (K > 8) {
        return 0;
    }

    int up = find(B, K);
    int low = find(A - 1, K);

    return up - low;
}

void insert(int n, int kn) {
    while (n < MAXN) {
        bit[kn][n]++;
        n += n & -n;
    }
}

int main() {

    int maxk = 0;
    memset(f, 0, sizeof(f));
    memset(bit, 0, sizeof(bit));

    for (int i = 2; i < MAXN; i++) {
        if (f[i] == 0) {
            for (int j = i; j < MAXN; j += i) {
                cnt[j]++;
                f[j] = i;
            }
        }
    }

    for (int i = 2; i < MAXN; i++) {
        int ki = cnt[i];
        insert(i, ki);
    }

    scanf("%d", &T);

    int A, B, K;
    for (t = 1; t <= T; t++) {
        scanf("%d%d%d", &A, &B, &K);
        printf("Case #%d: %d\n", t, solve(A, B, K));
    }
}
