//
//  main.cpp
//  r1_a
//
//  Created by qylqy on 15-1-18.
//  Copyright (c) 2015å¹´ linqiuyan. All rights reserved.
//

#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <map>
#include <queue>
using namespace std;
const int maxN = 10000005;
int primacity[maxN];

int cnt[8][maxN];

void getPrimacity()
{
    int n = maxN-4;
    memset (primacity, 0, sizeof(1));
    
    for (int i=2; i<n; i++) if (primacity[i]==0)
    {
        primacity[i] = 1;
        for (int j=i*2; j<n; j+=i)
        {
            primacity[j]++;
        }
    }
    
    memset (cnt, 0, sizeof(cnt));
    for (int i=2; i<n; i++)
    {
        for (int j=0; j<8; j++)
        {
            cnt[j][i] = cnt[j][i-1];
            if (primacity[i]==j+1) cnt[j][i]++;
        }
    }
}

int main() {
    int T, a, b, k;
    
    getPrimacity();
    scanf ("%d", &T);
    for (int I=1; I<=T; I++)
    {
        scanf ("%d%d%d", &a, &b, &k);
        
        printf ("Case #%d: ", I);
        if (k<=8 && a<=b)
        {
            printf ("%d\n", cnt[k-1][b]-cnt[k-1][a-1]);
        }
        else
            printf ("0\n");
    }
    return 0;
}
