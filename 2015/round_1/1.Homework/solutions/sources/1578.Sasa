using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Takmicenja.Facebook.HackerCup2015.Round1
{
    class Problem10
    {
        public static void Main()
        {
            int limit = 10000001;
            bool[] primes = new bool[10000001];
            primes[1] = true;
            int cnt = 2;

            while (cnt * 2 <= limit)
            {
                for (int i = cnt; i < limit; i += cnt)
                {
                    if (i > cnt)
                    {
                        primes[i] = true;
                    }
                }
                cnt++;
            }

            List<int> primeList = new List<int>();

            for(int i=2;i<limit;i++)
            {
                if (!primes[i])
                    primeList.Add(i);
            }

            int T = int.Parse(Console.ReadLine());
            int[] primacity = new int[limit];
            
            foreach (var pnumber in primeList)
            {
                for (int i=pnumber;i<limit;i+=pnumber)
                {
                    primacity[i]++;
                }
            }
            for (int i=0;i<T;i++)
            {
                string[] tok = Console.ReadLine().Split(new char[] { ' ' });
                int A = int.Parse(tok[0]);
                int B = int.Parse(tok[1]);
                int K = int.Parse(tok[2]);

                int rv = 0;
                for (int j=A;j<=B;j++)
                {
                    //if (isPrimacity(j,primeList,K))
                    //{
                    //    rv++;
                    //}
                    if (primacity[j] == K)
                        rv++;
                }

                Console.WriteLine(String.Format("Case #{0}: {1}", (i + 1), rv));
            }
 
        }


        private static bool isPrimacity(int a, List<int> primes, int K)
        {
            int cnt = 0;
            for (int i=0;i<primes.Count;i++)
            {
                if (a%primes[i]==0)
                {
                    cnt++;
                    if (cnt > K) return false;
                    if (cnt + (primes.Count - i) + 5 < K) return false;
                }
            }
            return cnt==K;
        }
    }
}
