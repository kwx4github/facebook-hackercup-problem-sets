	#include<stdio.h>
	#include<bits/stdc++.h>
	#include<math.h>
	#include <vector>
	using namespace std;
	int sieve[10000000],counter;
	int checkprime(int n){
		int val=sqrt(n),i;
		
		if(n==1)
		return 0;
		
		for(i=2;i<=val;i++)
		{
			if(n%i==0)
			{
				return 0;
			}
			
		}
		return 1;
	}
	void sievegeneration(){
		int i,j;
		for(i=2;i<=10000000;i++)
		{	
			if(sieve[i]==0)
			{	
				for(j=2;j*i<=10000000;j++)
				{
					sieve[j*i]++;
				}
				sieve[i]=1;
			}
		}
					
	}
	int main(){
		int test,a,b,k,val,i,j,other,prime;
		counter=0;
		vector<int>::iterator low,up;
		
			sievegeneration();
			 vector<int> Vect[9];
										
		pair <int ,int> mypair;
			
		for(i=2;i<=10000000;i++){
				Vect[sieve[i]].push_back(i);
		}
		
		scanf("%d",&test);
		for(i=1;i<=test;i++){
			scanf("%d%d%d",&a,&b,&k);
		
			
			if(k>8){
				printf("Case #%d: 0\n",i);
			}
			else{
						low=lower_bound(Vect[k].begin(),Vect[k].end(),a);
						up=upper_bound(Vect[k].begin(),Vect[k].end(),b);
						if(low==Vect[k].end())
						{
							printf("Case #%d: 0\n",i);
							
						}
						else
						{
							if(up==Vect[k].end()){
							//	printf("yo\n");
								printf("Case #%d: %d\n",i,Vect[k].size()-(low-Vect[k].begin()));
								
							}
							else
							printf("Case #%d: %d\n",i,up-low);
						}		
			}
			
					
		}
		for(i=0;i<9;i++)
		{
			Vect[i].erase(Vect[i].begin(),Vect[i].end());
		}
		return 0;
	}
