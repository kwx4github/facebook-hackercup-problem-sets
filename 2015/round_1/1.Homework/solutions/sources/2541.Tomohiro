#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)

const int MAX_N = 1e7 + 10;
bool prime[MAX_N];
int sums[16][MAX_N];

int main() {
    REP (i, MAX_N) prime[i] = true;
    prime[1] = false;
    for (int i=2; i<MAX_N; i++) {
	if (prime[i]) {
	    for (int j=i; j<MAX_N; j+=i) {
		prime[j] = false;
		sums[0][j]++;
	    }
	}
    }
    
    for (int k=1; k<16; k++) {
	for (int i=2; i<MAX_N; i++) 
	    sums[k][i] = sums[k][i-1] + (sums[0][i] == k ? 1 : 0);
    }


    int T;
    scanf("%d", &T);
    REP ($, T) {
	int A, B, K;
	scanf("%d%d%d", &A, &B, &K);
	int ans = 0;
	if (K < 16) ans = sums[K][B] - sums[K][A-1];
	printf("Case #%d: %d\n", $+1, ans);
    }
    return 0;
}
