#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define sz size()
#define fi first
#define se second

typedef long long ll;

const int oo = (int)1e9;
const int MAXN = (int)1e7;

vector<int> prime;
bool used[MAXN + 10];
int primacity[MAXN + 10], t, a, b, k, sum[MAXN + 10][10], tot[MAXN + 10], arr;

int main() {
	prime.pb(2);
    for (int i = 3; i <= MAXN; i += 2) {
		if (!used[i]) {
			prime.pb(i);
			for (int j = i + i; j <= MAXN; j += i) {
				used[j] = true;
			}
		}
	}
	int max_p = -1, min_p = oo;
	for (int i = 2; i <= MAXN; i++) {
		int curr = i;
		for (int j = 0; j < prime.sz; j++) {
			if (prime[j] * prime[j] > curr) break;
			if (curr % prime[j] == 0) {
				primacity[i]++;
				while (curr % prime[j] == 0) curr /= prime[j];
			}
		}
		if (curr > 1) primacity[i]++;
		max_p = max(max_p, primacity[i]);
		min_p = min(min_p, primacity[i]);
		sum[i][primacity[i]] = 1;
		tot[primacity[i]]++;
		arr++;
	}
	for (int i = 1; i <= max_p; i++) {
		for (int j = 2; j <= MAXN; j++) {
			sum[j][i] += sum[j - 1][i];
		}
	}
	freopen("homework.in", "r", stdin);
	freopen("homework.out", "w", stdout);
	scanf("%d", &t);
	int xx = 1;
	while (t--) {
		scanf("%d%d%d", &a, &b, &k);
		printf("Case #%d: ", xx++);
		if (k > max_p) printf("0\n");
		else {
			printf("%d\n", sum[b][k] - sum[a - 1][k]);
		}
	}
    return 0;
}
