#include <ext/numeric>
#include <bits/stdc++.h>
using namespace std;
using namespace __gnu_cxx;

#define SZ(x) ((int)x.size())

vector <int> primes;
vector <int> vec[8];

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL), cout.tie(NULL);

	freopen("in.in", "rt", stdin);
	freopen("out.out", "wt", stdout);

	primes.push_back(2);
	for (int i = 3; i <= 10000000 / i; i += 2) {
		bool good = true;
		for (int j = 0; primes[j] <= i / primes[j]; ++j) {
			if (i % primes[j] == 0) {
				good = false; break;
			}
		}
		if (good) primes.push_back(i);
	}
	for (int i = 2; i <= 10000000; ++i) {
		int tmp = i, cntr = 0;
		for (int j = 0; j < SZ(primes) && primes[j] <= tmp / primes[j]; ++j) {
			if (tmp % primes[j] == 0) {
				++cntr;
				while (tmp % primes[j] == 0) {
					tmp /= primes[j];
				}
			}
		}
		if (tmp > 1) ++cntr;
		vec[cntr - 1].push_back(i);
	}
	int t, id = 0; cin >> t;
	while (t--) {
		cout << "Case #" << ++id << ": ";
		int a, b, c; cin >> a >> b >> c;
		if (c > 8) {
			cout << "0\n";
		} else {
			--c;
			cout << upper_bound(vec[c].begin(), vec[c].end(), b) -
					lower_bound(vec[c].begin(), vec[c].end(), a) << '\n';
		}
	}

	return 0;
}
