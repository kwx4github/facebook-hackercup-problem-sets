#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
//#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 12000000;
typedef long long LL;
const LL MOD = 1000000000 + 7;
int D[MAXN];
int R[31][MAXN];
int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#else
	//freopen("html.in", "r", stdin); freopen("html.out", "w", stdout);
#endif
	int T;
	cin>>T;

	
	mems(D, 0);
	for(int i = 2; i < MAXN; ++i)
	{
		if (D[i] == 0)
		{
			for(int j = i; j < MAXN; j += i)
				D[j]++;
		}
	}
	mems(R, 0);


	for(int k = 1; k <= 30; ++k)
	{
		for(int i = 2; i < MAXN; ++i)
		{
			R[k][i] = R[k][i - 1];
			if (D[i] == k) R[k][i]++;
		}
	}

	forn(caze, 0, T)
	{
		int ans = 0;
		LL a,b,k;
		cin>>a>>b>>k;
		if (k > 30) ans = 0; else
		{
			ans = R[k][b] - R[k][a - 1];
		}
		cout<<"Case #"<<caze + 1<<": "<<ans<<endl;
	}
	return 0;
}