#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int primes_of(int x, vector<int>& p) {
  int res = 0;
  while (x != 1) {
    int prime = p[x];
    ++res;
    while (x % prime == 0) x /= prime;
  }
  return res;
}

int main() {
  vector<int> primo(int(2e7) + 5, -1);
  for (int i = 2; i*i < primo.size(); ++i) {
    if (primo[i] == -1) {
      for (int j = i + i; j < primo.size(); j += i) primo[j] = i;
    }
  }
  for (int i = 2; i < primo.size(); ++i) if (primo[i] == -1) primo[i] = i;

  vector<vector<int> > v(9);
  for (int i = 2; i < int(2e7) + 5; ++i) v[primes_of(i, primo)].push_back(i);

  int casos;
  cin >> casos;
  for (int cas = 1; cas <= casos; ++cas) {
    int a, b, k;
    cin >> a >> b >> k;
    cout << "Case #" << cas << ": ";
    if (k >= v.size()) cout << 0 << endl;
    else {
      int ini = int(lower_bound(v[k].begin(), v[k].end(), a) - v[k].begin());
      int end = int(upper_bound(v[k].begin(), v[k].end(), b) - v[k].begin());
      cout << max(0, end - ini) << endl;
    }
  }
}
