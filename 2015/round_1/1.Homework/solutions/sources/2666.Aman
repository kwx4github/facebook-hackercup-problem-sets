//#define Debugging
using System;
using System.Text;
using System.Collections.Generic;
using System.IO;
using System.Diagnostics;
namespace Codehef
{
    public class Program
    {
        public static void Main()
        {
            #if Debugging
            Console.SetIn(File.OpenText(@".\input.txt"));
            var output = File.CreateText(@".\output.txt");
            Console.SetOut(output);
            var sw = new Stopwatch();
            sw.Start();
            #endif

            int[] factors = new int[10000002];

            int i, j, T, A, B, K, res;
            for (i = 2; i < 10000002; i++)
            {
                if (factors[i] == 0)
                {
                    for (j = i; j < 10000002; j += i)
                        factors[j]++;
                }
            }

            T = FastReadInt32();
            j = 1;
            StringBuilder SB = new StringBuilder();
            do
            {
                A = FastReadInt32();
                B = FastReadInt32();
                K = FastReadInt32();
                res = 0;
                for (i = A; i <= B; i++)
                {
                    if (factors[i] == K)
                        res++;
                }

                SB.Append(string.Format("Case #{0}: ", j));
                SB.AppendLine(res.ToString());
                j++;
            }
            while (--T > 0);
            Console.WriteLine(SB.ToString());

            #if Debugging
            sw.Stop();
            /*Console.WriteLine("====== Debugging Information ======");
            Console.WriteLine("Time: " + sw.ElapsedMilliseconds);
            Console.WriteLine("Memory: " + GC.GetTotalMemory(false));*/            
            output.Close();
            #endif
        }

        private static int FastReadInt32()
        {
            int c;
            while (((c = Console.Read())) < '0') ;
            int n = c - '0';
            while (((c = Console.Read())) >= '0')
                n = n * 10 + c - '0';
            return n;
        }
    }
}