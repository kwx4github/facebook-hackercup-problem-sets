<?php
ini_set('memory_limit', '4096M');
$inputFile =  $argv[1] ;

$fileHandler = fopen($inputFile,"r");

if($fileHandler){
	$totalCases =  fgets($fileHandler) + 0;
	$numOfPrimeFactors = array();
	for ($pre=2; $pre <= 10000000; $pre++) { 
		primeFactors($pre);
	}

	for($case=1;$case<=$totalCases;$case++){

		$parser = explode(" ",fgets($fileHandler));
		$A = $parser[0];
		$B = $parser[1];
		$K = $parser[2];
		$caseResult = 0;

		$tmpRes = array_count_values(array_slice($numOfPrimeFactors, $A-2,$B-$A+1,true));

		$caseResult = (isset($tmpRes[$K+0]))?$tmpRes[$K+0]:0;

		echo "Case #" . $case .": ".$caseResult."\n";
	}
}

function primeFactors($inN){
	global $numOfPrimeFactors;

	$p = 2;
	$N = $inN;
	$found = 0;
	$next = 1;
	$outArray = array();
	if(gmp_prob_prime($N) == 0){
		while ($N >= $p * $p) {
			if($N%$p == 0){
				if($next == 1){
					$next = 0;
					$found ++;
					$outArray[] = $p;
				}else{
					if(isset($numOfPrimeFactors[$N])){
						$numOfPrimeFactors[$inN] = $found + $numOfPrimeFactors[$N] - 1;
						return $numOfPrimeFactors[$inN];
					}
				}
				$N = $N/$p;
				if(gmp_prob_prime($N) > 0){
					break;
				}
			}else{
				if(isset($numOfPrimeFactors[$N])){
					$numOfPrimeFactors[$inN] = $found + $numOfPrimeFactors[$N];
					return $numOfPrimeFactors[$inN];
				}
				$p = $p +1;
				$next = 1;
			}
		}
		if($N > $outArray[count($outArray)-1]){
		//if(!in_array($N, $outArray)){
			$found ++;
			$outArray[]=$N;
		}
	}else{
		$found ++;
	}
	
	$numOfPrimeFactors[$inN] = $found;
	return $found;
}
?>