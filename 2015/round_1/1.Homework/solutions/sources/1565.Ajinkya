#include <stdio.h>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <bits/stdc++.h>        //include every c++ library
                                //fgets(array_name,array_size,stdin);
                                //FLT_MAX FLT_MIN INT_MAX INT_MIN DBL_MAX DBL_MIN
#define mod 1000000007
#define MAX 10000000
#define ll long long int
using namespace std;
struct pfact
{
    ll no[10];
    pfact()
    {
        clear();
    }

    void clear()
    {
        memset(no, 0, sizeof(no));
    }
};

ll maxsize;
ll A[10000001];
int arr[10000001][2];
pfact B[10000001];
void markMultiples(int a)
{
    int i = 2, num, temp;
    while ( (num = i*a) <=  MAX)
    {
        temp = arr[ num-1][1];
        arr[ num-1 ][0]++;
        while( arr[ num-1][1] % a == 0)
        {
            arr[ num-1][1] = arr[ num-1][1] / a;
        }
        ++i;
    }
}

long int SieveOfEratosthenes(long int n)
{
    long int i;
    for(i=0;i<=MAX;i++)
    {
        arr[i][0] = 0;
        arr[i][1] = i+1;
    }
    long int j=0;
    if (n >= 2)
    {
        for (int i=1; i<n; ++i)
        {
            if ( arr[i][0] == 0 )
            {
                arr[i][0] = 1;
                arr[i][1] = arr[i][1]/(i+1);
                markMultiples(i+1);
            }
        }
    }
    return j;
}
pfact add(pfact a, pfact b)
{
    pfact c;
    int i;
    for(i=1;i<9;i++)
    {
        c.no[i] = a.no[i] + b.no[i];
    }
    return c;
}

void check(ll A[], ll N)
{
    ll i;
    for(i=0; i<N; i++)
        printf("%lld ",A[i]);
    printf("\n");
}

int main()
{
    ll T,i,p,temp;

    SieveOfEratosthenes(10000);

    A[0] = 0;
    A[1] = 0;
    for(i=2; i<=10000000; i++)
    {
        if(arr[i-1][1] == 1)
            B[i].no[arr[i-1][0]] = 1;
        else
            B[i].no[arr[i-1][0]+1] = 1;
    }
    for(i=1; i<=10000000; i++)
    {
        B[i] = add(B[i],B[i-1]);
    }
 /*   scanf("%lld",&p);
    for(i=0; i<p; i++)
    {
        scanf("%lld",&temp);
        printf("%lld\n",A[temp]);
    }
*/
    ll N, M, j, c, ans=0, x, y,k;
    pfact d;
   // pfact *st = ConstructST(A,MAX+1);
   // check(st,maxsize);

        scanf("%lld",&M);
        for(i=1; i<=M; i++)
        {
            scanf("%lld%lld%lld",&x,&y,&k);
            printf("Case #%lld: ",i);
            if(k>8)
                printf("0\n");
            else
            {
                printf("%lld\n",B[y].no[k] - B[x-1].no[k]);
            }
        }

    return 0;
}
