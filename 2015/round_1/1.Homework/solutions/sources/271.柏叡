#include<bits/stdc++.h>
using namespace std;
const int maxn=10000001 ;
int p[3000000],pcnt=0 ;
bool vis[maxn] ;
void make_prime()
{
    for(int i=2;i*i<maxn;i++) if(!vis[i])
        for(int j=i*i;j<maxn;j+=i) vis[j]=1 ;
    for(int i=2;i<maxn;i++) if(!vis[i])
        p[++pcnt]=i ;
}

vector<int> v[20] ;
void pre_cal()
{
    for(int i=2;i<maxn;i++)
    {
        int tmp=i , num=0 ;
        if(!vis[i]) { v[1].push_back(i) ; continue ; }
        for(int j=1;tmp!=1 && j<=pcnt;j++) if(tmp%p[j]==0)
        {
            num++ ;
            while(tmp%p[j]==0) tmp/=p[j] ;
            if(tmp!=1 && !vis[tmp]) { num++ ; break ; }
        }
        v[num].push_back(i) ;
    }
}

int lower_bound(int id,int val)
{
    if(v[id][0]>=val) return 0 ;
    int l=0 , r=v[id].size() ;
    while(r-l>1)
    {
        int mid=(l+r)/2 ;
        if(v[id][mid]>=val) r=mid ;
        else l=mid ;
    }
    return r ;
}

int upper_bound(int id,int val)
{
    if(v[id][0]>val) return 0 ;
    int l=0 , r=v[id].size() ;
    while(r-l>1)
    {
        int mid=(l+r)/2 ;
        if(v[id][mid]>val) r=mid ;
        else l=mid ;
    }
    return r ;
}

main()
{
    freopen("homework.txt","r",stdin) ;
    freopen("homework_output.txt","w",stdout) ;
    make_prime() ;
    pre_cal() ;
    int T,tc=0 ; scanf("%d",&T) ;
    while(T--)
    {
        int a,b,k ; scanf("%d%d%d",&a,&b,&k) ;
        if(k>=20 || v[k].empty()) printf("Case #%d: 0\n",++tc) ;
        else printf("Case #%d: %d\n",++tc,upper_bound(k,b)-lower_bound(k,a)) ;
    }
}
