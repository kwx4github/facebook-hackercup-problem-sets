/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hcup1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import sun.security.util.Length;

/**
 *
 * @author Angel
 */
public class HCup1 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        File archivo = new File("input.txt");
        FileReader fr = null;
        BufferedReader br = null;
        FileWriter fw= null;
        PrintWriter pw = null;
        try {
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            fw = new FileWriter("output.txt");
            pw = new PrintWriter(fw);
            String linea ="";
            int contador = 0;
            int [] primalidad = kriba(100000000);
            while((linea=br.readLine())!=null){
                if(contador == 0){
                    // hara algo
                }else{
                    String [] aLinea = linea.split(" ");
                    
                    int cuentas = 0;
                    int inicio = Integer.parseInt(aLinea[0]);
                    int fin = Integer.parseInt(aLinea[1]);
                    int pbuscada = Integer.parseInt(aLinea[2]);
                   
                    for(int i= inicio; i<=fin; i++){
                        if(primalidad[i] == pbuscada){
                            cuentas++;
                        }
                    }
                    pw.println("Case #"+contador+": "+cuentas);
                }
                contador ++;
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(HCup1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(HCup1.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                fr.close();
                pw.close();
            } catch (IOException ex) {
                Logger.getLogger(HCup1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    
    private static int [] kriba(int limite){
        int [] arreglo = new int[limite+1];
        for(int i=0; i<arreglo.length; i++){
            arreglo[i] = 0;
        }
        for(int i=2; i<arreglo.length; i++){
            if(arreglo[i]==0){
                for(int k=1; (k*i)<=limite; k++){
                    arreglo[(k*i)]++;
                }
            }
        }
        return arreglo;
    }

    
}
