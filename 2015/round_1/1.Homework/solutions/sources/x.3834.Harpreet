# include <bits/stdc++.h>
using namespace std;
int  MOD= 1000000007;
 
 int arr[10000001];
long long int pow(int a, int b)
{
   long long int x=1,y=a;
    if(a==1) return 1;
    while(b > 0)
    {
        if(b%2 == 1)
        {
            x=(x*y)%MOD;
            
        }
        y = (y*y)%MOD;
      
        b /= 2;
    }
    return x;
}
 
void markMultiples(int arr[], int a, int n)
{
	int i = 1, num;
    while ( (num = i*a) <= n )
    {
        arr[ num-1 ]++; // minus 1 because index starts from 0.
        ++i;
    }
}
 
 int SieveOfEratosthenes( int n,int *primearray)
{
	 int index=0;
    if (n >= 2)
    {
		
        
 
        for (int i=1; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {

                primearray[index]= i+1;index++;
                markMultiples(arr, i+1, n);
            }
        }
       
    }
    
        return index;
}

 int basicprimes[10000001]; int bn;

 
int main()
{	
	long long int i,j,ki,p;arr[1]=0;
	bn=SieveOfEratosthenes(10000000,basicprimes); 
	
	int ansd,t,n,m,l,r;
	scanf("%d",&t);
	for(i=0;i<t;i++)
	{
		ansd=0;
		scanf("%d%d%d",&n,&m,&l);
	for(r=n;r<=m;r++)
	{
			if(arr[r]==l) ansd++;
	}	
		
		printf("Case #%lld: %d\n",i+1,ansd);
	}	 
}
