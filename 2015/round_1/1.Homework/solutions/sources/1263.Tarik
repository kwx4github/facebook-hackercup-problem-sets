#include <stdio.h>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <algorithm>
#include <cmath>
#include <climits>
#include <cfloat>

using namespace std;

ifstream fin("homework_example_input.txt");
ofstream fout("homework_example_output.txt");

const int MAX_N = 10000000;

vector<int> primes;
void initPrimes()
{
	for (int p = 2; p * p <= MAX_N; p++)
	{
		bool isPrime = true;
		for (int i = 0; i < primes.size(); i++)
		{
			int d = primes[i];
			if (d * d > p) break;
			if (p % d == 0)
			{
				isPrime = false;
				break;
			}
		}
		if (isPrime)
		{
			primes.push_back(p);
		}
	}
}

int primacity[MAX_N + 1];

int calcPrimacity(int x)
{
	int r = 0;
	for (int i = 0; i < primes.size(); i++)
	{
		int p = primes[i];
		if (p * p > x) break;
		if (x % p == 0)
		{
			r++;
			x /= p;
			while (x % p == 0) x /= p;
		}
	}
	if (x > 1) r++;
	return r;
}

void initPrimacity()
{
	for (int i = 0; i <= MAX_N; i++)
	{
		primacity[i] = calcPrimacity(i);
	}
}

int main()
{
	initPrimes();
	initPrimacity();

	int t;
	fin >> t;
	for (int tt = 0; tt < t; tt++)
	{
		int l, r, k;
		fin >> l >> r >> k;
		int res = 0;
		for (int i = l; i <= r; i++)
		{
			if (primacity[i] == k)
			{
				res++;
			}
		}
		fout << "Case #" << (tt + 1) << ": " << res << endl;
	}

	return 0;
}