#include <iostream>
#include <vector>

#ifdef DEBUG_MODE
#define print(x) cout << #x << " = " << x << endl
#define debug(x) x
#else
#define print(x)
#define debug(x)
#endif

typedef short int int16;
typedef unsigned short int uint16;
typedef int int32;
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;

using namespace std;

class Application
{
public:
    inline void Run();
private:
    //methods
    inline void LoadData();
    inline void Solve();
    //fields
    uint32 begin_; 
    uint32 end_;
    uint32 K;
    static const int MAX_NUMBER = 10000003;
};

int main()
{
    ios_base::sync_with_stdio(false);
    Application app;
    app.Run();
}

inline void Application::LoadData()
{
    cin >> begin_ >> end_ >> K;
}

inline void Application::Solve()
{
    vector <int> divisors(MAX_NUMBER, 0);
    
    for(uint32 i = 2; i < MAX_NUMBER; ++i)
    {
        if(divisors[i] == 0)
        {
            for(uint32 j = i; j < MAX_NUMBER; j += i)
            {
                ++divisors[j];
            }
        }
    }
    
    uint32 result = 0;
    for(int i = begin_; i <= end_; ++i)
    {
        if(divisors[i] == K)
            result += 1;
    }
    
    cout << result << endl;
}

inline void Application::Run()
{
    int test_number;
    cin >> test_number;
    
    for(int i = 0; i < test_number; ++i)
    {
        cout << "Case #" << i + 1 << ": ";
        LoadData(); 
        Solve();
    }
}
