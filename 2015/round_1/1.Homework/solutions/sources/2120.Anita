#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define TEN7 10000000

static int countPrime = 0;

const int N = TEN7;
int lp[N + 1];
vector<int> pr;

void init()
{
	for (int i = 2; i <= N; ++i)
	{
		if (lp[i] == 0)
		{
			lp[i] = i;
			pr.push_back(i);
		}
		for (int j = 0; j<pr.size() && pr[j] <= lp[i] && i*pr[j] <= N; ++j)
			lp[i * pr[j]] = pr[j];
	}
}
int count(int n)
{
	int ans = 0;
	int curprime = 0;
	while (n != 1)
	{
		int minp = lp[n];
		if (minp != curprime) ++ans, curprime = minp;

		n /= minp;
	}
	return ans;
}

int f(int a, int b, int c)
{
	int cnt = 0;
	for (int i = a; i <= b; ++i)
	if (count(i) == c)
		++cnt;
	return cnt;
}

void runCase(int caseNum){

	long long int i, a, b, k;
	long long int n = 0;
	cin >> a >> b >> k;

	cout << "Case #" << caseNum << ": " << f(a, b, k) << endl;

}

int main(){

	int test;
	cin >> test;
	init();
	for (int caseNum = 0; caseNum < test; caseNum++){
		runCase(caseNum + 1);
	}

}