#include<iostream>
#include<stack>
#include<string>
#include<vector>
#include<set>
#include<queue>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
using namespace std;

#define gc getchar
#define MOD 1000000007
#define pc(x) putchar(x)
#define pi(n) printf("%d",n)
#define pis(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define pll(n) printf("%lld",n)
#define ps printf(" ")
#define pn printf("\n")
#define rep(i,n) for(i=0;i<n;i++)
#define fu(i,a,n) for(i=a;i<=n;i++)
#define fd(i,n,a) for(i=n;i>=a;i--)
#define INV 333333336
#define ll long long
#define ull unsigned long long
#define EPS 1e-9
#define infi 2000000000
#define linfi 2000000000000000000

inline int sn()
{
	int n=0;
	int ch=gc();
	while( ch <48 )ch=gc();
	while( ch >47 )
	n = (n<<3)+(n<<1) + ch-'0', ch=gc();
	    return n;
}

inline void wi(int n)
{
	int N = n, rev, count = 0;
	rev = N;
	if (N == 0) { pc('0');  return ;}
	while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
	rev = 0;
	while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
	while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
	while (count--) pc('0');
}

int main()
{
	vector<int> prime(3165,1);
    vector<int> result;
    int i,j;
    prime[0]=0;
    prime[1]=0;
    for(i=2;i*i<3165;i++)
    {
        if(prime[i])
        for(j=i*i;j<3165;j+=i)
        {
            prime[j]=0;
        }
    }
    rep(i,3165)
    {
        if(prime[i])
            result.push_back(i);
    }
	
	int l=result.size();
	//pin(l);
	
	vector<int> ans(10000005,0);
	vector<int> value(10000005);
	rep(i,10000005) value[i]=i;
	rep(i,l)
	{
		for(j=result[i] ; j<10000005 ; j=j+result[i])
		{
			ans[j]++;	
			while(value[j]%result[i]==0)
			{
				value[j]/=result[i];
			}	
		}
	}
	
	fu(i,3160,10000000) 
		if(value[i]!=1)
		{
			value[i]=1;
			ans[i]++;
		}
	
	/*fu(i,3200,3300) 
	{
		pis(i);pis(value[i]);pin(ans[i]);
	}*/
	
	int t,q;
	t=sn();
	for(q=1;q<=t;q++)
	{
		int a,b,k,count=0;
		a=sn();
		b=sn();
		k=sn();
		fu(i,a,b)
			if(ans[i]==k) count++;
		printf("Case #%d: %d\n",q,count);
	}
	
    return 0;
}











