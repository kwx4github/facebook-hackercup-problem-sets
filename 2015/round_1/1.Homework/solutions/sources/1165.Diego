#include<bits/stdc++.h>
using namespace std;
#define IO ios_base::sync_with_stdio(false);cin.tie(NULL);

#define endl '\n'
#define D(x) cout << #x << " = " << (x) << endl;
#define rep(i,a,b) for(int (i)=(a);(i)<(b);(i)++)
#define repd(i,a,b) for(int (i)=(b)-1;(i)>=(a);(i)--)
#define REP(i,n) rep(i,0,n)
#define REPD(i,n) repd(i,0,n)
#define pb push_back
#define mp make_pair
#define countbits(x) __builtin_popcount(x)
#define countbitslld(x) __builtin_popcountll(x)

typedef long long int lld;
typedef vector<int> vi;
typedef vector<lld> vlld;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef vector<pii> vpii;

vi gen_primes(int maxn){
  vi mark(maxn,0);
  vi primes;

  rep(n,2,maxn){
    if(mark[n] == 0){
      primes.pb(n);
      lld t = n; t *= n;
      while(t < maxn){
        mark[t] = 1;
        t += n;
      }
    }
  }
  return primes;
}

vector<vi> gen(int maxn){
  vi primes = gen_primes(maxn);

  vector<vi> v(10);
  vi primacity(maxn,0);

  rep(n,2,maxn){
    int t = n;
    REP(i,primes.size()){
      int p = primes[i];
      lld pp = p; pp *= p;
      if(pp > t){
        break;
      }

      bool div = false;
      while(t % p == 0){
        t /= p;
        div = true;
      }
      if(div){
        break;
      }
    }

    if(n == t){
      t = 1;
    }

    int k = 1 + primacity[t];
    assert(k < 10);

    primacity[n] = k;
    v[k].pb(n);
  }

  return v;
}

int main(){ IO;
  vector<vi> v = gen(10000005);

  int t;
  cin >> t;

  rep(ncase,1,t+1){
    int a, b, k;
    cin >> a >> b >> k;

    int cnt = 0;
    if(k < v.size()){
      REP(i,v[k].size()){
        if(a <= v[k][i] and v[k][i] <= b){
          cnt++;
        }
      }
    }
    cout << "Case #" << ncase << ": " << cnt << endl;
  }

  return 0;
}
