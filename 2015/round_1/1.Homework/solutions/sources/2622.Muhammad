#include <iostream>
#include <vector>
#include <cstdio>

using namespace std;

#define MAX_VALUE 10000001

vector<int> primes;
vector<bool> isPrime(MAX_VALUE, true);
vector<int> primality(MAX_VALUE,0);

void setupPrime() {
    isPrime[0] = false;
    isPrime[1] = false;
    isPrime[2] = true;
    for (int i=3; i<=MAX_VALUE/2; i+=2) {
        if (isPrime[i]) {
            int tmp = i;
            while (tmp+i < MAX_VALUE) {
                tmp += i;
                isPrime[tmp] = false;
            }
        }
    }
    for (int i=0; i<MAX_VALUE; i++) {
        if (isPrime[i]) {
            primes.push_back(i);
        }
    }
}
int countPrime(int val) {
    int i = 0;
    int start = val;
    int cnt = 0;
    while (val > 1) {
        if (isPrime[val]) break;
        if (val % primes[i] == 0) {
            cnt++;
            while (val % primes[i] == 0) {
                val /= primes[i];
            }
        }
        i++;
    }
    return cnt + isPrime[val];
}

void setupPrimality() {
    for (int i=0; i<MAX_VALUE; i++) {
        primality[i] = countPrime(i);
    }
}

void execute(int tc) {
    int a,b,k;
    scanf("%d %d %d", &a, &b, &k);
    int ans = 0;
    for (int i=a; i<=b; i++) {
        if (primality[i] == k) {
            ans ++;
        }
    }
    printf("Case #%d: %d\n", tc, ans);
}


int main() {
    setupPrime();
    setupPrimality();
    int TC;
    scanf("%d", &TC);
    for (int i=1; i<=TC; i++) {
        execute(i);
    }
    return 0;
}