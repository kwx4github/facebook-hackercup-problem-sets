#include<bits/stdc++.h>
using namespace std;
// marks all mutiples of 'a' ( greater than 'a' but less than equal to 'n') as 1.
int primes[700250];
bool arr[10000005];
void markMultiples( int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        arr[ num-1 ] = 1; // minus 1 because index starts from 0.
        ++i;
    }
}
int ctr=0;

// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0

        memset(arr, 0, sizeof(arr));

        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i=1; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
                //printf("%d ", i+1);
                primes[ctr++]=i+1;
                markMultiples( i+1, n);
            }
        }
    }
}
int num[10000002];
int main()
{
int t,a,b,k;
cin>>t;
SieveOfEratosthenes(10000000);
//for(int i=0;i<5;i++)
//cout<<primes[i];
//cout<<ctr;
k=0;
while(k<ctr)
{
for(int i=1;;i++)
{
if(primes[k]*i>10000000)
break;
num[primes[k]*i]++;

}
k++;
//cout<<k;
}
//cout<<"done";
int cases=0;
while(t--)
{
cases++;
cin>>a>>b>>k;
int pr=0,ans=0;
for(int i=a;i<=b;i++)
{
if(num[i]==k)
ans++;
}

cout<<"Case #"<<cases<<": "<<ans<<"\n";
}
return 0;
}

