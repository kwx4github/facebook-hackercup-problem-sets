#!/usr/bin/env python3

limit = 10000001

sieve = [0 for i in range(limit)]

def precompute():
  composites = set()
  for i in range(2, limit):
    if i not in composites:
      sieve[i] = 1
      for j in range(2 * i, limit, i):
        sieve[j] += 1
        composites.add(j)

def solve(A, B, K):
  return sum(1 for i in range(A, B + 1) if sieve[i] == K)

def main():
  precompute()
  T = int(input())
  for case in range(1, T + 1):
    A, B, K = map(int, input().split())
    solution = solve(A, B, K)
    print("Case #%d: %s" % (case, solution))

if __name__ == "__main__":
  main()

