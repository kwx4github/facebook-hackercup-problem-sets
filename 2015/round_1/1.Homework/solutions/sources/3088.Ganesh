#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<string>
#include<algorithm>
#include<functional>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<cassert>
#include<climits>
using namespace std;
#define swapp(a,b) a^=b^=a^=b
#define ll long long int
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define ss(s) scanf("%s",s)
#define sc(c) scanf("%c",&c)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mp make_pair
#define rep(i,n,x) for(i=x;i<n;i++)
#define f(i,n) rep(i,n,0)
#define Min(x,y) ((x)<(y)?(x):(y))
#define Max(x,y) ((x)>(y)?(x):(y))
#define Abs(x) (x>=0?x:-x)
#define getcx getchar_unlocked
#define mem(a,x) memset(a,x,sizeof(a))
#define MOD 1000000007
#define PI 3.1415926535897932384626

/*int cmpfunc (const void * a, const void * b)
{
   return ( *(int*)a - *(int*)b );
}
qsort(array, array.length, sizeof(int), cmpfunc);
*/

#define N 10000010

static int factorCount[N+1];

int main(void)
{
    int i, j;

    for (i = 0; i <= N; i++) {
        factorCount[i] = 0;
    }

    for (i = 2; i <= N; i++) {
        if (factorCount[i] == 0) {
            for (j = i; j <= N; j += i) {
                factorCount[j]++;
            }
        }
    }

    int t;
    si(t);
    f(i,t)
    {
    	int a,b,k,ans=0;
    	si(a);si(b);si(k);
    	for(j=a;j<=b;j++)
    	{
    		if(factorCount[j]==k) ans++;
    	}

    	cout<<"Case #"<<i+1<<": "<<ans<<endl;
    }

    return 0;
}