#include <stdio.h>
#include <vector>
#define MAX 10000000
#define MAXP 40

using namespace std;

bool m1[MAX + 5];
int pcity[MAX + 5];
vector<int> v[MAXP + 5];

int main() {
    freopen("HC15A.in", "r", stdin);
    freopen("HC15A.out", "w", stdout);
    int i, j, test, cas, a, b, k, lo, hi, mid, aind, bind;
    for (i = 3; i * i <= MAX; i += 2) {
        if (m1[i]) continue;
        for (j = 3; i * j <= MAX; j += 2) {
            m1[i * j] = 1;
        }
    }
    for (i = 3; i <= MAX; i += 2) {
        if (m1[i]) continue;
        for (j = i; j <= MAX; j += i) {
            pcity[j]++;
        }
    }
    for (i = 2; i <= MAX; i += 2) {
        pcity[i]++;
    }
    for (i = 2; i <= MAX; i++) {
        v[pcity[i]].push_back(i);
    }
    scanf("%d", &test);
    for (cas = 1; cas <= test; cas++) {
        scanf("%d%d%d", &a, &b, &k);
        if (k > MAXP) {
            printf("Case #%d: 0\n", cas);
            continue;
        }
        if (v[k].size() == 0) {
            printf("Case #%d: 0\n", cas);
            continue;
        }
        lo = 0;
        hi = v[k].size() - 1;
        while (lo < hi) {
            mid = (lo + hi) / 2;
            if (v[k][mid] >= a) hi = mid;
            else lo = mid + 1;
        }
        aind = lo;
        lo = 0;
        hi = v[k].size() - 1;
        while (lo < hi) {
            mid = (lo + hi + 1) / 2;
            if (v[k][mid] <= b) lo = mid;
            else hi = mid - 1;
        }
        bind = lo;
        if (v[k][aind] >= a && v[k][bind] <= b) printf("Case #%d: %d\n", cas, bind - aind + 1);
        else printf("Case #%d: 0\n", cas);
    }
    return 0;
}
