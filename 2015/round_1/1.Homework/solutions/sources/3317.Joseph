#include <bits/stdc++.h>

using namespace std;

#define all(n) (n).begin(),(n).end()
#define rall(n) (n).rbegin(),(n).rend()
#define mp make_pair
#define pb push_back
#define sz size()
#define F first
#define S second
#define FO(i,x) for(int i=0;i<x;i++)

#define READ(s) freopen(s, "r", stdin)
#define WRITE(s) freopen(s, "w", stdout)
//  int dx[]={-2,-2,-1,-1,1,1,2,2}; int dy[]={-1,1,-2,2,-2,2,-1,1}; // Knight Dir
//  int dx[]={-1,-1,-1,0,1,1,1,0}; int dy[]={-1,0,1,1,1,0,-1,-1};  // 8 Dir
//  int dx[]={0,1,-1,0}; int dy[]={1,0,0,-1}; // 4 Dir
// int arr[10000009][11];

#define MAX 10000010
#define MIN 3163
bool prime[10000010];
vector <int> pr;
void sieve ()
{
    memset (prime,1, sizeof (prime));
    prime[0]=prime[1]=0;
    for (int i=4;i<MAX;i+=2) prime[i] = 0;
    for(int i=3;i<=MIN;i+=2)
        if (prime[i])  for (int j=i*i;j<MAX;j+=2*i) prime[j]=0;
    pr.pb(2);
    for(int i = 3;i<MAX;i+=2) if (prime[i]) pr.pb(i);
}
int arr[10000010][10];
void fact(int x){
           int i=0;
           int tmp=x;
           set <int> s;
           while(!prime[x]){
                 if(x%pr[i]==0) { 
				 s.insert(pr[i]);
				 x/=pr[i];
				}
                 else i++; 
           }
           if(x!=1) s.insert(x);
           FO(j,10) arr[tmp][j]=arr[tmp-1][j];
           arr[ tmp ][ (int)s.size() ]++;
}
int main(){
     READ("homework.txt");
 	   WRITE("out.txt");
     sieve();
     for(int i=2;i<=10000000;i++) fact(i);
     
     
     int t,a,b,k;
     cin>>t;
     for(int c=1;c<=t;c++){
     	  cin>>a>>b>>k;
     	  if(k>8) cout<<"Case #"<<c<<": "<< 0 <<endl;
     	  else cout<<"Case #"<<c<<": "<< arr[b][k] - arr[a-1][k] <<endl; 
     }
     
	 return 0;
}
