#include <bits/stdc++.h>

using namespace std;

#define M 10001000
#define K 20

int p[M], d[M];
vector<int> g[K];

void precalc() {
	fill(p, p + M, 0);
	for (int i = 2; i < M; ++i)
		if (d[i] == 0)
			for (int j = i; j < M; j += i)
				d[j] = i;

	for (int i = 2; i < M; ++i) {
		int x = i;
		while (x % d[i] == 0) {
			x /= d[i];
		}
		p[i] = p[x] + 1;
	}

	for (int i = 1; i < M; ++i)
		g[p[i]].push_back(i);

	//cout << *max_element(p, p + M) << "\n";
}

void kill() {
	int a, b, k;
	cin >> a >> b >> k;
	if (k >= K) {
		cout << "0\n";
		return;
	}

	cout << (upper_bound(g[k].begin(), g[k].end(), b) - lower_bound(g[k].begin(), g[k].end(), a)) << "\n";

}

int main() {
	precalc();
	int t;
	cin >> t;
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		kill();
	}
	return 0;
}