#include <iostream>
#include <stack>
#include <set>
#include <vector>
#include <algorithm>
#include <queue>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <string>
#include <map>

#define inf (1 << 30)
#define INF (1<<45LL)
#define pb push_back
#define mp make_pair
using namespace std;

typedef pair<int, int> pi;
typedef long long ll;

/*
 * 
 * 		PUCMM PROGRAMMING FORCE
 * 
 * */

//int BIT[25][10000000];
#define UPPER 10000000
#define PRIMES_AMOUNT 664590

bool p[UPPER + 10];
int primes[PRIMES_AMOUNT];
int f[UPPER + 10];

int primes_amount;

vector<int> P[30];

void gen(){
	
	memset(p, true, sizeof p);
	primes_amount = 0;
	for(int i=2; i <= UPPER; i++){
		if(!p[i]) continue;
		
		primes[primes_amount++] = i;
		for(int j=i+i; j <= UPPER; j += i)
			p[j] = false;
		
	}


	
	for(int i=2; i <= UPPER; i++){
		int aux = i;
		set<int> f;
		for(int j=2; j*j <= aux; j++){
			
			if(p[aux]) break;
			
			if(aux % j == 0) f.insert(j);
			
			while(aux % j == 0)
				aux /= j;
			
		}
		
		if(aux > 1)
			f.insert(aux);

		P[ f.size() ].pb(i);
	}

}



int main(){

	ios_base::sync_with_stdio(false);
	int t; cin >> t;
	
	gen();
	
	for(int T=1; T <= t; T++){
		
		int a, b, k; cin >> a >> b >> k;
		
		int fit = (int)((log(b) / log(2)));
		
		if(fit < k || k >= 10)
			cout << "Case #" << T << ": 0" << endl;
		else{

			int ans = 0;
			
			int p = lower_bound(P[k].begin(), P[k].end(), a) - P[k].begin();
			
			for(int i=p; i < P[k].size(); i++){
				if(P[k][i] > b) break;
				if(P[k][i] >= a && P[k][i] <= b) ans++;
			}
			
			cout << "Case #" << T << ": " <<  ans << endl;
			
		}
	}
	return 0;
}
