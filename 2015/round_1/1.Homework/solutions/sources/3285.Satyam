/*
 * home.cpp
 *
 *  Created on: Jan 17, 2015
 *      Author: satyamrohit
 */

#include <iostream>
#include <cmath>
#include<vector>
using namespace std;

int a[10000000];
unsigned long int count_p = 0;
unsigned long int min1,max1, primacity;

// A function to print all prime factors of a given number n
// A function to print all prime factors of a given number n
void primeFactors(int n)
{
    // Print the number of 2s that divide n
	bool flag = false;
	while(n%2 == 0)
	{
		flag = true;
		n = n/2;
	}
	if(flag) {
		count_p++;
	}

	//if( count_p > primacity) return;
    // n must be odd at this point.  So we can skip one element (Note i = i +2)
    for (int i = 3; i <= sqrt(n); i = i+2)
    {
    	flag = false;
        // While i divides n, print i and divide n
        while (n%i == 0)
        {
        	flag = true;
        	n = n/i;
        	//printf("%d ", i);
        }
        if(flag) {
        		count_p++;
        		//if( count_p > primacity) return;
        		//A.push_back(i);
        }
    }

    if (n > 2){
    	//printf("%d ", n);
    	//A.push_back(n);
    	count_p++;
    	//if( count_p > primacity) return;
    }

}

int main()
{

	unsigned long int tstcase, i = 1, j, count_num;
	cin >> tstcase;

	for( j = 1; j <= 10000000; j++)
	{
		count_p = 0;
		primeFactors(j);
		//cout << j << count_p;
		a[j] = count_p;
	}

	/*for( j = 1; j <= 10000000; j++){
		printf("%d, ", a[j]);
	}*/
	while(i <= tstcase)
	{
		count_num = 0;
		cin >> min1 >> max1 >> primacity;
		for(j = min1; j <= max1; j++){
			if(a[j] == primacity) count_num++;
		}
		printf("Case #%lu: %lu\n", i, count_num);
		i++;
	}
    return 0;
}



