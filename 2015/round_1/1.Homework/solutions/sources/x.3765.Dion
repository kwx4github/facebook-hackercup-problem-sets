package round1;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class Homework {
	public static void main(String[] args) {
		ArrayList<int[]> list = loadFile(args[0]);
		try {
			File output = new File("homework_output.txt");
			PrintWriter out = new PrintWriter(output);

			for (int i = 0; i < list.size(); i++) {
				int[] arr = list.get(i);
				int left = arr[0];
				int right = arr[1];
				int primacity = arr[2];
				int counter = 0;
				for (int k = left; k <= right; k++) {
					int secondCounter = 0;
					int[] primes = new int[]{2,3,5,7,11,13,17,19,23,29,31};
					for (int z = 0; z < primes.length ; z++) {
						if (k % primes[z] == 0) {
							secondCounter++;
						}
					}
					if (secondCounter == primacity) {
						counter++;
					}
				}

				out.printf("Case #%s: %s\n", i + 1, counter);
			}

			out.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	public static boolean isPrime(int i){
		for(int k = 2; k < i; k++){
			if(i % k == 0){
				return false;
			}
		}
		return true;
	}

	public static ArrayList<int[]> loadFile(String fileName) {
		File inputFile = new File(fileName);
		int intNum = 0;
		ArrayList<int[]> caseList = new ArrayList<>();
		try {
			Scanner in = new Scanner(inputFile);
			intNum = Integer.parseInt(in.nextLine());
			for (int k = 0; k < intNum; k++) {
				String line = in.nextLine();
				int[] values = parseValues(line);
				caseList.add(values);
			}
			in.close();
			return caseList;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	public static int[] parseValues(String s) {
		String[] stringArr = s.split(" ");
		int[] intArr = new int[stringArr.length];
		for (int i = 0; i < stringArr.length; i++) {
			intArr[i] = Integer.parseInt(stringArr[i]);
		}
		return intArr;
	}

}
