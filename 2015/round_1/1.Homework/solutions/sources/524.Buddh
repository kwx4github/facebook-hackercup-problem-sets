#include <bits/stdc++.h>
using namespace std;
#define MAXN 10000005
vector<int> primes;
int arr[MAXN];
void computePrimes()
{
	memset(arr,1,sizeof(arr));

	for(int i=2;i<=((int)sqrt(MAXN));i++)
	{
		if(arr[i])
		for(int j=i*i;j<MAXN;j+=i)
			arr[j]=0;
	}
	for(int i=2;i<MAXN;i++)
		if(arr[i])
			primes.push_back(i);	
}
vector<int> primacity[10];
int check(int n,int k)
{
	int pos=lower_bound(primacity[k].begin(),primacity[k].end(),n)-primacity[k].begin();
	if(primacity[k][pos]==n)
	{
		return pos+1;
	}
	else
	{
		return pos;
	}
}
int main()
{
	freopen("homework.txt","r",stdin);
	computePrimes();
	memset(arr,0,sizeof(arr));
	for(int i=0;i<primes.size();i++)
	{
		for(int j=primes[i];j<MAXN;j+=primes[i])
			arr[j]++;
	}
	for(int i=2;i<MAXN;i++)
		primacity[arr[i]].push_back(i);
	int t;
	cin>>t;
	for(int test=1;test<=t;test++)
	{
		int a,b,k;
		cin>>a>>b>>k;
		if(k>9)
			cout<<"Case #"<<test<<": "<<0<<endl;
		else
		{
			cout<<"Case #"<<test<<": "<<check(b,k)-check(a-1,k)<<endl;
		}
	}
	return 0;
}