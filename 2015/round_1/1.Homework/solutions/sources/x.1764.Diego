#include<bits/stdc++.h>

using namespace std;

const int kMaxN = 10000000;

int p[kMaxN+5];
vector<int>adj[9];

void sieve(){
    memset(p,0,sizeof(p));
    for(int i=2;i*i<=kMaxN;++i)
		if(p[i] == 0)
			for(int j=i;j<=kMaxN;j+=i)
				p[j] ++;
}

int getPos(int X,int K){
	return lower_bound(adj[K].begin(),adj[K].end(),X) - adj[K].begin();
}

int main(){
    int T,A,B,K,testCase = 0;
	sieve();
	for(int i=2;i<=kMaxN;i++){
	    adj[p[i]].push_back(i);
	}
	scanf("%d",&T);
	while( T-- ){
		scanf("%d%d%d",&A,&B,&K);
		int ans;
		if(K >= 9)ans = 0;
		else{
		    int posb = getPos(B,K),posa = getPos(A,K);
			if(adj[K][posb] > B)ans = posb-posa;
			else ans = posb-posa+1;
		}
		printf("Case #%d: %d\n",++testCase,ans);
	}
}