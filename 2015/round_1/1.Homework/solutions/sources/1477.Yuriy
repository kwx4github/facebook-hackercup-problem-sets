#include <iostream>
#include <vector>
#include <math.h>
#include <algorithm>
#include <set>
#include <queue>
#include <memory.h>
#include <map>

using namespace std;

const int MAXN = 10000010;

vector < int > pr;
int lp[MAXN], cnt[MAXN];
int t, l, r, k;


void findPrimes() {
    for (int i = 0; i < MAXN; ++i)
        lp[i] = -1;
    for (int i = 2; i < MAXN; ++i) {
        if (lp[i] == -1)
            pr.push_back(i), lp[i] = i;
        for (int j = 0; j < (int)pr.size() && pr[j] <= lp[i] && pr[j] * i < MAXN; ++j)
            lp[pr[j] * i] = pr[j];
    }
}

void calcData() {
    for (int i = 2; i < MAXN; ++i) {
        int x = i;
        while (lp[x] != -1) {
            int d = lp[x];
            ++cnt[i];
            while (x % d == 0)
                x /= d;
        }
    }
}

int main() {
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    findPrimes();
    calcData();
    scanf("%d", &t);
    for (int j = 1; j <= t; ++j) {
        scanf("%d %d %d", &l, &r, &k);
        int ans = 0;
        for (int i = l; i <= r; ++i)
            if (cnt[i] == k)
                ++ans;
        printf("Case #%d: %d\n", j, ans);
    }
    return 0;
}