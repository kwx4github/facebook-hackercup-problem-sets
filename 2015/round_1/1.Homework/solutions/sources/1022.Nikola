#include <cstdio>
#include <vector>

using namespace std;

const int N = 10000010, D = 15;
int q, a, b, k, prim[N], sol[N][D];
bool prost[N];
vector<int> lp;

void init()
{
    for (int i = 2; i < N; i++) if (!prost[i])
    {
        lp.push_back(i);
        for (int j = 2; i * j < N; j++) prost[i * j] = true;
    }
    for (int i = 2; i < N; i++)
    {
        if (!prost[i]) prim[i] = 1; else
        for (auto j : lp) if (!(i % j))        {
            prim[i] = prim[i / j];
            if (i / j % j) prim[i]++;
            break;
        }
    }
    for (int i = 2; i < N; i++)
    {
        for (int j = 0; j < D; j++) sol[i][j] = sol[i - 1][j];
        sol[i][prim[i]]++;
    }
}

void out(int c, int v)
{
    printf("Case #%d: %d\n", c, v);
}

void uradi(int tp)
{
    scanf("%d %d %d", &a, &b, &k);
    if (k >= D) out(tp, 0); else
    out(tp, sol[b][k] - sol[a - 1][k]);
}

int main()
{
    init();
    scanf("%d", &q);
    for (int i = 1; i <= q; i++) uradi(i);
    return 0;
}
