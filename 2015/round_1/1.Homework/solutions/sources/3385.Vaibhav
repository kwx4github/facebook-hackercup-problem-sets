#include <algorithm>
#include <utility>
#include <map>
#include <vector>
#include <list>
#include <cstring>
#include <set>
#include <queue>
#include <cstdio>
#include <iostream>
#include <fstream>
#include <sstream>
#include <cmath>
#include <limits.h>
#include <cstdlib>
#include <stack>
#include <float.h>
#define inf 10000000
#define binf 1000000000000000000
#define sc(x) scanf("%d", &x)
#define sc2(x,y) scanf("d", &x, &y)
#define rep(i,a,b) for(int i=a; i<b; i++)
#define mod 1000000007
#define ll long long
#define m 1000000
using namespace std;
int cnt[10000001];
bool p[10000001];
vector <int> ans[10];
void seive(){
    for(int i=2;i<=10000000;i++){
        if(!p[i]){
            for(int j=1;i*j<10000001;j++){
                cnt[i*j]++;
                p[i*j]=true;
            }
        }
        ans[cnt[i]-1].push_back(i);
    }
}
int main(){
    int s=clock();
    seive();
    int t;
    ifstream in;
    in.open("homework.txt");
    ofstream out;
    out.open("output.txt");
    in>>t;
    for(int i=1;i<=t;i++){
        int a,b,k;
        in>>a>>b>>k;
        if(k>=10){
            out<<"Case #"<<i<<": ";
            out<<0<<endl;
            continue;
        }
        int x = lower_bound(ans[k-1].begin(),ans[k-1].end(),a)-ans[k-1].begin();
        int y = upper_bound(ans[k-1].begin(),ans[k-1].end(),b)-ans[k-1].begin();
        int num = y-x;
        out<<"Case #"<<i<<": ";
        out<<num<<endl;
    }
    //cout<<(clock()-s)/double(CLOCKS_PER_SEC)*1000 <<endl;
}
