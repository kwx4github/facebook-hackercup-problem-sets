import java.io.*;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class ProbA {
    boolean eof;

    public static void main(String[] args) throws IOException {
        new ProbA().run();
    }

    String next() {
        while (st == null || !st.hasMoreTokens()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (Exception e) {
                eof = true;
                return "-1";
            }
        }
        return st.nextToken();
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;

    int nextInt() {
        return Integer.parseInt(next());
    }

    void run() throws IOException {
        String name = "input.txt";
        InputStream input = System.in;
        OutputStream output = System.out;
        try {
            File f = new File(name);
            if (f.exists() && f.canRead()) {
                input = new FileInputStream(f);
                output = new FileOutputStream(name + ".out");
            }
        } catch (Exception e) {
        }

        br = new BufferedReader(new InputStreamReader(input));
        out = new PrintWriter(output);

        solve();

        br.close();
        out.close();
    }

    void solve() {
        int test = nextInt();
        boolean[] notPrime = new boolean[10_000_001];
        ArrayList<Integer> primes = new ArrayList<>();
        for (int i = 2; i < notPrime.length; ++i) {
            if (!notPrime[i]) {
                primes.add(i);
                int j = ((long) i) * i < 1e9 ? i * i : notPrime.length;
                while (j < notPrime.length) {
                    notPrime[j] = true;
                    j += i;
                }
            }
        }

        System.err.println("here 1");

        int[] primacity = new int[10_000_001];

        for (int x : primes){
            for (int p = x; p <= 10_000_000; p += x){
                ++primacity[p];
            }
        }


        for (int t_id = 0; t_id < test; ++t_id) {
            out.print("Case #" + (t_id + 1) + ": ");

            int l = nextInt();
            int r = nextInt();
            int k = nextInt();
            int ans = 0;
            for (int i = l; i <= r; ++i) {
                if (primacity[i] == k) {
                    ++ans;
                }
            }
            out.println(ans);
        }
    }

    class Pair {
        int x;
        int y;
        int p;

        Pair(int x, int y, int p) {
            this.x = x;
            this.y = y;
            this.p = p;
        }
    }
}
