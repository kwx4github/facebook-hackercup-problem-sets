#include<bits/stdc++.h>
#define REP(i,n) for(int (i)=0;i<(int)(n);++(i))
#define PB push_back
#define FT first
#define SD second
#define ZERO(x) memset(x,0,sizeof(x))
#define NEG(x) memset(x,-1,sizeof(x))
#define RI(x) scanf("%d",&(x))
#define RII(x,y) scanf("%d%d",&(x),&(y))
#define RIII(x,y,z) scanf("%d%d%d",&(x),&(y),&(z))
#define OIII(x,y,z) printf("%d %d %d\n",(x),(y),(z))
#define OII(x,y) printf("%d %d\n",(x),(y))
#define OI(x) printf("%d\n",(x))
#define RS(s) scanf("%s",(s))
#define MP(x,y) make_pair((x),(y))
typedef long long LL;
using namespace std;
typedef pair<int,int> PII;
const int MOD = 1e9+7;
const int maxn = 5010;
int n,t;
vector<int> prime;
bool vis[10000001];
vector<int> kk[664580];
int kkk[10000001];
int main(){
    //freopen("homework.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int U = sqrt(10000000+0.5);
    int UU = sqrt(U+0.5);
    for(int i=2;i<=10000000;++i)if(!vis[i]){
        prime.PB(i);
        kkk[i]++;
        for(int j=i+i;j<=10000000;j+=i){
            vis[j] = 1;
            kkk[j]++;
        }
    }
    int ub = prime.size();
    //OI(ub);
    kk[0].PB(1);
    for(int i=2;i<=10000000;++i) {
        kk[kkk[i]].PB(i);
    }

    //REP(i,20)OI(kk[5][i]);

    int T;
    RI(T);
    for(int kase=1;kase<=T;++kase) {
        int A,B,K;
        RIII(A,B,K);
        if(K>ub || kk[K].size() == 0){
            printf("Case #%d: 0\n",kase);
        } else {
            int ii = upper_bound(kk[K].begin(),kk[K].end(),B)-kk[K].begin();
            int jj = lower_bound(kk[K].begin(),kk[K].end(),A)-kk[K].begin() - 1;
            //for(int i=jj;i<=ii;++i)OI(kk[K][i]);
            printf("Case #%d: %d\n",kase,max(ii-jj-1,0));
        }
    }
}
