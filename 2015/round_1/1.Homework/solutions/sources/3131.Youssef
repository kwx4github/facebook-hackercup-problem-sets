#include<iostream>
#include<stdio.h>
#include<vector>
#include<map>
#include<string.h>
#include<algorithm>
#include<utility>
#include<cmath>
#include<set>
#include<string>
#include<queue>
using namespace std;
#define MOD 1000000007
int isPrime[10001010];
int main(){
	memset(isPrime, 0, sizeof isPrime);
	isPrime[2] = 1;
	for(int i = 4; i <= 10000010; i += 2)
		isPrime[i] = 1;
	for(int i = 3; i <= 10000010; i += 2){
		if(!isPrime[i]){
			isPrime[i] = 1;
			for(int j = i + i; j <= 10000010; j += i){
				isPrime[j] ++;
			}
		}
	}
	vector<int> primacity[4000];
	for(int i = 2; i <= 10000010; ++ i){
		primacity[isPrime[i]].push_back(i);
	}
	long long t,a,b,k;
	cin >> t;
	for(int z = 1; z <= t; ++ z){
		cin >> a >> b >> k;
		cout << "Case #" << z << ": ";
		if(k > 4000){
			cout << 0 << endl;
		}
		else{
			int ind1 = lower_bound(primacity[k].begin(), primacity[k].end(), a) - primacity[k].begin();
			int cnt = 0;
			while(ind1 < primacity[k].size() && primacity[k][ind1] >= a && primacity[k][ind1] <= b){
				cnt ++; ind1++;
			}
			cout << cnt << endl;
		}
	}
	return 0;
}