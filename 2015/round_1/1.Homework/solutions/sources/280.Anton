#include <cstdio>
#include <cassert>

#include <vector>
#include <algorithm>

using namespace std;

int get_primacity(int x) {
  int p = 0;
  for (int d = 2; x > 1; d++) {
    if (x % d == 0) {
      p++;
      while (x % d == 0) {
        x /= d;
      }
    }
  }
  return p;
}

int main() {
  const int n = (int)1e7;
  vector<int> p(n + 1, 0);

  fprintf(stderr, "Precalc ...");
  for (int d = 2; d <= n; d++) {
    if (p[d] == 0) {
      p[d] = 1;
      for (int i = d + d; i <= n; i += d) {
        p[i] += 1;
      }
    }
  }
  for (int x = 2; x <= 1000; x++) {
    assert(p[x] == get_primacity(x));
  }
  for (int x = n - 1000; x <= n; x++) {
    assert(p[x] == get_primacity(x));
  }

  fprintf(stderr, "finished\n");

  int T;
  scanf("%d", &T);
  for (int t = 0; t < T; t++) {
    int a, b, k, ans = 0;
    scanf("%d%d%d", &a, &b, &k);
    for (int i = a; i <= b; i++)
      ans += (p[i] == k);
    printf("Case #%d: %d\n", t + 1, ans);
  }
  return 0;
}
