#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <cassert>

using namespace std;



const int TABLE_SIZE = 20000000;
int primacies[TABLE_SIZE];

void precompute()
{
	static bool done = false;
	if (!done)
	{
		for (int n=2 ; n < TABLE_SIZE ; n++)
			if (primacies[n] == 0)
				for (int m=n ; m < TABLE_SIZE ; m += n)
					primacies[m]++;
		done = true;

		// for (int i=2 ; i < 50 ; i++)
		// 	cout << i << " -> " << primacies[i] << endl;
	}
}

int solve(int A, int B, int K)
{
	precompute();
	int count = 0;
	for (int n=A ; n <= B ; n++)
		if (primacies[n] == K)
			count++;
	return count;
}


int main(int argc, char **argv)
{
	if (argc != 2)
	{
		cout << "Usage: " << argv[0] << " <input file>" << endl;
		return 1;
	}

	ifstream ifs(argv[1]);
	if (ifs.fail())
	{
		cout << "Can't open file " << argv[1] << endl;
		return 1;
	}

	int T;
	ifs >> T;
	for (int i_t=1 ; i_t <= T ; i_t++)
	{
		int A, B, K;
		ifs >> A >> B >> K;

		int res = solve(A, B, K);

		cout << "Case #" << i_t << ": " << res << endl;
	}
}
