#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<deque>
#include<string>
#include<limits.h>
#include<vector>
#include<cmath>
#include<cstdlib>
#include<cassert>
#include<cctype>
#include<cstring>

#define IT(a,it) for(auto it=a.begin(); it != a.end(); it++)
#define ITT(a,it) for(typeof(a.begin()) it=a.begin();it!=a.end();it++)
#define REV_IT(a,it) for(auto it=a.rbegin(); it != a.rend(); it++)
#define REV_ITT(a,it) for(typeof(a.rbegin()) it=a.rbegin(); it != a.rend(); it++)
#define LL long long
#define LD long double
#define MP make_pair
#define FF first
#define SS second
#define PB push_back
#define INF (int)(1e9)
#define L_INF (LL)(1e18)
#define EPS (double)(1e-9)
#define L_EPS (LD)(1e-18)
#define PI (double)(3.141592653589793238)

#ifndef ONLINE_JUDGE
#  define LOG(x) cerr << #x << " = " << (x) << endl
#else
#  define LOG(x) 0
#endif

#define MAXX 10000007

using namespace std;

typedef pair <int, int> pi_i;
typedef pair<int, pi_i> pi_ii;

bool cmp(int a, int b){ return a>b; }
template<class T> T gcd(T a, T b) { return b ? gcd(b, a % b) : a; }
template<class T> T lcm(T a, T b) { return a * b / gcd(a, b); }

int primes[MAXX], no[MAXX];
vector<int> prr;
int A, B, K;

void sieve(){
	for(int i=2;i*i<=MAXX;i++){
		if(primes[i] == 0){
			for(int j=i*i;j<MAXX;j+=i){
				primes[j] = 1;
			}
		}
	}
	
	for(int i=2;i<MAXX;i++){
		if(primes[i] == 0){
			prr.PB(i);
		}
	}
	//cout<<prr.size()<<endl;
}

int get(int curr){
	int ans = 0;
	if(curr % 2 == 0) ans++;
	while(curr % 2 == 0) curr = curr/2;
	for(int i=3;i*i<=curr;i+=2){
		if(curr % i == 0) ans++;
		while(curr % i == 0){
			curr = curr/i;
		}
	}
	
	if(curr > 2) ans++;
return ans;
}

int get2(int curr){
	int ans = 0;
	
	for(int i=0;i<prr.size();i++){
		if(curr % prr[i] == 0) ans++;
		while(curr % prr[i] == 0){
			curr = curr/prr[i];
		}
		if(prr[i] * prr[i] > curr) break;
		if(curr <= 1) break;
	}
	
	if(curr > 2) ans++;
return ans;
}

void solve1(){
	int ct = 0;
	for(int i=2;i<MAXX;i++){
		if(primes[i] == 0) no[i] = 1;
		else{
			no[i] = get2(i);
		}
		ct++;
		//if(ct == 100000) ct = 0, cout<<i<<endl;
		//cout<<i<<endl;
	}
}

void solve2(){
	int ans = 0;
	for(int i=A;i<=B;i++){
		if(no[i] == K) ans++;
	}
	cout<<ans<<endl;
}

int main(){
	ios_base::sync_with_stdio(false);
	//freopen("out.txt","w",stdout);
	
	sieve();
	cout<<"Start"<<endl;
	solve1();
	cout<<"Done"<<endl;
	
	freopen("out.txt","w",stdout);
	int t;
	//t = 100;
	cin>>t;
	int cas = 1;
	while(t--){
		cin>>A>>B>>K;
		//A = 2;B = 10000000;K = 5;
		cout<<"Case #"<<cas<<": ";cas++;
		solve2();
	}
return 0;	
}
