 #include <limits>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#define PR(x) cout<<#x<<"="<<x<<endl
#define READ2(x,y) scanf("%d %d",&x,&y)
#define REP(i,a,b) for(decltype(b) i=a;i<b;i++)
#define RP(i,a) for(decltype(a) i=0;i<a;i++)
#define tr(iter,container) for(auto iter = container.begin();iter!=container.end();iter++) 
#define S(x) cin>>x
#define PRARR(x,n) for(decltype(n) i=0;i<n;i++) cout<<#x<<"["<<i<<"]= "<<x[i]
#define rd(arr,i,n) for(decltype(n) i=0;i<n;i++) cin>>arr[i]
#define PB push_back
#define SUM(arr,n,sum) {sum=0;for(decltype(n) i=0;i<n;i++) sum+=arr[i]; }
#define VC vector
#define CLR(arr) memset(arr,0,sizeof(arr))
#define FILL(arr,val) memset(arr,val,sizeof(arr))
using namespace std;
int test = 1;
void solve(vector<int> const &factors){
    int A,B,K;
    S(A);S(B);S(K);
    cout<<count(factors.begin() + A, factors.begin()+B+1, K)<<endl;
}
void pre(vector<int> &factors){
    const int MAX = 10000000;
    REP(i,2,MAX+1){
        int numbers = i;
        int cntr = 0;
        for (int tmp = 2; tmp<=numbers/tmp; tmp++){
            bool flg = false;
            while(numbers%tmp==0){
                flg = true;
                numbers/=tmp;
            }
            cntr+=(flg);
        }
        if (numbers>1) cntr++;
        factors[i] = cntr;
    }
}
int main(){
    #ifndef ONLINE_JUDGE
    test = 3;
    #endif
    vector<int> factors(10000001);
    pre(factors);

    S(test);
    for (int i=0;i<test;i++){
        cout<<"Case #"<<i+1<<": ";
        solve(factors);
    }
}

