var fs = require('fs');

var x = [];
function factor(n) {
 if (x[n]) return x[n];
 if (isNaN(n) || !isFinite(n) || n%1!=0 || n==0) return ''+n;
 if (n<0) return '-'+factor(-n);
 var minFactor = leastFactor(n);
 if (n==minFactor) { 
 	x[n] = ''+n;
 	return x[n];
 }
  x[n] = minFactor+'*'+factor(n/minFactor);
  return x[n];
}

function leastFactor(n) {
 if (isNaN(n) || !isFinite(n)) return NaN;  
 if (n==0) return 0;  
 if (n%1 || n*n<2) return 1;
 if (n%2==0) return 2;  
 if (n%3==0) return 3;  
 if (n%5==0) return 5;  
 var m = Math.sqrt(n);
 for (var i=7;i<=m;i+=30) {
  if (n%i==0)      return i;
  if (n%(i+4)==0)  return i+4;
  if (n%(i+6)==0)  return i+6;
  if (n%(i+10)==0) return i+10;
  if (n%(i+12)==0) return i+12;
  if (n%(i+16)==0) return i+16;
  if (n%(i+22)==0) return i+22;
  if (n%(i+24)==0) return i+24;
 }
 return n;
}

var p = [];
function Primacity(n) {
	if (p[n]) return p[n];
	var str = factor(n);
	var arr = str.split("*");
	arr = arr.filter (function (v, i, a) { return a.indexOf (v) == i });
	p[n] = arr.length;
	return p[n];
}

fs.readFile('1.txt', 'utf8', function (err,data) {
	if (err) {
    	return console.log(err);
  	}

  	var res = data.split("\n");
  	var t = parseInt(res[0]);

  	var result = '';
  	for (var i = 1; i < t + 1; i++) {
  		console.log(i);
  		var ss = res[i].split(" ");
  		var a = parseInt(ss[0]);
  		var b = parseInt(ss[1]);
  		var k = parseInt(ss[2]);
  		var count = 0;
  		if (k < 7000000) {
	  		for (var j = a; j < b+1; j++) {
	  			if (Primacity(j) == k) count++;
	  		}
  		}
  		result += 'Case #' + i + ': ' + count + '\n';
  	}
  	fs.writeFile('1.out', result);
 });