#include <bits/stdc++.h>

using namespace std;

#define MAXN 10000000

bool pr[MAXN+1];

int divisor[MAXN+1];

int primacity[MAXN+1];

void crivo(int n) {
	memset(pr, true, n*sizeof(bool));
	pr[0] = pr[1] = false;
	for(int i = 2; i*i <= n; i++){
		if(!pr[i] || !(i&1) && i > 2) continue;
		int k = i*i;
		divisor[i] = i;
		while(k <= n){
			pr[k] = false;
			divisor[k] = i;
			k += i;
		}
	}
}

int main(){
	crivo(10000000);
	int i, j, primo;
	for(i = 0; i < MAXN+1; i++)
		primacity[i] = 0;

	for(i = 2; i < MAXN+1; i++){
		if(pr[i] == true){
			j = primo = i;
			
			while(j < MAXN+1){
				primacity[j]++;
				j += primo;
			}
		}
	}

	int t, k, a, b, ans;
	
	scanf(" %d", &t);
	
	for(j = 1; j <= t; j++){
		scanf(" %d %d %d", &a, &b, &k);
		ans = 0;
		for(i = a; i <= b; i++){
			if(primacity[i] == k)
				ans++;
		}
		
		printf("Case #%d: %d\n", j, ans);
	}
	
	return 0;
}
			