#!/usr/bin/env python

import sys
import numpy as np
import sympy

N = int(1e7) + 1
PRIMACITY = np.zeros(N)
PRIMACITY = np.load('primacities.npy')

def compute_and_save_primacities():
    for i in range(N):
        PRIMACITY[i] = len(sympy.primefactors(i))

def primacity(n):
    return len(sympy.primefactors(n))

def solve(a, b, k):
    out = 0
    for n in range(a, b+1):
        if PRIMACITY[n] == k:
        #if primacity(n) == k:
            out += 1
    return out 


def main():
    if len(sys.argv) > 1:
        input_file = sys.argv[1]
    else:
        sys.stderr.write("Usage:\n")
        sys.stderr.write("\t%s input_file\n" % sys.argv[0])
        sys.exit(1)

    f = open(input_file)
    T = int(f.readline())
    sys.stderr.write("%d test cases\n" % T)

    for i in range(T):
        # read input data
        l = f.readline().split()
        a = int(l[0])
        b = int(l[1])
        k = int(l[2])
        sys.stderr.write("%d %d %d\n" % (a, b, k))

        # call the function that solves the problem
        answer = solve(a, b, k)

        # print the answer
        print "Case #%d: %d" % (i+1, answer)


if __name__ == '__main__': main()
