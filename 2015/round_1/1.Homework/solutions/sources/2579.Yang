#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<vector>

using namespace std;

const int MAXN = 10000001;
const int K_LIMIT = 4000;

short primacity[MAXN];
vector<vector<int> >  dist(K_LIMIT);

int main(){
    int T;
	memset(primacity,0,sizeof(primacity));
	
	for(int i=2;i < MAXN;i++){
        if(primacity[i] == 0){
        	primacity[i] = 1;
			for(int j=2*i;j < MAXN;j+=i){
				primacity[j]++;
			}
		}
    }
    
    for(int i=2;i<MAXN;i++){
		dist[primacity[i]].push_back(i);
	}
	
    scanf("%d",&T);
    for(int i=1;i<=T;i++){
		int A,B,K;
		scanf("%d%d%d",&A,&B,&K);
        if(K >= K_LIMIT || dist[K].size() == 0){
            printf("Case #%d: 0\n",i);
        }else{
			int l = 0,r = dist[K].size();
            while(l < r){
				int mid = (l+r)/2;
                if(dist[K][mid] < A)
					l = mid + 1;
				else
					r = mid;
            }

            int s = l;
            r = dist[K].size();
            while(l < r){
				int mid = (l+r)/2;
                if(dist[K][mid] <= B)
					l = l+1;
				else
					r = mid;
			}
            int e = r;
            int ans = e - s <= 0 ? 0 : e-s;
            printf("Case #%d: %d\n",i,ans);
        }	
	}
}
