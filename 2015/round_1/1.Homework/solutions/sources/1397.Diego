import java.util.LinkedList;
import java.util.Scanner;


public class Homework {
	
	
	
	static LinkedList<Integer> primes = new LinkedList<Integer>();
	static int[][] primacity = new int[11][10000001];
	
	static void genprimes(){
		primes.add(2);
		for(int  i = 3; i < 10000000; i+=2){
			boolean flag = true;
			for(long p: primes){
				if ((p*p) > i)
					break;
				if (i % p == 0){
					flag = false;
					break;
				}
			}
			if (flag)
				primes.add(i);
		}
	}
	
	static int computeprimacity(int number){
		int primacity = 0;
		for(long p : primes){
			if ((p * p) > number)
				break;
			if(number % p == 0){
				primacity++;
				while(number % p == 0)
					number /= p;
			}
		}
		if (number != 1)
			primacity++;
		return primacity;
	}
	
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		genprimes();
		for(int i = 0; i < 11; i++)
			primacity[i][0] = 0;
		for(int i = 1; i <= 10000000; i++){
			int pri =  computeprimacity(i);
			for(int j = 0; j < 11; j++)
				primacity[j][i] = primacity[j][i - 1];
			primacity[pri][i]++;
		}
		int T = sc.nextInt();
		for(int c = 1; c <= T; c++){
			int A = sc.nextInt();
			int B = sc.nextInt();
			int K = sc.nextInt();
			int ans = 0;
			if (K <= 10)
				ans = primacity[K][B] - primacity[K][A - 1];
			System.out.printf("Case #%d: %d\n", c, ans);
		}
		sc.close();
	}

}
