#include <set>
#include <map>
#include <list>
#include <ctime>
#include <stack>
#include <cmath>
#include <queue>
#include <bitset>
#include <vector>
#include <cstdio>
#include <climits>
#include <cstring>
#include <iomanip>
#include <utility>
#include <sstream>
#include <string.h>
#include <unistd.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define xx first
#define yy second
#define mp make_pair
#define pb push_back
#define PP pair<int, int>
#define endl "\n"
#define MM 10000000
#define sqr(x) ((x) * (x))
#define ABS(x) ((x < 0) ? -(x) : (x))
#define eps (1e-9)
#define equal(a, b) (ABS(a - b) < eps)
typedef unsigned long long ULL;
typedef long long LL;
typedef pair< int, PP > Edge;

template<class T> string tostring(T x) { ostringstream out; out<<x; return out.str();}
LL toint(string s) { istringstream in(s); LL x; in>>x; return x; }

vector<int> prime;
map<int, int> hash;
int p[10000001][10];

void generator() {
	for(int i = 2; i <= 10000000; i++){
		if(hash[i] == 0) {
			for(int j = i; j <= 10000000; j += i) {
				hash[j]++;
			}
		}
	}
	for(int i = 2; i <= MM; i++) {
		for(int j = 1; j <= 9; j++) {
			p[i][j] = p[i-1][j];
		}
		p[i][hash[i]]++;
	}
}

int main() {
	freopen("homework_example.txt", "r", stdin);
	freopen("homework_example_output.txt", "w", stdout);
	int T, A, B, K, c = 0;
	generator();
	cin >> T;
	while(T--) {
		c++;
		cin >> A >> B >> K;
		int ans;
		if(K > 9)
			ans = 0;
		else {
			ans = p[B][K] - p[A - 1][K];
		}
		cout << "Case #" << c << ": " << ans << endl;
	}
	return 0;
}

