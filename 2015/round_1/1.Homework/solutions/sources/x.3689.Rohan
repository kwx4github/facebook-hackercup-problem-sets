#include <iostream>
#include <vector>
using namespace std;

const long N = 10000000;
long lp[N+1];
vector<long> pr;

void init()
{
    for (long i=2; i<=N; ++i) 
	{
		if (lp[i] == 0) 
		{
			lp[i] = i;
			pr.push_back (i);
		}
		for (long j=0; j<pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)
			lp[i * pr[j]] = pr[j];
	}
}


long count(long n)
{
	long ans = 0;
	long curprime = 0;
	while (n!=1)
	{
		int minp = lp[n];
		if (minp != curprime) ++ans, curprime = minp;

		n/=minp;
	}
	return ans;
}

long f(long a, long b, long long c)
{
	long cnt = 0;
	for (long i = a; i <= b; ++i)
		if (count(i)==c)
			++cnt;
	return cnt;
}


int main()
{
	init();
	int t,i;
	long a,b,ans;
	long long c;
	cin>>t;
	for(i=1;i<=t;i++)
	{
		cin>>a>>b>>c;
		ans=f(a,b,c);
		 cout<<"\nCase #"<<i<<": "<<ans;
	}

	return 0;
}
