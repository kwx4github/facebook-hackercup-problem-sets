

//!!!!!!!!! NEVER GIVE UP !!!!! NEVER !!!!!!!! 
/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <utility>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <queue>
#include <sstream>
#include <iomanip>
#include <limits>
using namespace std;
//cout << fixed << setprecision(4);
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
int MAX = 10000009; 
int prime[10000009+1];
int primacity[10000009+1]; 
int seive()
{
   mem(prime,1);
   rep(i,MAX+1)
     prime[i] = 1 ; 
   //cout<<prime[2]<<endl;
  // Arrays.fill(prime,true);
   prime[0]= 0;
   prime[1]= 0;
 //  int m = sqrt(n);

   for (int i=2; i<=(int)sqrt(MAX); i++)
      {if (prime[i]==1)
         {for (int k=2; k*i<=MAX; k++)
             {prime[i*k]=0;
             } 
         }
        }    
}
int primacit()    //using seive 
{
   mem(primacity,0);
  // cout<<primacity[2];
   for(int i=2;i<=(int)sqrt(MAX);i++)
   {
      for(int k=1;k*i<=MAX;k++)
      {
            if(prime[i]==1)
            {  //cout<<"fuck";
               primacity[k*i]+=1;
            }
      }
   }
}
int main()
{ 
   /*#ifdef _WIN32 
    {freopen("input.txt", "r", stdin);
     freopen("output.txt","w",stdout);}
   #endif // LOCAL_USER
   */
seive();
primacit();

//for(int i=2;i<=MAX;i++)
 //  ans[i] = primacity[i] + ans[i-1]; 
geti(t);
int i =1 ;
//cout<<"hello";
while(i<=t)
{
   geti(A);
   geti(B);
   geti(k);
   int count = 0 ; 
   for(int j=A;j<=B;j++)
   {  //cout<<"A "<<j<<" "<<primacity[j]<<endl;
      if(primacity[j] == k)
         count+=1;
   }
   cout<<"Case #"<<i<<": "<<count<<endl; 
i++;
}    
return 0;
}