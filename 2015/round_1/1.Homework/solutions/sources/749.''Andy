/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = 1000000007;

void solve(int test_num) {
  const int MAX = 10000000;
  vector<int> cnt(MAX + 1, 0);
  for (int i = 2; i <= MAX; i++)
    if (cnt[i] == 0)
      for (int j = i; j <= MAX; j += i)
        cnt[j]++;
  vector<int> vals[10];
  for (int i = 2; i <= MAX; i++)
    vals[cnt[i]].push_back(i);
  int T;
  cin >> T;
  for (int t = 1; t <= T; t++) {
    int A, B, K;
    cin >> A >> B >> K;
    const int res =
        K > 9 ?
            0 :
            (upper_bound(vals[K].begin(), vals[K].end(), B)
                - lower_bound(vals[K].begin(), vals[K].end(), A));
    cout << "Case #" << t << ": " << res << endl;
  }
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
  double start_t = clock();
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
//cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
