#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,arr) for (__typeof((arr).begin()) it=(arr).begin(); it!=(arr).end(); it++)

const int maxn = 10000000;

bool isp[maxn+5];
int  cnt[maxn+5] = {0};
vector <int> p[10];

int main()
{
	memset(isp,true,sizeof(isp));
	for ( int i = 2; i * i <= maxn; i++ ) if ( isp[i] )
		for ( int j = i; j <= maxn; j += i ) isp[j] = false, cnt[j]++;
	
	FOR(i,2,maxn) p[cnt[i]].push_back(i);
	
	int T;
	scanf( "%d", &T );
	FOR(tc,1,T) {
		int A, B, K;
		scanf( "%d %d %d", &A, &B, &K );
		int ans = 0;
		if ( K <= 8 )
			ans = upper_bound(p[K].begin(),p[K].end(),B) - lower_bound(p[K].begin(),p[K].end(),A);
		printf( "Case #%d: %d\n", tc, ans );
	}

	return 0;
}
