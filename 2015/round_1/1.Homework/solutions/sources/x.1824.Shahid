#include<stdio.h>
#define Get getchar()
int getInt() { int a=0,s=1; char c=0; while(c<33) c=Get; if(c=='-') {s=-1; c=Get;} while(c>33) {a=(a<<3)+(a<<1)+c-'0'; c=Get;} return a*s; }

#define maxi 10000007

int notPrime[maxi],freq[maxi],A,B,K;
int dp[8][maxi];

int solve() {
	return K>8 ? 0 : dp[K][B]-dp[K][A-1];
}

void prepare()
{
	memset(notPrime,0,sizeof(notPrime));
	memset(freq,0,sizeof(freq));
	int i,j,s=3200;
	notPrime[0]=1; notPrime[1]=1;
	for(i=2;i<=s;i++)
		if(!notPrime[i]) {
			freq[i]++;
			for(j=i+i;j<maxi;j+=i) { notPrime[j]=1; freq[j]++; }
		}
	for(i=s+1;i<maxi;i++) if(!notPrime[i]) freq[i]++;
	memset(dp,0,sizeof(dp));
	for(j=0;j<8;j++) dp[j][0]=0; dp[0][0]=1;
	for(i=1;i<maxi;i++) {
		for(j=0;j<8;j++) dp[j][i]=dp[j][i-1];
		dp[freq[i]][i]++;
	}
}

int main()
{
	prepare();
	int cas,T=getInt();
	for(cas=1;cas<=T;cas++) {
		A=getInt(); B=getInt(); K=getInt();
		int res=solve();
		printf("Case #%d: %d\n",cas,res);
	}
	return 0;
}