// Homework

#include <iostream>
#include <cmath>
using namespace std;

bool is_prime[10000005];
int prime_cnt[10000005];
int interval[10][10000005];

void make_prime()
{
	prime_cnt[0] = 0;
	prime_cnt[1] = 0;
	for ( long long i = 2; i < 10000005; i++ ) 
	{
		is_prime[i] = true;
		prime_cnt[i] = 0;
	}
	prime_cnt[2] = 1;
	for ( long long i = 4; i < 10000005; i += 2 ) 
	{
		is_prime[i] = false;
		prime_cnt[i]++;
	}
	for ( long long i = 3; i < 10000005; i += 2 )
	{
		if ( is_prime[i] )
		{
			prime_cnt[i] = 1;
			for ( long long j = 2 * i; j < 10000005; j += i )
			{
				is_prime[j] = false;
				prime_cnt[j]++;
			}
		}
	}
	return;
}

void make_interval()
{
	for ( int i = 0; i < 10; i++ ) interval[i][0] = 0;
	for ( int i = 1; i < 10000005; i++ )
	{
		for ( int j = 0; j < 10; j++ ) interval[j][i] = interval[j][i - 1];
		interval[prime_cnt[i]][i]++;
	}
	return;
}

int main() 
{
	make_prime();
	make_interval();
	int t;
	cin >> t;
	for ( int h = 1; h <= t; h++ )
	{
		int a, b, k;
		cin >> a >> b >> k;
		cout << "Case #" << h << ": " << interval[k][b] - interval[k][a - 1] << endl;
	}
	return 0;
}