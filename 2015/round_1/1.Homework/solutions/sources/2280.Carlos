package es.hackerCup;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Homework {

	public static void main(final String[] args) throws Exception {
		System.setOut(new PrintStream(new FileOutputStream("homework/homework_out.txt")));

		try (Scanner in = new Scanner(new FileInputStream("homework/homework.txt"))) {
			int numCases = in.nextInt();
			List<Case> cases = new ArrayList<Case>();

			int maximun = 0;
			int minimun = Integer.MAX_VALUE;

			for (int i = 1; i <= numCases; i++) {
				int minRange = in.nextInt();
				int maxRange = in.nextInt();
				int primacity = in.nextInt();

				cases.add(new Case(minRange, maxRange, primacity));
				minimun = Math.min(minRange, minimun);
				maximun = Math.max(maxRange, maximun);
			}

			List<Integer> primacities = new ArrayList<>();
			for (int i = 1; i <= maximun; i++) {
				primacities.add(getPrimacity(i));
			}

			for (int i = 1; i <= cases.size(); i++) {
				System.out.print(String.format("Case #%d: ", i));
				int count = 0;
				Case primCase = cases.get(i - 1);
				for (int num = primCase.getMinRange(); num <= primCase.getMaxRange(); num++) {
					if (primacities.get(num - 1) == primCase.getPrimacity()) {
						count++;
					}
				}
				System.out.println(count);
			}
		}
	}

	public static int getPrimacity(int n) {
		int numFactors = 0;

		if ((n % 2) == 0) {
			while ((n % 2) == 0) {
				n = n / 2;
			}
			numFactors++;
		}

		for (int i = 3; i <= Math.sqrt(n); i = i + 2) {
			if ((n % i) == 0) {
				while ((n % i) == 0) {
					n = n / i;
				}
				numFactors++;
			}
			if (n == 1) {
				return numFactors;
			}
		}

		if (n > 2) {
			numFactors++;
		}
		return numFactors;
	}

	public static class Case {
		private final int minRange;
		private final int maxRange;
		private final int primacity;

		public Case(final int minRange, final int maxRange, final int primacity) {
			this.minRange = minRange;
			this.maxRange = maxRange;
			this.primacity = primacity;
		}

		public int getMinRange() {
			return minRange;
		}

		public int getMaxRange() {
			return maxRange;
		}

		public int getPrimacity() {
			return primacity;
		}

	}
}
