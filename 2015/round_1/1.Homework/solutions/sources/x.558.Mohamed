#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

#define REP(i,n) for( (i)=0 ; (i)<(n) ; (i)++ )
#define rep(i,x,n) for( (i)=(x) ; (i)<(n) ; (i)++ )
#define REV(i,n) for( (i)=(n) ; (i)>=0 ; (i)-- )
#define FORIT(it,x) for( (it)=(x).begin() ; (it)!=(x).end() ; (it)++ )
#define foreach(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define rforeach(it,c) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();++it)
#define foreach2d(i, j, v) foreach(i,v) foreach(j,*i)
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define SZ(x) ((int)(x).size())
#define MMS(x,n) memset(x,n,sizeof(x))
#define mms(x,n,s) memset(x,n,sizeof(x)*s)
#define pb push_back
#define mp make_pair
#define NX next_permutation
#define UN(x) sort(all(x)),x.erase(unique(all(x)),x.end())
#define CV(x,n) count(all(x),(n))
#define FIND(x,n) find(all(x),(n))-(x).begin()
#define ACC(x) accumulate(all(x),0)
#define PPC(x) __builtin_popcount(x)
#define LZ(x) __builtin_clz(x)
#define TZ(x) __builtin_ctz(x)
#define mxe(x) *max_element(all(x))
#define mne(x) *min_element(all(x))
#define low(x,i) lower_bound(all(x),i)
#define upp(x,i) upper_bound(all(x),i)
#define NXPOW2(x) (1ll << ((int)log2(x)+1))
#define PR(x) cout << #x << " = " << (x) << endl ;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

const int OO = (int) 2e9;
const double eps = 1e-9;
const int MAXP = 3140;
const int MAXN = 10000000;

int sz;
bool isPrime[MAXP];
int primes[MAXP];
int cnt[MAXN + 1];
int sum[5][MAXN + 1];

void sieve() {
	MMS(isPrime, 1);
	isPrime[0] = isPrime[1] = 0;
	int i, j, d;
	for (i = 2; i <= MAXP / i; i += (1 + (i & 1)))
		if (isPrime[i]) {
			d = i == 2 ? i : i + i;
			for (j = i * i; j < MAXP; j += d)
				isPrime[j] = 0;
		}
	for (i = 2; i < MAXP; i++)
		if (isPrime[i])
			primes[sz++] = i;
}

void init() {
	sieve();
	for (int i = MAXN; i > 1; i--) {
		if (i < MAXP && isPrime[i])
			cnt[i] = 1;
		else {
			bool flag = 1;
			for (int j = 0; j < sz; j++)
				if (i % primes[j] == 0)
					cnt[i]++, flag = 0;
			if (flag)
				cnt[i] = 1;
		}
	}
}

int main() {
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("in.txt", "rt", stdin);
	freopen("out.txt", "wt", stdout);
#endif
	init();
	int t, tt = 1;
	cin >> t;
	while (t--) {
		int a, b, k, res = 0;
		cin >> a >> b >> k;
		for (int i = a; i <= b; i++)
			if (cnt[i] == k)
				res++;
		cout << "Case #" << tt++ << ": " << res << "\n";
	}
	return 0;
}
