#include <cstdio>
#include <algorithm>
using namespace std;

const int MAXN = 10000005;

int factor[MAXN];
bool primeFactor[MAXN];

void Sieve() {
    for (int i = 2; i < MAXN; i++)
        if (factor[i] == i)
            for (int j = 2*i; j < MAXN; j+=i)
                if (factor[j] == j)
                    factor[j] = i;
}

int Primality(int x) {
    int result = 0, n;
    n = x;
    while (n > 1) {
        if (!primeFactor[factor[n]]) {
            primeFactor[factor[n]] = true;
            result++;
        }
        n /= factor[n];
    }
    n = x;
    while (n > 1) {
        primeFactor[factor[n]] = false;
        n /= factor[n];
    }
    return result;
}

int main() {
    for (int i = 1; i < MAXN; i++)
        factor[i] = i;

    Sieve();

    int q, caseId = 0;
    scanf("%d", &q);
    while (q--) {
        int a, b, k, result = 0;
        scanf("%d%d%d", &a, &b, &k);
        for (int i = a; i <= b; i++)
            if (Primality(i) == k) {
                result++;
            }
        caseId++;
        printf("Case #%d: %d\n", caseId, result);
    }

    return 0;
}
