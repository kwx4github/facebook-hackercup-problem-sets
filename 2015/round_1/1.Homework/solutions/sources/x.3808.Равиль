// 17.01.2015   FaceBook Hucker Cup


/*
Homework10 points 
Your first-grade math teacher, Mr. Book, has just introduced you to an amazing new concept - primes!
According to your notes, a prime is a positive integer greater than 1 that is divisible by only 1 and itself. 
Primes seem fun, but without giving you and your 6-year-old colleagues time to consider their implications,
he's promptly gone on to define another term: primacity.
He explains that the primacity of an integer is the number of distinct primes which divide it.
For example, the primacity of 12 is 2 (as it's divisible by primes 2 and 3),
the primacity of 550 is 3 (as it's divisible by primes 2, 5, and 11), and
the primacity of 7 is 1 (as the only prime it's divisible by is 7). 
Following his lesson, Mr. Book has given you homework with some rather mean questions of the following form:
Given 3 integers A, B, and K, how many integers in the inclusive range [A, B] have a primacity of exactly K? 
Mr. Book probably expects his little homework assignment to take you and your classmates the rest of the year
to complete, giving him time to slack off and nap during the remaining math classes.
However, you want to learn more things from him instead!
Can you use the skills you've learned in your first-grade computer science classes to finish Mr.
Book's homework before tomorrow's math class? 
Input
Input begins with an integer T, the number of homework questions.
For each question, there is one line containing 3 space-separated integers: A, B, and K. 
Output
For the ith question, print a line containing "Case #i: " followed by the number of integers
in the inclusive range [A, B] with a primacity of K. 
Constraints
1 <= T <= 100 
2 <= A <= B <= 10^7 
1 <= K <= 10^9 
Explanation of Sample
In the first test case, the numbers in the inclusive range [5, 15] with primacity 2 are 6, 10, 12, 14, and 15.
All other numbers in this range have primacity 1. 
5
5 15 2
2 10 1
24 42 3
1000000 1000000 1
1000000 1000000 2
Case #1: 5
Case #2: 7
Case #3: 2
Case #4: 0
Case #5: 1


*/


# include <iostream>
# include <iomanip>
# include <cmath>
# include <cstring>
# include <cstdio>
# include <algorithm>

using namespace std;


//================================================
//
// COMMENT THIS LINE
//

//# define MY_JUDGE

//
//================================================


# include <stdio.h>
# include <math.h>
# include <string.h>



# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define imax(x,y) ( (x) < (y) ? (y) : (x) )
# define imin(x,y) ( (x) > (y) ? (y) : (x) )
# define sqr(x) ((x)*(x))

# define isalpha(c) ( (c) >= 'a' && (c) <= 'z' )
# define isAlpha(c) ( (c) >= 'A' && (c) <= 'Z' )
# define isdigit(c) ( (c) >= '0' && (c) <= '9' )

# define alpha(c) ( isalpha (c) ? (c) : ( isAlpha (c) ? (c) - 'A' + 'a' : (c) ) )
# define Alpha(c) ( isAlpha (c) ? (c) : ( isalpha (c) ? (c) - 'a' + 'A' : (c) ) )

//# define alpha(c) ( (c) - 'A' + 'a' )
//# define Alpha(c) ( (c) - 'a' + 'A' )

# define NUM(r,c) ( ((r) << 8) + (c) )
# define ROW(n) ( (n) >> 8 )
# define COL(n) ( (n) & 0XFF )

# define CHECK(r,c) ( (r) >= 0 && (r) < n && (c) >= 0 && (c) < m )


# define between(a,b,c) ( (a) > (b) && (a) < (c) )
# define Between(a,b,c) ( (a) >= (b) && (a) <= (c) )




# define x  X
# define y  Y
# define x1 X1
# define y1 Y1
# define x2 X2
# define y2 Y2


typedef pair <int, int>          Pair;
typedef long long int            Long;
typedef unsigned int             uint;
typedef unsigned long long int   ULong;
typedef unsigned char            uchar;





const int N = 10000010;
const int K = 3440;



int n, m, k, t, kb, ver;
int kp, a, b;
int d [N], p [N];

//char s [N][N], * si;
//bool ok, stop;



void PrintData ();
void Calculate ();
void Input ();
void Print (int i);
void PreCalc ();
void Primes (int *);



int main ()
{
   freopen ("A.txt", "r", stdin);
   freopen ("A.out", "w", stdout);

   PreCalc ();

   Input ();

   Calculate ();

   return 0;
}

void Calculate ()
{
   for ( int tt=1, i, j, pp; tt <= t; tt++ )
   {
      scanf ("%d %d %d\n", &a, &b, &k);

      if ( k > 10 )
         n = 0;
      else if ( k > 1 )
      {
         for ( i=a, n=0; i <= b; i++ )
            if ( d [i] == k )
               n++;
      }
      else
      {
         for ( i=a, n=0; i <= b; i++ )
            if ( d [i] <= k )
               n++;
      }

      Print (tt);
   }

}

void Primes (int * p)   // calculate primes
{
   int i, j, k, ki, pj;
   bool ok;

   p [0] = 2, p [1] = 3, p [2] = 5, p [3] = 7, p [4] = 11, p [5] = 13;
   p [6] = 17, p [7] = 19, p [8] = 23, p [9] = 29, p [10] = 31;
   p [11] = 37, p [12] = 41, p [13] = 43, p [14] = 47, p [15] = 53;
   p [16] = 59, p [17] = 61, p [18] = 67, p [19] = 71, p [20] = 73;
   p [21] = 79, p [22] = 83, p [23] = 89, p [24] = 97, p [25] = 101;

   for ( i=26; i < K; i++ )
   {
      for ( k=p [i-1]+2; ; k+=2 )
      {
         ki = (int) sqrt ((double) k) + 2;
         for ( ok=true, j=0; pj = p [j], pj < ki; j++ )           // ??? p [j] < ki ???
            if ( k % pj == 0 )
               { ok = false; break;}
         if ( ok ) break;
      }
      p [i] = k;
   }
   kp = i;
}

void PreCalc ()
{
   Primes (p);
/*
   for ( int i=2; i <= N; i++ )
      d [i] = 1;
*/
   for ( int i=0, j; i < K; i++ )
   {
      for ( j=p [i]; j <= N; j+=p [i] )
         d [j]++;
   }

# ifdef MY_JUDGE
   PrintData ();
# endif
}

void Input ()
{
   scanf ("%d\n", &t);
}

void Print (int i)
{
   printf ("Case #%d: %d\n", i, n);
}

void PrintData ()
{
   printf ("\nn=%d k=%d\n", n, k);
   for ( int j=2; j < 100; j++ )
      printf ("%d ", d [j]);
   printf ("\n");
   for ( int j=0; j < kp; j++ )
   {
      printf ("%5d ", p [j]);
      if ( j%10 == 0 )
         printf ("\n");
   }
   printf ("\n");
}
