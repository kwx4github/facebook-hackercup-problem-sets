#include<bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; ++i )
#define clr( t , val ) memset( t , val , sizeof( t ) )

#define all( v ) v.begin() , v.end()
#define SZ( v ) ((int)(v).size())
#define pb push_back

#define mp make_pair
#define fi first
#define se second

#define N 10000000
#define M 8

typedef vector< int > vi;

int P[ N + 5 ];
void sieve(){
	clr( P , -1 );
	for( int i = 2 ; i * i <= N ; ++i )
		if( P[ i ] == -1 ) for( int j = i * i ; j <= N ; j += i ) P[ j ] = i;
}
int primefact( int n ){
	int ans = 0;
	while( 1 ){
		if( n == 1 ) break;
		if( P[ n ] == -1 ){
			ans ++;
			break;
		}
		int prime = P[ n ];
		while( n % prime == 0 ) n /= prime;
		ans ++;
	}
	return ans;
}
int T[ M + 5 ][ N + 5 ];
int main(){
	sieve();
	/*
	int maxi = 0;
	for( int i = 1 ; i <= N ; ++i )
		maxi = max( maxi , primefact( i ) );
	cout << maxi << endl;
	*/
	for( int i = 1 ; i <= N ; ++i ){
		int val = primefact( i );
		for( int j = 1 ; j <= M ; ++j )
			T[ j ][ i ] = T[ j ][ i - 1 ] + (j == val);
	}
			
	int cases;
	sc( cases );
	REP( tc , cases ){
		int a , b , k;
		sc( a ) , sc( b ) , sc( k );
		int ans;
		if( k > M ) ans = 0;
		else ans = T[ k ][ b ] - T[ k ][ a - 1 ];
		printf( "Case #%d: %d\n" , tc + 1 , ans );
	}		
}
