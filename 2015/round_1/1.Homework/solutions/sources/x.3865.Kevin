import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;


public class Homework {
	public static ArrayList<Integer> primes;
	public static int primacity (int n) {
		int count = 0;
		for (int p : primes) {
			if (n % p == 0) count++;
		}
		return count;
	}
	
	public static boolean isPrime(long n) {
	    if(n < 2) return false;
	    if(n == 2 || n == 3) return true;
	    if(n%2 == 0 || n%3 == 0) return false;
	    long sqrtN = (long)Math.sqrt(n)+1;
	    for(long i = 6L; i <= sqrtN; i += 6) {
	        if(n%(i-1) == 0 || n%(i+1) == 0) return false;
	    }
	    return true;
	}
	
	public static void precompute (int max) {
		primes = new ArrayList<Integer>();
		primes.add(2);
		for (int i = 3; i <= max; i += 2) {
			if (isPrime(i)) primes.add(i);
		}
	}
	
	public static void main (String[] args) {
		try {
			Scanner s = new Scanner(new BufferedReader(new FileReader("input.txt")));
			PrintWriter fout = new PrintWriter(new FileWriter("output.txt"));
			int n = s.nextInt();
			int max = 0;
			int[] a = new int[n], b = new int[n], k = new int[n];
			for (int i = 0; i < n; i++) {
				a[i] = s.nextInt();
				b[i] = s.nextInt();
				k[i] = s.nextInt();
				if (b[i] > max) max = b[i];
			}
			precompute((int)Math.ceil(Math.sqrt(max)));
			int count;
			for (int i = 0; i < n; i++) {
				count = 0;
				for (int j = a[i]; j <= b[i]; j++) {
					if (primacity(j) == k[i]) count++;
				}
				fout.println("Case " + (i + 1) + ": " + count);
				System.out.println("Case " + (i + 1) + ": " + count);
			}
			fout.close(); 
		}
		catch (IOException e) {
			e.printStackTrace();
		}
	}
}
