#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <bitset>
#include <stack>
#include <string>
#include <sstream>
#include <math.h>

#define REP(i,n) for(int i = 0; i<(n); i++)
#define ITER(i,v) for(auto i : v)
#define INF 1000000000

using namespace std;

template <class T>
using priority_queue_asc =  priority_queue<T,vector<T>, greater<T> >;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
typedef vector<bool> vb;

const int N = 10000001;
int primacity[N];
bitset<N> primes;

void sieve(){
	fill_n(primacity,N,0);
	primes.set();
	primes[0]=false;
	primes[1]=false;
	for(int p=2;p<N;p++){
		if(primes[p]){
			for(int i = p;i<N;i+=p){
				primes[i]=false;
				primacity[i]++;
			}
		}
	}
}

int main(){
	sieve();
	int TC;
	cin >> TC;
	REP(tc,TC){
		int count = 0;
		int A,B,K;
		cin >> A >> B >> K;

		cout << "Case #"<<(tc+1)<<": ";
		if(K>8){
			cout << "0\n";
			continue;
		}

		for(int i=A;i<=B;i++)
			if(primacity[i]==K)
				count++;
		cout << count<<"\n";
	}
	return 0;
}


