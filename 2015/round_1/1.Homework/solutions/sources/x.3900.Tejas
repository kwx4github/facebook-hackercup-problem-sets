import sys



'''
    Generates factors of a particular number by iterating through the num
    upto sqrt(num) . Efficient approach using prime factor generation. The
    function reduce if new to you, just computes result of the supplied
    function f (in this case list.__add__) on the first two elements of the
    supplied list, obtains a result and then performs the same function on
    the result and the next element in the list. In this way it reduces the 
    entire list to one result
'''
def genFactors(n):    
    return set(reduce(list.__add__, 
                [ [i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0] ) )

def genPrimeFactors(n):
    factorList = genFactors(n)
    primeFactorList = [d for d in factorList if isPrime(d)]
    return primeFactorList

def isPrime(N):
    if(N <= 1): return False
    if(N == 2): return True
    for i in range(2 , int(N ** 0.5) + 1):
        if(N % i == 0): return False
    return True
  


'''
    Reads in an integer from stream passed in as the parameter. Simple
    parsing function that can read from files as well as standard input
''' 
def parseInt(stream):
    return int(stream.readline().rstrip())

'''
    Reads in an array of integers from stream passed in as parameter.This
    is a simple parsing function that can read from files as well as 
    standard input
'''
def parseIntArr(stream):
    return [int(x) for x in stream.readline().rstrip().split()]


if __name__ == "__main__":
    stream = open('input.txt')
    streamout = open('output.txt','w')
    T = parseInt(stream)
    string = ""
    for i in range(T):
        [a,b,k] = parseIntArr(stream)
        count = 0
        for j in range(a,b+1):
            factorList = genPrimeFactors(j)
            if(isPrime(j)):
                factorList.append(j)
            if(len(genPrimeFactors(j)) == k):
                count += 1
        string +=  "Case #" + str(i+1) + ": " + str(count)
        string += "\n"
    string.rstrip()
    streamout.write(string)
    
