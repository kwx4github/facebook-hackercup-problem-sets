#include <cstdio>
#include <cstring>
#define FOR(i, s, e) for(int i = (s); i < e; i++)
#define FOE(i, s, e) for(int i = (s); i <= e; i++)
using namespace std;
typedef long long LL;

const int N = 10000000;
const int K = 10;

int cnt[N] = {0};
int partial[K + 1][N + 100];

int main() {
    FOE(n, 2, N) {
        int p = n;
        for (int j = 2; j * j <= n; j++) {
            if (p % j == 0) {
                while (p % j == 0) p /= j;
                break;
            }
        }
        cnt[n] = cnt[p] + 1;

        FOE(k, 1, K) {
            partial[k][n] = partial[k][n - 1] + (cnt[n] == k);
        }
    }

    int T; scanf("%d", &T); FOE(ca, 1, T) {
        int a, b, k; scanf("%d%d%d", &a, &b, &k);
        printf("Case #%d: %d\n", ca, partial[k][b] - partial[k][a - 1]);
    }
    return 0;
}
