/* problem_link */

#include<bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
#define rep(i,a,n) for(__typeof(n) i = a; i < n; ++i)
#define repe(i,a,n) for(__typeof(n) i = a; i <= n; ++i)
#define mfill(a,b) memset(a, b, sizeof(a))
#define all(a) a.begin(), a.end()
#define pb(a) push_back(a)
#define dbg(x) {cout<<__LINE__ <<"::" << #x << ": " << (x) << endl; }

#define VMAX 10000000  //maximum value up to which prime factors are calculated
#define PMAX 664579    //maximum of small prime factors
bool is_not_prime[VMAX]; //on heap, filled with zeros
ll prime[10000001], number_of_primes;          // on heap, filled with zeros
short test[11];
inline void sieve()
{
    ull i, j, imax;
    is_not_prime[1] = true;
    for (imax = 2; imax * imax < VMAX; ++imax);  //imax =~ sqrt(VMAX)
    number_of_primes=0;
    for (i = 2; i < VMAX; ++i)
        {
            if(!is_not_prime[i])
            {

                for ( j =  i; j <= VMAX; j += i)
                    {
                        is_not_prime[j]=true;
                        ++prime[j];
                    }
            }
        }

}


int main()
{
    ios_base::sync_with_stdio(false);
  freopen("homework.txt","r",stdin);
    freopen("homework_out.txt","w",stdout);
    int t;

sieve();
    cin>> t;
    repe(_case,1,t)
    {
        int a,b,k;

       // system("pause");
        int answer = 0;
        cin >> a >> b >> k;
        repe(i,a,b)
            if(prime[i] == k)
                ++answer;
        cout << "Case #"<<_case<<": "<<answer <<"\n";


    }
    return 0;
}
