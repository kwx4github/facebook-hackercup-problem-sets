//wawando's template

#include <iostream>
#include <string>
#include <fstream>
#include <functional>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <list>
#include <set>
#include <utility>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>  //clock_t , clock() , CLOCKS_PER_SEC
#include <cstring>
#include <cctype>
#include <climits> // LLONG_MAX , LLONG_MIN , INT_MAX , INT_MIN

//MACROS
#define pb              push_back
#define mp              make_pair
#define INF             1000000000     //1 billion safer for floyd warshall, avoid overflow

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<iii> viii;

int TC,caseNo=1;
int p[10000010], sum[10][10000010];

int main() {
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	//ios::sync_with_stdio(false);
		
	memset(p, 0, sizeof(p));
	ll MAXN = 10000007;
	for(ll i = 2; i < MAXN; i++){
		if(p[i] == 0){
			p[i]++;
			for(ll j = 2*i; j < MAXN; j += i)
				p[j]++;
		}
	}

	for(int i = 1; i <= 8; i++){
		sum[i][0] = 0;
		sum[i][1] = 0;
		for(int j = 2; j < (int)MAXN; j++)
			sum[i][j] = sum[i][j-1] + (p[j] == i ? 1 : 0);
	}

	scanf("%d",&TC);
	while(TC--){
		int A,B,K,ans;
		scanf("%d %d %d", &A, &B, &K);
		if(K > 8)
			ans = 0;
		else
			ans = sum[K][B] - sum[K][A-1];
		printf("Case #%d: %d\n",caseNo++, ans);
	}
    return 0;
}
