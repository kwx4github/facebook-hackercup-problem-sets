local max_testcase = 10000000
local floor, sqrt, remove, insert, concat = math.floor, math.sqrt, table.remove, table.insert, table.concat
local primes, primacity

function split(str)
  local ret = {}
  for word in string.gmatch(str, '([^ ]+)') do
    insert(ret, tonumber(word))
  end
  return ret
end

function sieve_of_eratosthenes(n)
  local is_prime = {}
  for i = 1, n do
    is_prime[i] = 1 ~= i
  end
  for i = 2, floor(sqrt(n)) do
    if is_prime[i] then
      for j = i*i, n, i do
        is_prime[j] = false
      end
    end
  end
  return is_prime
end

function sieve_of_primacity(n)
  local precalc_primacity = {}
  for i = 1, n do
    precalc_primacity[i] = 0
  end
  for i = 2, n do
    if primes[i] then
      for j = i, n, i do
        precalc_primacity[j] = precalc_primacity[j] + 1
      end
    end
  end
  return precalc_primacity
end

primes = sieve_of_eratosthenes(max_testcase)
primacity = sieve_of_primacity(max_testcase)

local testcase, count
local file = io.open("homework.txt", "r")
io.input(file)

local countmax = tonumber(io.read())
for i = 1, countmax do
  count = 0
  testcase = split(io.read())
  for j = testcase[1], testcase[2] do
    if primacity[j] == testcase[3] then count = count + 1  end
  end
  print("Case #" .. i .. ": " .. count)
end

io.close(file)
