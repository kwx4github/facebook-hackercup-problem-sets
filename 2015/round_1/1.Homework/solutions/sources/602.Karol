//Karol Kaszuba
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <unordered_map>
#include <unordered_set>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef double D;
typedef long double LD;
typedef vector<PII> VII;

#define FOR(i,x,y) for(auto i=(x);i<=(y);++i)
#define REP(i,x) FOR(i,0,(x)-1)
#define FORD(i,x,y) for(auto i=(x);i>=(y);--i)
#define VAR(i,c) __typeof(c) i=(c)
#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)

#define SIZE(c) (int)((c).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define IN insert
#define ER erase
#define MP make_pair
#define ST first
#define ND second
#define IOSYNC ios_base::sync_with_stdio(0)

int sito[10000007];
VI prim[30];

int jebaj()
{
	int a, b, k;
	cin >> a >> b >> k;
	//gdy k jest za duze
	if(k >= 30) return 0;
	if(SIZE(prim[k]) == 0) return 0;
	
	//gdy a jest za duze lub b jest za male
	if(prim[k][SIZE(prim[k]) - 1] < a) return 0;
	if(prim[k][0] > b) return 0;
	
	VAR(it1, lower_bound(ALL(prim[k]), a));
	if(*it1 > b) return 0;
	VAR(it2, lower_bound(ALL(prim[k]), b + 1)); it2--;
	if(*it2 < a) return 0;
	return (it2 - it1) + 1;
}

void prepro()
{
	int N = 10000000;
	FOR(i, 2, N)
	{
		if(!sito[i])
		{
			for(int j = i; j <= N; j+=i)
			{
				sito[j]++;
			}
		}
		prim[sito[i]].PB(i);
	}
}

int main()
{
	prepro();
	IOSYNC;	
	int t;
	t = 1;
	cin >> t;
	
	REP(i, t) 
	{
		cout << "Case #" << i + 1 << ": " << jebaj() << "\n";
	}
}
