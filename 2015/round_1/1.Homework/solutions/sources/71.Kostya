#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <vector>

using namespace std;

const int MAXB = 10000001;

int primacity[ MAXB ];

int get_primacity( int a ) {
    int result = 0;
    for ( int i = 2; i * i <= a; i++ ) {
        if ( a % i == 0 ) {
            result += 1;
            while ( a % i == 0 ) a /= i;
        }
    }
    if ( a > 1 ) result += 1;
    return result;
}

void preprocess() {
    for ( int i = 2; i < MAXB; i++ ) primacity[i] = get_primacity( i );
    cerr << "Processed for 2.." << MAXB - 1 << "\n";
    for ( int i = 2; i < 20; i++ ) cerr << primacity[i] << " "; cerr << "\n";
}

void solve( int t ) {
    int a, b, k, result = 0; cin >> a >> b >> k;
    for ( int x = a; x <= b; x++ ) result += (int)primacity[x] == k;
    cout << "Case #" << t << ": " << result << "\n";
}

int main() {
    time_t start = clock();
    preprocess();
    int t; cin >> t;
    for ( int i = 1; i <= t; i++ ) solve( i );
    fprintf( stderr, "Time: %lf\n", 1.0 * ( clock() - start ) / CLOCKS_PER_SEC );
    return 0;
}
