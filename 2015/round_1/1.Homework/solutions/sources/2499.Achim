package de.ateda.hackercup2015;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Homework {

	private static BufferedReader br;
	private static StringTokenizer st;
	private static PrintWriter pw;

	private static int[] primacity = new int[10000001];

	public static void main(String[] args) throws IOException {
		for (int i = 2; i < primacity.length; i++) {
			if (primacity[i] == 0) {
				for (int j = i; j < primacity.length; j += i) {
					primacity[j]++;
				}
			}
		}
		int maxPrimacity = 0;
		for (int i = 0; i < primacity.length; i++) {
			if (primacity[i] > maxPrimacity) {
				maxPrimacity = primacity[i];
			}
		}
		System.out.println("maxPrimacity=" + maxPrimacity);
		System.out.println(2 * 3 * 5 * 7 * 11 * 13 * 17 * 19 + " " + 2 * 3 * 5 * 7 * 11 * 13 * 17 * 19 * 23);
		br = new BufferedReader(new FileReader("src/de/ateda/hackercup2015/Homework.in"));
		pw = new PrintWriter(new FileWriter("src/de/ateda/hackercup2015/Homework.out"));
		final int T = readInt();
		for (int t = 1; t <= T; t++) {
			System.out.println("starting case " + t);
			pw.print("Case #" + t + ": ");
			int a = readInt();
			int b = readInt();
			int k = readInt();
			int solution = 0;
			for (int i = a; i <= b; i++) {
				if (primacity[i] == k) {
					solution++;
				}
			}
			pw.println(solution);
		}
		pw.close();
	}

	private static int readInt() throws IOException {
		return Integer.parseInt(nextToken());
	}

	private static String nextToken() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			if (!br.ready()) {
				pw.close();
				System.exit(0);
			}
			st = new StringTokenizer(br.readLine().trim());
		}
		return st.nextToken();
	}

}
