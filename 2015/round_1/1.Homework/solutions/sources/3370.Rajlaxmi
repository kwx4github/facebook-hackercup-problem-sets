#include <iostream>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <climits>
#include <cstring>
#define pii pair<int, int>
#define ll long long int
#define loop(i, n) for(i=0; i<n; i++)
#define loopab(i, a, b) for(i=a; i<b; i++)
#define pb push_back
#define mk make_pair
using namespace std;
#define mx 10000002
int prime[mx];
vector<int> rev[10];

void init() {
	
	int i, j, maxm = 0;
	for(i = 2; i < mx; i++) {
		if(prime[i] == 0) {
			for(j = 1; j*i < mx; j++)
				prime[j*i]++;
		}
	}
	
	for(i = 2; i < mx; i++) {
		if(prime[i] > 0)
			rev[prime[i]].pb(i);
	}
}

int main()
{
	ios::sync_with_stdio(0);
	init();
	int t, k, p, i, j, a, b, lo, hi;
	cin>>t;
	/*for(i = 0; i < 10; i++)
		cout<<rev[1][i]<<" ";
	cout<<endl;*/
	for(p = 1; p <= t; p++) {
		cout<<"Case #"<<p<<": ";
		cin>>a>>b>>k;
		lo = lower_bound (rev[k].begin(), rev[k].end(), a) - rev[k].begin();
		hi = lower_bound (rev[k].begin(), rev[k].end(), b) - rev[k].begin();
		if(hi < rev[k].size() && rev[k][hi] == b)
			cout<<hi-lo+1<<endl;
		else
			cout<<hi-lo<<endl;
		
		//cout<<hi-lo + 1<<endl;
	}
	
	return 0;
}

