#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

const int MAXN = 10000001;

typedef long long tint;
vector<int> primes;
#define forn(i,n) for(int i = 0; (int)(i) < (int)(n); i++)
#define forsn(i,s,n) for(int i = (int)(s); (int)(i) < (int)(n); i++)
#define pb push_back

int primality[MAXN];

bool is_prime(int n) {
	for(int i = 2; i*i <= n; i++) if(n%i==0) return false;
	return true;
}

int main() {
	for(int i = 2; i*i <= MAXN; i++) {
		if(is_prime(i)) primes.pb(i);
	}
	forn(i, MAXN) {
		int cant = 0;
		int num = i;
		if (num==0)continue;
		forn (j, primes.size()) {
			if (num % primes[j] == 0) {
				cant++;
				while (num % primes[j] == 0)num/=primes[j];
			}
		}
		if (num > 1) cant++;
		primality[i]=cant;
	}
	int t; cin>>t;
	forn(tc, t) {
		int a, b, k;
		cin>>a>>b>>k;
		int res = 0;
		forsn(i,a,b+1) {
			if(primality[i]==k)res++;
		}
		printf("Case #%d: %d\n", tc+1, res);
	}
}
