package Qualif2;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;

public class Homework {

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int testCase = parseI(br.readLine());
        StringBuilder sb = new StringBuilder();

        int[] primeFact = new int[10000000];

        for (int test = 0; test < testCase; test++) {

            int[] info = parseI(br.readLine().split(" "));
            int a = info[0], b = info[1], k = info[2];
            
            int sum = 0;

            for(int i = a-2 ; i < b-1; i++) {
                int cur = primeFact[i];
                if(cur == 0) {
                    cur = primeFactors(i+2);
                    primeFact[i] = cur;
                }
                if(cur == k) sum++;
                
            }
            
            sb.append("Case #").append(test+1).append(": ").append(sum).append("\n");

        }

        System.out.println(sb);
    }

    public static int primeFactors(int numbers) {
        int n = numbers;
        HashSet<Integer> h = new HashSet<Integer>();
        for (int i = 2; i <= n / i; i++) {
          while (n % i == 0) {
            h.add(i);
            n /= i;
          }
        }
        if (n > 1) {
          h.add(n);
        }
        return h.size();
      }
    
    public static int parseI(String s) {
        return Integer.parseInt(s);
    }

    public static int[] parseI(String[] s) {
        int[] n = new int[s.length];
        for (int i = 0; i < s.length; i++) {
            n[i] = Integer.parseInt(s[i]);

        }
        return n;
    }
}
