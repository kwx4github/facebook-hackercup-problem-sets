#include<bits/stdc++.h>

using namespace std;

// Template
#define mp(a, b) make_pair(a, b)
#define pb(x) push_back(x)
#define ALL(X) X.begin(), X.end()
#define SORT(x) sort(ALL(x))
#define next ___next
#define hash ___hash
#define rank ___rank
#define get _____get
#define count __count
#ifdef _DEBUG_
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#else
#define eprintf(...)
#endif
#if((_WIN32 || __WIN32__) && __cplusplus < 201103L)
    #define LLD "%I64d"
#else
    #define LLD "%lld"
#endif

const double EPS = 1e-9;
const int IINF = 1000000000;
const double PI = acos(-1.0);
const long long LINF = 6000000000000000000LL;

// End of template

const int maxN = 10000007;

int divisor[maxN];

int main() {
#ifdef _DEBUG_
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    for(int i = 0; i < maxN; ++i) {
        divisor[i] = i;
    }
    for(int i = 2; i * i <= maxN; ++i) {
        if(divisor[i] == i) {
            for(int j = i * i; j < maxN; j += i) {
                divisor[j] = i;
            }
        }
    }
    int test_cases;
    scanf("%d", &test_cases);
    for(int test_id = 1; test_id <= test_cases; ++test_id) {
        int A, B, K, answer = 0;
        scanf("%d%d%d", &A, &B, &K);
        for(int i = A; i <= B; ++i) {
            int prime_count = 0;
            int current_number = i;
            while(current_number > 1) {
                prime_count++;
                int div = divisor[current_number];
                while(current_number % div == 0) {
                    current_number /= div;
                }
            }
            if(prime_count == K) {
                answer++;
            }
        }
        printf("Case #%d: %d\n", test_id, answer);
    }
    return 0;
}
