#include<bits/stdc++.h>
using namespace std;
#define RANGE 10000006
bool sieve[RANGE];
int fprime[RANGE];
vector < pair < int , int > > ppf;
vector < int > divset;
void primeTable()
{
    int i,j;
    int lim = sqrt((double) RANGE)+6;
    memset(fprime, -1, sizeof(fprime));
    fprime[2] = 2;
    for (i=4; i<RANGE; i+=2) sieve[i] = true, fprime[i] = 2;
    for (i=3; i<lim; i+=2)
    {
        if (!sieve[i])
        {
            fprime[i] = i;
            for (j=i*i; j<RANGE; j += (i<<1))
            {
                sieve[j] = true;
                if (fprime[j] == -1) fprime[j] = i;
            }
        }
    }
    for (; i<RANGE; i+=2)
    {
        if (!sieve[i]) fprime[i] = i;
    }
}
int pr(int n)
{
    int ret = 0, p;
    while (n != 1)
    {
        p = fprime[n], ++ret;
        while (n % p == 0) n /= p;
    }
    return ret;
}
int main()
{
    primeTable();
    //freopen("data.txt", "r", stdin);
    freopen("A.in", "r", stdin);
    freopen("A2.out", "w", stdout);
    int t,T,A,B,K,ans;
    scanf("%d", &T);
    for (t=1; t<=T; ++t)
    {
        scanf("%d %d %d", &A, &B, &K);
        ans = 0;
        while (A <= B) ans += (pr(A++) == K);
        printf("Case #%d: %d\n", t, ans);
    }
    return 0;
}
