#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <string.h>
#include <ctime>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define dbg(x) cout << #x << " = " << x << endl
#define dbg2(x,y) cout << #x << " = " << x << ", " << #y << " = " << y << endl
#define dbg3(x,y,z) cout << #x << " = " << x << ", " << #y << " = " << y << ", " << #z << " = " << z << endl

#define out(x) cout << (x) << endl
#define out2(x,y) cout << (x) << " " << (y) << endl
#define out3(x,y,z) cout << (x) << " " << (y) << " " << (z) << endl;

const int maxN = 10000000 + 10;

int tot[maxN];
bool vst[maxN];

void init()
{
    memset(tot, 0, sizeof(tot));
    memset(vst, 0, sizeof(vst));
    for(int i = 2; i < maxN; i += 2)
        vst[i] = 1, tot[i] ++;
    for(int i = 3; i < maxN; i += 2) {
        if( vst[i] )
            continue;
        for(int j = i; j < maxN; j += i)
            vst[j] = 1, tot[j] ++;
    }
}

int gao(int x)
{
    int res = 0;
    for(int i = 2; i <= x / i; i ++)
        if( x % i == 0 ) {
            res ++;
            while( x % i == 0 && x > 1 )
                x /= i;
        }
    if( x > 1 )
        res ++;
    return res;
}

int calc(int a, int b, int c)
{
    int res = 0;
    for(int i = a; i <= b; i ++)
        if( gao(i) == c )
            res ++;
    return res;
}

#define ONLINE_JUDGE

int main()
{
    freopen("data.in", "r", stdin);
#ifdef ONLINE_JUDGE
    freopen("data.out", "w", stdout);
#else
    freopen("data2.out", "w", stdout);
#endif
    init();
    int nt, idx = 0;
    scanf("%d", &nt);
    for(; nt > 0; nt --) {
        int a, b, k, res = 0;
        scanf("%d %d %d", &a, &b, &k);
#ifdef ONLINE_JUDGE
        for(int i = a; i <= b; i ++)
            if( tot[i] == k )
                res ++;
        printf("Case #%d: %d\n", ++idx, res);
#else
        printf("Case #%d: %d\n", ++idx, calc(a, b, k));
#endif
    }
    return 0;
}
