#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define NMAX 10000005
#define SQRTMAX 3170

int primacity[NMAX];

int res[10][NMAX];

int main() {
  bitset<NMAX> isprime;
  isprime.set();
  isprime[1] = false;
  memset(primacity, 0, sizeof primacity);
  for (int i = 2; i < NMAX; i++) {
    if (isprime[i]) {
      for (int j = i; j < NMAX; j += i) {
        isprime[j] = false;
        primacity[j]++;
      }
    }
  }

  int maxi = 0, besti;
  for (int i = 2; i < NMAX; i++) {
    if (primacity[i] > maxi) {
      maxi = primacity[i];
      besti = i;
    }
  }

  memset(res, 0, sizeof res);
  for (int i = 2; i < NMAX; i++) {
    for (int j = 0; j < 10; j++) {
      res[j][i] = res[j][i - 1];
    }

    res[primacity[i]][i]++;
  }

  int t;
  scanf("%d", &t);
  for (int ctest = 1; ctest <= t; ctest++) {
    int a, b, k;
    scanf("%d %d %d", &a, &b, &k);

    int res0 = 0;
    if (k < 9) res0 = res[k][b] - res[k][a - 1];

    printf("Case #%d: %d\n", ctest, res0);
  }
  return 0;
}
