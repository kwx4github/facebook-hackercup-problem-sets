#!/usr/bin/python
import os
import sys
from math import sqrt

def main():

    if len(sys.argv) > 1:
        filename = sys.argv[1]
        if os.path.isfile(filename):
            sys.stdin = open(filename)
            sys.stdout = open(filename.split('.')[0]+'.out','w')
    
    # sieve through the primes and count for each n the number of its
    # factors
    lim = pow(10,7)
    p = [0 for i in range(0, pow(10,7)+1)]
    for i in range(2, lim+1):
        if p[i] == 0: # prime
            p[i] = 1  # the prime is its only 'prime' factor
            for j in range(2*i, pow(10,7)+1, i):  # count numbers who might have p[i] as factor
                if p[j]%p[i] == 0:
                    p[j]+= 1
    '''    
    # test primes
    print 'testing if generated primes have only 1 prime factor ...'
    base = 'http://my.core.com/~katiemarie10/prime/prime'
    fbase = 'prime'
    for i in range (0,10):
        if i == 0:
            url = base+'1-1G.htm'
            filename = fbase+'1-1G.htm'
        else:
            url = base+str(i)+'G-'+str(i+1)+'G.htm'
            filename = fbase+str(i)+'G-'+str(i+1)+'G.htm'
        if os.path.isfile(filename):
            print 'opening file ...'
            f = open(filename, 'r')
            lines = f.readlines()
            ok = True
            for l in lines:
                if l[0].isdigit():
                    print l[0]
                    pp = map(int,l[:-1].split(' '))
                    print pp[-15:]
                    for e in pp:
                        if p[e] != 1:
                            ok = False
                            break
                    if not ok:
                        print 'FAIL'
                    else:
                        print 'OK'
            
        else:
            os.system('/usr/bin/wget -q '+url)
    '''

    for _t in range(1,int(raw_input())+1):
        a,b,k = map(int, raw_input().split(' '))
        cnt = 0
        for i in range(a,b+1):
            if p[i] == k:
                cnt+= 1
        print("Case #%d: %d" % (_t, cnt))

if __name__ == '__main__':
    main()

