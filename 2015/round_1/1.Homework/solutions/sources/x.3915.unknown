import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;


public class HomeWork {
	
	public static void main(String[] args) throws Exception
	{
//		long start = System.currentTimeMillis();
//		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//		PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new FileReader("homework.txt"));
		PrintWriter pw = new PrintWriter("homework_output.txt");
		int maxLimit = (int)1e7+1;
		int[] primacity = new int[maxLimit];
		boolean[] seive = new boolean[maxLimit];
		
		for(int i=2;i*i<maxLimit;++i)
		{
//			if(primacity[i]==0)
			if(!seive[i])
			{
				primacity[i]++;
				
				for(int j=2*i;j<maxLimit;j+=i)
				{
					seive[j] = true;
					primacity[j]++;
				}
			}
		}
		int maxPrimacity = 8;
		int[][] cumulativePrimacity = new int[maxLimit][maxPrimacity+1];
		
		for(int i=2;i<maxLimit;++i)
		{
			for(int j=1;j<=maxPrimacity;++j)
			{
				cumulativePrimacity[i][j] = cumulativePrimacity[i-1][j];
				if(primacity[i]==j)
				{
					cumulativePrimacity[i][j]++;
				}
				
			}
		}
		
		int tcs = Integer.parseInt(br.readLine());
		
		for(int t=1;t<=tcs;++t)
		{
			StringTokenizer st = new StringTokenizer(br.readLine());
			
			int l = Integer.parseInt(st.nextToken()), r = Integer.parseInt(st.nextToken()), k = Integer.parseInt(st.nextToken());
			if(k<=maxPrimacity)
			{
				pw.println("Case #"+t+": "+(cumulativePrimacity[r][k]-cumulativePrimacity[l-1][k]));
			}
			else
			{
				pw.println("Case #"+t+": 0");
			}
			
		}
//		long end = System.currentTimeMillis();
		
//		pw.println((end-start));
		pw.flush();
		pw.close();
		br.close();
	}

}
