package hackercup;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.Scanner;

public class Homework {

	static int[] help;

	static void loadHelp(String path, String path2) throws Exception {
		BufferedReader br = new BufferedReader(new FileReader(path));
		String[] part = br.readLine().split(",");
		br.close();
		help = new int[10000000 - 2 + 1];
		for (int i = 0; i < 9000000 - 2; i++) {
			help[i] = Integer.parseInt(part[i]);
		}
		BufferedReader br2 = new BufferedReader(new FileReader(path2));
		String[] part2 = br2.readLine().split(",");
		br2.close();
		for (int i = 9000000 - 2; i <= 10000000 - 2; i++) {
			help[i] = Integer.parseInt(part2[i - (9000000 - 2)]);
		}
	}

	static int solve(int A, int B, int K) {
		int count = 0;
		for (int i = A - 2; i <= B - 2; i++)
			if (help[i] == K)
				count++;
		return count;
	}

	public static void main(String[] args) throws Exception {
		loadHelp("Help.txt", "Help-2.txt");
		Scanner scanner = new Scanner(System.in);
		int T = scanner.nextInt();
		int k = 1;
		while (T-- > 0) {
			int A = scanner.nextInt();
			int B = scanner.nextInt();
			int K = scanner.nextInt();
			System.out.println(String.format("Case #%d: %d", k++,
					solve(A, B, K)));
		}
		scanner.close();
	}
}

class HomeworkHelper {

	static int[] prime;

	static void loadPrime(String path) throws Exception {
		BufferedReader br = new BufferedReader(new FileReader(path));
		String[] part = br.readLine().split(",");
		br.close();
		prime = new int[part.length];
		for (int i = 0; i < part.length; i++) {
			prime[i] = Integer.parseInt(part[i]);
		}
	}

	static void help(String path) throws Exception {
		FileWriter fw = new FileWriter(path);
		fw.write(1 + "");
		for (int i = 3; i <= 10000000; i++) {
			if (i % 1000000 == 0)
				System.out.println(i);
			int p = 0;
			int copy = i;
			for (int j = 0; j < prime.length; j++) {
				if (prime[j] > copy)
					break;
				if (copy % prime[j] == 0) {
					p++;
					copy /= prime[j];
				}
			}
			fw.write("," + p);
		}
		fw.flush();
		fw.close();
	}

	public static void main(String[] args) throws Exception {
		loadPrime("Prime.txt");
		help("Help.txt");
	}

}

class PrimeEnum {

	static boolean isPrime(int n) {
		int end = (int) Math.sqrt(n) + 1;
		for (int i = 2; i < end; i++)
			if (n % i == 0)
				return false;
		return true;
	}

	public static void main(String[] args) throws Exception {
		FileWriter fw = new FileWriter("Prime.txt");
		fw.write(2 + "");
		for (int i = 3; i < 10000000; i++)
			if (isPrime(i))
				fw.write("," + i);
		fw.flush();
		fw.close();
	}

}
