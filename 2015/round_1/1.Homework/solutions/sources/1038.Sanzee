// Author : Muhammad Rifayat Samee
// Problem : A
// Algorithm:
#pragma warning (disable : 4786)
#pragma comment(linker, "/STACK:16777216")

#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<cstring>
#include<algorithm>
#include<string>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#define MAX(a,b) (a>b)?a:b
#define MIN(a,b) (a<b)?a:b
#define INF 987654321
#define pi (2*acos(0.0))
#define eps 1e-7

#ifdef ONLINE_JUDGE
#define i64 long long
#else
#define i64 __int64
#endif

using namespace std;
int res[10000005];
int n,tot;
vector<int>graph[11];
int mx;
int cal(){
    memset(res,0,sizeof(res));
    int i,j;
    mx = 1;
    for(i=2;i<=10000000;i++){
        if(res[i] == 0){
            res[i] = 1;
            int t = i+i;
            for(j=t;j<=10000000;j=j+i){
                res[j] = res[j] + 1;
            }
        }

    }
    for(i=2;i<=10000000;i++){
        graph[res[i]].push_back(i);
        //mx = max(mx,res[i]);
    }
    /*for(i=0;i<=8;i++){
        printf("%d\n",graph[i].size());
        //sort(graph[i].begin(),graph[i].end());
    }*/

}

int main(){

	freopen("homework.txt","r",stdin);
	freopen("A.out","w",stdout);
    cal();
    //printf("%d\n",mx);
    int cases,i,j,k,a,b,r,ct=1;
    scanf("%d",&cases);
    while(cases--){
        scanf("%d %d %d",&a,&b,&k);
        if(k>8){
            r = 0;
        }
        else{
            int up = upper_bound(graph[k].begin(),graph[k].end(),b) - graph[k].begin();
            int down = lower_bound(graph[k].begin(),graph[k].end(),a) - graph[k].begin();
            //printf("%d %d\n",up,down);
            r = up - down;
        }
        printf("Case #%d: %d\n",ct++,r);
    }

	return 0;
}
