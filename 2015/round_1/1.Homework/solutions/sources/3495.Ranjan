#include<iostream>
using namespace std;

// marks all mutiples of 'a' ( greater than 'a' but less than equal to 'n') as 1.

int arr[10000005];
void markMultiples(int arr[], int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        arr[ num ]++; // minus 1 because index starts from 0.
        ++i;
    }
}

// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0

        memset(arr, 0, sizeof(arr));

        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i = 2; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
                //printf("%d ", i+1);
                markMultiples(arr, i, n);
                arr[i] = 1;
            }
        }
    }
}

int main() {
    SieveOfEratosthenes(10000002);
    int t;
    cin >> t;
    int i;
    for(i = 1; i <= t; i++) {
        int A, B, K;
        cin >> A >> B >> K;
        int ct = 0;
        for(int i1 = A; i1 <= B; i1++) {
            if(arr[i1] == K) {
                ct++;
            }
        }
        cout << "Case #"<<i<<": "<< ct <<"\n";
    }
}
