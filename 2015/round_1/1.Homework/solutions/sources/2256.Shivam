#include <iostream>
#include <vector>
using namespace std;

bool nprime[10000005];
vector<int> primes;
int num[10000005];
void Sieve()
{
	for(int i = 2; i < 10000; i++)
	{
		if(!nprime[i])
		{
			
			for(int j = 0; i * i + i * j < 10000005;
				j++)
				{
					nprime[i * i + i*j] = true;
				}
		}
	}
	for(int i = 2; i < 10000005; i++)
	{
		if(!nprime[i])
			primes.push_back(i);
	}
	//cout << primes[664578] << endl;
	for(int i = 2; i < 10000005; i++)
	{
		if(!nprime[i])
			primes.push_back(i);
	}
	//cout << num[2] << endl;
	//cout << primes[0] << endl;
	for(int i = 0; i < 664579; i++)
	{
		for(int j = 1; primes[i] * j < 10000005; j++)
		{
			num[primes[i]*j]++;
		} 
	}
}
int main()
{
	Sieve();
	int t;
	cin >> t;
	int co = 1;
	while(t)
	{
		int a, b, k;
		cin >> a >> b >> k;
		long long result = 0;
		for(int i= a; i <= b; i++)
		{
			if(num[i] == k)
				result++;
		}
		cout << "Case #" << co << ": " << result << endl;
		co++;
		t--;
	}
}
