#include <iostream>
#include <vector>
#include <map>
#include <ctime>
using namespace std;

#define MAX 3200
bool primes[MAX];
map<int, int> pMap;

void fill()
{
	for (int i = 2; i < MAX; ++i)
		primes[i] = true;

	for (int i = 2; i < MAX; ++i)
	{
		int j = i;
		if (primes[j])
		{
			j *= 2;
			while (j < MAX)
			{
				primes[j] = false;
				j *= 2;
			}
		}
	}
}

int primacity(int value, int idx)
{
	if (pMap.find(value) != pMap.end())
		return pMap[value];

	int oldValue = value;
	while (idx < MAX)
	{
		bool flag = false;
		while (primes[idx] && (value % idx) == 0)
		{
			value /= idx;
			flag = true;
		}

		if (flag)
		{
			pMap[oldValue] = 1 + primacity(value, idx + 1);
			return pMap[oldValue];
		}
		else
		{
			++idx;
		}
	}

	// this is a prime number
	return pMap[oldValue] = 1;
}

int main()
{
	fill();
	pMap[1] = 0;
	pMap[2] = pMap[3] = 1;

	int T;
	cin >> T;

	for (int i = 1; i <= T; ++i)
	{
		int A, B, K;
		cin >> A >> B >> K;

		//time_t start = time(NULL);

		int count = 0;
		for (int j = A; j <= B; ++j)
		{
			int tmp = primacity(j, 2);
		
			//time_t end = time(NULL);

			//if ((j % 10000) == 0)
				//cout << j << "," << tmp << ": time " << difftime(end, start) << endl;
			if (tmp == K)
				++count;
		}

		//time_t end = time(NULL);
		//cout << "total time " << difftime(end, start) << endl;

		cout << "Case #" << i << ": " << count << endl;
	}

	return 0;
}