#include <stdio.h>

#include <vector>

using namespace std;

const int MAXN = 10000010;

int primacy[MAXN];

vector<int> primes;

void find_primes()
{
	for(int i = 2; i * i <= MAXN; ++i)
	{
		bool is_prime = true;
		for(int j = 2; j * j <= i; ++j)
			if(i % j == 0)
			{
				is_prime = false;
				break;
			}
		if(is_prime)
		{
			primes.push_back(i);
			fprintf(stderr, "%d ", i);
		}
	}
	fprintf(stderr, "\ndone\n");
}

int compute_primacy(int n)
{
	int cur = 0;
	int res = 0;
	while(n > 1 && cur < primes.size())
	{
		int p = primes[cur++];
		if(n % p == 0)
		{
			++res;
			while(n % p == 0)
				n /= p;
		}
	}
	if(n > 1)
		++res;
	
	return res;
}

void solve(int t)
{
	int A, B, K;
	scanf("%d %d %d", &A, &B, &K);

	int res = 0;
	for(int i = A; i <= B; ++i)
		if(primacy[i] == K)
			++res;
	
	printf("Case #%d: %d\n", t, res);
}

int main()
{
	find_primes();
	for(int i = 1; i < MAXN; ++i)
		primacy[i] = compute_primacy(i);
	
	int T;
	scanf("%d", &T);
	for(int t = 0; t < T; ++t)
	{
		fprintf(stderr, "Solving #%d...\n", t + 1);
		solve(t + 1);
	}
	return 0;
}

