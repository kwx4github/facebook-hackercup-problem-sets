/////////////////////////////////////////
//  Author : Akshay Jaggi             //
///////////////////////////////////////

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<utility>
#include<queue>
#include<stack>
#include<string>
#include<cstring>
#include<map>
#define rep(i,N) for(int (i)=0;(i)<(N);(i)++)
#define repi(i,j,N) for(int (i)=(j);(i)<(N);(i)++)
#define repg(i,j,N) for((i)=(j);(i)<(N);(i)++)
#define si(i) scanf("%d",&(i))
#define sl(i) scanf("%lld",&(i))
#define pi(i) printf("%d",(i))
#define pl(i) printf("%lld",(i))
#define pin(i) printf("%d\n",(i))
#define pln(i) printf("%lld\n",(i))
#define pw    printf(" ");
#define pn    printf("\n");

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii; 
#define sz(a) int((a).size()) 
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 

bool is_prime[10000002];
int cnt[10000002];
int prefix[10000002][9];

int main()
{
	ios_base::sync_with_stdio(false);
	
	int T;
	cin>>T;
	
	memset(is_prime,0,sizeof(is_prime));
	memset(cnt,0,sizeof(cnt));
	memset(prefix,0,sizeof(prefix));

	is_prime[0]=is_prime[1]=true;
	for(int i=2;i*i<=10000000;i+=1)
	{
		if(!is_prime[i])
		{
			for(int j=i;j<=10000000;j+=i)
			{
				is_prime[j]=true;
				cnt[j]++;
			}
			is_prime[i]=false;
		}
	}

	for(int i=1;i<=8;i++)
	{
		for(int j=2;j<=10000000;j++)
		{
			prefix[j][i]=prefix[j-1][i];
			if(cnt[j]==i)
				prefix[j][i]++;
		}
	}
	
	rep(t,T)
	{
		int A,B,K;
		cin>>A>>B>>K;
		cout<<"Case #"<<t+1<<": ";
		if(K<=8)
			cout<<prefix[B][K]-prefix[A-1][K]<<endl;
		else
			cout<<0<<endl;
	}
  return 0;
}

