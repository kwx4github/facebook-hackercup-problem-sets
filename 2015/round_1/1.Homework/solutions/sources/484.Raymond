#include <bits/stdc++.h>
using namespace std;
const int MAXN = 10000000;
const int MAXP = 1000005;
bool isp[MAXN + 5];
int prim[MAXN + 5], P[MAXP], pn;
int main() {
	memset(isp, 1, sizeof(isp));
	for (int i = 2; i * i <= MAXN; ++i)
		if (isp[i])
			for (int j = i + i; j <= MAXN; j += i)
				isp[j] = false;
	for (int i = 2; i <= MAXN; ++i)
		if (isp[i]) P[pn++] = i;
	for (int i = 2; i <= MAXN; ++i) {
		int n = i;
		for (int j = 0; j < pn && P[j] * P[j] <= n; ++j) {
			if (n % P[j] == 0) ++prim[i];
			while (n % P[j] == 0) n /= P[j];
		}
		if (n > 1) ++prim[i];
	}
	int T;
	scanf("%d", &T);
	for (int cn = 1; cn <= T; ++cn) {
		int ans = 0, a, b, k;
		scanf("%d%d%d", &a, &b, &k);
		for (int i = a; i <= b; ++i)
			if (prim[i] == k) ++ans;
		printf("Case #%d: %d\n", cn, ans);
	}
}

