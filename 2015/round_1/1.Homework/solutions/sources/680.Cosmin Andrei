#include <cstdio>
#include <vector>
#include <algorithm>
#define VMAX 10000007
#define KMAX 11
#define ll long long
using namespace std;
bool mark[VMAX];
int tests, res[VMAX];
vector <int> G[KMAX];
vector <int> :: iterator it;

void precompute()
{
	for (int i = 2; i < VMAX; i++)
		if (!res[i])
		{
			for (ll j = 2LL * i; j < VMAX; j += i)
				res[j]++;
			res[i] = 1;
		}
		
	for (int i = 2; i < VMAX; i++)
		G[res[i]].push_back(i);
}

int main()
{
	freopen("input", "r", stdin);
	freopen("output", "w", stdout);
	
	precompute();
	
	scanf("%d", &tests);
	int x, y, k;
	for (int test_no = 1; test_no <= tests; test_no++)
	{
		scanf("%d%d%d", &x, &y, &k);
		printf("Case #%d: ", test_no);
		
		if (k >= KMAX)
			printf("0\n");
		else
		{
			it = lower_bound(G[k].begin(), G[k].end(), x);
			if (it == G[k].end())
				printf("0\n");
			else
			{
				int pos1 = it - G[k].begin();
				
				it = upper_bound(G[k].begin(), G[k].end(), y);
				it--;
				int pos2 = it - G[k].begin();
				
				printf("%d\n", pos2 - pos1 + 1);
			}
		}
	}
	return 0;
}
