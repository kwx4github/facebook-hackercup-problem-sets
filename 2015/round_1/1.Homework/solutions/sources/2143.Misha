#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:1000000000")
#include <iostream>
#include <algorithm>
#include <memory.h>
#include <cstring>
#include <sstream>
#include <cstdlib>
#include <complex>
#include <string>
#include <bitset>
#include <vector>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef complex < double > cd;

const bool db = false;

#define mp make_pair
#define pb push_back
#define ppb pop_back
#define sd second
#define fs first

#define inf 1000000007
#define nmax 10000010
#define mmax 1000010
#define eps 1e-9

int t, a, b, k;
int lp[nmax], cnt[nmax];
int pr[mmax], sz;
vector < int > ls[20];

int main() {
	//freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	//freopen("gcd.in", "r", stdin); freopen("gcd.out", "w", stdout);
	scanf("%d", &t);
	for(int i = 2; i < nmax; ++i) {
		if(lp[i] == 0) {
			lp[i] = pr[sz++] = i;
			cnt[i] = 1;
		}
		ls[cnt[i]].pb(i);
		for(int j = 0; j < sz && i * pr[j] < nmax && pr[j] <= lp[i]; ++j) {
			lp[i * pr[j]] = pr[j];
			cnt[i * pr[j]] = cnt[i] + (pr[j] != lp[i]);
		}
	}
	for(int it = 1; it <= t; ++it) {
		scanf("%d%d%d", &a, &b, &k);
		printf("Case #%d: ", it);
		if(k > 10) {
			puts("0");
			continue;
		}
		printf("%d\n", upper_bound(ls[k].begin(), ls[k].end(), b) - lower_bound(ls[k].begin(), ls[k].end(), a));
	}
	getchar(); getchar();
	return 0;
}
