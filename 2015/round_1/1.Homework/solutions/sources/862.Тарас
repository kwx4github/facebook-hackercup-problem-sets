#include<stdio.h>
#include<iostream>
#include<iomanip>
#include<string>
#include<vector>
#include<set>
#include<stack>
#include<list>
#include<queue>
#include<deque>
#include<bitset>
#include<map>
#include<algorithm>
#include<cmath>
#include<numeric>

#pragma comment (linker, "/STACK:640000000")
#define INF 10000000000 //1e10
#define EPS 1e-6
#define PI 3.1415926535897932384626433832795028841971
#define mp make_pair
#define pb push_back
#define pf push_front
#define ppf pop_front
#define ppb pop_back
#define x first
#define y second
#define pii pair<int,int>
#define pdd pair<double,double>
#define FOR(i,a,b) for (int _n(b), i(a); i <= _n; ++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i >= _b; --i)
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))
#define rep(i,n) FOR(i,0,(n)-1)
#define VI vector <int>
#define VVI vector <VI>
#define ll long long
#define sqr(x) ((x)*(x))


#define MAX 200111
#define MOD 1000000007
using namespace std;

const int N = 10000001;
int lp[N+1];
int rp[N+1];
vector<int> pr;


int P[N+1]; 


int main()
{
	freopen("in.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
 
	for (int i=2; i<=N; ++i)
	{
		if (lp[i] == 0)
		{
			lp[i] = i, rp[i] = 1;;
			pr.push_back (i);
		}
		for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)
			lp[i * pr[j]] = pr[j], rp[ i *pr[j]] = i; 
	}
	
	FOR(i,2,N)
	{
		int cur = -1;
		int C = i;
		while(C != 1)
		{
			if(lp[C] != cur)P[i]++,cur = lp[C];
			C = rp[C];
		}
	}
	
	int t;
	cin >> t;
	rep(tt,t)
	{
		int a,b,k;
		int ans = 0;
		cin >> a >> b >>k;
		FOR(i,a,b)
			if(P[i] == k)ans++;
		cout << "Case #" << (tt+1) << ": " << ans << endl;
	}

}