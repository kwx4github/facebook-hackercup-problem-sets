#include <string>
#include <vector>
#include <algorithm>
#include <fstream>
#include <iostream>

using namespace std;

int A;
int B;
int K;

bool isprime[10000010];
bool isprimesmall[10000010];
int primacity[10000010];

void pre(long long a, long long b) {
    for (long long i = 0; i * i <= b; i++) {
        isprimesmall[i] = true;
    }
    isprimesmall[0] = false;
    isprimesmall[1] = false;
    for (long long i = 0; i <= b - a; i++) {
        isprime[i] = true;
    }
    for (long long i = 2; i * i <= b; i++) {
        if (isprimesmall[i]) {
            for (long long j = i * 2; j * j <= b; j += i) {
                isprimesmall[j] = false;
            }
            for (long long j = max(2LL, (a + i - 1) / i) * i; j <= b; j += i) {
               isprime[j - a] = false;
            }
        }
    }
    for (long long i = a; i <= b; i++) {
        if (isprime[i - 2]) {
            for (long long j = i; j <= 10000000; j += i) {
                primacity[j]++;
            }
        }
    }
}

int solve() {
    int ret = 0;
    for (int i = A; i <= B; i++) {
        if (primacity[i] == K) {
            ret++;
        }
    }
    return ret;
}

int main() {
    pre(2, 10000000);
    ifstream in("input.txt");
    ofstream out("output.txt");
    int T; in >> T;
    cout << "T: " << T << endl;
    for (int t = 0; t < T; ++t) {
        in >> A >> B >> K;
        int ret = solve();
        out << "Case #" << t + 1 << ": " << ret << endl;
        cout << "Case #" << t + 1 << ": " << ret << endl;
    }
    getchar();
    return 0;
}
