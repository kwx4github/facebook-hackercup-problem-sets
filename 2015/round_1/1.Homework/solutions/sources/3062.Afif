#include <iostream>
#include <vector>
using namespace std;

vector<int> primes;

void gen_primes(int n)
{
	vector<bool> sieve(n+1,false);
	int i,j;
	for(i=2;i*i<=n;i++)
	{
		for(j=i*i;j<=n;j+=i)
			sieve[j]=true;
	}
	for(i=2;i<=n;i++)
		if(!sieve[i])
			primes.push_back(i);
}

int primacity(int n,int k)
{
	int i,j,ans=0;
	if(n==1)
		return 0;
	vector<int> count(n+1,0);
	for(i=0;i<primes.size() && primes[i]<=n;i++)
	{
		for(j=1;primes[i]*j<=n;j++)
			count[primes[i]*j]++;
	}
	for(i=2;i<=n;i++)
		if(count[i]==k)
			ans++;
	// for(i=2;i<=n;i++)
	// 	cout<<i<<"\t"<<count[i]<<endl;
	return ans;
}
int main()
{
	gen_primes(10000000);
	int t,a,b,k,i=1;
	cin>>t;
	while(t--)
	{
		cin>>a>>b>>k;
		cout<<"Case #"<<i<<": "<<primacity(b,k)-primacity(a-1,k)<<endl;
		i++;
	}

}