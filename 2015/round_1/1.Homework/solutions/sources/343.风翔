#include <iostream>
#include <utility>
#include <algorithm>
#include <memory.h>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <numeric>
#include <list>
#include <stack>
#include <cmath>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>
using namespace std;

typedef  long long LL;
const int Mod = 1e9 + 7;
inline int FIX(LL a) {return (a % Mod + Mod) % Mod;}
#define MP(x,y) make_pair(x,y)
#define LEN(x) ((int)x.length())
#define take(x,y) (((x)>>(y)) & 1ll)
//#define move(n) (1<<(n))
#define what_is(x) cerr << #x << " is " << x << endl;
#define eb emplace_back
#define UNQ(x) (sort(begin(x),end(x)),x.erase(unique(begin(x),end(x)),end(x)))
const int N = 20000000 + 5;

int pri[N],res[N][11];
int cal(int x) {
    int cnt = 0;
    for(int i = 2;i * i <= x;i++) {
        if(x % i == 0) {
            cnt++;
            while(x % i == 0) x/=i;
        }
        if(x == 1) break;
    }
    if(x != 1) cnt++;
    return cnt;
}
int main(){
    for(int i = 2;i <= 10000000;i++) {
        pri[i] = cal(i);
        for(int j = 0;j <= 10;j++) {
            if(pri[i] == j) res[i][j] = res[i-1][j] + 1;
            else res[i][j] = res[i-1][j];
        }
    }
    freopen("homework.txt","r",stdin);
    freopen("homework.out","w",stdout);
    int T,cas = 0;
    scanf("%d",&T);
    while(T--) {
        int A,B,K;
        scanf("%d %d %d",&A,&B,&K);
        int ret = 0;
        if(K > 10) ret = 0;
        else ret = res[B][K] - res[A-1][K];
        printf("Case #%d: %d\n",++cas,ret);
    }
    //printf("%d\n",Max);
    return 0;
}