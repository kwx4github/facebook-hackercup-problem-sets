from collections import *

def factor_count(n):
  l = [0]*(n+1)
  for i in xrange(2,n+1):
    if l[i] == 0:
      for j in xrange(i,n+1,i):
        l[j] += 1

  d = defaultdict(list)
  for i in xrange(2,n+1):
    d[l[i]].append(i)

  return d

def count_leq(l,a,start,end):
  if l[end]<=a:   return end-start+1
  if l[start]>a:  return 0
  mid = (start+end)/2
  return count_leq(l,a,start,mid)+count_leq(l,a,mid+1,end)

def count_geq(l,a,start,end):
  if l[start]>=a: return end-start+1
  if l[end]<a:    return 0
  mid = (start+end)/2
  return count_geq(l,a,start,mid)+count_geq(l,a,mid+1,end)

def solve(d,a,b,k):
  l = d[k]
  n = len(l)
  return 0 if n==0 else count_leq(l,b,0,n-1)+count_geq(l,a,0,n-1)-n

d = factor_count(10**7)
print max(d)
T = int(raw_input())
for caseno in xrange(1,T+1):
  a,b,k = map(int, raw_input().split())
  print 'Case #%d: %d'%(caseno,solve(d,a,b,k))