#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <vector>
#include <algorithm>
#define SZ(x) ((int)(x).size())
#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)
using namespace std;
typedef long long LL;

int p[1000005];
int a[1000005], np;
int primality(int n) {
  int c=0;
  for(int i=0;p[i]*p[i]<=n;i++) {
    if(n%p[i]==0) {
      while(n%p[i]==0) n/=p[i];
      ++c;
    }
  }
  if(n>1) ++c;
  return c;
}

void solve() {
  int A, B, k;
  scanf("%d%d%d", &A, &B, &k);
  int ans = 0;
  for(int i=A;i<=B;i++)
    if(primality(i) == k)
      ++ans;
  static int cs = 0;
  printf("Case #%d: %d\n", ++cs, ans);
}

int main(void) {
  int T;
  for(int i=2;i<=1000000;i++) 
    if(!a[i]) {
      p[np++] = i;
      for(int j=i*i;j<=1000000;j+=i)
        a[j] = 1;
    }
  scanf("%d", &T);
  while(T--) solve();
  return 0;
}
