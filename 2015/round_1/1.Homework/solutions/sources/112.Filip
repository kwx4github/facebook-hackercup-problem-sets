/* Written by Filip Hlasek 2015 */
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <string>
#include <algorithm>
#include <cmath>
#include <cstring>

#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define REP(i,b) for(int i=0;i<(b);i++)

using namespace std;

#define MAXN 10000003
int primacity[MAXN];
#define MAXK 10
int pref_sum[MAXN][MAXK];

void precalculate_primacity() {
  FOR(p, 2, MAXN - 1) if (primacity[p] == 0) {
    for (int j = p; j < MAXN; j += p) primacity[j]++;
  }
}

void precalculate_pref_sums() {
  REP(i, MAXN - 1) {
    REP(j, MAXK) pref_sum[i + 1][j] = pref_sum[i][j];
    pref_sum[i + 1][primacity[i]]++;
  }
}

int solve(int A, int B, int K) {
  if (K >= MAXK) return 0;
  return pref_sum[B + 1][K] - pref_sum[A][K];
}

int main(int argc, char *argv[]) {

  precalculate_primacity();

  precalculate_pref_sums();

  int T;
  scanf("%d", &T);
  REP(t, T) {
    int A, B, K;
    scanf("%d%d%d", &A, &B, &K);
    printf("Case #%d: %d\n", t + 1, solve(A, B, K));
  }
  return 0;
}
