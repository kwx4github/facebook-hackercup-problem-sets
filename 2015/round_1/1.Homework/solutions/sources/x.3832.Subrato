///....................SUBRATO MOLLICK....................///
///.....DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING....///
///.............ISLAMIC UNIVERSITY,BANGLADESH.............///
///........................BETCH-10.......................///
#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(__typeof(n) i=0; i<(n); i++)
#define rep2(i,n) for(__typeof(n) i=1; i<=(n); i++)
#define FOR(i,a,b) for(__typeof(b) i=(a); i<=(b); i++)
#define INF (1<<30)
#define PI 3.14159265358979323846264338327950
#define pb(x) push_back(x)
#define all(x) x.begin(),x.end()
#define sz size()
#define eps 1e-9
#define vl vector<long>
#define vs vector<string>
#define ll long long
#define mii map<int,int>
#define msi map<string,int>
#define mis map<int,string>
#define clr(x) memset(x,0,sizeof(x));
#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define all(x) x.begin(),x.end()
#define nl cout<<endl;
#define chk cout<<"Fuck"<<endl
#define M 1000000
#define mod 1000000007
/*bool marked[M];
vector<long>vec;
bool isPrime(long n)
{
    if(n<2) return false;
    if(n==2) return true;
    if(n%2==0) return false;
    return marked[n]==false;
}
void sieve()
{
    long i,j;
    for(i=3;i*i<=n;i+=2)
    {
        if(marked[i]==false)
        {
            for(j=i*i;j<=n;j+=i+i)
            marked[j] = true;
        }
    }
    vec.pb(2);
    for(i=3;i<=n;i+=2)
    {
        if(marked[i]==false)
        vec.pb(i);
    }
}*/
/*long long npr(long n,long m)
{
   long long ret=1,i;
   for(i=1;i<=m;i++)
   ret*=(n-i+1);
   return ret;
}*/
/*long long ncr(long n,long m)
{
   long long ret=1,i;
   for(i=1;i<=m;i++)
   {
       ret*=(n-i+1);
       ret/=i;
   }
   return ret;
}*/
/*long long fact(long n)
{
    long long ret=1,i;
    for(i=1;i<=n;i++)
    ret*=i;
    return ret;
}*/
/*long long gcd(long n,long m)
{
  while(m>0)
  {
    n=n%m;
    n=n^m;
    m=m^n;
    n=n^m;
  }
  return n;
}*/
/*long long lcm(long n,long m)
{
    long long x=(n*m)/gcd(n,m);
    return x;
}*/

/*double area_triangle(double x1,double y1,double x2,double y2,double x3,double y3)
{
    double a;
    a=x1*(y2-y3)+y1*(x3-x2)+((x2*y3)-(y2*x3))+eps;
    a=a/2+eps;
    return a;
}*/
/*double dist_2point(double x1,double y1,double x2,double y2)
{
    double d;
    d=sqrt(((x1-x2)*(x1-x2))+((y1-y2)*(y1-y2)));
    return d;
}*/
/*int binary_search(int a[],int n,int l,int u)
{
	int mid;
	if(l>u)
    return 0;
    mid=floor(l+u)/2;
    if(a[mid]==n)
    return mid;
    else if(a[mid]>n)
    binary_search(a,n,l,mid-1);
    else
    binary_search(a,n,mid+1,u);
}*/
/*bool is_palindrome(const string &s, int start, int end)
{
    int siz=end-start+1;
    if(siz%2==0)
    {
        int middle=start+siz/2;
        int i;
        for(i =0;middle-1-i>=0&&middle+i<=end&&s[middle-1-i]==s[middle+i];i++);
        if(middle-i-1<0||middle+i>end)
        return true;
    }
    else
    {
        int middle = start + siz/2;
        int i;
        for (i=1;middle-i>=0&&middle+i<=end&&s[middle-i]==s[middle+i];i++);
        if (middle-i<0||middle+i>end)
        return true;
    }
    return false;
}*/
/*long long b_mod(long long p)
{
    if(p==0)
    return 1;
    if(p%2==0)
    {
        long long ret=b_mod(p/2);
        return ((ret%mod)*(ret%mod))%mod;
    }
    else
    return ((b%mod)*(b_mod(p-1)%mod))%mod;
}*/
long visit[10000005],vec[10000005];
//map<long,long>mp;
int main()
{

    freopen("Input.txt","r",stdin);
	freopen("Output.txt","w",stdout);
	vector<long>prime;
	long i,j,n,m,k,mx=0;
	prime.pb(2);
	for(i=3;i<=10000000;i+=2)
    {
        if(visit[i]==0)
        {
            prime.pb(i);//cout<<i<<"-->";
            if(i<3163)
            for(j=2*i;j<=10000000;j+=i)
            {
                //cout<<j<<" ";
                visit[j]=1;
                vec[j]++;
                mx=max(vec[j],mx);
            }//nl;
        }
    }//cout<<mx<<endl;
    //for(i=2;i<=20;i++)cout<<i<<" "<<vec[i]<<endl;
	long cs,tst;
	scanf("%ld",&cs);
	rep(tst,cs)
    {
        long cnt=0,flag=0;
        scanf("%ld",&n);scanf("%ld",&m);scanf("%ld",&k);
        printf("Case #%ld: ",tst+1);
        if(k>7)printf("0\n");
        else
        {
            for(i=n;i<=m;i++)
            {
                if(i%2==0)flag=1;
                else if(i%2==1&&visit[i]==0)flag=1;
                else flag=0;
                //cout<<i<<" "<<vec[i]+flag<<endl;
                if(vec[i]+flag==k)cnt++;
            }
           printf("%ld\n",cnt);
        }
    }
return 0;
}















