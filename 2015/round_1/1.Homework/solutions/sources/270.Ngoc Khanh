#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

const int MAX = (int) 1e7;
int primeDivisor[MAX + 1];
vector<int> numbers[32];

int main() {
    for (int i = 1; i <= MAX; ++i) primeDivisor[i] = i;
    for (int i = 2; i * i <= MAX; ++i) if (primeDivisor[i] == i) {
        for (int j = i * i; j <= MAX; j += i) if (primeDivisor[j] == j) {
            primeDivisor[j] = i;
        }
    }
    for (int i = 2; i <= MAX; ++i) {
        int n = i;
        int cnt = 0;
        while (n > 1) {
            int d = primeDivisor[n];
            while (n % d == 0) n /= d;
            ++cnt;
        }
        numbers[cnt].push_back(i);
    }
    int numTests; cin >> numTests;
    for (int test = 0; test < numTests; ++test) {
        int a; cin >> a;
        int b; cin >> b;
        int k; cin >> k;
        int result = k >= 32 ? 0 : upper_bound(numbers[k].begin(), numbers[k].end(), b) - lower_bound(numbers[k].begin(), numbers[k].end(), a);
        printf("Case #%d: %d\n", test + 1, result);
    }
    return 0;
}
