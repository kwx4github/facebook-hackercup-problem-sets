#include <iostream>
#include <string>
#include <map>
#include <fstream>
#include <vector>

using namespace std;

const int MAXP = 10000001;
bool is_prime[MAXP];
char primacity[MAXP];

void construct_sieve() {
    memset(is_prime, true, sizeof(is_prime));
    memset(primacity, 0, sizeof(primacity));
    primacity[0] = 0;
    primacity[1] = 0;
    for (long long i = 2; i < MAXP; ++i) {
        if (is_prime[i]) {
            for (long long j = i; j < MAXP; j += i) {
                is_prime[j] = false;
                primacity[j]++;
            }
            is_prime[i] = true;
        }
    }

}

void doit(ifstream &fin) {
    long long A, B, K;
    fin >> A >> B >> K;
    if (K >= 10) {
        cout << 0 << endl;
        return;
    }
    long long ans = 0;
    for (long long i = A; i <= B; ++i) {
        if (primacity[i] == K) {
            ans++;
        }
    }
    cout << ans << endl;
}

int main(int argc, char* argv[]) {
    construct_sieve();
    int T;
    if (argc < 1) return 0;
    ifstream fin = ifstream(argv[1]);
    fin >> T;
    fin.get();
    for (int i = 1; i <= T; ++i) {
        cout << "Case #" << i << ": ";
        doit(fin);
    }
    return 0;
}