#include <stdio.h>
#define MAX_N 10000000

char isNotP[MAX_N + 1] = {0, 1};
int p[664579] = {2}, len_p = 1;
int primacity[MAX_N + 1];

void sieve(void) {
	int i, j;

	for (i = 2; i * i <= MAX_N; i++)
		if (!isNotP[i])
			for (j = i * 2; j <= MAX_N; j += i)
				isNotP[j] = 1;

	for (i = 3; i <= MAX_N; i += 2)
		if (!isNotP[i])
			p[len_p++] = i;
}

int main(void) {
	int i, j;
	int t;

	sieve();
	for (i = 0; i < len_p; i++)
		for (j = p[i]; j <= MAX_N; j += p[i])
			primacity[j]++;

	scanf("%d", &t);
	for (i = 1; i <= t; i++) {
		int a, b, k;
		int ans;

		scanf("%d %d %d", &a, &b, &k);

		ans = 0;
		for (j = a; j <= b; j++)
			ans += primacity[j] == k;

		printf("Case #%d: %d\n", i, ans);
	}

	return 0;
}
