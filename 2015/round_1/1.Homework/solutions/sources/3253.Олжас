import java.io.*;
import java.math.*;
import java.util.*;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;

public class Round1_A implements Runnable {
	BufferedReader in;
	PrintWriter out;
	StringTokenizer st;
	boolean file = true;
	String fileName = "A-small";

	public static void main(String[] args) throws Exception {
		new Round1_A().run();
	}

	private String next() throws Exception {
		if (st == null || !st.hasMoreElements())
			st = new StringTokenizer(in.readLine());
		return st.nextToken();
	}

	private int nextInt() throws Exception {
		return Integer.parseInt(next());
	}

	private long nextLong() throws Exception {
		return Long.parseLong(next());
	}

	private double nextDouble() throws Exception {
		return Double.parseDouble(next());
	}

	public void run() {
		try {
			if (file)
				in = new BufferedReader(new FileReader(fileName+".in"));
			else
				in = new BufferedReader(new InputStreamReader(System.in));
			if (file)
				out = new PrintWriter(new FileWriter(fileName+".out"));
			else
				out = new PrintWriter(System.out);
			solve();
		} catch (Exception ex) {
			throw new RuntimeException(ex);
		} finally {
			out.close();
		}
	}

	public void solve() throws Exception {
		int cases = Integer.parseInt(in.readLine());
		for(int step = 1; step <= cases; step++){
			int a = nextInt(), b = nextInt(), k = nextInt(), arr[] = new int[b+1];
			arr[0] = 1;
			arr[1] = 1;
			int m = (int)b/2, res = 0;
			for(int j=2; j<=m; j++) {
				if (arr[j] == 0) {
					for (int l=j; l<=b; l+=j)
						arr[l]++;
				}
			}
			for (int i=a; i<=b; i++){
				if (arr[i] == 0)
					arr[i] = 1;
				if (arr[i] == k)
					res++;
			}
//			out.println(Arrays.toString(arr));
			out.println("Case #"+step+": "+res);
		}
	}
	
}