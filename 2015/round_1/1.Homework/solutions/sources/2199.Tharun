#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define MAX numeric_limits<int>::max()
#define MIN numeric_limits<int>::min()
#define MOD 1000000007
#define LIM 10000002
int brr[LIM];
bool arr[LIM];
vector<int>primes;
void findprimes()
{
    int i,j;
    //1-composite
    arr[0]=arr[1]=1;
    int sq=sqrt(LIM);
    for(i=2;i<=sq;i++)
    {
        if(arr[i]==0)
        {
            primes.push_back(i);
            for(j=i*i;j<LIM;j+=i)
            {
                arr[j]=1;
            }
        }
    }
    for(i=sq+1;i<LIM;i++)
    {
        if(arr[i]==0)
        {
            primes.push_back(i);
        }
    }
}
void primicity()
{
    int i,j;
    brr[0]=brr[1]=0;
    for(i=0;i<primes.size();i++)
    {
        for(j=primes[i];j<LIM;j+=primes[i])
        {
            brr[j]++;
        }
    }
}
int main()
{
    freopen("homework.txt","r",stdin);
    freopen("rd1_ques1_op.txt","w",stdout);
    findprimes();
    int d,i,j,tc;
    primicity();
    scanf("%d",&tc);
    int a,b,k,sum;
    for(d=1;d<=tc;d++)
    {
        sum=0;
        scanf("%d%d%d",&a,&b,&k);
        if(k<=8)
        {
            for(i=a;i<=b;i++)
            {
                if(brr[i]==k)
                {
                    sum++;
                }
            }
        }
        printf("Case #%d: %d\n",d,sum);
    }
    return 0;
}
