#include <iostream>
#include <algorithm>
using namespace std;

const int amax = 1E7;

int c[amax + 1], o[amax + 1];

bool less_primacity_then_magnitude(int a, int b) {
	return c[a] < c[b] || c[a] == c[b] && a < b;
}

bool less_primacity(int a, int b) {
	return c[a] < c[b];
}

void calc() {
	int i, j;

	c[1] = 0;
	for (i = 2; i * i <= amax; i++) if (!c[i]) {
		for (j = i; j <= amax; j += i) c[j]++;
	}

	for (i = 2; i <= amax; i++) o[i] = i;
	sort(o + 2, o + amax + 1, less_primacity_then_magnitude);
}

int main() {
	int nt, it;

	calc();

	cin >> nt;
	for (it = 1; it <= nt; it++) {
		int a, b;
		cin >> a >> b >> c[0];

		auto r = equal_range(o + 2, o + amax + 1, 0, less_primacity);

		cout << "Case #" << it << ": ";
		cout << upper_bound(r.first, r.second, b) - lower_bound(r.first, r.second, a) << '\n';
	}
}
