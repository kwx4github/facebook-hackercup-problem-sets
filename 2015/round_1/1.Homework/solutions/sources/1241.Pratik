#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;
#define MAX 10000009
int pcount[MAX];
vector<int> vec[10];
void sieve()
{
	int i = 0, j = 0;
	pcount[0] = 0;
	pcount[1] = 0;
	for(i = 2; i < MAX; i++)
	{
		if(pcount[i] == 0)
		{
			for(j = 1; j*i < MAX; j++)
				pcount[j*i]++;
		}
	}
}

void createreversemap()
{
	int i;
	for(i=2;i<MAX;i++)
		vec[pcount[i]].push_back(i);
}

int get_count(int a, int b, int k)
{
	vector<int>::iterator low,up,i;
	low = lower_bound (vec[k].begin(), vec[k].end(), a);
	up = lower_bound (vec[k].begin(), vec[k].end(), b); 
	if(up < vec[k].end() && (*up) == b)
		return (up-low+1);
	else
		return (up-low);
}
int main()
{
	int i,t,a,b,k;
	sieve();
	createreversemap();
	cin>>t;
	for(i=1;i<=t;i++)
	{
		cout<<"Case #"<<i<<": ";
		cin>>a>>b>>k;
		if(k>8)
			cout<<0;
		else
			cout<<get_count(a,b,k);
		cout<<endl;
	}
	return 0;
}
