//package Round1;

import java.util.*;
import java.io.*;

public class P1 {

	public static final int MAX_SIZE = 10000001;
	public static int primes[] = new int[MAX_SIZE];

	public void run() throws IOException {
        in = new FastScanner(new FileInputStream("homework.txt"));
        out = new PrintWriter(new FileOutputStream("homework.out"));

        computePrimes();
        int tn = in.nextInt();
        for (int test = 1; test <= tn; test++) {
            int A, B, K, count = 0;
            A = in.nextInt();
            B = in.nextInt();
            K = in.nextInt();
            
            for(int i = A; i <= B; i++) {
            	if(primes[i] == K || (K == 1 && primes[i] == 0) ) count++;
            }
            
            out("Case #%d: %d\n", test, count);
        }

        out.close();
    }
	
	public static void computePrimes(){
		int c = 0;
		for(int i = 2; i < MAX_SIZE; i++) {
			if(primes[i] == 0) {
				c++;
				for(int j = i+i; j < MAX_SIZE; j += i )
					primes[j]++;
			}
		}
	}
	
	void out(String format, Object... args) {
        out.printf(format, args);
        System.out.printf(format, args);
    }

    FastScanner in;
    PrintWriter out;

    public static void main(String[] args) throws IOException {
        new P1().run();
    }

    static class FastScanner {
        BufferedReader br;
        StringTokenizer st;

        FastScanner(InputStream in) throws IOException {
            br = new BufferedReader(new InputStreamReader(in));
        }

        String next() {
            try {
                while (st == null || !st.hasMoreTokens()) {
                    st = new StringTokenizer(br.readLine());
                }
            } catch (IOException e) {
                System.err.println(e);
                System.exit(1);
            }
            return st.nextToken();
       }

        int nextInt() {
            return Integer.parseInt(next());
        }
    }
}
