#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <deque>
#include <iostream>
#include <limits>
#include <numeric>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define MP make_pair
#define all(v) (v).begin(), (v).end()
#define PROBLEM_ID "prime"

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<bool> vb;
typedef long long ll;
typedef pair<int, int> pii;

const ll MaxNumber = 10000000 + 1;

vector<ll> CountPrimes() {
	vector<ll> res(MaxNumber, 0);
	for (ll pos = 2; pos < sqrt(MaxNumber); pos++) {
		if (res[pos] != 0)
			continue; // Not a prime
		for (ll next_pos = pos; next_pos < res.size(); next_pos += pos) {
			res[next_pos] += 1;
		}
	}
	return res;
}

ll CountPrimes(ll a, ll b, ll k, const vector<ll>& res) {
	int result = 0;
	for (int i = a; i <= b; ++i) {
		if (res[i] == k) {
			result += 1;
		}
	}
	return result;
}

int main() {
	
	
  freopen(PROBLEM_ID".in", "r", stdin);
  freopen(PROBLEM_ID".out", "w", stdout);
  
  vector<ll> res = CountPrimes();

  /*cout << res[10] << endl;
  cout << res[2] << endl;
  cout << res[MaxNumber - 1] << endl;
  int i;
  cin >> i;
  */


  int tests;
  cin >> tests;
  for (int test_index = 0; test_index < tests; ++test_index) {
	  int a, b, k;
	  cin >> a;
	  cin >> b;
	  cin >> k;
    cout << "Case #" << test_index + 1 << ": " << CountPrimes(a, b, k, res) << endl;
  }
  return 0;
}
