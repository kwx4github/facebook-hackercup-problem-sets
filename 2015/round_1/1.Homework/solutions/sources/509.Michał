#include <cstdio>
#include <vector>
using namespace std;

const int MAXN = 10000001;

class Primes {
    int N;
    
public:
    vector<int> primes;
    Primes(int N): N(N) {
        vector<bool> sieve(N, true);
        sieve[0] = sieve[1] = false;
        for (int p = 2; p*p < N; ++p) {
            if (!sieve[p]) continue;

            for (int c = p*p; c < N; c += p) {
                sieve[c] = false; 
            }
        }

        for (int p = 2; p < N; ++p)
            if (sieve[p])
                primes.push_back(p);
    }
};

Primes pgen(MAXN);

int main() {
    vector<int> primacity(MAXN, 0);

    for (int pi = 0; pi < pgen.primes.size(); ++pi) {
        int p = pgen.primes[pi];
        for (int comp = p; comp < MAXN; comp += p)
            primacity[comp]++;
    }

    int Tc;
    scanf("%d", &Tc);
    for (int tc = 1; tc <= Tc; ++tc) {
        int a, b, k;
        scanf("%d%d%d", &a, &b, &k);

        int result = 0;
        for (int j = a; j <= b; ++j) {
            if (primacity[j] == k)
                ++result;
        }

        printf("Case #%d: %d\n", tc, result);
    }
}
