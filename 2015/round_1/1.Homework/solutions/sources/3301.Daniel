package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

func abk(s []string) (int, int, int) {
	ints := make([]int, len(s), len(s))
	for i := range s {
		tint, _ := strconv.Atoi(s[i])
		ints[i] = int(tint)
	}

	return ints[0], ints[1], ints[2]
}

func Primacities(n int) []int {
	ints := make([]int, n+1, n+1)
	for i := 2; i <= n; i++ {
		if ints[i] == 0 {
			for j := i; j <= n; j += i {
				ints[j]++
			}
		}
	}

	return ints
}

func solve(a, b, k int, primacities []int) int {
	var primacity int
	for i := a; i <= b; i++ {
		if primacities[i] == k {
			primacity++
		}
	}

	return primacity
}

func main() {
	file, err := os.Open(os.Args[1])
	if err != nil {
		panic(err)
	}
	defer file.Close()

	scanner := bufio.NewScanner(file)
	scanner.Scan()
	T, _ := strconv.Atoi(scanner.Text())
	primacities := Primacities(10e7)
	for i := 1; i <= T; i++ {
		// Parse a, b, k
		scanner.Scan()
		a, b, k := abk(strings.Split(scanner.Text(), " "))
		primacity := solve(a, b, k, primacities)
		fmt.Printf("Case #%d: %d\n", i, primacity)
	}

}
