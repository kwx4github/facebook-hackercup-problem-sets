#include<stdio.h>
#include<math.h>
#define max 10000001
int ar[max],dd[max][10];
int flag[10000000>>6], primes[664579], total;
#define ifc(x) (flag[x>>6]&(1<<((x>>1)&31)))
#define isc(x) (flag[x>>6]|=(1<<((x>>1)&31)))
inline void sieve1() {
register int i, j, k;
for(i = 3; i < 10000; i+=2) if(!ifc(i))
for(j = i*i, k = i<<1; j < 10000000; j += k) isc(j);
primes[0] = 2, total = 1;
for(i = 3; i < 10000000; i+=2) if(!ifc(i)) primes[total++] = i;
}
void sieve()
{
	int i,j,k=1,p,ct=0;
	ar[1]=0;
    for(i=0;i<total;i++)
    {
    	//printf("dfd %d\n",primes[i]);
   	 	ar[primes[i]]=1;
   		for(j=2*primes[i];j<max;j+=primes[i])
   			{
   				//printf("%d\n",j);
   				ar[j]++;
   			}
    }
}
int main()
{
int t,i,k,j,max1=0;
sieve1();
//printf("%d %d\n",total,primes[total-1]);
sieve();

dd[1][0]=0;
dd[2][1]=1;
dd[2][0]=0;
for(i=3;i<max;i++)
{
	for(j=1;j<10;j++)
		dd[i][j]=dd[i-1][j];
	dd[i][ar[i]]+=1;
}

scanf("%d",&t);
int test=1;
for(;test<=t;test++)
{
	int a,b,n;
	scanf("%d%d%d",&a,&b,&n);
	printf("Case #%d: ",test);
	if(n>=10)
	{
		printf("0\n");
	}
	else if(n==0)
	{
	if(a==1)
	printf("1\n");
	else
	printf("0\n");
	}
	else
	{
	if(dd[a-1][n]!=dd[a][n])
	printf("%d\n",dd[b][n]-dd[a][n]+1);	
	else
	printf("%d\n",dd[b][n]-dd[a][n]);
	}
}
return 0;
}
