#include <cstdio>
#include <cstring>
#include <algorithm>

#define LAN

using namespace std;
const int MAXN = 10000500;

int lower_bit(const int n)
{
	return n&-n;
}

struct BIT
{
	int num[MAXN+1];
	BIT(void) {memset(num,0,sizeof(num));}
	int sum(const int n) {
		int s=0;
		for(int i=n;i>0;i-=lower_bit(i))
			s += num[i];
		return s;
	}
	void add(const int n,const int d)
	{
		for(int i=n;i<=MAXN;i+=lower_bit(i))
			num[i] += d;
	}
	int query(int a,int b)
	{
		if(a>b) swap(a,b);
		return sum(b) - sum(a-1);
	}
};


int primacity[MAXN];
BIT bit[10];

void build_prime(void)
{
	memset(primacity,0,sizeof(primacity));
	for(int i=2;i<MAXN;i++)
		if(primacity[i]==0)
			for(int j=i;j<MAXN;j+=i)
				primacity[j]++;
	for(int i=2;i<MAXN;i++)
	{
		bit[primacity[i]].add(i,1);
	}
}

int A,B,K;

void input(void) {
	scanf("%d%d%d",&A,&B,&K);
}
/*
void solve(void) {
	int ans = 0;
	for(int i=A;i<=B;i++)
		if(primacity[i]==K)
			ans++;
	printf("%d\n",ans);
}
*/

void solve(void)
{
	printf("%d\n",bit[K].query(A,B));
}

int main(void)
{
#ifdef LAN
	//freopen("homework_example_input.txt","r",stdin);
	freopen("homework.txt","r",stdin);
	freopen("homework_self_output.txt","w",stdout);
#endif
	build_prime();
	int T;
	scanf("%d",&T);
	for(int tt=1;tt<=T;tt++)
	{
		input();
		printf("Case #%d: ",tt);
		solve();
	}
	return 0;
}
