#include <bits/stdc++.h>

using namespace std;

typedef long long     LL;
typedef pair<int,int> pii;

double PI  = acos(-1);
double EPS = 1e-7;
int INF    = 1000000000;
LL INFLL   = 1000000000000000000LL;

#define fi            first
#define se            second
#define mp            make_pair
#define pb            push_back

#define input(in)     freopen(in,"r",stdin)
#define output(out)   freopen(out,"w",stdout)

#define MIN(a, b)     (a) = min((a), (b))
#define MAX(a, b)     (a) = max((a), (b))

#define RESET(a, b)   memset(a,b,sizeof(a))
#define ALL(a)        (a).begin(), (a).end()
#define SIZE(a)       (int)a.size()
#define SORT(a)       sort(ALL(a))
#define UNIQUE(a)     (a).erase( unique( ALL(a) ), (a).end() )
#define FOR(a, b, c)  for (int (a)=(b); (a)<=(c); (a)++)
#define FORD(a, b, c) for (int (a)=(b); (a)>=(c); (a)--)
#define FORIT(a, b)   for (__typeof((b).begin()) a=(b).begin(); a!=(b).end(); a++)

int mx[8] = {-1,1,0,0,-1,-1,1,1};
int my[8] = {0,0,-1,1,-1,1,-1,1};

// ----- //

int cnt[10000005];
vector<int> haha[105];

void sieve()
{
	FOR(a,2,10000000)
	{
		if (cnt[a] == 0)
		{
			for(int mult = 2;mult*a <= 10000000; mult++)
			{
				cnt[mult*a]++;
			}
		}
	}
}

int main()
{
	sieve();
	FOR(a,1,10000000)
	{
		if (cnt[a] == 0) haha[1].pb(a);
		else haha[cnt[a]].pb(a);
	}
	int t;
	scanf("%d",&t);
	FOR(tc,1,t)	{
		int l,r,k;
		scanf("%d%d%d",&l,&r,&k);
		printf("Case #%d: ",tc);
		if (k < 100)
		{
			printf("%d\n",upper_bound(ALL(haha[k]),r)-lower_bound(ALL(haha[k]),l));
		}
		else
		{
			printf("%d\n",0);
		}
	}
}
