#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <map>
#include <set> 
#include <sstream>
#include <fstream>
#include <utility>
#include <iomanip>
#include <string>
#include <vector>
#include <stack>
#include <queue>
using namespace std;
#define REP(i,a) for(int i=0;i<a;i++)
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define FOREACH(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define SIZE(c) (int)c.size()
#define ALL(c) (c).begin(),(c).end() 
typedef pair<int, int> PII;
vector<int> primes;
bool p[10000005];
void init() {
	memset(p, true, sizeof p);
	p[0] = p[1] = false;
	for (int i = 2; i <= 10000000; i ++) if (p[i]) {
		for (int j = i + i; j <= 10000000; j += i) {
			p[j] = false;
		}
	}
	for (int i = 0; i <= 10; i ++) if (p[i]) {
		primes.push_back(i);
	}
}
int get (int x) {
	int ret = 0;
	for (int i = 0; i < SIZE(primes); i ++) {
		if (x % primes[i] == 0) {
			ret ++;
		}
	} 
	return ret;
}
int solve(int x, int y, int k) {
	int ret = 0;
	for (int i = x; i <= y; i ++) {
		if (get(i) == k) {
			ret ++;
		}
	}
	return ret;
}
int main() {
	init();
	freopen("homework.txt", "r", stdin);
	freopen("homework.out", "w", stdout);
	int T; cin>>T;
	REP(t, T){
		int a, b, k;
		cin>>a>>b>>k;
		cout << "Case #" << (t + 1) << ": " << solve(a, b, k)<<endl; 
	}
	return 0;
}
