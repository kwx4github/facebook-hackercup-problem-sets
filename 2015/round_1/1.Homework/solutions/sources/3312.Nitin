#include<stdio.h>
#include<limits.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<assert.h>
#include <map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#define pb push_back
#define mp make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define mod 1000000007
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define pll(n) printf("%lld",n)
#define plln(n) printf("%lld\n",n)
#define pllw(n) printf("%lld ",n)
#define sll(n) scanf("%lld",&n)
#define ss(s) scanf("%s",s)
#define ps(s) printf("%s",s)
#define psn(s) printf("%s\n",s)
#define psw(s) printf("%s ",s)
#define si(n) scanf("%d",&n)
#define pn printf("\n")
#define pw printf(" ")
using namespace std;


int prime[10000005];
int pre[11][10000005];
void go_baby() {int t,i;
    for(i=0;i<10000005;i++) prime[i] = 0;
    for(i=2;i<10000005;i++) if(prime[i] == 0)
        for(int j=i;j<10000005;j+=i) prime[j]++;
    for(t=1;t<=10;t++) {
        pre[t][0] = pre[t][1] = 0;
        for(i=2;i<10000005;i++) {
            pre[t][i] = pre[t][i-1];
            if(prime[i] == t){pre[t][i]++;}
        }
    }
}



int main() {
go_baby();
int T;int kase=1;
si(T);
while(T--) {
        int A, B, K;
        si(A);si(B);si(K);
        printf("Case #%d: ",kase++);
        if(K>10){pi(0);}
        else{
        pi(pre[K][B]-pre[K][A-1]);}pn;
    }
    return 0;
}