#include <stdio.h>
#include <string.h>

const int MAXN = 10000000;

int minp[MAXN + 1], plist[MAXN + 1];
int a[MAXN + 1];

int prime(int n = MAXN) {
	int num = 0;
	memset(minp, 0, sizeof(minp));
	for (int i = 2; i <= n; i++) {
		if (!minp[i]) plist[num++] = i, minp[i] = i;
		for (int j = 0; j < num && i * plist[j] <= n; j++) {
			minp[i * plist[j]] = plist[j];
			if (i % plist[j] == 0) break;
		}
	}
	return num;
}

int main() {
	int T;
	prime();
	for (int i = 2; i <= MAXN; i++) {
		int k = i;
		while (k > 1) {
			int m = minp[k];
			while (k % m == 0) k /= m;
			a[i]++;
		}
	}
	scanf("%d", &T);
	for (int cas = 1; cas <= T; cas++) {
		int A, B, k;
		scanf("%d%d%d", &A, &B, &k);
		int ans = 0;
		for (int i = A; i <= B; i++) {
			if (a[i] == k) ans++;
		}
		printf("Case #%d: %d\n", cas, ans);
	}
}