#!/usr/bin/python

# print repr(st)
# maze = [[['#' for i in range(N+2)] for i in range(M+2)] for i in range(4)]
# (M, N) = map(int, f.readline().split())
# l = f.readline()
import argparse
import math


def doit():
    (a,b,k) = map(int, f.readline().split())
    count = 0
    while a <= b:
        if allprimacity[a] == k:
            count+=1
        a+=1
    return count


def is_prime(n):
    if n < 2:
        return False
    if n % 2 == 0 and n > 2:
        return False
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        if n % i == 0:
            return False
    return True



upb = 10**7 + 10

allprimes = [True for k in range(upb)]
allprimes[0] = False
allprimes[1] = False
i = 2
while i < upb:
    if allprimes[i]:
        m = 2
        while m*i < upb:
            allprimes[m*i] = False
            m+=1
    i+=1

allprimacity = [0 for k in range(upb)]
i = 0
while i < upb:
    if allprimes[i]:
        m = 1
        while m*i < upb:
            allprimacity[m*i] += 1
            m+=1
    i+=1

#print repr(allprimacity[0:20])

parser = argparse.ArgumentParser()
parser.add_argument("filename", help="The filename to be processed")
args = parser.parse_args()
if args.filename:
    with open(args.filename) as f:
        cases = int(f.readline())
        for case in range(1, cases+1):
            print ("Case #" + str(case) + ":"), doit()