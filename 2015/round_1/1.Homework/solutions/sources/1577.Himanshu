package algo.Practice;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.HashMap;
import java.util.HashSet;
public class Homework {

	private static int val = 0;
	public static HashSet<Integer> getFactor(int n, HashMap<Integer, HashSet<Integer>> hm) {
		if (hm.containsKey(n)) {
			return hm.get(n);
		}
		HashSet<Integer> h1;
		if (n == 2) {
			h1 = new HashSet<Integer>();
			h1.add(n);
			hm.put(n, h1);
			return h1;
		}
		int i = (int)Math.ceil(Math.sqrt(n));
		while (i != 1 && n % i != 0) {
			i--;
		}
		val++;


		if (i == 1) {
			h1 = new HashSet<Integer>();
			h1.add(n);
			hm.put(n, h1);
			return h1;
		}
		int div = n / i; 
		h1 = getFactor(i, hm);

		HashSet<Integer> h2 = getFactor(div, hm);
		HashSet<Integer> hFinal = new  HashSet<Integer>();
		hFinal.addAll(h1);
		hFinal.addAll(h2);
		hm.put(n, hFinal);
		return hFinal;
	}

	public static int getTotalNumber(int A, int B, int k,
			HashMap<Integer, HashSet<Integer>> hm) {

		HashSet<Integer> h;
		int counter = 0;

		for (int i = A; i <= B; i++) {

			h = getFactor(i, hm);
			if (h.size() == k) 
				counter++;
		}
		return counter;

	}

	public static int getTotalNumAnother(int A, int B, int k) {
		int[] div = new int[B + 1];
		int count = 0;
		for (int i = 2; i <= B; i++) {
			if (div[i] == 0) {
				for (int j = 2 * i; j <= B; j += i) {
					int t = j;
					boolean flag = false;
					while (t % i == 0) {
						if (!flag) {
							div[j]++;
							flag = true;
						}
						t = t / i;
					}
				}
			}
			if (i >= A && ((div[i] == k) || (div[i] == 0 && k ==1)))
				count++;
		}
		return count;
	}

	public static void main(String [] args) {
		File fl = new File("/home/inspire/Downloads/homework.txt");
		try {
			Scanner sc = new Scanner(fl);
			//Scanner sc = new Scanner(System.in);
			HashMap<Integer, HashSet<Integer>> hm 
			= new HashMap<Integer, HashSet<Integer>>();
			int T = sc.nextInt();
			int i = 0;
			int [] ar = new int[T];
			while (i < T) {
				int A = sc.nextInt();
				int B = sc.nextInt();
				int k = sc.nextInt();
				//			ar[i] = getTotalNumber(A, B, k, hm);
				ar[i] = getTotalNumAnother(A, B, k);
				i++;
			}
			for ( i = 0; i < T; i++)
				System.out.println("Case #" + (i + 1) + ": " + ar[i]);
			//		System.out.println(val);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
