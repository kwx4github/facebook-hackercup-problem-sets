#include <iostream>
#include <algorithm>

using namespace std;

const int MAX = 10000000;
//bool isprime[MAX+1];
int primacity[MAX+1];
int counts[9][MAX+1];

typedef long long ll;

void init()
{
  /*
  fill(isprime, isprime+MAX+1, true);
  isprime[0] = isprime[1] = false;
  */

  for (ll i = 2; i <= MAX; i++) {
    if (primacity[i]) continue;
    primacity[i]++;
    for (ll j = 2*i; j <= MAX; j += i) {
      //      isprime[j] = false;
      primacity[j]++;
    }
  }

  for (int i = 2; i <= MAX; i++) {
    for (int j = 0; j <= 8; j++) {
      counts[j][i] = counts[j][i-1];
    }
    counts[primacity[i]][i] = counts[primacity[i]][i-1]+1;
  }
}

int main()
{
  init();

  int T;
  cin >> T;
  for (int c = 1; c <= T; c++) {
    cout << "Case #" << c << ": ";
    int A, B, K;
    cin >> A >> B >> K;
    if (K > 8) {
      cout << 0 << endl;
    } else {
      cout << counts[K][B] - counts[K][A-1] << endl;
    }
  }
  
  return 0;
}
