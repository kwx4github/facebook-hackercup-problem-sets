#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <queue>
#include <stack>
#include <cassert>
#include <sys/types.h>
#include <ctime>
#include <fstream>

using namespace std;

#if (defined(_WIN32) || defined(WIN32))
#define LLD "%I64d"
#else
#define LLD "%lld"
#endif

#define TASKNAME ""

typedef long long llong;
//#define endl '\n'

void solve();

int main(){
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
//    assert(freopen(TASKNAME".in", "r", stdin));
//    assert(freopen(TASKNAME".out", "w", stdout));
#endif
    int t = 1;
    while (t--) {
        solve();
    }
    return 0;
}

#ifndef ONLINE_JUDGE
const int N = 1e7 + 5;
#else
const int N = 1e7 + 5;
#endif

llong primecity[N];
int cnt[10][N << 2];
char primes[N];

vector<int> sieve() {
    memset(primes, 1, sizeof primes);
    primes[0] = primes[1] = 0;
    for (int i = 2; i < N; i++) {
        if (primes[i]) {
            for (llong j = 1LL * i * i; j < N; j += i) {
                primes[j] = 0;
            }
        }
    }
    vector<int> res;
    for (int i = 2; i < N; i++)
        if (primes[i]) {
            res.push_back(i);
        }
    return res;
}


void solve() {
    vector<int> primes = sieve();
    for (int i = 0; i < primes.size(); i++) {
        for (int x = primes[i]; x < N; x += primes[i])
            primecity[x]++;
    }
    for (int i = 0; i <= 8; i++) {
        for (int j = 2; j < N; j++) {
            if (primecity[j] == i)
                cnt[i][j] = 1;
            cnt[i][j] += cnt[i][j - 1];
        }
    }
    int t;
    scanf("%d", &t);
    for (int i = 1; i <= t; i++) {
        printf("Case #%d: ", i);
        int a, b, k;
        scanf("%d %d %d", &a, &b, &k);
        if (k > 8) {
            printf("0\n");
        }
        else {
            printf("%d\n", cnt[k][b] - cnt[k][a - 1]);
        }
    }
}








