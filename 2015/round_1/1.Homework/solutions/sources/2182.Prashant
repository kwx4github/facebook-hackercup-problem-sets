/*
Prashant Gupta(GHOST_YO)
IIITA
*/
/*
start of libraries to be included in the program
*/
#include <cmath>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cstdio>
#include <set>
#include <queue>
#include <map>
#include <string>
#include <cstring>
#include <ctime>
#include <stack>
/*
end of libraries to be included in the program
*/
using namespace std;
/*
start of MACRO definition
*/
#define For(i,a,b) for(i=a;i<=b;i++)
#define Ford(i,a,b) for(i=a;i>=b;i--)
#define Rep(i,c) for((type of c.begin()) i;i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sr(x) (int)x.size()
#define modul 1000000007
#define nmax 500100
#define BUG(x) {cout << #x << " = " << x << endl;}
#define PR(x,a,b) {For(i,a,b) cout << x[i] << ' '; cout << endl;}
#define fillchar(x,a,b,delta) For(_,a,b) x[_]=delta;
#define Bit(s,i) ((s&(1<<i))>0)
#define Two(x) (1<<x)
#define pii pair<int,int>
#define ll long long
#define e 1e-6
#define PI acos(-1)
#define piii pair < pii ,int >
#define make(a,b,c) mp(mp(a,b),c)
#define gc getchar
#define pc putchar
/*
end of MACRO definition
*/
int sieve[10000009];

void factors() {
    int i,j;

    memset(sieve, 0, sizeof(sieve));

    for(i = 2; i < 10000005; ++i) {
        if(sieve[i] == 0) {
            for(j = i; j < 10000005; j += i) {
                sieve[j]++;
            }
        }
    }
}

int main()
{
    int t,n,m,i,j,k,l,ans,count,temp,sum,flag,a,b;

    factors();

    /*For(i, 0, 200) {
        cout << sieve[i] << " ";
    }
    cout << endl;*/

    FILE *fi = fopen("inp.txt", "r");
    FILE *fo = fopen("out.txt", "w");

    fscanf(fi, "%d", &t);
    int in = 1;
    while(t--) {
        fscanf(fi, "%d%d%d", &a, &b, &k);
        ans = 0;
        For(i, a, b) {
            if(sieve[i] == k) {
                ans++;
                //cout << "hi\n";
            }
        }
        fprintf(fo, "Case #%d: %d\n", in, ans);
        in++;
    }
    return 0;
}
