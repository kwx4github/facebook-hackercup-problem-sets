import math

bound = 100000000
size = int(math.floor(math.sqrt(bound)))
sieve = [True]*(size + 1)

#Lets do sieve :)
for i in range(2, size - 1, 1):
	for j in range(i*2, size-1, i):
		sieve[j] = False

numCases = int(input())
#Loop backwards and print largest prime that is a multiple of bound
for case in range(1, numCases+1, 1):
	lower, upper, target = map(int, raw_input().split())
	
	count = 0
	for i in range(lower, upper + 1, 1):
		innerCount = 0
		if i < size and sieve[j]:
			innerCount = 1
			
		for j in range (2, int(math.floor(i/2)) + 1, 1):
			if innerCount > target:
				break
			#print sieve[j], str(j)
			if(j < size and sieve[j] and i % j == 0):
				innerCount = innerCount + 1
				#print str(j), "found in", str(i), "total of", innerCount
				
		if innerCount == target:
			count = count + 1
			#print i
			
	print ("Case #" + str(case) + ":"), count