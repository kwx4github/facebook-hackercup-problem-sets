import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Locale;
import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.FileInputStream;
import java.io.File;
import java.io.FilenameFilter;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 * @author Tifuera
 */
public class Main {
	public static void main(String[] args) {
		Locale.setDefault(Locale.US);
		InputStream inputStream;
		try {
			final String regex = "homework.*[.]txt";
			File directory = new File(".");
			File[] candidates = directory.listFiles(new FilenameFilter() {
				public boolean accept(File dir, String name) {
					return name.matches(regex);
				}
			});
			File toRun = null;
			for (File candidate : candidates) {
				if (toRun == null || candidate.lastModified() > toRun.lastModified())
					toRun = candidate;
			}
			inputStream = new FileInputStream(toRun);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("homework.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Homework solver = new Homework();
		solver.solve(1, in, out);
		out.close();
	}
}

class Homework {
    private static final int MAX = (int) 1e7;

    int[] values;

    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int T = in.nextInt();
        values = new int[MAX + 1];
        initValues();

//        isPrime = new boolean[MAX + 1];
//        initPrimes();

        for (int i = 0; i < T; i++) {
            int A = in.nextInt();
            int B = in.nextInt();
            int K = in.nextInt();
            int cnt = 0;
            for (int j = A; j <= B; j++) {
                if(values[j] == K){
                    cnt++;
                }
            }
            out.println("Case #" + (i + 1) + ": " + cnt);
        }
    }

    private void initValues() {
        for (int i = 2; i < values.length; i++) {
            int cur = i;
            for (int j = 2; j * j <= i; j++) {
                if (cur % j == 0) {
                    while (cur % j == 0) {
                        cur /= j;
                    }
                    break;
                }
            }

            if (cur == i) {
                values[i] = 1;
            } else {
                values[i] = values[cur] + 1;
            }
        }
    }

}

class InputReader {
    private BufferedReader reader;
    private String[] currentArray;
    private int curPointer;

    public InputReader(InputStream inputStream) {
        reader = new BufferedReader(new InputStreamReader(inputStream));
    }


    public int nextInt() {
        if ((currentArray == null) || (curPointer >= currentArray.length)) {
            try {
                currentArray = reader.readLine().split(" ");
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
            curPointer = 0;
        }
        return Integer.parseInt(currentArray[curPointer++]);
    }

}

