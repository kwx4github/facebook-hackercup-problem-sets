#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std;

const int N = int(1e7) + 1;

struct Solver{
    int lst[N], cap[N];
    Solver(){}
    void init(){
        for(int i = 2; i < N; ++i) lst[i] = i;
        for(int i = 2; i * i < N; ++i)
        if (lst[i] == i){
            for(int j = i * i; j < N; j += i)
                if (lst[j] == j) lst[j] = i;
        }
        for(int i = 2; i < N; ++i){
            cap[i] = 0;
            int fact = 0, cur = i;
            while (cur > 1){
                ++cap[i];
                fact = lst[cur];
                while (cur % fact == 0) cur /= fact;
            }
        }
    }
    int get(int a, int b, int k){
        int ans = 0;
        for(int i = a; i <= b; ++i) ans += (cap[i] == k);
        return ans;
    }
} hw;

int main(){
    freopen("homework.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    hw.init();
    int ntest;
    cin >> ntest;
    for(int test = 1; test <= ntest; ++test){
        int a, b, k;
        cin >> a >> b >> k;
        cout << "Case #" << test <<": " << hw.get(a, b, k) << endl;
    }
    return 0;
}
