#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
#include <set>

using namespace std;

#define MAXN 10000001

long long primacity[MAXN];
vector<long long> primes;


int main() {
  for (long long i = 2; i < MAXN; ++i) {
    bool isprime = true;
    primacity[1] = 0;
    for (long long j = 0; j < primes.size(); ++j) {
      if (primes[j] * primes[j] > i) break;
      if (i % primes[j] == 0) {
        int rest = i / primes[j];
        while (rest % primes[j] == 0) rest /= primes[j];
        primacity[i] = primes[j]*primes[j] == i ? 1 : 1 + primacity[rest];
        isprime = false;
        break;
      }
    }
    if (isprime) {
      primes.push_back(i);
      primacity[i] = 1;
    }
  }

  int t;
  cin >> t;
  for (int tt = 1; tt <= t; tt++) {
    long long res = 0;
    long long a, b, k;
    cin >> a >> b >> k;
    for (long long i = a; i <= b; i++) {
      if (primacity[i] == k) {
        res++;
      }
    }
    printf("Case #%d: %lld\n", tt, res);
  }



  return 0;
}
