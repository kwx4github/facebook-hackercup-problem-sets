/*
 * Homework.cpp
 *
 *  Created on: Jan 17, 2015
 *      Author: Osama Hatem
 */

#include <bits/stdtr1c++.h>
#include <ext/numeric>

using namespace std;

const long long INF = 10000000;
const int MAXK = 8;

vector<int> primes, ans[MAXK + 1];
int prim[INF + 1];
bool prime[10000];

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.in", "r", stdin);
	freopen("out.out", "w", stdout);
#endif

	for (int i = 2; i <= INF / i; i++) {
		if (!prime[i]) {
			for (int j = i * i; j <= INF / j; j += i)
				prime[j] = 1;
			primes.push_back(i);
		}
	}
	memset(prim, -1, sizeof prim);
	prim[1] = 0;
	for (int i = 2; i <= INF; i++) {
		int c = 0, temp = i;
		for (int j = 0;
				j < (int) primes.size() && primes[j] * primes[j] <= temp; j++) {
			if (temp % primes[j] == 0) {
				c++;
				while (temp % primes[j] == 0)
					temp /= primes[j];
			}
			if (prim[temp] != -1) {
				c += prim[temp];
				temp = 1;
				break;
			}
		}
		if (temp > 1)
			c++;
		ans[c].push_back(i);
		prim[i] = c;
	}
	int t, tc = 0;
	cin >> t;
	while (t--) {
		cout << "Case #" << ++tc << ": ";
		int a, b, k;
		cin >> a >> b >> k;
		if (k > MAXK)
			cout << "0" << endl;
		else {
			int x = upper_bound(ans[k].begin(), ans[k].end(), b)
					- ans[k].begin();
			int y = lower_bound(ans[k].begin(), ans[k].end(), a)
					- ans[k].begin();
			cout << x - y << endl;
		}
	}
	return 0;
}
