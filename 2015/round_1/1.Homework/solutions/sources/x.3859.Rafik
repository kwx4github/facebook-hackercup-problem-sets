/// RAFIK FARHAD
/// fb.com/rafikfarhad
/// SUST_CSE_13
#include <cstdio>
#include <iostream>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <algorithm>
#include <new>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#define MAX3(a, b, c) MAX(a , MAX(b,c))
#define MIN3(a, b, c) MIN(a , MIN(b,c))
#define sf scanf
#define ssf sscanf
#define pb push_back
#define PPP system("pause");
#define ppp system("pause");
#define ok cout << "OK" <<endl;
#define pf printf
#define CLR(a) memset(a, 0, sizeof(a))
#define PI 2*acos(0)
#define SIZE 10000000
using namespace std;

template <class T> T MAX(T a, T b)
{
    return a>b?a:b;
}
template <class T> T MIN(T a, T b)
{
    return a<b?a:b;
}
template <class T> void MyDebug(T x, T y)
{
    cout << "Debugging: " << x << ", " << y << endl;
}
template <class T> void MyDebug(T x, T y, T z)
{
    cout << "Debugging: " << x << ", " << y << ", " << z << endl;
}
int xx[] = {2, 2, 1, -1, -2, -2, -1, 1};
int yy[] = {1, -1, -2, -2, -1, 1, 2, 2};
int xx1[] = {-1, 0, 0, 1, 1, 1, -1, -1};
int yy1[] = {0, -1, 1, 0, -1, 1, 1, -1};
#define MaX 10000009
bool *prime;

void SEIEVE()
{
    prime = new bool[MaX];
    memset(prime, 0, sizeof prime);
    prime[0] = prime[1] = 1;
    long long int i, j, r=sqrt(MaX);
    for(i=2; i<r ; i++)
    {
        if(prime[i]==false)
            for(j=i*i; j<=MaX ; j+=i)
                prime[j] = true;
    }
}
int main()
{
    // time_t t1=clock();
#ifndef ONLINE_JUDGE
    freopen("hp.txt", "r", stdin);
    freopen("hp_o.txt", "w", stdout);
    //freopen("10106.inp","r",stdin);
#endif
    ///                                    MAIN
    SEIEVE();
    int *s;
    s = new int [MaX];
    memset(s, 0, sizeof s);
    long i, j, ki, a, b, k, cow, t;
    s[1] = s[2] = s[3] = 1;
    for(i=2; i<=MaX; i++)
    {
        //if(!prime[i])
        for(j=2; j<=MaX && i*j<MaX; j++)
            if(!prime[j] && !s[i*j])
        {
            s[i*j] = s[i]+1;
            if(i%j==0) s[i*j]--;
        }
        if(!s[i]) s[i]++;
    }

  /*  for(i=1; i<122; i++)
        cout << i << " >> " << s[i] << endl;
        cout << s[1000000];*/

    sf("%ld", &t);
    for(ki=0; ki<t; ki++)
    {
        sf("%ld %ld %ld", &a, &b, &k);
        for(cow=0, i=a; i<=b; i++)
        {
            if(s[i]==k) cow++;
        }
        pf("Case #%ld: %ld\n", ki+1, cow);
    }
    ///                                    ENDD
    // time_t t2=clock();
    // cout << " My time: " <<(t2-t1) << endl;;
    return 0;
}

