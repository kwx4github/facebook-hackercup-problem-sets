#include <bits/stdc++.h>

using namespace std;


vector<int> primes;
const int MX = 10000010;
bool is_prime[MX] ={ false};
void sieve()
{
    is_prime[1] = true;
    is_prime[0] = true;
    for(long long  i=2;i<MX;i++)
    {
        if(!is_prime[i])
        {

            primes.push_back(i);
            for(long long j = i * i; j<MX;j+=i)
            {
                is_prime[j] =true;
            }


        }
    }
}
int primacity[MX];

int factors(int n)
{
    if(primacity[n]!=-1) return primacity[n];
    if(n<=1) return 0;
    if(!is_prime[n] ) return 1;

     int sz = primes.size();
     int c = 0;
     int s  = sqrt(n);
     int y = n;
     for(int i=0;i<sz && primes[i]<=s;i++)
     {
         int p = primes[i];
         if(n>=p && n%p==0)
         {
             c++;

             while(n>=p && n%p ==0) n/=p;

             return 1 + factors(n);

         }
     }
     if(n!=1) c++;
     return c;
}

int main()
{
    sieve();
   // cout<<" done " << endl;
    memset(primacity, -1, sizeof(primacity));
    //cout << primes.size() << endl;
    primacity[0] = 0;
    for(int i=1;i<=10000000;i++)  primacity[i] = factors(i);
    //cout<<" done 2 " << endl;
    int t;
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    cin >> t;
    for(int k = 1;k<=t;k++)
    {
       int a, b , K;
       cin >> a >> b >> K;
       int c = 0;
        for(int i=a;i<=b;i++) if(primacity[i] == K) c++;
       cout<<"Case #"<<k<<": "<<c;
       if(k<t)
       cout<<endl;
    }
}
