#include<cstdio>
#include<bitset>
#include<vector>
using namespace std;
bitset<10000100> sieve;
vector<int> primes;
int arr[10000100];
void sieve_gen()
{
    long long int i,j;
    sieve.reset();
    sieve.flip();
    sieve.set(0,false);
    sieve.set(1,false);
    for(i=2;i<10000100;i++)
    {
        if(sieve.test(i)){
            primes.push_back(i);
            for(j=i*i;j<10000100;j+=i){
                sieve.set(j,false);
            }
        }
    }
}
int main()
{
    int a,b,t,i,j,k,res,counter;
    primes.clear();
    sieve_gen();
    scanf("%d",&t);
    for(counter=1;counter<=t;counter++){
        scanf("%d%d%d",&a,&b,&k);
        for(i=a;i<=b;i++)
            arr[i]=0;
        for(i=0;i<primes.size()&&primes[i]<=b;i++)
        {
            if(a%primes[i]==0)
                j=a;
            else
            {
                j=(a/primes[i]+1)*primes[i];
            }
            while(j<=b)
            {
                arr[j]++;
                j+=primes[i];
            }
        }
        res=0;
        for(i=a;i<=b;i++)
        {
            if(arr[i]==k)
                res++;
        }
        printf("Case #%d: %d\n",counter,res);
    }
    return 0;
}
