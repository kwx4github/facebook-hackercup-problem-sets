#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <vector>
#include <string>
#include <utility>
#include <cstdlib>
#include <climits>
#include <cstring>
#include <iostream>
#include <algorithm>

#define xx first
#define yy second
#define mp make_pair
#define pb push_back
#define Pair pair<int, int>
#define MAX 10000000
using namespace std;

vector <int> prime;
int p[MAX + 10] = {0};
int f[11][MAX + 10] = {0};
int a[MAX + 10] = {0};
void sieve() {
	
	p[0] = p[1] = 1;
	for (int i = 2; i <= sqrt(MAX); i++)
	    if (p[i] == 0)
	        for (int j = i*i; j <= MAX; j += i)
				p[j] = 1;
	for (int i = 2; i <= MAX; i++)
		if (p[i] == 0)
		    prime.pb(i);
}


int t, A, B, K;
int main() {
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	sieve();
	int sz = prime.size();
	for (int i = 0; i < sz; i++) {
		for (int j = prime[i]; j <= MAX; j += prime[i])
		    a[j]++;
	}
	for (int i = 2; i <= MAX; i++)
	    f[a[i]][i] = 1;
	    
 	for (int i = 1; i <= 10; i++)
	    for (int j = 2; j <= MAX; j++)
			f[i][j] += f[i][j-1];

	scanf("%d", &t);
	for (int i = 1; i <= t; i++) {
		scanf("%d%d%d", &A, &B, &K);
		if (K > 9) printf("Case #%d: 0\n");
		else printf("Case #%d: %d\n", i, f[K][B] - f[K][A  -1]);
	}
}
