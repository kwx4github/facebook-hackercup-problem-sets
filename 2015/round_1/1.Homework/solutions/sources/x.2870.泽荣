#include <iostream>
using namespace std;
int n = 10001;
const int N = 10000001;
int prime[10001];
int a[N];
int sum = 0;
void init()
{
	for (int i = 2; i < n; i++)
	{
		for (int j = i * i; j < n; j+=i)
			prime[j] = 1;
	}
	for (int i = 2; i < n; i++)
	{
		if (!prime[i]) prime[sum++] = i;
	}
}

int dfs(int k)
{
	if (k == 1) return 0;
	if (a[k]) return a[k];
	for (int j = 0; j < sum; j++)
	{
		int i = prime[j];
		if (k % i == 0)
		{
			int kk  = k / i;
			int u = dfs(kk);
			if (kk % i != 0)
				u ++;
			a[k] = u;
			return u;
		}
	}
	return 1;
}

void solve()
{
	for (int i = N-1; i > 1; i--)
	{
		dfs(i);
	}
	for (int i = 2; i < N; i++)
		cout << a[i] << endl;
}

int cal(int p, int q, int k)
{
	int ans = 0;
	for (int i = p; i <= q; i++)
	{
		if (a[i] == k) ans ++;
	}
	return ans;
}
void init2()
{
	freopen("a.txt","r",stdin);
	freopen("a.out","w",stdout);
	for (int i = 2; i < N; i++)
		cin >> a[i];
	a[1] = 0;
	freopen("a.in","r",stdin);
	int cases;
	cin >> cases;
	for (int i = 1; i <= cases; i++)
	{
		int p,q,k;
		cin >> p>>q>>k;
		cout << "Case #"<<i<<": "<<cal(p,q,k)<<endl;
	}
}
int main()
{
	init2();

	return 0;
}