let _ =
  let n2 = 10000000 in
  let prime = Array.make (n2 + 1) true in
  let p = Array.make (n2 + 1) 0 in
  let pk = ref 0 in
  let () =
    for i = 2 to n2 do
      if prime.(i) then (
	p.(!pk) <- i;
	incr pk;
	let j = ref (2 * i) in
          while !j <= n2 do
	    let jj = !j in
              prime.(jj) <- false;
              j := jj + i
          done
      )
    done;
  in
  let pk = !pk - 1 in
  let c = Array.make 10000000 0 in
  let sb = Scanf.Scanning.stdib in
  let cases = Scanf.bscanf sb "%d " (fun s -> s) in
    for ca = 1 to cases do
      let a = Scanf.bscanf sb "%d " (fun s -> s) in
      let b = Scanf.bscanf sb "%d " (fun s -> s) in
      let k = Scanf.bscanf sb "%d " (fun s -> s) in
	for i = 0 to b - a do
	  c.(i) <- 0
	done;
	for i = 0 to pk do
	  let p = p.(i) in
	  let l = ((a - 1) / p + 1) in
	  let h = b / p in
	    for j = l to h do
	      c.(j * p - a) <- c.(j * p - a) + 1;
	    done;
	done;
	let res = ref 0 in
	  for i = 0 to b - a do
	    if c.(i) = k
	    then incr res
	  done;
	  Printf.printf "Case #%d: %d\n" ca !res
    done
