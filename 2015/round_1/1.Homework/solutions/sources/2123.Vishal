#include<bits/stdc++.h>
using namespace std;
typedef  long long ll;
vector <int> primestack[10000007];
bool a[10000007];
int primes[1000000];
int counter[10][10000007];
int generateprimes(int upto=10000000)
{
	int primecount=0;
	int i,j;
	for(i=1;i<=upto;i++) a[i]=1;
	a[1]=0;
	for(i=2;i<=upto;i++)
	{
		primecount++;
		j=2*i;
		while(j<=upto) {a[j]=0;j+=i;}
		i++;
		while(i<=upto && a[i]==0) i++;
		i--;
	}
	return primecount;
}
void storeprimes(int upto=10000000)
{
	int size=0;
	for(int i=2;i<=upto;i++)
	{
		if(a[i])
		{
			primes[size]=i;
			size++;
		}
	}
	//for(int i=0;i<size;i++) cout<<primes[i]<<' ';cout<<endl;
}
int main()
{
	int i,j,x,totprimes;
	totprimes=generateprimes(10000000);
	storeprimes(totprimes);
	for(i=2;i<=10000000;i++)
	{
		if(a[i]){primestack[i].push_back(i);continue;}
		j=0;
		while((i%primes[j])!=0) j++;
		int temp=i;
		temp/=primes[j];
		for(x=0;x<primestack[temp].size();x++) primestack[i].push_back(primestack[temp][x]);
		bool found=0;
		for(x=0;x<primestack[temp].size();x++)
		{
			if(primestack[temp][x]==primes[j]) found=1;
		}
		if(found==0) primestack[i].push_back(primes[j]);
	}
	for(i=1;i<=8;i++) counter[i][1]=counter[i][0]=0;
	for(i=2;i<=10000000;i++)
	{
		for(j=1;j<=8;j++) counter[j][i]=counter[j][i-1];
		counter[primestack[i].size()][i]++;
	}
	//cout<<"Over\n";
	int t,a,b,k;
	cin>>t;
	for(i=1;i<=t;i++)
	{
		cout<<"Case #"<<i<<": ";
		cin>>a>>b>>k;
		if(k>8) cout<<0<<endl;
		else cout<<counter[k][b]-counter[k][a-1]<<endl;
	}
}
