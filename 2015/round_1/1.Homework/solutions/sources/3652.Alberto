#include <stdio.h>
#include <stdlib.h>
#include <math.h>
FILE *fin, *fout;
int primes[500];
int np;
int A, B, K;

int isPrime(int n){
    int i;
    for(i=2;i<sqrt(n)+1; i++){
        if(n%i==0){
            return 0;
        }
    }
    return 1;
}

void solve(){
    int i, j;
    fscanf(fin, "%d %d %d", &A, &B, &K);
    if (K>=9){
        fprintf(fout, "0\n");
        return;
    }
    int Np=0;
    int N;
    for(i = A; i<=B; i++){
        int thisnum=i;
        N = 0;
        for(j=0;j<np;j++){
            int found = 0;
            while(thisnum%primes[j]==0){
                if(!found){
                    found = 1;
                    N++;
                }
                thisnum /= primes[j];
            }
            if(N>K) break;
        }
        if(thisnum != 1) N++;
        if(N==K) Np++;
    }
    fprintf(fout, "%d\n", Np);
    printf("%d\n", Np);
}

int main(int argc, char *argv[]){
	char kk;
	int total, i;
    np = 0;
	fin=fopen(argv[1], "r");
	fout=fopen("out", "w");
    primes[np]=2;
    np++;
    for(i=3;i<3170;i++){
        if(isPrime(i)){
            primes[np]=i;
            np++;
        }
    }
	if (fin==NULL || fout == NULL)
	{
		printf("Fitxer out.\n");
	}
	else 
	{
		fscanf(fin, "%d", &total);
		fscanf(fin, "%c", &kk);
		for (i = 0; i<total; i++)
        {
            fprintf(fout, "Case #%d: ", i+1);
            printf( "Case #%d: ", i+1);
			solve();
		}
		fclose(fin);
		fclose(fout);
	}
	return 0;
}