#include <cstdlib>
#include <iostream>
#include <stdio.h>
#include <cstring>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <map>
#include <stack>
#include <cmath>
#include <set>
#include <ctype.h>
#include <bitset>

#define INF 0x3F3F3F3F
#define rep(i, a, b) for (int i = int(a); i < int(b); i++)
#define TRvii(c, it) for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define tr(it, s)  for ( typeof ( s.begin( ) ) it=s.begin( ); it!=s.end( ); it++ )
#define pb push_back
#define clr(a) memset((a),0,sizeof(a))
#define pi 3.1415926535897932384626433832795028841971
#define debug(x) cout << #x << " = " << x << endl;
#define debug2(x,y) cout << #x << " = " << x << " --- " << #y << " " << y << "\n";
#define all(S) (S).begin(), (S).end()
#define MAXV 1005
#define F first
#define S second
#define EPS 1e-9
#define mp make_pair

using namespace std;

typedef long long ll;
typedef pair < int, int >  ii;
typedef vector < int >  vi;
typedef vector < ii >  vii;

ll _crivo_size; 
bitset < 10000010 > bs;   
int p[10000015];

void crivo(ll upperbound) 
{ 
    _crivo_size = upperbound + 1; 
    
    bs.set(); 
    bs[0] = bs[1] = 0;     
    
    memset(p,0,sizeof(p));
    
    for (ll i = 2; i <= _crivo_size; i++) 
        if (bs[i]){ 
            p[i]++;
            for (ll j = i + i; j <= _crivo_size; j += i) {
                bs[j] = 0; 
                p[j]++;   
            }
        } 
}

int main(){
    
    crivo(10000005);

    int t, tt = 1;
    int a, b, k;
    scanf("%d",&t); 
    
    while(t--){
        
        int ans = 0;
        scanf("%d%d%d",&a,&b,&k);
        rep(i,a,b+1)
            if(p[i] == k)
                ans++;
        printf("Case #%d: %d\n",tt,ans);
        tt++;
    }
 
    return 0;
}
