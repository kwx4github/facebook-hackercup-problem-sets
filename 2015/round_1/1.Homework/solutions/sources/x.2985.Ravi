#include<iostream>
#include<map>
#include<stdio.h>
#include<vector>
#include<math.h>
using namespace std;

#define fori(a, b) for(i = a; i <= b; i++)
#define forj(a, b) for(j = a; j <= b; j++)
#define fork(a, b) for(k = a; k <= b; k++)
#define scani(n) scanf("%d", &n);

int k;
vector<int> primes;

bool kfactors(int n){
	// cout << primes.size() << primes[23] << " " << primes[24] << " "<< primes[25] << " "<< primes[26];
	int count = 0;
	// cout << endl << endl << "n is " << n << endl;
	for(int i=0; i<primes.size() && primes[i]<=n;i++){
		// cout << i << " does it come here  " << primes[i] << " " << n << endl;
		if(n%primes[i] == 0){
			// cout << "divided by " << primes[i] << endl;
			count++;
			while(n%primes[i] == 0){
				n/=primes[i];
				// cout << "n is " << n << endl;
			}
		}

		if(count > k)
			return false;
	}
	return (count==k);
}


int main()
{
	int test_cases, test_case, n, i, a, b, count, j, num;
	scani(test_cases)
	bool arr[100] = {false};
	int tot = 99;
	for(i=2;i<=tot;i++){
		if(arr[i] == 0){
			for(j=2;(num = i*j)<=tot;j++)
			{
				arr[num] = true;
			}
		}
	}
	fori(2,tot){
		if(!arr[i])
			primes.push_back(i);
	}

	// fori(0,6){cout << endl << primes[i];}

	for(test_case = 1; test_case <= test_cases; test_case++)
	{
		count = 0;
		scanf("%d %d %d", &a, &b, &k);
		fori(a,b){
			if(kfactors(i))
				count++;
		}
		cout << "Case #" << test_case << ": " << count << endl;
	}
	return 0;
}
