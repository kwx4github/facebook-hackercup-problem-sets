#include <iostream>
#include <cstring>

using namespace std;

#define MAXB ((int)(1e7+10))
#define MAXPRIM 10

static unsigned char sieve[MAXB];
uint32_t primacity[MAXB][MAXPRIM];

void gen() {
    memset(sieve, 0, sizeof(sieve));
    memset(primacity, 0, sizeof(primacity));
    for (int i = 2; i < MAXB; i++) {
        if (sieve[i] == 0) {
            for (int j = i; j < MAXB; j += i) {
                sieve[j]++;
            }
        }

        for (int j = 0; j < MAXPRIM; j++) {
            primacity[i][j] = primacity[i - 1][j];
        }

        primacity[i][sieve[i]]++;
    }
}

int getAnswer(int a, int b, int k) {
    if (k >= MAXPRIM) {
        return 0;
    } else {
        return primacity[b][k] - primacity[a - 1][k];
    }
}

int main() {
    gen();

    int t;
    cin >> t;
    for (int i = 1; i <= t; i++) {
        int  a, b, k;
        cin >> a >> b >> k;
        cout << "Case #" << i << ": " << getAnswer(a, b, k) << endl;
    }

    return 0;
}
