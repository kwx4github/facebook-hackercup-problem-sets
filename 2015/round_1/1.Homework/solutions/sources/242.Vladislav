#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
const int UP = 10000000 + 10;
int del[UP];
int pr[UP];
map<int , vi> nums;
int stupid(int w){
  int r = 0;
  for(int i=2;i*i<=w;++i)
   if(w % i == 0){
    ++r;
    while(w%i == 0) w /= i;
                 }
  if(w > 1) ++r;
  return r;
}
void doit(int CASE){
  int A , B , K;
  scanf("%d%d%d" , &A , &B , &K);
  vi& Q = nums[K];
  int cnt = lower_bound(all(Q) , B+1) -
            lower_bound(all(Q) , A);
  printf("Case #%d: %d\n" , CASE , cnt);
}
int main(){
  memset(del , -1 , sizeof del);
  for(int i=2;i<UP;++i)
   if(del[i] == -1)
    for(int t=i+i;t<UP;t += i)
     del[t] = i;
  for(int i=2;i<UP;++i){
   if(del[i] == -1) pr[i] = 1;
   else{
    int j = i;
    while(j % del[i] == 0) j /= del[i];
    pr[i] = 1 + pr[j];
       }
                       }
  for(int i=2;i<UP;++i)
   nums[pr[i]].pb(i);
  int Q;
  scanf("%d" , &Q);
  for(int i=1;i<=Q;++i)
   doit(i);
  return 0;
}
