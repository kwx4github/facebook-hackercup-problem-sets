#include <vector>
#include <valarray>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <cstring>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <complex>
using namespace std;
typedef long long ll;
#define FOR(i, a, b) for(int i = (a); i < (b); ++i)

#define MAX_N	10000000
bool isPrime[MAX_N+1];
int primacity[MAX_N+1];
void eratosthenes(int n)
{
	memset(isPrime,1,sizeof(isPrime));
    memset(primacity, 0, sizeof(primacity));
	isPrime[0] = isPrime[1] = false;
	int sqrtn = int(sqrt((double)n));
	for(int i = 2;i<=sqrtn;i++)
	{
		if (isPrime[i])
		{
            primacity[i]++;
			for(int j = i*2;j<=n;j+=i)
            {
				isPrime[j] = false;
                primacity[j]++;
            }
		}
	}
}

int main()
{
    FILE *fin = freopen("input.txt","r",stdin);
	FILE *fout = freopen("output.txt","w",stdout);
    int t;
    scanf("%d", &t);
    eratosthenes(MAX_N);
    FOR(xx, 0, t)
    {
        int a, b,t;
        scanf("%d %d %d", &a, &b, &t);
        int ret = 0;
        FOR(i,a,b+1)
        {
//            int cnt = 0;
//            for(int j = 1; j*j <= i;j++)
//            {
//                if (i % j == 0)
//                {
//                    if (isPrime[j])
//                        cnt++;
//                    if (j != i/j && isPrime[i/j])
//                        cnt++;
//                }
//            }
//            if (cnt == t)
//            {
////                printf("%d\n", i);
//                ret++;
//            }
            if (primacity[i] == t)
                ret++;


        }
        printf("Case #%d: %d\n", xx + 1, ret);
    }

    fclose(fout);
    fclose(fin);
    return 0;
}