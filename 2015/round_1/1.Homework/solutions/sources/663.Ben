#include<iostream>
using namespace std;
const int PRIME = 10000000;


int nPrime, prime[PRIME];

void makeTable() {
    static bool isPrime[PRIME];
    for (int i = 0; i < PRIME; ++i)
        isPrime[i] = true;
    
    for (int i = 2; i * i < PRIME; ++i)
        if (isPrime[i])
            for (int j = i * 2; j < PRIME; j += i)
                isPrime[j] = false;
    
    nPrime = 0;
    for (int i = 2; i < PRIME; ++i)
        if (isPrime[i])
            prime[nPrime++] = i;
}


int A, B, K;

void read() {
    cin >> A >> B >> K;
}


void work(int cases) {
    int ans = 0;
    
    for (int loop = A; loop <= B; ++loop) {
        int n = loop;
        int cnt = 0;
        for (int i = 0; prime[i] * prime[i] <= n; ++i) {
            if (n % prime[i] == 0) {
                while (n % prime[i] == 0)
                    n /= prime[i];
                ++cnt;
            }
        }
        if (n > 1)
            ++cnt;
        ans += cnt == K;
    }
    
    cout << "Case #" << cases << ": " << ans << endl;
}


int main() {
    makeTable();
    
    int cases;
    cin >> cases;
    for (int i = 0; i < cases; ++i) {
        read();
        work(i + 1);
    }
    return 0;
}
