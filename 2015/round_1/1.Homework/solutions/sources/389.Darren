//Clibrary:
#include<cassert>
#include<cctype>
#include<cerrno>
//#include<cfenv>
#include<cfloat>
//#include<cinttypes>
#include<ciso646>
#include<climits>
#include<clocale>
#include<cmath>
#include<csetjmp>
#include<csignal>
#include<cstdarg>
//#include<cstdbool>
#include<cstddef>
//#include<cstdint>
#include<cstdio>
#include<cstdlib>
#include<cstring>
//#include<ctgmath>
#include<ctime>
//#include<cuchar>
#include<cwchar>
#include<cwctype>
//Containers:
//#include<array>
#include<bitset>
#include<deque>
//#include<forward_list>
#include<list>
#include<map>
#include<queue>
#include<set>
#include<stack>
//#include<unordered_map>
//#include<unordered_set>
#include<vector>
//Input/Output:
#include<fstream>
#include<iomanip>
#include<ios>
#include<iosfwd>
#include<iostream>
#include<istream>
#include<ostream>
#include<sstream>
#include<streambuf>
//Other:
#include<algorithm>
//#include<chrono>
//#include<codecvt>
#include<complex>
#include<exception>
#include<functional>
//#include<initializer_list>
#include<iterator>
#include<limits>
#include<locale>
#include<memory>
#include<new>
#include<numeric>
//#include<random>
//#include<ratio>
//#include<regex>
#include<stdexcept>
#include<string>
//#include<system_error>
//#include<tuple>
//#include<typeindex>
#include<typeinfo>
//#include<type_traits>
#include<utility>
#include<valarray>
using namespace std;

typedef long long i64;
typedef unsigned long long u64;

typedef long long               ll;
typedef long double             ld;
typedef vector<int>             vi;
typedef vector<vi>              vvi;
typedef pair<int, int>          pii;
typedef vector<pii>             vii; // vector of integer pairs
typedef set<int>                si;
typedef map<string, int>        msi;

const double PI = acos(-1);

/*
 * __builtin_ffs  __builtin_clz  __builtin_ctz __builtin_popcount  __builtin_parity
 * sizeof CLOCKS_PER_SEC
 * (1 << (31 - __builtin_clz(100) ) == 64;
 * decltype // deprecated
 */

const int MAXN = 1024 * 1024 * 10;

bool isPrime[MAXN];
vector<int> primes;
void initPrime() {
  for (int i = 2; i < MAXN; i++) isPrime[i] = true;
  for (int n = 2; n < MAXN; n++) {
    if (isPrime[n]) primes.push_back(n);
    for (auto p: primes) {
      long long s = ((long long)p) * n;
      if (s >= MAXN) break;
      isPrime[s] = false;
      if (n % p == 0) break;
    }
  }
}
int primacity[MAXN];
int getPrimacity(int n) {
  int s = 0;
  for (auto p: primes) {
    if (n % p == 0) s++;
    while (n % p == 0) n /= p;
    if (n == 1) break;
    if (isPrime[n]) {
      s++;
      break;
    }
  }
  return s;
}
void initPrimacity() {
  for (int i = 2; i < MAXN; i++) {
    primacity[i] = getPrimacity(i);
  }
}

int TestNum;
int main(){
  ios_base::sync_with_stdio(false); 
  initPrime();
  initPrimacity();
  //for (auto p: primes) cout << p << ", ";
  int T; cin >> T;
  for (int CA = 1; CA <= T; CA++) {
    int A, B, K; cin >> A >> B >> K;
    int ans = 0;
    for (int i = A; i <= B; i++) if (primacity[i] == K) ans++;
    cout << "Case #" << CA << ": " << ans << endl;
  }
}

