#include <iostream>
#include <fstream>
#include <algorithm>
using namespace std;

 int k,num[10000002],ans[105],sum[100005],lim=10000005;

  struct vec
  { int x,np,ind; bool tip; } v[205];

bool comp(vec a,vec b)
{ return a.x<b.x; }

void Ciur()
{ int i,j;


   for(i=2;i<=lim;i++)
    if (!num[i])
     {
      for(j=i+i;j<=lim;j+=i)
       num[j]++;

       num[i]=1;
     }

}

void Solve()
{ int i,act=0;

   for(i=1;i<=10000000;i++)
   {  sum[num[i]]++;

     while(act+1<=k && v[act+1].x==i)
      { act++;
       if (v[act].np<=100000)
        {if (v[act].tip) ans[v[act].ind]+=sum[v[act].np];
         else ans[v[act].ind]-=sum[v[act].np];
        }
      }

   }
}
int main()
{ int i,t,x,y,nr;
   cin>>t;
   Ciur();

    for(i=1;i<=t;i++)
    { cin>>x>>y>>nr;
       k++; v[k].x=x-1; v[k].tip=0; v[k].np=nr; v[k].ind=i;
       k++; v[k].x=y; v[k].tip=1; v[k].np=nr; v[k].ind=i;
    }

     sort(v+1,v+k+1,comp);

    Solve();

    for(i=1;i<=t;i++)
     cout<<"Case #"<<i<<": "<<ans[i]<<"\n";

    return 0;
}
