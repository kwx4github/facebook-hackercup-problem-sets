#include<bits/stdc++.h>
using namespace std;
typedef map<int,int> mii;
typedef pair<int,int> ii;
const int MAXN = 10000005;
int val[MAXN],TC,A,B,C;
struct node{
	int s,e,m; //inclusive
	node *l, *r;
	mii v;
	node(int a, int b){
		s=a;e=b;m=(s+e)/2;
		if (!(s==e)){
			l = new node(s,m);
			r = new node(m+1,e);
			v = l->v;
			for (mii::iterator it=r->v.begin(); it!=r->v.end(); ++it){
				v[it->first]+=it->second;
			}
		} else {
			v[val[s]]=1;
		}
	}
	int qry(int x, int y, int k){ //both inclusive
		if (x<s || x>e || y<s || y>e) return 0;
		if (x==s && y==e) return v[k];
		return l->qry(x,min(y,m),k) + r->qry(max(m+1,x),y,k);
	}
}*root;
int main(){
	// precompute vals
	bitset<MAXN> sieve;
	sieve.set();
	for (int i=2; i<MAXN; i++){
		if (sieve[i]==1){
			for (int j=i*2; j<MAXN; j+=i){
				sieve[j]=0;
			}
		}
	}
	for (int i=2; i<MAXN; i++){
		if (sieve[i]==1){
			for (int j=i; j<MAXN; j+=i){
				val[j]++;
			}
		}
	}
	root = new node(2,MAXN);

	// queries
	scanf("%d",&TC);
	for (int tc=1; tc<=TC; tc++){
		scanf("%d%d%d",&A,&B,&C);
		printf("Case #%d: %d\n",tc,root->qry(A,B,C));
	}
}
