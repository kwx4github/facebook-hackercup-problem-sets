#include<iostream>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;
 
#define FOR(i,a,b) for(int i=a;i<b;++i)
#define REP(i,n) FOR(i,0,n)
#define RREP(i,n) for(int i=n-1;i>=0;--i)
#define EACH(it,v) for(typeof(v.begin()) it=v.begin();it!=v.end();++it)
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define CLEAR(x,with) memset(x,with,sizeof(x))
#define sz size()
#define len length()
#define mkp make_pair
typedef long long LL;
typedef vector <LL> VI;
typedef pair<int, int> PI;
typedef pair<int, PI> PII;

VI primes;
int a[10000001]={0};

void seive()
{
    a[0]=1;
    a[1]=1;
    int N=sqrt(10000000)+1;
    FOR(i,2,N+1)
    {
        if(a[i]==0)
        {
            primes.pb(i);

            LL N=1;
            while(N*i<=10000000)
            {
                a[N*i]++;
                N++;
            }
        }
     }
}


int main()
{

    int T;
    cin>>T;

    int n=1;
    seive();
    while(T--)
    {
        LL A,B,K;
        cin>>A>>B>>K;

        int ans=0;
        FOR(i,A,B+1)
        {
            /*int g=0;
            REP(j,primes.sz)
            {
                if(i>=primes[j] && i%primes[j]==0)
                {
                    g++;
                }   
            }

            if(g==0)
                g=1;
            */
            if(a[i]==K)
                ans++;    
        }

        cout<<"Case #"<<n<<": "<<ans<<endl;
        n++;
      }

    return 0;   
} 
