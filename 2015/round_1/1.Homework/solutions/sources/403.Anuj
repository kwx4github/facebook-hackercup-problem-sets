#include<iostream>
#include<cstdio>
#include<fstream>
#include<vector>
#include<algorithm>
#define M 100000
#define limit 10000100
#define pb push_back
using namespace std;
vector<int> prime;
void pre(void)
{
    prime.pb(2);
    int i,j;
    for(i=3;i<M;i++)
    {
        for(j=0;j<prime.size();j++)
        {
            if(i%prime[j]==0)
            {
                break;
            }
            else if(prime[j]*prime[j]>i)
            {
                j=prime.size()-1;
            }
        }
        if(j==prime.size()) prime.pb(i);
    }
}
int factor(int x)
{
    int i,j,k,cnt;
    cnt=0;
    for(i=0;i<prime.size()&&x!=1;i++)
    {
        if(x%prime[i]==0)
        {
            cnt++;
            while(x%prime[i]==0)
            {
                x=x/prime[i];
            }
        }
        if(prime[i]*prime[i]>x)
        {
            if(x!=1)
            {
                x=1;
                cnt++;
            }
        }
    }
    return cnt;
}
int main()
{
    freopen("homework.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int i,j,k,t,Case,a,b,l,r,ans;
    pre();
    vector<int> v[101];
    for(i=2;i<limit;i++)
    {
        k=factor(i);
        v[k].pb(i);
    }
    vector<int>::iterator lo,up;
    cin>>t;
    Case=0;
    while(t--)
    {
        Case++;
        cin>>a>>b;
        cin>>k;
        if(k>90)
        {
            ans=0;
        }
        else
        {
        lo=lower_bound(v[k].begin(),v[k].end(),a);
        up=upper_bound(v[k].begin(),v[k].end(),b);
        l=lo-v[k].begin();
        r=up-v[k].begin();
        ans=r-l;
        }
        cout<<"Case #"<<Case<<": "<<ans<<endl;
    }
}
