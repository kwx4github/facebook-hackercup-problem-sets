#include <fstream>
#include <algorithm>
#include <vector>
#define NMAX 10000001
using namespace std;

ifstream fin("homework.in");
ofstream fout("homework.out");

int e[NMAX];
vector<int>v[10];
int main()
{
	int crt = 2;
	int h = sqrt(NMAX);
	for (int i = 2; i < NMAX; i++)
	{
		crt = i;
		if (e[crt] == 0)
		{
			while (crt < NMAX)
			{
				e[crt]++;
				crt += i;
			}
			
		}
		v[e[i]].push_back(i);
	}


	int t, a, b, k;
	fin >>t;
	vector<int>::iterator low, up; 
	for (int i = 1; i<=t; i++)
	{
		fin >> a >> b >> k;
		up=upper_bound(v[k].begin(), v[k].end(), b);
		low = lower_bound(v[k].begin(), v[k].end(), a);
		int xx = distance(up,v[k].begin());
		//fout <<xx<<' ';  int 
		fout << "Case #"<<i<<": "<<(up - v[k].begin())- (low - v[k].begin())<<'\n';
	}
	
}