import java.awt.*;
import java.awt.geom.*;
import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;

public class Main {
	static InputStream inputStream;
	static OutputStream outputStream;
	private static BufferedReader br;
	private static StringTokenizer st;
	private static PrintWriter pw;

	public static void main(String[] args) throws IOException	{
		int n = 10000000;
		int[] kk = new int [n+1];
		for (int i = 2; i<=n; i++) {
			if (kk[i] == 0) {
				for (int j = 2; i*j<=n; j++)
					kk[i*j]++;
			}
		}
		for (int i = 2; i<=n; i++) {
			if (kk[i] == 0)
				kk[i]++;
		}
//		for (int i = 2; i<100; i++)
//			System.out.println(i + " " + kk[i]);
		inputStream = new FileInputStream("d:\\Téléchargements\\homework.txt");
		outputStream = new FileOutputStream("d:\\output.txt");
		br = new BufferedReader(new InputStreamReader(inputStream));
		pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));
		final int MAX_NUM_CASE = readInt();
		for(int qq = 1; qq <= MAX_NUM_CASE; qq++)	{
			pw.print("Case #" + qq + ": ");
			int a = readInt();
			int b = readInt();
			int k = readInt();
			int res = 0;
			for (int i = a; i<=b; i++)
				if (kk[i] == k)
					res++;
			pw.println(res);
		}
		pw.close();
	}

	/* NOTEBOOK CODE */

	private static long readLong() throws IOException	{
		return Long.parseLong(nextToken());
	}

	private static double readDouble() throws IOException	{
		return Double.parseDouble(nextToken());
	}

	private static int readInt() throws IOException	{
		return Integer.parseInt(nextToken());
	}

	private static String nextToken() throws IOException	{
		while(st == null || !st.hasMoreTokens())	{
			if(!br.ready())	{
				pw.close();
				System.exit(0);
			}
			st = new StringTokenizer(br.readLine().trim());
		}
		return st.nextToken();
	}
}