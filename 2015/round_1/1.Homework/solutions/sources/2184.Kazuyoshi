#import<cstdio>
#include <iostream>
using namespace std;

const int MAX_N = 10000000;

int t;
int prime[MAX_N];
bool is_prime[MAX_N + 1];
int primacity[MAX_N + 1];

int A, B, K;

// number of primes below N
int sieve(int n){
  int p = 0;
  for (int i=0; i<=n; i++) is_prime[i]=true;
  for (int i=0; i<=n; i++) primacity[i]=0;
  is_prime[0] = is_prime[1] = false;
  for (int i=2; i<=n; i++){
    if (is_prime[i]){
      primacity[i]++;
      prime[p++] = i;
      for (int j=2*i; j<=n; j+=i) {
	is_prime[j] = false;
	primacity[j]++;
	}
    }
  }
  return p;
}

void read_t();
void read(int t);
void solve(int t);

int main(){
  sieve(MAX_N);
  read_t();
  for(int i=0; i < t; i++){
    read(i);
    solve(i);
  }
  return 0;
}

void read_t(){
  cin >> t;
  //fprintf(stderr, "t=%d\n", t);
}

void read(int t){

  cin >> A >> B >> K;
  //fprintf(stderr, "A=%d, B=%d, K=%d\n", A, B, K);
  
}

void solve(int t){
  int count=0;
  for (int i=A; i<=B; i++){
    if(primacity[i] == K){
      //fprintf(stderr, "%d ",i);
      count++;
    }
  }
  //fprintf(stderr, "\n");
  printf("Case #%d: %d\n", t+1, count);
}
  
