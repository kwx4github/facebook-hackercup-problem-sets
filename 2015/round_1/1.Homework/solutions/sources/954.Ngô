#if 1
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <vector>
#include <utility>
#include <queue>
#include <stack>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <string>
#include <map>
#include <set>
#include <time.h>

#define LL long long
#define LD long double

#define REP(i,n) for (int i = 0; i < (n); i++)
#define REP2(i,n) for (int i = 0; i <= int(n); i++)
#define FOR(i,a,b) for (int i = int(a); i <= int(b); i++)
#define FORB(i,a,b) for (int i = int(a); i >= int(b); i--)

#define mp(u,v) make_pair(u, v)
#define pb push_back

using namespace std;

typedef pair<int, int> pii;
typedef pair<string, string> pss;
typedef vector<int> vi;
typedef vector<vi> vvi;

#define MAXN 10000000
#define MAXT 3600
#define oo 1000000001
#define MODULE 1000000007

#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;

int a, b, kk, res;
int cnt[MAXN + 2];
bool dd[MAXN + 2];
vi p;

void make(){
    freopen("in.txt", "wt", stdout);
    int N = 200000, M = 150000, Q = 300000;
    cout << N << endl;
    for (int i = 0; i < N; i++)
        cout << 1000000 - i << " ";
    exit(0);
}

void init(){
    memset(cnt, 0, sizeof(cnt));
    memset(dd, true, sizeof(dd));
    FOR(i, 2, MAXN){
        if (dd[i]){
            cnt[i] = 1;
            int j = i + i;
            while (j <= MAXN){
                dd[j] = false;
                cnt[j]++;
                j += i;
            }
        }
    }
}

int calc(){
    int ret = 0;
    FOR(i, a, b){
        if (cnt[i] == kk) ret++;
    }
    return ret;
}


int main(){
    //make();
    freopen("in.txt", "rt", stdin);
    //freopen("in.txt", "rt", stdin);
    freopen("out", "wt", stdout);
    //START
    init();
    int test;
    cin >> test;
    REP(t, test){
        cin >> a >> b >> kk;
        res = calc();
        cout << "Case #" << t + 1 << ": " << res << endl;
    }
    //END
    return 0;
}

#endif