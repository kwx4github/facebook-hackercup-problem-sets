#include <iostream>
#include <vector>
using namespace std;
typedef vector<int> VI;

int main() {
  const int maxn = 1e7+1;
  vector<int> prime(maxn, 1);
  for (int i = 2; i < maxn; ++i) {
    if (prime[i] == 1) {
      prime[i] = i;
      for (int j = i+i; j < maxn; j += i)
        prime[j] = i;
    }
  }

  VI nprimes(maxn, 0);
  for (int i = 2; i < maxn; ++i) {
    if (prime[i] == i) {
      nprimes[i] = 1;
    }
    else {
      int aux = i;
      int d = prime[aux];
      while (aux > 1 and (aux%d) == 0) aux /= d;
      nprimes[i] = 1+nprimes[aux];
    }
  }

  int T, cas = 0;
  cin >> T;
  while (T--) {
    int A, B, K;
    cin >> A >> B >> K;
    
    int ans = 0;

    while (A <= B) {
      ans += nprimes[A] == K;
      ++A;
    }
    cout << "Case #" << ++cas << ": " << ans << endl;
  }
}
