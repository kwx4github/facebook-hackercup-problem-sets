//============================================================================
// Name        : Practice.cpp
// Author      : Code 08
// Version     :
// Copyri   :
// Description :
//============================================================================

#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <math.h>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <iostream>

using namespace std;

#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define sz(v) ((ll)v.size())
#define clr(v, d) memset(v, d, sizeof(v))

typedef stringstream ss;
typedef long long ll;
typedef pair<ll, ll> ii;
typedef vector<vector<ii> > vii;
typedef vector<string> vs;
typedef vector<ll> vi;
typedef vector<double> vd;
typedef long double ld;
typedef vector<vector<ll> > matrix;

int dx[] = { 1, -1, 0, 0 };
int dy[] = { 0, 0, 1, -1 };

const ll oo = (ll) 1e9 + 1;
const double eps = 1e-9;
const ll mod = 1000000007;

//freopen("in.in","r",stdin);
//freopen("out.out","w",stdout);

//vi primes;
//int v[10000001];
//
//void foo() {
//
////	memset(v, 0, sizeof(v));
//	v[0] = v[1] = 1;
//	long long i, j;
//
//	for (i = 2; i * i < 10000001; i++) {
//		if (!v[i]) {
//			for (j = i * i; j < 10000001; j += i) {
//				v[j] = 1;
//			}
//		}
//	}
//
//
//	for (i = 2; i < 10000001; i++) {
//		if (!v[i]) {
//			primes.push_back(i);
//		}
//	}
//}
//
//ll res=0;
//ll a, b, k;
//ll range ;
//
//void solve(int idx, ll num , ll last){
//	if(last > k){
//		return ;
//	}
//
//	if(last==k){
//		res+=round((double)range/(double)num);
//		return;
//	}
//
//	for(int i=idx;primes[i]<b;i++){
//		num*=primes[i];
//		solve(idx+1,num,last+1);
//		num/=primes[i];
//	}
//
//}

int main() {
	freopen("in.in", "r", stdin);
	freopen("out.out", "w", stdout);
//	foo();
	int test;
	cin >> test;
	int tc = 0;
	vi res;
	res.resize(10000001, 0);
	while (test--) {
		tc++;
		ll a, b, k;
		cin >> a >> b >> k;
//		range = b-a+1;
//		solve(0,1,0);

		for (ll i = 2; i <= b; i += 2) {
			res[i] = 1;
		}

		for (ll i = 3; i <= b; i += 2) {
			if (res[i] == 0) {
				for (ll j = i; j <= b; j += i) {
					res[j] += 1;
				}
			}
		}
		ll cnt = 0;
		for (ll i = a; i <= b; ++i) {
			if (res[i] == k) {
				++cnt;
			}
		}
		cout << "Case #" << tc << ": " << cnt << endl;
	}
	return 0;

}

