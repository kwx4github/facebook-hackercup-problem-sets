#include <iostream>
#include <vector>
#include <list>

using namespace std;

#define REP(i, n) for(int i=0; i < n;i++)

#define LEMAXS 10000001

bool countPrimes(int num, int primacity, const vector<int> & primes) {
    int cnt = 0;

    REP(j, primes.size()) {
       if(num % primes[j] == 0) cnt++;
       if(cnt > primacity) return false;
    }

    return cnt == primacity;
}

void process(int caseNum, int * primacities) {
    int a,b,k;
    cin >> a >> b >> k;

    int cnt = 0;

    if(k <= 9) {
        for(int i = a; i <= b; i++) {
            if(primacities[i] == k) cnt++;
        }
    }

    cout << "Case #"<<caseNum<<": " << cnt << endl;
}

int main() {

    int * primacities = new int[LEMAXS];

    REP(i, LEMAXS) {
        primacities[i] = 0;
    }

    for(int i=2; i < LEMAXS;i++) {
        if(primacities[i] == 0) {
            for(int j=i; j < LEMAXS; j+=i) {
                primacities[j]++;
            }
        }
        // cout << i << " " << primacities[i] << endl;
    }

    int n;
    cin >> n;
    REP(i,n) process(i+1, primacities);
    return 0;
}