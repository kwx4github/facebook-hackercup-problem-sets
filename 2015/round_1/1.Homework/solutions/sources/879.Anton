#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <utility>
#include <set>
#include <map>
#include <numeric>
#include <cstdio>
#include <cstring>
#include <iomanip>

using namespace std;

#define pb push_back
#define f first
#define s second
typedef long long ll;
typedef pair<int, int> pint;
typedef pair<long long, long long> plint;
typedef vector<int> vint;
typedef vector<vector<int>> vvint;
typedef vector<long long> vlint;
typedef vector<vector<long long>> vvlint;
typedef vector<pair<int, int>> vpint;
typedef vector<pair<long long, long long>> vplint;

ifstream in("homework.txt");
ofstream out("homework.out");

const int MAX = 1000 * 1000 * 10;


void solve(const vector<int> &primacity)
{
    int a, b, k;
    in >> a >> b >> k;
    out << count(primacity.begin() + a, primacity.begin() + b + 1, k);
}

int main()
{
    vector<bool> is_prime(MAX + 1, true);
    for (long long i = 2; i * i <= MAX; ++i) {
        if (is_prime[i]) {
            for (int j = i * i; j <= MAX; j += i) {
                is_prime[j] = false;
            }
        }
    }
    is_prime[1] = false;

    vector<int> primacity(MAX + 1, 0);
    for (int x = 2; x <= MAX; ++x) {
        for (int i = 1; i * i <= x; ++i) {
            if (x % i == 0) {
                primacity[x] += is_prime[i];
                primacity[x] += is_prime[x / i] && x / i != i;
            }
        }
    }
    for (int i = 1; i <= 100; ++i) {
        cout << i << ": " << primacity[i] << endl;
    }

    int cases;
    in >> cases;
    for (int z = 0; z < cases; ++z) {
        out << "Case #" << z + 1 << ": ";
        solve(primacity);
        out << endl;
    }

    return 0;
}
