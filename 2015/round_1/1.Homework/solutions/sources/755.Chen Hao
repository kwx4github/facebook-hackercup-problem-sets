#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;
typedef long long ll;
typedef complex<double> cd;

#define rep(i, n) for(int i = 0; i < n; ++i)
#define repe(i, a, b) for(int i = a; i <= b; ++i)
#define ri(a) scanf("%d", &a)
#define rii(a, b) scanf("%d%d", &a, &b)
#define riii(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define ria(a, n) rep(_, n) ri(a[_])
#define pia(a, n) rep(_, n) printf("%d ", a[_])
#define pi(x) printf("%d\n", x)
#define PB push_back
#define SZ size()
#define fst first
#define snd second
#define Ttimes int T; scanf("%d", &T); while(T--)

const int maxn = 10000000 + 7;
int p[maxn] = {};
vector<int> cnt[10];

int main() {

	int mx = 0;
	for(int i = 2; i < maxn; i++) if(!p[i]) {
		for(int j = i; j < maxn; j += i) {
			p[j]++;
			mx = max(mx, p[j]);
		}
	}
	//pi(mx);
	rep(i, maxn) cnt[p[i]].PB(i);


	int T; scanf("%d", &T); for(int ks = 1; ks <= T; ++ks) {
		int a, b, c;
		riii(a, b, c);
		printf("Case #%d: ", ks);
		if(c >= 10) {
			pi(0);
			continue;
		}

		vector<int> &v = cnt[c];
		pi((int)(upper_bound(v.begin(), v.end(), b) - lower_bound(v.begin(), v.end(), a)));
	}
	return 0;
}
