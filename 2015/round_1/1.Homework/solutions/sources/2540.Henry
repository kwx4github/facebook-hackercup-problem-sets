#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
using namespace std;

bool test[10000010];
long p[670000];
long p1=1; // next prime
long value[10000001];
long temp[10000001];
long temp2[9];

long gcd(long a, long b){
	if (b==0)
		return a;
	return gcd(b,a%b);

}
void build2(){
	test[0]=1;	test[1]=1; 	test[2]=1; 	p[0]=2;	
	long x=p[0];
	long k=(long)floor(sqrt((double)10000000));
	while (x<=k){
		x=p[p1-1];
		for (long i=0; i<=10000000/x; i++) test[i*x]=1;
		int number=3;
		while (true) {
			if (test[number]==0) {
				test[number]=1;
				p[p1]=number; p1++;
				break;
			}
			else{
				number+=2;
			}
		}
	}
	for (long i=k; i<=10000000; i++){
		if (test[i]==0) {
			test[i]=1;
			p[p1]=i; p1++;
		}
	}
}

long valuef(long x){
	if (x==1)
		return 0;
	long number=0;
	while (true){
		if (x%p[number]==0){// use this
			x=x/p[number];
			while (x%p[number]==0){
				x=x/p[number];
			}
			return value[x]+1;
		}
		number++;
	}
}

void build(){
	for (long i=0; i<p1; i++) value[p[i]]=1; // all primes are 1
	for (long i=0; i<p1; i++){
		for (long j=2; j<=10000000/p[i]; j++){
			long newj=j;
			while (newj%p[i]==0) newj/=p[i];

			value[j*p[i]]=value[newj]+1;
		}
	}

	for (long i=2; i<=10000000; i++){
		if (value[i]==0){
			cout << i << endl;
		}
	}
}

int main() {
	FILE *fout, *fin;
	fout =fopen("output.txt", "w");
	fin=fopen("input.txt","r");
	build2();
	build(); 
	int T; 	fscanf(fin,"%d", &T);for (int t=0; t<T; t++){
		long A, B, K; fscanf(fin,"%ld%ld%ld", &A, &B, &K);
		if (K>=9) {fprintf(fout, "%d\n",0);} else{
			long sum=0;
			for (int i=A; i<=B; i++){
				if (value[i]==K) sum++;
			}
			fprintf(fout, "Case #%d: %ld\n",t+1, sum);
		}
	}
	fclose(fout);
	fclose(fin);
	return 0;
}