#include <iostream>
#include <cstring>
#include <set>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <bitset>
#define _USE_MATH_DEFINES
#include <math.h>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <assert.h>
using namespace std;

void smain();
int main(){
    ios_base::sync_with_stdio(0);
#ifdef DEBUG
    freopen("input.txt","rt",stdin);
    freopen("output.txt","wt",stdout);
    const clock_t start = clock();
#endif
    smain();
#ifdef DEBUG
    cerr << "\nTotal Execution Time: " << float( clock () - start ) /  CLOCKS_PER_SEC << endl;
#endif
    return 0;
}

#define forn(i,n) for (int i=0;i<n;i++)
#define rforn(i,n) for (int i=n-1;i>=0;i--)
#define fori(i,a) for(auto i=a.begin(); i!=a.end(); ++i)
#define rfori(i,a) for(auto i=a.rbegin(); i!=a.rend(); ++i)
#define int long long
#define LL long long
#define mp(a,b) make_pair(a,b)
#define INF ((1LL<<62)-1) //2305843009213693951LL
#define MOD 1000000007
#define EPS 0.00000000001
#define N 10000001
/* --------- END TEMPLATE CODE --------- */

int lp[N], pr[N], pc = 0;
int a[N];
int cnt[10][N];

void smain() {
    for(int i=2; i < N; ++i) {
        if(lp[i] == 0) lp[i] = i, pr[pc++] = i, a[i] = 1;
        else {
            int x = i;
            for(int j=i; x > 1 && x != lp[x]; x = j) {
                for(j=x; j % lp[x] == 0; j /= lp[x]);
                a[i] += 1;
            }
            if(x > 1) a[i] += 1;
        }
        forn(j, pc) {
            int it = pr[j];
            if(it > lp[i] || i * it >= N) break;
            lp[i * it] = it;
        }
    }
    
    for(int j=1; j < 9; ++j) forn(i, N) cnt[j][i] = (i ? cnt[j][i-1] : 0) + (a[i] == j ? 1 : 0);
    
    int T;
    cin >> T;
    for(int t = 1; t <= T; ++t) {
        int l, r, k;
        cin >> l >> r >> k;
        int res = k > 8 ? 0 : (cnt[k][r] - cnt[k][l-1]);
        cout << "Case #" << t << ": " << res << '\n';
        cerr << "Case #" << t << ": " << res << '\n';
    }
}



