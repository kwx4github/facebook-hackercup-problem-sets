#include<bits/stdc++.h>

using namespace std;

typedef long long int LL;
typedef unsigned long long int ULL;

typedef pair<int, int> PII;
typedef vector<int> VI;

typedef pair<long long int, long long int> PLL;
typedef vector<long long int> VL;


#define sd(x) scanf("%d", &x)
#define sdd(y) scanf("%lld", &y)

#define F first
#define S second
#define MP make_pair
#define PB push_back
#define MOD 1000000007

#define N 1123
#define M 52


#define MAX_NUM 10000001 // 200

// array will be initialized to 0 being global
int p[MAX_NUM];
int nf[15][MAX_NUM];

void gen_sieve_primes()
{
    p[2]=1;

    for(int i=4;i<MAX_NUM;i+=2)
        p[i]++;

    for (int ps=3; ps<MAX_NUM; ps+=2) // for all elements in array
    {
        if(p[ps] == 0)
        { // it is not multiple of any other prime
            p[ps] = 1; // mark it as prime

            // mark all multiples of prime selected above as non primes
            for(int j = ps<<1;j<MAX_NUM;j+=ps)
                p[j]++;
        }
    }

    for(int i=1;i<MAX_NUM;i++)
    {
        for(int j=0;j<11;j++)
        {

            if(p[i]==j)
            {
                nf[j][i]=nf[j][i-1]+1;
            }
            else
            {
                nf[j][i]=nf[j][i-1];
            }

        }
    }
}

int main()
{
    freopen("homework.txt","r",stdin);
   freopen("at.out","w",stdout);
    gen_sieve_primes();

    int test;
    LL aaa,bbb, nnn, count=0;
    sd(test);

    for(int i=1;i<=test;i++)
    {
        count =0;
        sdd(aaa);
        sdd(bbb);
        sdd(nnn);

        printf("Case #%d: ",i);
        if(nnn>15)
            cout<<0<<endl;
        else
        printf("%d\n",nf[nnn][bbb]-nf[nnn][aaa-1]);
    }
}

