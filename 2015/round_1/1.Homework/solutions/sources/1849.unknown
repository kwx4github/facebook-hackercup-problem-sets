
import java.io.*;
import java.util.*;

/**
 * Created by shamir0xe on 1/5/2015 AD.
 */

public class Solution {


    public static void main(String[] args) {
        MyInput in;
        try {
            in = new MyInput(new FileInputStream(new File("input.txt")));
        }
        catch (IOException e) {
            throw new UnknownError();
        }
        PrintWriter out;
        try {
            out = new PrintWriter(new FileOutputStream(new File("output.txt")));
        }
        catch (IOException e) {
            throw new UnknownError();
        }

//        MyInput in = new MyInput(System.in);
//        PrintWriter out = new PrintWriter(System.out);

        int maxn = 10000000 + 10;
        int[] primaCity = primacity(maxn);
        int[][] sumArray = new int[maxn][22];
        for (int i = 1; i < maxn; i++) {
            for (int j = 0; j < 22; j++) {
                sumArray[i][j] = sumArray[i - 1][j];
            }
            sumArray[i][primaCity[i]]++;
        }

        int test = in.nextInt();
        for (int testCase = 0; testCase < test; testCase++) {
            int A = in.nextInt();
            int B = in.nextInt();
            int K = in.nextInt();

            int ret;
            if (K >= 22) {
                ret = 0;
            }
            else {
                ret = sumArray[B][K] - sumArray[A - 1][K];
            }
            out.println("Case #" + (testCase + 1) + ": " + ret);
            out.flush();
        }

        out.flush();
    }

    public static int[] primacity(int n){
        int[] pr = new int[n + 1];
        Arrays.fill(pr, 1);
        pr[0] = pr[1] = 0;
        for(int i = 2; i <= n; i++) {
            if(pr[i] == 1) {
                for(int j = i; j <= n; j += i)
                    pr[j]++;
            }
            pr[i]--;
        }
        return pr;
    }


}

class MyInput {
    private BufferedReader br;
    private StringTokenizer st;

    MyInput (InputStream inputStream) {
        br = new BufferedReader(new InputStreamReader(inputStream));
        st = null;
    }

    public String next() {
        if (st == null || !st.hasMoreElements()) {
            try {
                String line = br.readLine();
                while (line == null || line.equals("")) {
                    throw new UnknownError();
                }
                st = new StringTokenizer(line);
            } catch (IOException e) {
                throw new UnknownError();
            }
        }
        return st.nextToken();
    }

    public String nextLine() {
        try {
            return br.readLine();
        }
        catch (IOException e) {
            throw new UnknownError();
        }
    }

    public void readEmptyLine() {
        try {
            br.readLine();
        }
        catch (IOException e) {
            throw new UnknownError();
        }
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }

}

