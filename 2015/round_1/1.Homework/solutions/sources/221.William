#include <cstdio>
#include <cstring>
#include <vector>
#include <bitset>
using namespace std;
int t,a,b,k;
int ans[10000005],sum[10000005][10];
bitset <10000005> isprime;
vector <int> primes;
typedef long long ll;
void dfs(ll n, int p, int m){
	//printf("%lld %d %d %d\n",n,p,primes[p],m);
	if(p>=primes.size()) return;
	while(n*ll(primes[p])<=10000000ll){
		n*=ll(primes[p]);
		ans[n]=m+1;
		for(int x=p+1;n*ll(primes[x])<=10000000ll;x++) dfs(n,x,m+1);
	}
}
int main(){
	isprime.set();
	primes.push_back(2);
	for(int x=3;x<10000000;x+=2){
		if(isprime[x]){
			primes.push_back(x);
			for(int y=x;y<=10000000/x;y+=2) isprime[x*y]=0;
		}
	}
	for(int x=0;x<primes.size()-1;x++) dfs(1ll,x,0);
	ans[primes[primes.size()-1]]=1;
	memset(sum,0,sizeof(sum));
	for(int x=2;x<=10000000;x++) for(int y=1;y<=8;y++) sum[x][y]=sum[x-1][y]+(ans[x]==y);
	scanf("%d",&t);
	for(int c=1;c<=t;c++){
		scanf("%d %d %d",&a,&b,&k);
		if(k>8) printf("Case #%d: 0\n",c);
		else printf("Case #%d: %d\n",c,sum[b][k]-sum[a-1][k]);
	}
	return 0;
}
