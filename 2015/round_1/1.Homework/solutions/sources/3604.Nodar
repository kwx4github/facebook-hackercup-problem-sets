#include <iostream>
using namespace std;
bool prime[10000001];int factors[9][10000001];
int main()
{   factors[0][0]=factors[1][0]=factors[2][0]=factors[3][0]=factors[4][0]=factors[5][0]=factors[6][0]=factors[7][0]=0;
    for(int i=2;i<=10000000;i+=2)
    {prime[i]=false;prime[i-1]=true;
    factors[0][i]=1;factors[0][i-1]=0;
    factors[1][i]=factors[1][i-1]=0;
    factors[2][i]=factors[2][i-1]=0;
    factors[3][i]=factors[3][i-1]=0;
    factors[4][i]=factors[4][i-1]=0;
    factors[5][i]=factors[5][i-1]=0;
    factors[6][i]=factors[6][i-1]=0;
    factors[7][i]=factors[7][i-1]=0;
    factors[8][i]=factors[8][i-1]=0;
    }
    for(int j=3;j<=3200;j+=2)
        for(int k=j;k*j<=10000000;k+=2)
            prime[k*j]=false;
    prime[2]=true;
    for(int r=3;r<=10000000;r++)
        if(prime[r]==true)
            for(int m=r;m<=10000000;m+=r)factors[0][m]++;
    
    for(int x=1;x<=10000000;x++)
    {
        switch(factors[0][x])
        {
            case 1:factors[1][x]=factors[1][x-1]+1;
            factors[2][x]=factors[2][x-1];factors[3][x]=factors[3][x-1];
            factors[4][x]=factors[4][x-1];factors[5][x]=factors[5][x-1];
            factors[6][x]=factors[6][x-1];factors[7][x]=factors[7][x-1];
            factors[8][x]=factors[8][x-1];break;
            case 2:factors[2][x]=factors[2][x-1]+1;
            factors[1][x]=factors[1][x-1];factors[3][x]=factors[3][x-1];
            factors[4][x]=factors[4][x-1];factors[5][x]=factors[5][x-1];
            factors[6][x]=factors[6][x-1];factors[7][x]=factors[7][x-1];
            factors[8][x]=factors[8][x-1];break;
            case 3:factors[3][x]=factors[3][x-1]+1;
            factors[2][x]=factors[2][x-1];factors[1][x]=factors[1][x-1];
            factors[4][x]=factors[4][x-1];factors[5][x]=factors[5][x-1];
            factors[6][x]=factors[6][x-1];factors[7][x]=factors[7][x-1];
            factors[8][x]=factors[8][x-1];break;
            case 4:factors[4][x]=factors[4][x-1]+1;
            factors[2][x]=factors[2][x-1];factors[3][x]=factors[3][x-1];
            factors[1][x]=factors[1][x-1];factors[5][x]=factors[5][x-1];
            factors[6][x]=factors[6][x-1];factors[7][x]=factors[7][x-1];
            factors[8][x]=factors[8][x-1];break;
            case 5:factors[5][x]=factors[5][x-1]+1;
            factors[2][x]=factors[2][x-1];factors[3][x]=factors[3][x-1];
            factors[4][x]=factors[4][x-1];factors[1][x]=factors[1][x-1];
            factors[6][x]=factors[6][x-1];factors[7][x]=factors[7][x-1];
            factors[8][x]=factors[8][x-1];break;
            case 6:factors[6][x]=factors[6][x-1]+1;
            factors[2][x]=factors[2][x-1];factors[3][x]=factors[3][x-1];
            factors[4][x]=factors[4][x-1];factors[5][x]=factors[5][x-1];
            factors[1][x]=factors[1][x-1];factors[7][x]=factors[7][x-1];
            factors[8][x]=factors[8][x-1];break; 
            case 7:factors[7][x]=factors[7][x-1]+1;
            factors[2][x]=factors[2][x-1];factors[3][x]=factors[3][x-1];
            factors[4][x]=factors[4][x-1];factors[5][x]=factors[5][x-1];
            factors[6][x]=factors[6][x-1];factors[1][x]=factors[1][x-1];
            factors[8][x]=factors[8][x-1];break;
            case 8:factors[8][x]=factors[8][x-1]+1;
            factors[2][x]=factors[2][x-1];factors[3][x]=factors[3][x-1];
            factors[4][x]=factors[4][x-1];factors[5][x]=factors[5][x-1];
            factors[6][x]=factors[6][x-1];factors[1][x]=factors[1][x-1];
            factors[7][x]=factors[7][x-1];break;
        }
    }
    freopen("h.in","r",stdin);
    freopen("h.our","w",stdout);
    int t,a1,b1,n1;
    cin>>t;
    for(int a=0;a<t;a++)
    {
        int s;cin>>a1>>b1>>n1;
        if(n1==0&&a1>1)s=0;
        else s=1;
        if(n1<=8&&n1>0)
            if(factors[0][a1]==n1&&a1!=1)
                s=factors[n1][b1]-factors[n1][a1]+1;
            else s=factors[n1][b1]-factors[n1][a1];
        if(n1>8)s=0;
        cout<<"Case #"<<a+1<<": "<<s<<endl;
    }
    return 0;
}

