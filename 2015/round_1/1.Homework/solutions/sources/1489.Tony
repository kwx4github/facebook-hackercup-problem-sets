#include <iostream>
#include <ctime>
#include <vector>

using namespace std;

int dp[9][10000005];
vector<int> primes;

bool isPrime(int n) {
    for(int i = 2; i * i <= n; ++i) {
        if(n % i == 0) return false;
    }
    return true;
}

int primacity(int n) {
    int tmpn = n;
    int ret = 0;
    bool isPrime = true;
    int maxi;
    for(int i = 0; primes[i] * primes[i] <= n && tmpn > 1; ++i) {
        if(tmpn % primes[i] == 0) {
            isPrime = false;
            ++ret;
            while(tmpn % primes[i] == 0) {
                tmpn /= primes[i];
            }
        }
    }
    if(tmpn > 1) ret++;
    return ret;
}

int main() {
    for(int i = 2; i < 3200; ++i) {
        if(isPrime(i)) primes.push_back(i);
    }
    dp[1][2] = 1;
    for(int i = 3; i <= 10000000; ++i) {
        for(int j = 1; j <= 8; ++j) {
            dp[j][i] = dp[j][i - 1];
        }
        dp[primacity(i)][i]++;
    }
    FILE * fout;
    fout = fopen("r1prob1.out", "w");
    int T;
    cin >> T;
    for (int t = 1; t <= T; ++t) {
        int a, b, k;
        cin >> a >> b >> k;
        fprintf(fout, "Case #%d: %d\n", t, (dp[k][b] - dp[k][a - 1]));
    }
}