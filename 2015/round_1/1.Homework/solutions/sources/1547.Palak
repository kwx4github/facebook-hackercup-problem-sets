#include<bits/stdc++.h>
using namespace std;
#define Max 1e7+2

bool p[10000005];
vector<int> prime;
map<int, int> pc;

void seive_algo()
{
      p[0] = p[1] = false;
      for(int i=2;i<sqrt(Max)+2;i++)
      {
	    if(p[i])
          {
		  prime.push_back(i);
		  for(int j=i*2;j<sqrt(Max)+2;j+=i) 
			p[j] = false;
	    }
      }
}

void findpc() {
      int a = 2, b = Max,i,j;
      for(i=a;i<b;i++)
      {
          int m = i;
          int count=0;
	    if(p[i] && (i<sqrt(Max) - 5)) 
          {
             pc[i] = 1; continue;
          }
	    for(j=0;j<prime.size() && prime[j]<=m;j++)
          {
		  if(m%prime[j]==0) 
              {
			count++;
			while(m>1 && m%prime[j] == 0) 
                        m/=prime[j];
		  }
	    }
	    if(m > 1) 
            count ++;
	    pc[i] = count;
      }
}

int main() {
      memset(p, true, sizeof(p));
      int o=0,t,ans=0,a,b,k;
      seive_algo();
      pc.clear();
      findpc();
      scanf("%d",&t);
      while(t--)
      {
            o++;
            ans=0;
            scanf("%d %d %d",&a,&b,&k);
            for(int i=a;i<=b;i++)
            {
               if(pc[i] == k) 
                    ans++;
            }
            printf("Case #%d: %d\n",o,ans);
      }
      return 0;
}

