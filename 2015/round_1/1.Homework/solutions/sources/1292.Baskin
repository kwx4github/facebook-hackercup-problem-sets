#include <vector>
#include <iostream>
#include <cstring>
using namespace std;
int COUNTS[10000009];
void fillarray(vector<long long int>& primes,long long int lastPrime,int lastPrimeIndex,long long int number,int count)
{
	COUNTS[number]=count;
	if(number*primes[lastPrimeIndex]<10000001LL)
	{
		fillarray(primes,lastPrime,lastPrimeIndex,number*lastPrime,count);
		for(int i=lastPrimeIndex+1;number*primes[i]<10000001LL;i++)
			fillarray(primes,primes[i],i,number*primes[i],count+1);
	}
}
int main()
{
	memset(COUNTS,0,10000009);
	vector<long long int> primes;
	for(long long int i=2;i<10000001LL;i++)
	{
		bool isPrime=true;
		for(long long int j=2;j*j<=i;j++)
			if(i%j==0){isPrime=false;break;}
		if(isPrime)
		{
			primes.push_back(i);
		}
	}
	for(int i=0;i<primes.size();i++)
		fillarray(primes,primes[i],i,primes[i],1);
	int T;
	cin >> T;
	for(int i=1;i<=T;i++)
	{
		int A,B,K;
		cin>>A>>B>>K;
		cout <<"Case #"<<i<<": ";
		if(K>=9){cout << "0" << endl;continue;}
		int countt=0;
		for(int j=A;j<=B;j++)
			if(K==COUNTS[j])countt++;
		cout << countt <<endl;
	}
	return 0;
}
