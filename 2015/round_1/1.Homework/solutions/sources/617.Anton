#include <bits/stdc++.h>

using namespace std;

#define REP(i, from, to) for (int i = (from); i < (to); ++i)
#define FOR(i, n) REP(i, 0, (n))
#define ALL(x) x.begin(), x.end()
#define SIZE(x) (int)x.size()
#define PB push_back
#define MP make_pair

typedef long long i64;

typedef vector<int>    VI;
typedef vector<VI>     VVI;
typedef vector<string> VS;
typedef vector<VS>     VVS;
typedef pair<int, int> PII;

int trivDiv(int n) {
    int cnt = 0;
    for (int i = 2; i * i <= n; ++i) {
        if (n % i == 0) ++cnt;
        while (n % i == 0) n /= i;
    }

    cnt += n != 1;
    return cnt;
}

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    ios_base::sync_with_stdio(false);

    int const MAX_N = 1e7 + 1;
    VI primeDiv(MAX_N);

    REP (i, 2, MAX_N) if (!primeDiv[i]) {
        primeDiv[i] = 1;
        for (int j = 2 * i; j < MAX_N; j += i) {
            primeDiv[j] += 1;
        }
    }

    //FOR (i, 20) cout << i << " " << primeDiv[i] << endl;
    /*REP (i, 2, 10000) if (trivDiv(i) != primeDiv[i]) {
        cout << i << " " << trivDiv(i) << " " << primeDiv[i] << endl;
        throw 10;
    }*/

    //cout << *max_element(ALL(primeDiv)) << endl;

    int const MAX_DIVS = 8;
    VVI cntWithPrimeDiv(MAX_N, VI(MAX_DIVS + 1));
    REP (i, 2, MAX_N) REP (j, 1, MAX_DIVS + 1)
            cntWithPrimeDiv[i][j] = cntWithPrimeDiv[i - 1][j] + (primeDiv[i] == j);

    int t;
    cin >> t;

    FOR (tests, t) {
        int a, b, k;
        cin >> a >> b >> k;

        int res = 0;
        if (k <= MAX_DIVS) {
            res = cntWithPrimeDiv[b][k] - cntWithPrimeDiv[a - 1][k];
        }
        cout << "Case #" << tests + 1 << ": " << res << endl;
    }

    return 0;
}
