#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 10000001 // 10^7+1

unsigned char v[MAX] = {0};
int sp[MAX] = {0};
// Memory usage: ~50 MBytes

void Sieve() {
    unsigned long long i,j;
	for (i = 2; i < MAX; i += 2)	sp[i] = 2;
	for (i = 3; i < MAX; i += 2) {
		if (!v[i]) {
			sp[i] = i;
			for (j = i; (j*i) < MAX ; j += 2) {
				if (!v[j*i])	{ v[j*i] = 1; sp[j*i] = i; }
			}
		}
	}
}

// in O(log(n)) time
int primacity(int n) {
    int cnt = 0;
    int temp = -1;
    while (n!=1) {
        if (sp[n] != temp) {
            cnt++;
            temp = sp[n];
        }
        n = n / sp[n];
    }
    return cnt;
}

int main() {
    FILE * fi = fopen("homework.txt","r");
    FILE * fo = fopen("output.txt","w");
    int T;
    int i;
    Sieve();
    fscanf(fi,"%d\n",&T);
    for (i=1;i<=T;i++) {
        int A,B,K;
        int res = 0;
        fscanf(fi,"%d %d %d\n",&A,&B,&K);
        // solve
        // TIME = O(N log(N)) ; N -> 10^7
        int k;
        for (k=A;k<=B;k++) if (primacity(k) == K) res++;
        // output
        printf("Case #%d: %d\n",i,res);
        fprintf(fo,"Case #%d: %d\n",i,res);
    }
    fclose(fi);
    fclose(fo);
    return 0;
}
