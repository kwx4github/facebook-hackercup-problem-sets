#include <bits/stdc++.h>
using namespace std;

int primacity[10000005], t, siz;
long long a, b, k;
bool prime[100000];
vector<int> prima;

void Sieve(){
	for(int i = 2 ; i <= sqrt(sqrt(10000000)); i++){
		if(prime[i]){
			for(int j = i * i ; j <= sqrt(10000000); j += i)
				prime[j] = false;
		}
	}
	for(int i = 2 ; i <= sqrt(10000000); i++) if(prime[i]) prima.push_back(i);
}

/*void ngedp(long long x, int prim){
	if(x > 10000000) return;
	if(primacity[x] != 0) return;
	primacity[x] = min(primacity[x], prim);
	for(int i = 0; i < siz; i++){
		long long temp = x * prima[i];
		while(temp <= 10000000){
			ngedp(temp, prim + 1);
			temp *= prima[i];
		}
	}	
}*/

int main(){
	memset(prime, true, sizeof prime);
	prime[1] = false;
	Sieve();
	siz = prima.size();
	memset(primacity, 0, sizeof primacity);
	// asdasdasd
	int prim;
	int temp;
	int tail;
	for(int i = 2 ; i <= 10000000 ; i++){
		prim = 0;
		tail = 0;
		temp = i;
		while(temp != 1){
			if(temp % prima[tail] == 0) prim++;
			while(temp % prima[tail] == 0) temp /= prima[tail];
			tail++;
			if(tail >= siz) break;
		}
		primacity[i] = prim;
	}
	scanf("%d", &t);
	for(int tc = 1 ; tc <= t ; tc++){
		scanf("%lld %lld %lld", &a, &b, &k);
		prim = 0;
		if(k <= 10) for(int i = a ; i <= b ; i++){
			if(primacity[i] == k) prim++;
		}
		printf("Case #%d: %d\n", tc, prim );
	}
}
