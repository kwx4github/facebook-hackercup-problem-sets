#!/usr/bin/env python3

import fileinput
import sys
from itertools import repeat

def populate_primicity(limit):
  '''Populate primes and primicities between the 1 and the given upper limit.'''

  primes = []

  primicities = list(repeat(0, limit+1))

  for x in range(2, limit+1):
    if x % 100000 == 0:
      print(x, file=sys.stderr)
    for p in primes:
      if x % p == 0:
        if (x // p) % p == 0:
          primicities[x] = primicities[x // p]
        else:
          primicities[x] = primicities[x // p] + 1
        break
      if p * p > x:
        primicities[x] = 1
        primes.append(x)
        break
    else:
      primicities[x] = 1
      primes.append(x)

  return primes, primicities


def main():

  # Populate the primicity of integers between 1 and 10^7.
  _, primicities = populate_primicity(10000000)
  max_primicity = max(primicities)

  # Read the inputs from either the standard input or, if given,
  # the file as specified in the first argument.
  fobj = fileinput.input()
  t = int(next(fobj))
  tests = []
  for index, line in zip(range(1, t+1), fobj):
    a, b, k = map(int, line.split())
    if k > max_primicity:
      count = 0
    else:
      count = sum(int(primicities[x] == k) for x in range(a, b+1))
    print("Case #{index}: {count}".format(index=index, count=count))
    if index % 100000 == 0:
      print(index, file=sys.stderr)

if __name__ == '__main__':
  main()
