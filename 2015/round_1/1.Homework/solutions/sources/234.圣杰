#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <queue>
#include <map>
#include <string>
#include <stack>
#include <bitset>
#include <vector>

using namespace std;
const int maxn = 3e7;
bool vis[maxn];
int prime[maxn/3], cnt = 0, maxp = 0;
int primacity[maxn/2];
vector<int> V[maxn/3];
void sieve() {
    cnt = 0;
    memset(primacity, 0, sizeof primacity);
    for(int i = 2; i < maxn / 2; i++) {
        if(!primacity[i]) {
            prime[cnt++] = i;
            maxp = max(i, maxp);
            for(int j = 1; (i * j) < (maxn / 2); j++) {
                primacity[i*j]++;
            }
        }
    }
}
void init() {
    for(int i = 1; i < maxn / 2; i++) {
        V[primacity[i]].push_back(i);
    }
//    for(int i = 1; i <= 100; i++) {
//        printf("%d\n", V[i].size());
//    }
}
int main() {
    #ifdef LOCAL
    freopen("homework.txt", "r", stdin);
    //freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    #endif
    sieve();
    init();
    int T, cas = 1;
    scanf("%d", &T);
    while(T--) {
        int a, b, k;
        scanf("%d%d%d", &a, &b, &k);
        if(k > 10) {
            printf("Case #%d: 0\n", cas++);
            continue;
        }
        int st = 0, ed = V[k].size();
        for(int i = 0; i < V[k].size(); i++) {
            if(V[k][i] >= a) {
                st = i;
                break;
            }
        }
        for(int i = 0; i < V[k].size(); i++) {
            if(V[k][i] > b) {
                ed = i;
                break;
            }
        }
        printf("Case #%d: %d\n", cas++, ed - st);
    }
    return 0;
}
