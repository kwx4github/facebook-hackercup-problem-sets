//============================================================================
// Author	   : LAM PHAN VIET - lamphanviet@gmail.com
//============================================================================
#include <bits/stdc++.h>
using namespace std;

#define fr(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define rep(i,n) for (int i = 0, _n = (n); i < _n; i++)
#define repr(i,n) for (int i = (n) - 1; i >= 0; i--)
#define foreach(it, ar) for ( typeof(ar.begin()) it = ar.begin(); it != ar.end(); it++ )
#define fill(ar, val) memset(ar, val, sizeof(ar))

#define uint64 unsigned long long
#define int64 long long
#define all(ar) ar.begin(), ar.end()
#define pb push_back
#define mp make_pair
#define ff first
#define ss second

#define BIT(n) (1<<(n))
#define sqr(x) ((x) * (x))

typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<ii> vii;
typedef vector<int> vi;

#define PI	3.1415926535897932385
#define EPS	1e-7
#define MOD	1000000007
#define INF	2000111222
#define MAX	10000111

int cnt[MAX];
vi p[MAX];
void sieve() {
	fill(cnt, 0);
	for (int i = 2; i * i < MAX; i++)
		if (cnt[i] == 0) {
			for (int j = i + i; j < MAX; j += i)
				cnt[j]++;
			cnt[i]++;
		}
	fr(i, 2, MAX - 1)
		p[cnt[i]].pb(i);
}

int solve(int lo, int hi, int k) {
	if (k > 50) return 0;
	int rg = upper_bound(all(p[k]), hi) - p[k].begin();
	int lf = lower_bound(all(p[k]), lo) - p[k].begin();
	return rg - lf;
}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("test.inp", "r", stdin);
		freopen("test.out", "w", stdout);
	#endif
	sieve();
	int cases, caseNo = 0, lo, hi, k;
	for (scanf("%d", &cases); cases--; ) {
		scanf("%d %d %d", &lo, &hi, &k);
		printf("Case #%d: %d\n", ++caseNo, solve(lo, hi, k));
	}
	return 0;
}
