#include <iostream>
#include <stdio.h>
#include <vector>
using namespace std;

int t;
vector<int> List[100001];
int N=10000000;
bool Prime[10000001];
int Counter[10000001];

int GetFirstNonSmaller(int x,int ind)
{
    int l=0,r=(int)List[ind].size()-1;
    int mid,best=List[ind].size();

    while(l<=r)
    {
        mid=(l+r)/2;

        if (List[ind][mid]>=x)
        {
            best=mid;
            r=mid-1;
        }
        else
        {
            l=mid+1;
        }
    }

    return best;
}

int GetFirstNonLarger(int x,int ind)
{
    int l=0,r=(int)List[ind].size()-1;
    int mid,best=-1;

    while(l<=r)
    {
        mid=(l+r)/2;

        if (List[ind][mid]<=x)
        {
            best=mid;
            l=mid+1;
        }
        else
        {
            r=mid-1;
        }
    }

    return best;
}

int main()
{
    freopen("homework.txt","r",stdin);
    freopen("homework.out","w",stdout);

    int i,j;
    int test;
    int L,R,k;
    int l,r;

    for (i=1;i<=N;i++)
    {
        Prime[i]=true;
    }
    Prime[1]=false;

    for (i=2;i<=N;i++)
    {
        if (Prime[i])
        {
            Counter[i]=1;
            for (j=i+i;j<=N;j+=i)
            {
                Prime[j]=false;
                Counter[j]++;
            }
        }

    }

    for (i=1;i<=N;i++)
    {
        List[ Counter[i] ].push_back(i);
    }

    scanf("%d",&t);

    for (test=1;test<=t;test++)
    {
        scanf("%d %d %d",&L,&R,&k);

        printf("Case #%d: ",test);

        if (k>100)
        {
            printf("0\n");
            continue;
        }

        l=GetFirstNonSmaller(L,k);
        r=GetFirstNonLarger(R,k);

        if (l>r)
        printf("0\n");
        else
        printf("%d\n",r-l+1);
    }

    return 0;
}
