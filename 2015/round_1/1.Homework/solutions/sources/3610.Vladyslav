def count_primacity(arr):
    res = [0] * len(arr)
    current = 2
    while current < len(arr):
        for i in range(current, len(arr), current):
            if i % current == 0 and i != current:
                arr[i] = False
            if i % current == 0:
                res[i] += 1
        current += 1
        while current < len(arr) and not arr[current]:
            current += 1
        print current
    return res


def main():
    primacies = []
    try:
        with open('primacies.txt', 'r') as inp:
            pr_str = inp.read().split()
            for s in pr_str:
                primacies.append(int(s))
    except Exception:
        eratosphene = [True] * (10 ** 7 + 1)
        primacies = count_primacity(eratosphene)
        with open('primacies.txt', 'w') as out:
            for i in primacies:
                out.write(str(i) + '\n')
    with open('homework.txt', 'r') as inp:
        with open('output.txt', 'w') as out:
            T = int(inp.readline())
            for i in range(T):
                counter = 0
                nums = inp.readline().split()
                print nums
                for j in range(int(nums[0]), int(nums[1]) + 1):
                    if primacies[j] == int(nums[2]):
                        counter += 1
                out.write('Case #' + str(i + 1) + ': ' + str(counter) + '\n')

if __name__ == '__main__':
    main()
