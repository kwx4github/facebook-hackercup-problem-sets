from collections import Counter

def primes(limit):
    a = [True] * limit                          # Initialize the primality list
    a[0] = a[1] = False

    for (i, isprime) in enumerate(a):
        if isprime:
            yield i
            for n in xrange(i*i, limit, i):     # Mark factors non-prime
                a[n] = False

n = 10000000
primacity = [0] * (n + 1)
has_primacity = [[0] * (n + 1) for _ in range(10)]
for prime in primes(n):
    for k in xrange(1, n / prime + 1):
        primacity[k * prime] += 1
for i in xrange(n + 1):
    has_primacity[primacity[i]][i] = 1

T = int(raw_input())
for t in range(T):
    l, r, k = map(int, raw_input().split())
    print 'Case #%d: %d' % (t + 1, 0 if k >= 9 else sum(has_primacity[k][l:r + 1]))
