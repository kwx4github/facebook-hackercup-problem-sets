#include<cassert>
#include<iostream>
#include<vector>
#include<cstdio>
using namespace std;

int main()
{
  const int maxN = 1e7 + 1;
  const int maxK = 30;
  vector<int> distinctPrimes(maxN);
  for(int i = 2; i < distinctPrimes.size(); i++)
  {
    if (distinctPrimes[i] == 0)
    {
      int j = i;
      while (j < distinctPrimes.size())
      {
	distinctPrimes[j]++;
	j += i;
      }
    }
  }
  static int countParticleAnswer[maxN][maxK];
  for (int j = 0; j < maxK; ++j)
  {
    countParticleAnswer[1][j] = 0;
  }
  for (int i = 2; i < maxN; ++i)
  {
    for (int j = 0; j < maxK; ++j)
    {
      countParticleAnswer[i][j] = countParticleAnswer[i - 1][j];
    }
    assert (distinctPrimes[i] < maxK);
    countParticleAnswer[i][distinctPrimes[i]]++;
  }

  int testN;
  cin >> testN;
  for (int testId = 1; testId <= testN; ++testId)
  {
    printf("Case #%d: ", testId);
    int a, b, k;
    cin >> a >> b >> k;
    if (k >= maxK)
    {
      printf("0");
    }
    else
    {
      printf("%d", countParticleAnswer[b][k] - countParticleAnswer[a - 1][k]);
    }
    printf("\n");
  }
  return 0;
}