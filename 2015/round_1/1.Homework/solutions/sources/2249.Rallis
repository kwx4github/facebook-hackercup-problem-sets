
from math import floor, sqrt

try: 
    long
except NameError: 
    long = int
 
def fac(n):
    step = lambda x: 1 + (x<<2) - ((x>>1)<<1)
    maxq = long(floor(sqrt(n)))
    d = 1
    q = n % 2 == 0 and 2 or 3 
    while q <= maxq and n % q != 0:
        q = step(d)
        d += 1
    return q <= maxq and [q] + fac(n//q) or [n]


 
f = open('p1in2.txt', 'r')
t=f.readline();
dbg=False;
if dbg:    print(t);

out=open('out.txt','w');

for x in range(0,int(t)):
    num=f.readline().strip()
    num=num.split()
    #print(num)
    primacity=int(num[2])
    tot=0
    #print(tot)
    #print("primacity="+str(primacity))
    for y in range(int(num[0]),int(num[1])+1,):
        #print(y)
        #print("x="+str(x)+" "+str(len(set().union(fac(x)))))
        if(len(set().union(fac(y)))==primacity):
            tot+=1
        
    #print(tot)
    print('Case #'+str(x+1)+': '+str(tot));
    out.write('Case #'+str(x+1)+': '+str(tot)+"\n");

out.close();    

#tocalc =  1000
#print(fac(tocalc))
#print(len(set().union(fac(tocalc))))














            
