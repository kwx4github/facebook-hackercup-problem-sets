#if 1
#include <functional>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <sstream>
#include <numeric>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <list>
 
using namespace std;
 
typedef long long LL;
typedef long double LD;
typedef pair<int, int> pii;
 
const LD eps = 1e-9;
const LD pi = acos(-1.0);
const LL inf = 1e+9;
 
#define mp make_pair
#define pb push_back
#define X first
#define Y second
 
#define dbg(x) { cerr << #x << " = " << x << endl; }
 
// extended template
#pragma comment(linker, "/STACK:36777216")
typedef vector<int> vi;
typedef vector<vi> vvi;
 
#define forn(i, n) for (int i = 0; i < n; ++i)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
 
template<typename T> istream & operator >> (istream &, vector<T> &);
template<typename T> ostream & operator << (ostream &, const vector<T> &);
 
#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;
 
#define NAME "kabaleo"

const int maxn = 2 * 1000 * 1000 * 10;
vector <int> pr(maxn, -1);

int main()
{
    //freopen(NAME ".in", "r", stdin); freopen(NAME ".out", "w", stdout);
    freopen("input.txt", "r", stdin);  freopen("output.txt", "w", stdout);
	//START
	pr[0] = pr[1] = 1;
	for (int i = 2; LL(i) * i < maxn; i++)
	{
		if (pr[i] == -1)
		{
			pr[i] = i;
			for (int j = i * i; j < maxn; j += i)
				pr[j] = i;
		}
	}

	for (int i = 0; i < maxn; i++)
		if (pr[i] == -1)
			pr[i] = i;

	vector <int> ans(maxn);
	vector <vector <int> > ans2(100);
	for (int i = 2; i <= 1000 * 1000 * 10; i++)
	{
		int x = i;
		int cnt = 0;
		while (x > 1)
		{
			int c = pr[x];
			while (x % c == 0)
				x /= c;
			cnt++;
		}
		ans[i] = cnt;
		ans2[cnt].pb(i);
	}

	int t;
	scanf("%d", &t);
	for (int q = 0; q < t; q++)
	{
		int a, b, k;
		scanf("%d %d %d", &a, &b, &k);
		int cnt = 0;
		if (k < 100)
		{
			int p2 = upper_bound(ans2[k].begin(), ans2[k].end(), b) - ans2[k].begin() - 1;
			int p1 = lower_bound(ans2[k].begin(), ans2[k].end(), a) - ans2[k].begin();
			cnt = max(0, p2 - p1 + 1);
		}

		printf("Case #%d: %d\n", q + 1, cnt);
	}
	//END
    return 0;
}
/*******************************************
*******************************************/
 
template<typename T> istream & operator >> (istream &is, vector<T> &v)
{
    forn(i, v.size())
        is >> v[i];
    return is;
}
template<typename T> ostream & operator << (ostream &os, const vector<T> &v)
{
    forn(i, v.size())
        os << v[i] << " ";
    return os;
}
#endif