#!/usr/bin/env python2.7

import math

def parseLineTypes (line, types):
    result = []
    elements = line.strip("\n").split(" ")
    if len(elements) != len(types):
        print ("Error: Diferent number elements between line and types_list")
        return None
    for i in range(len(elements)):
        result.append(types[i](elements[i]))
    return result

primes = [2]
primacity = {}
primacity[2] = 1

def isPrime (num):
    i = 0
    maximo = int(math.sqrt(num)+1)
    while (primes[i] < maximo):
        if ((num % primes[i]) == 0):
            return False
        else:
            i += 1
    return True

MAX_A = 10000000
#MAX_A = 10000

for i in range(3, MAX_A+1):
    if (isPrime(i)):
        primes.append(i)
        primacity[i] = 1

def getPrimacity(num):
    if (num in primacity):
        return primacity[num]
    i = 0
    sw = True
    rest = num
    maximo = int(math.sqrt(rest)+1)
    while (primes[i] < maximo):
        while ((rest % primes[i]) == 0):
            rest = rest / primes[i]
            sw = False
        if (sw):
            i += 1
        else:
            if (rest == 1):
                resultado = 1
            else:
                resultado = 1 + getPrimacity(rest)
            primacity[num] = resultado
            return resultado
 
#Pre calculate all primacies                
for i in range(2, MAX_A+1):
    getPrimacity(i)

#print len(primacity)
#print primacity

#input_file_path = "homework_example_input.txt"
input_file_path = "homework.txt"
#output_file_path = "homework_example_output.txt"
output_file_path = "homework_output.txt"

input_file = open(input_file_path, 'r')
input_file_lines = input_file.readlines()
output_file = open(output_file_path, 'w')

T = int(input_file_lines[0])

numero_linea = 1

for case in range(1,T+1):
    [A, B, K] = parseLineTypes(input_file_lines[numero_linea],[int, int, int])
    numero_linea += 1
    #print ("[%d, %d] %d" % (A,B,K))
    
    N = 0
    for i in range(A, B+1):
        #if getPrimacity(i) == K:
        if primacity[i] == K:
            N += 1
            if K == 8:
                print (i)
        
    output_file.write ("Case #%d: %d\n" % (case, N))
    print ("Case #%d: %d" % (case,N))
