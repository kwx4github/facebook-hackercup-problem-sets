#include <algorithm>
#include <array>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<ll> vll;
typedef vector<string> vs;
typedef pair<int,int> pii;
#define range(i,a,b) for(auto i=(a);i<b;i++)
#define rep(i,n) range(i,0,n)
#define all(c) begin(c),end(c)
#define CLR(i,x) memset(i,x,sizeof(i))
#define clr0(i) CLR(i,0)
#define clr1(i) CLR(i,-1)
#define bit(x,i) ((x>>i)&1)
#define M(x) ((x)%MOD)
#define acc(f,x,y) x=f(x,y)
#define fst first
#define snd second
#define tup make_tuple

#define N 10000005
#define PC 12

int pcnt[N + 5], tot[N + 5][PC];

void sieve()
{
	range(i, 2, N)
	{
		if(pcnt[i] == 0)
		{
			for(int j = i; j < N; j += i)
				pcnt[j]++;
		}
		rep(pc, PC)
		{
			tot[i + 1][pc] = tot[i][pc] + (pcnt[i] == pc);
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	sieve();

	int t;
	cin >> t;
	rep(i, t)
	{
		int a, b, k;
		cin >> a >> b >> k;
		cout << "Case #" << i + 1 << ": " << (k < PC ? tot[b + 1][k] - tot[a][k] : 0) << endl;
	}
	return 0;
}
