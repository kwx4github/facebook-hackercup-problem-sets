#include <cstdio>
#include <cmath>
#include <cstring>
//#include <vector>
using namespace std;

int primes[9] = {2,3,5,7,11,13,17,19,23};
long count[10000001][9];

// bool isPrime(int num) {
// 	int i;
// 	for (i = 2; i * i <= num; i++) {
// 		if (num % i == 0)
// 			return false;
// 	}
// 	return true;
// }

void findPrimes() {
	//vector<int> primes;
	//printf("aaa\n");
	//memset(count, 0, sizeof count);
	//printf("xxx\n");
	long i;
	int j = 0;
	// int b = (int)sqrt(10000000); 
	//printf("%d\n", b);
	// for(i = 2; i <= b; i++) {
	// 	if (isPrime(i)) {
	// 		primes[j++] = i;
	// 		//primes.push_back(i);
	// 	}
	// }
	// for (j = 0; j < 446; j++)
	// 	printf("%d,", primes[j]);
	// printf("\n");
	int cnt;
	long acc[9];
	
	memset(acc, 0, sizeof acc);
	for (i = 2; i <= 10000000; i++) {
		//printf("%ld\n", i);
		// if (i % 1000 == 0) {
		// 	printf("*");
		// }
		cnt = 0;
		for (j = 0; j < 9; j++) {
			if (i % primes[j] == 0)
				cnt++;
		}
		acc[cnt]++;
		for (j = 0; j < 9; j++) {
			count[i][j] = acc[j];
		}
	}
	return;
}

long solve(long a, long b, long k) {
	// base case
	if (k > 9)
		return 0;
	return count[b][k] - count[a - 1][k];
}

int main() {
	int T, i;
	long A, B, K;
	scanf("%d", &T);
	findPrimes();
	for (i = 1; i <= T; i++) {
		scanf("%ld%ld%ld", &A, &B, &K);
		long result = solve(A, B, K);
		printf("Case #%d: %ld\n", i, result);
	}
}