#include <bits/stdc++.h>

using namespace std ;

const int NMAX = 10000005 ;
const int INF = 0x3f3f3f3f ;

ifstream fin ("input.in") ;
ofstream fout("output.out") ;

long long A, B, K ;
int ciur[NMAX] ;
int sol[NMAX] ;


inline void Ciur ()
{


    for(int i = 1 ; i <= NMAX ; ++ i)
        ciur[i] = 1 ;

    for(int i = 2 ; i < NMAX ; ++ i)
        if(ciur[i] == 1)
        {

            for(int j = i + i ; j < NMAX ; j = j + i)
                ciur[j] = i ;

        }



    sol[2] = 1 ;

    for(int i = 3 ; i < NMAX ; ++ i)
    {

        if(ciur[i] == 1)
        {
            sol[i] = 1 ;
            continue ;
        }

        int aux = ciur[i] ;
        int iaux = i ;

        while(iaux % aux == 0)
            iaux = iaux / aux ;

        sol[i] = sol[iaux] + 1 ;

    }

}

int main()
{
    Ciur() ;

    int T ;

    fin >> T ;


    for(int i = 1 ; i <= T ; ++ i)
    {
        fout << "Case #" << i << ": " ;

        fin >> A >> B >>  K ;

        int ans = 0 ;

        for(int i = A ; i <= B ; ++ i)
            if(sol[i] == K)
                ans = ans + 1;

        fout << ans << '\n' ;
    }

    fin.close() ;
    fout.close() ;
    return 0 ;
}
