using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;

class Program
{
    static bool[] prime;
    static List<int> primes;
    static int[] primacity;

    static void Primes(int max)
    {
        prime = new bool[max + 1];
        for (int i = 2; i <= max; i++)
            prime[i] = true;
        primes = new List<int>();
        for (int i = 2; i <= max; i++)
        {
            if (prime[i])
            {
                for (int j = 2 * i; j <= max; j += i)
                    prime[j] = false;
                primes.Add(i);
            }
        }
    }

    static void Primacity(int A, int B)
    {
        primacity = new int[B+1];
        for (int X = A; X <= B; ++X)
        {
            if (prime[X])
                primacity[X] = 1;
            foreach (int p in primes)
            {
                if(X * p > B)
                    break;
                if (X % p == 0)
                {
                    primacity[X * p] = primacity[X];
                }
                else
                {
                    primacity[X * p] = primacity[X] + 1;
                }
            }
        }
    }

	static int Solve(int A, int B, int K)
	{
        //if (K > 8) return 0; // 2 * 3 * 5 * 7 * 11 * 13 * 17 * 19
        int count = 0;
        for (int x = A; x <= B; ++x)
        {
            if (primacity[x] == K)
                ++count;
        }
        return count;
	}

	static void Main(string[] args)
	{
        Primes(10000000);
        Primacity(2, 10000000);
		int T = ReadInt();
		for (int t = 1; t <= T; ++t)
		{
			int[] S = ReadInts();
			Console.WriteLine("Case #{0}: {1}", t, Solve(S[0], S[1], S[2]));
		}
    }

	static string ReadLine()
	{
		return Console.ReadLine();
	}

	static string[] ReadWords()
	{
		return ReadLine().Split();
	}

	static int ReadInt()
	{
		return int.Parse(ReadLine());
	}

	static long ReadLong()
	{
		return long.Parse(ReadLine());
	}

	static double ReadDouble()
	{
		return double.Parse(ReadLine());
	}

	static int[] ReadInts()
	{
		return Array.ConvertAll(ReadWords(), int.Parse);
	}

	static long[] ReadLongs()
	{
		return Array.ConvertAll(ReadWords(), long.Parse);
	}

	static double[] ReadDoubles()
	{
		return Array.ConvertAll(ReadWords(), double.Parse);
	}

	static void WriteList<T>(List<T> col)
	{
		int count = col.Count;
        for (int i = 0; i < count - 1; i++)
			Console.Write(col[i] + " ");
		Console.WriteLine(col[count - 1]);
	}

	static void WriteArray<T>(T[] col)
	{
		int count = col.Length;
		for (int i = 0; i < count - 1; i++)
			Console.Write(col[i] + " ");
		Console.WriteLine(col[count - 1]);
	}
}
