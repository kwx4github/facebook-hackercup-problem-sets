#include<bits/stdc++.h>
using namespace std;

struct cell
{
    int val,ind;
};

const int NMAX=10000005;

int q,a[NMAX],sol[105];
bitset<NMAX>viz;
vector<cell>v[NMAX];
vector<cell>::iterator it;
map<int,int>M;

inline void Ciur()
{
    int i,j;
    for (i=2;i<NMAX;i+=2) a[i]++;
    for (i=3;i<NMAX;i+=2)
        if (!viz[i])
            for (j=i;j<NMAX;j+=i) {a[j]++;viz[j]=1;}
}

int main()
{
    int i,x,y,z;
    cell k;
    //freopen("date.in","r",stdin);
   // freopen("date.out","w",stdout);
    cin.sync_with_stdio(false);
    Ciur();
    cin>>q;
    for (i=1;i<=q;i++)
        {
            cin>>x>>y>>z;
            k.ind=i;
            k.val=-z;
            v[x-1].push_back(k);
            k.val=z;
            v[y].push_back(k);
        }
    for (i=1;i<NMAX;i++)
        {
            if (M.find(a[i])==M.end()) M[a[i]]=0;
            M[a[i]]++;
            for (it=v[i].begin();it!=v[i].end();it++)
                {
                    if (M.find(abs((*it).val))==M.end()) M[abs((*it).val)]=0;
                    if ((*it).val<0)
                        {
                            (*it).val=abs((*it).val);
                            sol[(*it).ind]-=M[(*it).val];
                        }
                    else sol[(*it).ind]+=M[(*it).val];
                }
        }
    for (i=1;i<=q;i++)
        {
            cout<<"Case #"<<i<<": ";
            cout<<sol[i]<<"\n";
        }
    return 0;
}
