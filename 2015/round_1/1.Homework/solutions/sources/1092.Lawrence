#include <fstream>
#include <iostream>
using namespace std;

bool sieve[11000000] = {0};
long long primes[1000000];
int numPrimes = 0;

void eratosthenes() {
    for(int i = 0; i < 11000000; i++) if(!sieve[i]) {
        int p = primes[numPrimes] = i+2;
        numPrimes++;
        for(int j = i+p; j < 11000000; j+=p) sieve[j] = true;
    }
}

int solve(int mp, int a, long long b, int k) {
    int ans = 0, km = (k > 33) ? 32 : k-2;
    while(1) {
        a = (a+primes[mp]-1)/primes[mp], b /= primes[mp];
        if(a > b || b <= 0) break;
        if(k > 1) {
            for(int i = mp+1; (primes[i]<<km) <= b; i++)
                ans += solve(i,a,b,k-1);
        } else if(k==1 && a <= 1&&1 <= b) ans++;
    }
    return ans;
}

int solve(int a, long long b, int k) {
    int km = (k > 32) ? 32 : k-1;
    int ans = 0;
    for(int i = 0; (primes[i]<<km) <= b; i++)
        ans += solve(i,a,b,k);
    return ans;
}

int main() {
    eratosthenes();
    ifstream fin("homework.in");
    ofstream fout("homework.out");
    int T, A, B, K;
    fin >> T;
    for(int i = 1; i <= T; i++) {
        fin >> A >> B >> K;
        fout << "Case #" << i << ": ";
        fout << solve(A,B,K) << '\n';
    }
    fin.close();
    fout.close();
    return 0;
}
