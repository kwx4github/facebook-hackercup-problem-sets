#include <iostream>
#include <map>
#include <vector>

#pragma comment(linker, "/STACK:102400000,102400000")
#include <algorithm>
#include <cstdio>

#define pb push_back

using namespace std;

const int skip = 128, ck = skip - 1;
const int MAX = 10000000 + skip;

int cnt[10];
map<int, vector<int> > tr;
int f(int x) {
	int res = 0;
	for (int i = 2; i * i <= x; i++)
		if (x % i == 0) {
			res++;
			while (x % i == 0)
				x /= i;
		}
	if (x > 1)
		res++;
	return res;
}
int get(int i, int j) {
	int ans = 0;
	for (; !tr.count(i); i--) {
		if (f(i) == j)
			ans++;
	}
	ans += tr[i][j];
	return ans;
}
int main() {
	int i;
//	freopen("init.txt", "w", stdout);
//	for (int i = 1; i <= MAX; i++) {
//		cnt[f(i)]++;
//		if ((i & ck) == 0) {
//			for (int j = 0; j < 10; j++) {
//				printf("%d ", cnt[j]);
//			}
//			puts("");
//		}
//	}
//	fclose(stdout);
	int cas, cass, A, B, K;
	FILE *init = fopen("init.txt", "r");
	tr[0] = vector<int>(10);
	for (int i = skip; i <= MAX; i += skip) {
		vector<int> tmp;
		int x;
		for (int j = 0; j < 10; j++) {
			fscanf(init, "%d", &x);
			tmp.push_back(x);
		}
		tr[i] = tmp;
	}
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	scanf("%d", &cas);
	for (cass = 1; cass <= cas; cass++) {
		int ans;
		scanf("%d%d%d", &A, &B, &K);
		if (K >= 10)
			ans = 0;
		else
			ans = get(B, K) - get(A - 1, K);
		printf("Case #%d: %d\n", cass, ans);
	}
}
