#include<iostream>
#include<map>
#include<vector>
#include<math.h>
#include<set>

using namespace std;

vector<bool> marcas(10000001, true);

vector<long long int> sieve(long long int max){
    int maxi = (int)(sqrt(max)) + 1;


    for(int i = 2; i < maxi; i ++){
        if(marcas[i])
            for(int j = i*i; j <= max; j+= i){
                marcas[j] = false;
            }
    }
    vector<long long int> res;
    for(int i = 2; i <= max; i ++){
        if(marcas[i])res.push_back(i);
    }
    return res;


}




int main(){
    long long int tope = 10000001;
    int conta = 1;
    vector<long long int> primos = sieve(tope);

    map<int,int> mapa;

    mapa[2] = 1;
   for(int i = 3; i <= tope; i ++)
    {
        //cout<<"calcule "<<i<<endl;
        //if(i % 10000 == 0)cout<<i<<endl;
        //cout<<i<<"-----------------"<<endl;
        set<long long int> seto;
        for(int j = 0;primos[j] <= (int)(sqrt(i))+1 ; j ++){
            //cout<<"     div: "<<j <<" primo "<<primos[j]<<endl;
            if(i % primos[j] == 0 && seto.find(primos[j]) == seto.end()){
                //cout<<"          entre"<<endl;
                mapa[i] ++;
                seto.insert(primos[j]);
                if(marcas[i / primos[j]] && (i/primos[j]) != primos[j] && seto.find(i/primos[j]) == seto.end())
                {
                   // cout<<"             entre 2"<<endl;
                    mapa[i] ++;
                    seto.insert(i/primos[j]);
                }
            }
        }
        if(marcas[i])
        {
            mapa[i] ++;
        }
    }
/*
    for(int i = 2; i < 100; i ++)
    {
        cout<<i<<": "<<mapa[i]<<endl;
    }*/

    int casos;
    cin>>casos;
    while(casos--){

        unsigned long long int a,b,k, contador = 0;;
        cin>>a>>b>>k;

        for(int i=a; i <= b; i ++)
        {
            //cout<<"--->"<<i<<"  "<<mapa[i]<<endl;
            if(mapa[i] == k){
                contador ++;

            }
        }
        cout<<"Case #"<<conta++<<": "<<contador<<endl;


    }





    return 0;
}
