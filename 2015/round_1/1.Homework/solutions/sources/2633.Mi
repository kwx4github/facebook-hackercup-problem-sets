#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define rall(x) (x).rbegin(),(x).rend()
#define sz(x) ((int)(x).size())
#define REP(i,b,n) for(int i=(int)(b);i<(int)(n);++i)
#define rep(i,n) REP(i,0,n)
#define repsz(i,v) rep(i,sz(v))
#define eb emplace_back
#define mt make_tuple
#define aur auto&
#define bit(n) (1LL<<(n))
using namespace std;
typedef long long ll;
//#define int long long
static const int INF = 1<<25;
static const double EPS = 1e-5;
template<class T>bool chmin(T&a,const T&b){if(a<=b)return false;a=b;return true;}
template<class T>bool chmax(T&a,const T&b){if(a>=b)return false;a=b;return true;}

template<typename T> string to_s(T t){ //{{{
    stringstream ss;
    ss << t;
    return ss.str();
} //}}}
template<typename T> T s_to(string s){ //{{{
    stringstream ss;
    T res;
    ss << s;
    ss >> res;
    return res;
} //}}}

vector<int> sieve(int n){//{{{
    ++n;
    vector<int> f(n), ps;
    vector<int> g(n);
    rep(i, n) f[i] = i;
    rep(i, n) g[i] = 1;
    for(int k = 2; k < n; ++k){
        if(f[k] == k) ps.emplace_back(k);
        for(auto &p : ps){
            int t = k * p;
            if(t >= n or p > f[k]) break;
            g[t] = g[k] + (k % p != 0);
            f[t] = p;
        }
    }
    g[0] = g[1] = 0;
    return g;
}//}}}

const int N = 11000000;
const int K = 10;
array<vector<int>, K> sum;
void pre(){//{{{
    vector<int> f = sieve(N);
    rep(i, K) sum[i].resize(N);
    rep(i, N) ++sum[f[i]][i];
    rep(i, K) rep(j, N) if(j) sum[i][j] += sum[i][j-1];
}//}}}

bool solve(){//{{{
    int a, b, k; cin >> a >> b >> k;
    if(k >= K){
        cout << 0 << endl;
    }else{
        cout << sum[k][b] - sum[k][a-1] << endl;
    }
    return true;
}//}}}

signed main(){
    pre();
    //cin.tie(0);
    //ios_base::sync_with_stdio(0);
    cout.setf(ios::fixed); cout.precision(10);
    int T;
    cin >> T;
    cin.ignore();
    for(int i = 1; i <= T; ++i){
        cout << "Case #" << i << ": ";
        solve();
    }
    return 0;
}
// vim:set foldmethod=marker commentstring=//%s:
