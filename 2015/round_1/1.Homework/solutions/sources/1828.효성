#include<bits/stdc++.h>
using namespace std;
vector <int> prime;
vector <int> num[30];
void calculate(){
	prime.push_back(2);
	for(int p=3; p<3163; p+=2){
		bool isPrime = true;
		for(int j=2; j*j<=p; j++){
			if(p % j == 0){
				isPrime = false;
				break;
			}
		}
		if(isPrime) prime.push_back(p);
	}
	for(int n=2; n<=10000000; ++n){
		int t = n;
		int cnt = 0;
		for(int i=0; i<prime.size(); ++i){
			if(t % prime[i] == 0){
				cnt++;
				while(t % prime[i] == 0) t /= prime[i];
			}	
		}
		if(t > 1) cnt++;
		num[cnt].push_back(n);
	}	
}
void solve(int testcase){
	int a, b, k;
	int ans = 0;
	cin >> a >> b >> k;
	if(k >= 30 || num[k].size() == 0) ans = 0;
	else ans = upper_bound(num[k].begin(), num[k].end(), b) - lower_bound(num[k].begin(), num[k].end(), a);

	cout << "Case #" << testcase << ": " << ans << endl;
}

int main(){
	calculate();
	int TestCase;
	cin >> TestCase;
	for(int i=0; i<TestCase; ++i){
		solve(i+1);
	}
	return 0;
}
