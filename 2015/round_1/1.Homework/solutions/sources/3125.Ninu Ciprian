#include <fstream>
#include <algorithm>
#include <cassert>
#include <vector>
#include <map>

using namespace std;

const int MAXN = 10000000 + 9;
const int MAX_PRIMACITY = 9;
int primacity[MAXN];
vector<int> nrList[MAX_PRIMACITY];

void pre() {
	for(int i = 2; i < MAXN; i++) {
		if(primacity[i] == 0) {
			for(int j = i; j < MAXN; j += i) {
				primacity[j]++;
			}
		}
		nrList[primacity[i]].push_back(i);
	}
}

int main() {
	ifstream f("homework.txt");
	ofstream g("homework.out");
	int t, a, b, k;
	pre();
	f >> t;
	for(int i = 1; i <= t; i++) {
		f >> a >> b >> k;
		assert(2 <= a && a <= MAXN);
		assert(2 <= b && b <= MAXN);
		int ans = 0;
		if(k > 0 && k < MAX_PRIMACITY) {
			ans = upper_bound(nrList[k].begin(), nrList[k].end(), b) - 
				lower_bound(nrList[k].begin(), nrList[k].end(), a);
		}
		g << "Case #" << i << ": " << ans << '\n';
	}
	f.close();
	g.close();
	return 0;
}
