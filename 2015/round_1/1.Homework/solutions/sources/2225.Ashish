import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Solution {

    private static Map<Integer, Integer> map = new HashMap<Integer, Integer>();

    public static void main(String[] args) {
        Scanner inp = new Scanner(System.in);
        generateFactors();
        int t_cases = inp.nextInt();
        for (int z = 1; z <= t_cases; z++) {
            int low = inp.nextInt();
            int high = inp.nextInt();
            int p = inp.nextInt();
            int result = getFactors(low, high, p);
            System.out.println("Case #" + z + ": " + result);
        }
    }

    private static int getFactors(int low, int high, int p) {
        int count = 0;

        for (int i = low; i <= high; i++) {
            if (getPrimeFactors(i, p)) {
                count++;
            }

        }
        return count;
    }

    private static void generateFactors() {
        int max = 10000000;
        for (int i = 2; i <= max; i++) {
            if (map.containsKey(i)) {
                continue;
            }
            int mul = 1;
            int result;
            while (true) {
                result = i * mul;
                mul++;
                if (result > max) {
                    break;
                }
                map.put(result, i);
            }
        }
    }

    private static boolean getPrimeFactors(int num, int p) {
        int count = 0;
        int factor;
        while (num != 1) {
            factor = map.get(num);
            num = num / factor;
            count++;
            if (count > p) {
                return false;
            }
            while (num % factor == 0) {
                num = num / factor;
            }
        }
        return count == p;
    }
}

