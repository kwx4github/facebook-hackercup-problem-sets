#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <set>
#include <cmath>
#include <map>
#include <algorithm>
using namespace std;
#define dprint(v) cerr << #v"=" << v << endl //;)
#define forr(i,a,b) for(int i=(a); i<(b); i++)
#define forn(i,n) forr(i,0,n)
#define dforn(i,n) for(int i=n-1; i>=0; i--)
#define forall(it,v) for(typeof(v.begin()) it=v.begin();it!=v.end();++it)
#define sz(c) ((int)c.size())
#define zero(v) memset(v, 0, sizeof(v))
#define pb push_back
#define fst first
#define snd second
typedef long long ll;
typedef pair<int,int> ii;


#define MAXP 10000000	//no necesariamente primo
int criba[MAXP+1];
//~ vector<int> primos;
void buscarprimos(){
	int sq=sqrt(MAXP)+1;
	forr(p, 2, MAXP+1) if(!criba[p]){
		//~ primos.push_back(p);
		if(p<=sq)
			for(int m=p*p; m<=MAXP; m+=p)//borro los multiplos de p
				if(!criba[m])criba[m]=p;
	}
}


//factoriza bien numeros hasta MAXP
int fact(int n){ //O (lg n)
	map<ll,ll> ret;
	while (criba[n]){
		ret[criba[n]]++;
		n/=criba[n];
	}
	if(n>1) ret[n]++;
	return sz(ret);
}
int q[MAXP+1];
int main() {
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
	buscarprimos();
	forr(i, 2, MAXP+1) q[i]=fact(i);
	int tc; cin >> tc;
	forr(tt, 1, tc+1){
		int a,b,k; cin >> a >> b >> k;
		int r=0;
		forr(i, a, b+1) if(q[i]==k) r++;
		cout << "Case #" << tt << ": " << r << endl;
	}
	return 0;
}
