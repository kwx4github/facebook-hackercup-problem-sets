#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

bool crivo[10000010];
vector<int> primos;
int cnt[10000010];

int T,a,b,k,res;
vector<int> v[16];

int main(){

  memset(crivo,true,sizeof(crivo));
  crivo[1]=crivo[0]=false;
  for(int i=2;i<1000010;i++) if(crivo[i]){
    primos.push_back(i);
    for(int j=i+i;j<1000010;j+=i)
      crivo[j]=false;
  }

  memset(cnt,0,sizeof(cnt));
  for(int i=0;i<(int)primos.size();i++){
    for(int j=primos[i];j<=10000000;j+=primos[i])
      cnt[j]++;
  }
  for(int i=2;i<=10000000;i++)
    v[cnt[i]].push_back(i);

  int C=1;
  scanf("%d",&T);
  while(T--){
    scanf("%d %d %d",&a,&b,&k);
    if(k>15) res = 0;
    else {
      res = lower_bound(v[k].begin(),v[k].end(),b) -
            lower_bound(v[k].begin(),v[k].end(),a);
      if(binary_search(v[k].begin(),v[k].end(),b))
        res++;
    }
    printf("Case #%d: %d\n",C++,res);
  }

  return 0;
}
