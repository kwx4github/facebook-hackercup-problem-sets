#include <iostream>
#include <cstdlib>
#include <vector>
#include <map>
#include <string>
#include <cstdio>
#include <algorithm>
#include <fstream>

using namespace std;

const long long max_b = 15000000;

bool prime[max_b + 1];
int primality[max_b + 1];

int main()
{
	memset(prime, 1, sizeof(prime));
	memset(primality, 0, sizeof(primality));
	prime[1] = false;
	for (int i = 2; i <= max_b; ++i)
	{
		if (prime[i])
		{
			for (int j = 2; j * i <= max_b; ++j)
			{
				prime[i * j] = false;
			}
		}
	}

	for (int i = 2; i <= max_b; ++i)
	{
		if (prime[i])
		{
			long long k = i;
			while (k <= max_b)
			{
				++primality[k];
				k = k + i;
			}
		}
	}
	ifstream inf("infile.txt");
	ofstream ouf("outfile.txt");
	int T;
	inf >> T;
	for (int tk = 1; tk <= T; ++tk)
	{
		int A, B, K;
		inf >> A >> B >> K;
		int answer = 0;
		for (int i = A; i <= B; ++i)
			answer += (primality[i] == K);
		cout << "Case #" << tk << ": " << answer << endl;
		ouf << "Case #" << tk << ": " << answer << endl;
	}
	inf.close();
	ouf.close();
	system("pause");
	return 0;
}