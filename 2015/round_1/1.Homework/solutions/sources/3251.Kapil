#include<stdio.h>
#include<vector>
#include<algorithm>
#define SZ 10000007
#define PI acos(-1.0)
#define all(c) (c).begin(), (c).end()
#define Fi(a,n) for(int i=a;i<n;i++)
#define Fj(a,n) for(int j=a;j<n;j++)
#define Fk(a,n) for(int k=a;k<n;k++)
#define ri(a) scanf("%d",&a)
#define rl(a) scanf("%lld",&a)
#define pb push_back
#define mp make_pair
using namespace std;
typedef vector<int> vi;
typedef vector<vi > vii;
int sieve[SZ];
vii list;
void precompute()
{
	int i = 2, j;
	Fk(0,SZ)sieve[k] = 0;
	while(i<SZ)
	{
		while(i<SZ && sieve[i]>0)i++;
		if(i<SZ) sieve[i] = 1;
		for(j = i*2; j<SZ; j+=i)
			sieve[j] += 1;
	}
	list.resize(20);
	Fk(2,SZ)
		list[sieve[k]].pb(k);
}
int main()
{
	precompute();
	int T, A, B, K, ans;
	ri(T);
	for(int t = 1; t<=T; t++)
	{
		ri(A);ri(B);ri(K);
		if(K>=20 || list[K].size()==0)
		{
			printf("0\n");
			continue;
		}
		ans = upper_bound(list[K].begin(),list[K].end(),B) - list[K].begin();
		ans -= lower_bound(list[K].begin(),list[K].end(),A) - list[K].begin();
		printf("Case #%d: %d\n", t, ans);
	}
	return 0;
}
