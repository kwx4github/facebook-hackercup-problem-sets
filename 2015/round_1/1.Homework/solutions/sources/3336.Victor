using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Numerics;
using System.Collections;
using System.Globalization;


namespace FB1_1
{
    class Program
    {
        const int MAX_AB = 10000000;
        const double MAX_K = 1000000000;

        public static BitArray SieveOfEratosthenes(int limit)
        {
            BitArray bits = new BitArray(limit + 1, true);
            bits[0] = false;
            bits[1] = false;
            for (int i = 0; i * i <= limit; i++)
            {
                if (bits[i])
                {
                    for (int j = i * i; j <= limit; j += i)
                    {
                        bits[j] = false;
                    }
                }
            }
            return bits;
        }

        public static List<int> GeneratePrimesSieveOfEratosthenes(int limit)
        {
            BitArray bits = SieveOfEratosthenes(limit);
            List<int> primes = new List<int>();
            for (int i = 0, found = 0; i < limit; i++)
            {
                if (bits[i])
                {
                    primes.Add(i);
                    found++;
                }
            }
            return primes;
        }

        public static void preCalculatePrimalities()
        {
            List<int> primes = GeneratePrimesSieveOfEratosthenes(MAX_AB);
            Dictionary<int, int> primality = new Dictionary<int, int>();
            System.IO.StreamWriter output = new System.IO.StreamWriter("primalities_enhanced.txt");

            for (int i = 2; i <= MAX_AB; i++)
            {
                primality[i] = 0;
                foreach (int prime in primes)
                {
                    if (i % prime == 0)
                    {
                        if (i / prime == 1)
                        {
                            primality[i] = 1;
                            break;
                        }
                        else
                        {
                            int otherValue = i / prime;
                            if (otherValue % prime == 0)
                                primality[i] = primality[otherValue];
                            else
                                primality[i] = primality[otherValue] + 1;
                            break;
                        }
                    }
                    if (prime > i) break;
                }
                
                if (i % 100000 == 0)
                {
                    string timestamp = DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss.fff",
                                            CultureInfo.InvariantCulture);
                    Console.WriteLine("i = " + i + " " + timestamp);
                }
                output.WriteLine(i + " " + primality[i]);
            }
            output.Close();
        }

        static void Main(string[] args)
        {

            //preCalculatePrimalities();
            //System.Console.WriteLine("Calculated primalities.");

            //Read primalities from precalculated file
            System.IO.StreamReader filePrimalities =
               new System.IO.StreamReader("primalities_enhanced.txt");
            Dictionary<int, int> primality = new Dictionary<int, int>();
            while (!filePrimalities.EndOfStream)
            {
                string linePrim = filePrimalities.ReadLine();
                primality.Add(int.Parse(linePrim.Split(' ')[0]), int.Parse(linePrim.Split(' ')[1]));
            }
            System.Console.WriteLine("Loaded primalities.");
            
            string line;

            // Read the file and display it line by line.
            System.IO.StreamReader file =
               new System.IO.StreamReader("homework.txt");
            System.IO.StreamWriter output = new System.IO.StreamWriter("homework_done.txt");
            int count = int.Parse(file.ReadLine());
            for (int i = 0; i < count; i++)
            {
                line = file.ReadLine();

                int a, b, k;
                a = int.Parse(line.Split(' ')[0]);
                b = int.Parse(line.Split(' ')[1]);
                k = int.Parse(line.Split(' ')[2]);
                
                int primalityCounter = 0;
                for (int j = a; j <= b; j++)
                    if (primality[j] == k) primalityCounter++;

                String outLine = "Case #" + (i+1) + ": " + primalityCounter;
                output.WriteLine(outLine);
                System.Console.WriteLine(outLine);
            }

            file.Close();
            output.Close();

            // Suspend the screen.
            System.Console.WriteLine("Done");
            Console.ReadLine();
        }        
    }
}
