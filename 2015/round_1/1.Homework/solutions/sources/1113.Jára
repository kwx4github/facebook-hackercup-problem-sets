import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class Primes {

    static private List<Integer> primes = new ArrayList<Integer>();
    static private int[] cache = new int[10000001];

    static {
        for (int i = 0; i <= 10000000; i++) {
            cache[i] = -1;
        }
    }

    private static void generatePrimes()
    {
        boolean[] isPrime = new boolean[10000000]; // 10^7

        for (int i = 2; i < 10000000; i++)
        {
            if (!isPrime[i])
            {
                primes.add(i);

                for (int j = i; j < 10000000; j += i)
                    isPrime[j] = true;
            }
        }
    }

    private static int primacity(int num) {

        int factors = 0;

        for (Integer prime : primes) {

            if (prime * prime > num) break;

            if (num % prime == 0) {
                factors++;

                while (num % prime == 0) {
                    num /= prime;
                }
            }
        }

        if (num > 1) factors++;
        return factors;
    }

    public static void main(String[] args) throws Exception {
        generatePrimes();


        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        final int count = Integer.parseInt(br.readLine());

//        System.out.println(primacity(count));
//        System.exit(0);

        for (int i = 1; i <= count; i++) {

            String[] numbers = br.readLine().split(" ");

            int a = Integer.parseInt(numbers[0]);
            int b = Integer.parseInt(numbers[1]);
            int k = Integer.parseInt(numbers[2]);

            int result = 0;

            for (int j = a; j <= b; j++) {
                int primacity;

                if (cache[j] != -1) {
                    primacity = cache[j];
                } else {
                    primacity = primacity(j);
                    cache[j] = primacity;
                }
                if (primacity == k) {
                    result++;
                }
            }

            System.out.println("Case #" + i + ": " + result);
        }
    }
}
