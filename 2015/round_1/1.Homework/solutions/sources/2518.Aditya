//Aditya Dixit
#include <iostream>
#include <cstdio>
#include <vector>
#include <cstring>
#include <string>
#include <map>
#include <functional>
#include <algorithm>
#include <cstdlib>
#include <iomanip>
#include <stack>
#include <queue>
#include <deque>
#include <limits>
#include <cmath>
#include <numeric>
#include <set>
#include <ctime>
using namespace std;

#define gx getchar_unlocked
#define px putchar_unlocked
#define ps putchar_unlocked(' ')
#define pn putchar_unlocked('\n')
#define LIM
#define MOD 1000000007
#define pb push_back
#define mp make_pair
#define MEM(a, b) memset(a, (b), sizeof(a))
#define CLR(a) memset(a, 0, sizeof(a))
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define rep(i,n) for(int i =0; i < n ; i++)
#define reps(i,x,y) for(int i =x; i < y ; i++)
#define repb(i,x,y) for(int i =x; i >= y ; i--)
#define all(a) a.begin(),a.end()
#define ff first
#define ss second
#define DBG(vari) cerr<<#vari<<" ==> "<<(vari)<<endl;
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)
#define sqr(x) ((x)*(x))
#define EPS 1e-9

const int INF = 2000000000;
const double pi=acos(-1.0);

typedef long long int i64;
typedef long int i32;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef vector <PII> VPII;

bool pr[10000007];
int primes[10000007];
int cnt[10][10000007];
//vector <bool> pr( 10000007,true);
//vector <int> primes( 10000007,0);
//vector <int> cnt[10];
void sieve(){
	//clock_t s,e;
	//s = clock();
	MEM(pr,true);
	reps(i,2,10000007){
		if (pr[i]){
			primes[i]++;
			for(int j = i+i ; j < 10000007 ; j+=i){
				pr [j] = false;
				primes[j]++;
			}
		}
	}
	//rep(i,15) cout << i << " " << primes[i] << endl;
	rep(i,10) cnt[i][0] = 0;//cnt[i].pb(0);
	reps(i,1,9){
		int x = 0;
		reps(j,1,10000007){
			x = cnt[i][j-1] + (primes[j] == i);
			//cnt[i].pb(x);
			cnt[i][j] =x;
		}
	}
	//e = clock();
	//cout << (double)(e-s)/CLOCKS_PER_SEC << endl;
}

int main()
{
	//freopen("aain.txt","r",stdin);
	//freopen("aaout.txt","w",stdout);
	
	//ios_base :: sync_with_stdio(false);
	
	sieve();
	int t,tt = 1;
	cin >> t;
	
	while(t--){
		i64 a,b,k;
		cin >> a >> b >> k;
		
		cout << "Case #" << tt <<": ";
		if( k > 8) cout << 0 << endl;
		else{
			cout << cnt[k][b] - cnt[k][a-1] << endl;
		}
		tt++;
	}
	return 0;
}
