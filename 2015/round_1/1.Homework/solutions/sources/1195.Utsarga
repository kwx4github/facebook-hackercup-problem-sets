
MAX = pow(10, 7) + 1
primacity = [0]*MAX
max_primacity = 0

def calculate_primacities():
	for i in range(2, MAX):
		if primacity[i] != 0:
			continue
		for j in range(i, MAX, i):
			primacity[j]+=1

def trial(A, B, K):
	k = 0
	if K > max_primacity:
		return k
	for i in range(A, B+1):
		if primacity[i] == K:
			k += 1
	return k

def parse():
	A, B, K = tuple([int(i) for i in raw_input().split()])
	return (A, B, K)

calculate_primacities()
max_primacity = max(primacity)
T = int(raw_input())
for t in range(1, T+1):
	(A, B, K) = parse()
	print "Case #%d: %s" % (t, trial(A, B, K))