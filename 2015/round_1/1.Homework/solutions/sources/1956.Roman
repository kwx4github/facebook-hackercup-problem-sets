import java.io.InputStreamReader;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.io.FileInputStream;
import java.util.StringTokenizer;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 * @author Rubanenko
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream;
		try {
			inputStream = new FileInputStream("fbhc.in");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("fbhc.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		fbhc solver = new fbhc();
		solver.solve(1, in, out);
		out.close();
	}
}

class fbhc {
    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int testCases = in.nextInt();
        final int MX = 10000000;
        int[] p = new int[MX + 10];
        for (int i = 2; i <= MX; i++) {
            if (p[i] == 0) {
                int x = i;
                while (x <= MX) {
                    p[x] = i;
                    x += i;
                }
            }
        }
        int[] ans = new int[MX + 10], used = new int[MX + 10];
        for (int i = 2; i <= MX; i++) {
            int x = i;
            while (x > 1) {
                if (used[p[x]] != i) {
                    ans[i]++;
                }
                used[p[x]] = i;
                x /= p[x];
            }
        }
        for (int test = 1; test <= testCases; test++) {
            out.printf("Case #%d: ", test);
            int l = in.nextInt();
            int r = in.nextInt();
            int k = in.nextInt();
            int res = 0;
            for (int i = l; i <= r; i++) {
                if (ans[i] == k) {
                    res++;
                }
            }
            out.println(res);
        }
    }
}

class InputReader {
    private BufferedReader reader;
    private StringTokenizer tokenizer;

    public InputReader(InputStream inputStream) {
        reader = new BufferedReader(new InputStreamReader(inputStream));
    }

    public String nextLine() {
        String line = null;
        try {
            line = reader.readLine();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return line;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens())
            tokenizer = new StringTokenizer(nextLine());
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }
}

