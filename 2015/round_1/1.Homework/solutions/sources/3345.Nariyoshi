#include<bits/stdc++.h>

#define REP(i,s,n) for(int i=s;i<n;i++)
#define rep(i,n) REP(i,0,n)

using namespace std;

typedef long long ll;

ll A,B,K;

const int  MAX = 10000100;

vector<int> prime;
bool isntprime[MAX+1]; // これはグローバルにしておくことで0(false)に初期化される グローバルでないなら0に初期化する必要がある
	
void init(){
isntprime[0] = isntprime[1] = true;
  int j;	
  for(int i=2;i<= MAX;i++)if(!isntprime[i])for(prime.push_back(i),j=2*i;j<=MAX;j+=i)isntprime[j] = true;
}


ll prime_factor(ll n) {
  map<ll,int> res;
  //for(ll i=2;i*i<=n;i++) {
  rep(j,(int)prime.size()){
    ll i = prime[j];
    if( i > n ) break;
    while(n % i == 0) {
      ++res[i];
      n /= i;
    }
  }
  if(n != 1)res[n] = 1;
  return res.size();
}

int BruteForce(){
  int counter = 0;
  for(ll i=A;i<=B;i++) if( prime_factor(i) == K ) ++counter;
  return counter;
}

int values[MAX];
int divisors[MAX];

void func(){
  rep(i,MAX) values[i] = i, divisors[i] = 0;
  for(ll i=2;i<ll(MAX);i++) if( values[i] != 1 ) {
      assert( values[i] == i );
      for(ll j=i;j<ll(MAX);j+=i){
        bool cost = false;
        while( values[j] % i == 0 ){
          values[j] /= i;
          cost = true;
        }
        divisors[j] += cost;
      }
  }
}

int main(){

  func();
  //init();
  int T,CNT=1;
  /*
  REP(i,2,10000001){
    if( i % 1000000 == 0 ) cout << i << endl;
    if( divisors[i] != prime_factor(i) ) {
      cout << i << " : " << divisors[i] << " != " << prime_factor(i) << endl;
    }
    assert( divisors[i] == prime_factor(i));
  }
  */
  cin >> T;
  while( T-- ){
    cin >> A >> B >> K;
    int counter = 0;
    for(ll i = A; i <= B; i++ ) if( divisors[i] == K ) ++counter;
    cout << "Case #" << CNT++ << ": " << counter << endl;
    //cout << "Case #" << CNT++ << ": " << BruteForce() << endl;
  }
  return 0;
}
