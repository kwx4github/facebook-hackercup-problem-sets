#include <iostream>
#include <vector>
#include <set>
#include <cmath>
using namespace std;
const int max_number = 10000000;
bool prime[max_number + 1];
vector<int> primes;
vector<set<int> > primes_set(max_number + 1, set<int>());
void create_primes() {
  for (int i = 2; i <= max_number; ++i)
    prime[i] = true;
  int sqrt_number = static_cast<int>(sqrt(max_number));
  for (int i = 2; i <= sqrt_number; ++i) {
    if (prime[i] == false)
      continue;
    int j = i * i;
    while (j <= max_number) {
      prime[j] = false;
      j = j + i;
    }
  }
  for (int i = 2; i <= max_number; ++i) {
    if (prime[i] == true)
      primes.push_back(i);
  }
  for (int i = 2; i <= max_number; ++i) {
    if (prime[i] == true) {
      primes_set[i].insert(i);
    } else {
      for ( int j = 0; j < primes.size(); ++j) {
        int prime_number = primes[j];
        if (i % prime_number == 0) {
          primes_set[i] = primes_set[i / prime_number];
          primes_set[i].insert(prime_number);
          break;
        }
      }
    }
  }
}
int main() {
  create_primes();
  int T;
  cin >> T;
  for (int i = 1; i <= T; ++i) {
    int A, B, K;
    cin >> A >> B >> K;
    int number = 0;
    for (int j = A; j <= B; ++j) {
      if (primes_set[j].size() == K)
        ++number;
    }
    cout << "Case #" << i << ": " << number << endl;
  }
}

