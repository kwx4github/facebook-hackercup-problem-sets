#include <iostream>
#include <cmath>

using namespace std;

#define MAXN 10000005

int P[MAXN];
int getP(int n){
    for (int i = 2; i < sqrt(n)+1; i++)
        if (n % i == 0){
            while (n%i==0) n/=i;
            return 1+P[n];
        }
    return 1;
}
int main(){
    freopen("A.in","r",stdin);
    freopen("A.out","w",stdout);
    for (int i = 2; i < MAXN; i++)
        P[i] = getP(i);
    int N;
    cin>>N;
    for (int i = 0; i < N; i++){
        int a, b, k;
        cin>>a>>b>>k;
        int r = 0;
        while (a <= b){
            r += (P[a]==k);
            a++;
        }
        cout<<"Case #"<<i+1<<": "<<r<<"\n";
    }
    return 0;
}
