#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>

using namespace std;

const int N = 10000001;
int lp[N];
vector<int> primes;

vector<int> nums[32];

void sieve()
{
	memset(lp, 0, sizeof(lp));
	for (int i=2;i<N;i++)
	{
		if(lp[i]==0)
		{
			lp[i] = i;
			primes.push_back(i);
		}
		for(int j = 0; j < (int)primes.size() && primes[j] <= lp[i] && primes[j]*i < N; j++)
		{
			lp[primes[j]*i] = primes[j];
		}
	}

	for(int i=2;i<N;i++)
	{
		int x = i;
		int cnt = 0;
		while(true)
		{
			if(x==1)
				break;
			cnt++;
			int prime = lp[x];
			while(x % prime == 0)
				x /= prime;
		}
		nums[cnt].push_back(i);
	}
}

void solve()
{
	int a, b, k;
	cin >> a >> b >> k;
	if (k > 30)
	{
		cout << "0\n";
		return;
	}
	int ans = 0;
	for (int i = 0; i < (int)nums[k].size(); i++)
	{
		int x = nums[k][i];
		if (x < a)
			continue;
		if (x > b)
			break;
		ans++;
	}
	cout << ans << "\n";
}

int main()
{
	sieve();
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	cin.sync_with_stdio(false);
	int t;
	cin >> t;
	for(int tst = 1; tst <= t; tst++)
	{
		cout << "Case #" << tst << ": ";
		solve();
	}
}