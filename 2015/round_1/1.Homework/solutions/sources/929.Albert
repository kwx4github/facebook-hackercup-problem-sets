#include <iostream>
#include <vector>

using namespace std;

#define maxN 10000000

/*
void generatePrimes(vector<int>& primes, int N) {
  vector<bool> isPrime (N+1, true);
  for (int i=2; i<=N; i++) {
    if (isPrime[i]) {
      for (int j=2*i; j<=N; j+=i) {
        isPrime[j] = false;
      }
    }
  }
  for (int i=2; i<=N; i++) {
    if (isPrime[i]) {
      primes.push_back(i);
    }
  }
}
*/

void calcPrimacity(vector<int>& primacity, int N) {
  vector<bool> isPrime (N+1, true);
  for (int i=2; i<=N; i++) {
    if (isPrime[i]) {
      for (int j=i; j<=N; j+=i) {
        isPrime[j] = false;
        primacity[j]++;
      }
    }
  }
}

int main() {
  vector<int> primacity(maxN +1, 0);
  calcPrimacity(primacity, maxN);
  
  //for (int i=0; i<=50; i++) cout << i << ": " << primacity[i] << endl;
  
  int T;
  cin >> T;
  for (int t=0; t<T; t++) {
    int A, B, K;
    cin >> A >> B >> K;
    int num = 0;
    for (int i=A; i<=B; i++) if (primacity[i]==K) num++;
    cout << "Case #" << t+1 << ": " << num << endl;
  }
}