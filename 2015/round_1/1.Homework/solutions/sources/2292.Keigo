#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <iostream>
#include <queue>
#include <list>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <string>
#include <vector>
using namespace std;
#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)
#define rep(i,n) REP(i,0,n)
#define FOR(it,c) for(__typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)
#define ALLOF(c) (c).begin(), (c).end()
typedef long long ll;


#define MAX_PRIME 20000000 
bool isprime[MAX_PRIME+1]; 
vector<int> primes; 
void init_prime(){
  fill(isprime, isprime+MAX_PRIME+1, true); 
  isprime[0] = isprime[1] = false; 
  for(int i = 2; i <= MAX_PRIME; i++) { 
    if (isprime[i]) { 
      primes.push_back(i); 
      for(int j = i*2; j <= MAX_PRIME; j += i) 
      isprime[j] = false; 
    } 
  } 
}

int Pr[10000005];

int main(){
  init_prime();
  REP(i,1,10000005){
    Pr[i] = 0;
  }

  rep(i,primes.size()){
    int p = primes[i];
    while(p<10000005){
      Pr[p]++;
      p += primes[i];
    }
  }

  REP(i,1,10000005){
    if(Pr[i] == 0){
      Pr[i] = 1;
    }
  }


  int T;
  cin >> T;
  rep(t,T){
    int A, B, K;
    cin >> A >> B >> K;
    int ret = 0;
    REP(i,A,B+1){
      if(Pr[i] == K) ret++;
    }
    cout << "Case #" << t+1 << ": " << ret << endl;
  }
  
  return 0;
}
