#include <bits/stdc++.h>
using namespace std;
#define MAX 2000001
#define ll long long
int l ;
int primes[MAX] ;
bool sieve[MAX] ;
void genPrimes(){
    primes[l++] = 2 ;
    long long i,j ;
    for(j=4;j<MAX;j+=2)               sieve[j] = 1 ;
    for(i=3;i<MAX;i+=2){
        if(sieve[i]==0){
            primes[l++] = i ;
            for(j=i*i;j<MAX;j+=i)               sieve[j] = 1 ;
        }
    }
}
ll NumOfDiv(ll n){
    int tmp = sqrt((double)n),i ;
    ll ret = 0 ;
    for(i=0;primes[i]<=tmp;i++){
        if(n % primes[i] == 0){
            ret++;
            while(n % primes[i] == 0){
                n /= (ll)primes[i] ;
            }
            tmp = sqrt((double)n) ;
        }
    }
    if(n>1) ret++;
    return ret ;
}
int arr[10000000+5];
int lim[20];
int main(){
    std::ios_base::sync_with_stdio(false);
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    genPrimes();
    lim[0] = 1 ;
    for(int i = 1 ; i <10 ; i++){
        lim[i] = lim[i-1]*primes[i-1];
//        cout<<lim[i]<<endl;
    }
    for(int i = 1 ; i < 10000001 ; i++){
        arr[i] = NumOfDiv(i);
    }
    int T,Case=0,a,b,k;
    scanf("%d",&T);
    while(T--){
        scanf("%d %d %d",&a,&b,&k);
        int ret = 0 , i;
        if(k>=10)    ret = 0;
        else
            for(i = max(lim[k],a) ; i <=b ; i++){
                if(arr[i]==k)   ret++;
            }
        printf("Case #%d: %d\n",++Case,ret);
    }
}
