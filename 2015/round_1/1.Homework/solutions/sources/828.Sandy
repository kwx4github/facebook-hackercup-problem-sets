#include <stdio.h>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <fstream>
#include <stdlib.h>
#include <math.h>
#include <cmath>
#include <string.h>
#include <string>
#include <algorithm>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <limits.h>
#include <time.h>
#include <bitset>
#include <list>
#include <cassert>

#define EPS 1e-11
#define PI acos(-1)
#define LL long long
#define INF 1000000009
#define MP(a,b) make_pair(a,b)
#define PB(a) push_back(a)
#define OPENR(a) freopen(a,"r",stdin)
#define OPENW(a) freopen(a,"w",stdout)
#define pii pair<int,int>

int x4[4] = { 0, 0,-1, 1};
int y4[4] = {-1, 1, 0, 0};
int x8[8] = {-1,-1,-1, 0, 0, 1, 1, 1};
int y8[8] = {-1, 0, 1,-1, 1,-1, 0, 1};
int xhorse[8] = {1,2,1,2,-1,-2,-1,-2};
int yhorse[8] = {2,1,-2,-1,2,1,-2,-1};

using namespace std;

vector<int> prime;
int t;
bool isPrime[10000005];
int pr[10000005];

void sieve()
{
	prime.clear();
	memset(isPrime,true,sizeof(isPrime));
	prime.PB(2);
	for (int i=3;i<=10000000;i+=2)
	{
		if (isPrime[i])
		{
			prime.PB(i);
			for (int j=i*i;j>=0 && j<10000005 && i<=sqrt(10000005);j+=i) isPrime[j] = false;
		}
	}
}

int calc(int num)
{
	int res = 0;
	
	int pos = 0;
	while(num>1)
	{
		if (num%prime[pos]==0) res++;
		while(num%prime[pos]==0) num/=prime[pos];
		pos++;
	}
	
	return res;
}

int main()
{
	OPENW("homework.out");
	sieve();
	
	memset(pr,0,sizeof(pr));
	
	for (int i=0;i<prime.size();i++)
	{
		fprintf(stderr, "%d\n",i);
		int p = prime[i];
		for (int j=p;j<=10000000;j+=p)
		{
			pr[j]++;
		}
	}
	
	scanf("%d",&t);
	
	for (int tc=1;tc<=t;tc++)
	{
		int a,b,k;
		scanf("%d %d %d",&a,&b,&k);
		int ans = 0;
		for (int i=a;i<=b;i++)
		{
			if (pr[i]==k) ans++;
		}
		printf("Case #%d: %d\n",tc,ans);
	}
	return 0;
}

