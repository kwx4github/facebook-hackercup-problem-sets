#include <iostream>

#define MAX_N 10000005
#define MAX_NUM_P 10

using namespace std;

int tests, a, b, k, maxnump, answer;
int dp[MAX_NUM_P][MAX_N], cnt[MAX_N];

inline bool isprime(int i) {
	for (int j = 2 ; j * j <= i ; j ++) {
		if (i % j == 0) {
			return false;
		}
	}
	return true;
}

inline void precomp() {
	for (int i = 2 ; i < MAX_N ; i ++) {
		if (isprime(i)) {
			for (int j = i ; j < MAX_N ; j += i) {
				cnt[j] ++;
			}
		}
	}
	for (int i = 2 ; i < MAX_N ; i ++) {
		dp[cnt[i]][i] ++;
	}
	for (int j = 0 ; j < MAX_NUM_P ; j ++) {
		for (int i = 1 ; i < MAX_N ; i ++) {
			dp[j][i] += dp[j][i - 1];
		}
	}
}

int main() {
	precomp();
    cin >> tests;
    for (int test = 0 ; test < tests ; test ++) {
    	cin >> a >> b >> k;
    	if (k >= MAX_NUM_P) {
    		answer = 0;
    	} else {
    		answer = dp[k][b] - dp[k][a - 1];
    	}
		printf("Case #%d: %d\n", test + 1, answer);
    }
    return 0;
}
