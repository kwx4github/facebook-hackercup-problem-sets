#include <fstream>
#include <vector>
#include <iostream>

#include <cmath>
#include <cstring>
#include <cstdio>
using namespace std;

const int MAX_VAL = 10000000;
const int MAX_FACTOR = (int) sqrt(MAX_VAL) + 2;

int Cnt[MAX_VAL][10];
vector < int > primes;
bool isPrime[MAX_VAL];

int main() {
    /*
    memset(isPrime, 1, sizeof(isPrime));

    isPrime[1] = 0;
    for(int i = 2; i < MAX_FACTOR; i += 2)
        isPrime[i] = 0;

    primes.push_back(2);
    for(int i = 3; i < MAX_FACTOR; i += 2)
        if(isPrime[i]) {
            primes.push_back(i);
            for(int j = i + i; j < MAX_FACTOR; j += i)
                isPrime[j] = 0;
        }

    ofstream g("primacity.txt");

    for(int i = 1; i <= MAX_VAL; ++i) {
        int cnt = 0, x = i;
        for(int j = 0; j < (int) primes.size() && primes[j] * primes[j] <= x; ++j)
            if(i % primes[j] == 0) {
                ++cnt;
                while(x % primes[j] == 0)
                    x /= primes[j];
            }
        if(x > 1)
            ++cnt;

        g << cnt << " ";
    }

    g.close();
    */

    // ----------------------------------



    freopen("primacity.txt", "r", stdin);

    for(int i = 1, x; i <= MAX_VAL; ++i) {
        scanf("%d", &x);

        for(int j = 1; j <= 9; ++j)
            Cnt[i][j] = Cnt[i - 1][j];
        Cnt[i][x]++;
    }

    fclose(stdin);

    ifstream f("data.in");
    ofstream g("data.out");

    int T;

    f >> T;
    for(int test = 1; test <= T; ++test) {
        int A, B, K;

        f >> A >> B >> K;

        int ans = 0;
        if(K <= 9)
            ans = Cnt[B][K] - Cnt[A - 1][K];

        g << "Case #" << test << ": " << ans << "\n";
    }

    f.close();
    g.close();

    return 0;
}
