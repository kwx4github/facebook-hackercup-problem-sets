#include <iostream>
#include <cstring>
#include <cstdio>
#include <cassert>
#include <queue>
using namespace std;
const int N = 10000100;
int tag[N], p[N], primacity[N];
int get_prime() {
  int cnt = 0;
  for (int i = 2; i < N; i++) {
    if (!tag[i]) {
      p[cnt++] = i;
      primacity[i] = 1;
    }
    for (int j = 0; j < cnt && p[j] * i < N; j++) {
      tag[i * p[j]] = 1;
      primacity[i * p[j]] = primacity[i] + 1;
      if (i % p[j] == 0) {
        primacity[i * p[j]]--;
        break;
      }
    }
  }
  return cnt;
}

int main() {
  get_prime();
  int cas, a, b, k;
  scanf("%d", &cas);
  for (int i = 1; i <= cas; i++) {
    scanf("%d %d %d", &a, &b, &k);
    int res = 0;
    for (int j = a; j <= b; j++) {
      if (primacity[j] == k) {
        res++;
      }
    }
    printf("Case #%d: %d\n", i, res);
  }
  return 0;
}
