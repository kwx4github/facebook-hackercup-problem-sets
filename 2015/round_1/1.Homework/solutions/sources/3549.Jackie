from __future__ import print_function
import sys

def solve(left_bound, right_bound, primacity):
    return len(filter(lambda x: x == primacity, primacities[left_bound:(right_bound + 1)]))

def prime_factorizations(n):
  sieve = [[] for x in xrange(0, n)]
  for i in xrange(2, n):
    if not sieve[i]:
      q = i
      while q < n:
        for r in xrange(q, n, q):
          sieve[r].append(i)
        q *= i
  return sieve

primacities = [len(set(p)) for p in prime_factorizations(10000001)]

def main():
    with open(__file__.replace("py", "in"), "r") as input_file:
        output_file = open(__file__.replace("py", "out"), "w")
        case_count = next(input_file)
        case_counter = 1
        for case in input_file:
            A, B, K = [int(n) for n in case.split(" ")]
            print("Case #{0}: {1}".format(
                case_counter, solve(A, B, K)), file=output_file)
            case_counter += 1

if __name__ == '__main__':
    status = main()
    sys.exit(status)
