#include <iostream>
#include <cmath>

using namespace std;

#define MAX 10000001

bool prime[MAX+1];
long long int nPrimalidad[MAX+1];

void criba()
{
    
    for (long long int i = 2; i <= MAX; i++)
	   prime[i] = true;
    for (long long int i = 2; i <= MAX/2; i++)
	   if (prime[i])
            for (long long int j = 2*i; j <= MAX; j += i)
			     prime[j] = false;
}
/*
void primalidad()
{
    
    for (int i = 2; i <= MAX; i++)
    {
        nPrimalidad[i]=0;
        if(prime[i]==true)
        {
            prime[i]=1;
        }
        else
        {
            for(int j=i-1;j>=2;j--)
            {
                if(prime[j]==true && i%j==0)
                {
                    nPrimalidad[i]=nPrimalidad[i]+1;
                }
            }
        }
    }
}
*/


void primalidad()
{
    
    for (long long int i = 2; i <= MAX; i++)
    {
        nPrimalidad[i]=0;
    }
    
    for (long long int i = 2; i <= MAX; i++)
    {
        if(prime[i]==true)
        {
            for (long long int j = i; j <= MAX; j=j+i)
            {
                nPrimalidad[j]=nPrimalidad[j]+1;
            }
        }
    }

}


int main()
{
    // Hacemos la criba de eratostenes
    criba();
    // Obtenemos la primalidad de todos
    primalidad();
    long long int T,A,B,K,aux;
    long long int i,j;
    cin >> T;
    
    for(i=0;i<T;i++)
    {
        cin >> A >> B >> K;
        
        if(A>B)
        {
            aux=A;
            A=B;
            B=aux;
        }
        long long int res;
        res=0;
        for(j=A;j<=B;j++)
        {
            if(nPrimalidad[j]==K)
            {
                res++;
            }
        }
        cout << "Case #"<<(i+1)<<": "<<res <<endl;
        
    }
    
    
  
    return 0;
}
