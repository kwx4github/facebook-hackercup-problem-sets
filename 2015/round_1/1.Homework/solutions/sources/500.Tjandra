/*
	Filename:		AAA.c
	Language:		C
	Author:			Tjandra Satria Gunawan
	OS:			Windows 8 Pro, 64-bit
	Processor Type:		Intel(R) Core(TM) i7-2670QM CPU @ 2.20GHz
	RAM:			4,0 GB + 2,0 GB DDR3
	Compiler:		gcc (tdm64-2) 4.8.1
	Compile options:	gcc -O2 -o AAA AAA.c
	Method:			Numeric Sieve, Binary Search
	Complexity:		O(~30 Million) precompute + O(log(A)+log(B)) per test case
*/
#include<stdio.h>
#include<stdlib.h>
#define bfr 262144
#define lim 10000001
typedef unsigned u;
u *D[9],Di[9];
char S[lim];
u F(u n,u k)
{
	if(k>8||D[k][0]>n)return 0;
	u lo=0,hi=Di[k],mi;
	while((mi=(lo+hi)>>1)>lo)
	{
		if(D[k][mi]>n)hi=mi;
		else lo=mi;
	}
	return hi;
}
int main()
{
	u t=0,T,n,x,y,a,b;
	D[0]=(u*)calloc(1,sizeof(u));
	D[1]=(u*)calloc(665134,sizeof(u));
	D[2]=(u*)calloc(2536838,sizeof(u));
	D[3]=(u*)calloc(3642766,sizeof(u));
	D[4]=(u*)calloc(2389433,sizeof(u));
	D[5]=(u*)calloc(691209,sizeof(u));
	D[6]=(u*)calloc(72902,sizeof(u));
	D[7]=(u*)calloc(1716,sizeof(u));
	D[8]=(u*)calloc(1,sizeof(u));
	D[0][0]=Di[0]=1;
	for(n=2;n<lim;++n)
	{
		if(!S[n])for(y=n;y<lim;y+=n)++S[y];x=S[n];
		D[x][Di[x]++]=n;
	}
	//for(x=0;x<9;++x)printf("%u\n",Di[x]);
	for(scanf("%u",&T);t++<T;)
	{
		scanf("%u%u%u",&a,&b,&x);
		if(b<a){y=a;a=b;b=y;}
		printf("Case #%u: %u\n",t,F(b,x)-F(a-1,x));
	}
	return 0;
}
