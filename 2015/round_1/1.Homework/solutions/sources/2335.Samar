
//This  code is created by Samar Singh Holkar
#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include<list>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define sd(x) scanf("%d",&x)
#define sfd(x) scanf("%d",&x)
#define sfld(x) scanf("%lld",&x
#define pf printf

#define LL long long
#define ll long long
#define LD long double
#define ld long double
#define PB push_back
#define pb push_back
#define MP make_pair
#define mp make_pair
#define F first
#define S second

#define pii pair<int,int>
#define vi vector<int>
#define fr(i,n) for( int i=0; i<=n; i++)
#define frm(i,m,n) for(int i=m; i<=n; i++)
#define N 200000

int prime[10000010];

//int divi[10000010][8];

int cot=0;

void sieve(){

    memset(prime,0,sizeof(prime));

    prime[0] = 1;
    prime[1] = 1;
    prime[2] = 0;
    prime[3] = 0;


    for(int i=2;i<=10000000;i++){

        if(prime[i]==0){

            for(int j = 2*i;j<=10000000;j+=i){

                prime[j]++;
            }

            prime[i] = 1;
        }
    }

}

/*void filler(){

    memset(divi,0,sizeof(0));

    for(int j=0;j<8;j++){

        for(int i=1;i<=10000000;i++){

            divi[]
        }
    }


}*/
/*
void listing(){

    for(int i=1;i<=10000000;i++){

        if(prime[i]==0){

            p[cot++] = i;
        }
    }

}

ll modMul(ll x, ll y,ll z) {
    ll result = ((ll)x * y) % z;
    return result;
}

ll poww(ll x,ll y,ll z) {
    if (y == 0)
        return 1;

    ll sqrt = poww(x, y / 2, z);
    ll result = modMul(sqrt, sqrt, z);

    if (y % 2 == 1)
        result = modMul(result, x, z);

    return result;
}



void divisors(){



    divi[0] = 0;
    divi[1] = 1;
    divi[2] = 1;

    for(int i=3;i<=10000000;i++){

        int counter = 0;

        for(int j=0;j<cot;j++){

            if(i%p[j]==0){

               counter++;

               while(i%p[j]!=0){

                    i/=p[j];
               }


            }
        }

        divi[i] = counter;

    }

}
*/
int main(){

    sieve();

    //listing();

    //divisors();

    //cout<<divi[1000000]<<" ";

    ll t,p=0; cin>>t;

    while(p<t){

    int a,b,k; cin>>a>>b>>k;

        int count=0;
        if(k>=10){
        	cout<<"Case #"<<p+1<<": "<<count<<"\n";
        	continue;
        }

        for(int i=a;i<=b;i++){


            if(prime[i]==k) count++;
        }

        ///main work



       cout<<"Case #"<<p+1<<": "<<count<<"\n";
       p++;

   /* for(int i=1;i<=100;i++){

        cout<<i<<" "<<prime[i]<<"\n";
    }*/

    //cout<<divi[29]<<" ";
}}

