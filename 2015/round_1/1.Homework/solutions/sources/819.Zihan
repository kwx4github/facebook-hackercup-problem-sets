#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>

using namespace std ;
#define rep( i, j, k ) for( i = j ; i <= k ; ++i )
#define drep( i, j, k ) for( i = j ; i >= k ; --i ) 
#define Maxn 10000015
#define MaxP 1000015
#define LL long long 

bool vis[Maxn] ;
int T, A, B, C, Case, P[MaxP] ;
set<int> S ;

inline void Prime()
{
	LL i, j ;
	
	for( i = 2 ; i <= Maxn ; ++i ) {
    	if( ! vis[i] ) P[++P[0]] = i ;
    	rep( j, 1, P[0] ) {
			if( i * P[j] > Maxn ) break ;
        	vis[i*P[j]] = 1 ; 
			if( i % P[j] == 0 ) break ;
      	}
  	}	
}

void Dfs( int st, LL mul, int p, int dep )
{
	int i ;
	
	if(dep == C) 
		S.insert( mul ) ; 
	
	if( mul*P[st] <= p )
		Dfs(st, mul*P[st], p, dep) ;
	for( i = st+1 ; i <= P[0] ; ++i ) 
		if(mul * P[i] <= p) 
			Dfs(i, mul*P[i], p, dep+1) ;
		else 
			break ;
}

inline int Calc( int p ) 
{
	int i ;
	
	S.clear() ;
	rep( i, 1, P[0] )
		if( P[i] <= p ) 
			Dfs( i, P[i], p, 1 ) ;
		else break ;
	return S.size() ;
}

int main()
{
	Prime() ;
	freopen("input.txt","r",stdin) ;
	freopen("output.txt","w",stdout) ;
		
	for(scanf("%d", &T) ; T-- ; ) {
		scanf("%d%d%d", &A, &B, &C) ;
		
		printf("Case #%d: %d\n", ++ Case, Calc(B) - Calc(A-1)) ;
	}
	return 0 ; 
}

