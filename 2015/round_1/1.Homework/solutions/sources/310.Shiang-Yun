#include <stdio.h>
#include <string.h>
#include <map>
#include <set>
#include <queue>
#include <vector>
#include <iostream>
#include <sstream>
#include <algorithm>
#include <assert.h>
using namespace std;
#define MAXN 10000005
#define maxL (10000000>>5)+1
#define GET(x) (mark[x>>5]>>(x&31)&1)
#define SET(x) (mark[x>>5] |= 1<<(x&31))
int mark[maxL];
int f[MAXN], dp[MAXN] = {};
void sieve() {
    int i, j, k;
    SET(1);
    int n = 10000000;
    for(i = 2; i <= n; i++) {
        if(!GET(i)) {
//            for (k = n/i, j = i*k; k >= i; k--, j -= i)
//                SET(j);
            for (int j = i + i; j <= n; j += i)
                SET(j), f[j] = i;
            f[i] = i;
        }
    }
}
map<int, vector<int> > R;
int main() {
    sieve();
    for (int i = 2; i <= 10000000; i++) {
        int t = i;
        while (t % f[i] == 0)   t /= f[i];
        dp[i] = dp[t] + 1;
        R[dp[i]].push_back(i);
    }
    int cases = 0;
    int testcase, A, B, K;
    scanf("%d", &testcase);
    while (testcase--) {
        scanf("%d %d %d", &A, &B, &K);
        
        int ret = 0;
        
        for (int i = A; i <= B; i++) {
            if (dp[i] == K)
               ret++;
        }
        
        printf("Case #%d: %d\n", ++cases, ret);
    }
    return 0;
}
/*
 5
 5 15 2
 2 10 1
 24 42 3
 1000000 1000000 1
 1000000 1000000 2

 */
