#include <bits/stdc++.h>
/* 
 *    Always code as if the guy who ends up maintaining your code will be a
 *    violent psychopath who knows where you live.
 *       â€” Rick Osborne
 *           */
using namespace std;
#define all(v) v.begin(),v.end()
#define read(a) freopen("a.txt","r",stdin)
#define write(b) freopen("b.txt","w",stdout)
#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(min(a,b),min(c,d))
#define max4(a,b,c,d) max(max(a,b),max(c,d))
#define maxall(v) *max_element(all(v))
#define minall(v) *min_element(all(v))
#define pb push_back
#define mk make_pair
#define REV(x) reverse(x.begin(),x.end())
#define SORT(v) sort(all(v))
#define UN(v) SORT(v), (v).earse(unique(all(v)),v.end())
#define common(a,b) SORT(a), SORT(b), a.erase(set_intersection(all(a),all(b),a.begin()),a.end())
#define uncommon(a,b) SORT(a), SORT(b), a.erase(set_symmetric_difference(all(a),all(b),a.begin()),a.end())
#define FILL(a,d) memset(a,d,sizeof(a))
#define LL long long
#define PI 2*acos(0.0)
#define pi pair<int,int>
#define MAXM 2147483647
#define MAXML 9223372036854775807LL
#define MODM 1000000007

LL primesmc[10001013];
LL primes  [10001013];

int binarySearch(vector < int > arr, int l, int r, int x) { 
	while (l <= r){
		int m = l + (r-l)/2; 
		if (arr[m] == x) return m; 
		if (arr[m] < x) l = m + 1; 
		else r = m - 1; 
		return -1;
	}
}

LL gcd(LL a, LL b){
	if(a==0)return(b);
	else return(gcd(b%a,a));
}

LL fastpow (LL a, LL n, LL temp) {
	if(n==0) return(1);
	if(n==1)return((a*temp)%MODM); 
	if(n&1)temp=(temp*a)%MODM;
	return(fastpow((a*a)%MODM,n/2,temp));
}

void init () {
	for (int i=2; i<10000001; i++) {
		primes[i] = 1;
	}
}

void init2() {

	for(int i=2;i<10000001;i++) {
		if(primes[i]==1) {
			for(int j=2*i;j<10000001;j+=i) {
				primes[j]=i;
			}
		}
	}
}

void markSolve () {
	primesmc[2]=1;

	for(int i=3;i<10000001;i++)	{
		if(primes[i]==1)	{
			primesmc[i]=1;
			continue;
		}
		int x = primes[i];
		int I = i;
		while(I%x==0) {
			I = I/x;
		}
		primesmc[i] = primesmc[I]+1;
	}
}

int main () {
	init(); init2(); markSolve();
	int tc; LL cnt=0;
	scanf("%d",&tc);
	while (tc--) {
		cnt++;
		LL a, b, k;
		scanf("%Ld%Ld%Ld",&a,&b,&k);

		LL finalAns = 0;
		for (int i=a; i<b+1; i++) {
			if (primesmc[i]==k) {
				finalAns++;
			}
		}
		printf("Case #%Ld: %Ld\n",cnt,finalAns);
	}
	return 0;
}
