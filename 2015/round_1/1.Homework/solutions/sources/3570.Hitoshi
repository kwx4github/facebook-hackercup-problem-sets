#include <bits/stdc++.h>

#define mp       make_pair
#define mt	 make_tuple
#define pb       push_back
#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

typedef    long long          ll;
typedef    unsigned long long ull;
typedef    pair<int,int>      pii;
typedef    pair<long,long>    pll;

const int INF=1<<29;
const double EPS=1e-9;
const int MOD = 100000007;

const int dx[]={1,0,-1,0},dy[]={0,-1,0,1};
const int MAX_AB = 10000010;
vector<int> primes;
vector<bool> is_prime;
int dp[MAX_AB];
void sieve(int N) {
  is_prime.clear();
  is_prime.resize(N,true);
  is_prime[0] = false;
  is_prime[1] = false;
  
  for (int i=2; i<N; ++i) {
    if (is_prime[i]) {
      primes.push_back(i);
      for (int j=2*i; j<N; j+=i) {
	is_prime[j] = false;
      }
    }
  }
}
int calc(int n){
  ll a = primes[0];
  int p = 0;
  set<int> count;
  while (n >= a * a){
    //    cout << "n = " << n << endl;
    if (n % a == 0){
      count.insert(a);
      n /= a;
    }else{
      a = primes[++p];
    }
  }
  count.insert(n);
  return count.size();
}

int main(){
  int T;

  sieve(MAX_AB);
  for (int i = 2; i <= 10000000; i++){
    dp[i] = calc(i);
    //    cout << i << " " << dp[i] << endl;
  }
  cerr << "query" << endl;
  int t = 1;
  cin >> T;
  while (T--){
    int l,r,k;

    cin >> l >> r >> k;
    int res = 0;
    for (int i = l; i <= r; i++){
      if (dp[i] == k){
	res++;
      }
    }
    printf("Case #%d: %d\n", t++, res);
  }
}
