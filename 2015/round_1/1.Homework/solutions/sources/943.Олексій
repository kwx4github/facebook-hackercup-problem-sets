#include <queue>
#include <vector>
#include <climits>
#include <iostream>
#include <algorithm>
using namespace std;
const int N = 10000005;
int lp[N + 1];
vector<int> pr;
vector<int> ans[30];
int main()
{
    freopen("homework.txt", "r", stdin); freopen("homework_out.txt", "w", stdout);

    for (int i = 2; i <= N; ++i)
    {
        if (lp[i] == 0)
        {
            lp[i] = i;
            pr.push_back (i);
        }
        for (int j = 0; j < (int)pr.size() && pr[j] <= lp[i] && i * pr[j] <= N; ++j)
            lp[i * pr[j]] = pr[j];
    }
    for(int i = 2; i <= N; ++i)
    {
        int cur = 0;
        int val = i;
        while(val > 1)
        {
            int tmp = lp[val];
            while(lp[val] == tmp)
            {
                val /= tmp;
            }
            cur++;
        }
        ans[cur].push_back(i);
    }
    int t;
    cin >> t;
    for(int i = 0; i < t; ++i){
        int val;
        int a, b;
        cin >> a >> b >> val;
        printf("Case# %d: ", i + 1);
        if(val > 25){
            cout << 0 << endl;
        }
        else{
            int l = lower_bound(ans[val].begin(), ans[val].end(), a) - ans[val].begin();
            int r = upper_bound(ans[val].begin(), ans[val].end(), b) - ans[val].begin();
            cout << r - l << endl;
        }
    }
    return 0;
}
