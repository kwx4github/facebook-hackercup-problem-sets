#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

const int MX = 1000 * 1000 * 10 + 1;
int pmc[MX];
typedef vector<int> vi;
vi a[10];

int main() {
	// finding primes & filling a
	int mx = 0;
	for (int i = 2; i < MX; ++i) {
		if (pmc[i] == 0) {
			for (int j = i * 2; j < MX; j += i)
				++pmc[j];
			++pmc[i];
		}
		a[pmc[i]].push_back(i);
		mx = max(mx, pmc[i]);
	}
	int t; cin >> t;
	for (int _cs = 1; _cs <= t; ++_cs) {
		int x, y, k; cin >> x >> y >> k;
		vi::iterator lower = lower_bound(a[k].begin(), a[k].end(), x);
		vi::iterator upper = upper_bound(a[k].begin(), a[k].end(), y);
		cout << "Case #" << _cs << ": " << (upper - lower) << endl;
	}
	return 0;
}
