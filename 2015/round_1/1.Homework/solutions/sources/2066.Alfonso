#include <bits/stdc++.h>
using namespace std;

const int
	MAXP = 100000005;

int T;
bool mark[MAXP];
vector<int> primes;
map<int, vector<int>> ans;

int main() {
	ios_base::sync_with_stdio(0);

	for (int i = 2; i * i < MAXP; ++i)
		if (!mark[i]) {
			for (int j = i * i; j < MAXP; j += i)
				mark[j] = true;
		}

	for (int i = 2; i < MAXP; ++i)
		if (!mark[i])
			primes.push_back(i);

	for (int i = 2; i < MAXP; ++i) {
		int prim = 0;
		int n = i;

		if (mark[i]) {
			for (int p : primes) {
				if (p * p > n) break;
				if (n % p == 0) {
					prim++;
					while (n % p == 0)
						n /= p;
				}			
			}
		}

		if (n > 1)
			prim++;

		ans[prim].push_back(i);
	}

	cin >> T;
	for (int test = 1; test <= T; ++test) {
		int a, b, k;
		cin >> a >> b >> k;
		
		int cnt = 0;
		if (ans.count(k))
			cnt = upper_bound(ans[k].begin(), ans[k].end(), b) -
			      lower_bound(ans[k].begin(), ans[k].end(), a);

		cout << "Case #" << test << ": " << cnt << endl;
	}
	
	return 0;
}
