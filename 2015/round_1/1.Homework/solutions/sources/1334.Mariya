#include <algorithm>
#include <iostream>
#include <map>
#include <set>
#include <string>
#include <vector>
#include <sstream>
#include <cstring>

using namespace std;

#define MAXN 10000001

int primacity[MAXN];
bool isprime[MAXN];

bool isPrime(int n) {
    if (isprime[n])
    {
        primacity[n] = 1;
        int i = 2;
        while (i * n < MAXN)
        {
            isprime[i * n] = false;
            ++primacity[i * n];
            ++i;
        }
    }
    return isprime[n];
}

void solve(int ind) {
    // input
    int A, B, K;
    cin >> A >> B >> K;

    int N = 0;
    // no primacity > 8 till 10^8
    if (K <= 8)
    {
        for (int i = A; i <= B; ++i)
        {
            if (primacity[i] == K)
                ++N;
        }
    }

    // output
    cout << "Case #" << ind << ": " << N << endl;
}

int main() {
    // precalc
    memset(primacity, 0, sizeof(primacity));
    memset(isprime, true, sizeof(isprime));
    for (int i = 2; i < MAXN; ++i)
    {
        isPrime(i);
    }

    int T;
    cin >> T;
    for (int i = 1; i <= T; ++i) {
        solve(i);
    }
}