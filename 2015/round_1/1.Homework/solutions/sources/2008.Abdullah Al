#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <cstring>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

#define pb push_back
#define clean(a,b) memset(a,b,sizeof(a))
#define oo 1<<20
#define dd double
#define ll long long
#define ull unsigned long long
#define ff float
#define EPS 10E-10
#define fr first
#define sc second
#define MAXX 10001000
#define PRIME_N 1000000
#define INFI 1<<30
#define SZ(a) ((int)a.size())
#define all(a) a.begin(),a.end()
#define MODD 1000000007
#define PI (2.0*acos(0))

//int rx[] = {0,-1,0,1,1,-1,-1,0,1}; //four direction x
//int ry[] = {0,1,1,1,0,0,-1,-1,-1};   //four direction y
//int rep[] = {1,1,4,4,2,1,1,4,4,2}; //repet cycle for mod
//void ullpr(){printf("range unsigned long long : %llu\n",-1U);} //for ull
//void ulpr(){printf("range unsigned long : %lu\n",-1U);} //for ull
//void upr(){printf("range unsigned : %u\n",-1U);} //for ull


int cnt[MAXX];
bool flag[MAXX];

int csum[MAXX][10];


void seive()
{
	for(int i = 2 ; i<MAXX ; i++)
	{
		if(!flag[i])
		{
			cnt[i] = 1;
			for(int j = i+i ; j<MAXX ; j+= i)
				flag[j] = 1 , cnt[j]++;
		}
	}
	// int mx =0;
	// for(int i = 1 ; i<MAXX ; i++) mx = max(mx , cnt[i]);
	// cout<<mx<<endl;

	for (int i = 0; i < MAXX; ++i)
	{
		for(int j= 0 ; j<=9 ; j++)
		{
			csum[i][j] = csum[i-1][j]+(cnt[i]==j);
		}
	}
	return;
}

int main()
{
	freopen("inA.txt" , "r" , stdin);
	freopen("outA.txt" , "w+" , stdout);

	seive();


	int tcase,cas=1;

	scanf(" %d",&tcase);

	while(tcase--)
	{
		int a,b,k;

		scanf(" %d %d %d",&a,&b,&k);

		printf("Case #%d: ",cas++ );

		if(k<=9)
			printf("%d\n", csum[b][k] - csum[a-1][k]);
		else printf("0\n");
	}
    return 0;
}
