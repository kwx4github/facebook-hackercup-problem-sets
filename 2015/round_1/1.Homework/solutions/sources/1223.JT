#include <cmath>
#include <cstdio>
#include <iostream>
#include <vector>
using namespace std;

const int N = 10000000;
vector<int> primes; int primacity[N+1];

void gen_primacity(){
	int lim, idx; bool p;
	primes.clear();
	primes.push_back(2);
	memset(primacity, 0, sizeof(primacity));
	primacity[2] = 1;
	for (int x = 3; x <= N; x += 2){
		lim = int(sqrt(double(x))); p = true;
		for (int y = 0; primes[y] <= lim; ++y){
			if (x % primes[y] == 0){ p = false; break; }
		}
		if (p){
			primes.push_back(x);
			primacity[x] = 1;
		}
	}
	for (int x = 4; x <= N; ++x){
		if (primacity[x] > 0) continue;
		for (idx = 0; x % primes[idx] != 0; ++idx);
		for (lim = x; lim % primes[idx] == 0 && lim > 0; lim /= primes[idx]);
		primacity[x] = primacity[lim] + 1;
	}
}

int main(){
	int run, num1, num2, prim, cnt;
	FILE * fin, * fout;
	freopen_s(&fin, "homework.txt", "r", stdin);
	freopen_s(&fout, "homework.out", "w", stdout);
	gen_primacity();
	cin >> run;
	for (int a = 1; a <= run; ++a){
		cin >> num1 >> num2 >> prim; cnt = 0;
		for (int x = num1; x <= num2; ++x)
			if (primacity[x] == prim) ++cnt;
		cout << "Case #" << a << ": " << cnt << endl;
	}
	return 0;
}
