#include <iostream>
#include <fstream>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <cstring>
#include <string>
#include <cmath>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <numeric>
#include <utility>
#include <functional>
#include <limits>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int ui;
typedef pair<int,int> pii;
typedef vector<vector<int> > graph;

const double pi = acos(-1.0);

#define oned(a, x1, x2) { cout << #a << ":"; for(int _i = (x1); _i < (x2); _i++){ cout << " " << a[_i]; } cout << endl; }
#define twod(a, x1, x2, y1, y2) { cout << #a << ":" << endl; for(int _i = (x1); _i < (x2); _i++){ for(int _j = (y1); _j < (y2); _j++){ cout << (_j > y1 ? " " : "") << a[_i][_j]; } cout << endl; } }

#define mp make_pair
#define pb push_back
#define fst first
#define snd second

#define endl '\n'

const int MAXN = 10000005;
const int MAXC = 10;

bool prime[MAXN];

int cnt[MAXN];

int sum[MAXC][MAXN];

int a, b, k;

void solve() {
	if(k >= MAXC) {
		cout << 0 << '\n';
	} else {
        cout << sum[k][b]-sum[k][a-1] << '\n';
	}
}

int main() {
	for(int i = 2; i < MAXN; i++) {
		prime[i] = true;
	}
	memset(cnt,0,sizeof(cnt));
    for(int i = 2; i*i < MAXN; i++) {
		if(prime[i]) {
			for(int j = i; j < MAXN; j += i) {
                cnt[j]++;
                prime[j] = false;
			}
		}
    }
    for(int c = 0; c < MAXC; c++) {
        for(int i = 1; i < MAXN; i++) {
			sum[c][i] = (cnt[i]==c) + sum[c][i-1];
        }
    }

	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	int T; cin >> T;
	for(int C = 1; C <= T; C++) {
		cin >> a >> b >> k;
        cout << "Case #" << C << ": ";
        solve();
	}
}
