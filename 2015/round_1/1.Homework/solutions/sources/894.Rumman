#include <sstream>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <complex>
#include <cmath>
#include <iostream>
#include <iomanip>
#include <string>
#include <vector>
#include <algorithm>
#include <bitset>
#include <list>
#include <string.h>
#include <assert.h>
#include <time.h>

using namespace std;

#define SZ(x) ((int)x.size())
#define all(a) a.begin(),a.end()
#define allr(a) a.rbegin(),a.rend()
#define clrall(name,val) memset(name,(val),sizeof(name));
#define EPS 10e-9
#define ll long long
#define ull long long unsigned
#define SF scanf
#define PF printf
#define psb(b) push_back((b))
#define ppb() pop_back()
#define oo (1<<28)
#define mp make_pair
#define fs first
#define sc second
#define rep(var,s,n,it) for(var=(s);var<(n);(var)+=it)
#define rev(var,s,n,it) for(var=(n-1);var>(s-1);(var)-=it)
#define Read freopen("homework.txt","r",stdin)
#define Write freopen("homeworkout.txt","w",stdout)
#define __ std::ios_base::sync_with_stdio (false)

ll BigMod(ll B,ll P,ll M){     ll R=1; while(P>0)      {if(P%2==1){R=(R*B)%M;}P/=2;B=(B*B)%M;} return R;} /// (B^P)%M

template<class T1> void deb(T1 e1){cout<<e1<<endl;}
template<class T1,class T2> void deb(T1 e1,T2 e2){cout<<e1<<" "<<e2<<endl;}
template<class T1,class T2,class T3> void deb(T1 e1,T2 e2,T3 e3){cout<<e1<<" "<<e2<<" "<<e3<<endl;}
template<class T1,class T2,class T3,class T4> void deb(T1 e1,T2 e2,T3 e3,T4 e4){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<endl;}
template<class T1,class T2,class T3,class T4,class T5> void deb(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<endl;}
template<class T1,class T2,class T3,class T4,class T5,class T6> void deb(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5,T6 e6){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<" "<<e6<<endl;}
#define SZ1 10050004
#define SZ2 677709

bool sieve[SZ1];
int prime[SZ2];
int sum[30][SZ1];
int cnt[SZ1];

void bit_sieve()
{
    int i,j,k,r;
    prime[0]=2;
    k=1;
    int lim=(int)sqrt(SZ1)+1;
    cnt[2]=1;
    for(int i=4;i<SZ1;i+=2) cnt[i]++;
    for(i=3; i<SZ1; i+=2)
    {
        if(!sieve[i])
        {
            prime[k++]=i;
            cnt[i]=1;
            if(i+i<SZ1)
            {
                r=i<<1;
                for(j=i+i; j<SZ1; j+=i)
                {
                    sieve[j]=true;
                    cnt[j]++;
                }
            }
        }
    }

    return;
}

int mx=0;

int main()
{
    #ifdef MAHDI
    Read;
    Write;
    #endif // MAHDI
    bit_sieve();
    for(int i=2;i<10000010;i++)
    {
        sum[cnt[i]][i]++;
        mx=max(mx,cnt[i]);
    }
    for(int i=0;i<=mx;i++)
    {
        for(int j=2;j<10000010;j++)
        {
            sum[i][j]+=sum[i][j-1];
        }
    }
    int test,a,b,k,cas=0;
    SF("%d",&test);
    while(test--)
    {
        SF("%d %d %d",&a,&b,&k);
        int res;
        if(k>10) res=0;
         res=sum[k][b]-sum[k][a-1];
        PF("Case #%d: %d\n",++cas,res);
    }
    return 0;
}













