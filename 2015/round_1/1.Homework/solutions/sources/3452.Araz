program conapp_A_3;

uses Windows, //DateUtils,
  SysUtils;

{$APPTYPE CONSOLE}
// Pascal forever! (c)2015 Araz Yusubov

type
  TTestCount = 1..100;
  TTestCases = array[TTestCount,1..3] of LongInt;
  PPrime = ^TPrime;
  TPrime = record
    num: LongInt;
    nxt: PPrime;
  end;
  TPrimes = record
    fst: PPrime;
    lst: PPrime;
  end;

const
  //FILE_IN = 'homework_example_input.txt';
  //FILE_OUT = 'A-test.out.wri';
  FILE_IN = 'homework.txt';
  FILE_OUT = 'A.out.wri';

var T_Count: TTestCount;
    T: TTestCount;
    Tests: TTestCases;
    Prims: PIntegerArray;
    A_Num, B_Num, K_Num, N_Num: LongInt;
    Primes: TPrimes;
    FileIn: TextFile;
    FileOut: TextFile;

function Primacity(a: LongInt): LongInt;
var p: PPrime; i,j,k: LongInt;
begin
  //Write(a:10);
  p:=Primes.fst;
  i:=0; j:=round(sqrt(a))+1;
  while (p<>nil)and(p^.num<=j) do begin
    if (a mod p^.num)=0 then begin
      inc(i);
      while (a mod p^.num)=0 do a := a div p^.num;
      //j := a;
      i := i+Prims^[a]; p := Primes.lst;
    end;
    p:=p^.nxt;
  end;
  if i=0 then begin // Add a new prime
    new(p); p^.num := a; p^.nxt := nil;
    Primes.lst^.nxt := p;
    Primes.lst := p;
    inc(i); // It divides itself
    //Write(a:10);
  end;
  Primacity := i;
  //Write(i:10); ReadLn;
end;

procedure FindNum;
var i: LongInt;
begin
  N_Num := 0;
  for i:=A_Num to B_Num do begin
    if Prims^[i]=K_Num then inc(N_Num);
  end;
end;

procedure ReadCases;
var i: LongInt;
begin
  B_Num := 0;
  for T:=1 to T_Count do begin
    ReadLn(FileIn, Tests[T,1], Tests[T,2], Tests[T,3]);
    if Tests[T,2]>B_Num then B_Num := Tests[T,2];
  end;
  // Create an array to store all primacity values
  Prims := GetMem(9999999*SizeOf(LongInt));
  if Prims=nil then begin
    WriteLn('Could not allocate memory');
    Halt(1);
  end;
  Prims^[2]:=1;
  // Find all primacity values
  for i:=3 to B_Num do begin
    Prims^[i]:=Primacity(i);
  end;
end;

begin
  AssignFile(FileIn, FILE_IN);
  AssignFile(FileOut, FILE_OUT);
  try
    Reset(FileIn);
    Rewrite(FileOut);
    ReadLn(FileIn, T_Count);
    B_Num := 1;
    // Create a list of prime numbers with 2 in it
    new(Primes.fst); Primes.fst^.num := 2; Primes.fst^.nxt := nil;
    Primes.lst := Primes.fst;
    ReadCases;
    for T:=1 to T_Count do begin
      Write('Case #', T, ': ');
      Write(FileOut, 'Case #', T, ': ');
      A_Num := Tests[T,1]; B_Num := Tests[T,2]; K_Num := Tests[T,3];
      FindNum;
      WriteLn(FileOut, N_Num);
      WriteLn(N_Num);
    end;
  finally
    CloseFile(FileOut);
    CloseFile(FileIn);
  end;
end.
