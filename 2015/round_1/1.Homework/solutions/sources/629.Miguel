#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <vector>
using namespace std;
const int MAX = 10000000;

char is_prime[MAX+2];
int primacity_cnt[MAX+2];
vector<int> primacity_numbers[MAX+2];

void PreCompute() {
  long long i, j;
  memset(is_prime, 1, sizeof is_prime);
  for (i = 2; i <= MAX; i++)
    if (is_prime[i]) {
      primacity_cnt[i]++;
      for (j = i+i; j <= MAX; j+=i) {
        is_prime[j] = 0;
        primacity_cnt[j]++;
      }
    }
  for (i = 2; i <= MAX; i++)
    primacity_numbers[primacity_cnt[i]].push_back(i);
}

int Query(int a, int b, int k) {
  if (k >= MAX)
    return 0;
  return upper_bound(primacity_numbers[k].begin(), primacity_numbers[k].end(), b)
          - lower_bound(primacity_numbers[k].begin(), primacity_numbers[k].end(), a);
}
int main() {
  int nt, t, a, b, k;
  PreCompute();
  scanf("%d", &nt);
  for (t = 1; t <= nt; t++) {
    scanf("%d %d %d", &a, &b, &k);
    printf("Case #%d: %d\n", t, Query(a, b, k));
  }
  return 0;
}
