#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>

using namespace std;


const int maxN  = 10000007;
int a,b,k;


//seive
bool p[maxN];
vector<int> primes ;
void sieve(){
    fill(p,p+maxN,true);
    p[0] = p[1] = false ;
    for (long long i = 2; i < maxN ; i++){
        if (p[i]){
            primes.push_back(i);
            for (long long j = i*i ; j< maxN ; j+=i)
                p[j] = false ;
        }
    }
}

int prime_factor_cnt(int n){
	int cnt= 0;
	for(int i = 0 ; primes[i]*primes[i] < n ; i++){
		if(n%primes[i]==0){
            cnt++;
			while(n%primes[i]==0)
    	        n/=primes[i];
		}
	}
    if (n>1)
    	cnt++;
    return cnt;
}

int main(){
	ifstream fin("a.in");
	ofstream fout("a.out");

	sieve();

	int tc;
	fin>>tc;
	
	for(int t = 1; t <= tc; t++){
		fin>>a>>b>>k;
		int cnt = 0;
		for(int i = a; i <= b; i++)
			if(prime_factor_cnt(i) == k)
				cnt++;

		cout<<"Case #"<<t<<": "<<cnt<<endl;
		fout<<"Case #"<<t<<": "<<cnt<<endl;
	}

	fout.close();
}