#if 1
#include <iostream>
#include <cassert>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

typedef long long li;

const int maxn =  1e7 + 7;

int ld[maxn], primes[maxn], psize = 0;
int cnt[maxn][10];

int main()
{
    for (int i = 2; i < maxn; ++i)
    {
        if(ld[i] == 0)
        {
            ld[i] = i;
            primes[psize++] = i;
        }
        for (int j = 0; j < psize; ++j)
        {
            if(primes[j] * 1ll * i >= maxn) break;
            if(ld[i] < primes[j]) break;
            ld[primes[j] * i] = primes[j];
        }
    }

    for (int i = 2; i < maxn; ++i)
    {
        int value = i;
        set<int> divs;
        while(value > 1)
        {
            divs.insert(ld[value]);
            value /= ld[value];
        }
        memcpy(cnt[i], cnt[i-1], sizeof(cnt[i]));
        cnt[i][divs.size()]++;
    }
    freopen("homework.txt", "r", stdin);
    freopen("homework0.txt", "w", stdout);
    int T; scanf("%d", &T);
    for (int t = 0; t < T; ++t)
    {
        int l, r, k;
        scanf("%d %d %d", &l, &r, &k);
        printf("Case #%d: %d\n", t + 1, k <= 10 ? cnt[r][k] - cnt[l-1][k] : 0);
    }
    return 0;
}
#endif