#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <ctime>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <cassert>
#include <bitset>
#include <numeric>

using namespace std;

const int MAXN = (int)1e7 + 1;

int minp[MAXN];

int main() {
	vector<int> prime;
	for (int i = 2; i < MAXN; ++i) {
		if (minp[i] == 0) {
			minp[i] = i;
			prime.push_back(i);
		}
		for (int j = 0; j < (int)prime.size(); ++j) {
			int k = prime[j];
			if (i * k >= MAXN) {
				break;
			}
			minp[i * k] = k;
			if (i % k == 0) {
				break;
			}
		}
	}

	int task;
	scanf("%d", &task);
	for (int task_id = 1; task_id <= task; ++task_id) {
		int a, b, k;
		scanf("%d %d %d", &a, &b, &k);
		int ret = 0;
		for (int i = a; i <= b; ++i) {
			vector<int> v;
			int x = i;
			while (x > 1) {
				v.push_back(minp[x]);
				x /= minp[x];
			}
			v.erase(unique(v.begin(), v.end()), v.end());
			if (v.size() == k) {
				++ret;
			}
		}
		printf("Case #%d: %d\n", task_id, ret);
	}
	return 0;
}

