#include<bits/stdc++.h>
using namespace std;
int cribaEcmc(bool b[],int p[], int m)
    {
    m++;
    int i,j,t,m2=sqrt(m);
    for(m>>=1,b[1]=1,i=2;i<=m2;)
        {
        for(t=(i<<1)-1,j=(t*t+1)>>1;j<=m;b[j]=1,j+=t);
        for(i++;b[i];i++);
        }
    for(j=i=1,p[0]=2;i<=m;i++)  if(!b[i]) p[j++]=(i<<1)-1;
    return j;
    }
int p[5000010];
bool b[5000010];
typedef long long ll;
int primacity(int N,int p[],int n)
   {
   int i=0,ans=0;
   while(N>1&&ll(p[i])*p[i]<=ll(N))
      {
      bool ok=0;
      while(N%p[i]==0)
         ok=1,N/=p[i];
      if(ok) ans++;
      i++;
      }
   if(N>1) ans++;
   return ans;
   }
struct prim
   {
   int p[8];
   };
prim s[10000001];
int pr[10000001];
int main()
   {
   freopen("homework.txt","r",stdin);
   freopen("homework.out","w",stdout);
   int n=cribaEcmc(b,p,10000001);
   for(int i=0;i<n;i++)
      for(int j=p[i];j<=10000000;j+=p[i])
         pr[j]++;

   fill(s[1].p,s[1].p+8,0);
   for(int i=2;i<=10000000;i++)
      {
      fill(s[i].p,s[i].p+8,0);
      //s[i].p[primacity(i,p,n)-1]=1;
      s[i].p[pr[i]-1]=1;
      for(int j=0;j<8;j++)
         s[i].p[j]+=s[i-1].p[j];
      }
   int ans,t,a,b,k;
   scanf("%d",&t);
   for(int nc=0;nc<t;nc++)
      {
      scanf("%d %d",&a,&b);
      scanf("%d",&k);
      if(k>8) ans=0;
      else
         {
         k--;
         ans=s[b].p[k]-s[a-1].p[k];
         }
      printf("Case #%d: %d\n",nc+1,ans);
      }
   return 0;
   }
