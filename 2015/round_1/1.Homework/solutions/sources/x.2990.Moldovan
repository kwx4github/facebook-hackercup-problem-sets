#include <fstream>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<vector>
using namespace std;

ifstream fin("input.txt");
ofstream fout("output.txt");

int l,i,j,t,k,n,m,aux,primacity,aux2,V[10000009];
int nr;
int  a,b;
vector<int> ma[10];
vector<int> v;
vector<int> ::iterator lt,r,it;

int main()
{
    n=10000000;
    for(i=2;i<=n;++i)
    {
        if(V[i]==0)
        {
            v.push_back(i);
            for(j=i*2;j<=n;j+=i)
            V[j]=1;
        }
    }
    for(i=2;i<=10000000;++i) // de adaugat un 0
    {
       l=sqrt(i);
        primacity=0;
        aux=i;
        for(it=v.begin();*it<=l&&aux!=1;++it)
        {
            j=*it;
            if(aux%j==0) primacity++;
            while(aux%j==0)
            aux/=j;
        }
        if(aux>1) primacity++;
        ma[primacity].push_back(i);
    }


    fin>>t;
    for(i=1;i<=t;++i)
    {
        fin>>a>>b>>k;
        if(k>8) fout<<"Case #"<<i<<": 0\n";
        r=lower_bound(ma[k].begin(),ma[k].end(),b);
        if(binary_search(ma[k].begin(),ma[k].end(),b))
        {
            lt=lower_bound(ma[k].begin(),ma[k].end(),a);
        }
        else
        {
            lt=upper_bound(ma[k].begin(),ma[k].end(),a);
        }
        if(r-lt==0&&*lt==0) {fout<<"Case #"<<i<<": 0\n"; continue;}
        fout<<"Case #"<<i<<": "<<r-lt+1<<"\n";
    }


    return 0;
}
