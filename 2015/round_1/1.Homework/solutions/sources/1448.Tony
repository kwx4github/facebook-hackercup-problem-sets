
#include <iostream>
#include <vector>
#define MAXN 10000001

using namespace std;

int A, B, K;
vector <int> p;
int p2[MAXN];

bool is_prime(int n) {
    for (int i : p) {
        if (i * i > n)
            break;
        if (n % i == 0)
            return false;
    }
    return true;
}

int primacity(int n) {
    int total = 0;
    for (int i : p) {
        if (i * i > n)
            break;
        if (n % i == 0) {
            total++;
            n /= i;
            while (n % i == 0)
                n /= i;
        }
    }
    if (n > 1)
        total++;
    return total;
}

void init() {
    for (int i = 2; i < MAXN; i++)
        if (is_prime(i))
            p.push_back(i);
    /*
    for (int i = 0; i < 50; i++)
        cout << p[i] << endl;
    */
    for (int i = 2; i < MAXN; i++)
        p2[i] = primacity(i);
}


int solve() {
    int count = 0;
    for (int i = A; i <= B; i++)
        if (p2[i] == K)
            count++;
    return count;
}

int main() {
    init();
    cerr << "init done: " << p.size() << " primes" << endl;

    int T;
    cin >> T;
    for (int t = 1; t <= T; t++) {
        cin >> A >> B >> K;
        cout << "Case #" << t << ": " << solve() << endl;
    }
}