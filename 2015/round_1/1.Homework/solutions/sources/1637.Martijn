import java.util.Scanner;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;


public class HomeworkSource {
	
	public static int[] primes;
	public static int[] cache = new int[9999999];
	
	public static boolean isPrime(int p, int i) {
		for (int j = 0; j < i; j++) {
			if (p%primes[j] == 0) {
				return false;
			}
		}
		return true;
	}
	
	public static void primacity(int x) {
		int ox = x-2;
		int p = 0;
		int r = 0;
		while (x != 1 && p < primes.length) {
			if (x%primes[p] == 0) {
				r++;
				while (x%primes[p] == 0) {
					x /= primes[p];
				}
			}
			p++;
		}
		if (x != 1) {
			r++;
		}
		cache[ox] = r;
	}
	
	public static void main(String[] args) {
		primes = new int[500];
		int p = 3;
		primes[0] = 2;
		primes[1] = 3;
		for (int i = 2; i < primes.length; i++) {
			p += 2;
			while (!isPrime(p, i)) {
				p += 2;
			}
			primes[i] = p;
		}
		Scanner scanner = null;
		try {
			scanner = new Scanner(new FileInputStream("D:/Desktop/input.txt"));
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		PrintStream out = null;
		try {
			out = new PrintStream(new FileOutputStream("D:/Desktop/output_Homework.txt"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		for (int C = 2; C <= 10000000; C++) {
			primacity(C);
		}
		int T = scanner.nextInt();
		for (int k = 1; k <= T; k++) {
			
			int A = scanner.nextInt();
			int B = scanner.nextInt();
			int K = scanner.nextInt();
			int count = 0;
			for (int C = A; C <= B; C++) {
				if (K == cache[C-2]) {
					count++;
				}
			}
			out.println("Case #" + k + ": " + count);
		}
	}
	
}
