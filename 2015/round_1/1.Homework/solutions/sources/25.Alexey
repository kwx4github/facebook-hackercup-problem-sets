program problemPrimacity;

var	t, i, j, a, b, k, pCnt: longInt;
	f, lp, primes: array[ 1..10000000 ] of longInt;
	pref: array[ 0..8, 0..10000000 ] of longInt;

begin
	pCnt := 0;
	for i := 2 to 10000000 do
	begin
		if ( lp[i] = 0 ) then
		begin
			inc( pCnt );
			primes[pCnt] := i;
			lp[i] := i;
		end;
		
		for j := 1 to pCnt do
		begin
			if ( primes[j] > lp[i] ) or ( primes[j] * i > 10000000 ) then
				break;
			
			lp[ primes[j] * i ] := primes[j];
		end;
	end;
	
	f[1] := 0;
	for i := 2 to 10000000 do
	begin
		k := i;
		while ( k mod lp[i] = 0 ) do
			k := k div lp[i];
		
		f[i] := f[k] + 1;
	end;
	
	for i := 1 to 10000000 do
	begin
		for j := 0 to 8 do
			pref[j][i] := pref[j][i - 1];
		
		inc( pref[ f[i] ][i] );
	end;
	
	readln( t );
	for i := 1 to t do
	begin
		readln( a, b, k );
		
		write( 'Case #', i, ': ' );
		if ( k <= 8 ) then
			writeln( pref[k][b] - pref[k][a - 1] )
		else
			writeln( 0 );
	end;
end.
