// codeforces HR101 2015-01-17
#include<iostream>
#include<string>
#include<algorithm>
#include<fstream>
#include<map>
#include<stack>
#include<list>
#include<set>
#include<vector>
#include<queue>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<cmath>
using namespace std;

#define INF                         (int)1e9
#define EPS                         1e-9
#define forall(i,a,b)               for(int i=a;i<b; i++)
#define forallr(j,a,b)              for(int j=a;j>=b;j--)
#define foreach(v, c)               for(typeof((c).begin()) v = (c).begin(); v!=(c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ((b).find(a) != (b).end())
#define pb                          push_back
#define mp                          make_pair
#define fi                          first
#define se                          second
#define ll                          long long

template <typename T1, typename T2> inline std::ostream& operator << (std::ostream& os, const std::pair<T1, T2>& p) { return os << "(" << p.first << ", " << p.second << ")"; } template <typename T> inline std::ostream& operator << (std::ostream& os, const std::vector<T>& v) { bool first = true; os << "["; for(unsigned int i=0; i<v.size(); i++) { if(!first) os << ", "; os << v[i]; first = false; } return os << "]"; } template <typename T> inline std::ostream& operator << (std::ostream& os, const std::set<T>& v) { bool first = true; os << "["; for(typename std::set<T>::const_iterator ii=v.begin(); ii!=v.end(); ++ii) { if(!first) os << ", "; os << *ii; first = false; } return os << "]"; } template <typename T1, typename T2> inline std::ostream& operator << (std::ostream& os, const std::map<T1, T2>& v) { bool first = true; os << "["; for(typename std::map<T1, T2>::const_iterator ii=v.begin(); ii!=v.end(); ++ii) { if(!first) os << ", "; os << *ii; first = false; } return os << "]"; } 

int next_prime(vector<int>& p, int n)
{
    int i = n+1;
    while(i < 10000001 && p[i]) i++;
    return i;
}

int main()
{
    vector<int> p(10000001, 0);
    int n = 1;
    while(n < 10000000)
    {
        n = next_prime(p, n);
        for(int i=n; i<10000001; i+=n) p[i]++;
    }

    int t; cin >> t;
    forall(j, 1, t+1)
    {
        int a, b, k; cin >> a >> b >> k;
        int c = 0;
        forall(i, a, b+1) c += k==p[i];
        cout << "Case #" << j << ": " << c << endl;
    }
    return 0;
}
