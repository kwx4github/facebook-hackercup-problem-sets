#include<cstdio>
#include<vector>
#include<algorithm>
#include<set>
#include<cstring>
#include<assert.h>
using namespace std;
#define FOR(i,a,b) for(int i = a; i <= b; ++i)
#define FORD(i,a,b) for(int i = a; i >= b; --i)
#define RI(i,n) FOR(i,1,n)
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define pb push_back
#define st first
#define nd second
bool debug;
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 1e7 + 5;

int ile[nax];
int pr[nax];
int s[10][nax];

int main(int argc, char *argv[])
{
	debug = argc > 1;
	
	for(int i = 2; i < nax; ++i) {
		if(pr[i] == 0) {
			ile[i] = 1;
			if(i < 2 * nax / i)
				for(int j = i * i; j < nax; j += i)
					pr[j] = i;
		}
		else {
			int x = pr[i];
			int pom = i;
			while(pom % x == 0) pom /= x;
			ile[i] = ile[pom] + 1;
		}
	}
	RI(k, 9)
		RI(i, nax-1) {
			s[k][i] = s[k][i-1];
			if(ile[i] == k) s[k][i]++;
		}
		
	int z;
	scanf("%d", &z);
	RI(tes, z) {
		printf("Case #%d: ", tes);
		int low, high, k;
		scanf("%d%d%d", &low, &high, &k);
		if(k > 9) puts("0");
		else printf("%d\n", s[k][high] - s[k][low-1]);
	}
		
	
	return 0;
}
