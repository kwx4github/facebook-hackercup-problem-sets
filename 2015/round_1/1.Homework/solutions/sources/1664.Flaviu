#include <fstream>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

ifstream fin("input.txt");
ofstream fout("output.txt");

bool prim[10000001];
int primacity[10000001];
vector<int> V[20];
int sp[20][10000001];

void computeCiur()
{
    memset(prim+1, true, sizeof(prim));
    for(int i = 2; i <= 10000000; i++)
        if(prim[i])
        {
            primacity[i] = 1;
            for(int j = 2; j * i <= 10000000; j ++)
            {
                prim[i*j] = false;
                primacity[i*j]++;
            }
        }
    for(int i = 2; i <= 10000000; i++)
    {
        //V[primacity[i]].push_back(i);
        for(int j = 1; j <= 10; j++)
            sp[j][i] = sp[j][i-1];
        sp[primacity[i]][i]++;
    }

}

void solve(int caseNr)
{
    int A,B,K;
    fin>>A>>B>>K;
    //vector<int>::iterator st = upper_bound(V[K].begin(), V[K].end(), A-1);
    //vector<int>::iterator dr = upper_bound(V[K].begin(), V[K].end(), B);
    fout<<"Case #"<<caseNr<<": ";
    fout<<sp[K][B] - sp[K][A-1]<<'\n';
}

int main()
{
    computeCiur();
    int n;
    fin>>n;
    for(int i = 1; i <= n; i ++)
        solve(i);
    fin.close();
    fout.close();
    return 0;
}
