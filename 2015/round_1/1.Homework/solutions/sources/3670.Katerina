#include <iostream>
#include <fstream>
#include <string.h>
#include <math.h>
using namespace std;

	ofstream outfile;
void runEratosthenesSieve(int lowerbound,int upperBound, int K) {
      int upperBoundSquareRoot = (int)sqrt((double)upperBound);
      bool *isComposite = new bool[upperBound + 1];
      int *primacity= new int[upperBound +1];	  
	  memset(isComposite, 0, sizeof(bool) * (upperBound + 1));
      memset(primacity, 0 , sizeof(int) * (upperBound +1));
	  primacity[1]=1;
	  for (int m = 2; m <= upperBoundSquareRoot; m++) {
            if (!isComposite[m]) {//m is prime 
				  primacity[m]=1;
				  for (int k = 2* m; k <= upperBound; k += m){
                        isComposite[k] = true;//mark all multiples of m
						primacity[k]++;
				  }
			}
	  }
      for (int m = upperBoundSquareRoot+1 ; m <= upperBound; m++)
            if(!isComposite[m]){
				primacity[m]=1;
				for (int k = 2*m; k <= upperBound; k += m)
					primacity[k]++;
			}
	  int res=0;
	  for(int m= lowerbound ;m<= upperBound ; m++){
	  	//cout<<m<<" "<<primacity[m]<<endl;
		if (primacity[m] == K)
        	res++;
	  }
	  outfile<<res<<endl;
	  delete [] isComposite;
	  delete [] primacity;
}


int main(){
	int T, A, B, K;
	 ifstream infile;
	 infile.open("homework.txt");
	outfile.open("homework.out");
	infile>> T;
	for(int i=0;i<T;++i){
		infile>> A>> B>> K;
		outfile<<"Case #"<<i+1<<": "; 
		runEratosthenesSieve(A,B, K);
	}
	return 0;
}
