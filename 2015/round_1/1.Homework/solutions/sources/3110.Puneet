#include<bits/stdc++.h>
using namespace std;
long long prime[78500],prim,arr[10000001];
// marks all mutiples of 'a' ( greater than 'a' but less than equal to 'n') as 1.
void markMultiples(long long arr[], long long a, long long n)
{
    long long i = 1, num;
    while ( (num = i*a) <= n )
    {
        arr[ num ] ++; // minus 1 because index starts from 0.
        ++i;
    }
}

// A function to prlong long all prime numbers smaller than n
void SieveOfEratosthenes(long long n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0

        long long i;
        /* Following property is malong longained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for ( i=2; i<=n; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, prlong long it and mark its multiples
                //prime[prim++]=i+1;
                markMultiples(arr, i, n);
            }
        }
    }
}
int main()
{
    freopen("homework.txt","r",stdin);
    freopen("output.txt","w",stdout);
    long long n = 10000000,j,t;
    //printf("Following are the prime numbers below %d\n", n);
    SieveOfEratosthenes(n);
//    for(int k=0;k<11;k++)
//        cout<<arr[k]<<" ";
    cin>>t;
    for(int k=0;k<t;k++)
    {
        long long a,b,cnt=0,j;
        cin>>a>>b>>j;
        for(long long i=a;i<=b;i++)
        {
            if(arr[i]==j)
                cnt++;
        }
        cout<<"Case #"<<k+1<<": "<<cnt<<endl;
    }
    return 0;
}
