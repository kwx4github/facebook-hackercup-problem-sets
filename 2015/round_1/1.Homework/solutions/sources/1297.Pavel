#include <fstream>
#include <string>
#include <iostream>
#include <vector>
using namespace std;
vector<bool> isprime(10000001, 1);
vector<int> primes;
vector<int> primacity(10000001, 0);
vector<vector<int> > sums(9, vector<int> (10000001, 0));
int main()
{
    ifstream cin ("/Programming/Sources/FBhackercup/FBhackercup/Input");
    ofstream cout ("/Programming/Sources/FBhackercup/FBhackercup/Output");
    int i, j, n, m, k, t;
    
    isprime[0] = false;
    isprime[1] = false;
    for (j = 2; j <= 10000000; j++)
    {
        if (isprime[j])
        {
            if (j * 1LL * j <= 10000000)
            {
                for (i = j * j; i <= 10000000; i += j)
                    isprime[i] = false;
            }
        }
    }
    for (j = 2; j < isprime.size(); j++)
      if (isprime[j])
        primes.push_back(j);
    
  //  cout << primes.size();
    for (j = 0; j < primes.size(); j++)
    {
        int curnum = primes[j];
        
        for (i = curnum; i < primacity.size(); i+= curnum)
        {
            ++primacity[i];
        }
    }
    for (j = 0; j < primacity.size(); j++)
        sums[primacity[j]][j] = 1;
    for (j = 1; j < 9; j++)
    {
        for (i = 1; i < 10000001; i++)
        {
            sums[j][i] += sums[j][i - 1];
        }
    }
    cin >> t;
    for (int curtest = 1; curtest <= t; ++curtest)
    {
        int a, b, res;
        cin >> a >> b >> k;
        
        if (k > 8)
            res = 0;
        else
        {
            res = sums[k][b] - sums[k][a - 1];
        }
        cout << "Case #" << curtest << ": " << res << "\n";
    }
    return 0;
}
