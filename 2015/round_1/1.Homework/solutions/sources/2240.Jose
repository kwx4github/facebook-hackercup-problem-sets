#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;

ll _sieve_size;
bitset<10000010> bs;
vi primes;

void sieve(ll upperbound) 
{
    _sieve_size = upperbound + 1;
    bs.set();                                        
    bs[0] = bs[1] = 0;

    for (ll i = 2; i <= _sieve_size; i++) if (bs[i]) 
    {
        for (ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0;
            primes.push_back((int)i);
    } 
}

ll numDiffPF(ll N) 
{
  ll PF_idx = 0, PF = primes[PF_idx], ans = 0;
  
  while (N != 1 && (PF * PF <= N))
  {
    if (N % PF == 0) ans++;
    while (N % PF == 0) N /= PF;
    PF = primes[++PF_idx];
  }

  if (N != 1) ans++;

  return ans;
}

int main()
{
    int TC, A, B, k, t=1, cont;
    vector<ll> v;

    sieve(10000000);
    for (int i = 2; i <= 10000000; ++i) {
        v.push_back(numDiffPF(i));
    }

    ofstream myfile;
    myfile.open ("output.txt");

    cin >> TC;

    while (TC--)
    {
        cin >> A >> B >> k;
        cont = 0;

        for (int i = A; i <= B; ++i)
        {
            if (v[i-2] == k) cont ++;
        }

        myfile << "Case #" << t++ << ":" << " " << cont << endl;
    }

    myfile.close();
    return 0;
}
