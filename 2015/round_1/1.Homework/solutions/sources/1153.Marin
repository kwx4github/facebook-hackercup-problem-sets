#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;

typedef long long ll;

const int MAXN = 10000100;

int n,a,b,k,p[MAXN],dp[MAXN];
bool bio[MAXN];
vector <int> v[MAXN];
vector <int>::iterator lo,hi;

void init() {
	for (int i = 2;i < MAXN - 99; i++) {
		if (dp[i]) continue;
		for (int j = 1; i * j <= MAXN; j++)
			dp[i * j]++;
	}	
	
	for (int i = 2;i < MAXN -99; i++)
		v[dp[i]].push_back(i);
}

void solve(int in) {
	printf("Case #%d: ",in);	
	scanf("%d %d %d",&a,&b,&k);
	if (k >= MAXN) {
		printf("0\n");
		return;
	}
	hi = upper_bound(v[k].begin(),v[k].end(),b);
	lo = lower_bound(v[k].begin(),v[k].end(),a);	
	//printf("%d %d lo hi\n",*lo,*hi);
	printf("%d\n",max(0,hi - lo));
}


int main() {
	init();
	int t;
	scanf("%d",&t);
	for (int i = 0;i < t; i++)
		solve(i + 1);
	return 0;
}
