#include <iostream>
#include <vector>
using namespace std;

const int N = 10000001;
int primacities[10000010];

void Init() {
  for (int p = 2; p * p < N; ++p) {
    if (primacities[p])
      continue;
    for (int i = p; i < N; i += p)
      ++primacities[i];
  }
}

struct Solver {
  void Input();
  void Solve();
  void Output(int t);
  int a, b, k;
  int num;
};

void Solver::Solve() {
  num = 0;
  for (int i = a; i <= b; ++i) {
    if (primacities[i] == k)
      ++num;
  }
}

void Solver::Input() {
  cin >> a >> b >> k;
}

void Solver::Output(int t) {
  cout << "Case #" << t << ": " << num << "\n";
}

int main(void) {
  Init();

  int T;
  cin >> T;
  vector<Solver> solvers(T);
  for (int i = 0; i < T; ++i)
    solvers[i].Input();
  for (int i = 0; i < T; ++i)
    solvers[i].Solve();
  for (int i = 0; i < T; ++i)
    solvers[i].Output(i + 1);
  return 0;
}
