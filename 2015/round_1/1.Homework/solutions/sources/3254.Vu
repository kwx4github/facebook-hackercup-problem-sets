//package cup.hacker.fb;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.HashSet;
import java.util.Set;

public class Homework {

	private static BufferedReader br;
	private static PrintWriter pw;
	
	public static Set<Integer> primeFactors(int n) {
		Set<Integer> factors = new HashSet<Integer>();
		
		while (n%2 == 0) {
			factors.add(2);
			n = n/2;
		}
		
	    for (int i = 3; i <= Math.sqrt(n); i = i+2)
	    {
	        // While i divides n, add i and divide n
	        while (n%i == 0)
	        {
	        	factors.add(i);
	            n = n/i;
	        }
	    }
	    
	    // This condition is to handle the case whien n is a prime number
	    // greater than 2
	    if (n > 2) factors.add(n);
	   
		return factors;
	}
	
	public static void main(String[] args) throws IOException {
		br = new BufferedReader(new InputStreamReader(new FileInputStream("input.txt")));
		pw = new PrintWriter(new FileOutputStream("output.txt"));
		
		final int MAX_NUM_CASE = Integer.parseInt(br.readLine());
		
		for (int i = 1; i <= MAX_NUM_CASE; i++) {
			pw.print("Case #" + i + ": ");
			
			String[] tokens = br.readLine().split(" ");
			int A = Integer.parseInt(tokens[0]);
			int B = Integer.parseInt(tokens[1]);
			int K = Integer.parseInt(tokens[2]);
			
			int count = 0;
			
			for (int p = A; p <= B; p++) {
				if (primeFactors(p).size() == K) count++;
			}
			
			pw.print(count);
			
			if (i != MAX_NUM_CASE) pw.println();
		}
		
		pw.close();
	}

}
