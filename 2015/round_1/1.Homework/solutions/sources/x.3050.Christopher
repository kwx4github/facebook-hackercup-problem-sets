#!/usr/bin/python
# -*- coding: utf-8 -*-

import cPickle as pickle
import math


def count_prime_factors(stop):
    prime_factor_counts = [0]*stop
    sqrt_stop = int(math.sqrt(stop))

    for i in xrange(2, stop):
        if prime_factor_counts[i] == 0:
            if i < sqrt_stop:
                for j in xrange(i, stop, i):
                    prime_factor_counts[j] += 1
            else:
                prime_factor_counts[i] = 1

    return prime_factor_counts


if __name__ == '__main__':
    with open('homework.pickle', 'rb') as pickled_primes:
        try:
            prime_factor_counts = pickle.load(pickled_primes)
        except EOFError:
            prime_factor_counts = count_prime_factors(10**7)
            pickle.dump(prime_factor_counts, pickled_primes, pickle.HIGHEST_PROTOCOL)

    with open('homework_input.txt') as problem_input:
        with open('homework_output.txt', 'w') as problem_output:
            test_cases = int(problem_input.readline().strip())

            for test_case in xrange(test_cases):
                start, stop, k = (int(num) for num in problem_input.readline().strip().split())

                count = prime_factor_counts[start:stop+1].count(k)

                output = 'Case #{0}: {1}\n'.format(test_case + 1, count)

                problem_output.write(output)