#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <cstdlib>
using namespace std;
#define mp make_pair
#define pb push_back
#define ff first
#define ss second
typedef long long ll;
const int MAXN = 10001000;
ll T, A, B, K, F[MAXN], G[10][MAXN];
bool pr[MAXN];
vector <int> primes;
int main()
{
    if(fopen("homework.in","r")) freopen("homework.in","r",stdin);
    freopen("homework.out","w",stdout);
    for(int i = 1; i < MAXN; i++)
      pr[i] = 1;
    for(int i = 2; i * i < MAXN; i++) {
      if(pr[i]) {
        for(int j = i*i; j < MAXN; j+=i) {
          pr[j] = 0;
        }
      }
    }

    for(int i = 2; i < MAXN; i++) {
      if(pr[i])
        primes.pb(i);
    }

    for(int i = 0; i != primes.size(); i++) {
      for(ll j = primes[i]; j < MAXN; j+=primes[i]) {
        F[j]++;
      }
    }

    for(int i = 1; i < MAXN; i++) {
      for(int j = 0; j < 10; j++) {
        G[j][i] = G[j][i-1];
      }
      G[F[i]][i]++;
    }

    cin >> T;
    for(int i = 1; i <= T; i++) {
      cin >> A >> B >> K;
      
      printf("Case #%d: ", i);
      if(K > 8) {cout << 0 << endl; continue;}
      cout << G[K][B] - G[K][A-1] << endl;
    }

    return 0;
}