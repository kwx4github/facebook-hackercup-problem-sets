import java.util.*;
import java.io.*;

public class A {
    FastScanner in;
    PrintWriter out;

    public static final int MAX = 10000000;
    public void solve() throws IOException {
        int[] p = new int[MAX + 1];
        for (int i = 2; i <= MAX; i++) {
            if (p[i] == 0) {
                for (int j = i; j <= MAX; j += i) {
                    p[j] = i;
                }
            }
        }
        int[] a = new int[MAX + 1];
        for (int i = 2; i<= MAX; i++) {
            int next = i / p[i];
            if (next % p[i] != 0) {
                a[i] = a[next] + 1;
            } else {
                a[i] = a[next];
            }
        }
        int tests = in.nextInt();
        for (int test = 0; test < tests; test++) {
            out.print("Case #"+(test + 1) +": ");
            System.out.println((test + 1));
            int A = in.nextInt();
            int B = in.nextInt();
            int K = in.nextInt();
            int count = 0;
            for (int i = A; i <= B; i++) {
                if (a[i] == K) {
                    count++;
                }
            }
            out.println(count);
        }
    }

    public void run() {
        try {
            in = new FastScanner(new File("homework.txt"));
            out = new PrintWriter(new File("homework_ans.txt"));
            Locale.setDefault(Locale.US);

            solve();

            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    class FastScanner {
        BufferedReader br;
        StringTokenizer st;

        FastScanner(File f) {
            try {
                br = new BufferedReader(new FileReader(f));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }

        String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }
    }

    public static void main(String[] arg) {
        new A().run();
    }
}