#include <bits/stdc++.h>
using namespace std;

const int P_LIM = 10000;
const int MAX = 10000001;

int prime[P_LIM];
int primacity[MAX];
int lim = 0;
char isprime[P_LIM];

void set_prime(void) {
    fill(isprime, isprime + P_LIM, 1);
    isprime[0] = isprime[1] = 0;
    for(int i = 2; i < P_LIM; i++) {
        if(isprime[i]) {
            prime[lim++] = i;
            for(int j = i * i; j < P_LIM; j += i) {
                isprime[j] = 0;
            }
        }
    }
}

int main(){
    set_prime();
    fill(primacity, primacity + MAX, 0);
    primacity[0] = 0;
    primacity[1] = 0;
    for(int i = 2; i < MAX; i++){
        int j = 0;
        for(j = 0; j < lim && prime[j] < i; j++){
            if(i % prime[j] == 0) {
                int k = i;
                while(k % prime[j] == 0){
                    k /= prime[j];
                }
                primacity[i] = primacity[k] + 1;
                break;
            }
        }
        if(j == lim || prime[j] >= i) {
            primacity[i] = 1;
        }
    }
    int T, A, B, K;
    scanf("%d", &T);
    for(int i = 1; i <= T; i++) {
        scanf("%d%d%d", &A, &B, &K);
        int ans = 0;
        for(int n = A; n <= B; n++) {
            if(primacity[n] == K) {
                ++ans;
            }
        }
        printf("Case #%d: %d\n", i, ans);
    }
    return 0;
}
