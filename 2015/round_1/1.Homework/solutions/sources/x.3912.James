package main

import (
  "fmt"
)

var primes []int
var sieve_array [3200]bool
var primacities[10000001] int

func init() {
  for i := 2; i < len(sieve_array); i++ {
    sieve_array[i] = true
  }
  for i := 2; i < len(sieve_array); i++ {
    if sieve_array[i] == true {
      primes = append(primes, i)
      for j := i+i; j < len(sieve_array); j += i {
        sieve_array[j] = false
      }
    }
  }
  primacities[0] = 0
  primacities[1] = 0
  for i := 2; i < len(primacities); i++ {
    primacities[i] = primacity(i)
  }
}

func primacity(n int) int {
  primacity := 0
  for _, p := range primes {
    if n % p == 0 {
      primacity++
    }
  }
  return primacity
}

func main() {
  var T int
  fmt.Scanln(&T)
  for t := 1; t <= T; t++ {
    var A, B, K int
    fmt.Scanln(&A, &B, &K)
    result := 0
    for i := A; i <= B; i++ {
      if primacities[i] == K {
        result++
      }
    }
    fmt.Printf("Case #%d: %d\n", t, result)
  }
}
