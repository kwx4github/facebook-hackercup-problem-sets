#include <map>
#include <set>
#include <math.h>
#include <deque>
#include <stack>
#include <queue>
#include <vector>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <memory.h>
#include <stdio.h>

using namespace std;

#define pb push_back
#define all(v) v.begin(),v.end()
#define rep(i,s,m) for(int i=s;i<m;i++)
#define mem(a,b) memset(a,b,sizeof(a))
#define mp make_pair
#define PI = (2.0 * acos(0.0));
typedef stringstream ss;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<string> vs;
typedef vector<int> vi;
typedef vector<vector<int> > vii;
typedef long long ll;
#define OO ((int)1e9)
#define sz 10010

int di[] = { -1, 0, 1, 0 };
int dj[] = { 0, 1, 0, -1 };

vector<bool> prime(10000011, 1);
vector<int> primacity(10000011, 0);
map<int, vector<int> > dic;
void sieve() {
	int n = 10000000;
	prime[0] = prime[1] = 0;
	primacity[0] = primacity[1] = 0;
	for (int i = 2; i * i <= n; i++) {
		if (!prime[i])
			continue;
		primacity[i] = 1;
//		cout << i << endl;
		for (int j = i + i; j <= n; j += i) {
			prime[j] = 0;
			primacity[j]++;
		}
	}
	for (int i = 2; i < 1e7; i++)
		dic[primacity[i]].push_back(i);

}

int main() {

#ifndef ONLINE_JUDGE
	freopen("input.in", "rt", stdin);
	freopen("output.txt", "wt", stdout);
#endif
	sieve();
	int T, A, B, K;
	cin >> T;
	for (int t = 0; t < T; ++t) {
		cin >> A >> B >> K;
		std::vector<int>::iterator low = lower_bound(dic[K].begin(),
				dic[K].end(), A);
		std::vector<int>::iterator up = lower_bound(dic[K].begin(),
				dic[K].end(), B + 1);
		printf("Case #%d: %d\n", t + 1, (int)(up - low));
	}
	return 0;
}
