#include <cstdio>
#include <vector>
#include <algorithm>
#define maxn 11000000

using namespace std;

vector <int> pr;
bool p[maxn];

void sieve() {
	fill(p, p + maxn, true);
	p[0] = p[1] = false;
	for (int i = 2; i < maxn; i++)
		if (p[i]) {
			pr.push_back(i);
			for (int j = 2 * i; j < maxn; j += i)
				p[j] = false;
		}
}

int primacity(int k) {
	int ans = 0;
	for (int i = 0; pr[i] * pr[i] <= k; i++)
		if (k % pr[i] == 0) {
			ans++;
			while (k % pr[i] == 0)
				k /= pr[i];
		}
	if (k > 1)
		ans++;
	return ans;
}

int main() {
	sieve();
	int d, a, b, c, ans;
	scanf("%d", &d);
	for (int i = 0; i < d; i++) {
		scanf("%d%d%d", &a, &b, &c);
		ans = 0;
		for (int j = a; j <= b; j++)
			if (primacity(j) == c)
				ans++;
		printf("Case #%d: %d\n", i + 1, ans);
	}
}
