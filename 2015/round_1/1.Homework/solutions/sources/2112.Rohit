#include<iostream>
#include<cstdio>
#include<cstring>
#include<climits>
#include<cmath>
#include<cstdlib>
#include<vector>
#include<queue>
#include<string>
#include<map>
#include<set>
#include<bitset>
#include<stack>
#include<algorithm>
#include<typeinfo>

#define mp make_pair
#define pb push_back
#define fi first
#define se second

#define setBit(n,i) (n|=(1<<i))
#define clearBit(n,i) (n&=(~(1<<i)))
#define checkBit(n,i) (n&(1<<i))
#define lsBit(n) ((n)&(-n))

#define s(n) scanf("%d",&n)
#define fora(i,a,b) for(int i=a;i<b;i++)
#define fore(i,a) for(__typeof((a).begin())i=(a).begin();i!=(a).end();i++)
#define ms(a,b) memset(a,b,sizeof(a))
#define all(a) (a).begin(),(a).end()

#define INF 1e9

using namespace std;

typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef long long int ll;
int noPrimes;
vector<int> primes;
bitset <1000100> sieve;
void sieveOfErastosthenes()
{
    noPrimes=0;
    primes.clear();
    primes.push_back(2);
    sieve.set();
    sieve.set(0,false);
    sieve.set(1,false);
    for(int i=3;i*i<1000100;i+=2)
    {
        if(sieve.test((size_t)i))
        {
            for(int j=i*i;j<1000100;j+=i+i)
                sieve.set(j,false);
            primes.push_back(i);
        }
    }
    for(int i=1001;i<1000100;i+=2)
        if(sieve.test((size_t)i))
            primes.push_back(i);
}
ll counter[10000010];
ll c(int n)
{
   int temp=n;
   ll cnt=0;
   bool flag;
   fora(i,0,primes.size())
   {
      if(n<primes[i]*primes[i])   break;
      flag=false;
      while(n%primes[i]==0)
      {
         n/=primes[i];
         flag=true;
      }
      if(flag)
      {
         cnt++;
         return cnt+counter[n];
      }
   }
   if(n!=1) cnt=1;
   return cnt;
}
int main()
{
   #ifndef ONLINE_JUDGE
   freopen("tempA.txt","r",stdin);
   freopen("outA.txt","w",stdout);
   #endif
   sieveOfErastosthenes();
   counter[0]=0;
   counter[1]=0;
   for(ll i=1;i<10000010;i++)
      counter[i]=c(i);
   int t,a,b;
   ll k;
   scanf("%d\n",&t);
   fora(i,0,t)
   {
      scanf("%d %d %lld\n",&a,&b,&k);
      ll ans=0;
      fora(j,a,b+1)  if(counter[j]==k) ans++;
      printf("Case #%d: %lld\n",i+1,ans);
   }
   return 0;
}
