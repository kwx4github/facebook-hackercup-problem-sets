#include<cstdio>
#include<vector>
#include<cstring>
using namespace std;
const int MAX = 10000000 + 10;
bool pri[MAX];
vector<int> prime, nowprime;
void init(){
	for(int i = 2 ; i <= 10000000 ; i++){
		if(pri[i] == false){
			prime.push_back(i);
			for(int j = i+i ; j <= 10000000 ; j+=i){
				pri[j] = true;
			}
		}
	}
}
int calc2(int now, const long long n, long long nowval){
	int sum = 1;
	int siz = (int)nowprime.size();
	for(int i = now ; i < siz ; i++){
		if(nowval * nowprime[i] > n) break;
		sum += calc2(i, n, nowval*nowprime[i]);
	}
	return sum;
}
int calc(int now, const long long n, long long nowval, int nowdep, const int target){
	if(nowdep > target) return 0;
	if(nowdep == target){
		int siz = (int)nowprime.size();
		return calc2(0, n, nowval);
	}
	int siz = (int)prime.size(), sum = 0;
	for(int i = now ; i < siz ; i++){
		if(nowval * prime[i] > n) break;
		nowprime.push_back(prime[i]);
		sum += calc(i+1, n, nowval * prime[i], nowdep+1, target);
		nowprime.pop_back();
	}
	return sum;
}
int main(){
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
	init();
	int TN;
	scanf("%d", &TN);
	for(int casen = 1 ; casen <= TN ; casen++){
		long long n, m, k;
		scanf("%I64d %I64d %I64d", &n, &m, &k);
		printf("Case #%d: %d\n", casen, calc(0,m,1LL,0,k)-calc(0,n-1,1LL,0,k));
	}
	return 0;
}
