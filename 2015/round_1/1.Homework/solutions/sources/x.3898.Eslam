#include <stdio.h>
#include <string.h>
#include<set>
#include<map>
#include<list>
#include<iomanip>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<complex>
#include<sstream>
#include<iostream>
#include<fstream>
#include<algorithm>
#include<numeric>
#include<utility>
#include<functional>
#include<stdio.h>
#include<assert.h>
#include<memory.h>
#include<bitset>
using namespace std;
 

#define MAX_NUM 10000000  


int primes[MAX_NUM];
vector<int>lol(MAX_NUM , 0);

void gen_sieve_primes(void)
{
    for (int p=2; p<MAX_NUM; p++) 
    {
		if( primes[p]!=-1)
		{
        if(primes[p] == 0) 
		{
            primes[p] = -1; 
			lol[p]++;
		}

        int c=2;
        int mul = p * c;
        for(; mul < MAX_NUM ;)
        {
			lol[mul]++;
            primes[mul] = -1;
            c++;
            mul = p*c;
        }
		}
    }
}

/*void print_all_primes()
{
    int c = 0;
    for(int i=0; i<MAX_NUM; i++)
    {
        if(primes[i] == 1)
        {
            c++;

            if(c < 4)
            {
                switch(c){
                case 1:
                    cout << c << "st prime is: " << i << endl;
                    break;
                case 2:
                    cout << c << "nd prime is: " << i << endl;
                    break;
                case 3:
                    cout << c << "rd prime is: " << i << endl;
                    break;

                default:
                    break;
                }
            }

            else
                cout << c << "th prime is: " << i << endl;
        }
    }
}
*/

int main()
{
	freopen("homework_example_input.txt" , "r",stdin);
	freopen("homework_example_output.txt" , "w",stdout);
    gen_sieve_primes();

	long long t ,a , b ,k;
	cin>>t;
	
	for(int i=0 ;i<t ;i++)
	{
	cin>>a>>b>>k;
	int cnt=0;
	for(int i = a; i <=b ;i++)
	{
		if(lol[i]==k)
			cnt++;
	}
	cout<<"Case #"<<i+1<<": "<<cnt<<endl;
	}
    return 0;
}