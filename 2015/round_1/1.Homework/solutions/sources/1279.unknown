#include<bits/stdc++.h>
using namespace std ;

const int MAXV = 1e7;
const int MAXP = 8;

int primacity[MAXV + 5];
vector<int> numbers[MAXP + 5];

void init() {
    for (int p=2;p<=MAXV;p++) {
        if (primacity[p]) continue;
        for (int i=p;i<=MAXV;i+=p) {
            primacity[i]++;
        }
    }
    for (int i=2;i<=MAXV;i++)
        numbers[primacity[i] - 1].push_back(i);
//    for (int p=0;p<MAXP;p++) {
//        printf("%d: ",p + 1);
//        for (int c=0;c<min(10, (int)numbers[p].size());c++)
//            printf("%d ",numbers[p][c]);
//        printf("\n");
//    }
        
}

int solve(int A, int B, int K) {
    if (K > MAXP) return 0;
    K--;
    return upper_bound(numbers[K].begin(), numbers[K].end(), B) - lower_bound(numbers[K].begin(), numbers[K].end(), A);
}

int main() {
    freopen("homework.in","r",stdin);
    freopen("homework.out","w",stdout);
    int c,c2;
    init();
    int tests;
    scanf("%d",&tests);
    for (int test=1;test<=tests;test++) {
        int A,B,K;
        scanf("%d%d%d",&A,&B,&K);
        int ret = solve(A,B,K);
        printf("Case #%d: %d\n",test,ret);
    }
    return 0;
}
