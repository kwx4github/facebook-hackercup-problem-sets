#include <iostream>
#include <cmath>
#include <cstring>

using namespace std;

const int PMAX = 10000000;
bool isPrime[PMAX+2];

int primacity[PMAX+2];

void makeSieve()
{
    memset(isPrime, 1, sizeof(isPrime));
    memset(primacity, 0, sizeof(primacity));
    isPrime[0] = false;
    isPrime[1] = false;
    for(int p = 2; p <= (int)sqrt(PMAX)+2; ++p)
    {
        if(!isPrime[p]) continue;
        for(int k = 2; p*k <= PMAX; ++k)
        {
            isPrime[p*k] = false;
            primacity[p*k]++; //p*k is divisible by prime p
        }
    }
    for(int p = 2; p <= PMAX; ++p)
        if( isPrime[p] ) primacity[p] = 1; //for primes above sqrt(PMAX)
}

int main()
{
    cerr << "Making sieve." << endl;
    makeSieve();
    cerr << "Sieve finished" << endl;

    int runs;
    cin >> runs;
    for(int run = 1; run <= runs; ++run)
    {
        int A, B, K;
        cin >> A >> B >> K;

        int answer = 0;
        for(int i = A; i <= B; ++i) if( primacity[i] == K ) ++answer;

        cout << "Case #" << run << ": " << answer << endl;
    }
    return 0;
}
