#include <bits/stdc++.h>
using namespace std;
const int MAXN = 10000001;
const int MAXP = 9;
int psum[MAXP][MAXN];

int primalidad(int n) {
    int ret = 0;
    int f = 2;
    while(f*f<=n) {
        if(n%f==0) {
            ++ret;
            while(n%f==0) n/=f;
        }
        ++f;
    }
    if(n>1) ++ret;
    return ret;
}

int main() {
    memset(psum, 0, MAXN*MAXP*sizeof(int));
    for(int i=2; i<MAXN; ++i) {
        int pq = primalidad(i);
        ++psum[pq][i];
    }
    for(int i=0; i<9; ++i)
        for(int j=1; j<MAXN; ++j) psum[i][j] += psum[i][j-1];
    int T; cin >> T;
    int cas = 0;
    while(cas<T) {
        cout << "Case #" << (cas++)+1 << ": ";
        int A,B,K; cin >> A >> B >> K;
        if(K>8) cout << 0 << endl;
        else cout << psum[K][B]-psum[K][A-1] << endl;
    }
}