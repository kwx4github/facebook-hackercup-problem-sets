//
//  main.cpp
//  Homework
//
//  Created by Dmytro Kotsur on 1/17/15.
//  Copyright (c) 2015 Dmytro Kotsur. All rights reserved.
//

#include <iostream>
#include <fstream>

#define MAX_B 10000001
//             9209955
#define MAX_PRIMACITY 10

using namespace std;

long long T, A, B, K;

ifstream in("homework.txt");
ofstream out("homework_result.txt");

long long primacity[MAX_B], max_primacity = 0;
long long primacity_sums[MAX_PRIMACITY][MAX_B];

int main(int argc, const char * argv[])
{
    if (!in) {
        cout << "Cannot read file" << endl;
        return -1;
    }
    
    fill(primacity, primacity + MAX_B, 0);
    for (int i = 0; i < MAX_PRIMACITY; ++i)
        fill(primacity_sums[i], primacity_sums[i] + MAX_B, 0);
    
    for (int i = 2; i < MAX_B; ++i) {
        if (primacity[i] == 0) {
            for (int j = i; j < MAX_B; j += i) {
                primacity[j] ++;
            }
        }
        max_primacity = max(max_primacity, primacity[i]);
    }
    
    cout << "max_primacity=" << max_primacity << endl;
    
    for (int i = 1; i < MAX_B; ++i) {
        for (int j = 0; j <= max_primacity; ++j) {
            primacity_sums[j][i] += primacity_sums[j][i-1];
        }
        primacity_sums[primacity[i]][i]++;
    }
    
    
    in >> T;
    for (int t = 1; t <= T; ++t) {
        in >> A >> B >> K;
        if (K <= max_primacity) {
            long long a = primacity_sums[K][B];
            long long b = primacity_sums[K][A-1];
            out << "Case #" << t << ": " << a - b << endl;
        } else {
            out << "Case #" << t << ": " << 0 << endl;
        }
    }
    
    
    return 0;
}

