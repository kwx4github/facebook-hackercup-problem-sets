#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<cctype>
#include<cassert>
#include<cstring>
//containers
#include<vector>
#include<list>
#include<map>
#include<queue>
#include<deque>
#include<set>
#include<string>
#include<stack>
#include<bitset>
//IOs
#include<iostream>
//algorithm & miscellaneous
#include<algorithm>
#define ll long long
#define ull unsigned long long
#define ld long double
#define mp make_pair
#define pb push_back
#define inf (ll)1e18
#define iinf (int)1e9
#define triple(a,b,c) make_pair(a,make_pair(b,c))
#define two(a,b) make_pair(a,b)
#define fi first
#define se second
#define GI ({int t;scanf("%d",&t);t;})
#define GD ({double t;scanf("%lf",&t);t;})
#define GF ({float t;scanf("%f",&t);t;})
#define GL ({long long t;scanf("%lld",&t);t;})
#define GLD ({long double t;scanf("%Lf",&t);t;})
#define sz(v) (int)v.size()
#define _(a, x) memset(a, x, sizeof(a))
#define f(x) __builtin_popcount(x)
int dx[] = {-1,0,0,1,-1,-1,1,1};
int dy[] = {0,-1,1,0,-1,1,-1,1};

const ll mod = 1000000009ll;

using namespace std;

vector<int> primes[25];

int isprime[10000001], cnt[10000001], res[10000001];

int main()
{

	isprime[1] = 0;

	for(int i=2;i*i<=(int)1e7;i++)
		if(!isprime[i])
			for(int j=2*i;j<=(int)1e7;j+=i)
			{
				if(isprime[j] == 0)
					isprime[j] = 1;
				int tj = j;
				cnt[j] += 1;
				while(tj%i == 0)isprime[j] *= i, tj /= i; 
			}

	
	for(int i=2;i<=(int)1e7;i++)
	{
		if(isprime[i] == 0)cnt[i] = 1, primes[1].pb(i);
		else
		{
			int rem = i/isprime[i];
			if(rem > 1 and !isprime[rem])
			{
				cnt[i] += 1;
				primes[cnt[i]].pb(i);		
			}
			else primes[cnt[i]].pb(i);
		}
	}	

	
	/*for(int i=(int)1e6;i<=(int)1e7;i++)
	{
		int ti = i;
		for(int j=2;j*j<=ti;j++)
			if(ti%j == 0)
			{	
				res[i]++;
				while(ti%j == 0)ti /= j;
			}

		if(ti > 1)res[i]++;
	}

	int fg = 0;

	for(int i=(int)1e6;i<=(int)1e7;i++)
		if(cnt[i] != res[i]){fg = i;break;}
	cout<<fg<<" ";*/
	
	int t = GI;

	for(int tt=1;tt<=t;tt++)
	{
		int a = GI, b = GI, k = GI, res = 0;

		if(k <= 20)
		{
			for(int i=0;i<sz(primes[k]);i++)
				if(primes[k][i] >= a and primes[k][i] <= b)res++;
		}
				
		printf("Case #%d: %d\n",tt,res);
	}


	return 0;
}
