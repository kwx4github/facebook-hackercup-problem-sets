#include <vector>
#include <numeric>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <limits>
#include <iomanip>

using namespace std;

#define FOR(i,a,b)		for(int i=(a),_b=(b);i<(_b);++i)
#define FORD(i,a,b)		for(int i=(a),_b=(b);i>(_b);--i)
#define pb			push_back
#define mp			make_pair
#define	all(c)			(c).begin(),(c).end()
#define	tr(c,i)	for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define	present(c,x)		((c).find(x) != (c).end())
#define	cpresent(c,x)		(find(all(c),x) != (c).end())
#define	endl			'\n'

typedef long long		ll;
typedef unsigned long long	ull;
typedef unsigned char	 	byte;
typedef vector<int>		vi;
typedef pair<int, int>		pii;
typedef pair<ll, ll>		pll;
typedef vector<pii>		vpii;

const int MX = 10000001;
map<int,vi> M;
bool prime[MX];
int cnt[MX];

void sieve(int n)
{
	FOR(i,0,n+1) prime[i] = true;
	prime[0] = prime[1] = false;
	for (int i = 2; i <= n; ++i) {
		if (prime[i]) {
			cnt[i] = 1;
			for (int j = i+i; j <= n; j += i) {
				prime[j] = false;
				cnt[j]++;
			}
		}
	}
}

void init()
{
	sieve(MX-1);
	FOR(i,2,MX) M[cnt[i]].pb(i);
}

int main(int argc, char *argv[])
{
#ifndef ONLINE_JUDGE
	freopen(argv[1],"r",stdin);
#endif
#ifndef ONLINE_JUDGE
	ifstream cin(argv[1]);
#endif
#if 1
	ofstream cout(argv[2]);
#endif
	ios :: sync_with_stdio(false);
	cin.tie(NULL);

	init();
	int T,a,b,k;
	cin >> T;
	FOR(t,1,T+1) {
		cin >> a >> b >> k;
		int ans = 0;
		if (M.find(k) != M.end()) {
			vi::iterator lo = lower_bound(all(M[k]), a);
			vi::iterator hi = upper_bound(all(M[k]), b);
			ans = hi-lo;
		}
		cout << "Case #" << t << ": " << ans << endl;
	}
	return 0;
}
