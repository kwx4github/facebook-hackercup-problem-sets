#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cassert>

using namespace std;

#define ri(X) scanf("%d", &(X))
#define pi(X) printf("%d", (X))
#define mp(X,Y) make_pair(X,Y)
#define pb(X) push_back(X)
#define lint long long
#define pii pair<int,int>
#define inf 1e9
#define linf 1e18
#define X first
#define Y second
#define all(X) (X).begin(),(X).end()
#define uni(X) X.erase(unique(X.begin(), X.end()), X.end());


#define SIZE 10000009
int sieve[SIZE], primes[SIZE], prime_size;
int num[SIZE];
vector<int> primos;
void initsieve(){
  int a, b;
  prime_size = 0;
  memset(sieve, 0, sizeof(sieve));
  sieve[0] = sieve[1] = 1;
  for(a = 2 ; a < SIZE ; a++){
    if(sieve[a]) continue;
    primos.push_back(a);
    primes[prime_size++] = a;
    num[a]++;
    for (b = a+a ; b < SIZE ; b += a){
      num[b]++;
      sieve[b] = 1;
    }
    
  }
}
int T;
int main(){
  initsieve();
  ri(T);
  int a,b,k;
  for(int t = 0; t< T; t++){
    ri(a); ri(b); ri(k);
    int res = 0;
    for(int i = a; i <= b; i++){
      if(num[i] == k) res++;
    }
    printf("Case #%d: %d\n", t+1, res);
  }
  return 0;
}

