#include <bits/stdc++.h>
#define N 10000100
using namespace std;
vector<int> primes;
bool isprime[N];
int primacy[N];
void sieve(){
    memset(isprime,true,sizeof(isprime));
    for(int p=2;p<N;p++){
        if(isprime[p]){
        primes.push_back(p);
            for(int i=p;i<=N;i+=p){
                isprime[i]=false;
            }
        }
    }
}
void genprimacy(){
    memset(primacy,0,sizeof(primacy));
    for(int i=0;i<primes.size();i++){
        int p=primes[i];
        for(int j=p;j<N;j+=p){
            primacy[j]++;
        }
    }
}

int get(int a,int b,int k){
    int cnt=0;
    for(int i=a;i<=b;i++){
        if(primacy[i]==k)
            cnt++;
    }
    return cnt;
}
int main(){
    ifstream cin("input.in");

    ofstream cout("output.out");
    int T; cin>>T;
    sieve();
       genprimacy();
    for(int t=1;t<=T;t++){
        int a,b,k; cin>>a>>b>>k;
       cout<<"Case #"<<t<<": "<<get(a,b,k)<<endl;
    }
}
