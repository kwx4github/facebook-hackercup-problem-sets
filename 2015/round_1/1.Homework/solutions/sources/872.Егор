#include <bits/stdc++.h>
#define endl "\n"
#define FOR(x, y, z) for (int x = (y); x < (z); ++x)
#define FORR(x, y, z) for (int x = (y); x > (z); --x)
#define SORT(a) sort(a.begin(), a.end())
#define SORTR(a) sort(a.rbegin(), a.rend())
#define GET(a, n) for (int i = 0; i < n; ++i) cin >> a[i];
#define GETM(a, n, m) for (int i = 0; i < n; ++i) for (int j = 0; j < m; ++j) cin >> a[i][j];
#define PRINTM(a, n, m) for (int i = 0; i < n; ++i) { for (int j = 0; j < m; ++j) cout << a[i][j] << " ";  cout << endl; };
#define PRINT(a, n) for (int i = 0; i < n; ++i) cout << a[i] << " ";
#define GETSUM(sum, n) sum = 0; for (int i = 0; i < n; ++i) { int tmp; cin >> tmp; sum += tmp; }
#define SUM(a, n, sum) sum = 0; for (int i = 0; i < n; ++i) { sum += a[i]; }
#define IT(a) a.begin(), a.end()
using namespace std;
typedef long long LL;
typedef unsigned long long ULL;
typedef vector <int> VI;
typedef vector <vector <int>> VVI;
typedef pair <int, int> PII;
template <class T> typename T::value_type arr_sum(const T& v, int n) { typename T::value_type sum = 0; FOR(i, 0, n) sum += v[i]; return sum; }
struct Sync_stdio { Sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); } } _sync_stdio;

int main()
{
    vector <int> dp(10000001);
    dp[2] = 1;
    for (int i = 3; i < dp.size(); ++i) {
        int j = 2;
        int s = sqrt(i);
        while (j <= s && i % j != 0) {
            ++j;
        }
        if (j == s + 1) {
            dp[i] = 1;
            continue;
        }
        if ((i / j) % j == 0) {
            dp[i] = dp[i / j];
        } else {
            dp[i] = dp[i / j] + 1;
        }
    }
    int t;
    cin >> t;
    for (int i = 0; i < t; ++i) {
        int res = 0;
        int a, b, k;
        cin >> a >> b >> k;
        for (int j = a; j <= b; ++j) {
            if (dp[j] == k) {
                res++;
            }
        }
        cout << "Case #" << i + 1 << ": " << res << endl;
    }
}
