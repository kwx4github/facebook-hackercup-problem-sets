#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <set>
using namespace std;

bool used[10000005];
int cnt[10000005];
set<int> * answers;

void Sieve() {
    for (int i = 2; i < 10000005; i++) {
        if (!used[i]) {
            used[i] = true;
            cnt[i]++;
            for (int j = i + i; j < 10000005; j += i) {
                used[j] = true;
                cnt[j]++;
            }
        }
    }
    answers = new set<int>[40];
    answers[0].insert(1);
    for (int i = 2; i < 10000005; i++) {
        int sz = answers[cnt[i]].size();
        answers[cnt[i]].insert(i);
    }
}

int main()
{
    freopen("dhl.in", "rt", stdin);
    freopen("dhl.txt", "wt", stdout);

    Sieve();

    int tests; cin >> tests;
    for (int t = 1; t <= tests; t++) {
        int A, B; cin >> A >> B;
        int k; cin >> k;
        k = min(k, 39);
        set<int>::iterator begin = answers[k].lower_bound(A);
        set<int>::iterator end = answers[k].lower_bound(B);
        int l = (begin == answers[k].end()) ? answers[k].size() : distance(answers[k].begin(), begin) + 1;
        int r = (end == answers[k].end()) ? answers[k].size() : distance(answers[k].begin(), end) + 1;
        if (end != answers[k].end())
            if (*end > B)
                r--;
        cout << "Case #" << t << ": " << r - l + 1 << endl;
    }

    return 0;
}

