#include <bits/stdc++.h>

using namespace std;

// TEMPLATE {{{
#ifndef LOCAL
#define OJ 1
#else
#define OJ 0
#endif

#define endl '\n'
#define TIMESTAMP merr << "Execution time: " << (double)clock()/CLOCKS_PER_SEC << " s.\n"
class C_ {}; template <typename T> C_& operator <<(C_& __m, const T& __s) { if (!OJ) cerr << "\E[91m" << __s << "\E[0m"; return __m; }
C_ merr;

struct __s { __s() { if (OJ) { ios_base::Init i; cin.sync_with_stdio(0); cin.tie(0); } } ~__s(){ TIMESTAMP; } } __S;
/// END OF TEMPLATE }}}

/*
 * segfault at 30 ip 00007ff0b3878956 sp 00007fff195d93f0 error 4 in libgtk-x11-2.0.so.0.2400.25[7ff0b35ba000+
 *                                       00007fff195d93f0 error 4 in libgtk-x11-2.0.so.0.2400.25[7ff0b35ba000+435000]
 */

bool E[3333];
int P[3333];
int plen;
int K[11111111];

void eratosphen() {
  E[0] = E[1] = 1;
  for (int i = 2; i < 3333; i++) {
    if (E[i]) continue;
    for (int j = 2*i; j < 3333; j+=i) {
      E[j] = 1;
    }
    P[plen++] = i;
  }
}

int main() {
  eratosphen();
  for (int i = 2; i <= 10000000; i++) {
    int nn = i;
    for (int j = 0; j < plen; j++) {
      int p = P[j];
      if (nn%p == 0) {
        K[i]++;
        while (nn%p == 0) {
          nn /= p;
        }
      }
    }
    if (nn > 1) K[i]++;
  }
  int T;
  freopen("input.txt", "rt", stdin);
  //freopen("output.txt", "wt", stdout);
  cin >> T;
  for (int tt = 0; tt < T; tt++) {
    int a,b,k;
    int ans = 0;
    cin >> a >> b >> k;
    for (int i = a; i <= b; i++) {
      if (K[i] == k) ans++;
    }
    cout << "Case #" << tt+1 << ": " << ans << endl;
  }
  return 0;
}
