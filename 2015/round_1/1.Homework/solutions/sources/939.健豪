#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

const int MAXN = 10000000+10;
const int LEN = 1000000+10;
int prime[MAXN], isprime[MAXN], C[MAXN];

void getprime(){
	memset(prime, 0, sizeof prime);
	memset(isprime, 0, sizeof isprime);
	for(int i=2; i<=MAXN; i++) {
		if(!prime[i]) {
			prime[++prime[0]] = i;
			isprime[i] = 1;
		}
		for(int j=1; j<=prime[0]&&prime[j]<=MAXN/i; j++) {
			prime[prime[j]*i] = 1;
			if(i % prime[j] == 0) break;
		}
	}
}

int J(int x) {
	if(isprime[x]) return 1;
	for(int i=1; i<=prime[0]; i++) {
		if(x % prime[i] == 0) {
			x /= prime[i];
			if(x % prime[i] == 0) return C[x];
			else return C[x] + 1;
		}
	}	
	return -1;
}

void init(){
	for(int i=2; i<=10000000; i++) C[i] = J(i);
}

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("OA.txt", "w", stdout);

	int T, kase = 1, a, b, c;
	getprime();
	init();
	scanf("%d", &T);
	while(T--) {
		scanf("%d%d%d", &a, &b, &c);
		int ans = 0;
		for(int i=a; i<=b; i++) if(C[i] == c) ans++;
		printf("Case #%d: ", kase++);
		printf("%d\n", ans);
	}
	return 0;
}
