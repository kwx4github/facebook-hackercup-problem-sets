#include <bits/stdc++.h>
using namespace std ;

struct Solve {

vector< int > primity ;

Solve() : primity( 10000001, 0 ) {
    for ( int number = 2, numberMax = ( int )primity.size() ; number < numberMax ; ++number ){
        if ( primity[ number ] == 0 ){
            for ( int x = number, xMax = ( int )primity.size() ; x < xMax ; x += number ){
                primity[ x ] += 1 ;
            }
        }
    }
}

void solveOne( ifstream &in, ofstream &out ){
    int A, B, K ; in >> A >> B >> K ;
    int res = 0 ; 
    for ( int number = A ; number <= B ; ++number ){
        if ( primity[ number ] == K ){
            res += 1 ;
        }
    }
    out << res ;
}

void solveAll(){
    ifstream in( "C:\\data\\in.txt", ios::in ) ;
    ofstream out( "C:\\data\\out.txt", ios::out ) ;
    int tasksCount ; in >> tasksCount ;
    for ( int task = 1 ; task <= tasksCount ; ++task ){
        out << "Case #" << task << ": " ;
        solveOne( in, out ) ;
        out << endl ;
    }
}

} ;

int main(){ 
    Solve solve ;
   solve.solveAll() ;
   return 0 ;
}











