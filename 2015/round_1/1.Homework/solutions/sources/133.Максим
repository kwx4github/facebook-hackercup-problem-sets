#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <string>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <set>
#include <utility>
#include <vector>
#include <algorithm>
#include <map>
#include <deque>
#include <iomanip>
#include <queue>
#include <iostream>
#include <ctime>
#include <fstream>
#include <functional>
#include <cstdlib>
#include <iterator>
#include <stack>

#define ll long long
#define pb push_back
#define mp make_pair
#define D  double
#define pi pair<ll,ll>
#define si set <pi>
#define F first
#define S second
#define forn(i,n) for (int(i)=0;(i)<(n);i++)
#define forr(i,x,y) for (int(i)=(x);(i)<=(y);i++)
#define ford(i,x,y) for (int(i)=(x);(i)>=(y);i--)
#define rev reverse
#define in insert
#define er erase
#define all(n) (n).begin(),(n).end()
#define graf vector<vector<pi> >
#define graf1 vector<vector<ll> >
#define sqr(a) (a)*(a)
#define file freopen("qq.txt","r",stdin);freopen("QQ.txt","w",stdout);

const ll INF=1000000007;
const D cp=2*asin(1.0);
const D eps=1e-9;
const ll mod=1000000007;

using namespace std;

const int N = 10000000;
int lp[N+1];
int q[N+1];

int main()
{
    //file;
    cin.tie(NULL);
    ios_base::sync_with_stdio(false);
    int T;
    cin>>T;
    memset(lp,0,sizeof(lp));
    memset(q,0,sizeof(q));
    lp[0] = lp[1] = 1;
    for (int i=2; i<=N; ++i)
	if (lp[i]==0)
			for (int j=i; j<=N; j+=i)
				q[j]++,lp[j] = 1;
    forn(Q,T)
    {
        int a,b,k,cnt=0;
        cin>>a>>b>>k;
        forr(i,a,b) {if(q[i]==k) cnt++;}
        cout<<"Case #"<<Q+1<<": "<<cnt<<endl;
    }
    /*ifstream f("QQ.txt");
    vector<string> a,b;
    string s;
    while(getline(f,s))
    {
        a.pb(s);
    }
    f.close();
    ifstream w("output.txt");
    while(getline(w,s))
    {
        b.pb(s);
    }
    w.close();
    if (a.size()!=b.size()) cout<<"WA";
    else
    {
        bool ok=true;
        forn(i,a.size()) if (a[i]!=b[i]) cout<<a[i],ok=false;
        if (ok) cout<<"OK";
    }*/
    return 0;
}
