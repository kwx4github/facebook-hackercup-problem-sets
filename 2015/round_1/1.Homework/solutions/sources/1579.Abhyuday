#include<iostream>
//#include<fstream>
#include <string.h>
using namespace std;

long arr[10000001];
long max_input = 10000001;

// marks all mutiples of 'a' ( greater than 'a' but less than equal to 'n') as 1.
void markMultiples(int a, int n)
{
    int i = 2, num;
    while ( (num = i*a) <= n )
    {
        arr[ num ]++; // minus 1 because index starts from 0.
        ++i;
    }
}
 
// A function to print all prime numbers smaller than n
void SieveOfEratosthenes(int n)
{
    // There are no prime numbers smaller than 2
    if (n >= 2)
    {
        // Create an array of size n and initialize all elements as 0
        memset(arr, 0, sizeof(arr));
 
        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i=2; i<n; ++i)
        {
            if ( arr[i] == 0 )
            {
            	arr[i]++;
                //(i+1) is prime, print it and mark its multiples
                //printf("%d ", i+1);
                markMultiples(i, n);
            }
        }
    }
}
 
int main() {
	//ifstream cin("homework1.txt");ofstream cout("output.txt");
	int T;
	cin >> T;
	SieveOfEratosthenes(max_input);
	
	long A, B, K;
	for(int t=0;t<T;t++) {
		cin >> A >> B >> K;
		if(K > 8 || K < 1) {
			cout << "Case #" << t+1 << ": " << "0" << endl;
			continue;
		}
		
		int answer = 0;
		for(long i=A;i<=B;i++) {
			if(arr[i] == K) {
				//cout << i << endl;
				answer++;
			}
		}
		cout << "Case #" << t+1 << ": " << answer << endl;
	}
	//cout << "Max Primality = " << max_primality << endl;
	return 0;
}
