/* Author : Piyush Agarwal

 _._ _..._ .-',     _.._(`))
'-. `     '  /-._.-'    ',/
   )         \            '.
  / _    _    |             \
 |  a    a    /              |
 \   .-.                     ;  
  '-('' ).-'       ,'       ;
     '-;           |      .'
        \           \    /
        | 7  .__  _.-\   \
        | |  |  ``/  /`  /
       /,_|  |   /,_/   /
          /,_/      '`-'
*/
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mod 1000000007
#define inp1(a) scanf("%lld",&a);
#define outl(a) printf("%lld\n",a);
#define out(a) printf("%lld ",a);
#define line printf("\n");
#define FOR(i,b,e) for(i=b;i<=e;i++)
#define mp make_pair
#define pb push_back
#define inp2(a,b) scanf("%lld %lld",&a,&b)
#define getcx getchar_unlocked
#define chkbit(s,b) (s & (1<<b))
#define setbit(s,b) (s | (1<<b))
#define clrbit(s,b) (s &= ~(1<<b))
 
/*inline void finp(ll *a )
{
	ll n=0; int ch = getcx(); int sign = 1;
	while(ch < '0' || ch > '9')
	{
	if(ch == '-') sign=-1; ch = getcx();
	}
	while(ch >= '0' && ch <= '9')
	{
	n = (n << 3) + (n << 1) + ch - '0', ch = getcx();
	}
	*a = n * sign;
}*/
ll power(ll b,ll e)
{
	ll x=1;
	while(e>0)
	{
		if(e&1)
			x=x*b;
		b=b*b;
		e=e/2;
	}
	return x;
}  
ll gcd(ll a,ll b)
{
    if(b==0)
          return a;
    return gcd(b,a%b);
}
ll t,i,j,k,l,m,n,a[10000005],b[10000005];
string s;
int main()
{
	ll sq=sqrt(10000005);
	a[2]=2;
	for(i=3;i<=sq;i=i+2)
	{
		if(a[i]==0)
		{
			for(j=3;j*i<=10000005;j=j+2)
				a[i*j]=i;
		}
	}
	b[2]=1;
	for(i=3;i<=10000000;i++)
	{
		ll c=0,cpy=i;
		if(cpy%2==0) 
		{
			c++;
		}
		while(cpy%2==0)
			cpy=cpy/2;
		if(cpy==1)
		{
			b[i]=1;
			continue;
		}
		if(a[cpy]==0)
		{
			c++;
			cpy=1;
			b[i]=c;
			continue;
		}
		while(cpy>1)
		{
			ll x=a[cpy];
			
			if(x==0)
			{
				cpy=1;
				c++;
				b[i]=c;
				break;
			}
			while(cpy%x==0)
				cpy=cpy/x;
			c++;
			if(cpy==1)
			{
				b[i]=c;
				break;
			}
		}
	}
//	for(i=2;i<=20;i++)
//		printf("%lld %lld\n",i,b[i]);
//	printf("%lld\n",maxc);
	ll p,l,r;
	inp1(t);
	for(k=1;k<=t;k++)
	{
		inp2(l,r);
		inp1(p);
		if(p>8)
			printf("Case #%lld: 0\n",k);
		else
		{
			ll c=0;
			for(int i=l;i<=r;i++)
				if(b[i]==p)
					c++;
			printf("Case #%lld: %lld\n",k,c);
		}
	}
	return 0;
}
