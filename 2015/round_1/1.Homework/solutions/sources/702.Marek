#include<iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <vector>
#include <cmath>
#include <list>
#include <sstream>
#include <algorithm>

using namespace std;

typedef pair<int,int> PII;
typedef long long LL;
typedef vector<int> VI;
typedef pair<LL,LL> PLL;
typedef vector<pair<int,int> > VPII;
typedef vector<LL> VLL;
typedef vector<vector<int> > VVI;
typedef vector<string> VS;
typedef long double LD;

#define PI 3.14159265358979323
#define EE 2.71828182845
#define EPS 10e-10
#define INF 10000000

inline LL MAX(LL a, LL b){ return a < b ? b : a;}
inline LL MIN(LL a, LL b){ return a < b ? a : b;}

#define FOR(i,n)      for(int i=0;i<(n);i++)
#define FORD(i,n)     for(int i=(n)-1;i>=0;i--)

#define MP make_pair
#define PB push_back

#define MX 10000000

// kolko kuskov sumy K je do 
int sum[MX + 7][10];
int val[MX + 7];

void precompute() {
  for (int i = 2; i <= MX; ++i) if (val[i] == 0){
    int d = i;
    while (d <= MX) {
      val[d]++;
      d += i;
    }
  }

  // sum[x][y] .. kolko po x s val y vratane
  for (int i = 1; i <= MX; ++i) {
    for (int j = 1; j <= 10; ++j) sum[i][j] = sum[i - 1][j] + (val[i] == j);
  }

}

void solve(int tc) {
  int A, B, K;
  cin >> A >> B >> K;
  cout << "Case #" << tc << ": " << sum[B][K] - sum[A - 1][K] << endl;
}

int main(){
  precompute();
  int TT;
  cin >> TT;
  FOR(tt, TT) solve(tt + 1);
}

