#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<stdlib.h>
#include<algorithm>
#define getcx getchar_unlocked
#define pc(x) putchar_unlocked(x);
#ifndef ONLINE_JUDGE
    #define getcx getchar
#endif
using namespace std;
#define ull unsigned long long int
#define lli long long int
#define li long int
#define ii int
#define mod 1000000007
/* Created by : Rahul Johari
				Thapar University */
				
inline int inp()
{
   int n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}

inline long long in()
{
   long long n=0;
   long long ch=getcx();long long sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}

inline void write (lli n)
{
    lli N = n, rev, count = 0;
    rev = N;
    if (N == 0) { pc('0'); pc('\n'); return ;}
    while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
    rev = 0;
    while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
    while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
    while (count--) pc('0');
}
 
lli ar[10000010];
void markMultiples ( lli ar[], lli a, lli n )
{
	lli i=2,num;
	while ( (num=i*a)<=n )
	{
		ar[num-1] += 1;
		++i;
	}
}

void SieveOfEratosthenes ( lli n )
{
	if ( n>=2 )
	{
		memset(ar,0,sizeof(ar));
		
		for ( lli i=1;i<n;i++ )
		{
			if ( ar[i] == 0 )
			{
				ar[i] = 1;
				//cout << i+1 << " ";
				markMultiples(ar,i+1,n);
			}
		}
	}
}

int main()
{
	//your code goes here
	SieveOfEratosthenes(10000010);
	lli t,cse,a,b,k,i,count;
	
	t = in();
	for ( cse=1;cse<=t;cse++ )
	{
		a = in();	b = in();	k = in();
		count = 0;
		
		for ( i=a-1;i<=b-1;i++ )
		{	
			//cout << ar[i] << ".";
			if ( ar[i]==k )
				count += 1;
				//cout << i << "." << ar[i] << " ";
		}
		//cout << endl;
		printf("Case #%lld: %lld\n",cse,count);
	}
	return 0;
}