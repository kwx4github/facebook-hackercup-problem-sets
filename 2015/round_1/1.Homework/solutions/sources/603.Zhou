#include <functional>
#include <algorithm>
#include <stdexcept>
#include <iostream>
#include <sstream>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <utility>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <cctype>
#include <cstdio>
#include <vector>
#include <string>
#include <bitset>
#include <cmath>
#include <queue>
#include <stack>
#include <tuple>
#include <ctime>
#include <list>
#include <map>
#include <set>

#define REP(i,n) for(int i=0;i<(n);i++)
#define TR(i,x) for(__typeof(x.begin()) i=x.begin();i!=x.end();i++)
#define ALL(x) x.begin(),x.end()
#define SORT(x) sort(ALL(x))
#define CLEAR(x) memset(x,0,sizeof(x))
#define FILL(x,c) memset(x,c,sizeof(x))
#define SIZE(x) (int)(x).size()

#define MP make_pair
#define MT make_tuple
#define PB push_back
#define EB emplace_back

using namespace std;

typedef long long LL;
typedef pair<int,int> PII;

const int MAXN = 1e7 + 10;
const int MAXK = 9;

int s[MAXN][MAXK], f[MAXN];
bool mk[MAXN];

void Prepare() {
    for (int i = 2; i < MAXN; ++i) {
        if (mk[i]) continue;
        for (int j = i; j < MAXN; j += i) {
            mk[j] = true;
            ++f[j];
            assert(f[j] < MAXK);
        }
    }
    for (int i = 2; i < MAXN; ++i) {
        for (int j = 1; j < MAXK; ++j) {
            s[i][j] =s[i - 1][j];
        }
        ++s[i][f[i]];
    }
}

void Solve() {
    int A, B, K;
    cin >> A >> B >> K;
    if (K >= MAXK) {
        puts("0");
        return;
    }
    printf("%d\n", s[B][K] - s[A - 1][K]);
}

int main() {
//    freopen("homework_example_input.txt", "r", stdin);
    freopen("homework.txt", "r", stdin);
    freopen("homework_output.txt", "w", stdout);

    Prepare();
    int cas;
    cin >> cas;
    for (int T = 1; T <= cas; ++T) {
        printf("Case #%d: ", T);
        Solve();
    }

    return 0;
}

