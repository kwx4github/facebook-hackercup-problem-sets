#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int tmp[10000000][10];

int primacity(int n) {
    int in = n; 
    int l = ceil(sqrt(n)); 
    int ret = 0; 

    for (int i = 2; i <= l; ++i) {
        if (n % i == 0) {
            ret++; 
            tmp[in][ret] = i; 
            do {
                n /= i;
                if (tmp[n][0] != 0) break; 
            } while (n % i == 0); 
            if (tmp[n][0] != 0) break; 
        }
    }

    if (tmp[n][0] != 0) {
        for (int i = 1; i <= tmp[n][0]; ++i) {
            int found = 0; 
            for (int j = 1; j <= ret; ++j) {
                if (tmp[in][j] == tmp[n][i]) {
                    found++; 
                    break;
                }
            }
            if (!found) {
                ret++; 
                tmp[in][ret] = tmp[n][i]; 
            }
        }
    } else {
        if (n != 1) {
            ret++; 
            tmp[in][ret] = n; 
        }
    }

    tmp[in][0] = ret; 

    return ret;
}

int main() {
    int cnt; 
    int i; 
    scanf("%d", &cnt); 
    for (int i = 0; i < 10000000; ++i)
        tmp[i][0] = 0; 
    for (int i = 0; i < cnt; ++i) {
        int a, b, p, r = 0; 
        scanf("%d%d%d", &a, &b, &p); 
        for (int k = a; k <= b; ++k) {
            //printf("%d: %d)\n", k, primacity(k)); 
            if (primacity(k) == p) r++; 
        }
        printf("Case #%d: %d\n", i + 1, r); 
    }
    return 0; 
}
