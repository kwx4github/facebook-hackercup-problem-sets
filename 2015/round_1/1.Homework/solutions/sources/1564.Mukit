#include<bits/stdc++.h>

using namespace std;

#define FOR(i,a,b)   	for(int (i)=(a);(i)<(b);(i)++)
#define PB           	push_back
#define INF          	(1 << 26)
//#define DEBUG(___x)     cout<<#___x<<" = ["<<___x<<"]"<<endl
#define SORT(___a)      sort(___a.begin(),___a.end())
#define RSORT(___a)     sort(___a.rbegin(),___a.rend())
#define PI           	3.141592653589793238
#define MP           	make_pair
#define PII          	pair<int,int>
#define ALL(___v)       (___v).begin(), (___v).end()
#define VS           	vector<string>
#define VI           	vector<int>
#define S            	size()
#define B				begin()
#define E				end()
#define print(___v)     {cout<<"[";if(___v.S)cout<<___v[0];FOR(___i,1,___v.S)cout<<","<<___v[___i];cout<<"]\n";}
#define clr(___x, ___v)	memset(___x, ___v , sizeof ___x);
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)

int tu(int val) {return (1 << val);}
bool iset(int mask, int id) {if((mask & tu(id) ) != 0)return true;return false;}
void doset(int &mask, int id) {mask |= tu(id);}
void dounset(int &mask, int id) {mask = mask & (~tu(id));}

typedef long long 					bint;
template<typename T> string tos( T a ) 	{ stringstream ss; string ret; ss << a; ss >> ret; return ret;}

const bint MX = 10000007;
const int MXX = 664679;

bint isp[MX];
VI vls[MXX];
int plen;

void gen() {
    
    clr(isp, 0);
    
    for(bint p = 2; p < MX; p++) {
        if(isp[p] == 0) {
            //if(p < 100)DEBUG(p);
            for(bint j = p + p; j < MX ; j += p) {
                //if(vl >= MX)DEBUG("BOUND!!!!");
                isp[j]++;
            }
        }
        //if(p % 10000 == 0)DEBUG(p);
    }
    //DEBUG("DONE");
}

int main() {
    
    freopen("homework.txt", "r", stdin);
    freopen("homework_out.txt", "w", stdout);
    
    gen();
    
    //bint borok = 0;
    FOR(i,2,MX) {
        if(isp[i] == 0)isp[i] = 1;
        //borok = max(isp[i], borok);
        vls[isp[i]].PB(i);
    }
    //DEBUG(borok);

    FOR(i,0,MXX) {
        //vls[i].PB(1000000002);
        SORT(vls[i]);        
        //if(i == 1)FOR(j,0,100)DEBUG(vls[i][j]);
    }
    
//    int vvl = 2*3*5*7*11*13;
//    DEBUG(vvl);
//    DEBUG(isp[vvl]);
        
//    FOR(i,0,MXX) {
//        FOR(j,1,vls[i].S) {
//            if(vls[i][j] == vls[i][j-1])DEBUG("BAD!!");
//        }
//    }
    
    int T;
    scanf("%d", &T);
    FOR(t,0,T) {
        int va, vb, k;
        scanf("%d %d %d", &va, &vb, &k);
        int ans = 0;
        if(k < MXX && vls[k].S > 0) {
            int len = vls[k].S;
            
            //FOR(i,0,min(len, 20))DEBUG(vls[k][i]);
            
            int ia = lower_bound(vls[k].begin(), vls[k].end(), va) - vls[k].begin();
            if(ia < len) {
                int ib = upper_bound(vls[k].begin(), vls[k].end(), vb) - vls[k].begin()-1;
                ans = max(0, ib - ia + 1);
            }
        }
        
        printf("Case #%d: %d\n", 1+t, ans);
    }
    
    return 0;
}

/*                       _        _                       _           _ 
         ___  ___  _   _| |    __| | ___ _ __   __ _ _ __| |_ ___  __| |
        / __|/ _ \| | | | |   / _` |/ _ \ '_ \ / _` | '__| __/ _ \/ _` |
        \__ \ (_) | |_| | |  | (_| |  __/ |_) | (_| | |  | ||  __/ (_| |
        |___/\___/ \__,_|_|___\__,_|\___| .__/ \__,_|_|   \__\___|\__,_|
        Mukit Hasan, Jahangirnagar University.*/
