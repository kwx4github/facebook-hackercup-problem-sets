#include<bits/stdc++.h> //srand(time(NULL))

using namespace std;

#define REP(i,n)     for(i=0;i<(n);i++)
#define REPI(x,a,b)  for(x=(a);x<=(b);x++)

#define FORE(i,a)   for(typeof((a).begin())i=(a).begin();i!=(a).end();i++)//reverse_iterator
#define mem(a,b)    memset(a,b,sizeof(a))
#define pii         pair < int , int >
#define BE(a)       a.begin(),a.end()
#define EQ(a,b)     (fabs(a-b)<ERR)
#define SZ(a)       (int)a.size()
#define vi          vector<int>
#define ll          long long
#define mp          make_pair
#define pb          push_back
#define sc          second
#define fs          first

#define deb(a...)          {cerr<<"#"<<__LINE__<<" -> ";dbg,a; cerr<<endl;}
struct debugger { template<typename T> debugger& operator , (const T v) { cerr<<v<<" "; return *this; } } dbg;

//bool operator()(const int &p,const int &q){return p<q;}//for map,set sort declare it in a struct
//bool operator<(const data &p)const{return p.w<w;}

#define oo          (1<<30)
#define MAX         100009 // (int)1e5 + 9
//loop | binary search | priority queue | backtracking map<int , bool> | disjoin set |

int sum[(int)(1e7+100)];
int pnum[MAX];
vi prime;

void siv()
{
    for(int i=2;i<MAX;i++)
    {
        if(pnum[i]==0)
        {
            prime.pb(i);
            for(int j=i+i;j<MAX;j+=i) pnum[j] = 1;
        }
    }
}

int np(int val)
{
    //if(val%10000==0) cout<<val<<endl;
    int ret = 0;
    int lim = sqrt(val);
    for(int i=0; prime[i]<=lim && i<SZ(prime); i++)
    {
        if(val%prime[i]==0)
        {
            while(val%prime[i]==0) val/=prime[i];
            ret++;
            lim = sqrt(val);
        }
    }
    if(val>1) ret++;
    return ret;
}

/*
10
2 2 1
cout
*/
int main()
{
    freopen("input_a.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int i,j,k;
    siv();
    for(i=1;i<=(int)(1e7+10);i++) sum[i] = np(i);

    int t; cin>>t;
    for(int cas=1;cas<=t;cas++)
    {
        int A,B,K;
        cin>>A>>B>>K;
        int cnt = 0;
        for(i=A;i<=B;i++) if(sum[i]==K) cnt++;
        printf("Case #%d: %d\n",cas,cnt);
    }
}
