#include <bits/stdc++.h>
using namespace std;

// normal sieve

const int maxn = 10000000;
short int sv[maxn+1] = {-1,-1,0};
map<int,vector<int> > M;

void sieve() {
    for (int i=2; i<=maxn; i+=2) sv[i] = 1;
    for (int i=3; i<=maxn; i+=2) if (!sv[i]) {
        for (int j=i; j<=maxn; j+=i) ++sv[j];
    }
    for (int i=2; i<=maxn; ++i) M[sv[i]].push_back(i);
}

int main() {
    freopen("homework.txt", "rt", stdin);
    freopen("homework.out.txt", "wt", stdout);

    sieve();
    int T;
    cin>>T;
    for (int cas=1; cas<=T; ++cas) {
        int a, b, k;
        cin>>a>>b>>k;
        int r = 0;
        if (M.count(k)) {
            vector<int>& L = M[k];
            r = upper_bound(L.begin(), L.end(), b) - lower_bound(L.begin(), L.end(), a);
        }
        cout << "Case #" << cas << ": " << r << endl;
    }

    return 0;
}
