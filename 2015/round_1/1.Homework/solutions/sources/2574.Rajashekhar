package com.facebook;

import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class Homework {
    private static long LENGTH = 10000000;
    private static ArrayList<Long> primeAr = new ArrayList<Long>();
    private static boolean[] isprimeAr = new boolean[(int) LENGTH + 2];
    private static ArrayList<Long> primacityAr = new ArrayList<Long>();
    private static long[] preprocessedAr;
    public static void main(String[] args) throws Exception {
        long start = System.currentTimeMillis();
        preprocess();
        calculateHomeWork();
        long end = System.currentTimeMillis();
        //System.out.println((end - start)/1000);
    }
    
    private static void calculateHomeWork() throws Exception {
        //Scanner in = new Scanner(System.in);
        //Scanner fileIn = new Scanner(new FileInputStream("/Users/rajashekhar.c/Downloads/homework.txt"));
//        long arrLength = fileIn.nextLong();
//        preprocessedAr = new long[(int)arrLength];
//        for (int i = 0; i < arrLength; i++) {
//            preprocessedAr[i] = fileIn.nextLong();
//        }
        

        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for (int i = 0; i < t; i++) {
            long a = in.nextLong();
            long b = in.nextLong();
            long k = in.nextLong();
            calculateHomeWork(i, a, b, k);
        }
        in.close();
        //fileIn.close();        
    }
    
    private static void calculateHomeWork(int caseno, long a, long b, long k){
        int count = 0;
        for (long i = a; i <= b; i++) {
            //if(preprocessedAr[(int)i] == k){
            if(primacityAr.get((int)i) == k){
                count++;
            }
        }
        String temp = "Case #" + (caseno+1) + ": " + count;
        System.out.println(temp);
    }
    
    private static void preprocess() throws Exception{
        preprocessPrimes();
        primacityAr.add(0L);
        primacityAr.add(0L);
        for (int i = 2; i <= LENGTH; i++) {
            long primacity = 0;
            long number = i;
            for (int j = 0; j < primeAr.size(); j++) {
                if(isprimeAr[(int)number]){
                    primacity = 1;
                    break;
                }
                
                if(number < primeAr.get(j)){
                    break;
                }
                if(number % primeAr.get(j) == 0){
                    primacity ++;
                }
                
                while(number % primeAr.get(j) == 0){
                    number = number / primeAr.get(j);
                }
                
                if(number < i){
                    primacity += primacityAr.get((int)number);
                    break;
                }
            }
            primacityAr.add(primacity);
        }
        
//        StringBuilder outputStringBuilder = new StringBuilder();
//        
//        outputStringBuilder.append(primacityAr.size() + "\n");
//        for (int i = 0; i < primacityAr.size(); i++) {
//            outputStringBuilder.append(primacityAr.get(i) + "\n");
//        }
//        String outputStr = outputStringBuilder.toString();
//        
//        BufferedWriter writer = new BufferedWriter( new FileWriter("/Users/rajashekhar.c/Downloads/homework.txt"));
//        writer.write(outputStr);
//        writer.close();

    }
    
    private static void preprocessPrimes(){
        primeAr.add(2L);
        for (long i = 3; i <= LENGTH; i++) {
            if(isPrime(i)){
                primeAr.add(i);
                isprimeAr[(int)i] = true;
            }
        }
    }
    
    private static boolean isPrime(long number){
        long sqrt = (long)Math.sqrt((double)number);
        for (int i = 2; i <= sqrt; i++) {
            if(number%i == 0){
                return false;
            }
        }
        return true;
    }
}
