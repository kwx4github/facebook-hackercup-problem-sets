/************************************************************/
// 	Author  : Krishna Vedulla
//	College : Army Institute of Technology, Pune
/************************************************************/

#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <limits.h>
#include <algorithm>
#include <math.h>
#include <map>
#include <bitset>
#include <set>
#include <fstream>
#include <string.h>


#define MAX 10000001
#define MOD 1000000007
#define LL long long
#define ULL unsigned long long


#define FOR(i,a,b) for(int i=a; i<b; i++)
#define FOR_(i,a,b) for(int i=a-1; i>=b; i--)
#define NODE pair<int, int>
#define SQR(a) ((a)*(a))
#define VI vector<int>
#define MII map<int, int>

#define SI(n) scanf("%d", &n)
#define SS(r) scanf("%s", r)
#define PI(n) printf("%d\n", n)
#define PS(r) printf("%s\n", r)

using namespace std;

/*********************************************************************************/

bool primes[MAX]={false};
int dp[MAX];

// sieve of eratosthenes
void sieve()
{
	int n = (int)sqrt(MAX) + 1;
	FOR(i,2,n)
		if (!primes[i])
		{
			for (int j = i; j*i < MAX; j++)
				if(!primes[j*i])
					primes[j*i] = true;
		};;

	// storing all primes
	int lim = MAX/2;
	FOR(i,2,lim)
		if(!primes[i]) {
			for(int j=i;j<MAX; j+=i)
				dp[j]++;
		}
}

int solve(int a, int b, int k)
{
	int cnt = 0;
	// processing
	b++;
	FOR(i,a,b)
	{
		if(dp[i]==k)
			cnt++;
	}
	return cnt;
}

int main()
{
	int t;
	int a=0, b=0, ans, k=0;
	ifstream in; ofstream out;
	in.open("2one15-ip.txt");
	out.open("2one15-op.txt");

	sieve();
	in>>t;
	FOR(i,1,t+1)
	{
		ans = 0;
		in>>a>>b>>k;
		if(k<10)
			ans = solve(a,b,k);
		out<<"Case #"<<i<<": " << ans <<endl;
	}
	in.close();
	out.close();
	return 0;
}