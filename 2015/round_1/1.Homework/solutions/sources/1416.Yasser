package round1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.BitSet;

public class A {

    final String INPUT_FILE = "input.txt";
    final String OUTPUT_FILE = "output.txt";
    final int MAX_A = 10000000 + 5;

    int[] pfCount;

    private void initPfCount() {
	pfCount = new int[MAX_A];
	BitSet isPrime = new BitSet(MAX_A);
	isPrime.set(0, isPrime.size());

	for (long i = 2; i < MAX_A; i++) {
	    if (!isPrime.get((int) i))
		continue;
	    ++pfCount[(int)i];
	    for (long j = i + i; j < MAX_A; j += i) {
		isPrime.clear((int) j);
		++pfCount[(int) j];
	    }
	}
    }

    public String solve(int A, int B, int K) {
	int cnt = 0;
	for (int i = A; i <= B; i++) {
	    if (pfCount[i] == K)
		cnt++;
	}
	return cnt + "";
    }

    public void solver() throws Exception {
	initPfCount();

	BufferedReader in = new BufferedReader(new FileReader(INPUT_FILE));
	PrintWriter out = new PrintWriter(new File(OUTPUT_FILE));
	int t = Integer.parseInt(in.readLine());

	for (int tt = 1; tt <= t; tt++) {
	    String[] line = in.readLine().split(" ");
	    int A = Integer.parseInt(line[0]);
	    int B = Integer.parseInt(line[1]);
	    int K = Integer.parseInt(line[2]);
	    out.println("Case #" + tt + ": " + (solve(A, B, K)));
	}
	in.close();
	out.close();
    }

    public static void main(String[] args) throws Exception {
	new A().solver();
    }

}
