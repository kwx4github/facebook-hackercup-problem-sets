package hackercode;

import com.sun.xml.internal.ws.api.pipe.NextAction;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Locale;
import java.util.StringTokenizer;

/**
 *
 * @author Dinnot
 */
public class HackerCode implements Runnable{

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        new Thread(null, new HackerCode(), "", 256 * (1L << 20)).start();
    }
    
    BufferedReader in;
    PrintWriter out;
    StringTokenizer tok = new StringTokenizer("");
    
    public void run() {
        try {
            long t1 = System.currentTimeMillis();
            in = new BufferedReader(new FileReader("E:\\xampp\\htdocs\\HackerCode\\src\\hackercode\\input.txt"));
            out = new PrintWriter("E:\\xampp\\htdocs\\HackerCode\\src\\hackercode\\output.txt");
            Locale.setDefault(Locale.US);
            int T = readInt();
            for(int i = 0; i < T; i++)
                solve(i+1);
            in.close();
            out.close();
            long t2 = System.currentTimeMillis();
            System.err.println("Time = " + (t2 - t1));
        } catch (Throwable t) {
            t.printStackTrace(System.err);
            System.exit(-1);
        }
    }
    
    String readString() throws IOException {
            while (!tok.hasMoreTokens()) {
                    tok = new StringTokenizer(in.readLine());
            }
            return tok.nextToken();
    }

    String readLine() throws IOException {
        return in.readLine();
    }
    
    int readInt() throws IOException {
            return Integer.parseInt(readString());
    }

    long readLong() throws IOException {
            return Long.parseLong(readString());
    }

    double readDouble() throws IOException {
            return Double.parseDouble(readString());
    }

    // solution

    void solve(int caseNr) throws IOException {
        
        int a = readInt();
        int b = readInt();
        int k = readInt();
        
        int[] arr = new int[b+1];
        
        for(int i = 2; i <= b; i++) {
            if(arr[i] == 0) {
                for(int j = i; j <= b; j+=i) {
                    arr[j]++;
                }
            }
        }
        int nr = 0;
        for(int i = a; i <= b; i++) {
            if(arr[i] == k)
                nr++;
        }
        
        out.print("Case #");
        out.print(caseNr);
        out.print(": ");
        out.println(nr);
    }
}
