#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <memory>
#include <cstring>
#include <cassert>
#include <numeric>
#include <sstream>
#include <complex>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cctype>
#include <unordered_map>
#include <unordered_set>
using namespace std;

#define REP2(i, m, n) for (int i = (int)(m); i < (int)(n); i++)
#define REP(i, n) REP2(i, 0, n)
#define ALL(S) (S).begin(), (S).end()

template <typename T, typename E>
ostream &operator<<(std::ostream &os, const std::pair<T, E> &p){
  return os << "(" << p.first << ", " << p.second << ")";
}

typedef long long ll;

const int max_n = 1000 * 1000 * 10 + 7;
int primacity[max_n];

void build(){
  memset(primacity, 0, sizeof(primacity));

  for (int i = 2; i * i < max_n; i++){
    if (primacity[i] == 0){
      for (int j = i; j < max_n; j += i){
        primacity[j]++;
      }
    }
  }
}

void solve(){
  int A, B, K, res = 0;
  cin >> A >> B >> K;

  for (int i = A; i <= B; i++){
    if (primacity[i] == K) res++;
  }
  cout << res << endl;
}

int main(){
  ios::sync_with_stdio(false);
  int T;
  cin >> T;

  build();
  
  REP(t, T){
    cout << "Case #" << t + 1 << ": "; solve();
  }
  return 0;
}
