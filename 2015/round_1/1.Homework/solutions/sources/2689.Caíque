#include <stdio.h>
#include <algorithm>
using namespace std;
#define MAXN 10100100
#define MAXK 11

int p[MAXN];
int np[MAXN];
int nk[MAXK][MAXN];

int main () {

  for (int i = 0; i < MAXN; i++) 
    p[i] = -1;

  for (int i = 2; i*i < MAXN; i++) {
    if (p[i] != -1)
      continue;
    for (int j = i*i; j < MAXN; j += i) {
      p[j] = i;
    }
  }
  np[1] = 0;
  for (int i = 2; i < MAXN; i++) {
    if (p[i] == -1) 
      np[i] = 1;
    else {
      int div = p[i];
      int now = i;
      while (now%div == 0)
	now /= div;
      np[i] = np[now] + 1;
    }
  }
  for (int k = 1; k < 10; k++) {
    nk[k][0] = 0;
    for (int i = 1; i < MAXN; i++) {
      nk[k][i] = nk[k][i - 1] + (np[i] == k);
    }
  }
  int teste;
  scanf ("%d", &teste);
  for (int t = 0; t < teste; t++) {
    int a, b, k;
    scanf ("%d %d %d", &a, &b, &k);
    printf ("Case #%d: ", t + 1);
    if (k >= 10) 
      printf ("0\n");
    else
      printf ("%d\n", nk[k][b] - nk[k][a - 1]);
  }
  return 0;
}
