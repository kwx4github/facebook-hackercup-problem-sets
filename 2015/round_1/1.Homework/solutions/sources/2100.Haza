//#define __test__aTest__
#ifndef __test__aTest__

#include <vector>
#include <list>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <assert.h>
#include <stdexcept>
#include <string>


using namespace std;

#define ll long long
#define ull size_t

int N;

const int MAXN = 10000005;

bool isPrime[MAXN];
int cnt[MAXN];

void init() {
    vector<int> primes;
    for (int i = 2; i < MAXN; ++i) {
        isPrime[i] = true;
    }
    for (int i = 2; i < MAXN; ++i) {
        if (isPrime[i]) {
            primes.push_back(i);
            int p = i;
            while (p < MAXN) {
                p += i;
                isPrime[p] = false;
            }
        }
    }
    int n = (int)primes.size();
    for (int i = 2; i < MAXN; ++i) {
        cnt[i] = 0;
        if (isPrime[i]) {
            cnt[i] = 1;
            continue;
        }
        for (int j = 0; j < n; ++j) {
            if (primes[j] > i) break;
            if (i % primes[j] == 0) {
                int p = i / primes[j];
                cnt[i] = cnt[p] + 1;
                if (p % primes[j] == 0) {
                    cnt[i]--;
                }
                break;
            }
        }
    }
}

void process(int index) {
    printf("Case #%d: ", index);
    //scanf("%d", &N);
    int A, B, K;
    cin >> A >> B >> K;
    int c = 0;
    for (int i = A; i <= B; ++i) {
        if (cnt[i] == K) {
            c++;
        }
    }
    cout<< c <<endl;
    //printf("%.9f\n", 0.0);
    fflush(stdout);
}

int main() {
    
    freopen("/Users/zishirs/Documents/workspace/test/test/test.txt", "r", stdin);
    freopen("/Users/zishirs/Documents/workspace/test/test/output.txt", "w", stdout);
    
    init();
    int T;
    scanf("%d", &T);
    for (int index = 1; index <= T; ++index) {
        process(index);
    }
    
    
    /*
    int n;
    vector<int> v;
    while (cin >> n) {
        v.push_back(n);
    }
    vector<int> v1(v.begin(), v.begin() + v.size()/2), v2(v.begin() + v.size()/2, v.end());
    */
    
    //srand((unsigned int)time(NULL));

    return 0;
}

#endif