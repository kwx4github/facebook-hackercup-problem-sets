#include <iostream>
#include <vector>

using namespace std;

const long long M = 10000001;

long long primality[M];
long long count[M][9];
bool primes[M];


void calc() {
  for (long long i = 0; i < M; ++i) {
    primes[i] = true;
    primality[i] = 0;
    count[i][0] = 0;
    count[i][1] = 0;
    count[i][2] = 0;
    count[i][3] = 0;
    count[i][4] = 0;
    count[i][5] = 0;
    count[i][6] = 0;
    count[i][7] = 0;
    count[i][8] = 0;
  }

  for (long long i = 2; i < M; ++i) {
    if (primes[i]) {
      for (long long j = i; j < M; j += i) {
	primes[j] = false;
	primality[j] += 1;
      }
    }
  }
  for (long long i = 1; i < M; ++i) {
    for (long long j = 0; j <= 8; ++j) {
      if (j == primality[i])
	count[i][j] = count[i-1][j] + 1;
      else
	count[i][j] = count[i-1][j];
    }
  }
}

int main() {
  calc();
  int T;
  cin >> T;
  for (int t = 1; t <= T; ++t) {
    long long a, b, k;
    cin >> a >> b >> k;
    if (k > 8)
      cout << "Case #" << t << ": 0" << endl;
    else 
      cout << "Case #" << t << ": " << count[b][k] - count[a-1][k] << endl;
  }
  return 0;
}
