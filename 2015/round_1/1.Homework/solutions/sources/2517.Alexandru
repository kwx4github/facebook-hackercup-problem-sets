#include <fstream>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

ifstream F("p.in");
ofstream G("p.out");

const int N = 10000010;

int n,t,co[N];
vector<int> v[N];

int main()
{
    n = N-10;
    for (int i=2;i<=n;++i)
        if ( co[i] == 0 )
            for (int j=i;j<=n;j+=i)
                co[j]++;
    for (int i=2;i<=n;++i)
        v[co[i]].push_back(i);
    F>>t;
    for (int tt=1,a,b,k;tt<=t;++tt)
    {
        F>>a>>b>>k;
        if ( k <= n )
        {
            int ans = upper_bound(v[k].begin(),v[k].end(),b) - lower_bound(v[k].begin(),v[k].end(),a);
            G<<"Case #"<<tt<<": "<<ans<<'\n';
        }
        else
            G<<"Case #"<<tt<<": "<<0<<'\n';
    }
}
