#pragma comment(linker, "/STACK:200000000")

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <cassert>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <sstream>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef vector <int> vi;

#define pb push_back
#define mp make_pair

template <class T> inline T sqr(const T& x) { return x * x; }
template <class T> inline void updMin(T& a, const T& b) { if (b < a) a = b; }
template <class T> inline void updMax(T& a, const T& b) { if (b > a) a = b; }

const int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1}; 

const int maxn = 10000000 + 100; 

vector<int> primes; 
bool prime[maxn]; 
int a, b, k; 

void precalc() {
	for (int i = 0; i < maxn; i++) {
		prime[i] = 1; 
	}
	prime[0] = prime[1] = 0; 
	for (int i = 2; i * i <= maxn; i++) {
		if (prime[i]) {
			for (int j = i * i; j < maxn; j += i) {
				prime[j] = 0; 
			}
		}
	}

	for (int i = 0; i < maxn; i++) {
		if (prime[i]) 
			primes.pb(i); 
	}
}

bool isprime(int x) {
	if (x == 1) return 0; 
	if (x == 2) return 1; 
	for (int i = 2; i * i <= x; i++) {
		if (x % i == 0) return 0; 
	}
	return 1; 
}

int solve(ll x, int i, int k) {
	if (x > b) return 0; 
	if (k == 0) {
		return (x >= a); 
	}
	if (i == primes.size()) return 0; 
	ll tmp = x; 
	for (int t = 0; t < k; t++) {
		tmp *= primes[i]; 
		if (tmp > b) return 0; 
	}

	int ans = solve(x, i + 1, k); 
	ll cur = x; 
	while (1) {
		cur *= primes[i]; 
		if (cur > b) break; 
		else ans += solve(cur, i + 1, k - 1); 
	}
	return ans; 
}

void solve(int tc) {
	//init 

	cin >> a >> b >> k; 


	//solve

	
	/*if (k == 1) {
		int ans = 0; 
		for (int i = a; i <= b; i++) {
			if (isprime(i)) ans++; 
		}

		cout << "Case #" << tc << ": " << ans << "\n"; 
		return; 
	}*/

	if (k > 30) {
		cout << "Case #" << tc << ": " << 0 << "\n"; 
		return; 
	}

	int ans = solve(1, 0, k); 

	//put answer

	cout << "Case #" << tc << ": " << ans << "\n"; 
}

int main()
{
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	
	precalc(); 

	int tc; 
	cin >> tc; 
	for (int i = 0; i < tc; i++) {
		cerr << i + 1 << "\n"; 
		solve(i + 1); 
	}

	return 0;
}


