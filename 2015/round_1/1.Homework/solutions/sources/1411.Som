package yesyoucan;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.sql.PreparedStatement;
import java.text.Collator;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;
 
 
 
 
class TestClass {
 
static int[] dist ;	
static int[][][] vis;
static char[][] graph;
static int max;
static int min;
static int[] dp;
static int[] prime;
static boolean[] isprime;

public static int find(int a , int l){
	int ans=0;
	
	if(isprime[a]) return 1;
	
	for(int i=0;i<l;i++){
		if(a%prime[i]==0){
			 int xx = a/prime[i];
			 
			 if(xx%prime[i]==0) return dp[xx];
			 else return (dp[xx]+1);
		}
	}
	
	
	
   return ans;
}

public static void main(String args[] ) throws IOException  {
	
 
 // BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
 BufferedReader in = new BufferedReader(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
//Scanner in = new Scanner(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
 PrintWriter pw = new PrintWriter(new FileWriter("C:\\Users\\Sompathak\\Desktop\\output.txt"));
	//InputStream inputStream = System.in;
	//InputReader in = new InputReader(inputStream);
//Scanner in = new Scanner(new InputStreamReader(System.in));
//Scanner in = new Scanner(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
max = 10000000;
min=2;
dp = new int[max+1];
isprime = new boolean[max+1];

Arrays.fill(dp, 1);
Arrays.fill(isprime, true);


prime = new int[max+1];

for(int i=2;i<=max;i++){
	
	  if(dp[i]==1){
		  for(int j=2;j*i<=max;j++){
			  
			    dp[j*i]=0;
			     isprime[j*i]= false;
		  }
	  }
}
int r=0;
for(int i=2;i<=max;i++)
	if(dp[i]==1) prime[r++]=i;

Arrays.fill(dp, 0);
dp[2]= 1; dp[3]=1;
for(int i=4;i<=max;i++){
	dp[i] = find(i,r);
}
//System.out.println(dp[936]);
 int t =  Integer.parseInt(in.readLine());
for(int j=1;j<=t;j++){
StringTokenizer sr = new StringTokenizer(in.readLine());
int a =  Integer.parseInt(sr.nextToken());
int b = Integer.parseInt(sr.nextToken());
int k = Integer.parseInt(sr.nextToken());
int ans=0;
for(int i=a;i<=b;i++)
	if(dp[i]==k) ans++;

pw.println("Case #"+j+": "+ans);
pw.flush();



//System.out.println(ans);
		 
	}


	


}
 }
 


 