import java.io.FileInputStream;
import java.util.InputMismatchException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.FilenameFilter;
import java.util.Locale;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.FileOutputStream;
import java.io.File;
import java.util.StringTokenizer;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args) {
		Locale.setDefault(Locale.US);
		InputStream inputStream;
		try {
			final String regex = "homework.*[.]txt";
			File directory = new File(".");
			File[] candidates = directory.listFiles(new FilenameFilter() {
				public boolean accept(File dir, String name) {
					return name.matches(regex);
				}
			});
			File toRun = null;
			for (File candidate : candidates) {
				if (toRun == null || candidate.lastModified() > toRun.lastModified())
					toRun = candidate;
			}
			inputStream = new FileInputStream(toRun);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("homework.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Homework solver = new Homework();
		solver.solve(1, in, out);
		out.close();
	}
}

class Homework {
    public static final int INF = (int) 1e7;

    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int[] cntPrimesDiv = new int[INF + 1];
        for (int i = 2; i * i <= INF; ++i)
            if (cntPrimesDiv[i] == 0)
                for (int j = i; j <= INF; j += i)
                    ++cntPrimesDiv[j];
        
        int test = in.nextInt();
        for (int t = 1; t <= test; ++t) {
            int A = in.nextInt();
            int B = in.nextInt();
            int K = in.nextInt();
            int ans = 0;
            for (int i = A; i <= B; ++i)
                if (cntPrimesDiv[i] == K)
                    ++ans;
            out.println("Case #" + t + ": " + ans);
        }
    }
}

class InputReader {
    BufferedReader in;
    StringTokenizer st;

    public InputReader(InputStream stream) {
        in = new BufferedReader(new InputStreamReader(stream));
        eat("");
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public String next() {
        while (!st.hasMoreTokens())
            eat(nextLine());
        return st.nextToken();
    }

    public String nextLine() {
        try {
            return in.readLine();
        } catch (IOException e) {
            throw new InputMismatchException();
        }
    }

    public void eat(String str) {
        if (str == null) throw new InputMismatchException();
        st = new StringTokenizer(str);
    }
}

