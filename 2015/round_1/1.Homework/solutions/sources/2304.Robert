#include <iostream>
#include <fstream>

using namespace std;


int divisors[11234567];
int primacity[11234567];
int prefixSums[11234567][10];

void populate_divisors() {
    for (int x = 2; x < 11234567; x++) {
        if (divisors[x] == 0) {
            for (int m = 2; x*m < 11234567; m++) {
                divisors[x*m] = x;
            }
        }
    }
}

void populate_primacity() {
    for (int x = 2; x < 11234567; x++) {
        int d = divisors[x];
        if (d != 0) {
                primacity[x] = primacity[x/d] + (bool)(x/d % d);
        }
        else {primacity[x] = 1;}
    }
}

void populate_prefixSums() {
    for (int k = 1; k < 10; k++) {
        for (int x = 2; x < 11234567; x++) {
            prefixSums[x][k] = prefixSums[x-1][k] + (bool)(primacity[x] == k);
        }
    }
}

int T, A, B, K, ans;
int main(void) {
    ifstream fin;
    fin.open("input.txt");
    ofstream fout("output.txt");

    populate_divisors();

    populate_primacity();
    populate_prefixSums();

    fin >> T;
    for (int i = 0; i < T; i++) {
        fin >> A >> B >> K;
        if (K >= 10) {ans = 0;}
        else {ans = prefixSums[B][K] - prefixSums[A-1][K];;}
        fout << "Case #" << i+1 << ": " << ans << "\n";
    }


    fin.close();
    fout.close();
}
