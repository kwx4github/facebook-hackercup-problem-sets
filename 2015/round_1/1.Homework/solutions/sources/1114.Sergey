#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <map>
#include <unordered_map>
#include <set>
#include <list>
#include <stack>
#include <bitset>

using namespace std;

#define MAXN 10000000

vector<long> primes;
bitset<MAXN+1> candidates;

void init_primes(int max)
{
    candidates.set();
    primes.clear();
    candidates.reset(0);
    candidates.reset(1);

    for (int i = 2; i <= max; i++)
    {
        if (candidates.test(i) == 1)
        for (int j = i; j <= max; j+=i)
        {
            candidates.reset(j);
        }
        primes.push_back(i);
    }
}

int countPf(int n)
{
    int result = 0;
    for (int i = 0; primes.size(); ++i)
    {
        if (n == 1 || primes[i] * primes[i] > n)
            break;
        if ((n % primes[i]) == 0)
        {
            result++;
            while ((n % primes[i]) == 0)
                n = n / primes[i];
        }
    }

    if (n != 1)
        result++;

    return result;
}

int main()
{
    //freopen("input.txt", "r", stdin);
    init_primes(MAXN);

    int T = 0;
    scanf("%d", &T);
    for (int t = 1; t <= T; t++)
    {
        int A = 0, B = 0, K = 0;
        scanf("%d %d %d", &A, &B, &K);
        int counter = 0;
        for (int n = A; n <= B; n++)
        {
            if (countPf(n) == K)
                counter++;
        }

        cout << "Case #" << t << ": " << counter << endl;
    }
}