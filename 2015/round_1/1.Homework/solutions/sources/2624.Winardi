#include<stdio.h>
#include<vector>

using namespace std;

#define MAX_PRIME 10000010

bool isPrime[MAX_PRIME];
vector<long long> prime;
int primacity[MAX_PRIME];

int nt,n;
int a,b,k;

int main(){
	memset(isPrime, true, sizeof(isPrime));
	memset(primacity, 0, sizeof(primacity));
	isPrime[0] = false;
	isPrime[1] = false;

	for(int i=4; i<MAX_PRIME; i+=2){
		isPrime[i] = false;
	}
	for(int i=3; i<MAX_PRIME; i+=2){
		for(long long j=(long long)i*i; j<MAX_PRIME; j+=i){
			isPrime[j] = false;
		}
	}

	for(int i=0; i<MAX_PRIME; i++){
		if(isPrime[i]){
			prime.push_back(i);
		}
	}

	int primeSize = prime.size();
	// for(int i=0; i<primeSize; i++){
	// 	printf("%d\n", prime[i]);
	// }

	for(int i=2; i<MAX_PRIME; i++){
		long long now = i;
		for(int posPrime=0; posPrime<primeSize; posPrime++){
			long long nowPrime = prime[posPrime];

			if(nowPrime * nowPrime > now){
				break;
			}
			if(now % nowPrime == 0){
				primacity[i]++;
				while(now % nowPrime == 0){
					now = now / nowPrime;
				}
			}
		}
		if(now != 1){
			primacity[i]++;
		}
	}

	// for(int i=2; i<220; i++){
	// 	printf("Primacity %d: %d\n", i, primacity[i]);
	// }

	scanf("%d", &nt);
	for(int t=0; t<nt; t++){
		scanf("%d %d %d", &a, &b, &k);
		int cnt = 0;
		for(int i=a; i<=b ;i++){
			if(primacity[i] == k){
				cnt++;
			}
		}
		printf("Case #%d: %d\n", t+1, cnt);
	}


	return 0;
}