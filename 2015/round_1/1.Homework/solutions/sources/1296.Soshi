#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <cstdio>
#include <cstring>
#include <cstdlib>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;

int T, A, B, K;
const int MAX_N = 10000001;

int primacity[MAX_N];
bool is_prime[MAX_N];

void sieve(int n)
{
	int p = 0;
	for (int i = 0; i <= n; ++i) is_prime[i] = true;
	is_prime[0] = is_prime[1] = false;
	for (int i = 2; i <= n; ++i) {
		if (is_prime[i]) {
			primacity[i] = 1;
			for (int j = 2 * i; j <= n; j += i) {
				is_prime[j] = false;
				primacity[j]++;
			}
		}
	}
}

void solve()
{
	fill(primacity, primacity + MAX_N, 0);
	sieve(B);
	int res = 0;
	for (int i = A; i <= B; ++i) {
		if (primacity[i] == K) ++res;
	}
	printf("%d\n", res);
	return;
}

int main()
{
	scanf("%d", &T);
	for (int i = 1; i <= T; ++i) {
		scanf("%d %d %d", &A, &B, &K);
		printf("Case #%d: ", i);
		solve();
	}
	return 0;
}
