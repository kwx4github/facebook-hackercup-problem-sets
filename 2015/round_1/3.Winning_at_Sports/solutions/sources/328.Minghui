import java.io.*;

class Winning_at_Sports {
	static final long MD = 1000000007;
	static long pow(long a, long n) {
		if (n == 0)
			return 1;
		if (n == 1)
			return a;
		long b = pow(a, n / 2);
		return b * b % MD * (n % 2 == 0 ? 1 : a) % MD;
	}
	static long fac(long n) {
		long m = 1;
		while (n > 1) {
			m = m * n % MD;
			n--;
		}
		return m;
	}
	static long choose(long n, long k) {
		return fac(n) * pow(fac(n - k), MD - 2) % MD * pow(fac(k), MD - 2) % MD;
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(System.out);
		int T = Integer.parseInt(br.readLine());
		for (int t = 1; t <= T; t++) {
			String[] ss = br.readLine().split("-");
			int a = Integer.parseInt(ss[0]);
			int b = Integer.parseInt(ss[1]);
			long sfr, sfu;
			if (b == 0) {
				sfr = 1;
				sfu = 1;
			} else {
				sfr = (choose(a - 1 + b, b) - choose(a - 1 + b, b - 1) + MD) % MD;
				sfu = (choose(b + b, b) - choose(b + b, b - 1) + MD) % MD;
			}
			pw.println("Case #" + t + ": " + sfr + " " + sfu);
		}
		pw.close();
	}
}
