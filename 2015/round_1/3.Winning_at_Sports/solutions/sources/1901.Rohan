#include <bits/stdc++.h>
long long int afree[2009][2009];
int sfree(int m, int n) {
	if( afree[m][n] != -1 ) {
		return afree[m][n];
	}
	if( m <= n ) {
		afree[m][n] = 0;
		return 0;
	}
	if ( m == 0 || n == 0 ) {
		afree[m][n] = 1;
		return 1;
	}
 	afree[m][n] = ( sfree( m - 1, n ) + sfree( m, n - 1 ) ) % 1000000007;
 	return afree[m][n];
}

long long int afull[2009][2009];
int sfull( int m, int n ) {
	if( afull[m][n] != -1 ) {
		return afull[m][n];
	}
	if( m <= n ) {
		afull[m][n] = 0;
		return 0;
	}
	if ( m == 0 || n == 0 ) {
		afull[m][n] = 1;
		return 1;
	}
	afull[m][n] = ( sfull( m - 1, n ) + sfull( m, n - 1 ) ) % 1000000007;
	return afull[m][n];
}

int main() {
	int t, test, i, n, j;
	char s[1000];
	long long int p, e, res;
	memset( afree, -1, sizeof( afree ) );
	memset( afull, -1, sizeof( afull ) );
	for( i=0;i<=2000;i++ ) {
		for( j=0;j<=2000;j++ ) {
			sfree( i, j );
			sfull( i, j );
		}
	}
	scanf( "%d", &test );
	for( t=1;t<=test;t++ ) {
		scanf( "%s", s );
		p = atoi( strtok( s   , "-" ) );
		e = atoi( strtok( NULL, "-" ) );
		printf( "Case #%d: %lld %lld\n", t, afree[p][e], afull[e+1][e] );
	}
	return 0;
}