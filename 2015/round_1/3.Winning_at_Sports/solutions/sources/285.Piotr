import sys

MAX=2000
MOD=10**9 + 7

sys.setrecursionlimit(3*MAX)

def sfree(R, a, b, stop):
    if a < 0 or b < 0:
        return 0
    if R[a][b] is None:
        R[a][b] = 0 if stop(a, b) else sfree(R, a-1, b, stop) + sfree(R, a, b-1, stop)
        R[a][b] %= MOD
    return R[a][b]

def solve():
    R1 = list([None for _ in xrange(MAX+1)] for __ in xrange(MAX+1))
    R2 = list([None for _ in xrange(MAX+1)] for __ in xrange(MAX+1))
    R1[0][0] = 1
    R2[0][0] = 1
    sfree(R1, MAX, MAX-1, lambda a, b: a <= b)
    sfree(R2, MAX, MAX-1, lambda a, b: a < b)
    return R1, R2

def main():
    T = int(raw_input())
    R1, R2 = solve()
    for t in xrange(1, T+1):
        a, b = [int(x) for x in raw_input().split('-')]
        r1, r2 = R1[a][b], R2[b][b]
        print "Case #%d: %d %d" % (t, r1, r2)

if __name__ == '__main__':
    main()

