import std.stdio, std.array, std.range, std.string, std.typecons;
import std.algorithm, std.container, std.math, std.numeric, std.random;
void scan(T...)(ref T args) { foreach (ref arg; args) readf(" %s", &arg); }
void minify(T)(ref T a, in T b) { if (a > b) a = b; }
void maxify(T)(ref T a, in T b) { if (a < b) a = b; }
void ewriteln(T...)(T args) { stderr.writeln("\033[35m", args, "\033[0m"); }

enum int N = 2008;
int[N][N] ways;
enum int MOD = 10^^9 + 7;
void init() {
	foreach (a; 0..N) {
		foreach (b; 0..N) {
			if (b == 0) ways[a][b] = 1;
			else if (a < b) ways[a][b] = 0;
			else if (a == 0) ways[a][b] = 0;
			else ways[a][b] = (ways[a-1][b] + ways[a][b-1]) % MOD;
		}
	}
}

void main() {
	init();
	int tcn;
	scan(tcn);
	foreach (tci; 1..tcn + 1) {
		int a, b;
		readf(" %s-%s", &a, &b);
		assert(a > b);
		assert(a <= 2000);
		assert(b >= 0);
		writefln("Case #%d: %d %d", tci, ways[a-1][b], ways[b][b]);
	}
}
