#include<bits/stdc++.h>
#define mod 1000000007
using namespace std;

int dp[2001][2001];
int solve_free(int i, int j)
{
    if(i == 1 && j == 0)
        return (dp[i][j] = 1);
    if(dp[i][j] != -1)
        return dp[i][j];

    dp[i][j] = 0;
    if(j > 0)
        dp[i][j] = (solve_free(i, j-1))%mod;
    if(j <= i-2)
        dp[i][j] = (dp[i][j] + solve_free(i-1, j))%mod;
    return dp[i][j];
}

int dp2[2001][2001];
int solve(int i, int j)
{
    if(i == 1 && j == 0)
        return (dp2[i][j] = 0);
    if((i == 1 && j == 1) || (i == 0 && j == 1))
        return (dp2[i][j] = 1);
    if(dp2[i][j] != -1)
        return dp2[i][j];

    dp2[i][j] = 0;
    if(i >= j && i > 0)
        dp2[i][j] = (solve(i-1, j))%mod;
    else
    {
        if(j > i)
            dp2[i][j] = (solve(i, j-1))%mod;
        if(i > 0)
            dp2[i][j] = (dp2[i][j] + solve(i-1, j))%mod;
    }
    return dp2[i][j];
}

int main()
{
    ios_base::sync_with_stdio(0);
    //freopen("test.txt", "r", stdin);

    for(int i=0; i<=2000; i++)
    {
        for(int j=0; j<=2000; j++)
        {
            dp[i][j] = -1;
            dp2[i][j] = -1;
        }
    }

    solve_free(2000, 2000);
    solve(2000, 2000);

    int t, caseno = 1;
    cin>>t;

    while(t--)
    {
        string s;
        cin>>s;
        int u = 0;

        int i = 0;
        for(;s[i] != '-'; i++)
        {
            u = u*10 + (s[i] - '0');
        }

        i++;
        int v = 0;
        for(; i<s.size(); i++)
        {
            v = v*10 + (s[i] - '0');
        }

        cout<<"Case #"<<caseno<<": "<<((dp[u][v] == -1)? 0 : dp[u][v])<<" "<<((dp2[v][v] == - 1)? 0: dp2[v][v])<<endl;
        caseno++;
    }

    return 0;
}
