#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <map>
#include <queue>
#include <memory>
#include <algorithm>
#include <cassert>

using namespace std;

const int kMod = 1000000007;

int StressFree(int A, int B) {
  vector<int64_t> r(2100, 0);
  r[0] = 1;
  for (int i = 1; i <= A; i++) {
    for (int k = 1; k < i; k++) {
      r[k] = (r [k] + r[k - 1]) % kMod;
    }
  }
  return r[B];
}

int StressFull(int A, int B) {
  if (B == 0)
    return 0;
  vector<int64_t> r(2100, 0);
  r[0] = 1;
  for (int i = 1; i <= B; i++) {
    for (int k = 1; k <= i; k++) {
      r[k] = (r [k] + r[k - 1]) % kMod;
    }
  }
  return r[B];
}

int main() {
  cin.sync_with_stdio(false);
  cin.tie(0);

  int T;
  cin >> T;
  for (int TT = 1; TT <= T; TT++) {
    char c;
    int A, B;
    cin >> A >> c >> B;
    assert(c == '-');
    cout << "Case #" << TT << ": " << StressFree(A, B) << ' ' << StressFull(A, B)  << endl;
  }
  return 0;
}
