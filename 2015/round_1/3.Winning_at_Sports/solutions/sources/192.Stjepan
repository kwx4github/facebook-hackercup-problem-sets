#include <cstdio>
#include <cstring>
#include <cassert>

#include <algorithm>
#include <iostream>
using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

const int MAX = 2010;
const int mod = 1000000007;

int A, B;
int dp[MAX][MAX];

inline void add(int &a, int b) {
  a += b;
  if (a >= mod) a -= mod;
}

int stress_free() {
  memset(dp, 0, sizeof dp);
  dp[1][0] = 1;
  
  REP(a, A+1) REP(b, B+1) if (dp[a][b]) {
    add(dp[a+1][b], dp[a][b]);
    if (b+1 < a) add(dp[a][b+1], dp[a][b]);
  }
  return dp[A][B];
}

int stressful() {
  memset(dp, 0, sizeof dp);
  dp[0][0] = 1;
  
  REP(a, A+1) REP(b, B+1) if (dp[a][b]) {
    if (b == B || a+1 <= b) add(dp[a+1][b], dp[a][b]);
    add(dp[a][b+1], dp[a][b]);
  }
  return dp[A][B];
}

int main() {
  int T;
  scanf("%d", &T);
  for (int tt = 1; tt <= T; ++tt, fflush(stdout)) {
    scanf("%d-%d", &A, &B);
    printf("Case #%d: %d %d\n", tt, stress_free(), stressful());
  }
  return 0;
}
