#include <string>
#include <vector>
#include <algorithm>
#include <fstream>
#include <sstream>
#include <iostream>

using namespace std;

int dp[4001][2001];

vector<int> solve(int a, int b) {
    vector<int> ret(2, 0);
    int game = a + b;
    for (int i = 0; i <= game; i++) {
        for (int j = 0; j <= a; j++) {
            dp[i][j] = 0;
        }
    }
    dp[1][1] = 1;
    for (int i = 1; i <= game; i++) {
        for (int j = (i + 1) / 2; j <= min(i - 1, a); j++) {
            if (j > i / 2) {
                dp[i][j] = (dp[i][j] + dp[i - 1][j]) % 1000000007;
            }
            if (j + 1 <= a) {
                dp[i][j + 1] = (dp[i][j + 1] + dp[i - 1][j]) % 1000000007;
            }
        }
    }
    ret[0] = dp[game][a];
    if (b == 0) { 
        return ret;
    }
    for (int i = 0; i <= game; i++) {
        for (int j = 0; j <= a; j++) {
            dp[i][j] = 0;
        }
    }
    dp[1][1] = 1;
    for (int i = 1; i <= game; i++) {
        for (int j = 1; j <= min(i - 1, b); j++) {
            if (j != b) {
                if (j >= (i + 1) / 2) {
                    dp[i][j] = (dp[i][j] + dp[i - 1][j]) % 1000000007;
                }
            } else {
                dp[i][j] = (dp[i][j] + dp[i - 1][j]) % 1000000007;
            }
            if (j + 1 <= b) {
                dp[i][j + 1] = (dp[i][j + 1] + dp[i - 1][j]) % 1000000007;
            }
        }
    }
    ret[1] = dp[game][b];
    return ret;
}

int main() {
    ifstream in("input.txt");
    ofstream out("output.txt");
    int T; in >> T;
    cout << "T: " << T << endl;
    for (int t = 0; t < T; ++t) {
        string s; in >> s;
        int pos = s.find('-', 0);
        istringstream stra(s.substr(0, pos));
        int a; stra >> a;
        istringstream strb(s.substr(pos + 1));
        int b; strb >> b;
        vector<int> ret = solve(a, b);
        out << "Case #" << t + 1 << ": " << ret[0] << " " << ret[1] << endl;
        cout << "Case #" << t + 1 << ": " << ret[0] << " " << ret[1] << endl;
    }
    getchar();
    return 0;
}
