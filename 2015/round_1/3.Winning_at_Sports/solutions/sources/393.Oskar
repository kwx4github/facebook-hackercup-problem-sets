#include <iostream>
#include <cassert>
#include <cstring>
#include <cstdio>

using namespace std;

typedef long long LL;

LL dp1[2123][2123], dp2[2123][2123];

const LL MOD = 1000000007LL;

LL first(int a, int b, const int A, const int B) {
    if (b >= a || a > A || b > B) return 0;
    if (a == A && b == B) return 1;
    LL &ret = dp1[a][b];
    if (ret != -1) return ret;
    ret = (first(a+1, b, A, B) + first(a, b+1, A, B)) % MOD;
    return ret;
}

LL second(int a, int b, const int A, const int B) {
    if (a > b && b < B || a > A || b > B) return 0;
    if (a == A && b == B) return 1;
    LL &ret = dp2[a][b];
    if (ret != -1) return ret;
    ret = (second(a+1, b, A, B) + second(a, b+1, A, B)) % MOD;
    return ret;
}

void solve(int test_case) {
    int A, B;
    assert(scanf("%d-%d", &A, &B));
    cout << "Case #" << test_case << ": ";
    cout << first(1, 0, A, B) << " " << second(0, 0, A, B) << endl;
}

int main() {
    int T;
    cin >> T;
    for (int i = 1; i <= T; ++i) {
        memset(dp1, -1, sizeof(dp1));
        memset(dp2, -1, sizeof(dp2));
        solve(i); 
    }
}
