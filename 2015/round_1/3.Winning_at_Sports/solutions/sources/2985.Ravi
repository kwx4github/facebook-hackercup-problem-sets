#include<iostream>
#include<map>
#include<stdio.h>
#include<vector>
#include<math.h>
using namespace std;

#define fori(a, b) for(i = a; i <= b; i++)
#define forj(a, b) for(j = a; j <= b; j++)
#define fork(a, b) for(k = a; k <= b; k++)
#define scani(n) scanf("%d", &n);

int stressfree[2002][2002];
int stressfull[2002][2002];

int main()
{
	int test_cases, test_case, n, i, a, b, count, j, num;
	scani(test_cases)

	for(test_case = 1; test_case <= test_cases; test_case++)
	{
		count = 0;
		scanf("%d-%d", &a, &b);
		
		fori(0,a)
			forj(0,b){
				stressfree[i][j] = 0;
				stressfull[j][i] = 0;
			}

		stressfree[0][0] = 1;
		stressfull[0][0] = 1;
		fori(1,a)
			stressfree[i][0] = stressfree[i-1][0]; // number of paths leading up to this

		forj(1,b)
			stressfull[j][0] = stressfull[j-1][0]; // number of paths leading up to this

		// cout << stressfree[21][17] << endl;
		for(i=2;i<a+1;i++)
			for(j=1;j<min(i,b+1);j++){
				// if(stressfree[i][j] < 0){
				// 	cout << i << " " << j << endl;
				// }
				// if(stressfree[i-1][j] < 0){
				// 	cout << i-1 << " " << j << endl;
				// 	return 0;
				// }
				// if(stressfree[i][j-1] < 0){
				// 	cout << i << " " << j-1 << endl;
				// 	return 0;
				// }
				// if(i==21 && j==17){
				// 	cout << stressfree[i][j] << " " << stressfree[i-1][j] << " " << stressfree[i][j-1] << endl;	
				// }
				stressfree[i][j] = (stressfree[i-1][j] + stressfree[i][j-1])%1000000007;
			}
		

		for(i=1;i<b+1;i++)
			for(j=1;j<=min(i,a);j++){
				stressfull[i][j] = (stressfull[i-1][j] + stressfull[i][j-1])%1000000007;
			}
		
		
		// for(i=0;i<a+1;i++){
		// 	for(j=0;j<b+1;j++)
		// 		cout << stressfree[i][j] << "\t";
		// 	cout << endl;
		// }
		// cout << endl;
		// for(i=0;i<b+1;i++){
		// 	for(j=0;j<a+1;j++)
		// 		cout << "(" << i << "," << j << ")" << stressfull[i][j] << "\t";
		// 	cout << endl;
		// }
		// cout << stressfree[1000][500] << endl;
		// cout << stressfree[1000-1][500] << endl;
		// cout << stressfree[1000][500-1] << endl;
		cout << "Case #" << test_case << ": " << stressfree[a][b] << " " << stressfull[b][b] << endl;
	}
	return 0;
}
