#include <bits/stdc++.h>

#define F(i,a,b) for(int i = a; i < b; i++)
#define pb push_back
#define mp make_pair
#define all(a) a.begin(), a.end()

#define gc getchar_unlocked
#define MOD 1000000007
void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vii;
typedef pair<int,int> pii;
typedef vector<pii> vpii;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef long long ll;


ll A,B;
ll memoA[2001][2001] = {{0}};
ll memoB[2001][2001] = {{0}};
ll stressfree(ll a,ll b)
{
	if(memoA[a][b] > 0)
		return memoA[a][b];
	if(a < 0 || b < 0)
		return 0;
	if(a == 0 && b == 0)
		return 1;
	
	if(a-1 > b || b == 0)
		return memoA[a][b] = ((stressfree(a-1,b) % MOD) + 
						      (stressfree(a,b-1) % MOD)) % MOD;
	else
		return memoA[a][b] = (stressfree(a,b-1) % MOD);
}

ll stressful(ll a,ll b)
{
	if(memoB[a][b] > 0)
		return memoB[a][b];
	if(a < 0 || b < 0)
		return 0;
	if(a == 0 && b == 0)
		return 1;
	
	if(a-1 >= b)
		return memoB[a][b] = (stressful(a-1,b) % MOD) ;
	else
	{
		if(b-1 >= a)
			return memoB[a][b] = ((stressful(a,b-1) % MOD) +
								  (stressful(a-1,b) % MOD)) % MOD;
		else
			return memoB[a][b] = (stressful(a-1,b) % MOD); 
	}
}

int main()
{
	std::ios_base::sync_with_stdio(false);

	int T;

	cin >> T;
	int c = 1;
	char z;
	while(T--)
	{
		cin >> A >> z >> B;
		cout << "Case #" << c++ << ": ";
		cout << stressfree(A,B) << " " << stressful(A,B) << endl;
	}
	return 0;
}
