#include <bits/stdc++.h>
#define MAX_N 2010
#define ll long long
#define MOD 1000000007
using namespace std;

int n, m; // 1st, 2nd
ll dp1[MAX_N][MAX_N], dp2[MAX_N][MAX_N]; // stress-free, stressful
string e;

ll mod(ll a) { return a % MOD; }

ll mod_add(ll a, ll b) { return mod(mod(a)+mod(b)); }

ll dfs1(int a, int b) {
    if (a>n || b>m || a<0 || b<0) return 0;
    if (dp1[a][b]!=-1) return dp1[a][b];
    if (a<=b) {
        dp1[a][b]=0;
        return 0;
    }
    if (a==n || b==m) {
        dp1[a][b]=1;
        return 1;
    }
    dp1[a][b]=mod_add(dfs1(a+1,b),dfs1(a,b+1));
    return dp1[a][b];
}

ll dfs2(int a, int b) {
    if (a>n || b>m || a<0 || b<0) return 0;
    if (dp2[a][b]!=-1) return dp2[a][b];
    if (a>b) {
        dp2[a][b]=0;
        return 0;
    }
    if (a==n || b==m) {
        dp2[a][b]=1;
        return 1;
    }
    dp2[a][b]=mod_add(dfs2(a+1,b),dfs2(a,b+1));
    return dp2[a][b];
}

int conv(string k) {
    int ret=0;
    for (int i=0; i<k.length(); i++) {
        ret*=10;
        ret+=(int)(k[i]-'0');
    }
    return ret;
}

int main(void) {
    if (fopen("input3.txt","r")) {
        freopen("input3.txt","r",stdin);
        freopen("output3.txt","w",stdout);
    }
    getline(cin,e);
    int t=conv(e);
    for (int ii=1; ii<=t; ii++) {
        memset(dp1,-1,sizeof(dp1));
        memset(dp2,-1,sizeof(dp2));
        getline(cin,e);
        int ind=-1;
        for (int i=0; i<e.length() && ind==-1; i++) {
            if (e[i]=='-') {
                ind=i;
            }
        }
        n=conv(e.substr(0,ind)); m=conv(e.substr(ind+1,e.length()-1-ind));
        cout << "Case #" << ii << ": " << dfs1(1,0) << " " << dfs2(0,0) << "\n";
    }
    return 0;
}
