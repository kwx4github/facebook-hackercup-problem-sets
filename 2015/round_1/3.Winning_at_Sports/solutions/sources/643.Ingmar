#!/usr/bin/python

# print repr(st)
# maze = [[['#' for i in range(N+2)] for i in range(M+2)] for i in range(4)]
# (M, N) = map(int, f.readline().split())
# l = f.readline()
import argparse

a = 0
b = 0


def doit():
    global a, b
    mod = 1000000007
    (a, b) = map(int, f.readline().split("-"))
    dic = [[0 for i in range(a+b+1)] for i in range(a+b+1)]
    dic[0][0] = 1



    for c in range(1, a+b+1):
        for m in range(0, c+1):
            o = c-m
            if m > o and m <= a and o <= b:
                sum = 0
                if m>0:
                    # key = str(m-1)+"-"+str(o)
                    sum += dic[m-1][o]
                if o>0:
                    # key = str(m)+"-"+str(o-1)
                    sum += dic[m][o-1]
                # key = str(m)+"-"+str(o)
                dic[m][o] = sum % mod
            else:
                # key = str(m)+"-"+str(o)
                dic[m][o] = 0
    # key = str(a)+"-"+str(b)
    return dic[a][b] % mod


def deeit():
    global a, b
    mod = 1000000007
    dic = [[0 for i in range(a+b+1)] for i in range(a+b+1)]
    dic[0][0] = 1

    for c in range(1, a+b+1):
        for m in range(0, c+1):
            o = c-m
            if (m <= o or o == b) and m <= a and o <= b:
                sum = 0
                if m>0:
                    #key = str(m-1)+"-"+str(o)
                    sum += dic[m-1][o]
                if o>0:
                    #key = str(m)+"-"+str(o-1)
                    sum += dic[m][o-1]
                #key = str(m)+"-"+str(o)
                dic[m][o] = sum % mod
            else:
                #key = str(m)+"-"+str(o)
                dic[m][o] = 0
    #key = str(a)+"-"+str(b)
    return dic[a][b] % mod


parser = argparse.ArgumentParser()
parser.add_argument("filename", help="The filename to be processed")
args = parser.parse_args()
if args.filename:
    with open(args.filename) as f:
        cases = int(f.readline())
        for case in range(1, cases+1):
            print ("Case #" + str(case) + ":"), doit(), deeit()