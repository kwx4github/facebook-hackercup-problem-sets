#include<cstdio>
#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<cassert>
#include<cstring>
#include<vector>
#include<string>
#include<cmath>
#include<ctime>
#include<set>
#include<map>
 
using namespace std;
 
#define sz(c) (int)(c).size()
 
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
 
#define forn(i,n) for( int i = 0 ; i < (n) ; i++ )
#define forit(it,c) for( __typeof((c).begin()) it = (c).begin() ; it != (c).end() ; it++ )
 
#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif
 
#define FNAME "test"

const int mod = 1e9 + 7;

int d1[2005][2005], d2[2005][2005], T, a, b;

int main()
{
    freopen(FNAME".in", "r", stdin);
    freopen(FNAME".out", "w", stdout); 
    for (int i = 0; i <= 2000; i++)
    {
    	d1[i][0] = 1;
    	d2[0][i] = 1;
    }
    for (int i = 1; i <= 2000; i++)
    	for (int j = 1; j <= 2000; j++)
    	{
    		if (i > j)
    		{
    			d1[i][j] = d1[i][j - 1];
    			if (i - 1 > j)
    				d1[i][j] = (d1[i][j] + d1[i - 1][j]) % mod;
            }
            if (i <= j)
            {
            	d2[i][j] = d2[i - 1][j];
            	if (j - 1 >= i)
            		d2[i][j] = (d2[i][j] + d2[i][j - 1]) % mod;
            }
    	}
    scanf("%d", &T);
	for (int t = 0; t < T; t++)
	{
    	scanf("%d-%d", &a, &b);
    	printf("Case #%d: %d %d\n", t + 1, d1[a][b], d2[b][b]);
   	} 
    return 0;
}