//package hackercup.round01.problem03;

import java.io.*;

/**
 * Facebook Hacker Cup 2015
 * @author Cosmin Dumitrache (cosmin.m.dumitrache@gmail.com)
 */
public class WinningAtSports {

    static final int OUTPUT_LIMIT = 1000000007;

    /**
     * Dynamic programming
     *
     * dp[i][j] = ways of playing game ending in score i-j
     *  option 1: B could have won => dp[i][j-1]
     *  option 2: if i-1>j holds A could have won => dp[i-1][j]
     *  sum up the possibilities for the two possible ways of getting to i-j
     */
    static int numStressFreeGames(int scorePlayerA, int scorePlayerB) {
        int[][] dp = new int[scorePlayerA+1][scorePlayerB+1];
        for (int i=0; i<=scorePlayerA; i++) dp[i][0] = 1;
        for (int j=0; j<=scorePlayerB; j++) dp[0][j] = 1;
        for (int i=1; i<=scorePlayerA; i++)
            for (int j=1; j<=scorePlayerB; j++)
                dp[i][j] = (dp[i][j-1] + ( (i-1>j) ? dp[i-1][j] : 0)) % OUTPUT_LIMIT;
        return dp[scorePlayerA][scorePlayerB];
    }

    /**
     * Same DP approach as for numStressFreeGames()
     */
    static int numStressfulGames(int scorePlayerA, int scorePlayerB) {
        int[][] dp = new int[scorePlayerA+1][scorePlayerB+1];
        for (int i=0; i<=scorePlayerA; i++) dp[i][0] = 1;
        for (int j=0; j<=scorePlayerB; j++) dp[0][j] = 1;
        for (int i=1; i<=scorePlayerA; i++)
            for (int j=1; j<=scorePlayerB; j++)
                dp[i][j] = (dp[i-1][j] + ( (i<j) ? dp[i][j-1] : 0)) % OUTPUT_LIMIT;
        return dp[scorePlayerA][scorePlayerB];
    }

    public static void main(String[] args) throws IOException {
        if (args.length != 2) {
            System.err.printf("Usage: java %s <input file> <output file>\n", WinningAtSports.class.getCanonicalName());
            System.exit(1);
        }
        String inputFile = args[0];
        String outputFile = args[1];
        BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile)));
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outputFile)));
        int t = Integer.parseInt(reader.readLine());
        for (int i=1; i<=t; i++) {
            String[] score = reader.readLine().split("-");
            int scorePlayerA = Integer.parseInt(score[0]);
            int scorePlayerB = Integer.parseInt(score[1]);
            writer.write(String.format("Case #%d: %d %d\n",
                    i,
                    numStressFreeGames(scorePlayerA, scorePlayerB),
                    numStressfulGames(scorePlayerA, scorePlayerB)
            ));
        }
        reader.close();
        writer.close();
    }
}
