import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;

/**
 * Created by shirsh on 18/1/15.
 */
public class TwoWinningSport {
    private static final int MOD = 1000000007;
    public static int stressLessDP[][] = new int[2001][2001];
    public static int stressFullDP[][] = new int[2001][2001];

    public static void main(String...args) {
        Input input = new Input();

        for(int i = 0; i < stressLessDP.length; i++) {
            Arrays.fill(stressLessDP[i], -1);
            Arrays.fill(stressFullDP[i], -1);
        }

        int T = input.nextInt();

        for(int t = 1; t <= T; t++) {
            String score = input.nextString();
            StringTokenizer st = new StringTokenizer(score, "-");
            int winner = Integer.parseInt(st.nextToken());
            int loser = Integer.parseInt(st.nextToken());

            System.out.println("Case #" + t + ": " + fillStressLessDP(winner, loser) + " " +
                                                     fillStressFullDP(loser, loser));
        }
    }

    private static int fillStressFullDP(int winner, int loser) {
        if(loser < 0) return 0;
        if(winner < loser) return 0;
        if(stressFullDP[winner][loser] != -1) return stressFullDP[winner][loser];
        if(loser == 0) return 1;

        return stressFullDP[winner][loser] = (fillStressFullDP(winner-1, loser) +
                                              fillStressFullDP(winner, loser-1)) % MOD;
    }

    private static int fillStressLessDP(int winner, int loser) {
        if(loser < 0) return 0;
        if(winner <= loser) return 0;
        if(stressLessDP[winner][loser] != -1) return stressLessDP[winner][loser];
        if(loser == 0) return 1;

        return stressLessDP[winner][loser] = (fillStressLessDP(winner-1, loser) +
                                              fillStressLessDP(winner, loser-1)) % MOD;
    }

    static class Input {
        BufferedReader br;
        StringTokenizer st;

        public Input(String s) {
            try {
                br = new BufferedReader(new FileReader(s));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }

        public Input() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String nextToken() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(nextToken());
        }

        String nextString() {
            return nextToken();
        }
    }
}
