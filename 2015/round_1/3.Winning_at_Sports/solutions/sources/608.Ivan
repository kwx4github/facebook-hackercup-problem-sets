#include <cstdio>

using namespace std;

const int MOD = 1000000007;

int memo1[2005];
bool bio1[2005];
int dp1(int a){ // catalan
    if (bio1[a]++) return memo1[a];
    long long r = 0;
    for (int i = 1; i <= a; ++i){
        r += (long long)dp1(i - 1) * (long long)dp1(a - i);
        r %= MOD;
    }
    return memo1[a] = r;
}
int memon[2005][2005];
bool bion[2005][2005];
int num(int a, int b){ // broj puteva
    if (b == 0 || a == 0) return 1;
    if (bion[a][b]++) return memon[a][b];
    return memon[a][b] = (num(a - 1, b) + num(a, b - 1)) % MOD;
}
int memo2[2005][2005];
bool bio2[2005][2005];
int dp2(int a, int b){ // broj puteva koji sjeku
    if (b == 0) return 0;
    if (bio2[a][b]++) return memo2[a][b];
    long long r = 0;
    for (int i = 1; i <= b; ++i){
        r += 2LL * (long long)dp1(i - 1) * (long long)num(a - i, b - i);
        r %= MOD;
    }
    return memo2[a][b] = r;
}

void init(){
     bio1[0] = memo1[0] = 1;
     for (int i = 1; i <= 2000; ++i) dp1(i);
     for (int i = 0; i <= 2000; ++i) for (int j = 0; j <= 2000; ++j) num(i, j);
     /*
     for (int i = 0; i <= 2000; ++i){
         for (int j = i + 1; j <= 2000; ++j) dp2(j, i);
         printf("%d\n", i);
     }*/
}
void solve(){
     int a, b; scanf("%d-%d", &a, &b);
     int x = 0, y = 0;
     y = dp1(b);
     x = num(a, b) - dp2(a, b); //printf(" - %d\n", dp2(a, b));
     while (x < 0) x += MOD;
     printf("%d %d\n", x, y);
}

int main(){
    init();
    int t; scanf("%d", &t);
    for (int i = 1; i <= t; ++i){
        printf("Case #%d: ", i);
        solve();
    }
    return 0;
}
