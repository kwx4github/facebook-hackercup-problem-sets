#include <cstdio>
#include <algorithm>

using namespace std;

#define MOD 1000000007
#define MAXN 2010

int T;

long long _free[MAXN][MAXN][2], _ful[MAXN][MAXN][2];
int vfree[MAXN][MAXN][2], vful[MAXN][MAXN][2];
int A, B, t;

long long ful(int y, int d, bool w){
	if (y == 0) return w;

	if (vful[y][d][w]) return _ful[y][d][w];

	vful[y][d][w] = true;
	_ful[y][d][w] = ful(y-1, d+1, 1);

	if (w)
	for (int i = 1; i <= d; i++)
		_ful[y][d][w] = (_ful[y][d][w] + ful(y, d-i, !w)) % MOD;

	return _ful[y][d][w];
}

long long free(int x, int y, bool w){
	if (!x) return w;
	if (!y) return 1;
	if (vfree[x][y][w] == t) return _free[x][y][w];

	int d = (A - x) - (B - y);

	vfree[x][y][w] = t;
	_free[x][y][w] = free(x-1, y, 1);

	int l = y < d ? y : d-1;

	if (w)
	for (int i = 1; i <= l; i++)
		_free[x][y][w] = (_free[x][y][w] + free(x,y-i,0)) % MOD;
	
	return _free[x][y][w];
}

int main(){
	int i, j, k;

	scanf("%d", &T);

	for (t = 1; t <= T; t++){
		scanf(" %d-%d ", &A, &B);
		printf("Case #%d: %lld %lld\n", t, free(A,B,0), ful(B,0,0));
	}
}
