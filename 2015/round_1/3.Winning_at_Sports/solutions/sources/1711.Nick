import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.HashSet;
import java.util.Scanner;


public class sports {
	static long mod = 1000000007;
	static int L,R;
	static Long[][] memo,memo2;
	public static void main(String[] args) throws FileNotFoundException {
		Scanner sc = new Scanner(new File("sports.in"));
		PrintWriter out = new PrintWriter(new File("sports.out"));
		int T = sc.nextInt();
		for(int t=1;t<=T;t++){
			String input = sc.next();
			String[] split = input.split("-");
			L = Integer.parseInt(split[0]);
			R = Integer.parseInt(split[1]);
			memo = new Long[L+4][R+4];
			memo2 = new Long[L+4][R+4];
			out.printf("Case #%d: %d %d%n",t,free(1,0),stress(0,0));
			System.out.printf("Case #%d: %d %d%n",t,free(1,0),stress(0,0));
		}
		out.close();
	}

	private static long stress(int l, int r) {
		if(r>R||l>L)return 0;
		if(r!=R&&l>r)return 0;
		if(l==L&&r==R)return 1;
		if(memo2[l][r]!=null)return memo2[l][r];
		long ans = stress(l+1,r)+stress(l,r+1);
		return memo2[l][r]=ans%mod;
	}

	private static long free(int l, int r) {
		if(r>R||l>L)return 0;
		if(r>=l)return 0;
		if(l==L&&r==R)return 1;
		if(memo[l][r]!=null)return memo[l][r];
		long ans = free(l+1,r)+free(l,r+1);
		return memo[l][r]=ans%mod;
	}
}
