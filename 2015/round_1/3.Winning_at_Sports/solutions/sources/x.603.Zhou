#include <functional>
#include <algorithm>
#include <stdexcept>
#include <iostream>
#include <sstream>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <utility>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <cctype>
#include <cstdio>
#include <vector>
#include <string>
#include <bitset>
#include <cmath>
#include <queue>
#include <stack>
#include <tuple>
#include <ctime>
#include <list>
#include <map>
#include <set>

#define REP(i,n) for(int i=0;i<(n);i++)
#define TR(i,x) for(__typeof(x.begin()) i=x.begin();i!=x.end();i++)
#define ALL(x) x.begin(),x.end()
#define SORT(x) sort(ALL(x))
#define CLEAR(x) memset(x,0,sizeof(x))
#define FILL(x,c) memset(x,c,sizeof(x))
#define SIZE(x) (int)(x).size()

#define MP make_pair
#define MT make_tuple
#define PB push_back
#define EB emplace_back

using namespace std;

typedef long long LL;
typedef pair<int,int> PII;

const int MAXN = 4010;
const int MOD = 1e9 + 7;

int C[MAXN][MAXN];

void Prepare() {
    for (int i = 1; i < MAXN; ++i) {
        C[i][0] = C[i][i] = 1;
        for (int j = 1; j < i; ++j) {
            C[i][j] = C[i - 1][j - 1] + C[i - 1][j];
            if (C[i][j] >= MOD) C[i][j] -= MOD;
        }
    }
}

void Solve() {
    int n, m;
    scanf("%d-%d", &n, &m);
    if (m == 0) {
        puts("1 0");
        return;
    }
    int ans1 = (C[n + m - 1][m] - C[n + m - 1][m - 1] + MOD) % MOD;
    int ans2 = (C[m + m][m] - C[m + m][m - 1] + MOD) % MOD;
    cout << ans1 << " " << ans2 << endl;
}

int main() {
//    freopen("winning_at_sports_example_input.txt", "r", stdin);
    freopen("winning_at_sports.txt", "r", stdin);
    freopen("winning_at_sports_output.txt", "w", stdout);

    Prepare();
    int cas;
    cin >> cas;
    for (int T = 1; T <= cas; ++T) {
        printf("Case #%d: ", T);
        Solve();
    }
    return 0;
}

