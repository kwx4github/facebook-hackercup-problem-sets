package Round2_2015;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;


public class Sports {
		static long MOD=1000000007;
public static void main(String args[]) throws NumberFormatException,IOException {
		
		Stdin in = new Stdin();
		PrintWriter out = new PrintWriter("out.txt");
		int t=in.readInt();
		String []score;
		int f,s;
		for(int i=1;i<=t;i++){
			score=in.readNext().split("-");
			f=Integer.parseInt(score[0]);
			s=Integer.parseInt(score[1]);
			print(out,streeFree(f,s)+" "+streeful(f,s),i);
		}
		out.flush();
		out.close();

	}
	private static long streeFree(int f,int s){
		if(s==0)
			return 1;
		long dp[][]=new long[f+1][s+1];
		dp[1][0]=1;
		for(int i=2;i<dp.length;i++){
			dp[i][0]=1;
			for(int j=1;j<Math.min(i,s+1);j++){
				dp[i][j]=dp[i-1][j]+dp[i][j-1];
				if(dp[i][j]>=MOD)
					dp[i][j]-=MOD;
			}
		}
		return dp[f][s];
	}
	private static long streeful(int f,int s){
		if(s==0)
			return 1;
		long dp[][]=new long[s+1][s+1];
		dp[1][0]=1;
		dp[1][1]=1;
		for(int i=2;i<dp.length;i++){
			dp[i][0]=1;
			for(int j=1;j<=i;j++){
				dp[i][j]=dp[i-1][j]+dp[i][j-1];
				if(dp[i][j]>=MOD)
					dp[i][j]-=MOD;
			}
		}
		return dp[s][s];
	}
	private static void print(PrintWriter out,Object t,int cases){
		out.println("Case #"+cases+": "+t);
	}

	private static class Stdin {
		BufferedReader br;

		StringTokenizer st = new StringTokenizer("");

		private Stdin() throws FileNotFoundException {
			br = new BufferedReader(new FileReader("in.txt"));

		}

		private String readNext() throws IOException {

			while (!st.hasMoreTokens())
				st = new StringTokenizer(br.readLine());
			return st.nextToken();
		}

		private int readInt() throws IOException, NumberFormatException {

			return Integer.parseInt(readNext());

		}

		private long readLong() throws IOException, NumberFormatException {

			return Long.parseLong(readNext());

		}
		private double readDouble() throws IOException, NumberFormatException {

			return Double.parseDouble(readNext());

		}
	}
}
