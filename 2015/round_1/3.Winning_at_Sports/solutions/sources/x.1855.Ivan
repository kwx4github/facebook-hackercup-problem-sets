#include <algorithm>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <functional>
#include <iostream>
#include <iterator>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>

using namespace std;

const int MAXSCORE = 2000+2;
const int mod = 1000000007;
int modadd(int a, int b) {
    a += b;
    return a>=mod ? a-mod : a;
}
int dp[MAXSCORE][MAXSCORE];
int X, Y;
int A(int x, int y) {
    if (x<=y || x>X || y>Y) return 0;
    int &ret = dp[x][y];
    if (ret != -1) return ret;
    if (x==X && y==Y) {
        ret = 1;
    } else {
        ret = modadd(A(x+1, y), A(x, y+1));
    }
    return ret;
}
int B(int x, int y) {
    if (x>y || x>X || y>Y) return 0;
    int &ret = dp[x][y];
    if (ret != -1) return ret;
    if (y == Y) {
        ret = 1;
    } else {
        ret = modadd(B(x+1, y), B(x, y+1));
    }
    return ret;
}
void solve() {
    {
    string tmp;
    cin >> tmp;
    sscanf(tmp.c_str(), "%d-%d", &X, &Y);
    }
    
    memset(dp, 0xff, sizeof dp);
    cout << A(1, 0) << ' ' << B(0, 1) << '\n';
}
int main() {
    int T;
    cin >> T;
    for (int i=1; i<=T; ++i) {
        cout << "Case #" << i << ": ";
        solve();
    }
}
