#include <utility>
#include <cstdio>
#include <vector>

#define MP make_pair
#define X first
#define Y second

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pll;

ll MOD = 1000000007LL;
ll ADD(ll x, ll y) { return (x+y)%MOD; }

ll A;
ll B;
vector<int> DP_S;
vector<pll> DP;
pll dp(ll a, ll b, bool stressfree, bool stressful) {
  if(a>A || b>B) { return MP(0, 0); }
  if(a==A && b==B) {
    return MP(stressfree ? 1 : 0, stressful ? 1 : 0);
  }
  ll key = a*(B+1)*4 + b*4 + (stressfree?1:0)*2 + (stressful?1:0);
  if(DP_S[key]) { return DP[key]; }
  DP_S[key] = true;

  pll p1 = dp(a+1, b, stressfree, a+1>b && b<B ? false : stressful);
  pll p2 = dp(a, b+1, b+1>=a ? false : stressfree, stressful);
  pll ans = MP(ADD(p1.X, p2.X), ADD(p1.Y, p2.Y));
  DP[key] = ans;
  return ans;
}

int main() {
  ll T;
  scanf("%lld\n", &T);
  for(ll cas=1; cas<=T; cas++) {
    scanf("%lld-%lld", &A, &B);
    DP_S = vector<int>((A+1)*(B+1)*4, 0);
    DP = vector<pll>((A+1)*(B+1)*4, MP(0, 0));
    pll ans = dp(0, 0, true, true);
    printf("Case #%lld: %lld %lld\n", cas, ans.X, ans.Y);
  }
}
