#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;

const int maxn = 2000;
const int mod = 1000000007;
int dp1[maxn + 1][maxn + 1];
int dp2[maxn + 1][maxn + 1];

class Winning {
  int scoreA, scoreB;

  public:
    int go1(const int a, const int b) {
        if (a == scoreA && b == scoreB) {
            return 1;
        }

        int& ans = dp1[a][b];
        if (ans != -1) {
            return ans;
        }

        ans = 0;
        if (a < scoreA) {
            ans += go1(a + 1, b);
            ans %= mod;
        }

        if (b < scoreB && a > (b + 1)) {
            ans += go1(a, b + 1);
            ans %= mod;
        }

        return ans;
    }

    int go2(const int a, const int b) {
        if (a == scoreA && b == scoreB) {
            return 1;
        }

        int& ans = dp2[a][b];
        if (ans != -1) {
            return ans;
        }

        ans = 0;
        if (b < scoreB) {
            ans += go2(a, b + 1);
            ans %= mod;
        }

        if (a < scoreA && (a + 1 <= b || b == scoreB)) {
            ans += go2(a + 1, b);
            ans %= mod;
        }

        return ans;
    }

    pair<int, int> solve(const int a, const int b) {
        scoreA = a;
        scoreB = b;
        memset(dp1, -1, sizeof dp1);
        memset(dp2, -1, sizeof dp2);
        return make_pair(go1(1, 0), go2(0, 0));
    }
};

int main() {
    Winning w;

    int t;
    cin >> t;
    for (int tt = 1; tt <= t; tt++) {
        string scores;
        cin >> scores;

        const int pos = scores.find('-');
        const int a = stoi(scores.substr(0, pos));
        const int b = stoi(scores.substr(pos + 1));
        const auto p = w.solve(a, b);
        cout << "Case #" << tt << ": " << p.first << " " << p.second << endl;
    }

    return 0;
}
