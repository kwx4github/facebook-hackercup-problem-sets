#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <climits>
#include <vector>
#include <sstream>
using namespace std;

#define pb push_back
#define mp make_pair
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long lint;

#define PI 3.1415926535897932385
#define MAX 1000000007

lint dp[2001][2001];

lint dpfull[2001][2001];

lint stressFree(lint i, lint j) {
    if (j==0)return dp[i][j] = 1;
    if (i==1 && j==0) return dp[i][j] = 1;
    if (i<=1)return 0;
    if (dp[i][j] !=-1) return dp[i][j];
    if (i-1 > j) return dp[i][j] =  (stressFree(i-1,j) + stressFree(i, j-1))%MAX;
    return dp[i][j] = stressFree(i, j-1)%MAX;
}

lint stressFull(lint i, lint j) {
    if (j==0) return dpfull[i][j]=0;
    if (i==0) return dpfull[i][j] = 1;
    if (dpfull[i][j] !=-1) return dpfull[i][j];
    if (j>i) {
        return dpfull[i][j] = (stressFull(i, j-1) + stressFull(i-1, j))%MAX;
    }
    return dpfull[i][j] = stressFull(i-1, j) %MAX;
}

int main() {
    freopen("a.txt","r",stdin);
    freopen("out","w",stdout);

    int t;
    cin>>t;
    int cse = 0;
    while(t--) {
        memset(dp, -1, sizeof(dp));
        memset(dpfull, -1, sizeof(dpfull));

        cse++;
        stringstream ss;
        string  s;
        cin>>s;
        ss<<s;
        int a,b;
        ss>>a;
        char ch;
        ss>>ch;
        ss>>b;
        if (b==0) {
            cout<<"Case #"<<cse<<": "<<stressFree(a, b) <<" "<< 1<<"\n";
        } else {
            cout<<"Case #"<<cse<<": "<<stressFree(a, b) <<" "<< stressFull(a, b)<<"\n";
        }
    }

    return 0;
}
