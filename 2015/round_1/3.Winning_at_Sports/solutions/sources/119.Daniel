#include <string.h>
#include <stdio.h>

#define MAX 2000
#define MOD 1000000007

int free[MAX + 1][MAX + 1];
int full[MAX + 1][MAX + 1];

void dp() {
	// base cases
	memset(free, 0, sizeof(free));
	for (int i = 1; i <= MAX; i++)
		free[i][0] = 1;

	memset(full, 0, sizeof(full));
	for (int i = 0; i <= MAX; i++)
		full[0][i] = 1;

	// dp
	for (int a = 2; a <= MAX; a++) {
		for (int b = 1; b < a - 1; b++)
			free[a][b] = (free[a][b - 1] + free[a - 1][b]) % MOD;
		free[a][a - 1] = free[a][a - 2];
	}
	for (int a = 1; a <= MAX; a++) {
		full[a][a] = full[a - 1][a];
		for (int b = a + 1; b <= MAX; b++)
			full[a][b] = (full[a - 1][b] + full[a][b - 1]) % MOD;
	}
}

int main() {
	dp();
	int cases;
	scanf("%d", &cases);
	for (int cas = 1; cas <= cases; cas++) {
		int a, b;
		char c;
		scanf("%d%c%d", &a, &c, &b);

		int stress_free = a <= b ? 0 : free[a][b];
		int stress_full = a <= b ? 0 : (b == 0 ? 1 : full[b - 1][b]);

		printf("Case #%d: %d %d\n", cas, stress_free, stress_full);
	}
	return 0;
}
