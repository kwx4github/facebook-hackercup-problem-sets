/*Author :rednivrug15 */
#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair

#define rep(i,n) for(int i=0; i<n ; i++)
using namespace std;
//#define long double double

#define REP(i,n) for (int i = 1; i <= n; i++)
#define ll long long
#define mod 1000000007
const int base = 1000100000;
const int base_digits = 9;

long long power(ll a,ll b,ll m)
{
    ll ret=1;
    while(b)
    {
        if(b%2==1)
           ret=(ret*a)%m;
        a=(a*a)%m;
        b/=2;
    }
    return ret;
}

long long gcd(long long a,long long b)
{
    return b==0?a:gcd(b,a%b);
}

long long dp[2001][2001];

int main()
{
    freopen("inp.txt","r",stdin);
    freopen("op.txt","w",stdout);

    int testcases;
    cin>>testcases;


    for(int tt=1; tt<=testcases; tt++)
    {
        for(int i=0; i<=2000; i++)
            for(int j=0; j<=2000; j++)
            dp[i][j]=0;

        int x,y;
        char dummy;

        scanf("%d%c%d",&x,&dummy,&y);
        long long stressfree=0,stressfull=0;

        for(int i=1; i<=x; i++)
        {
            dp[i][0]=1;

            for(int j=1; j<i; j++)
            {
             dp[i][j]=(dp[i][j-1]+dp[i-1][j]);
             if(dp[i][j]>=mod)
                dp[i][j]-=mod;
            }
        }
        stressfree=dp[x][y];

         for(int i=0; i<=2000; i++)
            for(int j=0; j<=2000; j++)
             dp[i][j]=0;

        dp[0][0]=1;
        for(int i=1; i<=y; i++)
        {
            dp[i][0]=1;
            for(int j=1; j<i; j++)
            {
             dp[i][j]=(dp[i][j-1]+dp[i-1][j]);
             if(dp[i][j]>=mod)
                dp[i][j]-=mod;
            }
        }

        for(int i=0; i<y; i++)
        {
            stressfull=(stressfull+dp[y][i]);
            if(stressfull>=mod)
                stressfull%=mod;
        }

        if(y==0) stressfull=1;

        printf("Case #%d: %lld %lld\n",tt,stressfree,stressfull);
    }

    return 0;
}
