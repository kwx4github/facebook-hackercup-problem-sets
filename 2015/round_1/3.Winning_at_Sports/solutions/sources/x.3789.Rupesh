import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

/**
 * Created by rupesh on 18/1/15.
 */
public class HackerCup2_2 {
    static int a , b;
    static long MOD = 1000000007;
    static long map[][];
    static long  map2[][];
    public static long solve(int x , int y){
        if(x == a && y == b) return 1;
        if(x > a || y > b || x <= y) return 0;
        if(map[x][y] != -1) return map[x][y];
        map[x][y] = (solve(x , y + 1) + solve(x + 1 , y))%MOD;
        return map[x][y];
    }

    public static long solve2(int x , int y){
        if(x == a && y == b) return 1;
        if(x > a || y > b || (y != b && x > y)) return 0;
        if(y == b) return 1;
        if(map2[x][y] != -1) return map2[x][y];
        map2[x][y] = (solve2(x , y + 1) + solve2(x + 1 , y))%MOD;
        return map2[x][y];
    }

    public static void main(String args[]) throws IOException {
        InputStreamReader input = new InputStreamReader(System.in);
        BufferedReader br = new BufferedReader(input);
        int t = Integer.parseInt(br.readLine());
        for(int i = 0 ; i < t ; i++){
            String token[] = br.readLine().split("-");
            a = Integer.parseInt(token[0]);
            b = Integer.parseInt(token[1]);
            map = new long[a + 1][b + 1];
            map2 = new long[a + 1][b + 1];
            for(int j = 0 ; j <= a ; j++) {
                Arrays.fill(map[j] , -1);
                Arrays.fill(map2[j] , -1);
            }
            System.out.println("Case #" + (i + 1) + ": " + solve(2 , 0) + " " + solve2(0 , 0));

        }
    }

    }
