#include <cstdio>

using namespace std;

const int N = 2010, mod = 1000000007;
int q, a, b, d[N][N], l[N][N][2], v[N][N];

void init()
{
    d[1][0] = l[0][0][1] = 1;
    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
        {
            if (d[i][j] || i <= j) continue;
            d[i][j] = d[i - 1][j];
            if (j) d[i][j] = (d[i][j] + d[i][j - 1]) % mod;
        }
    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
        {
            if ((!i && !j) || i > j) continue;
            if (j) l[i][j][0] = (l[i][j - 1][0] + l[i][j - 1][1]) % mod;
            if (i) l[i][j][1] = (l[i - 1][j][0] + l[i - 1][j][1]) % mod;
        }
    for (int i = 0; i < N; i++) v[0][i] = 1;
    for (int i = 1; i < N; i++)
        for (int j = 0; j < N; j++) v[i][j] = (v[i - 1][j] + l[i][j][0]) % mod;
}

void out(int c, int v0, int v1)
{
    printf("Case #%d: %d %d\n", c, v0, v1);
}

void uradi(int tp)
{
    scanf("%d-%d", &a, &b);
    out(tp, d[a][b], v[a][b]);
}

int main()
{
    init();
    scanf("%d", &q);
    for (int i = 1; i <= q; i++) uradi(i);
    return 0;
}
