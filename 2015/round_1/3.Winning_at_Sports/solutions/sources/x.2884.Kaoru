import sys
import collections
import math

def arr2d(row, col, v=0):
    return [[v for _ in xrange(col)] for _ in xrange(row)]
    
def rl():
    return tuple(map(int, raw_input().split('-')))

MOD = 1000000007

def solve1(A,B):
    #print locals()
    dp = arr2d(A+4,A+B+4,0)
    dp[1][1],dp[2][2],dp[2][3],dp[3][3] = 1,1,1,1
    dp[1][2],dp[1][3] = 0,0
    dp[2][1],dp[3][1] = 0,0
    
    for n in xrange(3, A+B+1):
        for x in xrange(2, A+1):
            if x>n/2:
                dp[x][n] = dp[x-1][n-1]+dp[x][n-1] if x >= (n/2)+1 else dp[x][n-1]
            else:
                dp[x][n] =  0
    return dp[A][A+B]%MOD

def solve2(A,B):
    if B == 0:
        return 0
    return solve1(B+1,B)

def solve(A,B):
    #print locals()
    return '{0} {1}'.format(solve1(A,B), solve2(A,B))

if __name__ == '__main__':
    for case in range(int(raw_input())):
        print 'Case #%d: %s' % (case+1, solve(*rl()))