#include <iostream>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <cassert>
#include <ctime>
#include <cstdio>

using namespace std;

const long long mod = 1000000007;

int t, a, b, dp[4001][4001], dp1[4001][4001];
string s, tmps = "";

int convert(string z) {
	int tans = 0;
	for(int i = 0; i < z.length(); i++)
		tans = tans * 10 + (z[i] - '0');
	return tans;
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	cin >> t;
	for (int i = 0; i <= 4000; i++) {
		dp[i][0] = 1;
		dp1[i][0] = 1;
	}
	for (int i = 1; i <= 4000; i++) {
		for (int j = 1; j <= i; j++) {
			dp[i][j] = dp[i][j - 1] % mod;
			dp1[i][j] = dp1[i][j - 1] % mod;
			if (i - 1 > j)
				dp[i][j] = (dp[i][j] + dp[i - 1][j]) % mod;
			if (i - 1 >= j)
				dp1[i][j] = (dp1[i][j] + dp1[i - 1][j]) % mod;
		}
	}
	for (int j = 0; j < t; j++) {
		cin >> s;
		tmps = "";
		for (int i = 0; i < s.length(); i++) {
			if (s[i] == '-') {
				a = convert(tmps);
				tmps = "";
			}
			else {
				tmps += s[i];
			}
		}
		b = convert(tmps);
		int ans1 = 0, ans2 = 0;
		ans1 = dp[a][b];
		for (int i = 0; i < b; i++) {
			ans2 = (ans2 + dp1[b - 1][i]) % mod;
		}
		//ans2 = dp1[a][b];
		cout << "Case " << j + 1 << ": " << ans1 << ' ' << max(1, ans2) << endl;
	}

	return 0;
}