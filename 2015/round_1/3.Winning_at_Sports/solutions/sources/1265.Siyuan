#include <fstream>
#include <string>
#include <cstring>

using namespace std;

ifstream input;
ofstream output;

const int MAXN = 2000 + 100;
const int MOD = 1000000007;

int ful[MAXN][MAXN];
int fre[MAXN][MAXN];
bool b_ful[MAXN][MAXN];
bool b_fre[MAXN][MAXN];


int pos;

void parseScore(const string & str, int & x, int & y)
{
	int pos = str.find('-');
	string str1 = str.substr(0, pos);
	x = atoi(str1.c_str());
	string str2 = str.substr(pos + 1);
	y = atoi(str2.c_str());
}

bool isFre(int x, int y)
{
	return (x > y || x == 0 && y == 0);
}

bool isFul(int x, int y)
{
	return (x <= y);
}

int compFre(int x, int y)
{
	if (x < 0 || y < 0) return 0;
	if (!b_fre[x][y])
	{
		b_fre[x][y] = true;
		fre[x][y] = 0;
		if (isFre(x - 1, y)) fre[x][y] += compFre(x - 1, y);
		if (isFre(x, y - 1)) fre[x][y] += compFre(x, y - 1);
		fre[x][y] %= MOD;
	}
	return fre[x][y];
}

int compFul(int x, int y)
{
	if (x < 0 || y < 0) return 0;
	if (!b_ful[x][y])
	{
		b_ful[x][y] = true;
		ful[x][y] = 0;
		if (isFul(x - 1, y)) ful[x][y] += compFul(x - 1, y);
		if (isFul(x, y - 1)) ful[x][y] += compFul(x, y - 1);
		ful[x][y] %= MOD;
	}
	return ful[x][y];
}

void singleCase(int case_num)
{
	string score;
	int x, y;
	input >> score;
	parseScore(score, x, y);

	output << "Case #" << case_num << ": " << compFre(x, y) << ' ' << compFul(y + 1, y) << endl ;
}

void init()
{
	memset(b_ful, 0, sizeof(b_ful));
	memset(b_fre, 0, sizeof(b_fre));
	ful[0][0] = 1; b_ful[0][0] = true;
	fre[0][0] = 1; b_fre[0][0] = true;
}

int main()
{
	input.open("sports.txt");
	output.open("game.out");

	init();

	int T;
	input >> T;
	for (int i=0; i<T; i++)
		singleCase(i + 1);

	return 0;
}