import java.util.*;
import java.io.*;

public class C {
    FastScanner in;
    PrintWriter out;

    public static final int MOD = 1000000007;

    public void solve() throws IOException {
        int t = in.nextInt();
        for (int tt = 1; tt <= t; tt++) {
            String str = in.next();
            String[] strings = str.split("\\-");
            int first = Integer.parseInt(strings[0]);
            int second = Integer.parseInt(strings[1]);
            int[][] stressFree = new int[10000][10000];
            stressFree[1][0] = 1;
            for (int count = 1; count <= first + second; count++) {
                for (int f = 0; f <= count; f++) {
                    int s = count - f;
                    if (f + 1 > s) {
                        stressFree[f + 1][s] = (stressFree[f + 1][s] + stressFree[f][s]) % MOD;
                    }

                    if (f > s + 1) {
                        stressFree[f][s + 1] = (stressFree[f][s + 1] + stressFree[f][s]) % MOD;
                    }
                }
            }

            int[][] stressFull = new int[10000][10000];
            if (second == 0) {
                stressFull[1][0] = 1;
            } else {
                stressFull[0][1] = 1;
            }
            for (int count = 1; count <= first + second; count++) {
                for (int f = 0; f <= count; f++) {
                    int s = count - f;
                    if (f + 1 <= s || s == second) {
                        stressFull[f + 1][s] = (stressFull[f + 1][s] + stressFull[f][s]) % MOD;
                    }

                    if (f <= s + 1) {
                        stressFull[f][s + 1] = (stressFull[f][s + 1] + stressFull[f][s]) % MOD;
                    }
                }
            }
            out.println("Case #" + tt + ": " + stressFree[first][second] + " " + stressFull[first][second]);
            System.out.println("GOTTA GO FAST" + tt);
        }
    }

    public void run() {
        try {
            in = new FastScanner(new File("c.in"));
            out = new PrintWriter(new File("c.out"));
            solve();

            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    class FastScanner {
        BufferedReader br;
        StringTokenizer st;

        FastScanner(File f) {
            try {
                br = new BufferedReader(new FileReader(f));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }

        String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }
    }

    public static void main(String[] arg) {
        new C().run();
    }
}