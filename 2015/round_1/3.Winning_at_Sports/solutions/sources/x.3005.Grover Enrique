#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#define MAX 4005
#define ll long long int
#define MOD 1000000007ll
using namespace std;

int t,n;
int l,r;

ll dp1[MAX][MAX][2];
ll dp2[MAX][MAX][2];

ll sf(int x,int y,bool flag){
	if(x == l && y == r && flag) return 1ll;
	if(x > l || y > r) return 0ll;
	if(!flag) return 0ll;
	if(dp1[x][y][flag] != -1) return dp1[x][y][flag];
	dp1[x][y][flag] = (sf(x + 1,y,(x + 1 > y)) + sf(x,y + 1,(x > y + 1))) % MOD;
	return dp1[x][y][flag];
	
}

ll sfu(int x,int y,bool flag){
	if(x == l && y == r && !flag) return 1ll;
	if(x > l || y > r) return 0ll;
	if(dp2[x][y][flag] != -1) return dp2[x][y][flag];
	if(y != r){
		dp2[x][y][flag] = sfu(x,y + 1,(x <= y + 1)) % MOD; 
		if(x + 1 <= y){
			dp2[x][y][flag] = (dp2[x][y][flag] + sfu(x + 1,y,(x + 1 <= y))) % MOD;
		}
	}
	else{
		dp2[x][y][flag] = sfu(x + 1,y,(x + 1 <= y )) % MOD;
	}
	return dp2[x][y][flag];
}

int main(){
	int x,y;
	scanf("%d",&t);
	int caso = 1;
	while(t--){
		scanf("%d-%d",&l,&r);
		n = l + r;
		memset(dp1,-1,sizeof dp1);
		memset(dp2,-1,sizeof dp2);
		printf("Case #%d: %lld %lld\n",caso++,sf(1,0,true),sfu(0,1,true));
	}
	return 0;
}
