#include <iostream>
#include <cassert>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long li;

const int maxn = 2001;
const int modn = 1e9 + 7;

int main()
{
    freopen("winning_at_sports.txt", "r", stdin);
    freopen("winning_at_sports0.txt", "w", stdout);
    int T; scanf("%d", &T);
    vector< vector <li> > Df(maxn, vector<li> (maxn, 0));
    vector< vector <li> > Ds(maxn, vector<li> (maxn, 0));
    Df[1][0] = 1;
    Ds[1][0] = 1;
    for (int i = 0; i < maxn; ++i)
    {
        for (int j = 0; j < maxn; ++j)
        {
            if(i < j) continue;
            if(j && i > j - 1) Df[i][j] += Df[i][j-1];
            if(i && i - 1 > j) Df[i][j] += Df[i-1][j];
            Df[i][j] %= modn;

            if(j && i >= j - 1) Ds[i][j] += Ds[i][j-1];
            if(i && i - 1 >= j) Ds[i][j] += Ds[i-1][j];
            Ds[i][j] %= modn;
        }
    }
    for (int t = 0; t < T; ++t)
    {
        int a, b; scanf("%d-%d", &a, &b);
        printf("Case #%d: %lld %lld\n", t + 1, Df[a][b], Ds[b][b]); 
    }
    return 0;
}