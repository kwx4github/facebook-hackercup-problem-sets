#include <cstdio>
#include <cstring>
#define memo(a,b) memset(a,b,sizeof(a))
int a , b , d ;
const long long mod = 1000000007 ;
long long matrix[2005][2005];
char input[50];
long long solve(int s1,int s2)
{
    if(s1+s2==d) return 1 ;
    if(matrix[s1][s2]!=-1) return matrix[s1][s2];
    long long &ret = matrix[s1][s2] ;
    ret = 0;
    if(s1+1<=a)ret=solve(s1+1,s2);
    if(s2+1<s1&&s2+1<=b)ret=(ret+solve(s1,s2+1))%mod;
    return ret ;
}
long long _solve(int s1,int s2)
{
    if(s1+s2==d) return 1 ;
    if(matrix[s1][s2]!=-1) return matrix[s1][s2];
    long long &ret = matrix[s1][s2] ;
    ret = 0;
    if((s1+1<=a&&s1+1<=s2)||(s1+1<=a&&s2==b))ret=_solve(s1+1,s2);
    if(s2+1<=b)ret=(ret+_solve(s1,s2+1))%mod;
    return ret ;
}
int main()
{
    freopen("poi.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int test ;
    scanf("%d",&test);
    for(int cas=1;cas<=test;cas++)
    {
        scanf("%s",&input);
        int i = 0 ;
        while(input[i]!='-') i++;
        input[i]=' ';
        sscanf(input,"%d%d",&a,&b);
        d=a+b;
        printf("Case #%d: ",cas);
        memo(matrix,-1);
        printf("%lld ",solve(0,0));
        memo(matrix,-1);
        printf("%lld\n",_solve(0,0));
    }
    return 0;
}
