#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>

#define all(x) x.begin(), x.end()

using namespace std;

int dp[2048][2048];
bool v[2048][2048];
int mine, theirs;

int stressfree(int m, int t) {
    if (m <= t) {
        return 0;
    }
    if (v[m][t]) {
        return dp[m][t];
    }
    v[m][t] = true;
    if (m == mine || t == theirs) {
        return dp[m][t] = 1;
    }
    int res = 0;

    res += stressfree(m+1, t) % 1000000007;
    res += stressfree(m, t+1) % 1000000007;
    return dp[m][t] = res;
}
int stressfull(int m, int t) {
    if (m > t && t != theirs) {
        return 0;
    }
    if (v[m][t]) {
        return dp[m][t];
    }
    v[m][t] = true;
    if (m == mine || t == theirs) {
        return dp[m][t] = 1;
    }
    int res = 0;

    res += stressfull(m+1, t) % 1000000007;
    res += stressfull(m, t+1) % 1000000007;
    return dp[m][t] = res;
}


int main() {
    int t;
    cin >> t;

    for (int i = 1; i <= t; ++i) {
        scanf("%d-%d", &mine, &theirs);
        memset(dp, 0, sizeof(dp));
        memset(v, 0, sizeof(v));
        int free = stressfree(1, 0);
        memset(dp, 0, sizeof(dp));
        memset(v, 0, sizeof(v));
        int full = stressfull(0, 0);
        printf("Case #%d: %d %d\n", i, free, full);
    }
    return 0;
}
