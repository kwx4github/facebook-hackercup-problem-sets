#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <vector>
#include <cmath>
#define ll long long
using namespace std;

const int maxn = 2005;
const int INF = 1e9;
const int mod = 1e9 + 7;

ll dp1[maxn][maxn], dp2[maxn][maxn];
int a, b;
void init(){
    memset(dp1, 0, sizeof(dp1));
    for(int i = 1; i <= 2000; i++) dp1[i][0] = 1;
    for(int i = 2; i <= 2000; i++)
    for(int j = 1; j < i; j++)
    {
        if(i - 1 > j) dp1[i][j] = (dp1[i - 1][j] + dp1[i][j - 1]) % mod;
        else dp1[i][j] = dp1[i][j - 1];
    }
    memset(dp2, 0, sizeof(dp2));
    for(int i = 0; i <= 2000; i++) dp2[0][i] = 1;
    for(int j = 1; j <= 2000; j++)
    for(int i = 1; i <= j; i++)
    {
        if(j - 1 >= i) dp2[i][j] = (dp2[i - 1][j] + dp2[i][j - 1]) % mod;
        else dp2[i][j] = dp2[i - 1][j];
    }
}
int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	init();
    int t, ca = 0;
    scanf("%d", &t);
    while(t--)
    {
        scanf("%d-%d", &a, &b);
        printf("Case #%d: ", ++ca);
        cout<<dp1[a][b]<<" "<<dp2[b][b]<<endl;
    }
    return 0;
}

