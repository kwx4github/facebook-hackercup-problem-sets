#include <stdio.h>
#include <assert.h>
#include <vector>

using std::vector;

int main()
{
	static const unsigned int module = 1000000007;
	static const unsigned int maxn = 2000;
	vector< vector<unsigned int> > dps[2];
	dps[0].resize(maxn+1,vector<unsigned int>(maxn+1,0));
	dps[1].resize(maxn+1,vector<unsigned int>(maxn+1,0));
	for(unsigned int i = 0;i <= maxn;++i)
	{
		dps[0][0][i] = 1;
		dps[1][0][i] = 1;
	}
	for(unsigned int i = 1;i <= maxn;++i)
	{
		dps[1][i][i] = dps[1][i-1][i];
		for(unsigned int k = i + 1;k <= maxn;++k)
		{
			dps[0][i][k] = (dps[0][i-1][k] + dps[0][i][k-1])%module;
			dps[1][i][k] = (dps[1][i-1][k] + dps[1][i][k-1])%module;
		}
	}
	unsigned int nCases = 0;scanf("%d",&nCases);
	for(unsigned int iCases = 1;iCases <= nCases;++iCases)
	{
		unsigned int s1 = 0,s2 = 0;scanf("%u-%u",&s1,&s2);
		assert(s1 > s2 && s1 <= maxn);
		unsigned int ans1 = dps[0][s2][s1];
		unsigned int ans2 = dps[1][s2][s2];
		printf("Case #%u: %u %u\n",iCases,ans1,ans2);
	}
	return 0;
}