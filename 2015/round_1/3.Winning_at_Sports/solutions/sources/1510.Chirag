#include<stdio.h>
#include<stdlib.h>
#define MAX 1000000007

long long int sfree(long long int** arr,int a, int b){
	if(b==0){
		arr[a][0]=1;
		return 1;
	}
	else if(a-b==1){
		if(arr[a][a-1]>=0)
			return arr[a][a-1];
		arr[a][a-1]=sfree(arr,a,a-2)%MAX;
		return arr[a][a-1];
	}
	else{
		if(arr[a][b]>=0)
			return arr[a][b];
		arr[a][b]=sfree(arr,a-1,b)%MAX + sfree(arr,a,b-1)%MAX;	
		return arr[a][b];
	}
}

long long int sfull(long long int** ar,int a,int b){
	if(b==0){
		ar[a][0]=1;
		return 1;
	}
	else if(a==b){
		if(ar[a][a]>=0)
			return ar[a][a];
		ar[a][a]=sfull(ar,a,a-1)%MAX;
		return ar[a][a];
	}
	else{
		if(ar[a][b]>=0)
			return ar[a][b];
		ar[a][b]=sfull(ar,a-1,b)%MAX + sfull(ar,a,b-1)%MAX;
		return ar[a][b];
	}

}

int main(){
	int t;
	scanf("%d",&t);
	int test=t;
	while(t>0){
		int a,b;
		scanf("%d-%d",&a,&b);
		long long int** arr=(long long int**)malloc(sizeof(long long int*)*2001);
		int i,j;
		for(i=0;i<2001;i++)
			arr[i]=(long long int*)malloc(sizeof(long long int)*2001);
		for(i=0;i<2001;i++){
			for(j=0;j<2001;j++)
				arr[i][j]=-1;
		}

		long long int** ar=(long long int**)malloc(sizeof(long long int*)*2001);
		for(i=0;i<2001;i++)
			ar[i]=(long long int*)malloc(sizeof(long long int)*2001);
		for(i=0;i<2001;i++){
			for(j=0;j<2001;j++)
				ar[i][j]=-1;
		}
		

		if(b==0)
			printf("Case #%d: 1 1\n",test-t+1);		
		else	
			printf("Case #%d: %lld %lld\n",test-t+1,sfree(arr,a,b)%MAX,sfull(ar,b,b-1)%MAX);		
		t--;
	}
return 0;
}
