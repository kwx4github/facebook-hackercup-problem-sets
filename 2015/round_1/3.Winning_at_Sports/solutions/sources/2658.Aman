#include<bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d",&x);
#define slld(x) scanf("%I64d",&x);
#define LL long long
#define LD long double
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define Fill(a, b) memset(a, b, sizeof(a))
#define INF 2000000009

typedef pair<int,int> PII;
typedef vector<int> VI;

#define N 2010

LL dp[N][N];
LL fact[2*N];
LL mod = 1000000007;

void pre()
{
	dp[1][0] = 1;
	for(int i=2;i<N;i++)
	{
		dp[i][0] = 1;
		for(int j=1;j<i;j++)
		{
			dp[i][j] = dp[i-1][j] + dp[i][j-1];
			if(dp[i][j]>=mod)dp[i][j]-=mod;
		}
	}

	fact[0] = 1;
	for(int i=1;i<2*N;i++)
	{
		fact[i] = fact[i-1]*i;
		fact[i]%=mod;
	}
}

LL power(LL a,LL n)
{
	LL ans=1;
	while(n)
	{
		if(n&1)ans=(ans*a)%mod;
		a=(a*a)%mod;
		n>>=1;
	}
	return ans;
}

void solve()
{
	int n=0,m=0;
	string s;
	cin>>s;
	int idx=0;
	while(s[idx]!='-')
	{
		n*=10;
		n = n + s[idx++] - '0';
	}
	idx++;
	while(idx<s.length())
	{
		m*=10;
		m=m + s[idx++] - '0';
	}
	//cout<<n<<" "<<m<<endl;
	LL ans=(fact[m]*fact[m+1])%mod;
	ans = power(ans, mod-2);
	ans = (ans*fact[2*m])%mod;
	printf("%lld %lld\n",dp[n][m],ans);
}

int main()
{
	freopen("in3.txt","r",stdin);
	freopen("out3.txt","w",stdout);
	pre();
	int t=1;
	scanf("%d",&t);
	for(int i=1;i<=t;i++)
	{
		printf("Case #%d: ",i);
		solve();
	}
}

