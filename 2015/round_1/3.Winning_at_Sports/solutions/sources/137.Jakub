
#include <bits/stdc++.h>
#include <sys/time.h>

using namespace std;

#define FI first
#define SE second
#define X first
#define Y second
#define ST first
#define ND second
#define MP make_pair
#define PB push_back

typedef long long LL;
typedef vector<int> VI;
typedef long double LD;
typedef pair<int,int> PII;

#define REP(i,n) for(int i=0;i<(n);++i)
#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORE(a,b) for(VAR(a,(b).begin());a!=(b).end();++a)
#define VAR(a,b) __typeof(b) a=(b)
#define ALL(x) (x).begin(),(x).end()
#define CLR(x,a) memset(x,a,sizeof(x))

double getTime() {
	timeval tv;
	gettimeofday(&tv, NULL);
	return tv.tv_sec + tv.tv_usec * 1e-6;
}

const int N = 2000;

int dp[N + 5][N + 5];

const int MD = (int)1e9 + 7;

void ad(int& a, int b) {
    a = (a + b) % MD;
}

void calc() {
    dp[0][0] = 1;
    FOR (i, 0, N + 1) {
        FOR (j, 0, N + 1) {
            if (i > j) {
                if (i - 1 > j || j == 0) {
                    ad(dp[i][j], dp[i - 1][j]);
                }
                if (j > 0) {
                    ad(dp[i][j], dp[i][j - 1]);
                }
            } else {
                if (i > 0) {
                    ad(dp[i][j], dp[i - 1][j]);
                }
                if (i <= j - 1) {
                    ad(dp[i][j], dp[i][j - 1]);
                }
            }
        }
    }
}

void alg() {
    string s;
    cin >> s;
    REP (i, s.size()) {
        if (s[i] == '-') {
            s[i] = ' ';
        }
    }
    stringstream ss(s);
    int a, b;
    ss >> a >> b;
    static int case_no = 0;
    cout << "Case #" << ++case_no << ": " << dp[a][b] << " " << dp[b][b] << endl;
}

int main() {
    calc();
    int d;
    cin >> d;
    while (d--) {
        alg();
    }
}
