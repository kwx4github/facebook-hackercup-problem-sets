import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;
/*
ID: baljeet2
LANG: JAVA
TASK: Winningatsports
*/

public class Winningatsports{
    public static void main(String []args) throws IOException{
//        BufferedReader bufferedReader = new BufferedReader(new FileReader("test.in"));
        PrintWriter printWriter = new PrintWriter(new BufferedWriter(new FileWriter("test.out")));
        BufferedReader bufferedReader = new BufferedReader(new FileReader("winning_at_sports.txt"));
//        PrintWriter printWriter = new PrintWriter(new BufferedWriter(new FileWriter("Winningatsports.out")));
//        int test = Integer.parseInt(bufferedReader.readLine());
        int test = 1;
        while(test-- > 0)
            new Winningatsports().solve(bufferedReader, printWriter);
        printWriter.close();
    }
    private long stressFree(int me, int you) {
        if (me > n || you > m)return 0;
        if (me == n && you == m)return 1;
        if (me <= you && me != 0)return 0;
        if (map[me][you] > -1)return map[me][you];
        long d = 0;
        if (me == n)d = (d + stressFree(me,you + 1)) % mod;
        else if (you == m)d = (d + stressFree(me + 1,you)) % mod;
        else {
            d = (d +  stressFree(me + 1,you)) % mod;
            d = (d + stressFree(me,you + 1)) % mod;
        }
        map[me][you] = d;
        return d;
    }
    private long stressFull(int me, int you) {
        if (me > n || you > m)return 0;
        if (me == n && you == m)return 1;
        if (me > you && you != m)return 0;
        if (map1[me][you] > -1)return map1[me][you];
        long d = 0;
        if (me == n)d = (d + stressFull(me,you + 1)) % mod;
        else if (you == m)d = (d + stressFull(me + 1,you)) % mod;
        else {
            d = (d +  stressFull(me + 1,you)) % mod;
            d = (d + stressFull(me,you + 1)) % mod;
        }
        map1[me][you] = d;
        return d;
    }

    final  static int mod = (int)1e9 + 7;
    int n,m;
    long [][]map;
    long [][]map1;
    void solve(BufferedReader br, PrintWriter out) throws IOException {
        int test = Integer.parseInt(br.readLine());
        for (int t = 1; t <= test; t++) {
            StringTokenizer stringTokenizer = new StringTokenizer(br.readLine());
            map = new long[2501][2501];
            map1 = new long[2501][2501];
            for (int i = 0; i < 2500; i++) {
                Arrays.fill(map[i], -1);
                Arrays.fill(map1[i],-1);
            }
            String s = stringTokenizer.nextToken();
            n = Integer.parseInt(s.split("-")[0]);
            m = Integer.parseInt(s.split("-")[1]);
            out.print("Case #"+t+": "+stressFree(0, 0)+" "+stressFull(0,0)+"\n");
        }
    }

}

