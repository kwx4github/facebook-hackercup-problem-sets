import java.io.FileWriter;
import java.math.BigInteger;
import java.util.Scanner;

class WinningAtSports {
	
	private static final String PROBLEM = "winning_at_sports";
	private static final String PATH = "D:\\eigene Dateien\\Eigene Projekte\\Facebook Hackercup\\";
	private static final String INPUT = PATH + "fhc2015\\" + PROBLEM + "\\" + PROBLEM + ".txt";
	private static final String OUTPUT = PATH + "fhc2015\\" + PROBLEM + "\\" + PROBLEM + "_output.txt";
	private static final int MOD = 1_000_000_007;
	private static Scanner scanner;

	public static void main(String[] _) throws Exception {
		scanner = new Scanner(new java.io.File(INPUT));
		FileWriter fw = new FileWriter(OUTPUT);

		int numCases = scanner.nextInt();
		for (int i = 0; i < numCases; i++) {
			String result = solveCase();
			String output = "Case #" + (i + 1) + ": " + result + "\n";
			fw.write(output);
			System.out.print(output);
		}
		fw.close();
	}

	private static String solveCase() {
		String[] score = scanner.next().split("-");
		int win = Integer.parseInt(score[0]);
		int lose = Integer.parseInt(score[1]);
		if (lose == 0)
			return "1 1";
		return "" + binomial(win, lose) + " " + binomial(lose + 1, lose);
	}

	// compute (n-m) / m * binom(n+m-1; m);
	private static long binomial(int n, int m) {
		BigInteger bin = BigInteger.ONE;
		for (int i = 1; i < m; i++) {
			bin = bin.multiply(BigInteger.valueOf(n+m-i)).divide(BigInteger.valueOf(i));
		}
		bin = bin.multiply(BigInteger.valueOf(n-m)).divide(BigInteger.valueOf(m));
		return Integer.parseInt(bin.mod(BigInteger.valueOf(MOD)).toString(10));
	}
}