#include "stdafx.h"
#include <iostream>
#include <fstream>
#include <stdlib.h>
#include <stdio.h>
#include <vector>
#include <time.h>

#define MAXLENGTH 100000000

using namespace std;

vector<long long> cat(2001);
vector<vector<long long> > soch(4001);

void calc() {
	cat[0] = 1;
	soch[0].resize(1,1);

	for (int n = 1; n <= 2000; n++) {
		cat[n] = 0;
		for (int k = 0; k < n; k++)
			cat[n] += (cat[k] * cat[n-k-1]) % 1000000007;
		cat[n] = cat[n] % 1000000007;
	}

	for (int n = 1; n <= 4000; n++) {
		soch[n].resize(n+1,1);
		for (int k = 1; k < n; k++) {
			soch[n][k] = (soch[n-1][k] + soch[n-1][k-1]) % 1000000007;
			if (soch[n][k]<=0)
				cout << n << " " << k << " " << soch[n][k] << endl;
		}
	}
}

int _tmain(int argc, _TCHAR* argv[]) {
	ifstream read("file.txt");
	ofstream ofs;
	ofs.open ("out.txt", std::ofstream::out);
	int nlines;
	read >> nlines; //number of lines
	//cout << "nlines: " << nlines << endl;
	calc();
	//cout << cat[5] << ", " << soch[10][8] << endl;
	for (int i=1; i<=nlines; i++) {
		char tmpscore[100];  
		read >> tmpscore;
		string score(tmpscore);
		int tire = score.find("-");
		//ofs << "Case #" << i << ": " << atoi(score.substr(0,tire).c_str()) << " " << atoi(score.substr(tire+1).c_str()) << endl;
		int x = atoi(score.substr(0,tire).c_str());
		int y = atoi(score.substr(tire+1).c_str());
		if (y>0) {
			cout << "Case #" << i << ": " << ((soch[x+y-1][y] - soch[x+y-1][y-1] + 1000000007) % 1000000007) << " " << cat[y] << endl;
			ofs << "Case #" << i << ": " << ((soch[x+y-1][y] - soch[x+y-1][y-1] + 1000000007) % 1000000007) << " " << cat[y] << endl;
		}
		else {
			cout << "Case #" << i << ": " << 1 << " " << 1 << endl;
			ofs << "Case #" << i << ": " << 1 << " " << 1 << endl;
		}
	}
	ofs.close();
	cout << "Done!" << endl;
	cin >> nlines;
	return 0;
}
