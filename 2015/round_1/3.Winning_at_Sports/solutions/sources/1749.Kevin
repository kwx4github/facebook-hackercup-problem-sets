#include <iostream>
#include <fstream>
#include <string>
#include <queue>

using namespace std;

ifstream fin("in");
ofstream fout("out");

int M, N;				// point dimensions
int nums[2001][2001];	// data array

int getHigh() {
	int cur = 0;
	nums[1][0] = 1;

	for(int i = 2; i <= M; i++) {
		for(int j = 0; j <= N && j < i; j++) {
			cur = 0;
			if (j > 0) {
				cur = (cur + nums[i][j-1]) % 1000000007;
			}
			if (i-1 > j) {
				cur = (cur + nums[i-1][j]) % 1000000007;
			}
			nums[i][j] = cur;
		}
	}

	return nums[M][N];
}

int getLow() {
	int cur = 0;
	nums[0][0] = 1;

	for(int j = 1; j <= N; j++) {
		for(int i = 0; i <= j; i++) {
			cur = 0;
			if (j > i) {
				cur = (cur + nums[i][j-1]) % 1000000007;
			}
			if (i > 0) {
				cur = (cur + nums[i-1][j]) % 1000000007;
			}
			nums[i][j] = cur;
		}
	}

	return nums[N][N];
}

int main(){
	int T;
	fin >> T;

	for(int i = 1; i <= T; i++){
		fin >> M;
		fin.get();
		fin >> N;

		fout << "Case #" << i << ": " << getHigh() << " " << getLow();
		if(i < T) {
			fout << endl;
		}
	}

	fin.close();
	fout.close();
}