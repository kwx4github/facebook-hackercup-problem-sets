#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cstring>
#include <iterator>
#include <fstream>
using namespace std;

#define pb push_back
#define rs resize
#define mp make_pair
#define inf 1e9
#define pi 3.1415926535897932384626433832795
#define sz(a) (int)(a).size()
#define Sort(a) sort((a).begin(), (a).end())
#define Reverse(a) reverse((a).begin(), (a).end())
#define sf scanf
#define pf printf
#define ms(a, x) memset((a), (x), sizeof(a))
#pragma(comment, linker("\STACK:50000000"))
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <vvi> vvvi;
typedef vector <vvvi> vvvvi;
typedef vector <bool> vb;
typedef vector <vb> vvb;
typedef vector <vvb> vvvb;
typedef vector <vvvb> vvvvb;
typedef long long ll;
typedef vector <ll> vl;
typedef vector <vl> vvl;
typedef vector <vvl> vvvl;
typedef vector <vvvl> vvvvl;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <vii> vvii;
typedef pair <int, ll> il;
typedef vector <il> vil;
typedef vector <vil> vvil;
typedef pair <ll, int> li;
typedef vector <li> vli;
typedef vector <vli> vvli;
typedef set <int> si;
typedef set <li> sli;
typedef set <il> sil;
typedef vector <string> vs;
typedef vector <vs> vvs;
typedef vector <vvs> vvvs;
typedef map <string, int> msi;
typedef map <char, int> mci;
typedef pair <ll, ll> pll;

const ll M = (ll)1e9 + 7;

ll dp[2001][2001];
int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int T;
    cin >> T;
    for (int test = 1; test <= T; ++test) {
        int a, b;
        sf("%d-%d", &a, &b);
        cout << "Case #" << test << ": ";
        ms(dp, 0);
        dp[1][0] = 1;
        for (int i = 1; i <= a; ++i) {
            for (int j = 0; j <= b; ++j) {
                if (i + j <= 1)
                    continue;
                dp[i][j] = 0;
                if (i <= j)
                    continue;
                if (i > 0) {
                    dp[i][j] += dp[i - 1][j];
                }
                if (j > 0) {
                    dp[i][j] += dp[i][j - 1];
                }
                dp[i][j] %= M;
            }
        }
        cout << dp[a][b] << ' ';
        if (dp[a][b] >= M)
            throw 1;
        ms(dp, 0);
        dp[0][1] = 1;
        for (int i = 0; i <= b; ++i) {
            for (int j = 0; j <= b; ++j) {
                if (i > j)
                    continue;
                if (i == 0 && j == 1) {
                    continue;
                }
                if (i > 0) {
                    dp[i][j] += dp[i - 1][j];
                }
                if (j > 0) {
                    dp[i][j] += dp[i][j - 1];
                }
                dp[i][j] %= M;
            }
        }
        if (b == 0)
            cout << 1 << endl;
        else 
            cout << dp[b][b] << endl;
        if (dp[b][b] >= M)
            throw 1;
    }
}