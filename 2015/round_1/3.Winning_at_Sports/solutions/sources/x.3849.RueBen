#include<stdio.h>
long long mod=1000000007;
int A,B,i,j,TEMP;
int mv;
int dp[4002][4002];
int sol_max()
{
    if(B==0)
    {
     return 1;
     }
    else if(B==1) 
    {
    return mv-2;
    }
    dp[1][1]=1; dp[2][2]=1;
    for( i=3;i<=mv;i++)
    {
        for( j=2;j<=A;j++)
        {  
            if(2*j<=i) 
            {
            dp[i][j]=0;
            }
            else
            {
            dp[i][j]=dp[i-1][j]+dp[i-1][j-1];
            dp[i][j]%=mod;
            }
        }
    }
    return dp[mv][A];
}

int sol_min()
{
    if(B<0) 
    {
    return 0;
    }
    
    dp[1][1]=1;
    for( i=2;i<=mv;i++)
    {
        for( j=1;j<=B;j++)
        {  
            if(2*j<i) dp[i][j]=0;
            else
            dp[i][j]=dp[i-1][j]+dp[i-1][j-1];
            dp[i][j]%=mod;
        }
    }
    return dp[mv][B];
}
int main()
{
int ntc; scanf("%d",&ntc);
    int ans=0,tc,g1,g2,cas=1;
        for( tc=1;tc<=ntc;tc++)
        { 
        scanf("%d-%d",&A,&B);
         if(B==0)
        
        {
        if(A==1)
        {g1=1;
        }
        else
        {
         g1=A-1;    
        }
      
         g2=1;
      
        
        }
        else
        {
       
        
        mv=A+B;
            for( i=0;i<4002;i++) for( j=0;j<4002;j++) dp[i][j]=0;
        g1=sol_max();    
            
        mv=2*B-1;
        
       
        A=B-1;
        for( i=0;i<4002;i++) for( j=0;j<4002;j++) dp[i][j]=0;
        g2=sol_min();
        
        }
        printf("Case #%d: %d %d\n",cas++,g1,g2);
        }
  return 0;
    
}
