#include <cassert>
#include <cstdio>
#include <iostream>
#include <vector>
using namespace std;

typedef long long LL;
const int oo = 1000000000;
const int MOD = oo + 7;

int main() {
  int tc;
  cin >> tc;
  for (int t = 0; t < tc; t++) {
    int myScore;
    int opponentScore;
    scanf("%d-%d", &myScore, &opponentScore);
    assert(myScore > opponentScore);
    vector<vector<LL>> dp0(myScore + 1, vector<LL>(opponentScore + 1, 0));
    vector<vector<LL>> dp1(myScore + 1, vector<LL>(opponentScore + 1, 0));
    dp0[0][0] = 1;
    dp1[0][0] = 1;
    for (int i = 0; i <= myScore; i++) {
      for (int j = 0; j <= opponentScore; j++) {
        if (i > j) {
          if (i) {
            dp0[i][j] += dp0[i - 1][j];
          }
          if (j) {
            dp0[i][j] += dp0[i][j - 1];
          }
          dp0[i][j] %= MOD;
        }
        if (j >= i || j == opponentScore) {
          if (i) {
            dp1[i][j] += dp1[i - 1][j];
          }
          if (j) {
            dp1[i][j] += dp1[i][j - 1];
          }
          dp1[i][j] %= MOD;
        }
      }
    }
    cout << "Case #" << t + 1 << ": " << dp0[myScore][opponentScore] << " " << dp1[myScore][opponentScore] << endl;
  }
  return 0;
}
