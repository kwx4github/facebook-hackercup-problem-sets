/////////////////////////////////////////////////////////////////////////////

#include <cassert>
#include <string>
#include <sstream>
#include <iostream>
#include <deque>
#include <cctype>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <cstring>

using namespace std;

const int MOD = 1000000007;

int sf[2001][2001];
int full[2001][2001];

int main() {
	int cases;

	cin >> cases;

	for (int caseno = 1; caseno <= cases; ++caseno) {
		cout << "Case #" << caseno << ": ";
		string score;
		cin >> score;
		for (int i = 0; i < (int) score.size(); ++i)
			if (score[i] == '-')
				score[i] = ' ';
		istringstream str(score);
		int a, b;
		str >> a >> b;
		assert(a > b);
		assert(b >= 0);
		assert(a <= 2000);

		// stressfree
		for (int j = b; j >= 0; --j) {
			sf[a][j] = 1;
		}
		for (int i = a; i > b; --i) {
			sf[i][b] = 1;
		}

		for (int i = a - 1; i >= 0; --i) {
			for (int j = min(b - 1, i - 1); j >= 0; --j) {
				int& res = sf[i][j];
				res = sf[i + 1][j];
				if (j + 1 < i) {
					res = (res + sf[i][j + 1]) % MOD;
				}
			}
		}
		cout << sf[1][0] << ' ';

		// stressful
		for (int i = 0; i <= b; ++i) {
			full[i][b] = 1;
		}

		for (int i = a; i >= 0; --i) {
			for (int j = b - 1; j >= i; --j) {
				int& res = full[i][j];
				res = full[i][j + 1];
				if (i < j) {
					res = (res + full[i + 1][j]) % MOD;
				}
			}
		}
		cout << full[0][0] << endl;
	}
	return 0;
}

