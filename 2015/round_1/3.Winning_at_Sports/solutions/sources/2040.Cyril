// Facebook Hacker Cup 2015 - round 2

#include <fstream>
#include <string>

using namespace std;

void
parse(string s,int &a,int &b)
{
	a=0,b=0;
	int half=0;
	for(int i=0;i<s.size();i++)
	{
		char c=s[i];
		// check for '-'
		if(c=='-')
		{
			half=1;
			continue;
		}
		// store a number
		if(half==0)
		{
			a*=10;
			a+=s[i]-48;
		}
		else
		{
			b*=10;
			b+=s[i]-48;
		}
	}
}

int DP1[2005][2005];
int
solvefree(int a,int b)
{
	// base case
	if(b==0)return 1;
	// memo
	if(DP1[a][b]!=-1)return DP1[a][b];
	// recursive case
	int ways1=0;
	if(a>b+1)ways1=solvefree(a-1,b)%1000000007;
	int ways2=solvefree(a,b-1)%1000000007;
	DP1[a][b]=(ways1+ways2)%1000000007;
	return DP1[a][b];
}

int DP2[2005][2005];
int
solvefull(int a,int b)
{
	// base case
	if(b==0)return 1;
	// memo
	if(DP2[a][b]!=-1)return DP2[a][b];
	// recursive case
	int ways1=0;
	if(a>=b+1)ways1=solvefull(a-1,b)%1000000007;
	int ways2=solvefull(a,b-1)%1000000007;
	DP2[a][b]=(ways1+ways2)%1000000007;
	return DP2[a][b];
}

int
main()
{
	// initialize the memo
	for(int i=0;i<2005;i++)
		for(int j=0;j<2005;j++)
		{
			DP1[i][j]=-1;
			DP2[i][j]=-1;
		}
	ifstream cin;
	cin.open("was_in.txt");
	ofstream cout;
	cout.open("was_out.txt");
	int T;
	cin>>T;
	for(int t=1;t<=T;t++)
	{
		// store the input
		string score;
		cin>>score;
		int a,b;
		parse(score,a,b);
		// solve
		cout<<"Case #"<<t<<": "<<solvefree(a,b)<<" "<<solvefull(b,b)<<endl;
	}
	return 0;
}
