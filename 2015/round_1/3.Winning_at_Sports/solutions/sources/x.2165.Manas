using namespace std;
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<queue>
#include<limits>
#include<map>
#define LLU long long unsigned int
#define LLD long long double
#define FOR(i,N) for(int i=0;i<(N);i++)
#define myfill(a,x) memset(a,x,sizeof(a))
#define pb push_back
#define mod 1000000007
LLU sfree[2001][2001],sful[2001][2001];
void init()
{
    myfill(sfree,-1);
    myfill(sful,-1);
}
int p1,p2;
LLU solvefree(int x,int y)
{
    //cout<<x<<" "<<y<<endl;
    if(sfree[x][y]!=-1)
        return sfree[x][y];
    if(y>=x)
        return 0;
    if(y>p2 || x>p1)
        return 0;
    if(x==p1 && y==p2)
        return 1;
    int a=(solvefree(x+1,y)%mod);
    int b=(solvefree(x,y+1)%mod);
    return sfree[x][y]=(a+b)%mod;
}
LLU solveful(int x,int y)
{
    //cout<<x<<" "<<y<<endl;
    if(sful[x][y]!=-1)
        return sful[x][y];
    if(x>y && y!=p2)
        return 0;
    if(y>p2 || x>p1)
        return 0;
    if(x==p1 && y==p2)
        return 1;
    int a=(solveful(x+1,y)%mod);
    int b=(solveful(x,y+1)%mod);
    return sful[x][y]=(a+b)%mod;
}
int main()
{
    int t,cas=1;
    string f,s,ip;
    cin>>t;
    while(t--)
    {
        cin>>ip;
        init();
        s="",f="";
        bool fnd=false;
        FOR(i,ip.length())
        {
            if(fnd)
                s.pb(ip[i]);
            else if(ip[i]=='-')
                fnd=true;
            else
                f.pb(ip[i]);
        }
        p1=atoi(f.c_str());
        p2=atoi(s.c_str());
        LLU ans1=solvefree(1,0);
        LLU ans2=solveful(0,1);
        cout<<"Case #"<<cas++<<": "<<ans1<<" "<<ans2<<endl;
    }
    return 0;
}
