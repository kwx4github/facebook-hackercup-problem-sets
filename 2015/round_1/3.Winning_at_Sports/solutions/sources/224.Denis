#include <iostream>
#include <string>
#include <vector>
using namespace std;

int const M = 1000000007;

pair<int, int> solve(int a, int b)
{
    vector<vector<int>> dpfree(a + 1, vector<int>(b + 1)), dpful = dpfree;
    dpfree[0][0] = dpful[0][0] = 1;
    for (int i = 0; i <= a; ++i) {
        for (int j = i == 0; j <= b; ++j) {
            if (i > j) {
                if (i > 0) { dpfree[i][j] += dpfree[i - 1][j]; }
                if (j > 0) { dpfree[i][j] += dpfree[i][j - 1]; }
                dpfree[i][j] %= M;
            }
            if (i <= j || j == b) {
                if (i > 0) { dpful[i][j] += dpful[i - 1][j]; }
                if (j > 0) { dpful[i][j] += dpful[i][j - 1]; }
                dpful[i][j] %= M;
            }
        }
    }
    return make_pair(dpfree[a][b], dpful[a][b]);
}

int main()
{
    int tests;
    cin >> tests;
    for (int test = 1; test <= tests; ++test) {
        string s;
        cin >> s;
        int t = s.find('-');
        int a = stoi(s.substr(0, t)), b = stoi(s.substr(t + 1));
        auto p = solve(a, b);
        cout << "Case #" << test << ": " << p.first << " " << p.second << endl;
    }
}
