#include <iostream>
#include <string.h>
#include <stdlib.h>
#include <queue>
using namespace std;

int point1[2]={0,-1};
int point2[2]={-1,0};

int main ()
{
  
  int num_input,i;
  cin>>num_input;
  long long int low,high;
  int k;
  int num_string;
  
  string value;
  int j;
  long long int count=0;
  string pt1,pt2;
  int p1,p2;
  int sum;
  long long int total_value;
  queue<long long int> q;
  long long int next_p1,next_p2,q_p1,q_p2,last_p1,last_p2;
  unsigned long long int stressfree,stressfull;
  
  for (int k = 0; k < num_input; ++k)
  {
    cin>>value;
    size_t pos = value.find("-");
    pt1=value.substr(0,pos);
    pt2=value.substr(pos+1,value.length());
    
    p1=atoi(pt1.c_str());
    p2=atoi(pt2.c_str());
   
  
    vector< vector<unsigned long long int> > table1,table2;
    vector<unsigned long long int> test;
    test.assign(p2+1, 0);
    for (i = 0; i <= p1; ++i)
    {
      table1.push_back(test);
      table2.push_back(test);
    }
      

    for(i=0;i<=p1; i++)
      { table2[i][0]=0;
        table1[i][0] =1;
      }
  
 
  for(i=0;i<=p2; i++)
      {
        table1[0][i] =0;
        table2[0][i] =1;
      }

  //Stressless
  for(i=1; i<=p1; i++ )
     for(j=1; j<=p2; j++)
     {
        if(i>j)
         {
          table1[i][j] = (table1[i-1][j] + table1[i][j-1])%1000000007;
        }
    }   

    
    for(i=1; i<=p1; i++ )
     for(j=1; j<=p2; j++)
     {
        if((i>j)&&(j!=p2))
         {
          table2[i][j]=0;
        }
        else
          table2[i][j] = (table2[i-1][j] + table2[i][j-1])%1000000007;
    }  
    
    
      stressfree=table1[p1][p2];
      stressfull=table2[p1][p2];
     
    
    cout<<"Case #"<<k+1<<": "<<stressfree<<" "<<stressfull<<"\n";
  }

}