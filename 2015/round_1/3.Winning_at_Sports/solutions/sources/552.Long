#include <fstream>
#include <vector>
#include <iostream>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <list>
#include <queue>
#include <algorithm>
#include <math.h>
#include <stdlib.h>
using namespace std;

string myitoa (int i) {
	string ret;
	if (i == 0)
		return string("0");
	while (i > 0) {
		ret.push_back('0' + i % 10);
		i /= 10;
	}
	reverse(ret.begin(), ret.end());
	return ret;
}

struct tri{
	int a;
	int b;
	int c;
	tri (int a, int b, int  c): a(a),b(b),c(c){};

	bool operator< (tri & other) const {
		return a < other.a ||( (a == other.a) && b < other.b) || (a == other.a && b == other.b && c < other.c);
	}
};

struct cmp {
	bool operator() (const tri& A, const tri& B) const {
		return A.a < B.a || (A.a == B.a && A.b < B.b) || (A.a == B.a && A.b == B.b && A.c < B.c);
	}
};

long long get(map<tri, long long, cmp>& his , tri f) {
	if (his.count(f)) 
		return his[f];
	if (f.a == 0 || f.b == 0)
		return 1;
	tri g(0,0,0);
	g.a =  f.a - 1;
	g.c += f.c + 1;
	g.b = f.b;
	tri h(0,0,0);
	h.b = f.b - 1;
	h.c = f.c - 1;
	h.a = f.a;
	long long ret;
	if (f.c > 0)
		ret = get(his, g) + get(his, h);
	else
		ret = get(his, g);
	his[f] = ret % 1000000007;
	return his[f];
}

int main()
{
	ifstream curFile;
	curFile.open("winning_at_sports.txt", ios::in);
	vector<int> free;
	vector<int> ful;
	int a;
	int b;
	char c;
	map <tri, long long, cmp> his;
	int N;
	if(curFile)
	{
		curFile >> N;		
		while (N -- > 0) {
			curFile >> a;
			curFile >> c;
			curFile >> b;
			long long x,y;
			x = get(his, tri(a - 1 , b , 0));
			y = get(his,tri(b, b, 0));
			free.push_back(x);
			ful.push_back(y);
		}
	}
	else {
		cout << "Can't open input file << endl;";
	}
	curFile.close();
	ofstream outfile;
	outfile.open("output.txt", ios::out);
	if(outfile)
	{
		for(int i = 0; i < free.size() ; i++) {
			outfile << "Case #" << i + 1<< ": " <<free[i] << ' '<<ful[i] << endl;
			cout << "Case #" << i + 1<< ": " <<free[i] << ' '<<ful[i]<< endl;
		}
	}
	outfile.close();
	return 0;
}
