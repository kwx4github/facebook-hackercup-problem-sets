#include <bits/stdc++.h>
using namespace std;

const int MOD = 1e9 + 7;
int dp[4040][2020][2];

void rel(int &a)
{
    while(a < 0)
        a += MOD;
    while(a >= MOD)
        a -= MOD;
}

int solve()
{
    memset(dp, 0, sizeof(dp));
    dp[1][1][0] = 1;
    dp[0][0][1] = 1;
    string input;

    cin >> input;
    int sz = input.size();

    int x, y;
    for(int i = 0; i < sz; i++)
        if(input[i] == '-') {
            x = stoi(input.substr(0, i));
            y = stoi(input.substr(i + 1));        
        }

    for(int i = 0; i < x + y; i++) {
        for(int j = 0; j <= x; j++) {
            int n1 = j, n2 = i - j;
            if(dp[i][j][0]) {
                dp[i + 1][j + 1][0] += dp[i][j][0];
                if(n2 + 1 < n1)
                    dp[i + 1][j][0] += dp[i][j][0];
            }
            if(dp[i][j][1]) {
                if(n2 == y)
                    dp[i + 1][j + 1][1] += dp[i][j][1];
                else {
                    dp[i + 1][j][1] += dp[i][j][1];
                    if(n1 + 1 <= n2)
                        dp[i + 1][j + 1][1] += dp[i][j][1];
                }
            }
            for(int k = 0; k < 2; k++) {
                rel(dp[i + 1][j + 1][k]);
                rel(dp[i + 1][j][k]);
            }
        }
    }

    cout << dp[x + y][x][0] << " " << dp[x + y][x][1] << endl;
}

int main()
{
    int t;
    cin >> t;
    for(int i = 0; i < t; i++) {
        printf("Case #%d: ", i + 1);
        solve();
    }
    return 0;
}
