#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pb push_back
int conv(string s){
	int ans=0;
	for (int i = s.length()-1; i >= 0; i--) ans+=(s[i]-'0')*pow(10,s.length()-i-1);
	return ans;  
}
ll mod=1000000007;
pair<ll, pair<ll, ll> > extendedEuclid(ll a, ll b) {
    ll x = 1, y = 0;
    ll xLast = 0, yLast = 1;
    ll q, r, m, n;
    while(a != 0) {
        q = b / a;
        r = b % a;
        m = xLast - q * x;
        n = yLast - q * y;
        xLast = x, yLast = y;
        x = m, y = n;
        b = a, a = r;
    }
    return make_pair(b, make_pair(xLast, yLast));
}
 
int modInverse(int a, int m) {
    return (extendedEuclid(a,m).second.first + m) % m;
}
ll comb(ll x,ll y){
	if(x<y) return 0;
	if(x==0 || y==0) return 1;
	ll prod=1;
	for (int i = x+1; i < x+y; i++) prod*=i,prod%=mod;
	prod*=(x-y);prod%=mod;
	ll pr=1;
	for (int i = 1; i <= y; i++) pr*=i,pr%=mod;
	ll t=modInverse(pr,mod);
	return (prod*t)%mod;   
}

ll comb1(ll x,ll y){
	if(x<y) return 0;
	if(x==0 || y==0) return 1;
	ll prod=1;
	for (int i = x+2; i <= x+y; i++) prod*=i,prod%=mod;
	prod*=(x-y+1);prod%=mod;
	ll pr=1;
	for (int i = 1; i <= y; i++) pr*=i,pr%=mod;
	ll t=modInverse(pr,mod);
	return (prod*t)%mod;   
}
int main(){
	int test,k=0;
	scanf("%d",&test);
	while (test--){
		k++;
		string s;
		cin>>s;
		int win,lose;
		for (int i = 0; i < s.length(); i++) {
			if(s[i]=='-'){
				win=conv(s.substr(0,i));
				lose=conv(s.substr(i+1,s.length()-i-1));
			}
		}
		ll ans=0;
		//cout<<comb(0,0)+comb(0,1)+comb(0,2)<<endl;
		cout<<"Case #"<<k<<": "<<comb(win,lose)<<" ";
		for (int i = lose; i <= win+lose; i++) {
			ans+=comb1(lose-1,i-lose);
			ans%=mod;
		}
		cout<<ans<<endl;
	}
	    	
}