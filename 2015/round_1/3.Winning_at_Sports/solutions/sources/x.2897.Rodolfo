def get_stress_free_table():
    empty = [long(-1)] * 2005
    table = [list(empty) for i in xrange(2005)]
    for i in xrange(1,2005):
        table[0][i] = long(1)
    for i in xrange(1,2005):
        for j in xrange(i+1,2005):
            table[i][j] = max(table[i-1][j], table[i-1][j] + table[i][j-1])

    return table

def get_stress_full_table():
    return None

def resolve(st_free_table, st_full_table):
    IJ = map(int, raw_input().split("-"))
    i = IJ[1]
    j = IJ[0]
    st_free = st_free_table[i][j]

    i = IJ[1] - 1
    j = IJ[1]
    st_full = st_free_table[i][j+1]
    return st_free, st_full

def main():
    T = int(raw_input())
    st_free_table = get_stress_free_table()
    st_full_table = get_stress_full_table()
    for i in xrange(1,T+1):
        ans = resolve(st_free_table, st_full_table)
        print "Case #%d: %ld %ld" % (i, ans[0] % 1000000007, ans[1] % 1000000007)

if __name__ == "__main__":
    main()
