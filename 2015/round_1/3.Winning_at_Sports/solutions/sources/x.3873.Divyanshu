#include<bits/stdc++.h>
#define MAX 1000000007
using namespace std;


int stress_free( int dp[][2001] , int Max_x, int Max_y, int x, int y){

    if( dp[x][y] > 0 )
        return dp[x][y];
    else if( x == Max_x && y == Max_y) return 1;
    else {
        int a = 0, b = 0;
        if( y + 1 < x && y < Max_y)
            a = stress_free(dp, Max_x, Max_y, x, y + 1);
        if( x < Max_x )
            b = stress_free(dp, Max_x, Max_y, x + 1, y);

        dp[x][y] = (a + b) % MAX;
        return dp[x][y];
    }
}

int stress_full(int dp[][2001] , int Max_x, int Max_y, int x, int y){
    if(dp[x][y] > 0)
        return dp[x][y];
    else if( x == Max_x && y == Max_y) return 1;
    else{
        int a = 0, b = 0;
        if(x < y)
            a = stress_full(dp, Max_x, Max_y, x + 1, y);
        if( y < Max_y)
            b = stress_full(dp, Max_x, Max_y, x, y + 1);
        dp[x][y] = (a + b)% MAX;
        return dp[x][y];
    }
}
int dp[2001][2001] = {0};
int dp2[2001][2001] = {0};
int main()
{
    FILE *ip = fopen("winning_at_sports.txt", "r");
    ofstream op ("output.txt");
    int t, counter = 0;
    fscanf(ip, "%d", &t);
    while( t-- ){
        int Mx, My;
        counter++;
        fscanf(ip, "%d-%d", &Mx, &My);
        for(int i = 0; i < 2001; i++){
            for(int j = 0; j < 2001; j++){
                dp[i][j] = 0;
                dp2[i][j] = 0;
            }
        }
        op <<"Case #"<<counter<<": "<< stress_free(dp, Mx, My, 1, 0) << " " << stress_full(dp2, My, My, 0, 1)<<endl;
    }
    return 0;
}
