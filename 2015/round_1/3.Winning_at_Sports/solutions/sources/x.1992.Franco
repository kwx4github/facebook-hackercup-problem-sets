#include <iostream>
#include <sstream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>

using namespace std;

const int mod = 1e9 + 7;
const int N = 2000 + 10;

inline void add(int &a, int b) {
  a += b;
  if (a >= mod) {
    a -= mod;
  }
}

int f[2][N][N];

int main() {
  freopen("in", "r", stdin);
  freopen("out", "w", stdout);
  int tt;
  scanf("%d", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    printf("Case #%d: ", cc);
    int n, m;
    scanf("%d-%d", &n, &m);
    for (int i = 1; i <= n; ++i) {
      f[0][i][0] = 1;
    }
    for (int i = 1; i <= m; ++i) {
      f[1][0][i] = 1;
    }
    for (int i = 1; i <= n; ++i) {
      for (int j = 1; j <= m; ++j) {
        f[0][i][j] = 0;
        if (i > j) {
          if (i - 1 > j) {
            add(f[0][i][j], f[0][i - 1][j]);
          }
          if (i > j - 1) {
            add(f[0][i][j], f[0][i][j - 1]);
          }
        }
        f[1][i][j] = 0;
        if (j >= i || j == m) {
          if (j >= i - 1 || j == m) {
            add(f[1][i][j], f[1][i - 1][j]);
          }
          if (j - 1 >= i) {
            add(f[1][i][j], f[1][i][j - 1]);
          }
        }
      }
    }
    printf("%d %d\n", f[0][n][m], f[1][n][m]);
  }
  return 0;
}