import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.*;
import java.util.Scanner;


public class hacker_14 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		File fileInput = new File("/Users/chirag/Documents/workspace/Interview/src/input.txt");
		File fileOutput = new File("/Users/chirag/Documents/workspace/Interview/src/output.txt");
		int cases=0;
		
		try {
			PrintWriter writer = new PrintWriter(fileOutput);
	        Scanner sc = new Scanner(fileInput);
	       cases = sc.nextInt(); 
	       String s=sc.nextLine();
	       HashMap<String,Long> map=new HashMap<String,Long>();
	       HashMap<String,Long> map1=new HashMap<String,Long>();
	       for(int a=1;a<=cases;a++)
	       {
	    	   
	    	   s=sc.nextLine();
	    	  
	    	   Scanner num=new Scanner(s);
	    	   num.useDelimiter("-");
	    	   int m=0;
	    	   int n=0;
	    	   if(num.hasNext())
	    		   m=num.nextInt();
	    	   if(num.hasNext())
	    		   n=num.nextInt();
	    	  
	    	   long ans=stressFree(m,n,m,n,map);
	    	  
	    	   long ans1=stressFull(m,n,m,n,map1);
	    	   ans=ans%1000000007;
	    	   ans1=ans1%1000000007;
	    	   
	    	   writer.println("case #"+(a)+": "+ans+" "+ans1);
	       }
        sc.close();
        writer.close();
    } 
    catch (FileNotFoundException e) {
        e.printStackTrace();
    }
		
	}
	
	public static long stressFree(int i, int j,int m, int n, HashMap<String,Long> map)
	{
		String v=i+"-"+j;
		if(map.containsKey(v))
			return map.get(v);
		if(i==1 && j==0)
			return 1;
		long left=0;
		long right=0;
		String v1=(i-1)+"-"+j;
		String v2=i+"-"+(j-1);
		if(j!=0)
		{
			if(map.containsKey(v2))
			{
				left=map.get(v2);
			}
			else
			{
			   left=stressFree(i,j-1,m,n,map);
			   map.put(v2, left);
			}
		}
	    if(i!=0 && (j+1)<i)
	    {
	    	if(map.containsKey(v1))
	    	{
	    		right=map.get(v1);
	    	}
	    	else
	    	{
	    		right=stressFree(i-1,j,m,n,map);
	    		map.put(v1,right);
	    	}
	    }
			long a=right+left;
			a=a%1000000007;
			map.put(v, a);
		return a;
	}
	
	public static long stressFull(int i, int j, int m, int n, HashMap<String,Long> map)
	{
		String val=i+"-"+j;
		if(map.containsKey(val))
			return map.get(val);
		
		if(i==0 && j==0)
			 return 1;
		long left=0;
		long right=0;
		String v1=(i-1)+"-"+j;
		String v2=i+"-"+(j-1);
		
		if(i!=0)
		{
			if(map.containsKey(v1))
				right=map.get(v1);
			else
			{
				right=stressFull(i-1,j,m,n,map);
				map.put(v1,right);
			}
		}
	
			 if((i+1)<=j)
			{
				 if(map.containsKey(v2))
					 left=map.get(v2);
				 else
				 {
					 left=stressFull(i,j-1,m,n,map);
					 map.put(v2,left);
				 }
			}
			 long a=right+left;
				a=a%1000000007;
				map.put(val, a);
			return a;
	}
	

}
