#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <cstring>

using namespace std;

#define pb push_back
#define len length()
#define clr clear()

#define eps 0.0000001
#define PI  3.14159265359
#define inf 1999888777

FILE *fin, *fout;

int mmod = 1000000007;

int d1[2005][2005],d2[2005][2005];

void fmod(int &x) {
    while (x >= mmod) x-=mmod;
}

int main() {

    int t,a,b,i,j,T;

    //fin = stdin;
    //fout = stdout;
    fin = fopen("winning_at_sports.txt", "r");
    fout = fopen("winning_at_sports_output.txt", "w");

    fscanf(fin, "%d", &T);
    for(t=1; t<=T; t++) {

        fscanf(fin, "%d-%d", &a, &b);

        memset(d1,0,sizeof(d1));
        memset(d2,0,sizeof(d2));

        d1[1][0] = 1;
        d2[0][0] = 1;

        for(i=0; i<=a; i++) {
            for(j=0; j<=b; j++) {
                if (i>0 || j>0) {
                    if (i!=1 || j!=0) {
                        if (i <= j) d1[i][j] = 0;
                        else {
                            d1[i][j] = (i>0?d1[i-1][j]:0) + (j>0?d1[i][j-1]:0);
                            fmod(d1[i][j]);
                        }
                    }

                    if (i>j && j!=b) d2[i][j] = 0;
                    else {
                        d2[i][j] = (i>0?d2[i-1][j]:0) + (j>0?d2[i][j-1]:0);
                        fmod(d2[i][j]);
                    }
                }
            }
        }

        fprintf(fout, "Case #%d: ", t);
        fprintf(fout, "%d %d\n", d1[a][b], d2[a][b]);
    }

    return 0;
}
