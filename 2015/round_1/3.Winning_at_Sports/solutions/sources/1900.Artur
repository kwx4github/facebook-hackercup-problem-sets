MAX_S = 2001
MODULO = 1000000007

free = [[0] * MAX_S for i in xrange(MAX_S)]
free[0][0] = 1

for n in xrange(1, MAX_S):
    free[n][0] = free[n - 1][0]
    for m in xrange(1, n):
        free[n][m] = free[n][m - 1]
        if n - 1 > m:
            free[n][m] = (free[n][m] + free[n - 1][m]) % MODULO

def compute_ful(N, M):
    if M == 0:
        return 1

    ful = [[0] * (M + 1) for i in xrange(N + 1)]
    ful[0] = [1] * (M + 1)

    for m in xrange(1, M + 1):
        for n in xrange(1, m + 1):
            ful[n][m] = (ful[n - 1][m] + ful[n][m - 1]) % MODULO

    for n in xrange(M + 1, N + 1):
        ful[n][M] = ful[n - 1][M]

    return ful[N][M]

T = input()
for t in xrange(T):
    N, M = map(int, raw_input().split('-'))
    ful = compute_ful(N, M)
    print "Case #%d: %d %d" % (t + 1, free[N][M], ful)
