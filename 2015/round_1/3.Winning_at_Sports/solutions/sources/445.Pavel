#include <cstdio>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cmath>
#include <bitset>
#include <set>
#include <map>
#include <string>
#include <string.h>

using namespace std;

int base = 1000000007;

int dpA[2010][2010], dpB[2010][2010];


int recA(int a, int b)
{
	if ( dpA[a][b] != -1 ) return dpA[a][b];
	if ( a == b ) 
		dpA[a][b] = 0;
	else
	{
		dpA[a][b] = recA(a-1, b) + recA(a, b-1);
		dpA[a][b] %= base;
	}
	return dpA[a][b];
}

int recB(int a, int b)
{
	if ( dpB[a][b] != -1 ) return dpB[a][b];
	if ( a > b )
	{
		dpB[a][b] = recB(b-1, b);
	}
	if ( a == b )
	{
		dpB[a][b] = recB(a-1, b);
	}
	if ( a < b )
	{
		dpB[a][b] = recB(a-1, b) + recB(a, b-1);
		dpB[a][b] %= base;
	}
	return dpB[a][b];
}
void solve(int test)
{
	printf("Case #%d: ", test);
	int a, b;
	scanf("%d-%d", &a, &b);
	cout<<recA(a, b)<<" "<<recB(a, b)<<"\n";
}
int main()
{
	freopen("outputC.txt", "w", stdout);
	memset(dpA, -1, sizeof(dpA));
	memset(dpB, -1, sizeof(dpB));
	for (int i=1; i<2010; i++)
		dpA[i][0] = dpB[0][i] = dpB[i][0] = 1;
	
	int test;
	cin>>test;
	for (int i=1; i <= test; i++)
		solve(i);
	return 0;
}
