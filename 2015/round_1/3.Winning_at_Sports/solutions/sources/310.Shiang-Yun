#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;

#define MAXN 2048
const long long mod = 1000000007LL;
long long dp1[MAXN][MAXN] = {}, dp2[MAXN][MAXN] = {};
int main() {
    dp1[1][0] = 1;
    for (int i = 1; i <= 2000; i++) {
        for (int j = 0; j <= 2000; j++) {
            if (i+1 > j) {
                dp1[i+1][j] = (dp1[i+1][j] + dp1[i][j])%mod;
            }
            if (i > j + 1) {
                dp1[i][j+1] = (dp1[i][j+1] + dp1[i][j])%mod;
            }
        }
    }
    int testcase, cases = 0;
    int a, b;
    scanf("%d", &testcase);
    while (testcase--) {
        scanf("%d-%d", &a, &b);
        memset(dp2, 0, sizeof(dp2));
        dp2[0][0] = 1;
        for (int i = 0; i <= a; i++) {
            for (int j = 0; j <= b; j++) {
                if (i+1 <= j || j == b)
                    dp2[i+1][j] = (dp2[i+1][j] + dp2[i][j])%mod;
                if (j+1 <= b)
                    dp2[i][j+1] = (dp2[i][j+1] + dp2[i][j])%mod;
            }
        }
        printf("Case #%d: %lld %lld\n", ++cases, dp1[a][b], dp2[a][b]);
    }
    return 0;
}
/*
 5
 2-1
 3-1
 3-2
 10-5
 1000-500
*/