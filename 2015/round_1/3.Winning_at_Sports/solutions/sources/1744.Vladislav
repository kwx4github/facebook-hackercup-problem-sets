#include <bits/stdc++.h>
using namespace std;

const int kModulus = 1e9 + 7;

void IncModulus(int& x, int y)
{
    x += y;
    if (x >= kModulus) {
        x -= kModulus;
    }
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    ios_base::sync_with_stdio(false);

    const int kMaxScore = 2e3;

    vector<vector<int> > answer1(kMaxScore + 1, vector<int>(kMaxScore + 1, 0));

    answer1[0][0] = 1;
    for (int i = 1; i <= kMaxScore; ++i) {
        answer1[i][0] = 1;
    }
    for (int j = 1; j <= kMaxScore; ++j) {
        answer1[0][j] = 0;
    }

    for (int i = 1; i <= kMaxScore; ++i) {
        for (int j = 1; j <= kMaxScore; ++j) {
            answer1[i][j] = 0;
            if (i > j) {
                IncModulus(answer1[i][j], answer1[i - 1][j]);
                IncModulus(answer1[i][j], answer1[i][j - 1]);
            }
        }
    }

    vector<vector<int> > answer2(kMaxScore + 1, vector<int>(kMaxScore + 1, 0));

    answer2[0][0] = 1;
    for (int i = 1; i <= kMaxScore; ++i) {
        answer2[i][0] = 0;
    }
    for (int j = 1; j <= kMaxScore; ++j) {
        answer2[0][j] = 1;
    }

    for (int i = 1; i <= kMaxScore; ++i) {
        for (int j = 1; j <= kMaxScore; ++j) {
            answer2[i][j] = 0;
            if (i <= j) {
                IncModulus(answer2[i][j], answer2[i - 1][j]);
                IncModulus(answer2[i][j], answer2[i][j - 1]);
            }
        }
    }

    int tests;
    cin >> tests;
    for (int test = 1; test <= tests; ++test) {
        cout << "Case #" << test << ": ";
        int a, b;
        cin >> a;
        cin.ignore();
        cin >> b;
        cout << answer1[a][b] << " " << answer2[b][b] << endl;
    }

    return 0;
}
