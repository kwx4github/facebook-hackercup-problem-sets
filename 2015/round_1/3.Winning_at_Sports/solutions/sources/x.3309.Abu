/*
ID: hanifbo1
PROG: ride
LANG: C++
*/
#include<bits/stdc++.h>

using namespace std;

#define DD          double
#define INF         1000000000000000000000
#define llu            unsigned long long
#define eps         0.000001
#define FastIO      ios_base::sync_with_stdio(0); cin.tie(0)
#define READ(f)     freopen(f,"r",stdin)
#define WRITE(f)    freopen(f,"w",stdout)
#define sc          scanf
#define pf          printf
#define mem(a,val)  memset(a,val,sizeof(a))
#define rep(s,n)    for(long i=s; i<=n;i++)
#define pb          push_back
#define ll          long long
#define pi          (2*acos(0.0))
#define mx          35000
#define ssc         sscanf
#define FOR(i,n)    for(long i=1;i<=n;i++)
#define FORL(i,n) for(long i=0;i<n;i++)
#define PQ          priority_queue
#define sr(v)       sort(v.begin(),v.end())
#define mod         1000000007
#define sz          size()
#define inp          ({long tt2;sc("%ld",&tt2);tt2;})
#define Case(x)     (pf("Case %ld",x);)
//#define inp2        ({long a,b})
int a,b;
int Visit1[2002][2002];
int dp1[2002][2002];
int ks;

int call1(int i,int j){

        //cout<<a<<" "<<b<<endl;
        if(j>i)return 0;

        if(i>=a || j>=b){

            if(i == a && b == j)
            return 1;

            //return 0;
        }
        if(Visit1[i][j] == ks)return dp1[i][j];

        int profit1 = 0,profit2 = 0;
        //cout<<i<<" "<<j<<endl;
        if(i<=a)
        profit1 = (profit1 + call1(i+1,j))%mod;

        if(j<=b && j+1<i)
        profit2 = (profit2 + call1(i,j+1))%mod;

        //cout<<profit1<<" "<<profit2<<endl;
        Visit1[i][j] = ks;

        return dp1[i][j] = (profit1 + profit2)%mod;
}

int dp2[2002][2002];
int Visit2[2002][2002];

int call2(int i,int j){

    if(a == i && b == j)
    return 1;
    if(i>j && j<b)return 0;
    if(i>a || j>b)return 0;

    if(Visit2[i][j] == ks)return dp2[i][j];

    int profit1 = 0,profit2 = 0;
    //cout<<i<<" "<<j<<endl;
    //if(i+1<=j)
    profit1 = (profit1+call2(i+1,j))%mod;

    profit2 = (profit2+call2(i,j+1))%mod;

    Visit2[i][j] = ks;

    return dp2[i][j] = profit1+profit2;

}
int main()
{
    READ("in.txt");
    WRITE("out.txt");
    //ofstream fout ("ride.out");
    //ifstream fin ("ride.in");

    int t;
    ks = 1;

    sc("%d",&t);

    while(t--){

        //mem(dp,-1);

        sc("%d-%d",&a,&b);
        //cout<<a<<" "<<b<<endl;

        pf("Case #%d: %d %d\n",ks,call1(1,0)%mod,call2(0,1)%mod);
        //cout<<call1(1,0)<<" "<<call2(0,1)<<endl;
        ks++;
    }
    return 0;
}


