#include <cstdio>
#include <cstring>

#define SIZE 2010
#define MOD 1000000007

long long stressfull[SIZE][SIZE];
long long stress_free[SIZE][SIZE];

long long stress_free_ways(int a, int b, int targ_a, int targ_b) {
  //fprintf(stderr, "stress free %d %d: %d %d\n", a, b, targ_a, targ_b);
  if (a == targ_a && b == targ_b) return 1;
  else if (a > targ_a || b > targ_b || a <= b) return 0;
  else if (stress_free[a][b] > -1) return stress_free[a][b];
  else {
    return stress_free[a][b] = (
        stress_free_ways(a + 1, b, targ_a, targ_b) +
        stress_free_ways(a, b + 1, targ_a, targ_b)) % MOD;
  }
}

long long stressfull_ways(int a, int b, int targ_a, int targ_b) {
  //fprintf(stderr, "stressfull %d %d: %d %d\n", a, b, targ_a, targ_b);
  if (a == targ_a && b == targ_b) return 1;
  else if (a > targ_a || b > targ_b || (b < targ_b && a > b)) return 0;
  else if (stressfull[a][b] > -1) return stressfull[a][b];
  else {
    return stressfull[a][b] = (
        stressfull_ways(a + 1, b, targ_a, targ_b) +
        stressfull_ways(a, b + 1, targ_a, targ_b)) % MOD;
  }
}

int main() {
  int T, targ_a, targ_b;
  scanf("%d", &T);
  for(int cas = 1; cas <= T; cas++) {
    scanf("%d-%d", &targ_a, &targ_b);
    memset(stressfull, -1, sizeof(stressfull));
    memset(stress_free, -1, sizeof(stress_free));
    printf("Case #%d: %lld %lld\n",
           cas,
           stress_free_ways(1, 0, targ_a, targ_b),
           stressfull_ways(0, 0, targ_a, targ_b));
  }
  return 0;
}
