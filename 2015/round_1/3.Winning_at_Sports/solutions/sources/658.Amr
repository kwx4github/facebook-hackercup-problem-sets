#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))

using namespace std;

int DP[2004][2004][2], n, m;

int solve(int i,int j,bool kind)
{
    if(i == n && kind) return 1;
    if(i == n) return 0;
    int &temp = DP[i][j][kind];
    if(temp != -1) return temp;
    temp = 0;
    if(kind)
    {
        if(i > j + 1 && j != m) temp = solve(i, j + 1, 1);
        temp = (temp + solve(i + 1, j, 1)) % mod;
        return temp;
    }
    if(j == m) return temp = solve(i+1, j, 1);
    if(i < j) temp = solve(i + 1, j, 0);
    return temp = (temp + solve(i, j + 1, 0)) % mod;
}

int main()
{
    //ios_base::sync_with_stdio(0);
    freopen("winning_at_sports.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    int t;
    cin >> t;
    int tt = 1;
    while(t--)
    {
        scanf("%d-%d",&n,&m);
        setdp(DP);
        //cout << "Case #" << tt++ << ": ";
        printf("Case #%d: %d %d\n",tt++, solve(1, 0, 1), solve(0, min(1, m), 0));
    }
    return 0;
}
