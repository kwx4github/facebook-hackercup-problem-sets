package round1;


import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class Sports {
	
	static final String INPUT = "winning_at_sports.txt";
	static final String OUTPUT = "winning_at_sports_output.txt";

	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));
	static StringTokenizer st = new StringTokenizer("");

	public static String next() {
		try	{
		while (!st.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			st = new StringTokenizer(s, " \n\r\t-");
		}
		return st.nextToken();
		}	catch(Exception e)	{
			return	null;
		}
	}

	public static void main(String[] args) throws FileNotFoundException {

		
		br = new BufferedReader( new InputStreamReader(new FileInputStream(INPUT)) );
		out = new PrintWriter( new FileOutputStream(OUTPUT) );
		
		
		int CASES = Integer.parseInt( next() );
		for (int cc = 1; cc <= CASES; cc++)	{
			totalA = Integer.parseInt( next() );
			totalB = Integer.parseInt( next() );
			
			
			mem = new int [totalA + 1][totalB + 1];
			for (int [] a : mem)	Arrays.fill(a, -1);
			int x = stressfree(1, 0);

			for (int [] a : mem)	Arrays.fill(a, -1);
			int y = stressful(0, 0);
		
			out.println( "Case #" + cc + ": " + x + " " + y );
		}
		

		//
		out.flush();
		out.close();
	}
	final static int MOD = 1000000007;
	
	static int [][] mem;
	

	static int stressful(int a, int b)	{
		if	( a == totalA && b == totalB )
			return	1;
		
		if	( mem[a][b] != -1 )
			return	mem[a][b];
		
		long ans = 0;

		if	( b < totalB )
			ans += stressful(a, b + 1);

		if	( a < totalA && a + 1 <= b )
			ans += stressful(a + 1, b);

		else if	( b == totalB )
			ans += stressful(a + 1, b);
		
		
		return	mem[a][b] = (int)(ans % MOD);
	}
	
	static int stressfree(int a, int b)	{
		if	( a == totalA && b == totalB )
			return	1;
		
		if	( mem[a][b] != -1 )
			return	mem[a][b];
		long ans = 0;
		
		if	( a < totalA )
			ans += stressfree(a + 1, b);
		
		if	( b < totalB && b + 1 < a )
			ans += stressfree(a, b + 1);
		
		return	mem[a][b] = (int)(ans % MOD);
	}
	static int totalA, totalB;
}


