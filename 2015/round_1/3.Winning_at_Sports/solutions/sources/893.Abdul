#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue> 
#include <climits>
#include <cassert>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define pb push_back
#define mp make_pair
#define sz size()
#define ln length()
#define forr(i,a,b)                 for(int i=a;i<b;i++)
#define rep(i,n)                    forr(i,0,n) 
#define all(v)                      v.begin(),v.end()    
#define uniq(v)                     sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a)                      memset(a,0,sizeof a)
    
#define debug                       if(1)
#define debugoff                    if(0)    

#define print(x)                 cerr << x << " ";    
#define pn()                     cerr << endl;
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define MAX 100010
#define MOD 1000000007
#define endl '\n'
char str[110];
int mem[2010][2010];
int a,b;
int solve(int i,int j)
{
    if(i == a && j == b)    return 1;

    int& res = mem[i][j];
    if(res != -1)   return res;

    res = 0;
    if(i+1 > j && i+1 <= a)
        res = solve(i+1,j) % MOD;
    if(i > j+1 && j+1 <= b)
        res = (res + solve(i,j+1))%MOD;
    return res;
}

int solve2(int i,int j)
{
    if(i == a && j == b)    return 1;

    int& res = mem[i][j];
    if(res != -1)   return res;

    res = 0;

    if(j == b && i+1 <= a)
       return res = solve2(i+1,j)%MOD;
    if(i+1 <= j && i+1 <= a)
        res = (res + solve2(i+1,j)) % MOD;
    if(j+1 >= i && j+1 <= b)
        res = (res + solve2(i,j+1)) % MOD;

    return res;
}
int main()
{
    int t,n,tc,ans1,ans2;
    scanf("%d",&t);
    for(int tc=1;tc<=t;tc++)
    {
        scanf("%s",str);
        char *p = strtok(str,"-");
        a = atoi(p);
        p = strtok(NULL,"-");
        b = atoi(p);
        memset(mem,-1,sizeof mem);
        ans1 = solve(0,0);
        memset(mem,-1,sizeof mem);
        ans2 = solve2(0,0);
        cout<<"Case #"<<tc<<": "<<ans1<<" "<<ans2<<endl;
    }
    return 0; 
}

