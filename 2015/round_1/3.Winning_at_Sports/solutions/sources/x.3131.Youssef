#include<iostream>
#include<stdio.h>
#include<vector>
#include<map>
#include<string.h>
#include<algorithm>
#include<utility>
#include<cmath>
#include<set>
#include<string>
#include<queue>
using namespace std;
#define MOD 1000000007
int myPoints, hisPoints;
long long dp[2010][2010];
long long getNumberOfStressless(int me, int him){
	if(me == myPoints && him == hisPoints)
		return 1;
	if(dp[me][him] != -1)
		return dp[me][him];
	long long ret = 0;
	if(me < myPoints)
		ret = getNumberOfStressless(me + 1, him)%MOD;
	if(him + 1 < me)
		ret += getNumberOfStressless(me, him + 1)%MOD;
	return dp[me][him] = ret%MOD;
}
long long getNumberOfStressful(int me, int him){
	if(me == myPoints && him == hisPoints)
		return 1;
	if(dp[me][him] != -1)
		return dp[me][him];
	long long ret = 0;
	if(him < hisPoints)
		ret = getNumberOfStressful(me, him + 1)%MOD;
	if(him == hisPoints || me + 1 <= him)
		ret += getNumberOfStressful(me + 1, him)%MOD;
	return dp[me][him] = ret%MOD;
}
int main(){
	std::ios::sync_with_stdio(false);
	int t;char dummy;
	cin >> t;
	for(int z = 1; z <= t; ++ z){
		cin >> myPoints >> dummy >> hisPoints;
		memset(dp, -1, sizeof dp);
		cout << "Case #" << z << ": " << getNumberOfStressless(1, 0) << ' ';
		memset(dp, -1, sizeof dp);
		cout << getNumberOfStressful(0,1) << endl;
	}
	return 0;
}