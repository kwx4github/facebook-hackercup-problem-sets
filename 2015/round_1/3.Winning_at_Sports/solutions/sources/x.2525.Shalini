/* Code Jam Template */
#include <bits/stdc++.h>
using namespace std;
#define MOD 					1000000007
#define pb(x) 					push_back(x)
#define mp(x,y)                 make_pair(x,y)
#define FF 						first
#define SS 						second
#define s(n) 					scanf("%d",&n)
#define sl(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)
//special macro for reading a character of input
#define sc(n)                   {char temp[4]; ss(temp); n=temp[0];}
#define INF						(int)1e9
#define LINF					(long long)1e18
#define EPS						1e-9
/*
Use these macros when comparing variables of different data types.
For e.g. comparing int and long long will give error when used with std::max, use maX instead.
*/
#define maX(a,b)				((a)>(b)?(a):(b))
#define miN(a,b)				((a)<(b)?(a):(b))
#define abS(x)					((x)<0?-(x):(x))
typedef long long ll;
typedef unsigned long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<ll> vl;
typedef vector<PII> VII;
typedef vector<TRI> VT;

/*Main code begins now*/
int dp1[2004][2004],dp2[2004][2004];
void precompute() {
    /*
    Code that is common to all test cases and should be run before solving for any case, like Prime-NUmber Generation :)
    */
    int i ,j;
    for(i=1;i<2000;i++) {dp1[i][0]=1;dp2[0][i]=1;}
    for(i=2;i<=2000;i++)
    {
        for(j=1;j<i;j++)
        {
            dp1[i][j]=(dp1[i-1][j]+dp1[i][j-1])%MOD;
        }
    }
    for(i=1;i<=2000;i++)
    {
        for(j=i;j<=2000;j++)
        {
            dp2[i][j]=(dp2[i][j-1]+dp2[i-1][j])%MOD;
        }
    }

}
int a,b;

void read() {
    /*
    Read Global variables here
    */
    string s;
    cin>>s;
    int i ;
    a=0,b=0;
    for(i=0;i<s.size();i++)
    {
        if(s[i]=='-') break;
        a=a*10+(s[i]-'0');
    }
    i++;
    for(;i<s.size();i++)
    {
        b=b*10+(s[i]-'0');
    }

}

void solve() {

    /*
    Main logic goes here
    */


           cout<<dp1[a][b]<<' '<<dp2[b][b]<<endl;

}

int main(){
    freopen("A.txt", "r", stdin);
	freopen("output.in", "w", stdout);
	precompute();
	//cout<<primecount[1];
	//cout<<cat[2];
	int t;
	s(t);

	for(int T = 1; T <= t; T++) {
	    read();
	    printf("Case #%d: ",T);
        solve();
  	}
	return 0;
}
