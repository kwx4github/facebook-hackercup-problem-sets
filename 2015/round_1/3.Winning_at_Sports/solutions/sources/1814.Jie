//
//  round1_3.cpp
//  FHC
//
//  Created by jie zheng on 15/1/18.
//  Copyright (c) 2015å¹´ jie zheng. All rights reserved.
//

#include <stdio.h>
#include <iostream>
#include <queue>
#include <set>
#include <vector>
#include <math.h>

using namespace std;

#define MOD 1000000007

long long dp[4005][2005];

int main()
{
    //freopen("/Users/jiezheng/Downloads/winning_at_sports.txt", "r", stdin);
    //freopen("/Users/jiezheng/Dev/poj/winatsports.txt", "w", stdout);
    int T;
    cin>>T;
    
    for(int caseid = 1; caseid <= T; ++caseid)
    {
        long long stressfull = 0, stressfree = 0;
        string str;
        cin>>str;
        long long myscore = 0, opscore = 0;
        bool flag = true;
        memset(dp, 0, sizeof(dp));
        for(int i = 0; i < str.size(); ++i)
        {
            if(str[i] == '-')
            {
                flag = false;
                continue;
                
            }
            int num = str[i] - '0';
            if(flag)
            {
                myscore = myscore*10 + num;
            }
            else
            {
                opscore = opscore*10 + num;
            }
        }
        dp[0][0] = 1;
        int total = myscore + opscore;
        for(int i = 1; i <= total; ++i)
        {
            int up = min((long long)i, myscore);
            for(int j = i/2+1; j <= up; ++j)
            {
                dp[i][j] = (dp[i-1][j-1] + dp[i-1][j])%MOD;
            }
        }
        stressfree = dp[total][myscore];
        memset(dp, 0, sizeof(dp));
        dp[0][0] = 1;
        dp[1][1] = 1;
        for(int i = 2; i <= opscore*2; ++i)
        {
            int up = min((long long)i, opscore);
            for(int j = max(i/2, i-i/2); j <= up; ++j)
            {
                dp[i][j] = (dp[i-1][j-1] + dp[i-1][j])%MOD;
            }
        }
        stressfull = dp[opscore*2][opscore];
        cout<<"Case #"<<caseid<<": "<<stressfree<<" "<<stressfull<<endl;
    }
    return 0;
}
