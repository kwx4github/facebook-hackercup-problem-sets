#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <string>
#include <cstring>
#include <map>
#include <set>
#include <cassert>

#define forn(i, n) for (int i = 0; i < (int)n; ++i)

using namespace std;

const int MOD = 1000000007;
const int MAXN = 2020;
int dp1[MAXN][MAXN];
int dp2[MAXN][MAXN];

void add(int& a, int b) {
  a += b;
  if (a >= MOD) {
    a -= MOD;
  }
}

void precalc() {

}

void solve() {
  int p1, p2;
  scanf("%d-%d", &p1, &p2);
  for (int i = 0; i <= p1; ++i) {
    for (int j = 0; j <= p2; ++j) {
      dp1[i][j] = dp2[i][j] = 0;
    }
  }
  dp1[0][0] = 1;
  dp2[0][0] = 1;
  for (int i = 0; i <= p1; ++i) {
    for (int j = 0; j <= p2; ++j) {
      if (i > j) {
        if (i > 0) {
          add(dp1[i][j], dp1[i - 1][j]);
        }
        if (j > 0) {
          add(dp1[i][j], dp1[i][j - 1]);
        }
      }
      if (i <= j || j == p2) {
        if (i > 0) {
          add(dp2[i][j], dp2[i - 1][j]);
        }
        if (j > 0) {
          add(dp2[i][j], dp2[i][j - 1]);
        }        
      }
    }
  }
  cout << dp1[p1][p2] << ' ' << dp2[p1][p2] << endl;
}

int main() {
//  assert(freopen("input.txt", "r", stdin));
//  assert(freopen("output.txt", "w", stdout));  
  precalc();
  int tt;
  scanf("%d", &tt);
  for (int t = 1; t <= tt; ++t) {
    printf("Case #%d: ", t);
    solve();
  }
  return 0;
}