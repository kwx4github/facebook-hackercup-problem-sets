#pragma comment(linker, "/STACK:64777216")
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int mod = 1000000007;
int it;

int dp1[2003][2003];
int was1[2003][2003];
int n, m;

int r1(int p1, int p2)
{
	if ((p1 == n) && (p2 == m))
		return 1;
	if (was1[p1][p2] == it)
		return dp1[p1][p2];
	was1[p1][p2] = it;
	int res = 0;
	if ((p1 < n) && ((p1 + 1 <= p2) || (p2 == m)))
		res += r1(p1 + 1, p2);
	if ((p2 < m))
		res += r1(p1, p2 + 1);
	if (res >= mod)
		res -= mod;
	return dp1[p1][p2] = res;
}


int dp2[2003][2003];
int was2[2003][2003];
int r2(int p1, int p2)
{
	if ((p1 == n) && (p2 == m))
		return 1;
	if (was2[p1][p2] == it)
		return dp2[p1][p2];
	was2[p1][p2] = it;
	int res = 0;
	if ((p1 < n))
		res += r2(p1 + 1, p2);
	if ((p2 < m) && (p2 + 1<p1))
		res += r2(p1, p2 + 1);
	if (res >= mod)
		res -= mod;
	return dp2[p1][p2] = res;
}

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	double beg = clock();
#else
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif


	int t;
	cin >> t;
	for (it = 1; it <= t; ++it)
	{
		string s;
		cin >> s;
		FOR(i,0,s.size())
		if (s[i] == '-')
			s[i] = ' ';
		stringstream tmp;
		tmp << s;
		tmp >> n >> m;
		int res1 = r2(1,0);
		int res2 = r1(0, 0);
		printf("Case #%d: %d %d\n", it, res1, res2);
	}

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}