#include <vector>
#include <algorithm>
#include <fstream>
#include <stdlib.h> 
#include <iostream>
#include <stdio.h>
#include <math.h>
#include <stack>
#include <queue>
#include <string.h>
#include <iomanip>
#include <sstream>
#include <map>
#include <queue>
#include <set> 
#include <deque> 
#include <bitset> 

using namespace std;

long long maxnum=1000000007;
long long combi[4001][4001];
long long tiescore[2001]={0}, firsttie[4001]={0};

int main()
{
	freopen("winning_at_sports.txt","r",stdin);
    freopen("winning_at_sports_output.txt","w",stdout);
    int i, j, n, numCase, a, b;
	char c;
    for(i = 1; i <= 4000; i++){
            combi[i][0] = 1;
            combi[i][i]=1;
            for(j = 1; j <= i-1; j++)
                combi[i][j] = (combi[i-1][j-1] + combi[i-1][j]) % maxnum;
    }
    tiescore[0]=1;
    for(i=1; i<=2000; i++){
    	tiescore[i]=combi[2*i][i]-combi[2*i][i-1];
    	if(tiescore[i]<0){
    		tiescore[i]=tiescore[i]+maxnum;
    	}
    }
    firsttie[0]=1, firsttie[2]=1, firsttie[4]=1;
    for(i=3; i<=2000; i=i++){
    	firsttie[i*2]=(combi[2*i-2][i-1]-combi[2*i-2][i-2])%maxnum;
    	if(firsttie[i*2] < 0){
    		firsttie[i*2]=firsttie[i*2]+maxnum;
    	}
    }
	cin>>numCase;
	for(i=0; i<numCase; i++){
		cin>>a>>c>>b;
		long long ans=(combi[a+b][b]-combi[a+b-1][b-1])%maxnum;
		int k=2;
		while(k <= 2*b){
    			ans=(ans-firsttie[k]*combi[a+b-k][b-k/2])%maxnum;
    			k=k+2;
    	}
    	if(ans < 0){
    			ans=ans+maxnum;
    	}
		cout << "Case #" << (i+1) << ": "<<ans<<" "<<tiescore[b]<<endl;		
	}
	return 0;
}
