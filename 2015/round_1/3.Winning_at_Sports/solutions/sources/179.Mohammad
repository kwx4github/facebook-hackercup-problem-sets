/*
ID: m.nasir1
LANG: C++11
TASK: 
*/

#include <bits/stdc++.h>

using namespace std;

#define sz(x) ((int)(x).size())
#define deb(x) cout << #x << " : " << x << endl
#define debs(x ,y) cout << #x << " : " << x << " , " << #y << " : " << y << endl
#define debind(x , y) cout << #x << "[" << (y) << "] : " << (x)[(y)] << endl 
#define pB push_back
#define mP make_pair

#define rep(i , n) for(int (i) = 0 ; (i) < (n) ; ++(i))
#define repinc(i , n) for(int (i) = 1 ; (i) <= (n) ; ++(i))
#define per(i , n) for(int (i) = (n) - 1 ; (i) >= 0 ; --(i))
#define perinc(i , n) for(int (i) = (n) ; (i) >= 1 ; --(i))

typedef long long ll ;
typedef pair < int , int > pii ;
typedef vector < int > vi ;
typedef vector < pair < int , int > > vpii ;

#define X first
#define Y second

template <typename T>
ostream & operator <<(ostream & out , const vector < T >& v){
	int ss = sz(v);
	rep(i , ss)
		out << v[i] << " ";
	return out ;
}
template <typename T , typename TT > 
ostream & operator <<(ostream & out , const pair < T , TT >& p){
	out << p.first << " " << p.second ;
	return out ;
}
template<typename T , typename TT >
istream & operator >> (istream & in , pair < T , TT >& s){
   in >> s.first >> s.second ;
   return in ;
}
template<typename T>
bitset<sizeof(T)*8> BIN(T a){
	return bitset<sizeof(T)*8>(a);
}

long long mem[2002][2002];

const ll MOD = 1000*1000*1000 + 7; 

long long dp1(int ma , int oona){
	if(oona < 0 || ma < 0)
		return 0 ;
	if(ma <= oona)
		return 0 ;
	if(ma == 1 && oona == 0){
		return 1 ;
	}
	if(ma == 0)
		return 0 ;
	ll & ref = mem[ma][oona];
	if(ref != -1ll)
		return ref ;
	ref = dp1(ma -1 , oona) + dp1(ma , oona - 1);
	ref %= MOD ;
	return ref; 
}

ll dp2(int ma , int oona){
	if(oona < 0 || ma < 0)
		return 0 ;
	if(ma == 0 && oona == 0)
		return 1 ;
	if(ma > oona)
		return 0 ;
	ll & ref =mem[ma][oona];
	if(ref != -1ll)
		return ref ;
	ref = dp2(ma - 1 , oona)+ dp2(ma , oona -1 );
	ref %= MOD ;
	return ref ;
}

int INT(string s){
	stringstream ss(s);
	int ret ;
	ss >> ret ;
	return ret ;
}

int main(){
	int t ;
	cin >>t ;
	repinc(test , t){
		memset(mem , -1 , sizeof mem);
		int ma , oona ;
		string str ;
		cin >> str ;
		ma = INT(str.substr(0 , str.find('-')));
		oona = INT(str.substr(str.find('-') + 1));
		cout << "Case #" << test << ": " << dp1(ma , oona) << " ";
		memset(mem , -1 , sizeof mem);
		cout << dp2(oona , oona) << endl ;
	}
	return 0 ;
}