#include <bits/stdc++.h>

using namespace std;

#define BET(a,b,c) ((a)<=(b)&&(b)<(c))
#define FOR(i,n) for(int i=0,i##_end=(int(n));i<i##_end;i++)
#define SZ(x) (int)(x.size())
#define ALL(x) (x).begin(),(x).end()
#define MP make_pair
typedef long long ll_t;
typedef vector<int> VI;
typedef vector<VI> VVI;

const int mod =  1000000007;

int memo1[2222][2222];
int memo2[2222][2222];

int dfs1(int a, int b){
    if(a == 0 && b == 0) return 1;
    if(a <= b) return 0;
    int& ret = memo1[a][b];
    if(ret != -1) return ret;
    int val = 0;
    if(a) val += dfs1(a - 1, b);
    if(b) val += dfs1(a, b - 1);
    return ret = val % mod;
}

int dfs2(int a, int b){
    if(a == 0 && b == 0) return 1;
    if(a > b) return 0;
    int& ret = memo2[a][b];
    if(ret != -1) return ret;
    int val = 0;
    if(a) val += dfs2(a - 1, b);
    if(b) val += dfs2(a, b - 1);
    return ret = val % mod;
}

int main()
{
    int t;
    cin>>t;
    FOR(caseNo, t){
        int a, b;
        scanf("%d-%d", &a, &b);
        memset(memo1 , -1 , sizeof(memo1));
        memset(memo2 , -1 , sizeof(memo2));
        int stressFree = 0, stressful = 0;
        assert(a < 2222 && b < 2222);
        stressFree = dfs1(a, b);
        stressful = dfs2(b, b);
        printf("Case #%d: %d %d\n", caseNo+1, stressFree, stressful);
    }
    return 0;
}
