#include<iostream>
#include<vector>
#include<string>
#include<queue>
#include<fstream>
using namespace std;

#define N 2000
#define MOD 1000000007
int testn;
vector<vector<int> > sfree, sful;

int main()
{
	// stress-free dp
	sfree.resize(2001, vector<int>(2001, 0));
	for (int i = 0; i <= N; ++i)
		sfree[i][0] = 1;
	for (int i = 1; i <= N; ++i) {
		for (int j = 1; j < i; ++j) {
			sfree[i][j] = sfree[i][j-1];
			if (i-1 > j)
				sfree[i][j] = (sfree[i][j] + sfree[i-1][j]) % MOD;
		}
	}

	// stressful dp
	sful.resize(2001, vector<int>(2001, 0));
	for (int j = 0; j <= N; ++j)
		sful[0][j] = 1;
	for (int i = 1; i <= N; ++i) {
		for (int j = i; j <= N; ++j) {
			sful[i][j] = sful[i-1][j];
			if (i <= j-1)
				sful[i][j] = (sful[i][j] + sful[i][j-1]) % MOD;
		}
	}

	// test-case
	string s;
	ifstream in("winning_at_sports.txt");
	//ifstream in("input.txt");
	ofstream out("output.txt");
	in >> testn;
	for (int test = 1; test <= testn; ++test) {
		in >> s;
		int idx = s.find('-');
		int n = stoi(s.substr(0, idx));
		int m = stoi(s.substr(idx+1));
		out << "Case #" << test << ": " << sfree[n][m] << " " << sful[m][m] << endl;
	}
	in.close();
	out.close();
	return 0;
}