#include<bits/stdc++.h>
using namespace std;

long long dp[2][2001][2001];
long long mod = 1e9+7;

long long sfree(int i, int j){
	if(j == 0) return 1;
	if(j >= i) return 0;
	if(dp[0][i][j] == -1){
		dp[0][i][j] = ( sfree(i-1, j) + sfree(i, j-1) ) % mod;
	}
	return dp[0][i][j];
}

long long sfull(int i, int j){
	if(i == 0) return 1;
	if(i > j) return 0;
	if(dp[1][i][j] == -1){
		dp[1][i][j] = ( sfull(i-1, j) + sfull(i, j-1) ) % mod;
	}
	return dp[1][i][j];
}

int main(){
	memset(dp, -1, sizeof(dp));
	int T;
	cin>>T;
	for(int t=1; t<=T; t++){
		int A, B;
		char hypen;
		cin>>A>>hypen>>B;
		printf("Case #%d: %lld %lld\n", t, sfree(A, B), sfull(B, B)); 
	}
	return 0;
}
