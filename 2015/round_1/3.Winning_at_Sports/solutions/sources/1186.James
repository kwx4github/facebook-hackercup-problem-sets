import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.*;

public class Sports{
	private static String OUTFILE = "sportsout.txt";
	private static String INFILE = "sportsin.txt";
	private static final long MOD = 1000000007L;
	private static Long[][] stressfree;
	private static Long[][] stressful;
	private static BufferedReader br;
	private static BufferedWriter wr;
	public static void main(String args[]){
		try{
			br = new BufferedReader(new FileReader(INFILE));
			wr = new BufferedWriter(new FileWriter(OUTFILE));
		} catch (IOException e){
			System.out.println("IO Error");
		}
		int t = Integer.parseInt(next());
		String ans;
		int a, b;
		Long sfree, sful;
		fillArrays();
		for (int i = 0; i < t; i++){
			ans = "Case #"+(i+1)+": ";
			String[] n = next().split("-");
			a = Integer.parseInt(n[0]);
			b = Integer.parseInt(n[1]);
			// Do stressfree
			sfree = stressfree[a][b];

			sful = stressful[b][b];
			ans = ans + sfree + " "+sful;
			System.out.println(ans);
			write(ans);
		}
		try{
			wr.close();
		} catch (IOException e){
			System.out.println("Error Closing");
		}
	}

	private static StringTokenizer st;

	private static String next(){
		while (st == null || !st.hasMoreElements()){
			String str;
			try{
				str = br.readLine();
			} catch (IOException e){
				return null;
			}
			st = new StringTokenizer(str);
		}
		return st.nextToken();
	}

	private static void write(String str){
		try{
			wr.write(str, 0, str.length());
			wr.newLine();
		} catch (IOException e){
			System.out.println("Problem writing");
		}
	}

	private static void fillArrays(){
		stressfree = new Long[2001][2001];
		stressful = new Long[2001][2001];
		stressfree[1][0] = 1L;
		stressful[0][0] = 1L;
		stressful[0][1] = 1L;
		stressful[1][1] = 1L;
		for (int i = 2; i < 2001; i++){
			for (int j = 0; j < i; j++){
				if (j == i-1){
					stressfree[i][j] = stressfree[i][j-1];
				} else if (j == 0){
					stressfree[i][j] = stressfree[i-1][j];
				} else {
					stressfree[i][j] = (stressfree[i][j-1] + stressfree[i-1][j]) % MOD;
				}
			}
		}
		for (int i = 2; i < 2001; i++){
			for (int j = 0; j <= i; j++){
				if (j == i){
					stressful[j][i] = stressful[j-1][i];
				} else if (j == 0){
					stressful[j][i] = stressful[j][i-1];
				} else {
					stressful[j][i] = (stressful[j][i-1]+stressful[j-1][i]) % MOD;
				}
			}
		}
	}
}