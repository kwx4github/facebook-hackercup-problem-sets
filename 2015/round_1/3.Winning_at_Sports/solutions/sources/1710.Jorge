#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int N = 2001;
const int Mod = 1000000007;


int dp[ N ][ N ];
int dp2[ N ][ N ];

int solve( int u , int v )
{
	if( u < 0  || v < 0 ) return 0;
	int &r = dp[ u ][ v ];
	if( r != -1 ) return r;
	if( u == 0 && v == 0 ) return r = 1;
	if( v >= u ) return r = 0;
	r = solve( u - 1 , v ) + solve( u , v-1 );
	if( r >= Mod ) r -= Mod;
	return r;
}

int solve2( int u , int v )
{
	if( u < 0  || v < 0 ) return 0;
	int &r = dp2[ u ][ v ];
	if( r != -1 ) return r;
	if( u == 0 && v == 0 ) return r = 1;
	if( u > v ) return r = 0;
	r = solve2( u - 1 , v ) + solve2( u , v - 1 );
	if( r >= Mod ) r -= Mod;
	return r;
}

int main()
{
	int T , u , v;
	scanf("%d",&T);
	memset( dp , -1 , sizeof dp );
	memset( dp2 , -1 , sizeof dp2 );
	for( int ts = 1; ts <= T; ts++ )
	{
		scanf("%d-%d",&u,&v);
		printf("Case #%d: %d %d\n",ts,solve(u,v),solve2(v,v));
	}
	return 0;
}