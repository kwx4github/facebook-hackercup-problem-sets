#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <cassert>
#include <cstring>
using namespace std;

const int mod = 1000000007;

int dyn_full[2015][2015];
int dyn_free[2015][2015];

#define getval(a, x, y) ((x >= 0 && y >= 0) ? a[x][y] : 0)

void solve() {
    int a, b;
    assert(scanf("%d-%d\n", &a, &b) == 2);
    memset(dyn_free, 0, sizeof(dyn_free));
    memset(dyn_full, 0, sizeof(dyn_full));
    dyn_free[0][0] = 1;
    dyn_full[0][0] = 1;
    for (int i = 0; i <= a; ++i) {
        for (int j = 0; j <= b; ++j) {
            if (i == 0 && j == 0) {
                continue;
            }
            
            if (i <= j) {
                dyn_free[i][j] = 0;
            } else {
                dyn_free[i][j] = getval(dyn_free, i - 1, j) + getval(dyn_free, i, j - 1);
            }
            
            if (i > j) {
                dyn_full[i][j] = 0;
            } else {
                dyn_full[i][j] = getval(dyn_full, i - 1, j) + getval(dyn_full, i, j - 1);
            }
            
            dyn_free[i][j] %= mod;
            dyn_full[i][j] %= mod;
        }
    }
    printf("%d %d", dyn_free[a][b], dyn_full[min(a - 1, b)][b]);
}

int main() {
    int t;
    assert(scanf("%d\n", &t) == 1);
    for (int i = 0; i < t; ++i) {
        printf("Case #%d: ", i + 1);
        solve();
        printf("\n");
    }
}
