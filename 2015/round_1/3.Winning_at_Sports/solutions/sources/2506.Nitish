#include<iostream>
#include <vector>
#include <math.h>
using namespace std;
#define M 1000000007

long digit_to_long(char a)
{
  long ret = a - '0';
  return ret;
}
void convert_to_long(const string &s,long &a,long &b)
{
  const long len = s.length();
  
  long i=len-1;
  while(s[i]!='-')
  {
    b = b + digit_to_long(s[i])*(pow(10,((len-1)-i)));
    i--;
  }
  i--;	
  for(long j=i;j>=0;j--)
  {
    a = a + digit_to_long(s[j])*(pow(10,(i-j))); 
  }
}
int main()
{
  long T;
  cin>>T;

  for(long l=0;l<T;l++)
  {
    long a=0,b=0;
    char c;
    cin>>a>>c>>b;
    {
   // cout<<a<<"\t"<<b<<endl;
    vector<vector<long > > vec;
    vector<long> temp_vec(a+1,1);
    temp_vec[0] = 0;
    vec.push_back(temp_vec);
    //cout<<"1"<<endl;
    for(long i=1;i<=b;i++)
    {
      vector<long> temp_vec(a+1,0);
      vec.push_back(temp_vec);
      for(long j=(i+1);j<=a;j++)
      {
	vec[i][j] = vec[i][j-1]%M + vec[i-1][j]%M ;
      }
    }
    //cout<<"2"<<endl;
    cout<<"Case #"<<(l+1)<<": "<<vec[b][a]%M<<" ";
      
    }
    {
      vector<vector<long > > vec;
    vector<long> temp_vec(b+1,1);
    if(b)
    temp_vec[0] = 0;
    else 
      temp_vec[0] = 1;
    vec.push_back(temp_vec);
    //cout<<"1"<<endl;
    for(long i=1;i<=b;i++)
    {
      vector<long> temp_vec(b+1,0);
      vec.push_back(temp_vec);
      for(long j=i;j<=b;j++)
      {
	vec[i][j] = vec[i][j-1]%M + vec[i-1][j]%M ;
      }
    }
    
      cout<<vec[b][b]%M<<endl;
      
      
    }
  }
  
  
  
  
  /*
  for(long i=0;i<T;i++)
  {
    long a=0,b=0;
    string s;
    cin>>s;
    convert_to_long(s,a,b);
    
    cout<<a<<"\t"<<b<<endl;
  }*/
  
  return 0;
}