#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <iostream>
#include <cmath>
#include <algorithm>

#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>

using namespace std;

typedef long long ll;

int next_int(string& s, int& p){
  int len = s.size();
  int ret = 0;
  while(p < len && !isdigit(s[p]))
    p++;
  while(p < len && isdigit(s[p]))
    ret = ret * 10 + s[p++] - '0';
  return ret;
}

#define MOD (1000000007)
int A, B;
int sfre[2048][2048];
int sful[2048][2048];

int stress_free(int a, int b){
  if(sfre[a][b] >= 0)
    return sfre[a][b];
  if(a == A && b == B)
    return 1;
  int ret = 0;
  if(a < A)
    ret += stress_free(a+1, b);
  if(b < B && a > b+1)
    ret += stress_free(a, b+1);
  if(ret >= MOD)
    ret %= MOD;
  return sfre[a][b] = ret;
}

int stress_ful(int a, int b){
  if(sful[a][b] >= 0)
    return sful[a][b];
  if(a == A && b == B)
    return 1;
  int ret = 0;
  if(a < A)
    ret += stress_ful(a+1, b);
  if(b < B && a <= b)
    ret += stress_ful(a, b+1);
  if(ret >= MOD)
    ret %= MOD;
  return sful[a][b] = ret;
}

int main(){
  cin.tie(0);
  ios_base::sync_with_stdio(false);

  string s;
  cin >> s;
  int p = 0;
  int T = next_int(s, p);
  for(int o = 1; o <= T; o++){
    cin >> s;
    p = 0;
    A = next_int(s, p);
    B = next_int(s, p);
    //printf("%d-%d\n", A, B);
    for(int i = 0; i <= A; i++)
      for(int j = 0; j <= B; j++)
        sfre[i][j] = sful[i][j] = -1;
    printf("Case #%d: %d %d\n", o, stress_free(1, 0), stress_ful(0, 1));
  }

  return 0;
}
