import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;

/**
 * @author Akram Gaballah Ahmed
 */

public class Winning_at_Sports {

	public static void main(String[] args) throws Exception {
		double sTime = System.currentTimeMillis();
		String dir = "C:\\a-akgaba\\practice\\";
		BufferedReader fin =new BufferedReader(new FileReader(dir +"winning_at_Sports.in"));
		PrintWriter fout = new PrintWriter(dir +"winning_at_Sports.out");
		
		int T = Integer.parseInt(fin.readLine());
		StringTokenizer st;
		
		int x,y, resultFree, resultFull;
		for (int itr = 1; itr <= T; itr++) {
			st = new StringTokenizer(fin.readLine(),"-");
			x = Integer.parseInt(st.nextToken());
			y = Integer.parseInt(st.nextToken());
			finalX = x;
			finalY = y;
			resultFree = stressFree(x,y);
			resultFull = stressFull(x,y);
			
			fout.println("Case #"+itr+": "+resultFree+" "+resultFull);
		}
		
		
		
		fout.close();
		fin.close();
		double eTime = System.currentTimeMillis();
		System.out.println((eTime - sTime)/1000);
	}

	static int finalX, finalY;
	private static int stressFull(int x, int y) {
		int result = 0;
		
		Map<Long, Integer> map = new HashMap<Long, Integer>();
		
		result = stressFull(x, y, map);
		
		return result;

	}
	
	private static int stressFull(int x, int y, Map<Long, Integer> map) {
		if(x ==0 && y ==1) return 1;
		if(y < 0 || x < 0|| (y != finalY && x > y )) return 0;
		

		long i,j, l;		
		i = x;
		j = y;
		l = (i<<32)|j;
		Integer result = map.get(l);
		if(result != null) return result;
		
		int lft = stressFull(x, y-1, map);
		int rit = stressFull(x-1, y, map);
		result = (lft + rit) % 1000000007;
		map.put(l, result);
		return result;
	}

	
	
	private static int stressFree(int x, int y) {
		int result = 0;
		
		Map<Long, Integer> map = new HashMap<Long, Integer>();
		
		result = stressFree(x, y, map);
		
		return result;
	}

	private static int stressFree(int x, int y, Map<Long, Integer> map) {

		if(x ==1 && y ==0) return 1;
		if(y < 0 || x < 0|| x <= y) return 0;
		

		long i,j, l;		
		i = x;
		j = y;
		l = (i<<32)|j;
		Integer result = map.get(l);
		if(result != null) return result;
		
		int lft = stressFree(x, y-1, map);
		int rit = stressFree(x-1, y, map);
		result = (lft + rit) % 1000000007;
		map.put(l, result);
		return result;
	}
}
