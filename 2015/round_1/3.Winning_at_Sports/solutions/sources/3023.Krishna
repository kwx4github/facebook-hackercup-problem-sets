/************************************************************/
// 	Author  : Krishna Vedulla
//	College : Army Institute of Technology, Pune
/************************************************************/

#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <limits.h>
#include <algorithm>
#include <math.h>
#include <map>
#include <bitset>
#include <set>
#include <fstream>
#include <string.h>


#define MAX 2001
#define MOD 1000000007
#define LL long long
#define ULL unsigned long long


#define FOR(i,a,b) for(int i=a; i<b; i++)
#define FOR_(i,a,b) for(int i=a-1; i>=b; i--)
#define NODE pair<int, int>
#define SQR(a) ((a)*(a))
#define VI vector<int>
#define MII map<int, int>

#define SI(n) scanf("%d", &n)
#define SS(r) scanf("%s", r)
#define PLI(n) printf("%lld\n", n)
#define PS(r) printf("%s\n", r)

using namespace std;

/*********************************************************************************/
// row = you, col = opposite player
LL dp[MAX][MAX][2];

void preProcess()
{
	// initialisation
	FOR(i,0,MAX)
		dp[0][i][0]=dp[0][i][1]=dp[i][0][0]=dp[i][0][1]=1;

	// for stress-free
	FOR(i,1,MAX)
		FOR(j,1,MAX)
		{
			if(i>j+1)	dp[i][j][0] = (dp[i-1][j][0] + dp[i][j-1][0])%MOD; 
			else dp[i][j][0] = dp[i][j-1][0];
		};

	// for stress-full
	FOR(i,1,MAX)
		FOR(j,1,MAX)
		{
			if(i<j)	dp[i][j][1] = (dp[i-1][j][1] + dp[i][j-1][1])%MOD;
			else dp[i][j][1] = dp[i-1][j][1];
		};
}

int main()
{
	char s[20];
	int t, a, b, ans;
	ifstream in; ofstream out;
	in.open("2three15-ip.txt");
	out.open("2three15-op.txt");
	preProcess();
	in >> t;
	FOR(j,1,t+1)
	{
		ans = 0;
		in>>s;
		// extract numbers
		a= 0;b=0;
		int i = 0; 
		while(s[i]!='-')
			a = 10*a+ s[i++]-'0';
		i++;
		while(s[i]!='\0')
			b= 10*b + s[i++]-'0';

		out << "Case #" << j << ": " << dp[a][b][0] << " " << dp[a][b][1] << endl;
	}
	in.close();
	out.close();
	return 0;
}