#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
void fastStream(){cin.tie(0);std::ios_base::sync_with_stdio(0);}

void print_case(int case_number){
  cout<<"Case #"<<case_number<<": ";
}

const int mod = 1000000000+7;

ll dp[4010][2010][2];
ll dfs(int pos,int my_score,int my_final_score,int op_final_score,bool is_stress){
  //cout<<pos<<" "<<my_score<<" "<<endl;
  if(dp[pos][my_score][is_stress]>=0)return dp[pos][my_score][is_stress];
  const int op_score = pos-my_score;
  ll res = 0;
  if(my_score>my_final_score)return 0;
  if(op_score>op_final_score)return 0;
  if(my_score==my_final_score && op_score == op_final_score)return 1;
  if(!(my_score==my_final_score||op_score==op_final_score)&&is_stress&&my_score>op_score)return 0;
  else if(!is_stress&&my_score<=op_score)return 0;
  
  res = (res + dfs(pos+1, my_score,my_final_score,op_final_score,is_stress))%mod;
  res = (res + dfs(pos+1, my_score+1,my_final_score,op_final_score,is_stress))%mod;
  
  return dp[pos][my_score][is_stress] = res;
}

int main(){

  fastStream();
  int T;
  cin>>T;
  for(int cs = 1; cs <= T; cs++){
    print_case(cs);
    int my_final_score,op_final_score;
    string str;
    cin>>str;
    for(int i=0;i<(int)str.size();i++){
      if(str[i]=='-'){
        my_final_score = atoi(str.substr(0,i).c_str());
        op_final_score = atoi(str.substr(i+1).c_str());
      }
    }
    
    memset(dp,-1,sizeof(dp));
    cout<<dfs(1,1,my_final_score,op_final_score,false)<<" ";
    if(op_final_score==0){
      cout<<1<<endl;
    }
    else{
      cout<<dfs(1,0,my_final_score,op_final_score,true)<<endl;
    }
  }
  
  return 0;
}
