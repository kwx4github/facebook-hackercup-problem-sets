#include <iostream>
#include <string>
#include <sstream>
#include <string.h>
using namespace std;
int myscore;
int oppscore;

int cacheA[3000][3000];
int cacheB[3000][3000];

int funcA(const int my,const int opp){
	if(my<0||opp<0)return 0;
	if(my == 0 && opp == 0)return 1;
	if(my==opp)return 0;
	int& ret = cacheA[my][opp];
	if(ret != -1){
		return ret;
	}
	return ret = (funcA(my-1,opp) + funcA(my,opp-1))%1000000007;
}

int funcB(int my,int opp){
	if(my<0||opp<0)return 0;
	if(my == 0 && opp == 0)return 1;
	if(my > opp)return 0;
	int& ret = cacheA[my][opp];
	if(ret != -1){
		return ret;
	}
	return ret = (funcB(my-1,opp) + funcB(my,opp-1))%1000000007;
}
int main(){
	int c;
	cin >> c;
	int count = 1;
	while(c--){
		string s;
		cin >>s;
		string s1;
		string s2;
		int index = 0;
		for(int i = 0 ; i< s.size();i++){
			index++;
			if(s[i] == '-'){
				break;
			}
			s1.push_back(s[i]);
		}
		istringstream ss(s1);
		ss >> myscore;
		for(int i = index ; i< s.size();i++){
			s2.push_back(s[i]);
		}
		istringstream ss2(s2);
		ss2 >> oppscore;
		memset(cacheA,-1,sizeof(cacheA));
		memset(cacheA,-1,sizeof(cacheB));
		cout << "Case #" << count << ": " <<funcA(myscore,oppscore)<<" "<< funcB(oppscore,oppscore) << endl;
		count++;
	}
}