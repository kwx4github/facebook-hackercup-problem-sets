#include <algorithm>
#include <iostream>
#include <memory.h>
#include <cstdio>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
using namespace std;
#define sz(s) int((s).size())
#define clr(a) memset(a,0,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define rep(i,n) for(int(i)=0; (i)<(n);++(i))
#define ru(i,a,b) for(int(i)=a;(i)<=(b);++(i))
#define eb emplace_back
#define pb push_back
#define ff first
#define ss second
typedef pair <int,int> pii;
typedef long long LL;
template <class T> inline T gcd(T a,T b){return (!b? a : gcd(b,a%b));}
template <class T> inline T ABS(T x){return ((x)>0?(x):(-(x)));}
const int N = 2000 + 10;
const int mod = 1000000007;

LL arr [N][N];
int main() {
  freopen ("in.txt", "r", stdin);
  freopen ("out.txt", "w", stdout);
  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; ++tc) {
    cout << "Case #" << tc << ": ";
    int n, m;
    scanf ("%d-%d", &n, &m);
    for (int i = 0; i <= n; ++i) {
      for (int j = 0; j <= m; ++j) {
        arr [i][j] = 0;
      }
    }
    arr [1][0] = 1;
    for (int i = 0; i <= n; ++i) {
      for (int j = 0; j <= m; ++j) {
        if (i > j) {
          if (i - 1 >= 0) {
            arr [i][j] += arr [i - 1][j];
            if (arr [i][j] >= mod) {
              arr [i][j] %= mod;
            }
          }
          if (j - 1 >= 0) {
            arr [i][j] += arr [i][j - 1];
            if (arr [i][j] >= mod) {
              arr [i][j] %= mod;
            }
          }
        }
      }
    }
    cout << arr [n][m] << ' ';
    for (int i = 0; i <= n; ++i) {
      for (int j = 0; j <= m; ++j) {
        arr [i][j] = 0;
      }
    }
    arr [0][1] = 1;
    for (int i = 0; i <= m; ++i) {
      for (int j = 0; j <= m; ++j) {
        if (i <= j) {
          if (i - 1 >= 0) {
            arr [i][j] += arr [i - 1][j];
            if (arr [i][j] >= mod) {
              arr [i][j] %= mod;
            }
          }
          if (j - 1 >= 0) {
            arr [i][j] += arr [i][j - 1];
            if (arr [i][j] >= mod) {
              arr [i][j] %= mod;
            }
          }
        }
      }
    }
    cout << arr [m][m] << '\n';
  }
}
