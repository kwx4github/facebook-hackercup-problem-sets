#include <bits/stdc++.h>

using namespace std;

#define sz(x) ((int) (x).size())

typedef long long ll;
typedef long double ld;

const int INF = 1000001000;
const ll INFL = 2000000000000001000;
int solve();


int main()
{
	srand(2317);
	cout.precision(10);
	cout.setf(ios::fixed);
	#ifdef LOCAL
	freopen("c.in", "r", stdin);
	#else
	#endif
	int tn = 1;
    cin >> tn;
	for (int i = 0; i < tn; ++i)
		solve();
	#ifdef LOCAL
	cerr << "Time: " << double(clock()) / CLOCKS_PER_SEC << '\n';
	#endif
}

int test = 1;

const int maxn = 3001;
const int mod = 1000000007;

int d[maxn][maxn];

void add(int &a, int b)
{
    a += b;
    if (a >= mod)
        a -= mod;
}

int solve()
{
    int a, b;
	scanf("%d-%d", &a, &b);
    assert(a < maxn && b < maxn);
    assert(a >= 0 && b >= 0);

    for (int i = 0; i <= a; ++i)
        for (int j = 0; j <= b; ++j)
            d[i][j] = 0;
    d[0][0] = 1;
    for (int i = 0; i <= a; ++i)
        for (int j = 0; j <= b; ++j)
        {
            if (i <= j)
                continue;
            if (i)
                add(d[i][j], d[i - 1][j]);
            if (j)
                add(d[i][j], d[i][j - 1]);
        }
    int res1 = d[a][b];
    for (int i = 0; i <= a; ++i)
        for (int j = 0; j <= b; ++j)
            d[i][j] = 0;
    d[0][0] = 1;
    for (int i = 0; i <= a; ++i)
        for (int j = 0; j <= b; ++j)
        {
            if (i > j && j < b)
                continue;
            if (i)
                add(d[i][j], d[i - 1][j]);
            if (j)
                add(d[i][j], d[i][j - 1]);
        }
    int res2 = d[a][b];
    cout << "Case #" << test++ << ": " << res1 << ' ' << res2 << '\n';
	return 0;
}
