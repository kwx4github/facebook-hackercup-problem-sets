#include <iostream>
#include <math.h>
#include <algorithm>
#include <string>
#include <stdio.h>
#include <map>
#include <set>
#include <memory.h>
#include <vector>
using namespace std;
long long l, r;
long long dp1[2015][2015];
long long dp2[2010][2015];
long long calc1(long long x, long long y)
{
	if (x < y || x > l || y > r || x == y)
		return 0;
	if (dp1[x][y] != -1)
		return dp1[x][y];
	long long left = calc1(x + 1, y);
	long long right = calc1(x, y + 1);
	if (x == l && y == r)
		return (dp1[x][y] = ((1 % 1000000007 + left % 1000000007 + right % 1000000007) % 1000000007));
	return (dp1[x][y] = ((left % 1000000007 + right % 1000000007) % 1000000007));
}

long long calc2(long long x, long long y)
{
	if ((x > y && y < r) || x > l || y > r)
		return 0;
	if (dp2[x][y] != -1)
		return dp2[x][y];
	long long left = calc2(x + 1, y);
	long long right = calc2(x, y + 1);
	if (x == l && y == r)
		return (dp2[x][y] = ((1 % 1000000007 + left % 1000000007 + right % 1000000007) % 1000000007));
	return (dp2[x][y] = ((left % 1000000007 + right % 1000000007) % 1000000007));
}

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout); 
	int t;
	cin >> t;
	for (int i = 1; i <= t; i++)
	{
		memset(dp1, -1, sizeof dp1);
		memset(dp2, -1, sizeof dp2);
		scanf("%lld-%lld", &l, &r);
		cout << "Case #" << i << ": " << calc1(1, 0) << " " << calc2(0, 0) << endl;
	}
	return 0;
}