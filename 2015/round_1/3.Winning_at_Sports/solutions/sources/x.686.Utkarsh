#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string>
#include <cstring>
#include <cassert>

using namespace std;

typedef long long ll;
typedef pair <int,int> pii;
typedef vector <int> vi;

#define rep(i, n) for(int i = 0; i < (n); ++i)
#define forn(i, a, b) for(int i = (a); i < (b); ++i)
#define ford(i, a, b) for(int i = (a); i >= (b); --i)
#define fore(i, a, b) forn(i, a, b + 1)

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define fill(a, v) memset(a, v, sizeof(a))
#define sz(a) ((int)a.size())

#define gl(x) cin >> x
#define gi(x) scanf("%d", &x)
#define pls(x) cout << x << " "
#define pln(x) cout << x << "\n"
#define pis(x) printf("%d ", x)
#define pin(x) printf("%d\n", x)
#define pnl printf("\n")
#define dbn cerr << "\n"
#define dbg(x) cerr << #x << " : " << x << " "
#define dbs(x) cerr << x << " "

#define foreach(c, it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)

#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()

#define MOD 1000000007

ll stress_free[2001][2001];
ll stress_full[2001][2001];

void construct() {
	fill(stress_free, -1);
	fill(stress_full, -1);

	stress_free[1][0] = 1;
	stress_full[1][0] = 0;

	fore(i,2, 2000) {
		rep(j, i) {
			if(j == 0) {
				stress_free[i][j] = 1;
				stress_full[i][j] = 0;
			}
			else if(i == (j + 1)) {
				stress_free[i][j] = stress_free[i][j-1];
				stress_full[i][j] = stress_free[i][j];
			}
			else {
				stress_free[i][j] = (stress_free[i][j-1] + stress_free[i-1][j]) % MOD;
				stress_full[i][j] = stress_full[i - 1][j];
			}
		}
	}
}

int main(int argc, char const *argv[])
{
	int T;
	gi(T);

	construct();
	fore(t, 1, T) {
		int my_score, his_score;
		scanf("%d%d", &my_score, &his_score);
		his_score = - his_score;
		printf("Case #%d: %lld %lld\n", t, stress_free[my_score][his_score], stress_full[my_score][his_score]);
	}

	return 0;
}