#include<iostream>
#include<vector>
using namespace std;

#define C(x,y) (2001 * (x) + (y))

typedef long long ll;

int main(){

	int T;
	cin >> T;
	for (int t = 1; t <= T; t++){

		int s1, s2;
		scanf_s("%i-%i", &s1, &s2);

		vector<ll> sfr(2001 * 2001);
		fill(sfr.begin(), sfr.end(), -1);
		vector<ll> sfu(2001 * 2001);
		fill(sfu.begin(), sfu.end(), -1);

		for (int i = 0; i <= 2000; i++){
			sfr[C(i, 0)] = 1;
			sfu[C(0, i)] = 1;
		}
		
		for (int ls = 0; ls <= s1; ls++){
			for (int rs = 0; rs <= s2; rs++){
				if (ls == 0 && rs == 0) continue;

				// stress free
				if (ls > rs && rs > 0){
					int ways = sfr[C(ls, rs - 1)];
					if (ls - 1 > rs && ls > 0)
						ways += sfr[C(ls - 1, rs)];
					sfr[C(ls, rs)] = ways % 1000000007;
				}

				// stress full
				if ((ls <= rs || rs == s2) && ls > 0){
					int ways = sfu[C(ls - 1, rs)];
					if (ls <= rs - 1 && rs > 0)
						ways += sfu[C(ls, rs - 1)];
					sfu[C(ls, rs)] = ways % 1000000007;
				}
			}
		}

		cout << "Case #" << t << ": " << sfr[C(s1, s2)] << " " << sfu[C(s1, s2)] << endl;
	}

	return 0;
}