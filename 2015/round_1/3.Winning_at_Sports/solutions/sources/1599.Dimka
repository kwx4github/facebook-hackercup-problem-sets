#include <algorithm>
#include <iterator>
#include <iostream>
#include <utility>
#include <string>
#include <vector>

using namespace std;

const int MOD = 1000000007;

int solve1(int a, int b)
{
  vector<vector<int> > dp(a + 1, vector<int>(b + 1));

  dp[0][0] = 1;

  for(int i = 1; i < a + 1; i++)
  {
    for(int j = 0; j < min(i - 1, b) + 1; j++)
    {
      if( j == 0 ) dp[i][j] = dp[i-1][j];
      else dp[i][j] = (1LL * dp[i - 1][j] + dp[i][j - 1]) % MOD;
    }
  }

  return dp[a][b];
}

int solve2(int a, int b)
{
  vector<vector<int> > dp(a + 1, vector<int>(b + 1));

  for(int j = 0; j < b + 1; j++)
    dp[0][j] = 1;

  for(int i = 1; i < a + 1; i++)
  {
    for(int j = 1; j < b + 1; j++)
    {
      if( i == j ) dp[i][j] = dp[i-1][j];
      else dp[i][j] = (1LL * dp[i-1][j] + dp[i][j-1]) % MOD;
    }
  }

  return dp[a][b];
}

int main()
{
  int t;

  cin >> t;

  int a = 0, b = 0;
  char garb;

  for(int test = 1; test <= t; test++)
  {
    cin >> a >> garb >> b;
    cout << "Case #" << test << ": " << solve1(a, b) << " " << solve2(b, b) << endl;
  }

	return 0;
}
