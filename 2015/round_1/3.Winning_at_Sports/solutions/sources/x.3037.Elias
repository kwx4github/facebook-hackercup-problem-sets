import resource, sys
resource.setrlimit(resource.RLIMIT_STACK, (2**29,-1))
sys.setrecursionlimit(10**6)
def f(m,n,d):
	if (m < 0 or n < 0 or d <=0):
		return 0
	if (m ==0 or n == 0):
		return 1
	if not (m,n,d) in memo:
		memo[(m,n,d)] = f(m-1,n,d+1) + f(m,n-1,d-1)
	return memo[(m,n,d)]

def g(m,n,d):
	if (m < 0 or n < 0 or d > 0):
		return 0
	if (m ==0 or n == 0):
		return 1
	if not (m,n,d) in memo2:
		memo2[(m,n,d)] = g(m-1,n,d+1) + g(m,n-1,d-1)
	return memo2[(m,n,d)]

for cases in range(input()):
	memo = {}
	memo2 = {}
	x = raw_input().split("-")
	m =int(x[0])
	n =int(x[1])
	sfr = f(m-1,n,1)
	sfu = g(m,n,0)
	print "Case #"+str(cases+1)+": "+str(sfr)+" "+str(sfu)

