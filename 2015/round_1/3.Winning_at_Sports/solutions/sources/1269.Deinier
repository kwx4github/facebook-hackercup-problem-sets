#include <map>
#include <set>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <cctype>
#include <cstdio>
#include <string>
#include <vector>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <numeric>
#include <sstream>
#include <utility>
#include <iostream>
#include <algorithm>

using namespace std;

typedef long long int ll;
typedef pair<int, int> par;
#define mp make_pair

#define MAXN 2001
#define MOD 1000000007

// Define Variables/
ll dp[MAXN][MAXN], i, j, c, k, n, m, l;
string cad;
// Define Variables

void UpdateNM()
{
	l = cad.size();
	n = m = 0;
	bool found = false;
	for (i = 0; i < l; i++)
	{
		if (cad[i] == '-')
		{
			found = true;
		}
		else if (!found)
		{
			m *= 10;
			m += cad[i] - '0';
		}
		else
		{
			n *= 10;
			n += cad[i] - '0';
		}
	}
}

int main()
{
	ios::sync_with_stdio(false);

	ifstream input("input.txt");
	ofstream output("output.txt");

	for (i = 0; i < MAXN; i++)
		dp[i][i] = 0;

	for (j = 0; j < MAXN; j++)
		dp[0][j] = 1;

	for (i = 1; i < MAXN; i++)
		for (j = i + 1; j < MAXN; j++)
			dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % MOD;

	input >> c;

	for (k = 1; k <= c; k++)
	{
		input >> cad;
		UpdateNM();
		output << "Case #" << k << ": " << dp[n][m] << " " << dp[n][n+1] << endl;
	}

	input.close();
	output.close();

	return 0;
}