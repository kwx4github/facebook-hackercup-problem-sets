#include "def.h"

#define SIZ 2000
#define MODULO 1000000007

//#define DEBUG
#define CASE 1

typedef struct
{
	I free1;
	I free2;
	I full1;
	I full2;
}NODE;

NODE data[SIZ+1][SIZ+1];

I stress_free(I p1, I p0, I l1, I l0) {
#ifdef DEBUG
	Pn(p1 << " " << p0 << " " << l1 << " " << l0);
#endif
	if (l1==0) return 1;
	else if (l0==0) return 1;
	else if ((p1==p0) || (p1==(p0+1))) {
		if(data[l1][l0].free1 == 0) {data[l1][l0].free1=stress_free(p1+1,p0,l1-1,l0)%MODULO;}
		return data[l1][l0].free1;
	} else {
		if(data[l1][l0].free2 == 0) {data[l1][l0].free2=(stress_free(p1,p0+1,l1,l0-1) + stress_free(p1+1,p0,l1-1,l0))%MODULO;}
		return data[l1][l0].free2;
	}
}


I stress_full(I p1, I p0, I l1, I l0) {
#ifdef DEBUG
	Pn(p1 << " " << p0 << " " << l1 << " " << l0);
#endif
	if (l1==0) return 1;
	else if (l0==0) return 1;
	else if(p1==p0) {
		if(data[l1][l0].full1 == 0) {data[l1][l0].full1=stress_full(p1,p0+1,l1,l0-1)%MODULO;}
		return data[l1][l0].full1;
	} else {
		if(data[l1][l0].full2 == 0) {data[l1][l0].full2=(stress_full(p1,p0+1,l1,l0-1) + stress_full(p1+1,p0,l1-1,l0))%MODULO;}
		return data[l1][l0].full2;
	}
}

I main() {
    I T;
    S(T);
    F(k,1,T+1) {
    memset (data,0,sz(data));
    	I a,b; char c;
		S(a); Sc(c); S(b); 
#ifdef DEBUG
		if (k==CASE)
#endif
		P("Case #" <<k<<": " << stress_free(0,0,a,b) << " " << stress_full(0,0,a,b) <<"\n");
		//Pn(stress_free(0,0,a,b));
    }
}