#include <bits/stdc++.h>

#define REP(i,n) for(int i=0;i<(int)(n);i++)
#define ALL(x) (x).begin(),(x).end()

using namespace std;

const int mod = 1000000007;

struct Mod {
  int num;
  Mod () : num(0) {;}
  Mod (int n) : num(n) {;}
  operator int() { return num; }
};

Mod operator+(Mod a, Mod b) { return Mod((a.num + b.num) % mod); }
Mod operator-(Mod a, Mod b) { return Mod((mod + a.num - b.num) % mod); }
Mod operator*(Mod a, Mod b) { return Mod(((long long)a.num * b.num) % mod); }
Mod operator+=(Mod &a, Mod b) { return a = a + b; }
Mod operator-=(Mod &a, Mod b) { return a = a - b; }

Mod dp1[2048][2048], dp2[2048][2048];

int main() {
  int T;
  cin >> T;
  REP(c,T) {
    int a, b;
    scanf("%d-%d", &a, &b);
    REP(i,2048) REP(j,2048) { dp1[i][j] = 0; dp2[i][j] = 0; }
    dp1[0][0] = 1; dp2[0][0] = 1;
    REP(i,a+1) REP(j,b+1) {
      if (j == 0 || j < i) { dp1[i+1][j] += dp1[i][j]; dp1[i][j+1] += dp1[i][j]; }
      if (i <= j || j == b) { dp2[i+1][j] += dp2[i][j]; dp2[i][j+1] += dp2[i][j]; }
    }
    printf("Case #%d: %d %d\n", c+1, dp1[a][b].num, dp2[a][b].num);
  }
  return 0;
}
