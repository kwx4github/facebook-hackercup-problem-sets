#include <iostream>
#include <fstream>
#include <string>
#include <cstdio>
#include <memory.h>
#include <vector>
#include <sstream>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <complex>

using namespace std;

#define REP(a,b) for (int a=0; a<(int)(b); ++a)
#define FOR(a,b,c) for (int a=(b); a<(int)(c); ++a)

const int MOD = 1000000007;

int m[2001][2001];
int m2[2001][2001];

int dp1(int home, int away) {
	if (away < 0 || home < 0) return 0;
	if (m[home][away] < 0) {
		if (home < 2 && away == 0) return m[home][away] = 1;
		if (home - away > 1) m[home][away] = (dp1(home - 1, away) + dp1(home, away - 1)) % MOD;
		else m[home][away] = dp1(home, away - 1);
	}

	return m[home][away];
}

int dp2(int home, int away) {
	if (away < 0 || home < 0) return 0;
	if (m2[home][away] < 0) {
		if (home < 2 && away == 0) return m2[home][away] = 1;
		if (home - away > 0) m2[home][away] = (dp2(home - 1, away) + dp2(home, away - 1)) % MOD;
		else m2[home][away] = dp2(home, away - 1);
	}

	return m2[home][away];
}


int main() {
	int t;
	int a, b;
	char dummy;

	memset(m, -1, sizeof(m));
	memset(m2, -1, sizeof(m2));
	cin >> t;
	REP(tc, t) {
		scanf("%d%c%d", &a, &dummy, &b);

		int res1 = dp1(a, b), res2 = 0;
		for (int i = 0; i <= b - 1; ++i) {
			res2 = (res2 + dp2(b - 1, i)) % MOD;
			//cerr << dp2(b - 1, i) << endl;
		}
		if (b < 2) res2 = 1;

		cout << "Case #" << tc + 1 << ": " << res1 << " " << res2 << endl;
	}

	return 0;
}