#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>

#include<iomanip>
#include<cstring>
#include<sstream>

#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;

#define PB push_back
#define MP make_pair
#define FF first
#define SS second

int tot;
int win,loss;
int ans=0;
long long dp[4001][4001];
long long go(int d,int open,int win1)
	{
	if(win1>win)
		return 0;
	if(d==tot)
		{
		if(win1==win)
		return 1;
		else
		return 0;
		}
	if(dp[d][open]!=-1)
		return dp[d][open];
	if(open<=1)
		{
		return (dp[d][open]=go(d+1,open+1,win1+1)%1000000007);
		}
	else
		{
		return (dp[d][open]=(go(d+1,open+1,win1+1) + go(d+1,open-1,win1))%1000000007);
		}
	}
long long fact[4001];

long long int inv(long long int x) {
long long int M=1000000007;
long long int a = 1, b = x;
while (b != 1) {
long long int c = M / b;
a *= c; a %= M;
b *= c; b %= M;
if (b > M/2) { a = M - a; b = M - b; }
}
return a%1000000007;
}
long long go1(int loss)
	{
	long long ans=fact[2*loss];
	ans=(ans*inv(fact[loss+1]))%1000000007;
	ans=(ans*inv(fact[loss]))%1000000007;
	return ans;
	}
int main()
{
freopen("sport.in","r",stdin);
freopen("sport.out","w",stdout);
int T;
scanf("%d",&T);
int i,j,k;
fact[0]=1;
for(i=1;i<4001;i++)
	{
	fact[i]=(fact[i-1]*i)%1000000007;
	}
for(int t=0;t<T;t++)
	{
	memset(dp,-1,sizeof(dp));
	printf("Case #%d: ",t+1);
	scanf("%d %d",&win,&loss);
	tot=win+loss;
	printf("%lld %lld\n",go(0,0,0),go1(loss));//%1000000007);
	}
return 0;
}
