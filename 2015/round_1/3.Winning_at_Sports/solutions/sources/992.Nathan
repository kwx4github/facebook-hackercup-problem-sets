import java.io.FileInputStream;
import java.io.PrintStream;
import java.util.Scanner;

public class One_2015_3
{

	/**
	 * @param args
	 */
	public static void main(String[] args) throws Exception
	{
		Scanner scanner = new Scanner(new FileInputStream("winning_at_sports.txt"));
		PrintStream out = new PrintStream("winning_at_sports.out");
		int nCases = scanner.nextInt();
		for (int z = 0; z < nCases; z++)
		{
			String[] scoreStrings = scanner.next().split("-");
			int[] finalScores = { Integer.parseInt(scoreStrings[0]), Integer.parseInt(scoreStrings[1]) };
			out.println("Case #" + (z + 1) + ": " + stressFree(finalScores) + " " + stressful(finalScores));
		}
		scanner.close();
		out.close();
	}

	static int stressFree(final int[] finalScores)
	{
		int[] counts = new int[1 << 22];
		counts[convert(1, 0)] = 1;
		for (int level = 2; level <= finalScores[0] + finalScores[1]; level++)
		{
			for (int a = Math.min(level, finalScores[0]); a > level - a; a--)
			{
				int b = level - a;
				int sum = 0;
				if (b - 1 >= 0)
					sum = (sum + counts[convert(a, b - 1)]) % 1000000007;
				if (a - 1 > b)
					sum = (sum + counts[convert(a - 1, b)]) % 1000000007;
				counts[convert(a, b)] = sum;
			}
		}

		return counts[convert(finalScores[0], finalScores[1])];
	}

	static int stressful(final int[] finalScores)
	{
		int[] counts = new int[1 << 22];
		counts[convert(0, 1)] = 1;
		for (int level = 2; level <= finalScores[0] + finalScores[1]; level++)
		{
			for (int a = level - Math.min(level, finalScores[1]); a <= level - a; a++)
			{
				int b = level - a;
				int sum = 0;
				if (a - 1 >= 0)
					sum = (sum + counts[convert(a - 1, b)]) % 1000000007;
				if (a <= b - 1)
					sum = (sum + counts[convert(a, b - 1)]) % 1000000007;
				counts[convert(a, b)] = sum;
			}
			if (level > 2 * finalScores[1]) //after tie
				counts[convert(level - finalScores[1], finalScores[1])] = counts[convert(level - finalScores[1] - 1, finalScores[1])];
		}

		return counts[convert(finalScores[0], finalScores[1])];
	}

	static int convert(int a, int b)
	{
		return (a << 11) + b;
	}
}