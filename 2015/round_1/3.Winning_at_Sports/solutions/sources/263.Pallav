#include<bits/stdc++.h>
using namespace std ;

#define FOR(i,a,b) for(int i= (int)a; i< (int)b; ++i)
#define REP(i,n) FOR(i,0,n)
#define fill(a, x) memset(a, x, sizeof(a))
#define all(c) c.begin(), c.end()

#define LL long long int 
#define PII pair<int,int> 
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define mod 1000000007

LL sFree[2010][2010][3];
LL sFull[2010][2010][3];

void stresFree() {
   fill(sFree, 0);

   REP(i, 2001) {
      REP(j, 2001) {
         if(i<=j) {

            sFree[i][j][0] = 0;
            sFree[i][j][1] = 0;
         } else if(j==0) {

            sFree[i][j][1] = 1;
            sFree[i][j][0] = 0;
         } else {

            sFree[i][j][1] += (sFree[i-1][j][0]);
            sFree[i][j][1] %= mod;
            sFree[i][j][1] += (sFree[i-1][j][1]);
            sFree[i][j][1] %= mod;

            sFree[i][j][0] += (sFree[i][j-1][0]);
            sFree[i][j][0] %= mod;
            sFree[i][j][0] += (sFree[i][j-1][1]);
            sFree[i][j][0] %= mod;
         }
      }
   }
}

void stresFull() {
   fill(sFull, 0);
   REP(i, 2001) {
      REP(j, 2001) {
         if(i<j) {
            sFull[i][j][0] = 0;
            sFull[i][j][1] = 0;
         } else if(j==0) {

            sFull[i][j][1] = 1;
            sFull[i][j][0] = 0;
         } else {

            sFull[i][j][1] += (sFull[i-1][j][0]);
            sFull[i][j][1] %= mod;
            sFull[i][j][1] += (sFull[i-1][j][1]);
            sFull[i][j][1] %= mod;

            sFull[i][j][0] += (sFull[i][j-1][0]);
            sFull[i][j][0] %= mod;
            sFull[i][j][0] += (sFull[i][j-1][1]);
            sFull[i][j][0] %= mod;
         }
      }
   }
}

int main()
{
   stresFree();
   stresFull();

   int T; scanf("%d",&T);
   int test=1;

   while(T--) {
      getchar();
      string s; cin>>s;
      string a = "",b = "";
      int n = s.size();
      bool second = false;
      REP(i, n) {
         if(s[i] == '-') {
            second = true;
            continue;
         }
         if(second) {
            b += s[i];
         } else {
            a += s[i];
         }
      }
      LL A,B;
      stringstream(a) >> A;
      stringstream(b) >> B;

      cout << "Case #" << test << ": ";
      LL ansA = sFree[A][B][0] + sFree[A][B][1];
      ansA %= mod;

      LL ansB = 0;
      for(int j=0;j<=B;j++) {
         ansB += sFull[B][j][1];
         ansB %= mod;
      }

      cout << ansA << " " << ansB << endl;
      test++;
   }
   return 0;
}
