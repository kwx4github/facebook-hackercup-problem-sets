package running;

import org.psjava.algo.math.optimization.Memoization;
import org.psjava.algo.math.optimization.MemoizationFactory;
import org.psjava.algo.math.optimization.MemoizationFunction;
import org.psjava.ds.numbersystrem.LongNumberSystem;
import org.psjava.ds.numbersystrem.ModularNumberSystem;
import org.psjava.goods.GoodMemoizationFactory;
import org.psjava.util.Index2D;
import org.psjava.util.ZeroTo;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.util.Scanner;

/**
 * @title
 * @hint
 */
public class C implements Runnable {

	public static final MemoizationFactory MEMO_FACTORY = GoodMemoizationFactory.getInstance();
	public static final ModularNumberSystem<Long> NS = ModularNumberSystem.newInstance(LongNumberSystem.getInstance(), 1000000007L);

	@Override
	public void run() {
		Scanner in = new Scanner(System.in);
		for (int casei : ZeroTo.get(in.nextInt())) {
			String[] tokens = in.next().split("-");
			int score1 = Integer.parseInt(tokens[0]);
			int score2 = Integer.parseInt(tokens[1]);
			Index2D memoKey = new Index2D(score1, score2);
			System.out.println("Case #" + (casei + 1) + ": " + STRESS_FREE_MEMO.get(memoKey) + " " + STRESSFUL_MEMO.get(memoKey));
		}
	}

	public static final Memoization<Index2D, Long> STRESS_FREE_MEMO = MEMO_FACTORY.create(new MemoizationFunction<Index2D, Long>() {
		@Override
		public Long get(Index2D score, Memoization<Index2D, Long> memo) {
			int score1 = score.i1;
			int score2 = score.i2;
			if (score2 == 0)
				return 1L;
			long sum = memo.get(new Index2D(score1, score2 - 1));
			if (score1 - 1 > score2)
				sum = NS.add(sum, memo.get(new Index2D(score1 - 1, score2)));
			return sum;
		}
	});

	public static final Memoization<Index2D, Long> STRESSFUL_MEMO = MEMO_FACTORY.create(new MemoizationFunction<Index2D, Long>() {
		@Override
		public Long get(Index2D score, Memoization<Index2D, Long> memo) {
			int score1 = score.i1;
			int score2 = score.i2;
			if (score1 == 0)
				return 1L;
			long sum = memo.get(new Index2D(score1 - 1, score2));
			if (score1 <= score2 - 1)
				sum = NS.add(sum, memo.get(new Index2D(score1, score2 - 1)));
			return sum;
		}
	});

	public static void main(String[] args) throws Exception {
		System.setIn(new BufferedInputStream(new FileInputStream("winning_at_sports.txt")));
		new C().run();
	}

}
