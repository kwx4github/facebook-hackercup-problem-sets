import std.stdio, std.range, std.conv, std.algorithm, std.string;

const int MN = 2020;
const long MD = 10^^9+7;
long[][] dp1, dp2;
int n, m;
long fr(int i, int j) {
    if (i == n && j == m) return 1;
    if (i > n || j > m) return 0;
    if (i <= j) return 0;
    if (dp1[i][j] != -1) return dp1[i][j];
    long sm = fr(i+1, j)+fr(i, j+1);
    sm %= MD;
    dp1[i][j] = sm;
    return sm;
}

long fu(int i, int j) {
    if (i == n && j == m) return 1;
    if (i > j && j != m) return 0;
    if (i > n || j > m) return 0;
    if (dp2[i][j] != -1) return dp2[i][j];
    long sm = fu(i+1, j)+fu(i, j+1);
    sm %= MD;
    dp2[i][j] = sm;
    return sm;
}

int main() {
    dp1 = new long[][](MN, MN);
    dp2 = new long[][](MN, MN);
    int T = readln.strip.to!int;
    foreach (t; 0..T) {
        foreach (i; 0..MN) {
            dp1[i][] = -1;
            dp2[i][] = -1;
        }
        readf("%d-%d\n", &n, &m);
        writeln("Case #", t+1, ": ", fr(1, 0), " ", fu(0, 0));
    }
    return 0;
}