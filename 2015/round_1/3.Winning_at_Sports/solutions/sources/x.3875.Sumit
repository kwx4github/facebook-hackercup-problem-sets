/*
    xxx_joker/codersumit
*/
#include <bits/stdc++.h>
#define bitcnt(x) __builtin_popcountll(x)
#define sd(a) scanf("%d",&a)
#define sld(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define sc(a) scanf("%c",&a)
#define pd(a) printf("%d",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define space printf(" ");
#define nw printf("\n")
#define pb push_back
#define FOR(i,a,b) for(i=a;i<b;i++)
#define FORR(i,a,b) for(i=a;i>=b;i--)
#define all(v) v.begin(),v.end()
#define MAX 1005
#define mod 1000000007

typedef long long ll;
typedef unsigned long long ull;
using namespace std;
ll dp[4*MAX][2*MAX];
int first,second;
ll f(int index,int points,int total){
	if(index>(total+1) || points>first || ((index-1)-points)>second){
		dp[index][points]=0LL;
		return 0LL;
	}
	else if(index==(total+1) && points==first){
		dp[index][points]=1LL;
		return 1LL;
	}
	if(dp[index][points]!=-1)
		return dp[index][points];
	ll a,b;
	a=b=0;
	if(points<first && ((index)-(points+1))<(points+1))
		a=f(index+1,points+1,total);
	if(points<=first && (index-points)<points)
		b=f(index+1,points,total);
	if(a>=mod)
		a%=mod;
	if(b>=mod)
		b%=mod;
	a+=b;
	if(a>=mod)
		a%=mod;
	dp[index][points]=a;
	return a;
}
ll f1(int index,int points,int total){
	if(index>(1+total) || points>first || ((index-1)-points)>second){
		dp[index][points]=0LL;
		return 0LL;
	}
	else if(((index-1)-points)==second){
		dp[index][points]=1LL;
		return 1LL;
	}
	if(dp[index][points]!=-1)
		return dp[index][points];
	ll a,b;
	a=b=0;
	if(((index)-(points+1))<=second && ((index)-(points+1))>points)
		a=f1(index+1,points+1,total);
	if(((index)-points)<=second && ((index)-points)>points)
		b=f1(index+1,points,total);
	if(a>=mod)
		a%=mod;
	if(b>=mod)
		b%=mod;
	a+=b;
	if(a>=mod)
		a%=mod;
	dp[index][points]=a;
	return a;
}
int main(){//while(1){
	int test,i;
	sd(test);
	FOR(i,1,test+1){
		memset(dp,-1,sizeof(dp));
		scanf("%d-%d",&first,&second);
		printf("Case #%d: ",i);
		printf("%lld ",f(1,0,first+second));
		memset(dp,-1,sizeof(dp));
		printf("%lld\n",f1(1,0,first+second));
	}
    return 0;
}
