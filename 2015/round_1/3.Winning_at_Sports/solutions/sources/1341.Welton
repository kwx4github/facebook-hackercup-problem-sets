#include <bits/stdtr1c++.h>

using namespace std;

typedef long long int64; 
typedef unsigned long long uint64;

int a, b;

int64 dp[3000][3000];
int used[3000][3000], vis = 1;

int64 MOD = 1000000007LL;

int64 solveFreeStress( int lo, int hi ){
	if( lo > a || hi > b  || (lo <= hi && lo) ) return 0;
	if( lo == a && hi == b ) return 1;
	int64 &ans = dp[lo][hi];
	int &us = used[lo][hi];
	if( us == vis ) return ans;
	us = vis;
	ans = (solveFreeStress(lo+1,hi) + solveFreeStress(lo,hi+1)) % MOD;
	return ans; 
}

int64 solveStress( int lo, int hi ){
	if( lo > a || hi > b  ) return 0;
	if( lo == a && hi == b ) return 1;
	int64 &ans = dp[lo][hi];
	int &us = used[lo][hi];
	if( us == vis ) return ans;
	us = vis;
	ans = 0;
	if( lo == a ) ans = solveStress(lo,hi+1) % MOD;
	else if( hi == b ) ans = solveStress(lo+1,hi) % MOD;
	else {
		if( lo < hi ) ans = solveStress(lo+1,hi) % MOD;
		ans = (ans + solveStress(lo,hi+1)) % MOD;
	}
	return ans; 
}


int main(){
    ios::sync_with_stdio(false);
    int t, w = 1;
    char c;
    cin >> t;
    while( t-- ){
    	cin >> a >> c >> b;
    	cout << "Case #" << w++ << ": "<< solveFreeStress(0,0);
    	vis++;
    	cout  << " " << solveStress(0,0) << "\n";
    	vis++;
    }
    
    return 0;
}