def comb(n,r,mod):
	C=[[0 for i in xrange(r+1)] for j in xrange(n+1)]
	for i in xrange(n+1):
		for k in xrange(min(r+1,i+1)):
			if k==0 or k==i:
				C[i][k]=1
			else:
				C[i][k] = (C[i-1][k-1] + C[i-1][k])%mod
	return C

m=1000000007
C=comb(4010,4010,m)
def part1(p,q):
    global C,m
    a=C[p+q][q]
    return ((a*((p-q)%m)*(pow(p+q,m-2,m)))%m)

def part2(p,q):
    global C,m
    a=C[2*q][q]
    return ((a*(pow(q+1,m-2,m)))%m)
import sys
#f=open('input.txt','r')
#f1=open('output.txt','w')
#sys.stdin=f
#sys.stdout=f1
t=int(raw_input())
for test in xrange(t):
    inp=(raw_input().strip()).split('-')
    p=int(inp[0])
    q=int(inp[1])
    print "Case #"+str(test+1)+": "+str(part1(p,q))+" "+str(part2(p,q))
    
#f.close()
#f1.close()
