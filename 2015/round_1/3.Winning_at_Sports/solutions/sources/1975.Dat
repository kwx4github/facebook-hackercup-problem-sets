#include <bits/stdc++.h>
using namespace std;

const int maxN = 2000 + 5, MOD = 1000000007;

int f[maxN][maxN]; //how many stress-free win i-j
int fu[maxN][maxN]; //how many stressful lose/draw i-j

void init(){
    memset(f, 0, sizeof f);
    memset(fu, 0, sizeof fu);
    f[0][0] = 1;
    for (int j = 0; j < maxN; j++) fu[0][j] = 1;
    for (int i = 1; i < maxN; i++){
        for (int j = 0; j < i; j++){
            if (j > 0) f[i][j] = (f[i-1][j] + f[i][j-1])%MOD;
            else f[i][j] = f[i-1][j];
        }
        for (int j = i; j < maxN; j++){
            fu[i][j] = (fu[i-1][j] + fu[i][j-1])%MOD;
        }
    }
}
/*
int stressful(int a, int b){
    int sful = 0;
    for (int j = 0; j < b; j++)
        sful = (sful + f[b][j]) % MOD;
    return sful;
}
*/

int stressful(int a, int b){
    if (b == 0) return 1;
    int res = 0;
    for (int j = 0; j < b; j++) res = (res + fu[j][b-1])%MOD;
    return res;
}

int main(){
    freopen("C.in", "r", stdin);
    freopen("C.out", "w", stdout);
    init();
    int t; scanf("%d", &t);
    for (int i = 1; i <= t; i++){
        int a, b;
        scanf("%d-%d", &a, &b);
        printf("Case #%d: %d ", i, f[a][b]);
        printf("%d\n", stressful(a, b));
    }
    return 0;
}

