#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <iostream>
#include <utility>
#include <sstream>
#include <cmath>
#include <ctime>
#include <iostream>

#define clr(a) memset(a, 0, sizeof(a))
#define fill(a, b) memset(a, b, sizeof(a))

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef std::pair<int,int> pii;

#ifdef DBG1
    #define dbg(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)
#else
    #define dbg(...)
#endif

const int MAX = 2010;
//const int MAX = 20;
const int P = int(1e9) + 7;

int stressfree[MAX][MAX];
int stressfull0[MAX][MAX];
int stressfull[MAX][MAX];

void add(int & a, int b) {
    a += b;
    if (a >= P) {
        a -= P;
    }
}

void init() {
    stressfree[0][0] = stressfull[0][0] = stressfull0[0][0] = 1;
    for (int sum = 1; sum <= 2 * MAX; ++sum) {
        for (int i = 0, j = sum; i <= sum; ++i, --j) {
            if (i >= MAX || j >= MAX) {
                continue;
            }

            if (i > j) {
                if (i > 0) {
                    add(stressfree[i][j], stressfree[i - 1][j]);
                }
                if (j > 0) {
                    add(stressfree[i][j], stressfree[i][j - 1]);
                }
            }

            if (i <= j) {
                if (i > 0) {
                    add(stressfull0[i][j], stressfull0[i - 1][j]);
                }
                if (j > 0) {
                    add(stressfull0[i][j], stressfull0[i][j - 1]);
                }
            }

            if (i > 0) {
                if (j > 0) {
                    add(stressfull[i][j], stressfull0[i - 1][j - 1]);
                }
                add(stressfull[i][j], stressfull[i - 1][j]);
            }

//            dbg("i = %d, j = %d, stressfree = %d, stressfull0 = %d, stressfull = %d\n", i, j, stressfree[i][j], stressfull0[i][j], stressfull[i][j]);
        }
    }
}

void solve() {
    int a, b;
    scanf("%d-%d", &a, &b);
    printf("%d %d\n", stressfree[a][b], stressfull[a][b]);
}

int main()
{
#ifdef DBG1
    freopen(".in", "r", stdin);
    freopen(".out", "w", stdout);
    freopen(".err", "w", stderr);
#endif

    init();

    int tt;
    scanf("%d", &tt);
    for (int ii = 1; ii <= tt; ++ii) {
        printf("Case #%d: ", ii);
        solve();
        fflush(stdout);
    }

    return 0;
}
