
// default code for competitive programming
// c2251393 ver 3.141 {{{

// Includes
#include <bits/stdc++.h>

// Defines
#define NAME(x) #x
#define SZ(c) (int)(c).size()
#define ALL(c) (c).begin(), (c).end()
#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define REP(i, s, e) for(int i = (s); i <= (e); i++)
#define REPD(i, s, e) for(int i = (s); i >= (e); i--)
#define DEBUG 1
#define fst first
#define snd second
 
using namespace std;

// Typedefs
typedef double real;
typedef long long ll;
typedef pair<ll, int> pli;
typedef tuple<ll, int> tli;
typedef pair<int, int> pii;
typedef tuple<int, int> tii;
typedef unsigned long long ull;

// Some common const.
const double EPS = -1e8;
const double Pi = acos(-1);
 
// Equal for double
bool inline equ(double a, double b)
{return fabs(a - b) < EPS;}

// }}}
// start ~~QAQ~~

const ll MOD = 1000000007ll;
const int MAXN = 2010;

ll dp1[MAXN][MAXN], dp2[MAXN][MAXN];

int main()
{
  dp1[1][0] = 1ll;
  REP(i, 2, MAXN-1)
  { 
    dp1[i][0] = 1ll;
    REP(j, 1, i-1)
      dp1[i][j] = (dp1[i-1][j] + dp1[i][j-1]) % MOD;
  }

  dp2[0][0] = 1ll;
  dp2[0][1] = 1ll, dp2[1][1] = 1ll;
  REP(j, 2, MAXN-1)
  {
    dp2[0][j] = 1ll;
    REP(i, 1, j)
      dp2[i][j] = ( dp2[i-1][j] + dp2[i][j-1] ) % MOD;
  }


  int tc;scanf("%d", &tc);
  REP(_, 1, tc)
  {printf("Case #%d: ", _);
    int win, lose;
    scanf("%d-%d", &win, &lose);
    ll ans = 0ll;
    if(lose > 0)
      REP(i, 0, lose-1) ans = (ans + dp2[i][lose-1]) % MOD;
    else if(lose == 0) ans = 1ll;
    printf("%lld %lld\n", dp1[win][lose], ans);
    //printf("%d %d\n", win, lose);
  }
}
