#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

using namespace std;
typedef long long ll;
const double eps = 1e-7;

const ll mod = 1e9+7;




int main()
{
	freopen("winning_at_sports.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int test;
	cin>>test;

	for(int t = 0; t< test; ++t)
	{
		int n,m;
		char c;
		cin>>n>>c>>m;
		int N = n+m;
		vector<vector<int > > dp(N+5, vector<int> (N+5,0));

		dp[0][1] = 1;
		for(int i =0; i<N; ++i)
		{
			for(int j =0; j<N; ++j)
			{
				if(dp[i][j])
				{
					if(j > 1)
					{
						dp[i+1][j-1]+= dp[i][j];
						if(dp[i+1][j-1] >= mod)
							dp[i+1][j-1] -= mod;
					}
					dp[i+1][j+1] += dp[i][j];

					if(dp[i+1][j+1] >= mod)
						dp[i+1][j+1]-=mod;
				}
			}
		}

		int ans1 = dp[N-1][n-m];
		//cout<<ans1<<endl;
		N = 2*m;
		dp.assign(N+5, vector<int> (N+5,0));
		dp[0][1] = 1;
		for(int i =0; i<N; ++i)
		{
			for(int j = 0; j<N; ++j)
			{
				if(dp[i][j])
				{
					if(j >= 1)
					{
						dp[i+1][j-1]+= dp[i][j];
						if(dp[i+1][j-1] >= mod)
							dp[i+1][j-1] -= mod;
					}
					dp[i+1][j+1] += dp[i][j];
					if(dp[i+1][j+1] >=mod)
						dp[i+1][j+1]-=mod;
				}
			}
		}

		int ans2 = dp[max(0,N-1)][0];
		cout<<"Case #"<<(t+1)<<": "<<ans1<<' '<<ans2<<"\n";

	}



    return 0;
}

/*
3 3
...
...
...


4 5
.BBBB
AAABB
ABBBB
A....

5 2
BA
AA
..
..
.d

*/
