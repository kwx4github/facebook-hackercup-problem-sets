#include <iostream>
#include <vector>
#include <stdio.h>
#include <map>
#include <memory.h>
using namespace std;
int a , b;
int dp[4001][2001];
const int mod = 1000000007;
int cnt(int cur, int rem)
{
	if (cur == a + b)
		return 1;
	int & ret = dp[cur][rem];
	if (ret != -1)
		return ret;
	ret = 0;
	if (cur - rem < b && (cur - rem + 1) < rem)
		ret = cnt(cur+1 , rem) % mod;
	if (rem < a)
		ret = (ret + cnt(cur+1, rem+1)) % mod;
	return ret;
}
int cnt2(int cur, int rem)
{
	if (cur == a + b)
		return 1;
	int & ret = dp[cur][rem];
	if (ret != -1)
		return ret;
	ret = 0;
	if (cur - rem < b)
		ret = cnt2(cur+1 , rem) % mod;
	if (rem < a && (cur - rem == b || rem + 1 <= (cur - rem)))
		ret = (ret + cnt2(cur+1, rem+1)) % mod;
	return ret;
}
int main()
{
	//freopen("test.in" , "rt", stdin);
	//freopen("output.out" , "wt", stdout);
	int t;
	scanf("%d" ,&t);
	for (int cas = 1 ; cas <= t ; cas ++)
	{
		memset(dp , -1 , sizeof dp);
		scanf("%d-%d" , &a, &b);
		int r1 = cnt(0 , 0);
		memset(dp , -1 , sizeof dp);
		int r2 = cnt2(0 , 0);
		printf("Case #%d: %d %d\n", cas , r1 , r2);
	}
	return 0;
}



