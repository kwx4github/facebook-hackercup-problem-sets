#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define ull unsigned long long
#define ld long double
#define pb push_back
#define popb pop_back

#define pii pair<int,int>
#define mp make_pair
#define X first
#define Y second
#define vi vector<int>
#define vii vector< pii >

#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)

#define maxN 2005
#define MOD 1000000007

int T;
int Free[maxN][maxN], full[maxN][maxN];
int sumfull[maxN][maxN];
string inp;

int main(){
  scanf("%d", &T);

  Free[0][0] = full[0][0] = sumfull[0][0] = 1;
  REP(i, maxN) REP(j, maxN) {
    if (i == 0 && j == 0) continue;
    Free[i][j] = 0;
    if (i > j) {
      if (i) Free[i][j] = (Free[i][j] + Free[i-1][j]) % MOD;
      if (j) Free[i][j] = (Free[i][j] + Free[i][j-1]) % MOD;
    }
    full[i][j] = 0;
    if (i <= j) {
      if (i) full[i][j] = (full[i][j] + full[i-1][j]) % MOD;
      if (j) full[i][j] = (full[i][j] + full[i][j-1]) % MOD;
    }
    if (i == 0) sumfull[i][j] = full[i][j];
    else {
      sumfull[i][j] = sumfull[i - 1][j];
      if (j > 0)
        sumfull[i][j] = (sumfull[i][j] + full[i][j - 1]) % MOD;
    }
//    if (i < 10 && j < 10) printf("(%d, %d): %d, %d; %d\n", i, j, Free[i][j], full[i][j], sumfull[i][j]);
  }

  FOR(t, 1, T) {
    int A, B;
    cin >> inp;
    auto pos = inp.find('-');

    A = atoi(string(inp.begin(), inp.begin() + pos).c_str());
    B = atoi(string(inp.begin() + pos + 1, inp.end()).c_str());
//    printf("%d %d\n", A, B);
    printf("Case #%d: %d %d\n", t, Free[A][B], sumfull[A][B]);
  }


  return 0;
}
