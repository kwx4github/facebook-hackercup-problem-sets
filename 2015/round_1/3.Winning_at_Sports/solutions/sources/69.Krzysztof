// Round 1A 2012
// Problem X.

#ifdef _MSC_VER
	#define _CRT_SECURE_NO_WARNINGS
#endif

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <string>
#include <iostream>
#include <set>
#include <map>
#include <list>
#include <queue>
#include <deque>
#include <vector>
#include <algorithm>
#include <iterator>
#include <cassert>

using namespace std;

typedef unsigned long long llong;
typedef long double ldouble;
typedef pair<int, int> pint;
typedef pair<double, double> pdouble;
typedef vector<int> vint;
typedef vint::iterator vit;
typedef vector<double> vdouble;
typedef vdouble::iterator vdit;
typedef vector<ldouble> vldouble;
typedef vector<string> vstring;
typedef vector<llong> vllong;
typedef vector<vint> graph;

#define FOR(v,p,k) for(int v=p;v<=k;++v)
#define FORD(v,p,k) for(int v=p;v>=k;--v)
#define REP(i,n) for(int i=0;i<(n);++i)
#ifdef _MSC_VER
	#define VAR(v,i) auto v=(i)
#else
	#define VAR(v,i) __typeof(i) v=(i)
#endif
#define FOREACH(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)
#define SIZE(x) (int)x.size()
#define ALL(c) c.begin(),c.end()

#define ADD_EDGE(g,u,v) g[u].push_back(v),g[v].push_back(u)

#define ST first
#define ND second
#define INF 1000000000
#define INFL 1000000000000000000LL
#define EPS 1e-5

#define MAX 1000000007U
#define LENGTH 2001

int main()
{
	int T;
	cin >> T;
	
	vector<unsigned> U[LENGTH], V[LENGTH];
	REP(i, LENGTH)
		U[i].resize(LENGTH), V[i].resize(LENGTH);
	REP(i, LENGTH) REP(j, LENGTH)
		U[i][j] = V[i][j] = 0;

	REP(i, LENGTH)
		U[i][0] = V[0][i] = 1;
	FOR(i, 1, LENGTH - 1)
		FOR(j, i, LENGTH - 1)
			U[j][i] = (U[j - 1][i] + U[j][i - 1]) % MAX;

	FOR(i, 1, LENGTH - 1)
		FOR(j, i, LENGTH - 1)
			V[i][j] = (V[i - 1][j] + V[i][j - 1]) % MAX;
	
	
	REP(t, T)
	{
		int A, B;
		scanf("%d-%d", &A, &B);
		printf("Case #%d: %u %u\n", t + 1, U[A - 1][B], V[B][B]);
	}
	
	return 0;
}
