#include <string>
#include <vector>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <sstream>
#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <queue>

using namespace std;

ifstream fi("c.txt");
ofstream fo("c.out");

int ntest;
int m, n;
int f[2001][2001];
int s[2001][2001];

const int MOD = 1e9 + 7;

int main() {
  fi >> ntest;
  for (int t = 1; t <= ntest; t++) {
    char c;
    fi >> m >> c >> n;
    for (int i = 0; i <= m; i ++)
      for (int j = 0; j <= n; j ++) {
	f[i][j] = s[i][j] = 0;
      }
    if (n == 0) {
      fo << "Case #" << t << ": " << 1 << " " << 0 << endl;
    }
    else {
      for (int i = 1; i <= m; i ++) {
	f[i][0] = 1;
      }
      for (int j = 1; j <= n; j ++) {
	s[0][j] = 1;
      }
      for (int i = 2; i <= m; i ++)
	for (int j = 1; j < i; j ++) {
	  if (j > 0) {
	    f[i][j] = f[i][j - 1];
	  }
	  if (i - 1 > j) {
	    f[i][j] = (f[i][j] + f[i - 1][j]) % MOD;
	  }
	}

      for (int i = 1; i <= n; i ++)
	for (int j = i; j <= n; j ++) {
	  if (i > 0) {
	    s[i][j] = s[i - 1][j];
	  }
	  if (j - 1 >= i) {
	    s[i][j] = (s[i][j] + s[i][j - 1]) % MOD;
	  }
	}

      fo << "Case #" << t << ": " << f[m][n] << " " << s[n][n] << endl;
    }
  }
  fi.close();
  fo.close();
  return 0;
}
