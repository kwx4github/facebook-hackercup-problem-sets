package fbhc15R1;

import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.io.*;
import java.math.BigInteger;
import java.util.*;

public class C
{
	String line;
	StringTokenizer inputParser;
	BufferedReader is;
	FileInputStream fstream;
	DataInputStream in;
	String FInput="";
	
	
	void openInput(String file)
	{

		if(file==null)is = new BufferedReader(new InputStreamReader(System.in));//stdin
		else
		{
			try{
		
				
			fstream = new FileInputStream(file);
			in = new DataInputStream(fstream);
			is = new BufferedReader(new InputStreamReader(in));
			}catch(Exception e)
			{
				System.err.println(e);
			}
		}

	}
	
	void readNextLine()
	{
		try {
			line = is.readLine();
			inputParser = new StringTokenizer(line, " -");
			//System.err.println("Input: " + line);
		} catch (IOException e) {
			System.err.println("Unexpected IO ERROR: " + e);
		}	
		
	}
	
	int NextInt()
	{
		String n = inputParser.nextToken();
		int val = Integer.parseInt(n);
		
		//System.out.println("I read this number: " + val);
		return val;
	}
	
	double NextDouble()
	{
		String n = inputParser.nextToken();
		double val = Double.parseDouble(n);
		
		//System.out.println("I read this number: " + val);
		return val;
	}
	
	String NextString()
	{
		String n = inputParser.nextToken();
		return n;
	}
	
	void closeInput()
	{
		try {
			is.close();
		} catch (IOException e) {
			System.err.println("Unexpected IO ERROR: " + e);
		}
			
	}
	
	public void readFInput()
	{
		for(;;)
		{
			try
			{
				readNextLine();
				FInput+=line+" ";
			}
			catch(Exception e)
			{
				break;
			}
		}
		inputParser = new StringTokenizer(FInput, " ");
	}
	
	long NextLong()
    {
            String n = inputParser.nextToken();
            
            long val = Long.parseLong(n);
            
            return val;
    }
	
	public static void main(String [] argv)
	{
		//String filePath="input.txt";
        String filePath=null;
        if(argv.length>0)filePath=argv[0];
		new C(filePath);
	}
	Random r = new Random();
	final long MOD = 1000000007L;
	
	public C(String inputFile)
	{
		openInput(inputFile);
		StringBuilder sb = new StringBuilder();
		readNextLine();
		int T=NextInt(), t=0;
		//int T=1000, t=0;
		//Random rand = new Random();
		long startT=System.currentTimeMillis();
		while(T-->0)
		{
			long prevT=System.currentTimeMillis();
			t++;
			readNextLine();
			int A=NextInt(), B=NextInt();
			//int A=2000-r.nextInt(10), B=A-1-r.nextInt(10);
			long resW = getResW(A, B);
			long resL = getResL(A, B);
			
			sb.append("Case #"+t+": "+resW+" "+resL);
			sb.append("\n");
			try {
			    Thread.sleep(100);
			} catch(InterruptedException ex) {
			    Thread.currentThread().interrupt();
			}
			//System.err.println(System.currentTimeMillis() - prevT);
		}
		
    	System.out.print(sb);
    	//System.err.println("MAXT="+maxt);
		closeInput();			
	}

	private long getResW(int a, int b) {
		long [] [] p = new long[a+1][b+1];
		
		p[0][0]=1;
		for(int i=0; i<=a; i++)
		{
			for(int j=0; j<=b; j++)
			{
				if(i<a&&i+1>j){p[i+1][j]+=p[i][j];p[i+1][j]%=MOD;}
				if(j<b&&i>j+1){p[i][j+1]+=p[i][j];p[i][j+1]%=MOD;}
			}
		}
		
		return p[a][b];
	}

	private long getResL(int a, int b) {
		long [] [] p = new long[a+1][b+1];
		
		p[0][0]=1;
		for(int i=0; i<=a; i++)
		{
			for(int j=0; j<=b; j++)
			{
				if(i<a&&(i+1<=j||j==b)){p[i+1][j]+=p[i][j];p[i+1][j]%=MOD;}
				if(j<b&&i<=j+1){p[i][j+1]+=p[i][j];p[i][j+1]%=MOD;}
			}
		}
		
		return p[a][b];
	}
	
}



