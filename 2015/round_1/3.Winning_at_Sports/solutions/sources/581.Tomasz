import Queue
import operator

MAX = 2000
A = [x[:] for x in [[0]*(MAX+1)]*(MAX+1)]
B = [x[:] for x in [[0]*(MAX+1)]*(MAX+1)]

def BFS(T,op):
    q = Queue.Queue()
    q.put((1,0))
    T[1][0] = 1
    while not q.empty():
        a,b = q.get()
        if op(a,b+1):
            if T[a][b+1] == 0:
                q.put((a,b+1))
            T[a][b+1] = (T[a][b+1] + T[a][b]) % 1000000007
        if a < MAX:
            if T[a+1][b] == 0:
                q.put((a+1,b))
            T[a+1][b] = (T[a+1][b] + T[a][b]) % 1000000007
            

BFS(A,operator.gt)
BFS(B,operator.ge)

t = int(raw_input())

for i in range(1,t+1):
    a,b = map(int, raw_input().split('-'))
    stressful =  1
    if b>0:
        stressful = B[b][b-1]
    print "Case #" + str(i) + ": " + str(A[a][b]) + " " + str(stressful)
