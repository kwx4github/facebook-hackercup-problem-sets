#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <cstring>

using namespace std;

#define For(i,a,b) for(int i=a;i<=b;i++)
#define For2(i,a,b) for(int i=a;i<b;i++)
#define Ford(i,a,b) for(int i=a;i>=b;i--)
#define OUT(x) {cerr << #x << " = " << x << endl;}
#define FOUT(x,a,b) {cerr << #x << " = "; For(_,a,b) cerr << x[_] << ' '; cerr << endl;}
#define FOUT2(x,a,b,c,d) {cerr << #x << " = " << endl; For(_,a,b){For(__,c,d) cerr << x[_][__] << " "; cerr << endl;}}
#define fi first
#define se second
#define mp make_pair
#define sz(x) (int)x.size()
#define BIT(s,i) ((s&(1<<i))>0)

typedef long long ll;

const int MAX = 2000;
const int MOD = 1000000007;

int t, a, b; // a > b
int f[MAX + 2][MAX + 2], g[MAX + 2][MAX + 2];

int main() {

#ifndef ONLINE_JUDGE
	freopen("winning_at_sports.txt", "r", stdin);
	freopen("C.out", "w", stdout);	
#endif

	// stress-free
	For(i, 1, MAX) 
		f[i][0] = 1;

	For(i, 2, MAX) {
		For(j, 1, i - 2) {
			f[i][j] = (1ll*f[i - 1][j] + f[i][j - 1]) % MOD;
		}
		f[i][i - 1] = f[i][i - 2];
	}

	// semi-stress-free
	For(i, 0, MAX) 
		g[i][0] = 1;

	For(i, 1, MAX) {
		For(j, 1, i - 1) {
			g[i][j] = (1ll*g[i - 1][j] + g[i][j - 1]) % MOD;
		}
		g[i][i] = g[i][i - 1];
	}


	scanf("%d", &t);
	For(z, 1, t) {
		printf("Case #%d: ", z);
		scanf("%d-%d", &a, &b);
		printf("%d %d\n", f[a][b], g[b][b]);
	}
}


