let mat = Array.make_matrix 2001 2001 0;;

for i = 0 to 2000 do
	mat.(i).(0) <- 1;
done;;

for i= 1 to 2000 do
	for j=1 to i-1 do
		mat.(i).(j) <- (mat.(i-1).(j) + mat.(i).(j-1)) mod 1000000007;
	done;
done;;

let mat' = Array.make_matrix 2001 2001 0;;

for i = 0 to 2000 do
	mat'.(i).(0) <- 1;
done;;

for i= 1 to 2000 do
	for j=1 to i do
		mat'.(i).(j) <- (mat'.(i-1).(j) + mat'.(i).(j-1)) mod 1000000007;
	done;
done;;


let score a b =
	mat.(a).(b),mat'.(b).(b);;


let final entree sortie =
	let ic = open_in entree and l = ref [] in
	let n= Scanf.fscanf ic "%d " (fun i -> i) in
		for i=1 to n do
			let (a,b) = Scanf.fscanf ic "%d-%d " (fun x y -> (x,y)) in
				l := (i,score a b)::(!l);
		done;
	let oc = open_out sortie in
	List.iter 
		(fun (i,(a,b)) -> Printf.fprintf oc "Case #%d: %d %d\n" i a b)
		(List.rev (!l));
		flush oc;;

final "/home/guilaub/Documents/mlk" "/home/guilaub/Documents/klm.txt";;
