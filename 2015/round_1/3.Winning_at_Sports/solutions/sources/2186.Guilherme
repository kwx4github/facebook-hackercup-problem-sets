#include <bits/stdc++.h>
 
using namespace std;
 
#define DEBUG_ON 0
 
#define INF 0x3f3f3f3f
#define FOR(i,a,b) for(int i=a; i<(b); ++i)
#define FOR0(i,b) for(int i=0; i<(b); ++i)
#define TRAV(it,c) for(__typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)
#define RTRAV(it,c) for(__typeof((c).rbegin()) it=(c).rbegin(); it!=(c).rend(); ++it)
#define DBG(x) if(DEBUG_ON) cout << #x << " == " << x << endl
#define nsync ios::sync_with_stdio(false)
 
typedef long long ll;
typedef int int_type;
typedef pair<int_type, int_type> pii;
typedef vector<int_type> vi;
typedef vector<vi> vii;

ll dpa[2100][2100];
ll dpb[2100][2100];

#define MOD 1000000007

ll solvea(int x, int y){
	if( x == 0 && y == 0 ) return 1;
	if( x <= y ) return 0;
	if( x<0 || y<0 ) return 0;
	
	if( dpa[x][y] != -1 ) return dpa[x][y];
	
	return dpa[x][y] = (solvea(x-1,y)%MOD + solvea(x,y-1)%MOD)%MOD;
}

ll solveb(int x, int y){
	if( x == 0 && y == 0 ) return 1;
	if( x > y ) return 0;
	if( x<0 || y<0 ) return 0;
	
	if( dpb[x][y] != -1 ) return dpb[x][y];
	
	return dpb[x][y] = (solveb(x-1,y)%MOD + solveb(x,y-1)%MOD)%MOD;
}

int main(){
	nsync;
	memset(dpa,-1,sizeof(dpa));
	memset(dpb,-1,sizeof(dpb));
		
	int tests; cin >> tests;
	
	FOR(t,1,tests+1){
		int x,y; char c;
		cin >> x >> c >> y;
		cout << "Case #" << t << ": " << solvea(x,y) << " " << solveb(y,y) << "\n";
	}
	
	return 0;
}
