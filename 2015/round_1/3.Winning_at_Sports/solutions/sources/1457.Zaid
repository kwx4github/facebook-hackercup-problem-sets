#!/usr/bin/env python

import os

def main():
    f = open('winning_at_sports.txt')

    line = f.readline()
    cases = int(line)

    of = open('winning_at_sports_output.txt', 'w')
    for i in range(cases):
        res = "Case #%d: %s" % (i+1, test_case(f))
        print(res)
        of.write(res + "\n")
    of.close()
    f.close()


dyn_stressfree = {}
dyn_stressful = {}

def test_case(ff):
    A,B = ff.readline().strip().split('-')
    A = int(A)
    B = int(B)

    def stressfree(a, b):
        stack = []
        stack.insert(0, [a, b])
        res = 0
        while len(stack) > 0:
            pair = stack[0]
            key = "%d,%d" % (pair[0], pair[1])

            if pair[0] == 1 and pair[1] == 0:
                stack.pop(0)
                dyn_stressfree[key] = res = 1
                continue

            clear = 0
            res = 0
            if pair[0] > pair[1] + 1:
                p0 = pair[0] - 1
                p1 = pair[1]
                k = "%d,%d" % (p0, p1)
                if k in dyn_stressfree:
                    res += dyn_stressfree[k]
                else:
                    clear += 1
                    stack.insert(0, [p0, p1])

            if pair[1] > 0:
                p0 = pair[0]
                p1 = pair[1] - 1
                k = "%d,%d" % (p0, p1)
                if k in dyn_stressfree:
                    res += dyn_stressfree[k]
                else:
                    clear += 1
                    stack.insert(0, [p0, p1])

            if clear == 0:
                res %= 1000000007
                dyn_stressfree[key] = res
                stack.pop(0)
        return res

    def stressful(a, b):
        stack = []
        stack.insert(0, [a, b])
        res = 0
        while len(stack) > 0:
            pair = stack[0]
            key = "%d,%d" % (pair[0], pair[1])
            if pair[0] == 0 and pair[1] == 0:
                stack.pop(0)
                dyn_stressful[key] = res = 1
                continue

            clear = 0
            res = 0
            if pair[0] > 0:
                p0 = pair[0] - 1
                p1 = pair[1]
                k = "%d,%d" % (p0, p1)
                if k in dyn_stressful:
                    res += dyn_stressful[k]
                else:
                    clear += 1
                    stack.insert(0, [p0, p1])

            if pair[1] > pair[0]:
                p0 = pair[0]
                p1 = pair[1] - 1
                k = "%d,%d" % (p0, p1)
                if k in dyn_stressful:
                    res += dyn_stressful[k]
                else:
                    clear += 1
                    stack.insert(0, [p0, p1])

            if clear == 0:
                res %= 1000000007
                dyn_stressful[key] = res
                stack.pop(0)
        return res

    free = stressfree(A, B)
    ful = stressful(A, B)
    return "%d %d" % (free, ful)

main()
