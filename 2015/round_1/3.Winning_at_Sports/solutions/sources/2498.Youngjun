#include <iostream>
#include <string>
#include <vector>
#include <unordered_set>

using namespace std;

int T;
int my, op;
int dp1[2001][2001];
int dp2[2001][2001];

int stress_free(int my, int op) {
	if(my == 0 && op == 0) return 1;
	if(my < 0 || op < 0) return 0;

	int& ret = dp1[my][op];
	if(ret != -1) return ret;

	ret = stress_free(my, op-1);
	if(my > op + 1) ret = (ret + stress_free(my - 1, op)) % 1000000007;
	if(my == 1 && op == 0) ret = (ret + stress_free(my - 1, op))  % 1000000007;

	return ret % 1000000007;
}

int stressful(int my, int op) {
	if(my == 0 && op == 0) return 1;
	if(my < 0 || op < 0) return 0;

	int& ret = dp2[my][op];
	if(ret != -1) return ret;
	
	ret = 0;

	if(my >= op) ret = stressful(my - 1, op);
	else ret = (stressful(my - 1, op) + stressful(my, op-1)) % 1000000007;

	return ret % 1000000007;
}

int main() {
	scanf("%d", &T);

	for(int kase = 1; kase <= T; kase++) {
		scanf("%d-%d", &my, &op);
		
		memset(dp1, -1, sizeof(dp1));
		memset(dp2, -1, sizeof(dp2));
		cout << "Case #" << kase << ": " << stress_free(my, op) << " " << stressful(my, op) << endl;
		cerr << "Case #" << kase << " was completed" << endl;
	}
}

