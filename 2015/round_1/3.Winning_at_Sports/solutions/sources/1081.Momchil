#include <iostream>
#include <stdio.h>
#include <string.h>

using namespace std;

typedef long long LL;

const int MAXN = 2048;
const LL MOD = 1000000007;

char s[64];
int n, m;
LL dp[MAXN][MAXN];

void read() {
	scanf("%s", &s);
	
	int pos = -1;
	for(int i = 0; i < strlen(s); i ++)
		if(s[i] == '-') {
			pos = i;
			break;
		}
	
	n = 0, m = 0;
	for(int i = 0; i < pos; i ++)
		n = n * 10 + (s[i] - '0');
	
	for(int i = pos + 1; i < strlen(s); i ++)
		m = m * 10 + (s[i] - '0');
}

LL go1(int a, int b) {
	LL &ret = dp[a][b];
	
	if(ret != -1)
		return ret;
	
	if(a > n || b > m || a <= b) {
		ret = 0;
		return ret;
	}
	
	if(a == n && b == m) {
		ret = 1;
		return ret;
	}
	
	ret = (go1(a + 1, b) + go1(a, b + 1)) % MOD;
	return ret;
}

LL go2(int a, int b) {
	LL &ret = dp[a][b];
	
	if(ret != -1)
		return ret;
	
	if(a > n || b > m) {
		ret = 0;
		return ret;
	}
	
	if(b == m) {
		ret = 1;
		return ret;
	}
	
	if(a > b) {
		ret = 0;
		return ret;
	}
	
	ret = (go2(a + 1, b) + go2(a, b + 1)) % MOD;
	return ret;
}

void solve() {
	memset(dp, -1, sizeof(dp));
	cout << go1(1, 0) << " ";
	
	memset(dp, -1, sizeof(dp));
	cout << go2(0, 0) << "\n";
}

int main()
{
	int T;
	scanf("%d\n", &T);
	for(int iter = 1; iter <= T; iter ++) {
		printf("Case #%d: ", iter);
		read();
		solve();
	}

    return 0;
}
