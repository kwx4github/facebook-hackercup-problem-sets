package outputs;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.StringTokenizer;

public class winningAtSports {
	static int n = 2003;
	static int[][] stressfree = new int[n][n];
	static int[][] stressfull = new int[n][n];
	public static void main (String args[]) throws Exception{
		preStressfull();
		preStressfree();
		BufferedReader br = new BufferedReader (new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine());
		for (int i = 0; i < t; i++) {
			String line = br.readLine();
			StringTokenizer st = new StringTokenizer(line, "-");
			int myPoints = Integer.parseInt(st.nextToken());
			int pointsOther = Integer.parseInt(st.nextToken());
			finalPointsOther = pointsOther;
			System.out.println("Case #" + (i + 1) + ": " + stressFree(myPoints, pointsOther) + " " + stressfull(myPoints, pointsOther));
		}
	}

	private static void preStressfree() {
		for (int i = 0; i < n; i++) {
			stressfree[i][i] = 0;
			stressfree[i][0] = 1;
		}
		stressfree[1][0] = 1;
		for (int i = 2; i < n; i++) {
			for (int j = 1; j < i; j++) {
				stressfree[i][j] = ((stressfree[i-1][j] + stressfree[i][j-1]) % 1000000007);
			}
		}
	}

	private static void preStressfull() {
		//for (int i = 0; i < )
	}
	private static int finalPointsOther;
	private static int stressfull(int myPoints, int pointsOther) {
		stressfull = new int[myPoints+1][myPoints + 1];
		for (int i = 0; i < stressfull.length; i++) {
			stressfull[i][0] = 1;
			stressfull[0][i] = 1;
		}
		for (int i = 0; i < stressfull.length; i++) {
			for (int j = 0; j < stressfull.length; j++){
				if (i > j && j < finalPointsOther) {
					stressfull[i][j] = 0;
				} 
			}
		}
		for (int i = 1; i < stressfull.length; i++) {
			for (int j = 1; j < stressfull.length; j++) {
				stressfull[i][j] = ((stressfull[i-1][j] + stressfull[i][j-1]) % 1000000007);
				if (i > j && j < finalPointsOther) {
					stressfull[i][j] = 0;
				}
			}
		}
		return stressfull[myPoints][pointsOther];
	}

	private static int stressFree(int myPoints, int pointsOther) {
		return stressfree[myPoints][pointsOther];
	}
}
