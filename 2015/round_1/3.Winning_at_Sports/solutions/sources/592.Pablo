#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <algorithm>
#include <vector>
#include <cmath>
#include <queue>
#include <set>
#include <map>
using namespace std;
#define dprint(v) cerr << #v"=" << v << endl
#define forr(i, a, b) for(int i=(a); i<(b); i++)
#define forn(i, n) forr(i, 0, n)
#define dforn(i, n) for(int i=(n)-1; i>=0; i--)
#define forall(it,v) for(typeof((v).begin()) it=(v).begin();it!=(v).end();++it)
#define sz(c) ((int)c.size())
#define zero(v) memset(v, 0, sizeof(v))
typedef long long ll;
#define ii pair<int, int>
#define mkp make_pair
#define fst first
#define snd second
#define pb push_back
#include <sstream>
#define M 1000000007
#define MAX 2010


ll dpw[MAX][MAX];
ll dpl[MAX][MAX];




int main() {
#ifndef ONLINE_JUDGE
	freopen("b.in", "r", stdin);
		freopen("c.out", "w", stdout);
#endif
	char c;
	int t,n,m;
	cin >> t;
	
	forn (i, MAX){
		dpw[i][0] = 1;
		dpl[i][0] = 0;
		dpw[0][i] = 0;
		dpl[0][i] = 1;
	}
	dpl[0][0] = 1;
	
	forr (i,1,MAX)
		forr (j,1, MAX){
			if (i > j)
				dpw[i][j] = (dpw[i][j-1] + dpw[i-1][j]) % M;
			else
				dpl[i][j] = (dpl[i][j-1] + dpl[i-1][j]) % M;
				
			}
	
	forn (i,t){
		cin >> n >> c >> m;

		cout << "Case #" << i+1 << ": " << dpw[n][m] << " " << dpl[m][m] << endl;
		}
		
		
  return 0;

}


