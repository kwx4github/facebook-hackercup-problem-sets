#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <stdio.h>
#include <iomanip>
#include <string>
using namespace std;

long long mod = 1000000007;
long long fact[5000];
long long inv_fact[5000];

long long exp_sq(long long a, int n) {
	long long p = 1;
	while (n) {
		if (n%2) p = (p*a) % mod;
		a = (a*a) % mod;
		n /= 2;
	}
	return p;
}

long long inverse(long long a) {
	return exp_sq(a, mod-2);
}

void fill_fact(){
	fact[0] =1;
	for (int i = 1; i < 5000; i++){
		fact[i] = (fact[i-1]*i) % mod;
	}
	inv_fact[4999] = inverse(fact[4999]);
	for (int i = 4998; i >= 0; i--) {
		inv_fact[i] = (inv_fact[i+1]*(i+1)) % mod;
	}
	return ;
}

long long choose(int a, int b) {
	long long ans = (fact[a] * inv_fact[b]) % mod;
	ans = (ans * inv_fact[a-b]) % mod;
	return ans;
}

long long ans_stressful(int a, int b) {
	long long ans = choose(2*b, b) * inverse(b+1) % mod;
	return ans;
	return (choose(2*b, b) * inverse(2*b+1)) % mod;
}

long long ans_stressfree(int a, int b) {
	long long ans = (choose(a+b-1, b) * (a-b)) % mod;
	ans = (ans * inverse(a)) % mod;
	return ans;
}

int main()
{
	fill_fact();
    int t;
	cin >> t;
	for (int _t = 1; _t <= t; _t++) {
		int a, b ;
		char c;
		cin >> a >>c >> b;
		cout << "Case #" << _t << ": " << ans_stressfree(a, b) << " " << ans_stressful(a, b) << endl;
	}
    return 0;
}
