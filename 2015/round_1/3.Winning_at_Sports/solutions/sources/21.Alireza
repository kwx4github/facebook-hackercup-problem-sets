// /\||/\||
//
//
//////////////////////
// Program: 
// Written By Alireza Farhadi (LGM)
//////////////////////
#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cctype>
#include <cassert>
#include <csignal>
#include <cmath>
#include <array>
#include <queue>
#include <stack>
#include <string>
#include <regex>
#include <set>
#include <map>
#include <tuple>
#include <list>
#include <utility>
#include <vector>
#include <bitset>
#include <deque>
#include <iomanip>
#include <complex>
#include <fstream>
#include <sstream>
#include <unordered_set>
#include <unordered_map>

using namespace std;
#ifdef _TEST
#define testdo(x) x
#else
#define testdo(x)
#endif
#define show(x) testdo(cerr<<((#x))<<" = "<<((x))<<" "<<endl)
#define bit(a,b) (((a)>>(b))&1)
#define get(x,i) (get<((i))>(((x))))
#define ALL(x) ((x)).begin(),((x)).end()
#define Mt make_tuple
#define gcd __gcd
#define endl '\n'
#define bcnt(x) ((__builtin_popcount(x)))
#define bcntll(x) ((__builtin_popcountll(x)))
#define sqr(x) ((((x))*((x))))
#define fx(x) fixed<<setprecision(x)
#define list _list

template<class T> inline void smn(T &a,const T &b){if(b<a) a=b;}
template<class T> inline void smx(T &a,const T &b){if(b>a) a=b;}

typedef long long ll;
typedef pair<int,int> pie;
typedef tuple<int,int,int> trip;
typedef complex<double> point;

const double eps=1e-8;

const int MN=2000+100,MOD=1000*1000*1000+7;

pie dp[MN][MN];
bool mark[MN][MN];
int t,a,b;
string inp;
pie fll(int na,int nb)
{
	if (na>a || nb>b) return {0,0};
	if (mark[na][nb]) return dp[na][nb];
	mark[na][nb]=1;
	pie & res=dp[na][nb];
	if (na==a && nb==b) return res={1,1};
	res={0,0};
	if ((!na && !nb) || na>nb)
	{
		res.first=fll(na+1,nb).first;
		res.first+=fll(na,nb+1).first;
		res.first%=MOD;
	}
	if ((!na && !nb) || na<=nb || nb==b)
	{
		res.second=fll(na+1,nb).second;
		res.second+=fll(na,nb+1).second;
		res.second%=MOD;
	}
	return res;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin>>t;
	for (int tc=1;tc<=t;tc++)
	{
		cin>>inp;
		inp[inp.find("-")]=' ';
		istringstream(inp)>>a>>b;
		memset(mark,0,sizeof(mark));
		cout<<"Case #"<<tc<<": "<<fll(0,0).first<<" "<<fll(0,0).second<<endl;
	}
	return 0;
}
