import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

public class C {
	static final long MOD = 1000000007;

	public static void main(String[] args) throws FileNotFoundException {
		Scanner sc = new Scanner(new File("c.txt"));

		int cas = sc.nextInt();
		sc.nextLine();
		for (int cs = 1; cs <= cas; cs++) {
			String[] nos = sc.next().split("-");
			int a = Integer.parseInt(nos[0]);
			int b = Integer.parseInt(nos[1]);

			long[][] dp = new long[a + 1][b + 1];

			for (long[] x : dp)
				Arrays.fill(x, -1);

			long[][] d = new long[a + 1][b + 1];

			for (long[] x : d)
				Arrays.fill(x, -1);

			System.out.println("Case #" + cs + ": " + stree_free(a, b, dp)
					+ " " + stressful(a, b, b, d));

		}

		sc.close();
	}

	private static long stressful(int a, int b, int final_b, long[][] dp) {
		if (a > b && b < final_b)
			return 0;
		if (a == 0 || b == 0)
			return 1;

		if (dp[a][b] != -1)
			return dp[a][b];
		long ans = (stressful(a - 1, b, final_b, dp) % MOD)
				+ (stressful(a, b - 1, final_b, dp) % MOD);
		ans = ans % MOD;
		return dp[a][b] = ans;
	}

	private static long stree_free(int a, int b, long[][] dp) {
		if (a <= b) {
			// System.out.println(a + ", " + b +" -> " + 0);
			return 0;
		}
		if (b == 0) {
			// System.out.println(a + ", " + b +" -> " + 1);

			return 1;
		}
		if (dp[a][b] != -1)
			return dp[a][b];

		long ans = (stree_free(a - 1, b, dp) % MOD)
				+ (stree_free(a, b - 1, dp) % MOD);
		ans = ans % MOD;
		// System.out.println(a + ", " + b +" -> " + ans);

		return dp[a][b] = ans;
	}
}
