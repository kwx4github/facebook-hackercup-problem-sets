#include<iostream>
#include<cmath>
#include<string>
#include<vector>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<sstream>

using namespace std;

int dpStress[2001][2001];
int dpNotStress[2001][2001]; 

int CountNotStress(int rem_my_score, int rem_opp_score)
{
	if (rem_my_score < 0 || rem_opp_score < 0)
		return 0;
	if (rem_opp_score == 0 && rem_my_score == 0)
		return dpNotStress[rem_my_score][rem_opp_score] = 1;
	if (dpNotStress[rem_my_score][rem_opp_score] != -1)
		return dpNotStress[rem_my_score][rem_opp_score];
	if (rem_my_score <= rem_opp_score)
		return  dpNotStress[rem_my_score][rem_opp_score] = 0;





	return dpNotStress[rem_my_score][rem_opp_score] = ((CountNotStress(rem_my_score - 1, rem_opp_score)) % 1000000007 +
		(CountNotStress(rem_my_score, rem_opp_score - 1) % 1000000007)) % 1000000007;
}
int main()
{
	//cout << CountStress(1000, 6, 0, 0);

	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	memset(dpStress, -1, sizeof(dpStress));
	memset(dpNotStress, -1, sizeof(dpNotStress));

	int t;
	cin >> t;
	for (int ii = 1; ii <= t; ii++)
	{
		string inp;
		stringstream ss;
		cin >> inp;
		ss << inp;
		int myscore, oppscore;
		char temp;
		ss >> myscore >> temp >> oppscore;
		cout << "Case #" << ii << ": " << CountNotStress(myscore, oppscore) << " " << CountNotStress(oppscore+1, oppscore) << endl;
	}



	return 0;
}