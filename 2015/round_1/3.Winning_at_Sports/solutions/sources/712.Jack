#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cassert>
#include <algorithm>
#include <limits>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <list>
#include <string>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int INF = numeric_limits<int>::max();

const int smax = 2002;
const ll M = 1000000007;
ll gt[smax][smax], ge[smax][smax];

int main(int argc,char* argv[])
{
	memset(gt, 0, sizeof(gt));
	gt[1][0] = 1;
	for(int i=2;i<smax;i++)
	{
		for(int j=0;j<i-1;j++)
			gt[i][j] = (gt[i][j-1] + gt[i-1][j]) % M;
		gt[i][i-1] = gt[i][i-2];
	}

	memset(ge, 0, sizeof(ge));
	ge[0][0] = 1;
	for(int i=1;i<smax;i++)
	{
		for(int j=0;j<i;j++)
			ge[i][j] = (ge[i][j-1] + ge[i-1][j]) % M;
		ge[i][i] = ge[i][i-1];
	}

	/*
	for(int i=0;i<10;i++)
	{
		for(int j=0;j<10;j++)
			printf("%4d ", gt[i][j]);
		printf("\n");
	}
	printf("\n");
	for(int i=0;i<10;i++)
	{
		for(int j=0;j<10;j++)
			printf("%4d ", ge[i][j]);
		printf("\n");
	}
	*/

	int num_test_cases;
	scanf("%d",&num_test_cases);
	for(int test_case=1; test_case<=num_test_cases; test_case++)
	{
		int a, b;
		scanf("%d-%d", &a, &b);
		printf("Case #%d: %d %d\n", test_case, gt[a][b], ge[b][b]);
	}
	return 0;
}
