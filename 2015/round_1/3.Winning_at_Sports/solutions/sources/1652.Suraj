#include <iostream>
#include <fstream>
#include <cstdio>
#include <math.h>
#include <vector>
#include <string.h>
#include <algorithm>
#include <climits>
#include <stack>
#include <queue>
#include <set>
#include<utility>
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a>b?b:a
#define MOD 1000000007

typedef long long int ll;
using namespace std;
ll win[2005][2005];
ll lose[2005][2005];

void sol(){
    memset(win,0ll,sizeof(win));

    for(int i = 1;i<2005;++i){
        win[i][0] = 1;
    }
    for(int i = 2;i<2005;i++){
        for(int j = 1;j<2005;++j){
            if(i>j)
            win[i][j] = win[i][j-1] + win[i-1][j];
            win[i][j] %= MOD;
        }
    }
}
ll solve(int i,int j,int a,int b){
    if(i == a && j == b){
        return 1;
    }
    if(i>j && j != b)
        return 0;
    ll res = 0;
    if(lose[i][j])
        return lose[i][j];
    if(j == b){
        res = solve(i+1,j,a,b);
        return res;
    }
       res = solve(i+1,j,a,b) + solve(i,j+1,a,b);
       lose[i][j] = res%MOD;

    //lose[i][j] = res;
    //cout<<i<<" "<<j<<endl;
    //return lose[i][j];
}
int main()
{
	ios_base::sync_with_stdio(0);
	int test;
	int  i = 0;
	string s;
	cin>>test;
	int qw = 0;
	sol();
	while(test--){
        qw++;
        cin>>s;
        int len = s.size();
        int a = 0,b = 0;
        for(i = 0;i<len;++i){
            if(s[i] == '-'){
                a /= 10;
                break;
            }
            a += (s[i] - '0');
            a*=10;
        }
        ++i;
        for(;i<len;++i){
            b+=(s[i] - '0');
            b*=10;
        }
        b/=10;
        memset(lose,0,sizeof(lose));
        cout<<"Case #"<<qw<<": "<<win[a][b]<<" "<<solve(0,0,a,b)<<endl;
	}
}
