#include <bits/stdc++.h>

using namespace std;

const int MOD = 1000000007;
const int MAX_N = 2010;
int dp[MAX_N][MAX_N];
int dp2[MAX_N][MAX_N];

int A, B;

void Input() {
  scanf("%d-%d", &A, &B);
}

int Add(int a, int b) {
  long long c = a + b;
  while (c >= MOD) c -= MOD;
  return c;
}

int Calc(int A, int B) {
  if (A < 0 || B < 0) return 0;
  if (A <= B) return 0;
  if (B == 0) return 1;
  if (dp[A][B] != -1) return dp[A][B];

  int res = 0;
  res = Add(res, Calc(A - 1, B));
  res = Add(res, Calc(A, B - 1));
  return dp[A][B] = res;
}

int Calc2(int A, int B) {
  if (A < 0 || B < 0) return 0;
  if (A == 0) return 1;
  if (dp2[A][B] != -1) return dp2[A][B];

  int res = 0;
  if (A < B) {
    res = Add(res, Calc2(A - 1, B));
    res = Add(res, Calc2(A, B - 1));
  } else {
    res = Add(res, Calc2(A - 1, B));
  }

  return dp2[A][B] = res;
}

void Solve() {
  memset(dp, -1, sizeof(dp));
  memset(dp2, -1, sizeof(dp2));
  cout << Calc(A, B) << " " << Calc2(A, B);
}

int main() {
  int T;
  cin >> T;
  for (int test_case = 1; test_case <= T; test_case++) {
    Input();
    printf("Case #%d: ", test_case);
    Solve();
    cout << "\n";
  }

  return 0;
}
