import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.*;

public class Main {

    public static void main(String[] args) throws FileNotFoundException {
        List<Score> scores = load();
        List<String> output = new ArrayList<>();

        for (Score score : scores)
            output.add(solve(score));

        save(output);
    }

    private static String solve(Score score) {
        return stressfree(score.us, score.them) + " " + stressful(score.them);
    }

    private static final Map<String, Integer> cache = new HashMap<>();

    private static int stressfree(int us, int them) {
        if (us <= them) return 0;
        if (them == 0) return 1;

        String score = us + "-" + them;
        if (cache.containsKey(score))
            return cache.get(score);

        int ways = stressfree(us, them - 1) + stressfree(us - 1, them);
        ways %= 1_000_000_007;

        cache.put(score, ways);
        return ways;
    }

    private static int stressful(int them) {
        if (them == 0) return 0;
        return stressfree(them + 1, them);
    }

    private static class Score {
        int us, them;

        Score(String score) {
            String[] split = score.split("-");
            this.us = Integer.parseInt(split[0]);
            this.them = Integer.parseInt(split[1]);
        }
    }

    private static List<Score> load() throws FileNotFoundException {
        List<Score> scores = new ArrayList<>();
        Scanner in = new Scanner(new File("input.txt"));

        int count = in.nextInt();
        in.nextLine(); // Skip EOL

        for (int i = 0; i < count; i++)
            scores.add(new Score(in.nextLine()));
        in.close();

        return scores;
    }

    private static void save(List<String> lines) throws FileNotFoundException {
        PrintWriter out = new PrintWriter(new File("output.txt"));
        for (int i = 0; i < lines.size(); i++)
            out.println("Case #" + (i + 1) + ": " + lines.get(i));
        out.close();
    }
}
