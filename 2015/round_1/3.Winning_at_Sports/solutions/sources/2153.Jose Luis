#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <string>
#include <iostream>

using namespace std;

#define INF 1000000007
#define LIM 1000000007
#define MAXA 2010
#define MAXB 2010

int pdFree[MAXA][MAXB];
int pdFull[MAXA][MAXB];
int bMax;

int buscaFree(int a, int b) {
    if (pdFree[a][b]!=-1) {
		return pdFree[a][b];
	}	
	if (a==0 && b==0) {
		return pdFree[a][b]=1;
	}
	pdFree[a][b]=0;
	if (a>0 && (a-1>b || b==0)) {
		pdFree[a][b]+=buscaFree(a-1, b);
		pdFree[a][b]%=LIM;
	}
	if (b>0) {
		pdFree[a][b]+=buscaFree(a, b-1);
		pdFree[a][b]%=LIM;
	}
	return pdFree[a][b];
}

int buscaFull(int a, int b) {
	if (pdFull[a][b]!=-1) {
		return pdFull[a][b];
	}
	if (a==0 && b==0) {
		return pdFull[a][b]=1;
	}
	pdFull[a][b]=0;
	if (a>0) {
		pdFull[a][b]+=buscaFull(a-1, b);
		pdFull[a][b]%=LIM;
	}
	if (b>0 && a<b) {
		pdFull[a][b]+=buscaFull(a, b-1);
		pdFull[a][b]%=LIM;
	}
	return pdFull[a][b];
}


int main() {
//	freopen("winning_at_sports.txt", "r", stdin);
//	freopen("winning_at_sports_saida.txt", "w", stdout);
    memset(pdFree, -1, sizeof(pdFree));
	memset(pdFull, -1, sizeof(pdFull));
    int t;
    scanf("%d", &t);
    int caso;
    for (caso=1; caso<=t; caso++) {
		int a, b;
		scanf("%d-%d", &a, &b);
		if (a<=b) {
			printf("Case #%d: %d %d\n", caso, 0, 0);
		}
		else {
			printf("Case #%d: %d %d\n", caso, buscaFree(a, b), buscaFull(a, b));
		}
		
	}
    return 0;
}
































