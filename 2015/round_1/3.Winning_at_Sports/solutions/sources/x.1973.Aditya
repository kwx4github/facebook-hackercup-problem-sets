#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <climits>
#include <vector>
#include <map>
#include <utility>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
const int MAX_SIZE = 5005;
const int MOD = 1000000007;

ll dp[2][MAX_SIZE];

int main(){
	ios_base::sync_with_stdio (false);

	int t, x, y, ans, tog;
	char c;

	cin >> t;
	for (int tc = 1; tc <= t; tc++){
		cin >> x >> c >> y;

		tog = 0;
		fill(dp[tog], dp[tog] + MAX_SIZE, 0);
		dp[0][1] = 1;
		for (int s = 2; s <= (x + y); s++){
			tog = 1 - tog;
			fill(dp[tog], dp[tog] + MAX_SIZE, 0);
			for (int i = s; i > s - i; i--){
				dp[tog][i] = (dp[1-tog][i] + dp[1-tog][i-1]) % MOD;
			}			
		}

		cout << "Case #" << tc << ": " << dp[tog][x] << " ";

		tog = 0;
		fill(dp[tog], dp[tog] + MAX_SIZE, 0);
		dp[0][1] = 1;
		for (int s = 2; s <= 2 * y; s++){
			tog = 1 - tog;
			fill(dp[tog], dp[tog] + MAX_SIZE, 0);
			for (int i = s; i >= (s - i); i--){
				dp[tog][i] = (dp[1-tog][i] + ((i == s - i) ? 0 : dp[1-tog][i-1])) % MOD;
			}			
		} 

		cout << dp[tog][y] << endl;
	}

	return  0;
}