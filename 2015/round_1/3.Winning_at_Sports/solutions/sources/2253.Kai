// Author: Kai Zhao

#include <iostream>


// Declaration
using std::cout;
using std::cin;
using std::endl;
using std::string;


// Defines
#define MAX_SIZE 2001
#define MOD 1000000007


// Global variables

int F[MAX_SIZE][MAX_SIZE]; // stress_free
int G[MAX_SIZE][MAX_SIZE]; // stress_ful


void Clear()
{
}

void InitF()
{
  for (int i = 1; i <= 2000; ++i)
  {
    F[i][0] = 1;
    
    for (int j = 1; j < i; ++j)
    {
      F[i][j] = (F[i][j - 1] + F[i - 1][j]) % MOD;
    }
  }
}

void InitG()
{
  for (int i = 0; i <= 2000; ++i)
  {
    G[0][i] = 1;
    G[i][0] = 1;
  }

  for (int i = 1; i <= 2000; ++i)
  {
    for (int j = 1; j <= 2000; ++j)
    {
      if (i < j)
      {
	G[i][j] = (G[i - 1][j] + G[i][j - 1]) % MOD;
      }
      else
      {
	G[i][j] = G[i - 1][j];
      }
    }
  }
}

int Run()
{
  InitF();
  InitG();
  
  return 0;
}


int main()
{
  int T;
  cin >> T;

  // T cases
  for (int i = 1; i <= T; ++i)
  {
    Clear();
    
    char c;
    int win, lose;
    cin >> win >> c >> lose;

    Run();
    
    cout << "Case #" << i << ": " << F[win][lose] << " " << G[win][lose] << endl;
  }
  
  return 0;
}
