package fhc2015.round1;

import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

/**
 * Created by dhamada on 15/01/18.
 */
public class Sports {

    static final long MOD = 1000000007;

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);

        int T = in.nextInt();
        for (int testCase = 1 ; testCase <= T ; testCase++) {
            String[] mo = in.next().split("-");
            int my = Integer.valueOf(mo[0]);
            int op = Integer.valueOf(mo[1]);
            out.println(String.format("Case #%d: %d %d", testCase, solveStressFree(my, op), solveStressful(my, op)));
        }
        out.flush();
    }


    private static long solveStressFree(int my, int op) {
        long[][] dp = new long[2010][2010];
        dp[1][0] = 1;
        for (int i = 0 ; i <= my ; i++) {
            for (int j = 0 ; j <= op ; j++) {
                if (i < my) {
                    dp[i+1][j] += dp[i][j];
                    dp[i+1][j] -= (dp[i+1][j] >= MOD) ? MOD : 0;
                }
                if (j < op && i > j+1) {
                    dp[i][j+1] += dp[i][j];
                    dp[i][j+1] -= (dp[i][j+1] >= MOD) ? MOD : 0;
                }
            }
        }
        return dp[my][op];
    }

    private static long solveStressful(int my, int op) {
        long[][] dp = new long[2010][2010];
        dp[0][0] = 1;
        for (int i = 0 ; i <= my ; i++) {
            for (int j = 0 ; j <= op ; j++) {
                if (i < my && (j == op || i+1 <= j)) {
                    dp[i+1][j] += dp[i][j];
                    dp[i+1][j] -= (dp[i+1][j] >= MOD) ? MOD : 0;
                }
                if (j < op) {
                    dp[i][j+1] += dp[i][j];
                    dp[i][j+1] -= (dp[i][j+1] >= MOD) ? MOD : 0;
                }
            }
        }
        return dp[my][op];
    }
}
