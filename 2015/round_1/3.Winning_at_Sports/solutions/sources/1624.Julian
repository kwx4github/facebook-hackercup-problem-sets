#include <iostream>
#include <vector>


using namespace std;

#define uint64_t uint 
const uint MOD = 1000000007;
const uint SIZE = 2002;

uint stress[SIZE][SIZE];
uint nostress[SIZE][SIZE];
uint getStress(int i, int j) {
	if (i >= 0 && j >= 0)
		return stress[i][j];
	return 0;
}
uint getNoStress(int i, int j) {
	if (i >= 0 && j >= 0)
		return nostress[i][j];
	return 0;
}
void init() {
	for (int i = 0; i < SIZE; i++) {
		for (int j = 0; j <SIZE; j++) {
			if (i == 0 && j == 0) {
				stress[i][j] = 1;
				nostress[i][j] = 1;
			} else if (i > j) { // Ahead
				stress[i][j] = 0;	
				nostress[i][j] = (getNoStress(i-1,j) + getNoStress(i,j-1)) % MOD;
			} else { // Equal or behind
				stress[i][j] = (getStress(i-1,j) + getStress(i,j-1)) % MOD;
				nostress[i][j] = 0;
			}
		}
	}
}
int T,A,B;
int main() {
	init();
	cin>>T;
	for (int t = 1; t <= T; t++) {
		char c;
		cin>>A>>c>>B;
		uint resnos = nostress[A][B];
		uint ress = stress[B][B];
		cout<<"Case #"<<t<<": "<<resnos<<" "<<ress<<endl;
	}	

	return 0;
}
