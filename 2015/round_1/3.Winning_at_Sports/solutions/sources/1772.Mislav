#include <cstdio>
#include <iostream>
#include <cstring>

using namespace std;

const int MaxN = 2010;
const int Mod = 1e9 + 7;

int N, A, B, dp[MaxN][MaxN], dp2[MaxN][MaxN];

int f(int a, int b) {
  if (a <= b) return 0;
  if (a == A && b == B) return 1;
  if (dp[a][b] != -1) return dp[a][b];
  
  int ret = 0;
  if (a + 1 <= A)
    ret = (ret + f(a + 1, b)) % Mod;
  if (b + 1 <= B)
    ret = (ret + f(a, b + 1)) % Mod;

  return dp[a][b] = ret;
}

int g(int a, int b) {
  if (a > b && b != B) return 0;
  if (a == A && b == B) return 1;
  if (dp2[a][b] != -1) return dp2[a][b];

  int ret = 0;
  if (a + 1 <= A)
    ret = (ret + g(a + 1, b)) % Mod;
  if (b + 1 <= B)
    ret = (ret + g(a, b + 1)) % Mod;

  return dp2[a][b] = ret;
}
  

int main(void) {
  int t;
  scanf("%d",&t);
  for (int test = 1; test <= t; ++test) {
    scanf("%d-%d",&A,&B);
    memset(dp, -1, sizeof(dp));
    memset(dp2, -1, sizeof(dp2));
    printf("Case #%d: %d %d\n",test,f(1,0),g(0,0));
  }
  return 0;
}
