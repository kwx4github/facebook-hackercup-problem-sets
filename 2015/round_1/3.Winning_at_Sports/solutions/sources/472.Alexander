
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>
#include <numeric>
#include <cassert>
#include <unordered_set>
#include <unordered_map>
#include <fstream>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)

const int MOD = 1000000007;
const int MAXN = 2048;
int stressfree[MAXN][MAXN];
int stressfull[MAXN][MAXN];

int main() {
	memset(stressfree,0,sizeof(stressfree));
	memset(stressfull,0,sizeof(stressfull));
	stressfree[0][0] = 1;
	stressfull[0][0] = 1;
	FOR(i,0,MAXN)FOR(j,0,MAXN){
		if(i==0&&j==0)continue;
		if(i > j){
			if(i > 0)stressfree[i][j] += stressfree[i-1][j];
			if(j > 0)stressfree[i][j] += stressfree[i][j-1];
			if(stressfree[i][j] >= MOD)stressfree[i][j] -= MOD;
		}
		if(i <= j){
			if(i > 0)stressfull[i][j] += stressfull[i-1][j];
			if(j > 0)stressfull[i][j] += stressfull[i][j-1];
			if(stressfull[i][j] >= MOD)stressfull[i][j] -= MOD;
		}
	}
	int T;
	cin >> T;
	FOR(t, 1, T + 1){
		string in;
		cin >> in;
		FOR(i,0,sz(in))if(in[i] == '-')in[i] = ' ';
		istringstream is(in);
		int A, B;
		is >> A >> B;
		cout << "Case #" << t << ": " << stressfree[A][B] << " " << stressfull[B][B] << endl;
	}

	return 0;
}
