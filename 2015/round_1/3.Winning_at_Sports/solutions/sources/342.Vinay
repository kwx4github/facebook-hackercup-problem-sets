#include <iostream>
#include <fstream>
#include <cstdio>
#include <math.h>
#include <vector>
#include <string.h>
#include <algorithm>
#include <climits>
#include <stack>
#include <queue>
#include <set>
#include <map>
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a>b?b:a
#define GCD(a,b)  { return (b==0)?a:GCD(b,a%b);
#define FOR(i,n) for(i=0;i<n;i++)
#define FOR_X(i,n,x) for(i=x;i<n;i++)
#define BACK(i,n) for(i=n;i>=0;i--)
#define BACK_X(i,n,x) for(i=n;i>=x;i--)

typedef long long int lld;
using namespace std;
const lld mod=1000000007;
lld x,y;
lld dp[2001][2001];
lld rec(lld p1,lld p2)
{
    //cout<<x<<" "<<y<<endl;
	if( p1==x && p2==y)
	return 1;
	else if( p1>x || p2>y) return 0;
	else if( dp[p1][p2]!=-1) return dp[p1][p2];
	else if(p1==x)
	{
		dp[p1][p2]=rec(p1,p2+1);
		return dp[p1][p2];
	}
	else if( p1==p2+1)
	{
		dp[p1][p2]=rec(p1+1,p2);
		return dp[p1][p2];
	}
	else
	{
		dp[p1][p2]= ( rec(p1+1,p2)+rec(p1,p2+1)) %mod;
		return dp[p1][p2];
	}
}
lld rec2(lld p1,lld p2)
{

	if( p1==x && p2==y)
	return 1;
	else if( p1>x || p2>y) return 0;
	else if( dp[p1][p2]!=-1) return dp[p1][p2];
	else if(p2==y)
	{
		dp[p1][p2]=rec2(p1+1,p2);
		return dp[p1][p2];
	}
	else if( p1==p2)
	{
		dp[p1][p2]=rec2(p1,p2+1);
		return dp[p1][p2];
	}
	else
	{
		dp[p1][p2]= ( rec2(p1+1,p2)+rec2(p1,p2+1)) %mod;
		return dp[p1][p2];
	}
}
int main()
{
	//ios_base::sync_with_stdio(0); //dont use with EOF
	lld t,l=0,i,j;
	string s;
	cin>>t;
	while(t--)
	{
		l++;
		cin>>s;
		lld n=s.length();
		x=0;
		FOR(i,n)
		{
			if( s[i]=='-' ) break;
			x=x*10+ (lld) ( s[i]-'0') ;
		}
		y=0;
		FOR_X(j,n,i+1)
		{
			y=y*10+ (lld) ( s[j]-'0') ;
		}
		//cout<<x<<" "<<y<<endl;
		if(y==0)
		{
			cout<<"Case #"<<l<<": 1 1\n";
		}
		else
		{
			memset(dp,-1,sizeof(dp));
			lld ans=rec(1,0);
			memset(dp,-1,sizeof(dp));
			lld ans2=rec2(0,1);
			cout<<"Case #"<<l<<": "<<ans<<" "<<ans2<<endl;
		}
	}
	return 0;
}

