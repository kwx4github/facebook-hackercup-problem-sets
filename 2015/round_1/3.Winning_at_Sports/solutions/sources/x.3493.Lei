#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cctype>
#include <climits>
#include <iostream>
#include <vector>
#include <queue>
#include <string>
#include <stack>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <sstream>
#include <initializer_list>

using namespace std;

int sfree[2010][2010] = {{0}};
int sful[2010][2010] = {{0}};

const int MOD = 1000000007;

int main(int argc, char *argv[])
{
    freopen("C.in", "r", stdin);
    
    int T = 0;
    cin >> T;

    for (int cas = 1; cas <= T; cas++) {
        string s;
        cin >> s;
        int hypen = s.find('-');
        int first = stoi(s.substr(0, hypen));
        int second = stoi(s.substr(hypen + 1));

        for (int i = 0; i <= first; i++) {
            for (int j = 0; j <= second; j++) {
                sfree[i][j] = 0;
                sful[i][j] = 0;
                
                if (i == 0 && j == 0) {
                    sfree[i][j] = sful[i][j] = 0;
                } else if (i == 0) {
                    sfree[i][j] = 0;
                    sful[i][j] = 1;
                } else if (j == 0) {
                    sfree[i][j] = 1;
                    sful[i][j] = 0;
                } else {
                    sfree[i][j] = 0;
                    if (i > j) {
                        sfree[i][j] = sfree[i][j - 1];
                        if (i - 1 > j) {
                            sfree[i][j] += sfree[i - 1][j];
                        }
                    }

                    sful[i][j] = sful[i - 1][j];
                    if (j - 1 >= i) {
                        sful[i][j] += sful[i][j - 1];
                    }
                }

                sfree[i][j] %= MOD;
                sful[i][j] %= MOD;
            }
        }
        cout << "Case #" << cas << ": " << sfree[first][second] << " " << sful[first][second] << endl;
    }

    return 0;
}
