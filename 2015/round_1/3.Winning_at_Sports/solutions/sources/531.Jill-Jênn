PRIME = 1000000007

def bezout(a, b):
    if b == 0:
        return (1, 0)
    else:
        u, v = bezout(b, a % b)
        return (v, u - (a // b) * v)

def inv(a, p):
    return bezout(a, p)[0]

def binom_modulo(n, k, p=PRIME):
    prod = 1
    for i in xrange(k):
        prod = (prod * (n - i) * inv(i + 1, p)) % p
    return prod

def nb_paths(p, q):
    return (binom_modulo(p + q, p) - binom_modulo(p + q, p + 1)) % PRIME

T = int(raw_input())
for t in range(T):
    q, p = map(int, raw_input().split('-'))
    stressful = nb_paths(p, p)
    stress_free = nb_paths(q - 1, p)
    print 'Case #%d: %d %d' % (t + 1, stress_free, stressful)
