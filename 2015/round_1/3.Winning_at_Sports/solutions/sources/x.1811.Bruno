#include <bits/stdc++.h>

using namespace std;
#define mod 1000000007
#define MAX 2010

pair<int,int> dp[MAX][MAX][3];
int t,sc1,sc2;

pair<int,int> sum(pair<int,int> a, pair<int,int> b)
{
	pair<int,int> ret;
	ret.first = (a.first%mod + b.first%mod)%mod;
	ret.second = (a.second%mod + b.second%mod)%mod;
	return ret;
}

pair<int,int> solve(int scp, int scad, int type)
{
	if (scp == sc1 && scad == sc2)
	{
		if (type == 1)
			return make_pair(1,0);
		else if (type == 2)
			return make_pair(0,1);
	}

	if (scp == sc1)
	{
		return make_pair(0, 0);
	}

	pair<int,int> & ret = dp[scp][scad][type];

	if (ret != make_pair(-1,-1))
	{
		return ret;
	}

	ret = make_pair(0, 0);
	if (type == 0)
	{
		if (scp < sc1)
		{
			ret = sum(ret, solve(scp + 1, scad, 1));
		}
		if (scad < sc2)
		{
			ret = sum(ret, solve(scp, scad + 1, 2));
		}
	}
	else if (type == 1)
	{
		if (scp < sc1)
		{
			ret = sum(ret, solve(scp + 1, scad, 1));
		}
		if (scad < scp)
		{
			ret = sum(ret, solve(scp, scad + 1, 1));
		}
	}
	else if (type == 2)
	{
		if (scp < scad || scad == sc2)
		{
			ret = sum(ret, solve(scp + 1, scad, 2));
		}
		if (scad < sc2)
		{
			ret = sum(ret, solve(scp, scad + 1, 2));
		}	
	}
	return ret;
}

int main(void)
{
	scanf("%d",&t);

	for (int cases = 1; cases <= t; ++cases)
	{
		memset(dp, -1, sizeof dp);
		scanf("%d-%d",&sc1,&sc2);
		pair<int,int> ret = solve(0, 0, 0);
		printf("Case #%d: %d %d\n",cases,ret.first,ret.second);
	}
	return 0;
}