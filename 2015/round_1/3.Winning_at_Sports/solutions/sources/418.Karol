#include <iostream>
#include <vector>
#include <tuple>

const long long MOD = 1000000007;

struct DP {
	int a, b;
	DP(int a, int b): a(a), b(b) {}

	std::pair<long long, long long> solve() {
		std::vector<std::vector<long long>> dp(a+1, std::vector<long long>(b+1, 0));
		dp[0][0] = 1;

		for(int i = 0; i <= a; i++) {
			for(int j = 0; j <= b; j++) {
				if(j >= i) continue;
				if(i != 0) dp[i][j] += dp[i-1][j];
				if(j != 0) dp[i][j] += dp[i][j-1];
				dp[i][j] %= MOD;
			}
		}
		long long B = 0;
		for(int i = 0; i < b; i++) B += dp[b][i];
		if(b == 0) B = 1;
		return std::make_pair(dp[a][b], B % MOD);
	}
};

struct DP2 {
	int a, b;
	DP2(int a, int b): a(a), b(b) {}

	long long solve() {
		return 0;
	}
};

int main() {
	int t;
	std::cin >> t;

	for(int i=1; i<=t; i++) {
		int a, b;
		char c;
		std::cin >> a >> c >> b;

		DP dp(a, b);
		long long A, B;
		std::tie(A, B) = dp.solve();

		std::cout << "Case #" << i << ": " << A << " " << B << std::endl;
	}
}
