from __future__ import print_function

import bisect
import sys
import math

f = sys.stdin

if len(sys.argv) > 1:
    f = open(sys.argv[1], "rt")


MAX_NUM = 2000
MODULO = 1000000007L

N = MAX_NUM + 1

full_table = [[1 for i in xrange(N)]]
full_table[0][0] = 0

for i in xrange(1, N):
    prev = full_table[i-1]
    row = list(prev)
    for j in xrange(i+1, N):
        row[j] = (row[j] + row[j-1]) % MODULO
    full_table.append(row)


free_table = [[1 for i in xrange(N)] for j in xrange(N)]

for j in xrange(1, N-1):
    free_table[j+1][j] = free_table[j+1][j-1]
    for i in xrange(j+2, N):
        free_table[i][j] = (free_table[i][j-1] + free_table[i-1][j]) % MODULO

# main

T = int(f.readline().strip())

for case_id in range(1, T+1):
    A, B = map(int, f.readline().strip().split('-'))

    nfree = free_table[A][B]
    nfull = full_table[B][B] # B, B (!)

    print(str.format('Case #{}: {} {}', case_id, nfree, nfull))
