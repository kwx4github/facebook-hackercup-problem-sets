#include<iostream>
#include<cstdio>
#define MAX 1000000007
using namespace std;
long long int stressfree(int a, int b, long long int **arr)
{
   if(b < 0)
       return 0; 
   if(arr[a][b] > 0)
        return arr[a][b];
   if(a <= b)
        return 0;
    arr[a][b] = ((stressfree(a, b - 1, arr)%MAX) + (stressfree(a - 1, b, arr)%MAX)) % MAX;

    return arr[a][b];
}
long long int stressfull(int a, int b, long long int **arr2)
{
    if(arr2[a][b] > 0)
        return arr2[a][b];
    if(a < b)
        return 0;

    arr2[a][b] = ((stressfull(a, b - 1, arr2)%MAX) + (stressfull(a - 1, b, arr2)%MAX)) % MAX;

    return arr2[a][b];
}

int main()
{
    int t;
    cin >> t;
    int i, j, k;
    long long int count = 0;
    long long int **arr = (long long int **)malloc(sizeof(long long int*) * 2001);
    long long int **arr2 = (long long int **)malloc(sizeof(long long int*) * 2001);

    for(i = 0; i < 2001; i++)
        arr[i] = (long long int*)malloc(sizeof(long long int) * 2001);

    for (i=0; i<2001; i++) 
        arr2[i] = (long long int *)malloc(sizeof(long long int) * 2001);

    for(i = 0; i < 2001; i++)
    {
        for(j = 0; j < 2001; j++)
        {
            arr[i][j] = 0;
            arr2[i][j] = 0;
        }
    }

    for(i = 0; i < 2001; i++)
        arr[i][0] = 1;

    for(i = 0; i < 2001; i++)
        arr2[i][0] = 1;

    arr[0][0] = 1;

    for(i = 1; i <= t; i++)
    {
        int a, b;
        scanf("%d-%d", &a, &b);
        long long int value1 = stressfree(a, b, arr);
        long long int value2;
        if(b == 0)
            value2 = stressfull(b, b, arr2);
        else
            value2 = stressfull(b, b - 1, arr2);
        cout << "Case #" << i << ": " << value1 << " " << value2 << endl;
    }

    return 0;
}
