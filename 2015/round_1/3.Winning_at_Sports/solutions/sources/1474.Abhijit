#!/usr/bin/env python

def get_num_ways(win, loss):
    matw = []
    matl = []
    for i in range(win + 1):
        row = []
        for j in range(loss + 1):
            row.append(0)
        matw.append(row[:])
        matl.append(row[:])
    
    matw[1][0] = 1

    for i in range(2, win + 1):
        for j in range(loss + 1):
            if i > j:
                matw[i][j] = (matw[i - 1][j] + matw[i][j - 1]) % 1000000007
    stress_free = matw[win][loss]

    matl[0][0] = 1

    for i in range(win + 1):
        for j in range(1, loss + 1):
            if i <= j:
                matl[i][j] = (matl[i - 1][j] + matl[i][j - 1]) % 1000000007
    stressful = matl[loss][loss]

    return (stress_free, stressful)

if __name__ == '__main__':
    tc = int(raw_input())
    for t in range(tc):
        win, loss = map(int, raw_input().strip().split('-'))
        stress_free, stressful = get_num_ways(win, loss)
        print 'Case #%d: %d %d' % (t + 1, stress_free, stressful) 
