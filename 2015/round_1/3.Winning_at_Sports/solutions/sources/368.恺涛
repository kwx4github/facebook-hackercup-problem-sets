/*************************************************************************
	> File Name: Winning.cpp
	> Author: skt
	> Mail: sktsxy@gmail.com
	> Created Time: 2015年01月18日 星期日 14时54分25秒
 ************************************************************************/

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <complex>
#include <cassert>
// #pragma comment(linker,"/STACK:102400000,102400000")
using namespace std;
#define LL long long
#define pb push_back
#define mp make_pair
#define eps 1e-8
#define x first
#define y second
#define MOD 1000000007
#define MAXN 2005
template <typename T> inline T Max(T a, T b) {return a>b?a:b;}
template <typename T> inline T Min(T a, T b) {return a<b?a:b;}
typedef pair<int, int> PII;
typedef vector<int> vi;
const double PI = acos(-1.0);
int T, A, B, Cas = 1;

LL dp[MAXN * 2][MAXN];

void work() {
    LL res1, res2;
    scanf("%d-%d", &A, &B);
    memset(dp, 0, sizeof(dp));
    dp[1][1] = 1;
    for (int i = 2; i <= A + B; i ++) {
        for (int j = i; j + j > i; j --) {
            dp[i][j] = dp[i - 1][j];
            if ((j - 1) * 2 > (i - 1)) {
                dp[i][j] += dp[i - 1][j - 1];
            }
            dp[i][j] %= MOD;
        }
    }
    res1 = dp[A + B][A];
    if (A == 0) {
        res1 = 0;
    }
    memset(dp, 0, sizeof(dp));
    dp[1][0] = 1;
    for (int i = 2; i <= A + B; i ++) {
        for (int j = 0; j <= i; j ++) {
            if ((i - j) == B) {
                dp[i][j] = dp[i - 1][j - 1];
                if ((i - 1 - j) >= j) {
                    dp[i][j] += dp[i - 1][j];
                }
                dp[i][j] %= MOD;
            } else if (i - j >= j) {
                dp[i][j] = dp[i - 1][j - 1];
                if ((i - 1 - j) >= j) {
                    dp[i][j] += dp[i - 1][j];
                }
                dp[i][j] %= MOD;
            }
        }
    }
    res2 = dp[A + B][A];
    if (B == 0) {
        res2 = 1;
    }
    printf("Case #%d: %lld %lld\n", Cas ++, res1, res2);
}
int main() {
    scanf("%d", &T);
    while (T --) {
        work();
    }
    return 0;
}
