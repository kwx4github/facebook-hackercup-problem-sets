#include <algorithm>
#include <cassert>
#include <cstring>
#include <iostream>

using namespace std;

#define LOG(x) cerr << #x << " = " << (x) << "\n"

typedef long long llint;
typedef pair<int,int> pii;
const int MOD = 1000000007;
const int MAXN = 2010;

int dp1[MAXN][MAXN];
int dp2[MAXN][MAXN];

inline int add(int a, int b) {
  return (a + b) % MOD;
}

void solve() {
  int a, b;
  scanf("%d-%d", &a, &b);

  memset(dp1, 0, sizeof dp1);
  memset(dp2, 0, sizeof dp2);
  dp1[0][0] = dp2[0][0] = 1;

  for (int i = 0; i <= a; ++i) {
    for (int j = 0; j <= b; ++j) {
      dp1[i+1][j] = add(dp1[i+1][j], dp1[i][j]);
      if (i > j + 1)
        dp1[i][j+1] = add(dp1[i][j+1], dp1[i][j]);

      dp2[i][j+1] = add(dp2[i][j+1], dp2[i][j]);
      if (i + 1 <= j || j == b)
        dp2[i+1][j] = add(dp2[i+1][j], dp2[i][j]);
    }
  }
  printf("%d %d\n", dp1[a][b], dp2[a][b]);
}

int main() {
  int t; scanf("%d", &t);
  for (int i = 0; i < t; ++i) {
    printf("Case #%d: ", i+1);
    solve();
  }
  return 0;
}

