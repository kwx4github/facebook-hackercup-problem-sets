#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <sstream>

std::vector<int> cache;

int main() {
    std::ios::sync_with_stdio(false);
    int testCases;
	std::cin >> testCases;

	std::vector<std::vector<std::pair<unsigned unsigned long long, unsigned long long> > > table;

	for (int i = 0; i <= 2000; i++) {
		std::vector<std::pair<unsigned long long, unsigned long long> > row;
		for (int j = 0; j < i; j++) {
			row.push_back(std::pair<unsigned long long, unsigned long long>(0, 0));
		}
		table.push_back(row);
	}

	table[1][0].second = 1;
	for (int i = 2; i <= 2000; i++) {
		table[i][0].second = 1;
		table[i][1].second = 1;
	}
	for (int j = 2; j <= 1999; j++) {
		unsigned long long newSum = 0;
		for (int i = 1; i < j; i++) {
			newSum += (table[j][j-i].second % 1000000007 * table[j][i-1].second % 1000000007) % 1000000007;
		}
		newSum += table[j][j-1].second % 1000000007;
		for (int i = j + 1; i <= 2000; i++) {
			table[i][j].second = newSum % 1000000007;
		}
	}

	table[2][1].first = 1;
	for (int i = 3; i <= 2000; i++) {
		table[i][1].first = i - 1;
		for (int j = 2; j <= i - 2; j++) {
			table[i][j].first = table[i-1][j].first % 1000000007 + table[i][j-1].first % 1000000007;
		}
		table[i][i-1].first = table[i][i-2].first;
	}

	for (int i = 1; i <= 2000; i++) {
		table[i][0].first = 1;
		table[i][0].second = 0;
	}
	

	for (int i = 0; i < testCases; i++) {
		std::string s;
		std::cin >> s;
		std::stringstream ss(s);
		int a, b;
		ss >> a;
		ss.ignore();
		ss >> b;
		std::cout << "Case #" << (i+1) << ": " << table[a][b].first % 1000000007 << " " << table[a][b].second << std::endl;
	}

	return 0;
}

