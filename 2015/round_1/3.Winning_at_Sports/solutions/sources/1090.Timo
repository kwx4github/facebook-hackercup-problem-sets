'''Problem 3: Winning at Sports
Timo Petmanson
'''

import sys
from pprint import pprint

ULIMIT = 2005
#ULIMIT = 5
MODULO = 1000000007

# create a ULIMITxULIMIT matrix
X = [[None]*ULIMIT for _ in range(ULIMIT)]
Y = [[None]*ULIMIT for _ in range(ULIMIT)]

# fill the first matrix
for row in range(1, ULIMIT):
    for col in range(0, row):
        if col == 0:
            X[row][col] = 1 # only one way to achieve score f(row, 0)
        elif row - col == 1:
            X[row][col] = X[row][col-1] # for f(row, row-1), same number of ways as f(row, row-2)
        else:
            X[row][col] = X[row-1][col] + X[row][col-1] # else, f(row, col) = f(row-1, col) + f(row, col-1)
        X[row][col] %= MODULO # we can module each step

# fill the second matrix
for row in range(1, ULIMIT):
    for col in range(0, row+1):
        if col == 0:
            Y[row][col] = 1 # only one way to achieve score g(row, 0)
        elif row == col:
            Y[row][col] = Y[row][col-1] # for g(row, row), same number of ways as g(row, row-1)
        else:
            Y[row][col] = Y[row-1][col] + Y[row][col-1] # else, g(row, col) = g(row-1, col) + g(row, col-1)
        Y[row][col] %= MODULO

# stress-free victory
def f(a, b):
    return X[a][b]

# stressful victory
def g(a, b):
    if b == 0: # case not solved by Y
        return 1
    return Y[b][b]

def read_int():
    return int(sys.stdin.readline())

def read_two():
    a, b = sys.stdin.readline().split('-')
    return (int(a), int(b))

# solve the testcases
T = read_int()
for case in range(1, T+1):
    a, b = read_two()
    print ('Case #{0}: {1} {2}'.format(case, f(a, b), g(a, b)))
