#include <iostream>
#include <cstring>
#include <cstdlib>
#include <fstream>

using namespace std;

int stressFree(int m, int n) {
    int result; 
    int **table = new int*[m+1];
    for (int i = 0; i <= m; i++)
        table[i] = new int[n+1](); 

    for (int i = 1; i <= m; i++)
        table[i][0] = 1;
    for (int j = 0; j <= n; j++)
        table[0][j] = 0;

    for (int i = 1; i <= m; i++) {
        for (int j = 1; j < i && j <= n ; j++) {
            long temp = table[i][j-1];
            if (i-1 > j)
                temp += table[i-1][j];
            table[i][j] = temp % 1000000007;
        }
    }
    
    result = table[m][n];

    for (int i = 0; i <= m; i++)
        delete[] table[i];
    delete[] table;

    return result;
}

int stressful(int m, int n) {
    int result;
    int **table = new int*[m+1];
    for (int i = 0; i <= m; i++)
        table[i] = new int[n+1]();

    for (int i = 1; i <= m; i++)
        table[i][0] = 0;
    for (int j = 0; j <= n; j++)
        table[0][j] = 1;
    
    int j = 1;
    for (int i = 1; i <= j; i++) {
        for (j = i; j <= n; j++) {
            long temp = table[i-1][j];
            if (j-1 >= i)
                temp += table[i][j-1];
            table[i][j] = temp % 1000000007;
        }
    }
    
    result = table[n][n];

    for (int i = 0; i <= m; i++)
        delete[] table[i];
    delete[] table;

    return result;
}


int main()
{
    int numCases;

    ifstream infile("winning.txt");
    infile >> numCases;
    int count = 0;

    while (count < numCases) {
        char pointStr[10];
        infile >> pointStr;
        char *curr = strtok (pointStr, "-");
        int m = atoi(curr);
        curr = strtok(NULL, "-");
        int n = atoi(curr);
        count++;
        cout << "Case #" << count << ": " << stressFree(m, n) << " " << stressful(m, n) << endl;
    }

    return 0;
}
