import os, time, sys

sys.setrecursionlimit(1800000)
cur_dir=os.path.dirname( os.path.abspath(__file__) )
output=open( os.path.join( cur_dir, 'output.txt' ), 'w' )

def log( msg ):
    print msg
    output.write( msg + '\n' )

lines=[]
for f in os.listdir( cur_dir ):
    if f.lower().endswith( '.txt' ):
    	if not 'output.txt' in f:
        	lines=open( os.path.join( cur_dir, f ), 'r' ).readlines()
        	print f, len(lines)
        	break

# ------------------------------------------------------- 

MOD=1000000007

LIM=2001

free= [ [ -1 for i in range(LIM) ] for j in range(LIM) ]
free[1][0]=1

def get_free( i,j ):
	if j>=i: return 0
	if free[i][j] != -1: return free[i][j]
	if i<1: return 0
	if j<0: return 0

	tot=get_free(i-1,j)+get_free(i,j-1)
	tot=tot%MOD
	free[i][j]=tot
	return tot



ful= [ [ -1 for i in range(LIM) ] for j in range(LIM) ]
ful[0][0]=1

def get_ful( i,j ):
	if i>j: return 0
	if ful[i][j] != -1: return ful[i][j]
	if i<0: return 0
	if j<0: return 0

	tot=get_ful(i-1,j)+get_ful(i,j-1)
	tot=tot%MOD
	ful[i][j]=tot
	return tot

#print solve( '123' )
#sys.exit()

print get_free(2000,1500)
print get_free(2000,1900)
print get_ful(1900,1900)

raw_input('go')

# ------------------------ main ------------------------------- 
k=1

while k<len(lines):
	line=lines[k].strip()
	i,j=map( int, line.split('-') )
	#ans=get_free(i,j)
	log( 'Case #%d: %d %d' % (k,get_free(i,j), get_ful(j,j) ) )
	k+=1

raw_input('done')
