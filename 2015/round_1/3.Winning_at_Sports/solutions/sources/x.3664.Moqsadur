#include <cstdio>
#include <cstring>
#include <cmath>
#include <map>
#include <algorithm>
#include <vector>
#include <queue>
#include <utility>
#include <iostream>
using namespace std;

#define mod 1000000007
#define fop freopen("1.txt","r",stdin);freopen("1output.txt","w",stdout);

int dp[4005][4005], n, a, b;

int func(int index, int x, int y)
{
    if(x == a)
        return 1;

    if(dp[index][x - y] != -1)
        return dp[index][x - y];

    if(x - y > 1 && y < b)
        return dp[index][x - y] = (func(index + 1, x + 1, y) + func(index + 1, x, y + 1)) % mod;
    return dp[index][x - y] = func(index + 1, x + 1, y) % mod;
}

int func2(int index, int x, int y)
{
    if(y == b)
        return 1;

    if(dp[index][y - x] != -1)
        return dp[index][y - x];

    if(y > x)
        return dp[index][y - x] = (func2(index + 1, x, y + 1) + func2(index + 1, x + 1, y)) % mod;
    return dp[index][y - x] = func2(index + 1, x, y + 1) % mod;
}

int main()
{
    fop;
    int t, cnt, x, y;
    scanf("%d", &t);
    for(cnt = 1; cnt <= t; ++cnt)
    {
        scanf("%d - %d", &a, &b);

        n = a + b;
        memset(dp, -1, sizeof(dp));
        x = func(1, 1, 0);

        if(b > 0)
        {
            memset(dp, -1, sizeof(dp));
            y = func2(1, 0, 1);
        }
        else
            y = 0;

        printf("Case #%d: %d %d\n", cnt, x, y);
    }
    return 0;
}

/*
10
10 - 5
100 - 50
1000 - 500
*/
