#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string>
#include <cassert>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define forup(i,a,b) for(int i=a; i<b; ++i)
#define fordn(i,a,b) for(int i=a; i>b; --i)
#define rep(i,a) for(int i=0; i<a; ++i)

#define dforup(i,a,b) for(i=a; i<b; ++i)
#define dfordn(i,a,b) for(i=a; i>b; --i)
#define drep(i,a) for(i=0; i<a; ++i)

#define slenn(s,n) for(n=0; s[n]!=13 and s[n]!=0; ++n);s[n]=0

#define gi(x) scanf("%d",&x)
#define gl(x) cin>>x
#define gd(x) scanf("%lf",&x)
#define gs(x) scanf("%s",x)

#define pis(x) printf("%d ",x)
#define pin(x) printf("%d\n",x)
#define pls(x) cout<<x<<" "
#define pln(x) cout<<x<<"\n"
#define pds(x) printf("%.12f ",x)
#define pdn(x) printf("%.12f\n",x)
#define pnl() printf("\n")

#define fs first
#define sc second

#define pb push_back

const int inv=1000000000;
const int minv=-inv;

const int lim=2010;
const LL modref=1000000007ll;

int T;

LL C[lim+1];
LL dp[lim+1][lim+1];
int s,a,b;

string si,sa,sb;
stringstream ss;

int main()
{
	C[0]=1ll;
	forup(i,1,lim+1)
	{
		rep(j,i)
			C[i] = (C[i] + C[j]*C[i-1-j]) % modref;
	}

	dp[1][0]=1ll;
	forup(s,2,2*lim+1)
	{
		for(int a=1; a<=min(s,lim); ++a)
		{
			int b=s-a;
			if(a<=b) continue;

			dp[a][b]=0ll;
			if(b-1>=0) dp[a][b]=(dp[a][b]+dp[a][b-1])%modref;
			if(a-1>b) dp[a][b]=(dp[a][b]+dp[a-1][b])%modref;	
		}
	}

	gi(T);
	rep(z,T)
	{
		printf("Case #%d: ",z+1);

		cin>>si;
		sa=""; sb="";
		int i;
		for(i=0; si[i]!='-'; ++i)
			sa+=si[i];
		for(++i; si[i]!='\0'; ++i)
			sb+=si[i];

		ss.str(""); ss.clear();
		ss<<sa; ss>>a;
		ss.str(""); ss.clear();
		ss<<sb; ss>>b;

		pls(dp[a][b]); pln(C[b]);
	}
	
	return 0;
}