#include<bits/stdc++.h>
using namespace std ;

const int MAXN = 2000;
const int MOD = 1e9 + 7;

#define FREE 0
#define FULL 1

int best[MAXN+5][MAXN+5][2];

bool valid(int me, int him, bool state) {
    if (state == FREE) return me > him;
    return me <= him;
}

int solve(int me, int him, bool state) {
    if (me == 0 && him == 0) return 1;
    if (me < 0 || him < 0) return 0;
    if (!valid(me, him, state)) return 0;
    int& ret = best[me][him][state];
    if (~ret) return ret;
    return ret = (solve(me - 1, him, state) + solve(me, him - 1, state)) % MOD;
}

int main() {
    freopen("sports.in","r",stdin);
    freopen("sports.out","w",stdout);
    int c,c2;
    int tests;
    memset(best, -1, sizeof(best));
    scanf("%d",&tests);
    for (int test=1;test<=tests;test++) {
        int me, him;
        scanf("%d-%d",&me,&him);
        printf("Case #%d: %d %d\n",test, solve(me, him, FREE), solve(him, him, FULL));
    }
    
    return 0;
}
