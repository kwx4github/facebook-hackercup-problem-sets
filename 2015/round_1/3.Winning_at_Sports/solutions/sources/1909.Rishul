/*Author: Rishul Aggarwal*/

#include<bits/stdc++.h>

#define mod 1000000007
#define ll long long
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define in(type,x) scanf("%" #type,&x)
#define debug(args...) {dbg,args; cerr<<endl;}
#define test int t;\
in(d,t);\
while(t--)

using namespace std;

struct debugger
{template<typename T> debugger& operator,(const T& v)
{cerr<< v <<" ";
return *this;
}
}dbg;

ll gcd(ll a,ll b) {if(b==0) return a; return gcd(b,a%b);}

ll power(ll b,ll exp,ll m) {ll ans=1; b%=m; while(exp){if(exp&1) ans=(ans*b)%m; exp>>=1; b=(b*b)%m; } return ans; }

ll dp1[2001][2001],dp2[2001][2001];

void solve()
{
	for(int i=1;i<=2000;i++) dp1[i][0]=1,dp2[i][0]=1,dp2[0][i]=1;
	for(int i=1;i<=2000;i++)
	 for(int j=1;j<=2000;j++)
	  {
	  	if(j>i) dp1[i][j]=0;
	  	else
	  	{
	  		if(i>j-1) dp1[i][j]=(dp1[i][j]+dp1[i][j-1])%mod;
	  		if(i-1>j) dp1[i][j]=(dp1[i][j]+dp1[i-1][j])%mod;
	  	}
	  }	
    
	for(int i=1;i<=2000;i++)
	 for(int j=1;j<=2000;j++)
	  {
	  	if(i>j) dp2[i][j]=dp2[j][j];
	  	else
	  	{
	  		dp2[i][j]=(dp2[i][j]+dp2[i-1][j])%mod;
	  		if(i!=j) dp2[i][j]=(dp2[i][j]+dp2[i][j-1])%mod;
	  	}	  	
	  }
	
}

int main()
{
  solve();
  int cas=1;
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  test
  {
  	string s;
  	cin>>s;
  	string a,b;
  	int i=0;
  	int l=s.length();
  	while(i<l && s[i]!='-') {a+=s[i];i++;}
  	i++;
  	while(i<l) {b+=s[i];i++;}
  	int n=atoi(a.c_str()),m=atoi(b.c_str());
  	//debug(n,m);
  	cout<<"Case #"<<cas<<": "<<dp1[n][m]<<" "<<dp2[n][m]<<endl;
  	cas++;  
  }

  return 0;
}

