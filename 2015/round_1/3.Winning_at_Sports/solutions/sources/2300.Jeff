#include <stdio.h>
#include <string.h>
#include <iostream>
using namespace std ;

const int N = 2100 ;
const int mod = 1000000007 ;
int dp[N + N][N] ;

int main() {
    freopen( "input.txt", "r", stdin ) ;
    freopen( "output.txt", "w", stdout ) ;
    int T, cas = 1 ;
    cin >> T ;
    while ( T-- ) {
        int n, m ;
        scanf( "%d-%d", &n, &m ) ;
        memset( dp, 0, sizeof (dp) ) ;
        dp[1][1] = 1 ;
        for ( int i = 1; i <= n + m; ++i ) {
            for ( int j = 1; j <= i && j <= n; ++j ) {
                int k = i - j;
                if ( j > k + 1 ) {
                    dp[i+1][j] += dp[i][j] ;
                    if ( dp[i+1][j] >= mod )    dp[i+1][j] -= mod ;
                }
                if ( j > k ) {
                    dp[i+1][j+1] += dp[i][j] ;
                    if ( dp[i+1][j+1] >= mod )  dp[i+1][j+1] -= mod ;
                }
            }
        }
        int ans1 = dp[n+m][n] ;


        memset( dp, 0, sizeof (dp) ) ;
        dp[0][0] = 1 ;
        for ( int i = 1; i <= n + m; ++i ) {
            for ( int j = (i+1)>>1; j <= i && j <= m; ++j ) {
                int k = i - j ;
                dp[i][j] += dp[i-1][j-1] ;
                dp[i][j] %= mod ;
                if ( j >= k && j != m )
                    dp[i][j] += dp[i-1][j] ;
                dp[i][j] %= mod ;
            }
        }

        int ans2 = 0 ;
        for ( int i = m; i <= n + m; ++i ) {
            ans2 += dp[i][m] ;
            ans2 %= mod ;
        }

        printf( "Case #%d: %d %d\n", cas++, ans1, ans2 ) ;
    }
    return 0 ;
}
