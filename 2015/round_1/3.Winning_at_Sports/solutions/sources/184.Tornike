/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//std::ios_base::sync_with_stdio (false);

#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <iomanip>
#include <map>
#include <assert.h>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>
#include <deque>
#include <fstream>
#include <bitset>

#define endl '\n'
#define deb(x) cout << "> " << #x << " : " << (x) << endl;
#define EPS 0.0000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF ((1<<30)-1)
#define pb push_back
#define mp make_pair
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int , int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector < int >
#define DID (long long)
#define ll long long
#define AL(a) (a).begin(),(a).end()
#define INFF DID INF*INF
#define debug 1

using namespace std;

int A,B,ans1,ans2;
ll dp[4005][4005];

void read(){
    char ch;
    A = B = 0;

    while ((ch = getchar())!='-')
        A = A * 10 + ch - '0';
    while ((ch = getchar())!='\n')
        B = B * 10 + ch - '0';
}

void solve(){
    memset(dp,0,sizeof(dp));
    dp[0][0]=1;
    for (int i=1;i<=A+B;i++)
        for (int j=0;j<=i;j++){
        int a = j;
        int b = i-a;
        if (a<=b)
            continue;
        dp[a][b]=dp[a-1][b];
        if (b)
            dp[a][b]+=dp[a][b-1];
        while (dp[a][b]>=md)
            dp[a][b]-=md;
    }
    ans1 = dp[A][B];

    memset(dp,0,sizeof(dp));
    dp[0][0]=1;
    for (int i=1;i<=A+B;i++)
        for (int j=0;j<=i;j++){
        int a = j;
        int b = i-a;
        if (a>b && b<B)
            continue;
        if (a)
            dp[a][b]+=dp[a-1][b];
        if (b)
            dp[a][b]+=dp[a][b-1];
        while (dp[a][b]>=md)
            dp[a][b]-=md;
    }
    ans2 = dp[A][B];
}

int main(){
    #ifndef ONLINE_JUDGE
        freopen("text.in","r",stdin);  freopen("text.out","w",stdout);
    #endif

    int t,tests;
    cin>>tests;
    getchar();
    for (t=1;t<=tests;t++){
        read();
        solve();
        cout<<"Case #"<<t<<": "<<ans1<<" "<<ans2<<endl;
    }

}
