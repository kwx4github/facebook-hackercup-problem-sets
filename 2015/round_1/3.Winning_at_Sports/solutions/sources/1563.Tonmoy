
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <stdlib.h>
#include <iterator>
#include <sstream>
#include <numeric>
#include <fstream>
#include <numeric>
#include <vector>
#include <cctype>
#include <math.h>
#include <deque>
#include <queue>
#include <stack>
#include <iomanip>
#include <set>
#include <map>
//#include <windows.h>
using namespace std;

#pragma comment(linker,"/STACK:16777216")
#pragma warning(disable:4786)

#define FRE(i,a,b)  for(i = a; i <= b; i++)
#define FRL(i,a,b)  for(i = a; i < b; i++)
#define mem(t, v)   memset ((t) , v, sizeof(t))
#define sqr(x)      (x)*(x)
#define all(x)      x.begin(),x.end()
#define un(x)       x.erase(unique(all(x)), x.end())
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c) scanf("%d %d %d", &a, &b, &c)
#define D(x)        cout<<#x " = "<<(x)<<endl
#define pf          printf
#define VI          vector <int>
#define pii         pair <int, int>
#define pll         pair <LL, LL>
#define pb          push_back
#define mp          make_pair
#define pi          acos(-1.00)
#define DBG         pf("Hi\n")
#define sz          size()
#define ins         insert
#define fi          first
#define se          second
#define xx          first
#define yy          second
#define inf         (1<<29)
#define MOD         1000000007
#define eps         1e-9
#define MAX         2000

typedef long long int LL;
typedef double db;

//int dx[] = {+0,+1,+0,-1};
//int dy[] = {+1,+0,-1,+0};
//int dx[] = {-1,-1,-1,+0,+0,+1,+1,+1};
//int dy[] = {-1,+0,+1,-1,+1,-1,+0,+1};
//bool check(int n, int pos) {return (bool) (n & (1<<pos));}
//int on(int n, int pos) {return n | (1<<pos); }
//int off(int n, int pos) {return n & ~(1<<pos); }

pll dp[MAX+10][MAX+10];

pll calc(int me, int op) // first -> stress-free, second -> stressful
{
    if(!op) return mp(1,1);
    if(!me) return mp(0,1);

    if(dp[me][op].fi != -1) return dp[me][op];

    pll ret = mp(0,0);
    if(me > op+1) ret.fi = (ret.fi + calc(me-1, op).fi)%MOD;
    if(me > op) ret.fi = (ret.fi + calc(me, op-1).fi)%MOD;

    if(me > op)
        ret.se = (ret.se + calc(me-1, op).se) % MOD;
    else
    {
        ret.se = (ret.se + calc(me-1, op).se)%MOD;
        if( op-1 >= me) ret.se = (ret.se + calc(me, op-1).se)%MOD;
    }

    return dp[me][op] = ret;
}

int main()
{
    freopen("c:\\Users\\User\\Desktop\\in.txt", "r", stdin);
    freopen("c:\\Users\\User\\Desktop\\out.txt", "w", stdout);
    //ios_base::sync_with_stdio(0); cin.tie(0);

    int i, j, k, t, cs, me, she;
    mem(dp, -1);

    FRE(i,0,2000)
        FRL(j,0,i)
            calc(i,j);


    sf(t);
    FRE(cs,1,t)
    {
        scanf("%d-%d", &me, &she);
        pf("Case #%d: %lld %lld\n", cs, calc(me, she).fi , calc(me, she).se);
    }

    return 0;
}


