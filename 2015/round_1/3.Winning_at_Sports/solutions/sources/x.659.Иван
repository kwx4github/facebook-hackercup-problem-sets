#include <functional>
#include <algorithm>
#include <iostream>
#include <numeric>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <ctime>
#include <queue>
#include <set>
#include <map>
using namespace std;
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define fore(i, b, e) for (int i = (int)(b); i <= (int)(e); ++i)
#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; --i)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef long long i64;
typedef unsigned long long u64;
const int inf = 1e9+100500;
const int maxn = 2010;
const int mod = 1000000007;

void add(int& a, int b) { a += b; if (a >= mod) a -= mod; }

int d[maxn][maxn];
int n, m;

void solve(int cs) {
    memset(d, 0, sizeof d);
    scanf("%d-%d", &n, &m);
    d[1][0] = d[0][1] = 1;
    forn(i, n+1) forn(j, m+1) if (d[i][j]) {
        if (i != n && (i+1 > j) == (i>j)) {
            add(d[i+1][j], d[i][j]);
        }
        if (j != m && (i > j) == (i > j+1)) {
            add(d[i][j+1], d[i][j]);
        }
    }
    printf("Case #%d: %d %d\n", cs, d[n][m], d[m][m]);
}

int main() {
#ifdef HOME
//     freopen("input.txt", "r", stdin);
#endif

    int t;
    scanf("%d", &t);
    forn(i, t) {
        solve(i+1);
    }

#ifdef HOME
    cerr << "Time elapsed: " << clock() / 1000 << " ms" << endl;
#endif
    return 0;
}
