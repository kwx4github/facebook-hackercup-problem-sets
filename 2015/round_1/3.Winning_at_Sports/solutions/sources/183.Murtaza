#include <cstdio>

using namespace std;

const char InFile[]="pb3.in";
const char OutFile[]="pb3.out";
const int MaxN=5000;
const int MOD=1000000007;

int T,A,B;
int cat[MaxN];

long long mypow(long long A, long long B)
{
    long long sol=1;
    for(;B;B>>=1)
    {
        if(B&1)
        {
            sol*=A;
            sol%=MOD;
        }
        A*=A;
        A%=MOD;
    }
    return sol;
}

inline int comb(int N, int K)
{
    long long sol=1;
    for(int i=K+1;i<=N;++i)
    {
        sol*=i;
        sol%=MOD;
    }
    for(int i=1;i<=N-K;++i)
    {
        sol*=mypow(i,MOD-2);
        sol%=MOD;
    }
    return sol;
}

int dp[2006][2006];

int main()
{
    freopen(InFile,"r",stdin);
    freopen(OutFile,"w",stdout);

    for(int i=0;i<=2005;++i)
    {
        dp[i][0]=1;
        for(int j=1;j<i;++j)
        {
            if(j<i-1)
            {
                dp[i][j]=dp[i-1][j]+dp[i][j-1];
                if(dp[i][j]>=MOD)
                {
                    dp[i][j]-=MOD;
                }
            }
            else
            {
                dp[i][j]=dp[i][j-1];
            }
        }
    }

    for(int i=1;i<=2005;++i)
    {
        cat[i]=comb(2*i,i)-comb(2*i,i+1);
        if(cat[i]<0)
        {
            cat[i]+=MOD;
        }
    }

    scanf("%d",&T);
    for(int test=1;test<=T;++test)
    {
        scanf("%d-%d",&A,&B);
        int sol1=dp[A][B];

        int sol2=cat[B];
        if(B==0)
        {
            sol2=1;
        }

        printf("Case %d: %d %d\n",test,sol1,sol2);
    }

    return 0;
}






