#include <cstdio>
#include <cstdlib>
#include <cstring>
#define MODB 1000000007;

using namespace std;

int T,A,B;
int dp[2001][2001];

void clear() {
	for(int i = 0; i <= 2000; i++)
		for(int j = 0; j <= 2000; j++)
			dp[i][j] = -1;
	dp[0][0] = 1;
}

int sfree(int x, int y) {
	if(dp[x][y] != -1)
		return dp[x][y];
	int res = 0;
	if(x > 0 && (x-1) > y)
		res = (res + sfree(x-1,y))%MODB;	
	if(y > 0)
		res = (res + sfree(x,y-1))%MODB;
	return (dp[x][y] = res);
}

int chklegal(int x, int y) {
	if(x < 0 || y < 0)
		return 0;
	if(y != B && x > y)
		return 0;
	return 1;
}

int sful(int x, int y) {
	if(dp[x][y] != -1)
		return dp[x][y];
	int res = 0;
	if(chklegal(x-1,y))
		res = (res + sful(x-1,y))%MODB;
	if(chklegal(x,y-1))
		res = (res + sful(x,y-1))%MODB;
	return (dp[x][y] = res);
}

void read() {
	char cline[1024];
	scanf("%s",cline);
	int p = -1;
	for(int i = 0; i < strlen(cline) && p == -1; i++)
		if(cline[i] == '-')
			p = i;
	cline[p] = 0;
	sscanf(cline,"%d",&A);
	sscanf(cline+p+1,"%d",&B);
}

int main() {
	scanf("%d",&T);
	for(int cc = 1; cc <= T; cc++) {
		read();
		clear();
		dp[1][0] = 1;
		int r1 = sfree(A,B);
		clear();
		int r2 = sful(A,B);
		printf("Case #%d: %d %d\n",cc,r1,r2);
	}
	return 0;
}
