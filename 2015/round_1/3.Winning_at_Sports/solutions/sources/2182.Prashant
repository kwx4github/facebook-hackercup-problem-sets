#include<iostream>
#include<string.h>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<cmath>
#include<map>
#include<queue>
#include<bitset>
using namespace std;
#define ll long long
#define MOD 1000000007
#define infi (int)1e9
#define FOR(i,a,b) for(i = a; i < b; i++)
#define FORD(i,a,b) for(i = a; i >= b; i--)
#define REP(i,a) for(i = 0;i <= a; i++)
#define REPD(i,a) for(i = a; i >= 0; i--)
#define s(n)  scanf("%d", &n)
#define sc(n)  scanf("%c", &n)
#define sl(n) scanf("%lld", &n)
#define sf(n) scanf("%f", &n)
#define ss(n) scanf("%s", n);
#define all(a) a.begin(), a.end()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define fill(a, v) memset(a, v, sizeof(a))
#define PI 3.1415926535897932384626
int x, y;
ll dp[2005][2005];

ll stf(int i, int j)
{
    if(i > x || j > y) return 0;
    if(dp[i][j] != -1) return dp[i][j];

   //cout <<i <<" "<<j<<endl;
    if(i <= j && !(i == 0 && j == 0)) return dp[i][j] = 0;
    if(i == x && j == y)
        return dp[i][j] = 1;
    return (dp[i][j] = ((stf(i + 1, j) + stf(i, j + 1)) % MOD));
}
ll stfu(int i, int j)
{
        //cout <<i <<" "<<j<<"  "<<dp[i][j]<<endl;

    if(i > x || j > y) return 0;
    if(dp[i][j] != -1) return dp[i][j];
    if(i == x && j == y) return dp[i][j] = 1;
    if(i > j && !(j == y)) return dp[i][j] = 0;



    return (dp[i][j] = (stfu(i + 1, j) + stfu(i, j + 1)) % MOD);
}
int main()
{
    int t, i, j, k;
    char c;
    FILE *fi = fopen("inp.txt", "r");
    FILE *fo = fopen("out.txt", "w");
    fscanf(fi,"%d", &t);
    int ind = 1;
    while(t--) {

        fscanf(fi,"%d%c%d", &x, &c ,&y);
        FOR(i, 0, x + 2) {
            FOR(j, 0, y +2)
                dp[i][j] = -1;
       }
     //   cout << x << "  "<< c <<"    "<<y <<endl;
        ll sf = stf(0, 0);
       FOR(i, 0, x + 2) {
            FOR(j, 0, y + 2)
                dp[i][j] = -1;
       }

        ll sfu = stfu(0, 0);
       /* FOR(i,0, x + 2) {
        FOR(j, 0, y + 2)
            cout << dp[i][j] <<"  ";
            cout << endl;
       }*/
        fprintf(fo, "Case #%d: %lld %lld\n",ind, sf % MOD, sfu%MOD);
        ind++;
    }
}
