package winningofsports;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;

public class WinningAtSports {
	long[][] mem;

	public static void main(String[] args) {
		try {
			BufferedReader br = new BufferedReader(
					new FileReader("winning_at_sports.txt"));
			PrintWriter pw=new PrintWriter("winning_output.txt");
			String ns = null;
			if ((ns = br.readLine()) != null) {
				int n = Integer.parseInt(ns);
				for (int i = 1; i <= n; i++) {
					String[] t = br.readLine().split("-");
					int a = Integer.parseInt(t[0].trim());
					int b = Integer.parseInt(t[1].trim());
					long stfreeCount = 0;
					long stfullCount = 0;
					stfreeCount = dp(a, b);
					stfullCount = dps(a, b);
					/*System.out.println("Case #" + i + ": " + stfreeCount
							% 1000000007 + " " + stfullCount % 1000000007);*/
					pw.println("Case #" + i + ": " + stfreeCount
							% 1000000007 + " " + stfullCount % 1000000007);
				}
				pw.close();
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	private static long dp(int a, int b) {
		// TODO Auto-generated method stub
		long[][] dp = new long[a + 1][b + 1];
		for (int i = 1; i <= a; i++) {
			dp[i][0] = 1;
		}
		for (int i = 1; i <= a; i++) {
			for (int j = 1; j <= b; j++) {
				if (i == j) {
					continue;
				}
				dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % 1000000007;
			}
		}
		return dp[a][b];
	}

	public static long dps(int a, int b) {
		if(b==0){
			return 1;
		}
		long[][] dp = new long[a + 1][b + 1];
		for (int i = 1; i <= b; i++) {
			dp[0][i] = 1;
		}
		for (int i = 1; i <= a; i++) {
			for (int j = 1; j <= b; j++) {
				if (i == j) {
					dp[i][j] = dp[i - 1][j];
				}
				if (i < j) {
					dp[i][j] = (dp[i][j - 1] + dp[i - 1][j]) % 1000000007;
				}
				if (i > j) {
					dp[i][j] = dp[j][j];
				}
			}
		}
		return dp[a][b];
	}
}
