using System;
using System.Collections.Generic;
using System.Linq;

class Myon
{
    public Myon() { }
    public static void Main()
    {
        new Myon().run2();
    }

    Scanner cin;
    public void run2()
    {
        init();
        cin = new Scanner();
        int T = cin.nextInt();
        for (int i = 0; i < T; i++)
        {
            Console.Write("Case #{0}: ", i + 1);

            run();
        }
    }


    void init()
    {
    }

    int mod = 1000000007;
    void run()
    {
        string[] st = cin.next().Split('-');
        int A = int.Parse(st[0]);
        int B = int.Parse(st[1]);

        int[,] dp;
        dp = new int[A + 1, B + 1];

        dp[0, 0] = 1;
        for (int i = 0; i <= A; i++)
        {
            for (int j = 0; j <= B; j++)
            {
                if (i <= j && j != 0) continue;
                dp[i, j] %= mod;
                if (i != A) dp[i + 1, j] += dp[i, j];
                if (j != B) dp[i, j + 1] += dp[i, j];
            }
        }
        int ret1 = dp[A, B] % mod;

        dp = new int[A + 1, B + 1];
        dp[0, 0] = 1;

        for (int i = 0; i <= A; i++)
        {
            for (int j = 0; j <= B; j++)
            {
                if (i > j && j != B) continue;
                dp[i, j] %= mod;
                if (i != A) dp[i + 1, j] += dp[i, j];
                if (j != B) dp[i, j + 1] += dp[i, j];
            }
        }

        int ret2 = dp[A, B] % mod;
        Console.WriteLine(ret1 + " " + ret2);
        
    }



}

class Scanner
{
    string[] s;
    int i;

    char[] cs = new char[] { ' ' };

    public Scanner()
    {
        s = new string[0];
        i = 0;
    }

    public string next()
    {
        if (i < s.Length) return s[i++];
        string st = Console.ReadLine();
        while (st == "") st = Console.ReadLine();
        s = st.Split(cs, StringSplitOptions.RemoveEmptyEntries);
        i = 0;
        return s[i++];
    }

    public int nextInt()
    {
        return int.Parse(next());
    }

    public long nextLong()
    {
        return long.Parse(next());
    }

    public double nextDouble()
    {
        return double.Parse(next());
    }

}
