package FBHackerCup;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.Scanner;

public class Sport {
	static int N = 2001;
	static int mod = 1000000007;

	public static int free[][] = new int[N][N];
	public static int stress[][] = new int[N][N];
	
	public static void main(String[] args) throws IOException {
		final Scanner sc = new Scanner(
				//System.in);
				new File("/Users/rglez/Desktop/input.txt"));
		
		final BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(
				  //System.out));
		          new FileOutputStream("/Users/rglez/Desktop/output.txt")));
		
		final int t = Integer.parseInt(sc.nextLine());

		int a, b;
		
		// a = 0 || b = 0
		free[0][0] = 0;
		stress[0][0] = 1;
		for (int i = 1; i < N; i++) {
			free[i][0] = 1;
			stress[i][0] = 0;
			
			free[0][i] = 0;
			stress[0][i] = 1;
		}
		
		// Din
		for (a = 1; a < N; a++) {
			for (b = 1; b < N; b++) {
				if (a <= b) {
					free[a][b] = 0;
				} else {
					free[a][b] = (free[a-1][b] + free[a][b-1]) % mod;
				}
				
				if (a > b) {
					stress[a][b] = 0;
				} else {
					stress[a][b] = (stress[a-1][b] + stress[a][b-1]) % mod;
				}
			}
		}
		
		String[] line;
		for (int c = 1; c <= t; c++) {
			line = sc.nextLine().split("-");
			
			// Read input
			a = Integer.parseInt(line[0]);
			b = Integer.parseInt(line[1]);
			
			// Solve problem
		
			writer.write("Case #" + c + ": " + free[a][b] + " " + stress[b][b]);
			writer.newLine();
		}
	
		sc.close();
		writer.close();
	}

}
