#include <stdio.h>
#include <string.h>
#include <iostream>
using namespace std;
const int N = 2 * 2015;
const int MOD = 1000000007;
int dp1[N][N], dp2[N][N];
int dfs1(int sum, int diff){
    if(diff>sum)    return dp1[sum][diff] = 0;
    if(0==diff) return dp1[sum][diff] = 0;
    if(1==sum)  return dp1[sum][diff] = 1;
    if(-1^dp1[sum][diff])    return dp1[sum][diff];
    return dp1[sum][diff] = (dfs1(sum-1, diff-1) + dfs1(sum-1, diff+1)) % MOD;
}
int dfs2(int sum, int diff){
    if(diff<0)  return 0;
    if(diff>sum)    return dp2[sum][diff] = 0;
    if(0==sum)  return dp2[sum][diff] = 1;
    if(-1^dp2[sum][diff])   return dp2[sum][diff];
    return dp2[sum][diff] = (dfs2(sum-1, diff-1) + dfs2(sum-1, diff+1)) % MOD;
}
void init(){
    memset(dp1, -1, sizeof(dp1));
    memset(dp2, -1, sizeof(dp2));
}
int main()
{
//    freopen("in3.txt", "r", stdin);
//    freopen("ou3.txt", "w", stdout);
    init();
    int t, kase=0;
    cin >> t;
    while(t--){
        int x, y;
        char c;
        cin >> x >> c >> y;
        cout << "Case #" << (++kase) << ": " << dfs1(x+y, x-y) << ' ' << dfs2(y+y, 0) <<endl;
    }
    return 0;
}
