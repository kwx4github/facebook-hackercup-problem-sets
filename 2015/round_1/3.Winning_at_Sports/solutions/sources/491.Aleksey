#include <iostream>
#include <cstdio>

using namespace std;

const int MOD = 1000000007;
const int nn = 1 << 12;

int ways_free[nn][nn];
int ways_ful[nn][nn];

void solve() {
    int my, op;
    scanf("%d-%d", &my, &op);
    
    long long sfree = 0;
    long long sful = 0;
    
    sfree = ways_free[my][op];
    sful = ways_ful[op][op];
    
    sfree %= MOD;
    sful %= MOD;
    
    static int test_id;
    cout << "Case #" << ++test_id << ": " << sfree << ' ' << sful << endl;
    cerr << "Case #" << test_id << ": " << sfree << ' ' << sful << endl;
}

int main() {
    ways_free[1][0] = 1;
    for (int i = 1; i + 1 < nn; ++i) for (int j = 0; j < i; ++j) {
        ways_free[i + 1][j] = (ways_free[i + 1][j] + ways_free[i][j]) % MOD;
        if (j + 1 < i) ways_free[i][j + 1] = (ways_free[i][j + 1] + ways_free[i][j]) % MOD;
    }
    
    ways_ful[0][0] = 1;
    for (int i = 0; i + 1 < nn; ++i) for (int j = 0; j <= i; ++j) {
        ways_ful[i + 1][j] = (ways_ful[i + 1][j] + ways_ful[i][j]) % MOD;
        if (j + 1 <= i) ways_ful[i][j + 1] = (ways_ful[i][j + 1] + ways_ful[i][j]) % MOD;
    }
    
    int t;
    cin >> t;
    while (t --> 0) solve();
    return 0;
}