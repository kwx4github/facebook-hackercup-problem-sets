#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <utility>

#include <cmath>
#include <iostream>
#include <fstream>

#include <string>
#include <vector>
#include <queue>
#include <map>
#include <algorithm>
#include <set>
#include <sstream>
#include <stack>
using namespace std;

#define MEM(a, b) memset(a, (b), sizeof(a))
#define CLR(a) memset(a, 0, sizeof(a))
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define S(X) ( (X) * (X) )
#define SZ(V) (int )V.size()
#define FORN(i, n) for(i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define ALL(V) V.begin(), V.end()

typedef pair<int,int> PII;
typedef pair<double, double> PDD;
typedef pair<int, long long> PILL;
typedef vector<int> VI;
typedef vector<PII > VP;

//#define IN freopen("cooking_the_books_example_input.txt", "r", stdin);
#define IN freopen("winning_at_sports.txt", "r", stdin);

#define OUT freopen("output.txt", "w", stdout);

#define MAX_SIZE 2010

int T, A, B;
int dp[MAX_SIZE][MAX_SIZE];

int main()
{
    IN
    OUT
    
    int i, j, t;

    FORN(i, MAX_SIZE) {
    	dp[i][0] = 1;
    }

    FORN(i, MAX_SIZE) {
    	dp[i][i] = 0;
    }

    FORN(i, MAX_SIZE) {
    	FORAB(j, 1, i-1) {
    		dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % 1000000007;
    	}
    }

    scanf("%d", &T);
    
    for(t=1 ; t<=T; t++ ) {
    	scanf("%d-%d", &A, &B);
        printf("Case #%d: %d %d\n", t, dp[A][B], dp[B+1][B-1]);
    }
    
    return 0;
}