// Homework.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <stdio.h>
#include <set>
#include <string>
#include <map>

using std::map;
using std::set;
using std::string;
					 
typedef unsigned long long int ulli;

#define MAX 2001
unsigned long STRESS_FREE[MAX][MAX];
unsigned long STRESS_FULL[MAX][MAX];

const unsigned long int module = 1e9 + 7;

void initStressFee() {
	for (unsigned long int i = 0; i < MAX; ++i)
		for(unsigned long int j = i; j < MAX; ++j)
			STRESS_FREE[i][j] = 0;

	for (unsigned long int i = 1; i < MAX; ++i)
		STRESS_FREE[i][0] = 1;

	for (unsigned long int i = 1; i < MAX; ++i)
		for(unsigned long int j = 1; j < i; ++j)
			STRESS_FREE[i][j] = ( STRESS_FREE[i - 1][j] + STRESS_FREE[i][j - 1] ) % module;
}

void initStressFull() {
	for (unsigned long int j = 1; j < MAX; ++j)
		STRESS_FULL[0][j] = 1;

	for (unsigned long int i = 0; i < MAX; ++i)
		STRESS_FULL[i][0] = 0;

	for (unsigned long int i = 1; i < MAX; ++i)	 {
		STRESS_FULL[i][i] = STRESS_FULL[i-1][i];
		for(unsigned long int j = i + 1; j < MAX; ++j)
			STRESS_FULL[i][j] =  ( STRESS_FULL[i - 1][j] + STRESS_FULL[i][j - 1] ) % module;
	}

	for (unsigned long int i = 1; i < MAX; ++i)
		for(unsigned long int j = 1; j < i; ++j)
			STRESS_FULL[i][j] =  STRESS_FULL[i - 1][j];



}




int _tmain(int argc, _TCHAR* argv[])
{
	initStressFee();
	initStressFull();

	FILE *pFileRead, *pFileWrite;
	pFileRead = fopen("winning_at_sports.txt", "r+");
	pFileWrite = fopen("winning_at_sports_out.txt", "w+");

	int testCases;
	fscanf(pFileRead, "%d", &testCases);
	for (int i = 1; i <= testCases; ++i) 
	{
		unsigned long int h, a;
		fscanf(pFileRead, "%lu-%lu", &h, &a);

		unsigned long sFree = STRESS_FREE[h][a];
		unsigned long sFull = STRESS_FULL[h][a];

		fprintf(pFileWrite, "Case #%d: %lu %lu\n", i, sFree, sFull);
	}
	fclose(pFileRead);
	fclose(pFileWrite);

	return 0;
}

//int _tmain(int argc, _TCHAR* argv[])
//{
//	FILE *pFileRead, *pFileWrite;
//	pFileRead = fopen("in.txt", "r+");
//	pFileWrite = fopen("out.txt", "w+");
//
//	int testCases;
//	fscanf(pFileRead, "%d", &testCases);
//	for (int i = 1; i <= testCases; ++i) 
//	{
//		int words;
//		fscanf(pFileRead, "%d", &words);
//		
//		int total_count = 0;
//		map<string, string> prefix_word;
//
//		for(int j = 1; j <= words; ++j){
//
//			char str[1000000];
//			fscanf(pFileRead, "%s", str);
//			string s(str);
//			int k = 1;
//			int pos = 1;
//			for(;pos < s.length();) {
//				string temp = s.substr(0 , pos);
//				if (prefix_word.find(temp) == prefix_word.end()) {
//					prefix_word[temp] = s;
//					total_count += k;
//					break;
//				} else {
//					string word = prefix_word[temp];
//					if (word == s) {
//						total_count += k;
//						break;
//					}
//					if (word.size() < s.size() && word == s.substr(0, word.size()))
//						pos = word.size() + 1;
//					else
//						++pos;
//					++k;
//				}
//			}
//			if (pos == s.length()) {
//				total_count += k;
//			}
//
//		}
//		fprintf(pFileWrite, "Case #%d: %d\n", i, total_count);
//
//	}
//
//	return 0;
//}

