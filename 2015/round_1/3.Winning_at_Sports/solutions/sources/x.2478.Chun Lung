#include<stdio.h>
#include<cstring>
#include<stack>
#include<queue>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<stack>
#include<queue>
#include<cassert>
#define N 2222
#define M 555555
#define LL long long
#define FOE(i,a,b) for(int i=(a);i<=(b);++i)
#define CLR(a,b) memset(a,b,sizeof(a))
const int mod=1000000007;
using namespace std;
int t,n,m,q,k,cs=0;
int gu,gv;
int dp[N][N][2];
int gg[N][N][2][2];
int solvegg(int x,int y,int a,int b){
	int &rt=gg[x][y][a][b];
	if(rt!=-1)return rt;
	if(x==1 && !y && a && !b)return rt=1;
	if(!x && y==1 && !a && b)return rt=1;
	rt=0;
	if(a==1 && b==0){
		if(x==y && y==gv && x)rt+=solvegg(x-1,y,0,1),rt%=mod;
		if(x>y+1)rt+=solvegg(x-1,y,a,b),rt%=mod;
		if(y)rt+=solvegg(x,y-1,a,b),rt%=mod;//still match
	}else if(a==0 && b==1){
		if(x)rt+=solvegg(x-1,y,a,b),rt%=mod;
		if(y>x)rt+=solvegg(x,y-1,a,b),rt%=mod;
	}
	/*
	   if(a==1){//x<=y sometime
	   if(x==y && y)rt+=solvegg(x,y-1,0),rt%=mod;
	   if(x)rt+=solvegg(x-1,y,1),rt%=mod;
	   if(x<y)rt+=solvegg(x,y-1,1),rt%=mod;//still match
	   }else{
	   if(x>y+1 && x)rt+=solvegg(x-1,y,0),rt%=mod;
	   if(y)rt+=solvegg(x,y-1,0),rt%=mod;
	   }
	   */
	return rt;
}
int solve(int x,int y,int v){
	int &rt=dp[x][y][v];
	if(rt!=-1)return rt;
	if(x==1 && !y && !v)return rt=1;
	rt=0;
	if(x<y && !v)return rt=0;
	if(v==1){//x<=y sometime
		if(x==y && y)rt+=solve(x,y-1,0),rt%=mod;
		//if(x && x<=y)rt+=solve(x-1,y,),rt%=mod;
		if(x)rt+=solve(x-1,y,1),rt%=mod;
		if(x<y)rt+=solve(x,y-1,1),rt%=mod;//still match
	}else{
		if(x>y+1 && x)rt+=solve(x-1,y,0),rt%=mod;
		if(y)rt+=solve(x,y-1,0),rt%=mod;
	}
	return rt;
}
int main(){
	scanf("%d",&t);
	while(t--){
		scanf("%d-%d",&gu,&gv);
		int sm=gu+gv;
		//CLR(dp,-1);
		CLR(gg,-1);
		//printf("u:%d v:%d\n",u,v);
		//int a1=solve(gu,gv,0),a2=solve(gu,gv,1);
		int a3=solvegg(gu,gv,1,0),a4=solvegg(gu,gv,0,1);
		++cs;
		//printf("Case #%d: %d %d\n",cs,a1,a2);
		printf("Case #%d: %d %d\n",cs,a3,a4);
	}
	return 0;
}
