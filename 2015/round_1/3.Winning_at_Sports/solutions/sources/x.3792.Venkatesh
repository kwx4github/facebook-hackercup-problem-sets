import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.HashMap;


public class WinningAtSports {
	
	public static BigInteger r1 = new BigInteger("0");
	public static BigInteger r2 = new BigInteger("0");
	public static BigInteger zero = new BigInteger("0");
	public static BigInteger one = new BigInteger("1");
	public static BigInteger mod = new BigInteger("1000000007");
	
	public static void main(String[] args) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine());
		String s = "";
		String[] stary = new String[2];
		int x;
		int y;
		for(int i=0;i<t;i++)
		{
			r1=zero;
			r2=zero;
			s = br.readLine();
			stary = s.split("\\-");
			x = Integer.parseInt(stary[0]);
			y = Integer.parseInt(stary[1]);
			HashMap<Integer,BigInteger> hmf = new HashMap<Integer,BigInteger>();
			HashMap<Integer,BigInteger> hmp = new HashMap<Integer,BigInteger>();
			getFree(x,y,1,0,hmf);
			r1 = r1.mod(mod);
			//System.out.println(r1);
			//r1=zero;
			getPain(x,y,0,1,hmp);
			r2 = r2.mod(mod);
			//System.out.println(r2);
			System.out.println("Case #"+(i+1)+": "+r1+" "+r2);
		}
	}
	
	public static void getFree(int A, int B, int a, int b, HashMap<Integer,BigInteger> hmf)
	{
		if(hmf.get(hash(a,b))!=null)
		{
			r1 = r1.add(hmf.get(hash(a,b)));
			return ;
		}
		
		BigInteger temp = r1;
		//System.out.println(a+" "+b+" "+r1);
		if(a>A||b>B)
			return ;
		if(b==a&&a!=A)
			return ;
		if(a==A&&b==B){
			r1 = r1.add(one);
			return ;
		}
		getFree(A,B,a+1,b,hmf);
		getFree(A,B,a,b+1,hmf);
		
		BigInteger diff = r1.subtract(temp);
		hmf.put(hash(a,b),diff);
		
	}
	

	
	public static void getPain(int A, int B, int a, int b, HashMap<Integer,BigInteger> hmp)
	{
		if(hmp.get(hash(a,b))!=null){
			r2 = r2.add(hmp.get(hash(a,b)));
			return ;
		}
		BigInteger temp = r2;
		//System.out.println(a+" "+b+" "+r1);
		if(a>A||b>B)
			return ;
		if(a>b&&b!=B)
			return ;
		if(a==A&&b==B){
			r2=r2.add(one);
			return ;
		}
		getPain(A,B,a+1,b,hmp);
		getPain(A,B,a,b+1,hmp);
		hmp.put(hash(a,b),r2.subtract(temp));
		
	}
	
	public static int hash(int a, int b)
	{
		return (a+b)*(a+b+1)/2+a;
	}
}
