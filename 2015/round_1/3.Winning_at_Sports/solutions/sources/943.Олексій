#include <queue>
#include <vector>
#include <climits>
#include <iostream>
#include <algorithm>
#include <memory.h>
using namespace std;
const int mod = 1e9 + 7;
const int N = 2005;
int first_dp[N][N];
int dp[N][N];
int main(){
    //freopen("C_input.txt", "r", stdin);
    freopen("winning_at_sports.txt", "r", stdin);
    freopen("winning_at_sports_out.txt", "w", stdout);
    for(int i = 1; i <= 2000; ++i){
        first_dp[i][0] = 1;
    }
    for(int i = 2; i <= 2000; ++i){
        for(int j = 1; j < i; ++j){
            first_dp[i][j] = first_dp[i][j - 1];
            if(i - 1 > j)
                first_dp[i][j] += first_dp[i - 1][j];
            if(first_dp[i][j] >= mod) first_dp[i][j] -= mod;
        }
    }
    dp[0][0] = 1;
    for(int i = 0; i <= 2000; ++i){
        for(int j = 0; j <= i; ++j){
            if(i == j && j == 0) continue;
            dp[i][j] = dp[i][j - 1];
            if(i - 1 >= j)
                dp[i][j] += dp[i - 1][j];
            if(dp[i][j] >= mod) dp[i][j] -= mod;
        }
    }
    int t;
    scanf("%d", &t);
    for(int qw = 1; qw <= t; ++qw){
        int x, y;
        scanf("%d-%d", &x, &y);
        printf("Case #%d %d %d\n", qw,  first_dp[x][y], dp[y][y]);
    }
    return 0;
}
