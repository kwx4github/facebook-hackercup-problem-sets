//
//  main.cpp
//  Problem 2.3
//
//  Created by Maxim Piskunov on 1/17/15.
//  Copyright (c) 2015 Maxim Piskunov. All rights reserved.
//

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <string>

using namespace std;

struct input {
    int myScore;
    int opponentScore;
};

struct output {
    int stressFreeCount;
    int stressfullCount;
};

void read(ifstream &in, input &test) {
    in >> test.myScore >> test.opponentScore;
    test.opponentScore = -test.opponentScore;
}

void write(ofstream &out, output test) {
    out << test.stressFreeCount << " " << test.stressfullCount;
}

output solve (input test) {
    output result;
    test.myScore++;
    test.opponentScore++;
    
    vector <vector <int> > stressFree;
    stressFree.resize(test.myScore);
    for (int i = 0; i < test.myScore; i++) {
        stressFree[i].resize(test.opponentScore);
        for (int j = 0; j < test.opponentScore; j++) {
            stressFree[i][j] = -1;
        }
    }
    
    for (int i = 0; i < test.myScore; i++) {
        for (int j = i; j < test.opponentScore; j++) {
            stressFree[i][j] = 0;
        }
    }
    
    for (int i = 0; i < test.myScore; i++) {
        if (stressFree[i][test.opponentScore-1] == -1) stressFree[i][test.opponentScore-1] = 1;
    }
    
    for (int j = 0; j < test.opponentScore; j++) {
        if (stressFree[test.myScore-1][j] == -1) stressFree[test.myScore-1][j] = 1;
    }
    
    for (int i = test.myScore - 2; i >= 0; i--) {
        for (int j = test.opponentScore - 2; j >= 0; j--) {
            if (stressFree[i][j] == -1) {
                stressFree[i][j] = (stressFree[i+1][j] + stressFree[i][j+1]) % 1000000007;
            }
        }
    }
    
    result.stressFreeCount = stressFree[1][0];
    
    stressFree.clear();
    
    
    vector <vector <int> > stressfull;
    stressfull.resize(test.myScore);
    for (int i = 0; i < test.myScore; i++) {
        stressfull[i].resize(test.opponentScore);
        for (int j = 0; j < test.opponentScore; j++) {
            stressfull[i][j] = -1;
        }
    }
    
    for (int i = 0; i < test.myScore; i++) {
        for (int j = 0; j < i && j < test.opponentScore; j++) {
            stressfull[i][j] = 0;
        }
    }
    
    for (int i = 0; i < test.myScore; i++) {
        if (stressfull[i][test.opponentScore-1] == -1) stressfull[i][test.opponentScore-1] = 1;
    }
    
    for (int j = 0; j < test.opponentScore; j++) {
        if (stressfull[test.myScore-1][j] == -1) stressfull[test.myScore-1][j] = 1;
    }
    
    for (int i = test.myScore - 2; i >= 0; i--) {
        for (int j = test.opponentScore - 2; j >= 0; j--) {
            if (stressfull[i][j] == -1) {
                stressfull[i][j] = (stressfull[i+1][j] + stressfull[i][j+1]) % 1000000007;
            }
        }
    }
    
    result.stressfullCount = stressfull[0][0];
    
    stressfull.clear();
    
    return result;
}

void readAll(vector <input> &tests) {
    ifstream in("../../../../../input.txt");
    
    int T;
    in >> T;
    tests.resize(T);
    for (int i = 0; i < T; i++) {
        read(in, tests[i]);
    }
    
    in.close();
}

void writeAll(vector <output> &results) {
    ofstream out("../../../../../output.txt");
    
    out << "Case #1: ";
    write(out, results[0]);
    for (int i = 1; i < results.size(); i++) {
        out << endl << "Case #" << i+1 << ": ";
        write(out, results[i]);
    }
    
    out.close();
}

void solveAll(vector <input> &tests, vector <output> &results) {
    results.resize(tests.size());
    for (int i = 0; i < tests.size(); i++) results[i] = solve(tests[i]);
}

int main(int argc, const char * argv[]) {
    vector <input> tests;
    vector <output> results;
    
    readAll(tests);
    solveAll(tests, results);
    writeAll(results);
    
    return 0;
}