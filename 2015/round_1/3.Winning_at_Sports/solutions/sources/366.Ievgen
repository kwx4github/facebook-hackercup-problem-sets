#include <iostream>
#include <string>
#include <cstdio>
#include <set>
#include <algorithm>
#include <vector>
#include <cstring>
#include <map>
#include <queue>
#include <bitset>
#include <ctime>
#pragma comment(linker, "/STACK:256000000")

using namespace std;

const int maxN = 2100;
const int mod = 1000000007;

int stressfull[maxN][maxN];
int stressfree[maxN][maxN];

void add_mod(int& x, int value) {
	x += value;
	if (x >= mod) {
		x -= mod;
	}
}

void solve(int tcase) {
	memset(stressfull, 0, sizeof(stressfull));
	memset(stressfree, 0, sizeof(stressfree));
	printf("Case #%d: ", tcase);

	int a, b;
	scanf("%d-%d", &a, &b);

	stressfull[0][0] = 1;
	for (int i = 0; i <= a; ++i) {
		for (int j = 0; j <= b; ++j) {
			add_mod(stressfull[i][j + 1], stressfull[i][j]);
			if (i + 1 <= j || j == b) {
				add_mod(stressfull[i + 1][j], stressfull[i][j]);
			}
		}
	}

	stressfree[0][0] = 1;
	for (int i = 0; i <= a; ++i) {
		for (int j = 0; j <= b; ++j) {
			add_mod(stressfree[i + 1][j], stressfree[i][j]);
			if (i > j + 1) {
				add_mod(stressfree[i][j + 1], stressfree[i][j]);
			}
		}
	}
	printf("%d %d\n", stressfree[a][b], stressfull[a][b]);
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("winning_ievgen.txt", "w", stdout);

	int t;
	scanf("%d", &t);
	for (int i = 1; i <= t; ++i) {
		cerr << i << endl;
		solve(i);
	}

	return 0;
}
