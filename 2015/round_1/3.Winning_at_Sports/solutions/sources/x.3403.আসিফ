/*
ID: Asif Jawad
LANG: C++
TASK:
*/

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <climits>
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <iterator>
#include <utility>
#include <sstream>

using namespace std;

#define Read(f) freopen(f,"r",stdin)
#define Write(f) freopen(f,"w",stdout)

#define geti(n) scanf("%d",&n)
#define getll(n) scanf("%lld",&n)
#define getf(n) scanf("%lf",&n);

#define ll long long
#define pii pair<int,int>
#define pdd pair<double,double>
#define ff first
#define ss second
#define vi vector<int>

#define pi acos(-1)
#define inf LONG_MAX
#define eps 1e-9
#define mem(a,n) memset(a,n,sizeof a)
#define countbit(x) __builtin_popcountll(x)

#define rep(i,n) for(int i = 0;i < n;i++)
#define Rep(i,a,n) for(int i = (a) ;i < n;i++)
#define REP(i,a,n) for(int i = (a); i >= n;i--)

#define pb push_back
#define sz size()
#define mp make_pair

inline int Set(int N,int pos){return N = N | (1 << pos);}

inline int Reset(int N,int pos){return N = N & ~ (1 <<pos);}

inline bool check(int N,int pos) {return (bool) (N & (1 << pos) );}

template<class T>
T gcd(T a,T b)
{
    return (a % b == 0) ? b : gcd( b, a%b );
}

template <class T>

T lcm(T a,T b)
{
    return (a / gcd(a,b)) * b;
}

template<class T>

bool is_prime(T n)
{
    if( (n % 2 == 0 && n > 2) || n < 2 )return 0;

    for( T i = 3; i * i <= n ; i = i + 2 ){

        if( n % i == 0 )return 0;
    }

    return 1;
}

//template ends here

ll dp[4010][2010];

ll m = 1000000007;

int a,b;

ll sful(int i,int c)
{	
	if(i-c == b)return 1;
	if(i == a + b)return 1;
	if(dp[i][c] != -1)return dp[i][c];

	ll ret1 = 0,ret2 = 0;

	if(i-c > c && c+1 <= a)ret1 = sful(i+1,c+1);
	if(i+1-c <= b)ret2 = sful(i+1,c);

	return dp[i][c] = ((ret1 % m) + (ret2 % m) ) % m;
}

ll sfree(int i,int c)
{
	if(i-c == b)return 1;
	if(c == a)return 1;
	if(i == a +b)return 1;
	
	if(dp[i][c] != -1)return dp[i][c];

	ll ret1 = 0,ret2 = 0;
	
	if(c+1 <= a)ret1 = sfree(i+1,c+1);
	if(i-c < c-1)ret2 = sfree(i+1,c);
	
	return dp[i][c] = ((ret1 % m) + (ret2 % m)) % m;
}

int main()
{
    Read("in");
    Write("out.txt");
	
	int t;
	
	cin >> t;

	Rep(cases,1,t+1){
		
		scanf("%d-%d",&a,&b);
		
		mem(dp,-1);
		
		printf("Case #%d: ",cases);
		cout << sfree(0,0) << ' ';
		mem(dp,-1);
		cout << sful(0,0) << endl;
	}
    return 0;
}

