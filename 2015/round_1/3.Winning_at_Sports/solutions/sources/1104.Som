using namespace std;
#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <map>
#include <set>

#define foreach(x, v) for (typeof (v).begin() x=(v).begin(); x !=(v).end(); ++x)
#define For(i, a, b) for (int i=(a); i<(b); ++i)
#define D(x) cout << #x " is " << x << endl
#define mod 1000000007
#define ll long long
#define pb push_back
#define N 10000007
using namespace std;
ll powmod(long long a, long long b, long long c)
{
    ll ret=1LL;
    while(b)
    {
        if(b & 1)
            ret = (ret*a)%c;
        a=(a*a)%c;

        b>>=1;
    }
    return (ret)%c;
}

ll hunt[2002][2002],ethan[2002][2002];
int main()
{
	int i,t,a,b,j,k;
	cin>>t;
	for(k=1;k<=t;++k)
	{
		scanf("%d-%d",&a,&b);
		hunt[1][0]=1;
		for(i=1;i<=a;++i)
			hunt[i][0]=1;
		for(i=2;i<=a;++i)
		{
			for(j=0;j<=min(b,i-1);++j)
			{
				hunt[i][j]=0;
				if(j>0)
					hunt[i][j]+=hunt[i][j-1];
				if(i-j>1)
					hunt[i][j]+=hunt[i-1][j];
				hunt[i][j]%=mod;
			}
		}
		for(i=0;i<=b;++i)
			ethan[0][i]=1;
		for(i=1;i<=a;++i)
			for(j=0;j<=b;++j)
			{
				if(i>j)
				{
					if(j<b)
						ethan[i][j]=0;
					else
						ethan[i][j]=ethan[i-1][j];
				}
				else if(i<j)
						ethan[i][j]=ethan[i][j-1]+ethan[i-1][j];
				else
						ethan[i][j]=ethan[i-1][j];
				ethan[i][j]%=mod;
			}
		printf("Case #%d: %ld %ld\n",k,hunt[a][b],ethan[a][b]);
	}
	return 0;
}
