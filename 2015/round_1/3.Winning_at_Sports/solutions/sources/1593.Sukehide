
#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#define REP(i, n) for(int i = 0; i < (int)(n); ++i)
using namespace std;
typedef long long ll;

const int MOD = 1000000007;

int memo1[2010][2010];
int memo2[2010][2010];
int A, B;

int solve1(int a, int b) {
  int& res = memo1[a][b];
  if(res < 0){
    if(a == A || b == B){
      res = 1;
    }else{
      res = solve1(a+1, b);
      if(b+1 < a){
	res = (res + solve1(a, b+1)) % MOD;
      }
    }
  }
  return res;
}

int solve2(int a, int b) {
  int& res = memo1[a][b];
  if(res < 0){
    if(a == A || b == B){
      res = 1;
    }else{
      res = solve2(a, b+1);
      if(a+1 <= b){
	res = (res + solve2(a+1, b)) % MOD;
      }
    }
  }
  return res;
}


int main(void) {
  int nCase;
  scanf("%d", &nCase);
  
  REP(iCase, nCase){
    scanf("%d-%d", &A, &B);
    memset(memo1, -1, sizeof memo1);
    memset(memo2, -1, sizeof memo2);
    
    printf("Case #%d: %d %d\n", iCase+1, solve1(1, 0), solve2(0, 0));
  }
  
  return 0;
}
