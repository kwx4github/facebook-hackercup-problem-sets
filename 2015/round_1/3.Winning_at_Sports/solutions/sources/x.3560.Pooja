#include<stdio.h>
#include<stdlib.h>
#include<math.h>
int fast_pow(long long base, long long n,long long M)
{
    if(n==0)
       return 1;
    if(n==1)
    return base;
    long long halfn=fast_pow(base,n/2,M);
    if(n%2==0)
        return ( halfn * halfn ) % M;
    else
        return ( ( ( halfn * halfn ) % M ) * base ) % M;
}
int findMMI_fermat(int n,int M)
{
    return fast_pow(n,M-2,M);
}
int get_int()
{
    int n1=0,c=getchar();
    while(!(c>='0'&&c<='9'))
    {
       c=getchar();
    }
    while(c>='0'&&c<='9')
    {
     n1=n1*10+c-'0';
    c=getchar();
    }
    return n1;
}

int main()
{
    long long fact[4001];
    long long cat[2001];
    cat[0]=1;cat[1]=1;cat[2]=2;
    fact[0]=1;
    int i,j,t;
    int MOD=1000000007;
    for(i=1;i<=4000;i++)
    {
        fact[i]=(fact[i-1]*i)%MOD;
    }
    for(i=3;i<=2000;i++)
    {
        cat[i] = 0;
        for ( j=0; j<i; j++)
            cat[i] += (cat[j] * cat[i-j-1])%MOD;
        cat[i]=cat[i]%MOD;
    }
    scanf("%d",&t);j=t;
    while(t--)
    {
        int a,b;
        long long numerator,denominator,mmi_denominator,sfree=0;
        a=get_int();
        b=get_int();

        if(b==0)
        {
            printf("Case #%d: 1 0\n",j-t);
        }
        else if(b==1)
        {
            printf("Case #%d: %d 1\n",j-t,a-1);
        }
        else if(a==(b*2))
        {
        numerator=fact[a+b-1];
        denominator=(fact[a]*fact[b-1])%MOD;
        mmi_denominator=findMMI_fermat(denominator,MOD);
        sfree=(numerator*mmi_denominator)%MOD;
        printf("Case #%d: %lld %lld\n",j-t,sfree,cat[b]);
        }
        else
        {
        numerator=fact[a-1];
        denominator=(fact[b-1])%MOD;
        mmi_denominator=findMMI_fermat(denominator,MOD);
        sfree=(numerator*mmi_denominator)%MOD;
        printf("Case #%d: %lld %lld\n",j-t,sfree,cat[b]);

        }

    }
    return 0;
}
