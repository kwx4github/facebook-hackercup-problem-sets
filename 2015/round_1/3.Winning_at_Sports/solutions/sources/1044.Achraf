#include <stdio.h>
#include <string.h>

#define maxn 2001

const int mod = (int) 1e9 + 7;

int f[maxn][maxn], g[maxn][maxn];

int  stressFul( int p1, int p2, int g1, int g2 ) {
	long long res = g[p1][p2], take, dontTake;

	if( res == -1 ) {
		if( p2 >= g2 ) return 1;

		take = (p1 + 1 <= p2) ? stressFul(p1+1, p2, g1, g2) : 0;
		dontTake = stressFul(p1, p2+1, g1, g2);

		res = take + dontTake;
		if( res >= mod ) res %= mod;

		g[p1][p2] = res;
	}
	
	return res;
}

int stressFree( int p1, int p2, int g1, int g2 ) {
	long long res = f[p1][p2], take, dontTake;

	if( res == -1 ) {
		if( p1 >= g1 || p2 >= g2 ) return 1;
		
		take = stressFree(p1+1, p2, g1, g2);
		dontTake = (p2+1 < p1) ? stressFree(p1, p2+1, g1, g2) : 0;

		res = take + dontTake;
		if( res >= mod ) res %= mod;

		f[p1][p2] = res;
	}

	return res;
}	


int main( void ) {
	int T, t;
	scanf("%i", &T);

	for( t = 1; t <= T; t++ ) {
		int a, b;
		scanf("%i-%i", &a, &b);

		memset(f, -1, sizeof(f));
		memset(g, -1, sizeof(g));
	
		

		printf("Case #%i: %i %i\n", 
				t, stressFree(1, 0, a, b), stressFul(0, 1, a, b));
	}

	return 0;
}
