import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.FilenameFilter;
import java.util.Locale;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.FileOutputStream;
import java.io.File;
import java.util.StringTokenizer;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args) {
		Locale.setDefault(Locale.US);
		InputStream inputStream;
		try {
			final String regex = "winning.*at.*sports.*[.]txt";
			File directory = new File(".");
			File[] candidates = directory.listFiles(new FilenameFilter() {
				public boolean accept(File dir, String name) {
					return name.matches(regex);
				}
			});
			File toRun = null;
			for (File candidate : candidates) {
				if (toRun == null || candidate.lastModified() > toRun.lastModified())
					toRun = candidate;
			}
			inputStream = new FileInputStream(toRun);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("winningatsports.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		WinningAtSports solver = new WinningAtSports();
		int testCount = Integer.parseInt(in.next());
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}
}

class WinningAtSports {
    static final long MODULO = 1000000007;

    public void solve(int testNumber, InputReader in, PrintWriter out) {
        String data = in.next();
        String[] parts = data.split("-");
        if (parts.length != 2) throw new RuntimeException();
        int score1 = Integer.parseInt(parts[0]);
        int score2 = Integer.parseInt(parts[1]);
        if (score1 <= score2 || score2 < 0) throw new RuntimeException();
        long[][] stressfree = new long[score1 + 1][score2 + 1];
        long[][] stressful = new long[score1 + 1][score2 + 1];
        stressfree[0][0] = 1;
        stressful[0][0] = 1;
        for (int s1 = 0; s1 <= score1; ++s1) {
            for (int s2 = 0; s2 <= score2; ++s2) {
                stressfree[s1][s2] %= MODULO;
                stressful[s1][s2] %= MODULO;
                if (s1 < score1) {
                    stressfree[s1 + 1][s2] += stressfree[s1][s2];
                }
                if (s2 + 1 < s1 && s2 < score2) {
                    stressfree[s1][s2 + 1] += stressfree[s1][s2];
                }
                if (s2 == score2) {
                    if (s1 < score1) {
                        stressful[s1 + 1][s2] += stressful[s1][s2];
                    }
                } else {
                    if (s1 < score1 && s1 + 1 <= s2) {
                        stressful[s1 + 1][s2] += stressful[s1][s2];
                    }
                    stressful[s1][s2 + 1] += stressful[s1][s2];
                }
            }
        }
        out.println("Case #" + testNumber + ": " + stressfree[score1][score2] + " " + stressful[score1][score2]);
    }
}

class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

}

