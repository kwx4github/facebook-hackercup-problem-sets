#include <stdio.h>
#include <iostream>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <cstring>
#include <math.h>
#include <algorithm>
#include <complex>
#include <ctime>
#include <iomanip>
#include <cassert>
#include <sstream>
#include <iterator>

using namespace std;

#define file "file"
#define mp make_pair
#define pb push_back
#define xx real()
#define yy imag()
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef complex<double> point;

const int MAXN = 2e3 + 5;
const ll MOD = 1e9 + 7;

ll dp[2 * MAXN][MAXN];
ll dp2[2 * MAXN][MAXN];

void solve(){
    int a,b;
    scanf("%d-%d",&a,&b);
    int n = a + b;
    for(int i = 1;i <= n;i++){
        for(int j = 0;j <= a;j++){
            dp[i][j] = 0;
            dp2[i][j] = 0;
        }
    }
    dp[1][1] = 1;
    for(int i = 2;i <= n;i++){
        int mn = min(a,i - 1);
        for(int j = 0;j <= mn;j++){
            if(!dp[i - 1][j]) continue;
            int j2 = i - 1 - j;
            if(j2 + 1 < j && j2 + 1 <= b){
                dp[i][j] = (dp[i][j] + dp[i - 1][j]) % MOD;
            }
            if(j + 1 <= a){
                dp[i][j + 1] = (dp[i][j + 1] + dp[i - 1][j]) % MOD;
            }
        }
    }
    printf("%I64d ",dp[n][a]);
    dp2[1][0] = 1;
    for(int i = 2;i <= n;i++){
        int mn = min(a,i - 1);
        for(int j = 0;j <= mn;j++){
            if(!dp2[i - 1][j]) continue;
            int j2 = i - 1 - j;
            if(j2 + 1 <= b){
                dp2[i][j] = (dp2[i][j] + dp2[i - 1][j]) % MOD;
            }
            if(j + 1 <= j2 && j + 1 <= a){
                dp2[i][j + 1] = (dp2[i][j + 1] + dp2[i - 1][j]) % MOD;
            }
            else if(j2 == b && j + 1 <= a){
                dp2[i][j + 1] = (dp2[i][j + 1] + dp2[i - 1][j]) % MOD;
            }
        }
    }
    printf("%I64d\n",dp2[n][a]);
}

int main()
{
	#ifndef ONLINE_JUDGE
    assert(freopen("input.txt","r",stdin));
    assert(freopen("output.txt","w",stdout));
    #else
    //assert(freopen(file".in","r",stdin)); assert(freopen(file".out","w",stdout));
    #endif
	int t = 1;
	scanf("%d",&t);
	int cs = 1;
	while(t--){
        printf("Case #%d: ",cs++);
		solve();
	}
	return 0;
}
