#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

#define INF	(int)1e9
#define EPS 1e-9
#define what_is(x) cerr << #x << " is " << x << endl;

int stressfree[2010][2010];
int stressful[2010][2010];

int find_free(int x, int y){
	if(stressfree[x][y] != -1) return stressfree[x][y];
	if(y >= x) return 0;
	return stressfree[x][y] = (find_free(x-1, y) + find_free(x, y-1)) % 1000000007;
}

int find_stress(int x, int y){
	if(x < 0 || y < 0) return 0;
	if(stressful[x][y] != -1) return stressful[x][y];
	if(x >= y) return stressful[x][y] = find_stress(x-1, y) % 1000000007;
	return stressful[x][y] = (find_stress(x-1, y) + find_stress(x, y-1)) % 1000000007;
}

int main(){
	for(int i = 0; i < 2010; i++){
		for(int j = 0; j < 2010; j++){
			stressfree[i][j] = stressful[i][j] = -1;
		}
	}
	stressfree[0][0] = stressful[0][0] = 0;
	for(int i = 1; i < 2010; i++){
		stressfree[i][0] = 1;
		stressful[0][i] = 1;
	}

	int tc, casenum = 1;
	scanf("%d", &tc);
	while(tc--){
		int a, b;
		scanf("%d-%d", &a, &b);
		printf("Case #%d: %d %d\n", casenum++, find_free(a,b), find_stress(a,b));
	}
}