#include <stdio.h>
#include <stdlib.h>

#define MOD 1000000007

int minv[5000];

int minverse(int a) {
	long t=0, newt = 1;
	long r=MOD, newr = a;
	while (newr != 0) {
		long q = r / newr;
		long oldt = t;
		t = newt;
		newt = oldt-q*t;
		long oldr = r;
		r = newr;
		newr = oldr-q*r;
	}
	if (r>1) {
		printf("MOD is not prime!\n");
		exit(1);
	}
	if (t<0) t+=MOD;
	return (int)t;
}

void init_minv() {
	minv[0] = -1;
	minv[1] = 1;
	for (int i=2; i<5000;i++) {
		minv[i]=minverse(i);
	}
}

//M>N
int sf(int M, int N) {
	if (N==0) return 1;
	long res = M-N;
	for (int i = M+1; i<=M+N-1;i++) {
		res = (res * i) % MOD;
	}
	for (int i = 1; i<=N;i++) {
		res = (res * minv[i]) % MOD;
	}
	return res;
}

int s(int N) {
	if (N==0) return 0;
	long res = 1;
	for (int i = N+2; i<=N*2;i++) {
		res = (res * i) % MOD;
	}
	for (int i = 1; i<=N;i++) {
		res = (res * minv[i]) % MOD;
	}
	return res;
}

int main(int argc, char * argv[]) {
	int T, M, N;
	
	init_minv();
	scanf("%d", &T);
	for (int i = 0; i < T; i++) {
		scanf("%d-%d", &M, &N);	
		printf("Case #%d: %d %d\n", i+1, sf(M, N), s(N));
	}
	return 0;
}