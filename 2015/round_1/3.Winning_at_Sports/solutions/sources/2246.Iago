//
//  main.cpp
//  c
//
//  Created by Iago Almeida Neves on 1/17/15.
//  Copyright (c) 2015 Iago Almeida Neves. All rights reserved.
//

#include <bits/stdc++.h>
using namespace std;
#define INF 0x3f3f3f3f
#define MOD 1000000007
#define _ ios_base::sync_with_stdio(false); cin.tie(NULL);
typedef long long ll;
#define REP(i,n) for (int i = 0; i < n; i++)
#define REPI(i,n) for (int i = 1; i <= n; i++)
#define REPN(i,n) for (int i = n-1; i >= 0; i--)
#define REPF(j,i,n) for (int j = i + 1; j < n; j++)

#define MAXN 2010
int dp[MAXN][MAXN];
int n, m;

int solve1(int a, int b) {
  if (a == n && b == m) {
    return 1;
  }
  int &ans = dp[a][b];
  if (ans) {
    return ans;
  }
  
  if (a != n) {
    ans += solve1(a+1, b) % MOD;
    ans %= MOD;
  }
  if (b != m && b + 1 < a) {
    ans += solve1(a, b+1) % MOD;
    ans %= MOD;
  }
  return ans;
}

int solve2(int a, int b) {
  if (a == n && b == m) {
    return 1;
  }
  int &ans = dp[a][b];
  if (ans) {
    return ans;
  }
  
  if (b != m) {
    ans += solve2(a, b+1) % MOD;
    ans %= MOD;
  }
  if (a != n && (a < b || b == m))  {
    ans += solve2(a+1, b) % MOD;
    ans %= MOD;
  }
  return ans;
}

int main(int argc, const char * argv[]) { _
  int nt;
  cin >> nt;
  REPI(t, nt) {
    char c;
    cin >> n >> c >> m;
    cout << "Case #" << t << ": ";
    memset(dp, 0, sizeof(dp));
    cout << solve1(0, 0) << " ";
    memset(dp, 0, sizeof(dp));
    cout << solve2(0, 0) << "\n";
  }
  return 0;
}
