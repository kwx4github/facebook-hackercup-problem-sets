#include <iostream>
#include <sstream>
#include <fstream>
#include <vector>
#include <cmath>
using namespace std;

class StressfullWin
{

    public:

    int score_to_get;
    vector < vector<long long int> > memo;

    void memoize(int scoreA, int scoreB){
        if (scoreA < 0 || scoreB < 0) return;
        if (scoreB > score_to_get || scoreA > score_to_get) return;
        if (scoreA > scoreB) return;
        if (memo[scoreA][scoreB] != 0) return;
        memoize(scoreA-1, scoreB);
        memoize(scoreA, scoreB-1);
        memo[scoreA][scoreB] = memo[scoreA-1][scoreB]%1000000007 + memo[scoreA][scoreB-1]%1000000007;
        return;
    }

    long long int stresful_ones(string scores){
        stringstream ss(scores);
        int x;
        ss >> x >> x;
        x = abs(x);
        score_to_get = x;
        for (int i = 0; i <= x; i++){
            vector<long long int> v1(x+1, 0);
            memo.push_back(v1);
        }
        for (int i = 0; i <=x; i++){
            memo[0][i] = 1;
        }
        memoize(x, x);
        return memo[x][x]%1000000007;
    }

};

class StressFreeWin{

    public:

    vector < vector<long long int> > memo;
    int score_to_get;

    void memoize(int scoreA, int scoreB){
        if (scoreA < 0 || scoreB < 0) return;
        if (scoreB > score_to_get || scoreA > score_to_get) return;
        if (scoreA >= scoreB) return;
        if (memo[scoreA][scoreB] != 0) return;
        memoize(scoreA-1, scoreB);
        memoize(scoreA, scoreB-1);
        memo[scoreA][scoreB] = memo[scoreA-1][scoreB]%1000000007 + memo[scoreA][scoreB-1]%1000000007;
        return;
    }

    long long int stresfree_ones(string scores){
        stringstream ss(scores);
        int x, y;
        ss >> x >> y;
        x = abs(x);
        y = abs(y);
        score_to_get = x;
        for (int i = 0; i <= x; i++){
            vector<long long int> v1(x+1, 0);
            memo.push_back(v1);
        }
        for (int i = 0; i <= x; i++){
            memo[0][i] = 1;
        }
        memoize(y, x);
        return (memo[y][x]%1000000007  + 1)%1000000007-1;
    }

};

int main()
{
    ifstream in;
    ofstream out;
    in.open("winning_at_sports.txt");
    out.open("sports_result.txt");
    int tests;
    in >> tests;
    for (int i = 0; i < tests; i++){
        StressFreeWin sf;
        StressfullWin sw;
        string score;
        in >> score;
        out << "Case #" << i+1 << ": " << sf.stresfree_ones(score) << " " << sw.stresful_ones(score) << endl;
    }
    return 0;
}
