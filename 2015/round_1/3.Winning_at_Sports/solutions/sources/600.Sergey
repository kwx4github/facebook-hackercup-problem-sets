#pragma comment(linker, "/STACK:200000000")

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <cassert>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <sstream>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef vector <int> vi;

#define pb push_back
#define mp make_pair

template <class T> inline T sqr(const T& x) { return x * x; }
template <class T> inline void updMin(T& a, const T& b) { if (b < a) a = b; }
template <class T> inline void updMax(T& a, const T& b) { if (b > a) a = b; }


void precalc() {

}

int used[2002][2002]; 
int mas[2002][2002]; 
int a, b; 
const int MOD = 1000000007; 

int ITER = 1; 

int stressless(int x, int y){ 
	if (x == a && y == b) return 1; 
	if (x > a || y > b) return 0; 
	if (x <= y) return 0; 
	if (used[x][y] == ITER) return mas[x][y]; 
	used[x][y] = ITER; 

	int t = stressless(x + 1, y) + stressless(x, y + 1); 
	if (t >= MOD) t -= MOD; 
	return mas[x][y] = t; 
}


int stressfull(int x, int y){ 
	if (y == b) return 1; 
	if (x > a || y > b) return 0; 
	if (x > y) return 0; 
	if (used[x][y] == ITER) return mas[x][y]; 
	used[x][y] = ITER; 

	int t = stressfull(x + 1, y) + stressfull(x, y + 1); 
	if (t >= MOD) t -= MOD; 
	return mas[x][y] = t; 
}



void solve(int tc) {
	//init 

	//solve

	scanf("%d-%d", &a, &b); 
	
	ITER++; 
	int ans = stressless(1, 0); 
	ITER++; 
	int ans2 = stressfull(0, 0); 
	
	//put answer

	cout << "Case #" << tc << ": " << ans << " " << ans2 << "\n"; 
}

int main()
{
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	
	precalc(); 

	int tc; 
	cin >> tc; 
	for (int i = 0; i < tc; i++) {
		cerr << i + 1 << "\n"; 
		solve(i + 1); 
	}

	cerr << "done\n"; 

	return 0;
}


