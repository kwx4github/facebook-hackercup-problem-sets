#include <bits/stdc++.h>
using namespace std;

#define MAXN 2010
#define MOD 1000000007

int T, S1, S2;
int f1[MAXN][MAXN], f2[MAXN][MAXN];

int StressFree(int x, int y) {
	if(f1[x][y] != -1) return f1[x][y];
	if(y==0) return f1[x][y] = 1;
	int primo = (x>y+1) ? StressFree(x-1, y) : 0;
	int sec = StressFree(x, y-1);
	return f1[x][y] = (primo+sec)%MOD;
}

int StressFull(int x, int y) {
	if(y == S2) return f2[x][y]=1;
	if(f2[x][y]!=-1) return f2[x][y];
	int primo = (x+1 <= y) ? StressFull(x+1, y) : 0;
	int sec = StressFull(x, y+1);
	return f2[x][y] = (primo+sec)%MOD;
}
int main() {
	ios::sync_with_stdio(false);
	cin >> T;
	for(int i=1; i<=T; i++) {
		string appo;
		cin >> appo;
		bool passed=false;
		S1=S2=0;
		for(int j=0; j < (int)appo.size(); j++) {
			if(appo[j]=='-') {passed=true; continue; }
			if(!passed) S1 = S1*10 + (int)(appo[j] - '0');
			else S2 = S2*10 + (int)(appo[j]-'0');
		}
		memset(f1, -1, sizeof f1);
		memset(f2, -1, sizeof f2);
		cout<<"Case #"<<i<<": "<<StressFree(S1, S2)<<" "<<StressFull(0, 0)<<endl;
	}
	return 0;
}
