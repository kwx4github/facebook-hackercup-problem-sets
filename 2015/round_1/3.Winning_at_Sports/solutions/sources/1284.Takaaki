#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstring>

using namespace std;
static const int MOD = 1000000007;
static int dp[2002][2002];

int main(){
	ios_base::sync_with_stdio(false);
	int T;
	cin >> T;
	for(int case_num = 1; case_num <= T; ++case_num){
		int a, b;
		cin >> a;
		cin.ignore();
		cin >> b;
		// stress-free
		memset(dp, 0, sizeof(dp));
		dp[0][0] = 1;
		for(int i = 0; i <= a; ++i){
			for(int j = 0; j <= b; ++j){
				if(j + 1 < i){ dp[i][j + 1] = (dp[i][j + 1] + dp[i][j]) % MOD; }
				dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % MOD;
			}
		}
		const int stress_free = dp[a][b];
		// stressful
		memset(dp, 0, sizeof(dp));
		dp[0][0] = 1;
		for(int i = 0; i <= a; ++i){
			for(int j = 0; j <= b; ++j){
				if(i + 1 <= j || j == b){
					dp[i + 1][j] = (dp[i + 1][j] + dp[i][j]) % MOD;
				}
				dp[i][j + 1] = (dp[i][j + 1] + dp[i][j]) % MOD;
			}
		}
		const int stressful = dp[a][b];
		cout << "Case #" << case_num << ": " << stress_free << " " << stressful << endl;
	}
	return 0;
}

