#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <iterator>
#define REP(i,a,n) for(int i = (a); i < (int)(n); ++i)
#define foreach(itr,c) for(decltype((c).begin()) itr=(c).begin(); itr != (c).end(); itr++)
#define mp(a,b) make_pair(a,b)

using namespace std;

//typedef __int64 ll;
//typedef unsigned __int64 ull;
typedef long long ll;
typedef unsigned long long ull;


template<typename T>
inline T ABS(T a) { return a > 0 ? a : -a; }
template<typename T>
inline T MIN(T a, T b) { return a < b ? a : b; }
template<typename T>
inline T MAX(T a, T b) { return a > b ? a : b; }
template<typename T>
inline T CHKMIN(T &a, T b) { if(a > b) a = b; return a; }
template<typename T>
inline T CHKMAX(T &a, T b) { if(a < b) a = b; return a; }
template<typename T>
inline void SWAP(T &a, T &b) { static T c; c = a; a = b; b = c; }

template<typename T>
void print(T a) { cout << a << ' '; }
template<typename T, typename... T0>
void print(T a, T0... b) { print(a); print(b...); }
template<typename T>
void println(T a) {cout << a << endl;}
template<typename T, typename... T0>
void println(T a, T0... b) { print(a); println(b...); }

const int MOD = 1000000007;
int n, m;
int dp0[2010][2010], dp1[2010][2010];

void solve() {
  memset(dp0, 0, sizeof(dp0));
  dp0[1][0] = 1;
  REP(i, 2, n + 1) {
    REP(j, 0, m + 1) {
      int tmp = 0;
      if(j >= i) break;
      if(i - 1 > j) tmp = (tmp + dp0[i - 1][j]) % MOD;
      if(j > 0) tmp = (tmp + dp0[i][j - 1]) % MOD;
      dp0[i][j] = tmp;
    }
  }
  
  memset(dp1, 0, sizeof(dp1));
  REP(i, 1, m + 1) dp1[0][i] = 1;
  REP(i, 1, n + 1) {
    REP(j, 1, m + 1) {
      int tmp = 0;
      if(i > j && j != m) continue;
      if(j > 0) tmp = (tmp + dp1[i][j - 1]) % MOD;
      if(i <= j || j == m) tmp = (tmp + dp1[i - 1][j]) % MOD;
      dp1[i][j] = tmp;
    }
  }
  
}

int main() {
  freopen("winning_at_sports.txt", "r", stdin);
	freopen("winning_at_sports.out", "w", stdout);
  int cas;
  cin >> cas;
  REP(tt, 1, cas + 1) {
    scanf("%d-%d", &n, &m);
    //println(n, m);
    solve();
    printf("Case #%d: %d %d\n", tt, dp0[n][m], dp1[n][m]);
  }
  return 0;
  
}
