#include <cstdio>
#include <cstring>
#include <iostream>
#include <cstdlib>
#define MAX 2010
#define MOD 1000000007
using namespace std;

int dp[MAX][MAX];

int relax(int n, int m){
	if(dp[n][m] < 0){
		if(m == 0)
			return dp[n][m] = 1;
		int cont = 0;
		if((n-1)>=m)
			cont = relax(n-1, m);
		if(n>(m-1) && m > 0){
			cont += relax(n, m-1);
			cont %= MOD;
		}
		return dp[n][m] = cont;
	}
	return dp[n][m];
}

int relax2(int n, int m, const int N, const int M){
//	printf("%d %d\n", n, m);
	if(dp[n][m] < 0){
		if(n == N)
			return dp[n][m] = 1;
		int cont = relax2(n+1, m, N, M);
		if(n>(m+1) && m < M){
			cont += relax2(n, m+1, N, M);
			cont %= MOD;
		}
		return dp[n][m] = cont;
	}
	return dp[n][m];
}

int stress(int n, int m, const int M){
	if(dp[n][m] < 0){
		if(m == M)
			return dp[n][m] = 1;
		int cont = stress(n, m+1, M);
		if(n+1<=m){
			cont += stress(n+1, m, M);
			cont %= MOD;
		}
		return dp[n][m] = cont;
	}
	return dp[n][m];
}

int main(){
	int n, m, casos;
	scanf("%d", &casos);
	for(int i = 1; i <= casos; i++){
		scanf("%d-%d", &n, &m);
		memset(dp, -1, sizeof(dp));
		int stress_free = relax(n-1, m);
		memset(dp, -1, sizeof(dp));
		int stressful = m >= 1 ? stress(0, 1, m) : 1;
		printf("Case #%d: %d %d\n", i, stress_free, stressful);
		memset(dp, -1, sizeof(dp));
		int stress_free_2 = relax2(1, 0, n, m);
		if(stress_free != stress_free_2){
			cout << "error" << endl;
			printf("%d %d\n", stress_free, stress_free_2);
			exit(0);
		}
	}
	return 0;
}
