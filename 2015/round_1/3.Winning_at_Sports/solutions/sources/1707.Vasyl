//solution by Wsl_F
#include <bits/stdc++.h>
#include <iostream>
#include <fstream>
#include <sstream>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <algorithm>
#include <functional>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <stdlib.h>
#include <stdio.h>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <bitset>
#include <numeric>
#include <cassert>
#include <time.h>
#include <ctime>
#include <memory.h>
#include <stdint.h>
#include <complex>
#include <utility>
#include <climits>
#include <cctype>
#include <x86intrin.h>



using namespace std;
#pragma comment(linker, "/STACK:1024000000,1024000000")


typedef long long LL;
typedef unsigned long long uLL;
typedef double dbl;
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<LL> vll;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;

#define mp(x,y)  make_pair((x),(y))
#define pb(x)  push_back(x)
#define sqr(x) ((x)*(x))




const int Max= 2000;
const LL mod= 1000*1000*1000+7;

LL Free[Max+10][Max+10];
LL Full[Max+10][Max+10];

LL calckFreeResult(int a, int b)
{
 LL numberFree= Free[a][b];
 numberFree%= mod;
 numberFree+= mod;
 numberFree%= mod;
 return numberFree;
}

LL calckFullResult(int a, int b)
{
 if (a<=b) return 0; //I'm never lose!

 LL numberFull= Full[b][b];
 numberFull%= mod;
 numberFull+= mod;
 numberFull%= mod;
 return numberFull;
}

void solve()
{
 int n,m;
 scanf("%d%*c%d", &n, &m);

 LL numberFree= calckFreeResult(n,m);
 LL numberFull= calckFullResult(n,m);

 printf("%I64d %I64d\n",numberFree,numberFull);
}


LL calckFree(int a, int b)
{
   if (b>=a || b<0) return 0;
   if (Free[a][b]==-1) Free[a][b]= (calckFree(a,b-1)+calckFree(a-1,b))%mod;
   return Free[a][b];
}

LL calckFull(int a,int b)
{
    if (a>b || a<0 || b<0) return 0;
    if (Full[a][b]==-1) Full[a][b]= (calckFull(a,b-1)+calckFull(a-1,b))%mod;
    return Full[a][b];
}

void init()
{

 memset(Free,-1,sizeof(Free));
 memset(Full,-1,sizeof(Full));

 Free[1][0]= 1;
 Full[0][1]= 1;
 Full[0][0]= 1;
 for (int i=0; i<=Max; i++)
    for (int j= 0; j<=Max; j++)
 {
     calckFree(i,j);
     calckFull(i,j);
 }
}

int main()
{
 //ios_base::sync_with_stdio(0);
 //cin.tie(0);
 // LL a[110];
 // memset(a,0,sizeof(a));

 freopen("input.txt","r",stdin);
 freopen("output.txt","w",stdout);
 //cout<<fixed;
 //cout<<setprecision(9);

 srand(__rdtsc());


 init();
 int T;
 cin>>T;
 for (int testCase=1; testCase<=T; testCase++)
 {
     cout<<"Case #"<<testCase<<": ";
     solve();
 }

 return 0;
}


