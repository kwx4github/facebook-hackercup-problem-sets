import java.util.ArrayList;
import java.util.Scanner;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.math.BigInteger;


public class WinningAtSports {
	
	public static BigInteger f(int n) {
		BigInteger x = BigInteger.ONE;
		for (int i = 2; i <= n; i++) {
			x = x.multiply(BigInteger.valueOf(i));
		}
		BigInteger f1 = x;
		x = x.multiply(BigInteger.valueOf(n+1));
		BigInteger f2 = x;
		for (int i = n+2; i <= 2*n; i++) {
			x = x.multiply(BigInteger.valueOf(i));
		}
		BigInteger f3 = x;
		return f3.divide(f1.multiply(f2));
	}
	
	public static void main(String[] args) {
		Scanner scanner = null;
		try {
			scanner = new Scanner(new FileInputStream("D:/Desktop/input.txt"));
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		PrintStream out = null;
		try {
			out = new PrintStream(new FileOutputStream("D:/Desktop/output_WinningAtSports.txt"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int T = Integer.parseInt(scanner.nextLine());
		BigInteger bm = BigInteger.valueOf(1000000007);
		for (int k = 1; k <= T; k++) {
			String l = scanner.nextLine();
			System.out.println("Doing test case " + k + " with l = " + l);
			int index = l.indexOf('-');
			int W = Integer.parseInt(l.substring(0, index));
			int L = Integer.parseInt(l.substring(index+1));
			ArrayList<BigInteger> list = new ArrayList<BigInteger>();
			for (int i = 1; i < W; i++) {
				list.add(BigInteger.ONE);
			}
			int ls = W-1;
			for (int i = 1; i < L; i++) {
				list.set(ls-2, list.get(ls-1).add(list.get(ls-2)));
				for (int j = ls-3; j >= 0; j--) {
					list.set(j, list.get(j+1).add(list.get(j)));
				}
				list.remove(ls-1);
				ls--;
			}
			BigInteger bb = BigInteger.ZERO;
			for (BigInteger b : list) {
				bb = bb.add(b);
			}
			BigInteger A1 = bb.mod(bm);
			if (bb.equals(BigInteger.ZERO)) {
				A1 = BigInteger.ONE;
			}
			BigInteger fL = f(L);
			BigInteger A2 = fL.mod(bm);
			if (fL.equals(BigInteger.ZERO)) {
				A2 = BigInteger.ONE;
			}
			if (L == 0) {
				A1 = BigInteger.ONE;
				A2 = BigInteger.ONE;
			}
			out.println("Case #" + k + ": " + A1 + " " + A2);
		}
	}
	
}
