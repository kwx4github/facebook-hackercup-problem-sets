//#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
#define FOR(i, a, b) for(int i = a; i <= b; i ++)
#define DOW(i, a, b) for(int i = a; i >= b; i --)
#define RESET(c, val) memset(c, val, sizeof(c))
#define oo 1e9
#define eps 1e-9
#define base 1000000007
#define maxn 2005
#define maxx 10000000

int nto[maxx];
int a, b, k;
int f[maxn][maxn];

int main() {
    ios_base::sync_with_stdio(0);
    freopen("test.inp", "r", stdin);
    freopen("test.out", "w", stdout);

    int test;
    cin >> test;
    FOR(tt, 1, test) {
        printf("Case #%d: ", tt);
        string s;
        cin >> s;

        int m = 0, n = 0, t;
        for (t = 0; s[t] != '-'; t ++) {}
        FOR(i, 0, t - 1) 
            m = m * 10 + s[i] - '0';
        FOR(i, t + 1, s.length() - 1) 
            n = n * 10 + s[i] - '0';

        RESET(f, 0);
        f[1][0] = 1;
        FOR(i, 2, m) FOR(j, 0, i - 1) {
            f[i][j] = 0;
            if (i - 1 > j) 
                f[i][j] = f[i - 1][j];
            if (j != 0) 
                f[i][j] = (f[i][j] + f[i][j - 1]) % base;
        }
        cout << f[m][n] << " ";

        RESET(f, 0);
        FOR(i, 0, n) FOR(j, i, n) {
            f[i][j] = (j == 0) ? 1 : 0;
            if (i != 0) {
                f[i][j] = f[i - 1][j];
            }
            if (i <= j - 1) {
                f[i][j] = (f[i][j] + f[i][j - 1]) % base;
            }
        }
        cout << f[n][n] << endl;
    }

    return 0;
}