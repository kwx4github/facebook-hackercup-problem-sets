#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair

typedef pair<int, int> pii;
typedef long long ll;

int T;
int A, B;
const int mod = 1e9 + 7;
int dp[2001][2001];
int was[2001][2001], cnt;

void clear() {
}

void load() {
  scanf("%d-%d", &A, &B);
}

void add(int &x, int y) {
  x += y;
  if (x >= mod) x -= mod;
}

int stressFree(int a, int b) {
  if (was[a][b] == cnt) return dp[a][b];
  was[a][b] = cnt;
  if (a == 1) {
    assert(b == 0);
    return dp[a][b] = 1;
  }
  dp[a][b] = 0;
  if (a - 1 > b)
    add(dp[a][b], stressFree(a - 1, b));
  if (b)
    add(dp[a][b], stressFree(a, b - 1));
  return dp[a][b];
}

int solve1() {
  ++cnt;
  return stressFree(A, B);
}

int stressFul(int a, int b) {
  if (was[a][b] == cnt) return dp[a][b];
  was[a][b] = cnt;
  if (b == 0) {
    assert(a == 0);
    return dp[a][b] = 1;
  }
  dp[a][b] = 0;
  if (a < b)
    add(dp[a][b], stressFul(a, b - 1));
  if (a)
    add(dp[a][b], stressFul(a - 1, b));
  return dp[a][b];
}

int solve2() {
  ++cnt;
  return stressFul(B, B);
}

int main() {
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  scanf("%d", &T);
  for (int id = 1; id <= T; ++id) {
    clear();
    load();
    printf("Case #%d: %d %d\n", id, solve1(), solve2());
  }
  return 0;
}
