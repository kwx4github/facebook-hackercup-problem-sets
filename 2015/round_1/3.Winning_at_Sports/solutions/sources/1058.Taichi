#include <bits/stdc++.h>

using namespace std;

typedef long long  ll;

const int MAX_N = 2010;
const int MOD = 1000000007;

int a, b;
int dp1[MAX_N][MAX_N], dp2[MAX_N][MAX_N];

int Rec1(int me, int opt)
{
    if (dp1[me][opt] != -1)
        return dp1[me][opt];

    int &res = dp1[me][opt];
    if (me == a && opt == b)
        return res = 1;
    else if (me > a || opt > b)
        return res = 0;

    res = 0;
    if (me + 1 <= a)
        res = (res + Rec1(me + 1, opt)) % MOD;
    if (opt + 1 <= b && opt + 1 < me)
        res = (res + Rec1(me, opt + 1)) % MOD;

    return res % MOD;
}

int Rec2(int me, int opt)
{
    if (dp2[me][opt] != -1)
        return dp2[me][opt];

    int &res = dp2[me][opt];
    if (me == a && opt == b)
        return res = 1;
    else if (me > a || opt > b)
        return res = 0;

    res = 0;
    if (me + 1 <= a && (me + 1 <= opt || opt == b))
        res = (res + Rec2(me + 1, opt)) % MOD;
    if (opt + 1 <= b)
        res = (res + Rec2(me, opt + 1)) % MOD;

    return res % MOD;
}

int main()
{
    cin.tie(0);
    ios::sync_with_stdio(false);

    string s;
    int T;
    cin >> T;

    for (int i = 1; i <= T; ++i) {
        cin >> s;
        for (int j = 0, n = s.size(); j < n; ++j)
            if (s[j] == '-') {
                a = stoi(s.substr(0, j));
                b = stoi(s.substr(j + 1, n - j - 1));
                break;
            }

        memset(dp1, -1, sizeof(dp1));
        memset(dp2, -1, sizeof(dp2));
        cout << "Case #" << i << ": " << Rec1(0, 0) % MOD << " "
             << Rec2(0, 0) % MOD << "\n";
    }

    return 0;
}
