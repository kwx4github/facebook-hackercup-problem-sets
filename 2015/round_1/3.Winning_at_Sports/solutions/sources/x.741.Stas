/*
 * 3.cpp
 *
 *  Created on: 18.01.2015
 *      Author: starwix
 */
#include <bits/stdc++.h>
using namespace std;

const int N = 2000, MOD = 1e9 + 7;
int memFree[N + 1][N + 1], memFull[N + 1][N + 1], a, b;

bool free(int ta, int tb) {
	return ta > tb;
}

bool full(int ta, int tb) {
	return ta <= tb || tb == b;
}

int f(int ta, int tb, bool cmp(int, int), int mem[][N + 1]) {
	if (ta > a || tb > b || !cmp(ta, tb)) {
		return 0;
	}
	if (ta == a && tb == b) {
		return 1;
	}
	if (mem[ta][tb] > -1) {
		return mem[ta][tb];
	}

	int res = (f(ta + 1, tb, cmp, mem) + f(ta, tb + 1, cmp, mem)) % MOD;

	mem[ta][tb] = res;

	return res;
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int t;
	scanf("%d", &t);
	for (int z = 0; z < t; z++) {
		memset(memFree, 255, sizeof(memFree));
		memset(memFull, 255, sizeof(memFull));
		scanf("%d-%d", &a, &b);
		printf("Case #%d: %d %d\n", z + 1, f(1, 0, free, memFree), f(0, 1, full, memFull));
	}
}

