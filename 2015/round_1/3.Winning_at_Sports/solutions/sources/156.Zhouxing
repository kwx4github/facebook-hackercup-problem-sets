/*
    Author: Zhouxing Shi
    Created on Jan18, 2014
*/
#include <bits/stdc++.h>
#define rep(i, a, b) for (int i = (a); i <= (b); ++i)
#define drep(i, a, b) for (int i = (a); i >= (b); --i)
#define REP(i, a, b) for (int i = (a); i < (b); ++i)
#define pb(x) push_back(x)
#define mp(x, y) (make_pair(x, y))
#define clr(x) memset(x, 0, sizeof(x))
#define xx first
#define yy second

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
const int inf = ~0U >> 1;
const ll INF = ~0ULL >> 1;;
const double pi = acos(-1.0);
template <class T> inline T sqr(T a) { return a * a; }
template <class T> inline void read(T &n)
{
    char c;
	for (c = getchar(); !(c >= '0' && c <= '9'); c = getchar()); n = c - '0';
    for (c = getchar(); c >= '0' && c <= '9'; c = getchar()) n = n * 10 + c - '0';
}
int Pow(int base, int n, int mo)
{
	if (n == 0) return 1;
	if (n == 1) return base;
	int tmp = Pow(base, n >> 1, mo);
	tmp = (ll)tmp * tmp % mo;
	if (n & 1) tmp = (ll)tmp * base % mo;
	return tmp;
}

//***************************

const int mo = 1000000007;

int dp[2200][2200];
int A, B;

void upd(int &x, int y)
{
	x = (x + y) % mo;
}


void work(int _)
{
	scanf("%d-%d", &A, &B);
	clr(dp);
	// stress-free
	dp[1][0] = 1;
	rep(i, 1, A)
		rep(j, 0, B)
		{
			upd(dp[i + 1][j], dp[i][j]);
			if (i > j + 1) upd(dp[i][j + 1], dp[i][j]);
		}
	int Ret_stress_free = dp[A][B];
	
	clr(dp);
	//stessful
	dp[0][0] = 1;
	rep(i, 0, A)
		rep(j, 0, B)
		{
			int nxtA = i + 1, nxtB = j;
			if ((j == B) || (j < B && nxtA <= nxtB))
				upd(dp[nxtA][nxtB], dp[i][j]);
				
			upd(dp[i][j + 1], dp[i][j]);
				
		}
		
	int Ret_stressful = dp[A][B];
	
	printf("Case #%d: %d %d\n", _, Ret_stress_free, Ret_stressful);
}

int main()
{
	//freopen("in", "r", stdin);
	freopen("C.txt", "r", stdin);
	freopen("C.ans", "w", stdout);
	int cases;
	scanf("%d", &cases);
	rep(_, 1, cases) work(_);
	return 0;
}


