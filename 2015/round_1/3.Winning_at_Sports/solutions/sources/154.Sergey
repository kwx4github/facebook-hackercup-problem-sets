package com.facebook.hackercup2015.round1;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class WinningAtSports {
    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
    PrintWriter writer = new PrintWriter(System.out);

    WinningAtSports() throws IOException {
        reader = new BufferedReader(new FileReader("input.txt"));
        writer = new PrintWriter(new FileWriter("output.txt"));
    }

    StringTokenizer stringTokenizer;

    String next() throws IOException {
        while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {
            stringTokenizer = new StringTokenizer(reader.readLine());
        }
        return stringTokenizer.nextToken();
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    final int MOD = 1000 * 1000 * 1000 + 7;

    int sum(int a, int b) {
        a += b;
        return a >= MOD ? a - MOD : a;
    }


    void solve() throws IOException {
        int t = nextInt();
        for (int i = 1; i <= t; i++) {
            solve(i);
        }
        writer.close();
    }

    int[][] stressFull = new int[2001][2001];
    int[][] stressFree = new int[2001][2001];

    private void solve(int testNumber) throws IOException {
        writer.printf("Case #%d: ", testNumber);
        if (stressFree[1][0] == 0) {
            stressFree[1][0] = 1;
            for (int i = 0; i <= 2000; i++) {
                for (int j = 0; j < i; j++) {
                    if (i + 1 <= 2000) {
                        stressFree[i + 1][j] = sum(stressFree[i + 1][j], stressFree[i][j]);
                    }
                    if (j + 1 < i) {
                        stressFree[i][j + 1] = sum(stressFree[i][j + 1], stressFree[i][j]);
                    }
                }
            }

            stressFull[0][0] = 1;
            for (int i = 0; i <= 2000; i++) {
                for (int j = 0; j <= 2000; j++) {
                    if (i + 1 <= 2000) {
                        stressFull[i + 1][j] = sum(stressFull[i + 1][j], stressFull[i][j]);
                    }
                    if (i <= j && j + 1 <= 2000) {
                        stressFull[i][j + 1] = sum(stressFull[i][j + 1], stressFull[i][j]);
                    }
                }
            }
        }
        String[] scores = next().split("-");
        int x = Integer.parseInt(scores[0]);
        int y = Integer.parseInt(scores[1]);
        writer.println(stressFree[x][y] + " " + stressFull[x][y]);
    }

    public static void main(String[] args) throws IOException {
        new WinningAtSports().solve();
    }
}
