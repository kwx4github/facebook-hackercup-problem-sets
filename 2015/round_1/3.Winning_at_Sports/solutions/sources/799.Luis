// ================================================================================================
//  pFHC1502C.ac.cpp
//  Written by Luis Garcia, 2015
// ================================================================================================

#include <cstdio>
#include <cstring>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <string>
#include <iterator>
#include <numeric>
#include <iostream>

using namespace std;

#if defined _OJ_PROJECT
_BEGIN_PROBLEM(FHC1502C, "FHC1502C")
#endif // _OJ_PROJECT

#define infinite_loop for (;;)

int stressFree[2001][2001];
int stressful[2001][2001];

int main() {
    static const int mod = 1000000007;

    int T, A, B;
    scanf("%d", &T);

    char c;
    for (int _T = 0; _T < T; ++_T) {
        scanf("%d%c%d", &A, &c, &B);

        memset(stressFree, 0, sizeof stressFree);
        memset(stressful, 0, sizeof stressful);

        stressFree[0][0] = stressful[0][0] = 1;
        for (int i = 0; i <= A; ++i)
            for (int j = 0; j <= B; ++j)
                if (i > j) {
                    if (i > 0) stressFree[i][j] = (stressFree[i][j] + stressFree[i - 1][j]) % mod;
                    if (j > 0) stressFree[i][j] = (stressFree[i][j] + stressFree[i][j - 1]) % mod;
                }

        for (int i = 0; i <= A; ++i)
            for (int j = 0; j <= B; ++j)
                if (i <= j || j == B) {
                    if (i > 0) stressful[i][j] = (stressful[i][j] + stressful[i - 1][j]) % mod;
                    if (j > 0) stressful[i][j] = (stressful[i][j] + stressful[i][j - 1]) % mod;
                }


        printf("Case #%d: %d %d\n", _T + 1, stressFree[A][B], stressful[A][B]);
    }

    return 0;
}

#if defined _OJ_PROJECT
_END_PROBLEM
#endif // _OJ_PROJECT

// ================================================================================================
//  End of file.
// ================================================================================================
