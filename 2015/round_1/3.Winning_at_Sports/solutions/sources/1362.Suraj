/*
   Author : skrcode
*/

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <string.h>
#include <cassert>
#include <climits>

using namespace std;

const int oo = int(2e9) + 9;
const double eps = 1e-9;
const double pi = 3.14159265358979323846264338327950;

#define debug printf("ERROR DETECTED...!!\n");
#define debug1(p)        cerr << #p << ": " << p << endl;
#define debug2(p, q)     cerr << #p << ": " << p << " | " << #q << ": " << q << endl;
#define debug3(p, q, r)  cerr << #p << ": " << p << " | " << #q << ": " << q << " | " << #r << ": " << r << endl;

#define  takeinput() freopen("ip.txt","r",stdin);
#define  takeoutput() freopen("op.txt","w",stdout);

typedef vector < int > vi;
typedef pair < int, int> ii;
typedef vector < ii > vii;

#define trvi(c, it) for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define trvii(c, it) for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define pb push_back
#define mp make_pair


typedef long long int64;
typedef double float64;

//START

int64 memo1[2005][2005];
int64 memo2[2005][2005];
const int64 mod = 1000000007;

int64 dp1(int64 cura,int64 curb,int64 a,int64 b) {
    if(cura>a || curb>b)return 0 ;
    if(curb>=cura && !(cura==0 && curb==0))return 0;
    if(cura == a && curb == b)return 1;
    //debug2(cura,curb);
    if(memo1[cura][curb]!=-1)return memo1[cura][curb];
    int64 ans1 = 0;
    ans1=(ans1+dp1(cura+1,curb,a,b))%mod;
    ans1=(ans1+dp1(cura,curb+1,a,b))%mod;
    return memo1[cura][curb] = ans1;
}

int64 dp2(int64 cura,int64 curb,int64 a,int64 b) {
    if(cura>a || curb>b)return 0 ;
    if(cura == a && curb == b)return 1;
    if(cura>curb && curb<b && !(cura==0 && curb==0))return 0;

    if(memo2[cura][curb]!=-1)return memo2[cura][curb];
    int64 ans2 = 0;
    ans2=(ans2+dp2(cura+1,curb,a,b))%mod;
    ans2=(ans2+dp2(cura,curb+1,a,b))%mod;
    return memo2[cura][curb] = ans2;
}

int main() { //takeinput(); takeoutput();
    int TC;
    cin>>TC;
    int kase = 1;
    while(TC--) {
        string str;
        cin>>str;
        int64 a = 0;
        int64 b = 0;
        for(int64 i=0;i<str.size();i++)
            if(str[i] == '-') {
                for(int64 j=0;j<=i-1;j++)
                    a = a*10+(str[j]-'0');
                for(int64 j=i+1;j<str.size();j++)
                    b = b*10 + (str[j]-'0');
            }
        memset(memo1,-1,sizeof(memo1));
        int64 ans1 = dp1(0,0,a,b);
        memset(memo2,-1,sizeof(memo2));
        int64 ans2 = dp2(0,0,a,b);
        cout<<"Case #"<<kase++<<": "<<ans1<<" "<<ans2<<endl;
    }
    return 0;
}
