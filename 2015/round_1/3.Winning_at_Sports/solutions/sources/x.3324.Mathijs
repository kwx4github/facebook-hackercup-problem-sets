#include <iostream>
#include <string>
#include <map>
#include <fstream>
#include <vector>

using namespace std;

const int MOD = 1000000007;

bool done[2001][2001];
pair<int, int> stresslessful[2001][2001];

pair<int, int> dp(int me, int other, int maxother) {
    if (done[me][other]) return stresslessful[me][other];
    
    pair<int, int> ans;

    if (me == 0) {
        ans = make_pair(0, 1);
    }
    else if (other == 0) {
        ans = make_pair(1, 0);
    }
    else {
        auto a = dp(me - 1, other, maxother);
        auto b = dp(me, other - 1, maxother);
        ans = make_pair((a.first + b.first) % MOD, (a.second + b.second) % MOD);
    }

    if (me <= other) {
        ans.first = 0;
    }
    if (me > other && other < maxother) {
        ans.second = 0;
    }

    done[me][other] = true;
    stresslessful[me][other] = ans;
    return ans;
}

void doit(ifstream &fin) {
    memset(done, false, sizeof(done));

    int me, other;
    char dash;
    fin >> me >> dash >> other;
    auto ans = dp(me, other, other);
    cout << ans.first << ' ' << ans.second << endl;
}

int main(int argc, char* argv[]) {
    int T;
    if (argc < 1) return 0;
    ifstream fin = ifstream(argv[1]);
    fin >> T;
    fin.get();

    for (int i = 1; i <= T; ++i) {
        cout << "Case #" << i << ": ";
        doit(fin);
    }
    return 0;
}