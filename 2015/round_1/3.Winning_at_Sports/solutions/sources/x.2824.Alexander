
#include <bits/stdc++.h>
#define f(i,x,y) for (int i = x; i < y; i++)
#define fx(i,x,y) for (i = x; i < y; i++)
#define fd(i,x,y) for(int i = x; i>= y; i--)
#define FOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define clr(A,x) memset(A, x, sizeof A)
#define pb push_back
#define pii pair<int,int>
#define mp make_pair
#define fst first
#define snd second
#define ones(x) __builtin_popcount(x)
#define eps (1e-9)
#define oo (1<<30)
#define OO (1LL<<60)
#define readint(i) scanf("%d",&i)
#define readchr(i) scanf("%c",&i)
#define readint2(i,j) scanf("%d %d",&i,&j)
#define readint3(i,j,k) scanf("%d %d %d",&i,&j,&k)
#define readstr(i) scanf("%s",i)
#define readstr2(i,j) scanf("%s %s",i,j)
#define printint(i) printf("%d\n",i)
#define printstr(s) printf("%s\n",s)
#define in(i) cin>>i
#define out(i) cout<<i<<endl
#define in2(i,j) cin>>i>>j
#define out2(i,j) cout<<i<<" "<<j<<endl
#define in3(i,j,k) cin>>i>>j>>k
#define out3(i,j,k) cout<<i<<" "<<j<<" "<<k<<endl
#define line(s) getline(cin,s)
#define N 4010
#define mod 1000000007ll
using namespace std;
typedef long long int ll;
typedef vector<int> vint ;
typedef vector<string> vstr ;
typedef vector<ll> vll ;
/*variables*/
int casitos;
int n;
int l,r;
ll dp1[N][N][2];
ll dp2[N][N][2];
/*funciones*/
ll sol1(int a,int b,bool est){
	if(a==l && b==r &&& est) return 1;
	if(a>l || b>r|| !est) return 0;
	if(dp1[a][b][est]!=-1) return dp1[a][b][est];
	return dp1[a][b][est]=(sol1(a+1,b,(a+1>b))+sol1(a,b+1,(a>b+1)))%mod;
}
ll sol2(int a,int b,bool est){
	if(a==l && b==r && !est) return 1;
	if(a>l||b>r) return 0;
	if(dp2[a][b][est]!=-1) return dp2[a][b][est];
	if(b!=r){
		dp2[a][b][est]=sol2(a,b+1,(a<=b+1))% mod;
		if(a+1<=b) dp2[a][b][est]=(dp2[a][b][est]+sol2(a+1,b,(a+1<=b)))%mod;
	}
	else dp2[a][b][est]=sol2(a+1,b,(a+1<=b))%mod;
	return dp2[a][b][est];
}
int main(){
	in(casitos);
	f(cases,0,casitos){
		scanf("%d-%d",&l,&r);
		clr(dp1,-1);
		clr(dp2,-1);
		n=l+r;
		printf("Case #%d: %lld %lld\n",cases+1,sol1(1,0,1),sol2(0,1,1));
	}

}