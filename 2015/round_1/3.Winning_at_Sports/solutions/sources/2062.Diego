#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <queue>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define INF 1000000000
#define FOR(i, a, b) for(int i=int(a); i<int(b); i++)
#define FORC(cont, it) for(typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); it++)
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;

#define maxS 2001
#define MOD 1000000007

int Y, O;
int dp[2][maxS][maxS];

int stressFree(int y, int o) {
	if (y == Y&&o == O) return 1;
	if (y > Y || o > O) return 0;
	if (y <= o) return 0;
	if (dp[0][y][o] != -1) return dp[0][y][o];
	return dp[0][y][o] = (stressFree(y + 1, o) + stressFree(y, o + 1)) % MOD;
}

int stressFull(int y, int o) {
	if (y == Y&&o == O) return 1;
	if (y > Y || o > O) return 0;
	if (o < O && y > o) return 0;
	if (dp[1][y][o] != -1) return dp[1][y][o];
	return dp[1][y][o] = (stressFull(y + 1, o) + stressFull(y, o + 1)) % MOD;
}

int main() {
	int T, caso=1;
	cin >> T;
	while (T--) {
		cout << "Case #" << caso++ << ": ";
		cin >> Y >> O;
		O = -O;
		memset(dp, -1, sizeof(dp));
		cout << stressFree(1, 0) << " " << stressFull(0, 0);
		cout << endl;
	}
	return 0;
}
