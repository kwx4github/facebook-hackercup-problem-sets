#include<bits/stdc++.h> //srand(time(NULL))

using namespace std;

#define REP(i,n)     for(i=0;i<(n);i++)
#define REPI(x,a,b)  for(x=(a);x<=(b);x++)

#define FORE(i,a)   for(typeof((a).begin())i=(a).begin();i!=(a).end();i++)//reverse_iterator
#define mem(a,b)    memset(a,b,sizeof(a))
#define pii         pair < int , int >
#define BE(a)       a.begin(),a.end()
#define EQ(a,b)     (fabs(a-b)<ERR)
#define SZ(a)       (int)a.size()
#define vi          vector<int>
#define ll          long long
#define mp          make_pair
#define pb          push_back
#define sc          second
#define fs          first

#define deb(a...)          {cerr<<"#"<<__LINE__<<" -> ";dbg,a; cerr<<endl;}
struct debugger { template<typename T> debugger& operator , (const T v) { cerr<<v<<" "; return *this; } } dbg;

//bool operator()(const int &p,const int &q){return p<q;}//for map,set sort declare it in a struct
//bool operator<(const data &p)const{return p.w<w;}

#define oo          (1<<30)
#define MAX         2009 // (int)1e5 + 9
//loop | binary search | priority queue | backtracking map<int , bool> | disjoin set |

#define MOD 1000000007
int x,y;
int dp1[MAX][MAX],dp2[MAX][MAX];

int rec1(int a,int b)
{
    //cout<<a<<" "<<b<<endl; getchar();
    if(a>=x && b>=y) return 1;
    int &ret = dp1[a][b];
    if(ret!=-1) return ret;

    ret = 0;

    if((b+1<a || a==x) && b<y) ret=(ret+rec1(a,b+1))%MOD;
    if(a<x) ret=(ret+rec1(a+1,b))%MOD;

    return ret;
}

int rec2(int a,int b)
{
    //cout<<a<<" "<<b<<endl; getchar();
    if(a>=x && b>=y) return 1;
    int &ret = dp2[a][b];
    if(ret!=-1) return ret;

    ret = 0;
    if( (a+1<=b || b==y) && a<x ) ret = (ret+rec2(a+1,b))%MOD;
    if(b<y) ret = (ret+rec2(a,b+1))%MOD;

    return ret;
}

int main()
{
    freopen("input_c.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int i,j,k;
    int t;cin>>t;
    for(int cas=1;cas<=t;cas++)
    {
        mem(dp1,-1); mem(dp2,-1);

        scanf("%d-%d",&x,&y);

        int a1 = rec1(0,0);
        int a2 = rec2(0,0);

        printf("Case #%d: %d %d\n",cas,a1,a2);
    }
}
