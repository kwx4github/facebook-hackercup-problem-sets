import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.StringTokenizer;


public class sports {
	
	static int t;
	
	public static void main(String[] args) throws IOException {
		BufferedReader f = new BufferedReader(new FileReader("sports.txt"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("sportsout.txt")));
		StringTokenizer st = new StringTokenizer(f.readLine());
		t = Integer.parseInt(st.nextToken());
		for(int i = 0; i < t; i++) {
			st = new StringTokenizer(f.readLine(), "-");
			int m = Integer.parseInt(st.nextToken());
			int n = Integer.parseInt(st.nextToken());
			out.println("Case #" + (i + 1) + ": " + solve1(m, n) + " " + solve2(m, n));
		}
		out.close();
	}
	
	public static BigInteger choose(int n, int r) {
		BigInteger denom = BigInteger.ONE;
		BigInteger num = BigInteger.ONE;
		for(int i = 1; i <= r; i++) {
			denom = denom.multiply(BigInteger.valueOf(i));
			num = num.multiply(BigInteger.valueOf(n + 1 - i));
		}
		return num.divide(denom);
	}
		
	public static int solve1(int m, int n) {
		BigInteger ans = (BigInteger.valueOf(m - n)).multiply(choose(m + n, m));
		ans = ans.divide(BigInteger.valueOf(m + n));
		return ans.mod(BigInteger.valueOf(1000000007)).intValue();
	}
	
	public static int solve2(int m, int n) {
		BigInteger ans = choose(2*n, n);
		ans = ans.divide(BigInteger.valueOf(n + 1));
		return ans.mod(BigInteger.valueOf(1000000007)).intValue();
	}
}