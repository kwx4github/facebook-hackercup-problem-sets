import sys

P = 1000000007

_mem = {}
def stressfree(m, t):
    if t == 0:
        return 1

    assert m > t >= 0, (m, t)

    key = 5000 * m + t
    if key in _mem:
        return _mem[key]

    if m == t + 1:
        return stressfree(m, t-1)

    r = stressfree(m-1, t) + stressfree(m, t-1)
    r %= P
    _mem[key] = r
    return r

_mem2 = {}
def stressful(m, t):
    if m == 0:
        return 1

    assert t >= m > 0

    key = 5000 * m + t
    if key in _mem2:
        return _mem2[key]

    if m == t:
        return stressful(m-1, t)

    r = stressful(m-1, t) + stressful(m, t-1)
    r %= P
    _mem2[key] = r
    return r

if __name__ == "__main__":
    f = sys.stdin
    if len(sys.argv) >= 2:
        fn = sys.argv[1]
        if fn != '-':
            f = open(fn)

    sys.setrecursionlimit(5000)

    T = int(f.readline())
    for _T in xrange(T):
        mine, theirs = map(int, f.readline().split('-'))

        print "Case #%d: %d %d" % (_T + 1, stressfree(mine, theirs), stressful(theirs, theirs))
