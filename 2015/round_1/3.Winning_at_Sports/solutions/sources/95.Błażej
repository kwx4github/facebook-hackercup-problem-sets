#include<cstdio>
#include<algorithm>
#include<vector>
#include<cstring>
#include<set>
using namespace std;
#define FOR(i,a,n) for(int i = (a); i <= (n); ++i)
#define FORD(i,a,n) for(int i = (a); i >= (n); --i)
#define REP(i,n) FOR(i,0,(n)-1)
#define RI(i,n) FOR(i,1,(n))
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define mini(a,b) a=min(a,(b))
#define maxi(a,b) a=max(a,(b))
#ifdef LOK
#define debug printf
#else
#define debug if(0)printf
#endif
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 2005;
const ll mod = 1e9 + 7;

char s[1000];
int testy,a,b;
ll frees[nax][nax], full[nax][nax];

int main() {
	frees[0][0] = 1;
	FOR(i,1,2000)
		FOR(j,0,i-1) 
			frees[i][j] = (frees[i-1][j] + (j ? frees[i][j-1] : 0))%mod;
	
	FOR(j,0,2000) {
		ll res = 0;
		FOR(i,0,j)
			res += frees[j][i];
		res %= mod;
		FOR(i,j+1,2000)
			full[i][j] = res;
	}
	
	scanf("%d",&testy);
	FOR(g,1,testy) {
		printf("Case #%d: ",g);
		scanf(" %s",s);
		int dl = strlen(s);
		int wsk = 0;
		a = b = 0;
		while (s[wsk] != '-') {
			a *= 10;
			a += s[wsk] - '0';
			++wsk;
		}
		++wsk;
		while (wsk < dl) {
			b *= 10;
			b += s[wsk] - '0';
			++wsk;
		}
		printf("%lld %lld\n",frees[a][b],full[a][b]);
		fprintf(stderr,"%lld %lld\n",frees[a][b],full[a][b]);
	}
	return 0;
}
