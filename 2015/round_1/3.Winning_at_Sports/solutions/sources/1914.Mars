// mars.ma
#include <iostream>
#include <vector>

using namespace std;

const long long MODULE = 1000000007;
const int MAXNUM = 2001;

int main(void)
{
  vector<vector<long long> > stressfree(MAXNUM, vector<long long>(MAXNUM));
  for (auto i = 1; i < MAXNUM; ++i) {
    stressfree[i][0] = 1;
  }

  for (auto i = 2; i < MAXNUM; ++i) {
    for (auto j = 1; j < i; ++j) {
      stressfree[i][j] = stressfree[i-1][j] + stressfree[i][j-1];
      stressfree[i][j] %= MODULE;
    }
  }


  vector<vector<long long> > stressful(MAXNUM, vector<long long>(MAXNUM));
  for (auto j = 0; j < MAXNUM; ++j) {
    stressful[0][j] = 1;
  }

  for (auto i = 1; i < MAXNUM; ++i) {
    for (auto j = i; j < MAXNUM; ++j) {
      stressful[i][j] = stressful[i-1][j] + stressful[i][j-1];
      stressful[i][j] %= MODULE;
    }
  }

  int testcase;  cin >> testcase;
  for (int tc = 0; tc < testcase; ++tc) {
    int a, b;  cin >> a >> b;
    b *= -1;
    cout << "Case #" << tc+1 << ": " << stressfree[a][b] << ' ' << stressful[b][b] << endl;
  }

  return 0;
}

