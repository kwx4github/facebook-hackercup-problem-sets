// g++ -Wl,-stack_size -Wl,100000000 -O2 homework.cc && ./a.out

#include <assert.h>
#include <stdio.h>

#include <vector>
#include <algorithm>

using namespace std;

#define MAXN 4010
#define MOD 1000000007

int memo[MAXN][MAXN];
int T, A, B, N;

int sfree(int idx, int nA) {
  assert(idx < MAXN);
  assert(nA < MAXN);
  if (idx >= N) return nA == A;
  int &ret = memo[idx][nA];
  if (ret != -1) return ret;
  int nB = idx - nA;
  ret = sfree(idx + 1, nA + 1);
  if (nA > nB + 1)
    ret += sfree(idx + 1, nA);
  ret %= MOD;
  return ret;
}

int sfull(int idx, int nA) {
  if (idx >= N) return nA == A;
  int &ret = memo[idx][nA];
  if (ret != -1) return ret;
  int nB = idx - nA;
  ret = sfull(idx + 1, nA);
  if (nA + 1 <= nB || nB == B)
    ret += sfull(idx + 1, nA + 1);
  ret %= MOD;
  return ret;
}

int main() {
  scanf("%d", &T);
  for (int TC = 1; TC <= T; TC++) {
    scanf("%d-%d", &A, &B);
    N = A + B;
    memset(memo, -1, sizeof(memo));
    int x = sfree(0, 0);
    memset(memo, -1, sizeof(memo));
    int y = sfull(0, 0);
    printf("Case #%d: %d %d\n", TC, x, y);
  }
}
