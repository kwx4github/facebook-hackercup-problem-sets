//by david942j
#include <cstdio>
#include <cstring>
#include <set>
#include <map>
#include <ctime>
#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <cassert>
#include <queue>
#include <stack>
#include <cstdlib>
#define openfile(s) freopen(s".in","r",stdin);freopen(s".out","w",stdout)
#define mpr std::make_pair
#define lg(x) (31-__builtin_clz(x))
#define __count __builtin_popcount
#define X first
#define Y second
#define mst(x) memset(x,0,sizeof(x))
#define mst1(x) memset(x,-1,sizeof(x))
#define ALL(c) (c).begin(),(c).end()
#define FOR(i,n) for(int i=0;i<n;i++)
#define FOR1(i,n) for(int i=1;i<=n;i++)
#define FORit(it,c) for(__typeof(c.begin()) it=c.begin();it!=c.end();++it)
#define pb push_back
#define RID(x) int x;RI(x)
using namespace std;
typedef long long LL;
typedef double LD;
typedef vector<int> VI;
typedef std::pair<int,int> PII;
template<class T>inline void maz(T &a,T b){if(a<b)a=b;}
template<class T>inline void miz(T &a,T b){if(a>b)a=b;}
template<class T>inline T abs(T a){return a>0?a:-a;}
inline int max(int a,int  b){return a>b?a:b;}
void RI() {}
template<typename... T>
void RI( int& head, T&... tail ) {
    scanf("%d",&head);
    RI(tail...);
}
const int N=2011,INF=1<<26;
const LD EPS=1e-9;
int dp[N][N],n,m;
const int mod=1000000007;
int get(int a,int b) {
    if(a<0||b<0)return 0;
    return dp[a][b];
}
int solve1() {
    FOR(i,n+1)FOR(j,m+1)dp[i][j]=0;
    dp[0][0]=1;
    for(int j=0;j<=m;j++)
        for(int i=j+1;i<=n;i++)
            dp[i][j] = (get(i-1,j)+get(i,j-1))%mod;
    return dp[n][m];
}
int solve2() {
    FOR(i,n+1)FOR(j,m+1)dp[i][j]=0;
    dp[0][0]=dp[0][1]=1;
    for(int j=1;j<=m;j++)
        for(int i=0;i<=j;i++)
            if(dp[i][j]==0)
                dp[i][j] = (get(i-1,j)+get(i,j-1))%mod;
    return dp[m][m];
}
int main() {
    RID(T);
    int w=1;
    while(T--) {
        scanf("%d-%d",&n,&m);
        int ans1=solve1();
        int ans2=solve2();
        printf("Case #%d: %d %d\n",w++,ans1,ans2);
    }
}
/*
6 10 12 14 15

*/