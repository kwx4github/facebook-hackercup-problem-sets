#include <iostream>
#include <sstream>
#include <fstream>
#include <ctime>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <bitset>
#include <queue>
#include <deque>
#include <list>
#include <algorithm>
#include <iomanip>

using namespace std;

typedef pair<int, int> pt;
typedef long long li;
typedef long double ld;

template<typename X> inline X abs(const X& a) { return a < 0 ? -a: a; }
template<typename X> inline X sqr(const X& a) { return a * a; }

#define forn(i,n) for(int i = 0; i < int(n); i++)
#define pb push_back
#define sz(a) int(a.size())
#define mp make_pair
#define all(a) a.begin(), a.end()
#define ford(i,n) for (int i = int(n) - 1; i >= 0; i--)
#define fore(i,l,r) for (int i = int(l); i <= int(r); i++) 
#define ft first
#define sc second
#define x first
#define y second

const int INF = int(1e9);
const li INF64 = li(1e18);
const ld EPS = ld(1e-9);
const ld PI = acos(-1.0);
const int N = 2010;

const int MOD = 1000000007;

int z1[N][N];        
int z2[N][N];
int a, b;

inline bool read()
{
	scanf("%d-%d", &a, &b);
	//cerr << a << ' ' << b << endl;
	return true;
}

void prepare()
{
	z1[1][0] = 1;
	for(int j = 0; j <= 2000; j++)
		for(int i = j + 1; i <= 2000; i++)
		{
			z1[i + 1][j] += z1[i][j];
			z1[i + 1][j] %= MOD;
			if(j + 1 != i)
			{
				z1[i][j + 1] += z1[i][j];
				z1[i][j + 1] %= MOD;
			}
		}
	z2[0][1] = 1;
	for(int i = 0; i <= 2000; i++)
		for(int j = 1; j <= 2000; j++)
		{
			if(j >= i)
			{
				z2[i][j + 1] += z2[i][j];
				z2[i][j + 1] %= MOD;
			}
			if(j > i)
			{			
				z2[i + 1][j] += z2[i][j];
				z2[i + 1][j] %= MOD;
			}
		}
}
 
inline void solve()
{
	cout << z1[a][b] << ' ';
	if(b == 0)
	{
		cout << 1 << endl;
		return;
	}
	cout << z2[b - 1][b] << endl;
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    cerr << setprecision(10) << fixed;
    cout << setprecision(15) << fixed;
    
    srand(time(NULL));
	prepare();
    int tests;
    scanf("%d", &tests);
    for(int test = 0; test < tests; test++)
    {      
    	printf("Case #%d: ", test + 1);
	    assert(read());
    	solve();
    }
    
    return 0;
}