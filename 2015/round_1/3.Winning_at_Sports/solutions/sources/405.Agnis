#include <iostream>
#include <sstream>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <vector>
#include <fstream>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <algorithm>
#include <numeric>
#include <bitset>

template<typename T>
typename T::value_type SUM(const T &t){
	return accumulate(t.begin(),t.end(), typename T::value_type());
}

#define INF 2100000000
#define VI vector<int>
#define VS vector<string>
#define PB push_back
#define MP make_pair
#define SZ size()
#define FOR(i,b) for(int i=0;i<b;i++)
#define ll long long

using namespace std;

int dp1[2001][2001] = {0};
int dp2[2001][2001] = {0};

int main(){
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);

    int maxn = 2001;
    for(int i=1;i<maxn;i++){
        dp1[i][0]=1;
        dp2[i][0]=1;
        dp2[0][i]=1;
    }
    for(int i=2;i<maxn;i++){
        for(int j=1;j<i;j++){
            if(i-1>j)
                dp1[i][j] = (dp1[i-1][j]+dp1[i][j-1]) % 1000000007;
            else
                dp1[i][j] = dp1[i][j-1];
        }
    }

    for(int i=1;i<maxn;i++){
        for(int j=1;j<maxn;j++){

            if(i<j){
                dp2[i][j] = (dp2[i-1][j]+dp2[i][j-1]) % 1000000007;
            }
            else
                dp2[i][j] = dp2[i-1][j];
        }
    }



    int t;
    cin >> t;
    string s;
    FOR(i,t){
        cin >> s;
        FOR(j,s.SZ) if(s[j]=='-') s[j]=' ';
        istringstream iss(s);
        int a,b;
        iss >> a >> b;

        cout << "Case #"<<(i+1)<<": "<<dp1[a][b] << " " << dp2[a][b] <<endl;
    }

//	system("pause");
	return 0;
}
