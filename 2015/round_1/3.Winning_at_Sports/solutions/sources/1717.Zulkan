#include <bits/stdc++.h>
using namespace std;

#define ll long long

int getInt() {
    int a;
    scanf("%d", &a);
    return a;
}

ll dp_susah[2001][2001], dp_mudah[2001][2001];
const ll moder = 1000*1000*1000 + 7;

ll susah(int a, int b,int ed_a, int ed_b) {
    if(a == ed_a || b == ed_b) return 1;
    ll &v = dp_susah[a][b];
    if(v!=-1) return v;
    v= 0;
    if(a+1 <= b) {
        v+= susah(a+1,b, ed_a, ed_b);
        v%= moder;
    }
    if(b+1 <= ed_b) {
        v+= susah(a,b+1,ed_a,ed_b);
        v%= moder;
    }

    return v;

}

ll mudah(int a,int b, int ed_a, int ed_b) {
    if(a == ed_a || b == ed_b) return 1;
    ll &v = dp_mudah[a][b];
    if(v!=-1) return v;
    if(a<= b) return v = mudah(a+1,b,ed_a,ed_b);
    v = 0;
    ll left = 0, right = 0;
    if(a+1<=ed_a) {
        left = mudah(a+1,b, ed_a,ed_b);
    }
    if(b+1 <= ed_b && b+1 < a) {
        right = mudah(a,b+1,ed_a,ed_b);
    }
    v = (left+right)%moder;

    //cout << a << ":" << b << '=' <<left << "," << right << '\n';
    return v;
}
int main() {

    int tc = getInt();

    for(int kasus= 1; kasus<=tc; kasus++) {
        int a,b;

        memset(dp_susah,-1, sizeof(dp_susah));
        memset(dp_mudah,-1,sizeof(dp_mudah));
        scanf("%d-%d", &a,&b);

        ll ra = mudah(1,0,a,b), rb = susah(0,1,a,b);

        printf("Case #%d: ",kasus);
        if(b==0) {
            printf("%d %d\n", 1, 1);
            continue;
        }
        printf("%d %d\n", (int) ra, (int) rb);

    }

}