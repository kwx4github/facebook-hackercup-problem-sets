#include <iostream>
#include <string>
#include <vector>
#include <queue>
#include <cmath>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <stdio.h>
#include <sstream>
#define MOD 1000000007

using namespace std; 

int **fr;
int **fu;

int free (int a, int b, int c)
{
    if (fr[a][b] != 0)
       return fr[a][b]; 
    if (a == 0 || b == 0)
    {
       fr[a][b] = 1;
       return 1;      
    }
    int ans = free (a-1, b, c);
    if (c-(a-b) > 1)
       ans += free (a, b-1, c);
    if (ans > MOD)
       ans = ans % MOD; 
    fr[a][b] = ans; 
    return ans;
}

int full (int a, int b, int c)
{
    if (fu[a][b] != 0)
       return fu[a][b]; 
    if (a == 0 || b == 0)
    {
       fu[a][b] = 1;
       return 1;      
    }
    int ans = full (a, b-1, c);
    if (c-(a-b) < 0)
       ans += full (a-1, b, c);
    if (ans > MOD)
       ans = ans % MOD; 
    fu[a][b] = ans; 
    return ans;
}

int main ()
{
    freopen ("winning_at_sports.txt", "r", stdin); 
    freopen ("cout.txt", "w", stdout);
    int tt;
    fr = new int* [2001]; 
    fu = new int* [2001];
    for (int x = 0; x <= 2000; x++)
    {
        fr[x] = new int [2000]; 
        fu[x] = new int [2000];    
    } 
    cin >> tt;
    for (int cases = 1; cases <= tt; cases++)
    {
        cout << "Case #" << cases << ": ";
        int a, b;
        string s;
        cin >> s;
        int split = s.find ("-");
        istringstream (s.substr (0, split)) >> a; 
        istringstream (s.substr (split + 1)) >> b; 
        
        for (int x = 0; x <= 2000; x++)
        {
            for (int y = 0; y <= 1999; y++)
            {
                fr [x][y] = 0; 
                fu [x][y] = 0;     
            }    
        }
        cout << free (a, b, a-b) << " " << full(a, b, a-b) << "\n"; 
    }
}
