#include <cstdio>
#include <cstdlib>
#include <cstring>

#define MOD 1000000007

int dp[2001][2001];

void reset() {
  memset(dp, 0, sizeof(dp));
}

long stressfree(int L, int R) {
  reset();

  for(int i = 0; i <= L; ++i)
    dp[i][0] = 1;

  for (int i = 1; i <= L; ++i) {
    for (int j = 1; j < i; ++j) {
      dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % MOD;
    }
  }

  return dp[L][R];
}

long stressfull(int L, int R) {
  reset();

  for (int i = 0; i <= R; ++i)
    dp[0][i] = 1;

  for (int i = 1; i <= R; ++i) {
    for (int j = 0; j <= i; ++j) {
      dp[j][i] = dp[j][i-1];
      if (j > 0) dp[j][i] = (dp[j][i] + dp[j-1][i]) % MOD;
    }
  }

  return dp[R][R];
}

int main() {
  int T;
  scanf("%d", &T);
  for (int t = 1; t <= T; ++t) {
    int L, R;
    scanf("%d-%d", &L, &R);
    printf("Case #%ld: %ld %ld\n", t, stressfree(L, R), stressfull(L, R)); 
  }
}
