import sys

num_cases = int(sys.stdin.readline())

def get_val(x,sf):
	k = key(x[0],x[1])
	if k in sf:
		return sf[k]
	return 1
	

def scores(mv):
	s = [[1,0]]
	sf = {}
	sf[key(1,0)] = 1
	i = 1
	while len(s) > 0:
		i = i + 1
		s2 = []
		for x in s:
			if (is_sf(x[0],x[1]) == 0):
				continue
			if x[0] == mv+1:
				continue
			if x[1] == mv+1:
				continue
			v = [x[0] + 1,x[1]]
			if (is_sf(v[0],v[1])):
				k = key(v[0],v[1])
				if (k) in sf:
					sf[k] +=  get_val(x,sf)
				else:
					sf[k] =  get_val(x,sf)		
			if (v not in s2):								
				s2.append(v)
			v = [x[0],x[1]+1]
			if (is_sf(v[0],v[1])):
				k = key(v[0],v[1])
				if (k) in sf:
					sf[k] += get_val(x,sf)
				else:
					sf[k] =  get_val(x,sf)
			if (v not in s2):
				s2.append(v)
		s = s2
		#print s
	return sf

def key(me,them):
	return ((me*10000) + them)
	

def is_sf(m,t):
	if (m > t):
		return 1
	return 0
	
def stressfree(s):
	sf = {}
	for x in s:
		me = x[0]
		them = x[1]
		count = 0
		if (me > them):
			if (is_sf(me,them-1)):
				count += sf[key(me,them-1)]
			count += them
			if (count == 0):
				count = 1
		sf[key(me,them)] = count
	return sf
	
def result(a,sf):	
	mod = 1000000007
	a = a.split("-")
	me = int(a[0])
	them = int(a[1])
	print them
	res1 = sf[key(me,them)] % mod
	res2 = sf[key(them+1,them)]	% mod
	return str(res1) + " " + str(res2)

mv = 2000
s = scores(mv)
for i in range(1,num_cases+1):
	print "Case #" + str(i) + ": " + result(sys.stdin.readline().strip(),s)






