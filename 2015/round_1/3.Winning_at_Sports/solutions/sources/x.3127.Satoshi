using System;
using System.Collections;
using System.Collections.Generic;
 
class TEST{
	static void Main(){
		int T=int.Parse(Console.ReadLine());
		for(int i=1;i<=T;i++){
			Sol mySol =new Sol(i);
			mySol.Solve();
		}
	}
}

class Sol{
	public void Solve(){
		
		if(M==0){
			Console.WriteLine("1 0");
			return;
		}
		int mod=(int)(1e9+7);
		int[][] dp=new int[N+1][];
		for(int i=0;i<=N;i++){
			dp[i]=new int[M+1];
		}
		
		dp[0][0]=1;
		for(int t=1;t<=N+M;t++){
			for(int i=1;i<=N;i++){
				int j=t-i;
				if(j<0||j>M)continue;
				if(j>=i)continue;
				dp[i][j]+=dp[i-1][j];
				dp[i][j]%=mod;
				if(j>0){
					dp[i][j]+=dp[i][j-1];
					dp[i][j]%=mod;
				}
			}
		}
		int ans1=dp[N][M];
		
		dp=new int[N+1][];
		for(int i=0;i<=N;i++){
			dp[i]=new int[M+1];
		}
		
		dp[0][0]=1;
		for(int t=1;t<=N+M;t++){
			for(int i=0;i<=N;i++){
				int j=t-i;
				if(j<0||j>M)continue;
				if(j<M && j<i)continue;
				if(i>0){
					dp[i][j]+=dp[i-1][j];
					dp[i][j]%=mod;
				}
				dp[i][j]+=dp[i][j-1];
				dp[i][j]%=mod;
			}
		}
		
		int ans2=dp[N][M];
		
		Console.WriteLine("{0} {1}",ans1,ans2);
		
		
		
		
		
		
	}
	int N,M;
	public Sol(int T){
		Console.Write("Case #{0}: ",T);
		var d=Array.ConvertAll(Console.ReadLine().Split('-'),e=>int.Parse(e));
		N=d[0];M=d[1];
	}




	static String rs(){return Console.ReadLine();}
	static int ri(){return int.Parse(Console.ReadLine());}
	static long rl(){return long.Parse(Console.ReadLine());}
	static double rd(){return double.Parse(Console.ReadLine());}
	static String[] rsa(){return Console.ReadLine().Split(' ');}
	static int[] ria(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>int.Parse(e));}
	static long[] rla(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>long.Parse(e));}
	static double[] rda(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>double.Parse(e));}

}
