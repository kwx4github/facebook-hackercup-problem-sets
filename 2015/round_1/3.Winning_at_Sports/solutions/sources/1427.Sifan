#include <cstdio>
#include <cstring>

const int N = 2000 + 10;
const int MOD = 1000000000 + 7;

int dp[N][N], a, b;

void Add(int& dest, int src) {
  dest += src;
  if (dest >= MOD) {
    dest -= MOD;
  }
}

int StressFree() {
  memset(dp, 0, sizeof(dp));
  dp[1][0] = 1;
  for (int i = 1; i <= a; ++ i) {
    for (int j = 0; j < i; ++ j) {
      if (dp[i][j] == 0) {
        continue;
      }
      if (i > j + 1 && j + 1 <= b) {
        Add(dp[i][j + 1], dp[i][j]);
      }
      if (i + 1 <= a) {
        Add(dp[i + 1][j], dp[i][j]);
      }
    }
  }
  return dp[a][b];
}

int StressFul() {
  memset(dp, 0, sizeof(dp));
  dp[0][0] = 1;
  for (int i = 0; i <= a; ++ i) {
    for (int j = 0; j <= b; ++ j) {
      if (dp[i][j] == 0 || (j < b && i > j)) {
        continue;
      }
      if (i + 1 <= a && (i + 1 <= j || j == b)) {
        Add(dp[i + 1][j], dp[i][j]);
      }
      if (j + 1 <= b) {
        Add(dp[i][j + 1], dp[i][j]);
      }
    }
  }
  return dp[a][b];
}

int main() {
  int test;
  scanf("%d", &test);
  for (int t = 1; t <= test; ++ t) {
    scanf("%d-%d", &a, &b);
    printf("Case #%d: %d %d\n", t, StressFree(), StressFul());
  }
  return 0;
}
