#include <iostream>
#include <cstring>
#include <cassert>
#include <vector>
using namespace std;

#define MAX 2001
#define MOD 1000000007
typedef long long ll;

ll cat[MAX][MAX];
ll cat1[MAX][MAX];

int main() {
  for (int u=0; u<MAX; u++) {
    cat1[u][0] = 1LL;
    cat[u][0] = 1LL;
  }
  for (int u=0; u<MAX; u++) {
    for (int r=1; r<MAX; r++) {
      if (u < r) {
        cat1[u][r] = 0;
        cat[u][r] = 0;
      } else if (u == r) {
        cat1[u][r] = cat[u-1][r-1];
        cat[u][r] = 0;
        for (int i=0; i<= r-1; i++) {
          cat[u][r] = (cat[u][r]+((cat[i][i]*cat1[u-i][r-i])%MOD))%MOD;
        }
      } else {
        cat1[u][r] = cat[u-1][r];
        cat[u][r] = 0;
        for (int i=0; i<=r; i++) {
          cat[u][r] = (cat[u][r]+((cat[i][i]*cat1[u-i][r-i])%MOD))%MOD;
        }
      }
    }
  }

/*
  for (int i=0; i<10; i++) {
    cerr << i << " " << cat[i][i] << endl;
  }
  */
  int T;
  cin >> T;
  for (int tc=1; tc <= T; tc++) {
    int W, L;
    char hyphen;
    cin >> W >> hyphen >> L;
    cout << "Case #" << tc << ": " << cat1[W][L] << " " << cat[L][L] << endl;
  }
  
  return 0;
}
