#include <map>
#include <set>
#include <queue>
#include <vector>
#include <cstdio>
#include <iostream>

using namespace std;

const int len = 2001;
const long long mod = 1e9+7;

typedef vector<vector<int> > vvi;

vvi get(int n, int m) {
    return vvi(n, vector<int>(m, 0));
}

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    int T;
    scanf("%d", &T);
    for(int t = 0; t < T; t++) {
        int n, m;
        scanf("%d-%d", &n, &m);

        vvi full = get(n+1, m+1), free = get(n+1, m+1);
        for(int i = 0; i <= m; i++)
            full[0][i] = 1;
        for(int i = 1; i <= n; i++)
            free[i][0] = 1;

        for(int i = 1; i <= n; i++) {
            for(int j = 1; j <= m; j++) {
                if(i == 0 && j == 0) {
                    full[i][j] = free[i][j] = 0;
                } else {
                    // free
                    if(i > j) {
                        if(i == j+1) {
                            free[i][j] = free[i][j-1];
                        } else {
                            free[i][j] = free[i][j-1]+free[i-1][j];
                            free[i][j] %= mod;
                        }
                    }
                    // full
                    if(i <= j) {
                        if(i == j) {
                            full[i][j] = full[i-1][j];
                        } else {
                            full[i][j] = full[i-1][j]+full[i][j-1];
                            full[i][j] %= mod;
                        }
                    }
                }
            }
        }

        printf("Case #%d: %d %d\n", t+1, (int)free[n][m], (int)full[m][m]);
    }

    return 0;
}


