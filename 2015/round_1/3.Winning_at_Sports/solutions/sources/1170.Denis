#include <stdio.h>
#include <string>
#include <math.h>
#include <fstream>
#include <iostream>
#include <vector>
#include <deque>
#include <map>
#include <list>
#include <cstdlib>
using namespace std;

//2015 Hacker Cup Round 1, Winning at Sports
//facebook.com/hackercup/problems.php?pid=688426044611322&round=344496159068801
//Disable warning messages C4996.
#pragma warning(disable:4996)

#define INPUT_FROM 0
#if INPUT_FROM
#define fromc from
#else
#define fromc cin
#endif

/*typedef struct item * pitem;
struct item{
	bool color;
	int k;// key
	pitem p, l, r;
};*/

int reverse_euclid(int a, int p);
//long long fr(vector<long long>&, long long);

int main(int argc, char **argv)
{
	//ifstream from;
	const int nmin = 1, nmax = 4000, p = 1000000007;
	int cases, n, m, mt, res, i, j, k, t, rt, ax, bx;
	int a, b, c, r, r0, r1, q;
	int i0, i1, j0, j1, mt0, mt1;
	//char ch;
	//string sres[2]={"YES", "NO"};
	//string s, st, sr;
	//long double dt, dt0, dt1, dt2, dtr;

	//if(INPUT_FROM) from.open("test.txt");
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);

	//vector<long long> v(nmax+1), vq(nmax+1);
	//vector<long double> v00, v01, v10, v11;
	//vector<vector<int> > vv0, vv1;
	//static char vvc[nmax][mmax];
	//deque<pair<int,int> > dq;
	//vector<pair<int,int> > v;
	//map<char, long long> mi;
	//map<char, long long>::iterator it;
	//typedef map<string, long long>::const_iterator CI;
	//pitem root, p0, p1, pt, px, pMemory;
	//map<pair<int,int>,long double>::iterator it, it0, it1;
	//map<pair<int,int>, long double> mp0, mp1;
	//pair<int,int> pr;

	static long long v0[nmax+1], v1[nmax+1];

	//C_k_n%p=(((v0[n]*v1[k])%p)*v1[n-k])%p;

	v0[0] = 1;
	for(int i=1;i<=nmax;i++) v0[i]=(i*v0[i-1])%p;

	rt = reverse_euclid(v0[nmax], p);
	rt = (rt<0)?(p+rt):rt;
	v1[nmax] = rt;
	for(int i=nmax;i>0;--i) v1[i-1]=(v1[i]*i)%p;


	//fromc>>cases;
	scanf("%d\n", &cases);
	for(int test=1;test<=cases;++test){
		scanf("%d-%d", &a, &b);
		//fromc>>n>>k;

		//pMemory = pt = (pitem)calloc(k+1, sizeof(item));

		r0 = r1 = 0;

		if(a > b){
			if(b == 0) r0 = r1 = 1;
			else{// b > 0
				r0 = (((v0[a+b-1]*v1[a-1])%p)*v1[b])%p;
				r0 -= (((v0[a+b-1]*v1[a])%p)*v1[b-1])%p;
				if(r0 < 0) r0 += p;

				if(b == 1) r1 = 1;
				else{// b > 1
					r1 = (((v0[2*b-1]*v1[b-1])%p)*v1[b])%p;
					r1 -= (((v0[2*b-1]*v1[b-2])%p)*v1[b+1])%p;
					if(r1 < 0) r1 += p;
				}
			}
		}


		//printf("Case #%d: %.6Lf\n", test, dtr);;
		//cout<<"Case #"<<test<<": "<<dt<<endl;
		cout<<"Case #"<<test<<": "<<r0<<' '<<r1<<endl;
		//printf("%lld\n", res);

		//free(pMemory);
	}


	return 0;
}

int reverse_euclid(int a, int p){
	int r, r0, x, x0, y, y0, q;
	//vector<int> v(3);
	int rt, xt, yt;

	//v[0]=r=a; v[1]=x=1; v[2]=y=0;
	rt = r = a; xt = x = 1; yt = y = 0;
	r0=p; x0=0; y0=1;
	while(r0!=0){
		q = r/r0; 
		//v[0]=r0; v[1]=x0; v[2]=y0;
		rt = r0; xt = x0; yt = y0;
		r0 = r-q*r0; 
		x0 = x-q*x0; 
		y0 = y-q*y0; 
		//r=v[0]; x=v[1]; y=v[2];
		r = rt; x = xt; y = yt;
		//(r,x,y,r0,x0,y0)=(r0,x0,y0,r-qr0,x-qx0,y-qy0) 
	} 
	//return v;
	xt = xt<0 ? p+xt : xt;
	return xt;
}