#include<bits/stdc++.h> // CHECK FOR 1-0 AND CORNER TEST CASES LEFT
using namespace std;
int m=1000000007;char in[15];
long long dp[2005][2005]={0},dp1[2005][2005],dp3[2005][2005]={0};
int main()
{
	int i,j,t,a,b,k;
	
	for(i=0;i<=2000;i++)
	{ 
	  for(j=0;j<=2000;j++)
	  {
	    if(j==0)dp[i][j]=1;
	    else if(i<=j)dp[i][j]=0;
	    else dp[i][j] = (dp[i-1][j] + dp[i][j-1])%m;
	
	   
      }
    
	}
	
	for(i=0;i<=2000;i++)
	{
		for(j=0;j<=2000;j++)
		{
		    if(j==0)dp3[i][j]=1;
		    else if(i>=j)dp3[i][j]=(dp3[i-1][j]+dp3[i][j-1])%m;	
		}
	}
	// stressfree done
	// now stressful
	for(i=0;i<=2000;i++)
	{
		for(j=0;j<=2000;j++)
		{
			if(j==0) dp1[i][j]=1;
			else if(i<=j)dp1[i][j]=0;
			else dp1[i][j] = dp3[j][j-1];
		}
	}
	
	cin>>t;
	for(k=1;k<=t;k++)
	{
		
		
	  cin>>in;
	  i=0;a=0;b=0;
	  while(in[i]!='-'){
	  	a=a*10+in[i]-'0';i++;
	  }
	  i++;
	  while(in[i]!='\0'){
	  	b=b*10+in[i]-'0';i++;
	  }
	  cout<<"Case #"<<k<<": ";
	cout<<dp[a][b]%m<<" "<<dp1[a][b]%m<<endl;
	
	
    }
	
	
	
	
	return 0;
}
