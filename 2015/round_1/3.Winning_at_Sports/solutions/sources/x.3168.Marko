// Console.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"

#pragma warning(disable:4996)

#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cmath>
#include <vector>
#include <cstring>
#include <stack>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <list>
using namespace std;

#define _USE_MATH_DEFINES
#include <math.h>

/*#include "..\NeuralNetwork\NeuralNetwork.h"


using namespace Artificial_Inteligence;*/

const int MOD = 1000000007;
FILE *in, *out;
int matsl[2010][2010];
int rek(int a, int b, int g, int h) {
	if ( a > g || b > h )
		return 0;
	if ( a > b && b != h )
		return 0;
	if ( a == g && b == h )
		return 1;
	return rek(a + 1, b, g, h) + rek(a, b + 1, g, h);
}
int matsf[2010][2010];
int _tmain(int argc, _TCHAR* argv[])
{
	in = fopen("in.txt", "r");
	out = fopen("out.txt", "w");
	for ( int i = 1; i < 2010; i++ )
		matsl[0][i] = 1;
	for (int i = 0; i < 2010; i++)
		matsf[0][i] = 1;
	for ( int i = 1; i < 2010; i++ )
		for (int j = i+1; j < 2010; j++) {
			matsl[i][j] = matsl[i-1][j] + matsl[i][j-1];
			matsl[i][j] %= MOD;
		}
	for (int i = 1; i < 2010; i++)
		for (int j = 1; j < 2010; j++) {
			if (i < j) {
				matsf[i][j] = matsf[i - 1][j] + matsf[i][j - 1];
				matsf[i][j] %= MOD;
			} else {
				matsf[i][j] = matsf[i - 1][j];
			}
		}
	int tt, a, b;
	fscanf(in,"%d", &tt);
	for (int t = 0; t < tt; t++) {
		fscanf(in,"%d-%d", &a, &b);
		fprintf(out,"Case #%d: %d %d\n", t+1, matsl[b][a], matsf[a][b]);
	}

	//system("pause");
}

