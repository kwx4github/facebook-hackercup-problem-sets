#include<bits/stdc++.h>
using namespace std;
#define ll long long

ll M = 1000000007;

ll fast_pow(ll a,ll n,ll MOD)
{
    ll result = 1;
    ll power = n;
    ll value = a;
    while(power>0)
    {
        if(power&1){
		result = result*value;
            	result = result % MOD;
	}
        value = value*value;
        value = value % MOD;
        power >>= 1;
    }
    return result;
}

ll findMMI_fermat(ll n,ll M){
	return fast_pow(n,M-2,M);
}

ll factorial(ll n,ll M){
	ll prod=1,a=1;
	while(a<=n){
		prod = (prod*a)%M;
		a++;
	}
	return prod;
}


int main(){
	ll T,t,a,b,numx,denx,inv_denx,fact,diff,sum,sum_inv,product,ans1,numy,deny,den,inv_den,fact2,inv_sum2,ans2;
	char waste;
	scanf("%lld",&T);
	for(t=1;t<=T;t++){
		cin>>a>>waste>>b;
		numx = factorial(a+b,M);
		denx = (factorial(a,M)*factorial(b,M))%M;
		inv_denx = findMMI_fermat(denx,M);
		fact = (inv_denx*numx)%M;
		diff = a-b;
		sum = a+b;
		sum_inv = findMMI_fermat(sum,M);
		product = (sum_inv*diff)%M;
		ans1 = (product*fact)%M;
		numy = factorial(2*b,M);
		deny = factorial(b,M);
		den = (deny*deny)%M;
		inv_den = findMMI_fermat(den,M);
		fact2 = (numy*inv_den)%M;
		inv_sum2 = findMMI_fermat(b+1,M);
		ans2 = (inv_sum2*fact2)%M;
		printf("Case #%lld: %lld %lld\n",t,ans1,ans2);		
	}
	return 0;
}
