#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <vector>
#include <memory.h>
#include <cstdio>
#include <cmath>

using namespace std;

const int N = 3333;
const int MOD = 1000000007;
typedef long long ll;

ll f[N][N];
ll g[N][N];
ll G[N][N];

int main() {
    f[1][0] = 1;
    for (int A = 1; A < N; ++A)
        for (int B = 0; B < A; ++B) {
            if (A + 1 < N) {
                f[A + 1][B] = (f[A + 1][B] + f[A][B]) % MOD;
            }

            if (B + 1 < N && B + 1 < A) {
                f[A][B + 1] = (f[A][B + 1] + f[A][B]) % MOD;
            }
        }

    g[0][0] = 1;
    for (int B = 0; B < N; ++B)
        for (int A = 0; A <= B; ++A) {
            if (B + 1 < N) {
                g[A][B + 1] = (g[A][B + 1] + g[A][B]) % MOD;
            }
            if (A + 1 < N && A + 1 <= B) {
                g[A + 1][B] = (g[A + 1][B] + g[A][B]) % MOD;
            }
        }

    int T;
    scanf("%d\n", &T);

    for (int _t = 1; _t <= T; _t++) {
        int A, B;
        scanf("%d-%d\n", &A, &B);

        printf("Case #%d: ", _t);
        cout << f[A][B] << " " << g[B][B] << endl;
    }

    return 0;
}

