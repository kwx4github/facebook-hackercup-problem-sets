#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define NUM 1000000007
#define ex(arr,i,j,m,n) arr[(i)*n+(j)]

//typedef signed long long int int64_t;
//typedef signed char int8_t;

int
num_ways(int id, int *a, int x, int y)
{
  int m = x+1;
  int n = y+1;
  int i, j;

  for (i=0; i<m; i++) {
    for (j=0; j<n; j++) {
      if (j < i) {
        if (j == 0) {
          ex(a, i, j, m, n) = 1;
        } else if (i == j+1) {
          ex(a, i, j, m, n) = ex(a, i, j-1, m, n);
        } else {
          ex(a, i, j, m, n) = ex(a, i-1, j, m, n) + ex(a, i, j-1, m, n);
        }
      } else {
        if (i == 0) {
          ex(a, i, j, m, n) = 1;
        } else if (i == j) {
          ex(a, i, j, m, n) = ex(a, i-1, j, m, n);
        } else {
          ex(a, i, j, m, n) = ex(a, i-1, j, m, n) + ex(a, i, j-1, m, n);
        }
      }

      if(ex(a, i, j, m, n) >= NUM) {
        ex(a, i, j, m, n) = ex(a, i, j, m, n)%NUM;
      }
    }
  }

  printf("Case #%d: %d %d\n", id, ex(a, x, y, m, n), ex(a, y, y, m, n));
  return 0; 
}

int 
main(int argc, char **argv)
{
  int i, t;
  int a, b;

  int *arr = malloc(sizeof(int)*2010*2010);
  
  scanf("%d\n", &t);
  for(i=0; i<t; i++) {
    scanf("%d-%d", &a, &b);
    num_ways(i+1, arr, a, b);
  }
 
  return 0;
}
