#include <stdio.h>
#include <vector>
#include <queue>
#include <string.h>
#include <stdlib.h>
#include <cstdio>
#include <map>
#include <string>
#include <iostream>
#include <algorithm>
#include <math.h>
#include <limits.h>
#define llu long long unsigned
#define ld long
#define F first
#define S second
#define ll long long
#define LN 14
#define Max(x,y) ((x>y)?x:y)
#define Min(x,y) ((x<y)?x:y)
#define res 1000000007
using namespace std;
int n,m;
// std::vector<int> v[10];
int DP[2003][2003],DP2[2003][2003];
ll dp(ll a,ll b)
{
    ll temp,temp2;
    if(DP[a][b]) return DP[a][b];
    if(a<=b) return 0;
    if(a==n||b==m) return 1;
    temp=dp(a+1,b);
    temp2=dp(a,b+1);
    DP[a][b]=(temp+temp2)%res;
    return DP[a][b];
}
ll dp2(ll a,ll b)
{
    ll temp,temp2;
    if(DP2[a][b]) return DP2[a][b];
    if(a>b) return 0;
    if(a==n||b==m) return 1;
    // printf("a\n");
    temp=dp2(a+1,b);
    temp2=dp2(a,b+1);
    DP2[a][b]=(temp+temp2)%res;
    return DP2[a][b];
}
char str[30];

int main()
{
    // std::vector<int> ::iterator temp1,temp2;
    int t,i,j,count1=1;
    scanf("%d",&t);
    
    while(t--)
    {
        memset(DP,0,sizeof(DP));
        scanf("%s",str);
        int a=0,b=0;
        // int a=str[0]-48;
        int len=strlen(str);
        for(i=0;i<len;i++)
        {
            // printf("%d\n", str[i]);
            
            if(str[i]=='-')
            {
                a=b;
                b=0;
                continue;
                // break;
            }
            b=10*b+str[i]-48;
        }
        n=a;m=b;
        ll ans=dp(1,0);
        memset(DP2,0,sizeof(DP2));
        ll ans2=dp2(0,0);
        printf("Case #%d: %lld %lld\n",count1++, ans,ans2);
    }
    return 0;
}
