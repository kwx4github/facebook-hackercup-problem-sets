#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll p = 1e9+7;

ll coef[4005][2005]; ll catalan[2005];
ll paths[2005][2005];
ll modp(ll x) {
    return ((x%p)+p)%p;
}

int main() {
    ifstream cin("newfile.txt");
    ofstream cout("newfile.out");

    coef[0][0] = 1; for (int i = 0; i < 4005; ++i)
        for (int j = 0; j < 2005; ++j) {
            if (j == 0) {
                coef[i][j] = 1; continue;
            } if (j > i) {
                coef[i][j] = 0; continue;
            }
            
            coef[i][j] = (coef[i-1][j] + coef[i-1][j-1])%p;
        }
    
    catalan[0] = 1; for (int i = 1; i < 2005; ++i) {
        catalan[i] = modp(coef[2*i][i] - coef[2*i][i-1]);
    }
    
    for (int i = 0; i < 2005; ++i)
        for (int j = 0; j < 2005; ++j) {
            if (i == j && i == 0) {
                paths[i][j] = 1; continue;
            } if (j > i)  {
                paths[i][j] = 0; continue;
            }
            
            paths[i][j] = 0; for (int k = 1; k <= j; ++k) {
                paths[i][j] += (catalan[k-1]*paths[i-k][j-k])%p;
                paths[i][j] %= p;
            }
            
            paths[i][j] += paths[i-1][j]; paths[i][j] %= p;
        }
    
    int t; cin >> t; for (int i = 0; i < t; ++i) {
        int x, y; cin >> x; char b; cin >> b; cin >> y;
        cout << "Case #" << i+1 << ": " << paths[x-1][y] << ' ' << catalan[y] << endl;
    }
}