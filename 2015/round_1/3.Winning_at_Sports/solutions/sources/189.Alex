import java.io.*;
import java.util.*;

public class C {

	final static String input = "winning_at_sports.txt";
	final static String output = "output.txt";

	int m = 2048;
	long mod = 1_000_000_007;
	long[][][] dp = new long[2][m][m];

	void initDp() {
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < i; j++) {
				if (i == 1 && j == 0) {
					dp[0][i][j] = 1;
				} else {
					if (i > 0) {
						dp[0][i][j] = (dp[0][i][j] + dp[0][i - 1][j]) % mod;
					}
					if (j > 0) {
						dp[0][i][j] = (dp[0][i][j] + dp[0][i][j - 1]) % mod;
					}
				}
			}
		}
		for (int i = 0; i < m; i++) {
			for (int j = 0; j <= i; j++) {
				if (i == 0 && j == 0) {
					dp[1][i][j] = 1;
				} else {
					if (i > 0) {
						dp[1][i][j] = (dp[1][i][j] + dp[1][i - 1][j]) % mod;
					}
					if (j > 0) {
						dp[1][i][j] = (dp[1][i][j] + dp[1][i][j - 1]) % mod;
					}
				}
			}
		}
	}

	long stressFree(int hs, int ls) {
		return dp[0][hs][ls];
	}

	long stressFul(int hs, int ls) {
		return dp[1][ls][ls];
	}

	void run() {
		initDp();
		int tests = nextInt();
		for (int test = 1; test <= tests; test++) {
			String[] score = nextLine().split("-");
			int hs = Integer.parseInt(score[0]);
			int ls = Integer.parseInt(score[1]);

			out.printf("Case #%d: %d %d%n", test, stressFree(hs, ls), stressFul(hs, ls));

		}

	}

	String next() {
		while (st == null || !st.hasMoreTokens()) {
			st = new StringTokenizer(nextLine());
		}
		return st.nextToken();
	}

	String nextLine() {
		try {
			return in.readLine();
		} catch (IOException e) {
			return null;
		}
	}

	boolean hasNext() {
		while (st == null || !st.hasMoreTokens()) {
			String line = nextLine();
			if (line == null) {
				return false;
			}
			st = new StringTokenizer(line);
		}
		return true;
	}

	int[] nextArray(int n) {
		int[] array = new int[n];
		for (int i = 0; i < n; i++)
			array[i] = nextInt();
		return array;
	}

	int nextInt() {
		return Integer.parseInt(next());
	}

	long nextLong() {
		return Long.parseLong(next());
	}

	static PrintWriter out;
	static BufferedReader in;
	static StringTokenizer st;

	public static void main(String[] args) throws IOException {
		long timeout = System.currentTimeMillis();
		in = new BufferedReader(new FileReader(new File(input)));
		out = new PrintWriter(new File(output));

		new C().run();

		System.out.println(System.currentTimeMillis() - timeout);

		in.close();
		out.close();
	}

}