#include <iostream>
#include <cstring>
#include <string>
#include <cmath>
#include <cstdio>
using namespace std;

const long long m = 1000000007ll;
const int l = 2010;
long long dp[2][l][l];

void preprocess() {
	memset(dp, 0, sizeof dp);

	dp[0][0][0] = 0;
	dp[1][0][0] = 1;
	for (int i = 1; i < l; i++) {
		dp[0][i][0] = 1;
		dp[1][0][i] = 1;
	}
	for (int i = 1; i < l; i++) {
		for (int j = i+1; j < l; j++) {
			if (j > i-1) {
				dp[0][j][i] = (dp[0][j][i] + dp[0][j][i-1]) % m;
			}
			if (j-1 > i) {
				dp[0][j][i] = (dp[0][j][i] + dp[0][j-1][i]) % m;
			}
		}

		for (int j = 1; j <= i; j++) {
			if (j <= i-1) {
				dp[1][j][i] = (dp[1][j][i] + dp[1][j][i-1]) % m;
			}
			if (j-1 <= i) {
				dp[1][j][i] = (dp[1][j][i] + dp[1][j-1][i]) % m;
			}
		}
	}
}

int main() {
	int t;
	char c;
	int a, b;
	preprocess();

	cin >> t;
	for (int C = 1; C <= t; C++) {
		cin >> a >> c >> b;
		printf("Case #%d: %lld %lld\n", C, dp[0][a][b], dp[1][b][b]);
	}

	return 0;
}