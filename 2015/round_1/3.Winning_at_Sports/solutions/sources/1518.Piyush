#include <bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define X first
#define Y second
#define LL long long int
#define PII pair<int,int>

using namespace std;

const int oo = (1 << 30) ;
const long long int OO = (1LL << 62); 
const int MOD = 1000000007;

#define trace1(x) cerr << #x << ": " << x << "\n";
#define trace2(x,y) cerr << #x << ": " << x << " | " << #y << ": " << y << "\n";
#define trace3(x,y,z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << "\n";
#define trace4(a,b,c,d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " <<  #d << ": " << d << "\n";
#define trace5(a,b,c,d,e) cerr << #a << ": " << a << " | " << #b << ": " << c << " | " << #c << ": " <<  c << " | " << #d << ": " << d << " | " << #e << ": " << e << "\n";
#define trace6(a,b,c,d,e,f) cerr << #a << ": " << a << " | " << #b << ": " << c << " | " << #c << ": " << c << " | " << #d << ": " << d  << " | " << #e << ": " << e << " | " << #f << ": " << f << "\n";

const int MAXN = 5002;

int comb[MAXN + 1][MAXN + 1];

void init() {
	for (int i = 0;i < MAXN; ++i) {
		for (int j = 0; j <= i; ++j) {
			if (j == 0 or j == i) {
				comb[i][j] = 1;
			} else {
				comb[i][j] = (comb[i-1][j] + comb[i-1][j-1]);
				if(comb[i][j] >= MOD) comb[i][j] -= MOD;
			}
 		}
	}
}

int catalan(int a, int b) {
	if (b < 0) return 0;
	int ret = comb[a + b][b] - comb[a + b][b - 1];
	if (ret < 0) ret += MOD;
	ret %= MOD;
	return ret;
}

int main() {
	init();
	int T;
	scanf("%d",&T);
	for (int I = 1;I <= T; ++I) {
		int a,b;
		scanf("%d-%d",&a,&b);
		int ans1 = catalan(a-1, b);
		int ans2 = catalan(b, b);
		printf("Case #%d: %d %d\n", I, ans1, ans2);
	}
	return 0;
}