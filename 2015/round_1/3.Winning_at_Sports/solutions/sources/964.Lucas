#include <bits/stdc++.h>

using namespace std;

#define DEBUG_ON 0

#define INF 0x3f3f3f3f
#define REP(i,n) for(int i = 0; i < (n); ++i)
#define REPD(i,n) for(int i = (n)-1; i >= 0; --i)
#define R(x) scanf(" %d",&x)
#define RR(x,y) scanf(" %d %d",&x,&y)
#define DBG(x) if(DEBUG_ON) cout << #x << " == " << x << endl

typedef long long ll;
typedef pair<int,int> ii;

#define MAXN 4010
#define MOD 1000000007

int p1, p2;
int pd1[MAXN][MAXN], pd2[MAXN][MAXN];
char scores[MAXN];

int solve1(int tot, int d) {
  int a, b;
  a = (tot + d)/2;
  b = tot - a;
  int &ans = pd1[tot][d];
  if (ans != -1) return ans;
  
  if (d == 0) return ans = 0;
  if (tot == p1 + p2) return ans = 1;

  ans = 0;
  if (a < p1) ans = solve1(tot+1, d + 1);
  if (b < p2) ans = (ans + solve1(tot + 1, d - 1))%MOD;
  return ans;  
}

int solve2(int tot, int d) {
  if (d < 0) return 0;
  int &ans = pd2[tot][d];
  int a, b;
  b = (tot + d)/2;
  a = tot - b;
  if (ans != -1) return ans;
  if (b == p2 && a < p1) return ans = 1;  
  ans = 0;
  if (a < p1) ans = solve2(tot+1, d - 1);
  if (b < p2) ans = (ans + solve2(tot + 1, d + 1))%MOD;
  return ans;  
}

int main() {
  int nt; R(nt);
  REP(t,nt) {
    scanf(" %s",scores);
    int n = strlen(scores);
    p1 = p2 = 0;
    
    int i = 0;
    while (scores[i] != '-') {
      p1*=10;
      p1 += scores[i] - '0';
      i++;
    }
    i++;
    while (i < n) {
      p2*=10;
      p2 += scores[i] - '0';
      i++;
    }
    
    memset(pd1,-1,sizeof(pd1));
    memset(pd2,-1,sizeof(pd2));
    
    printf("Case #%d: %d %d\n",t+1, solve1(1, 1), solve2(0,0));
  }
  return 0;
}
