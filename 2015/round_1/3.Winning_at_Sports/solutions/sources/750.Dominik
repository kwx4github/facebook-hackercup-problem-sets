#include <cstdio>
#include <algorithm>
#include <cstring>

using namespace std;

typedef long long llint;

const int MAXN = 2005;
const int mod = 1000000007;

llint dp[MAXN][MAXN][2];
llint dp1[MAXN][MAXN][2];

int main (void){
  int t; scanf("%d", &t);

  dp[1][0][0] = 1;
  dp[1][0][1] = 1;
  
  for (int i = 2; i < MAXN; ++i)
    for (int j = 0; j < i; ++j){
      llint d0, d1; d0 = d1 = 0;
      if (i - 1 > j) d0 += dp[i-1][j][0];
      if (j > 0) d0 += dp[i][j-1][0];

      if (i - 1 > j) d1 += dp[i-1][j][1];
      if (j > 0) d1 += dp[i][j-1][0];

      dp[i][j][0] = d0%mod;
      dp[i][j][1] = d1%mod;
    }

  dp1[0][0][0] = 1;
  dp1[0][0][1] = 1;
  
  for (int i = 0; i < MAXN; ++i)
    for (int j = 0; j < MAXN; ++j){
      if (i == 0 && j == 0) continue;
      llint d0, d1; d0 = d1 = 0;

      if (i > 0 && i <= j) d0 += dp1[i-1][j][0];
      if (j > 0 && j-1 >= i) d0 += dp1[i][j-1][0];

      if (i > 0) d1 += dp1[i-1][j][1];
      if (j > 0) d1 += dp1[i][j-1][0];

      dp1[i][j][0] = d0%mod;
      dp1[i][j][1] = d1%mod;
    }

  for (int tc = 1; tc <= t; ++tc){
    int a, b; scanf("%d-%d", &a, &b);
    printf("Case #%d: %lld %lld\n", tc, dp[a][b][1], dp1[a][b][1]);
  }

  return 0;
}

