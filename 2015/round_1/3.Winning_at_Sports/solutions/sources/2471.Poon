#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<iostream>
#include<algorithm>
#include<string>
#include<vector>
#include<set>
#include<queue>
#include<map>
#include<bitset>
using namespace std;
#define PII pair<int,int>
#define X first
#define Y second
#define PB push_back
#define CLR(a) memset(a, 0, sizeof(a))
#define FOR(i,a,b) for (int i=(a);i<(b);i++)
#define FOE(i,a,b) for (int i=(a);i<=(b);i++)
#define FIT(i,a) for (__typeof__((a).begin()) i = (a).begin(); i != (a).end(); i++)
#define TRA(i,a,b) for (int i = (a); i != -1; i = (b)[i])
#define INF (1 << 30)
#define EPS (1e-9)
#define REP(i,n) FOR(i,0,n)
#define LL long long
#define M 1000000007
#define N 2010
int n, m;
char s[1000];
LL dp1[N][N], dp2[N][N];

LL f1(int x, int y){
	if (dp1[x][y] != -1) return dp1[x][y];
	if (!y) return dp1[x][y] = 1;
	LL ret = f1(x, y - 1);
	if (x - 1 > y) ret = (ret + f1(x - 1, y)) % M;
	return dp1[x][y] = ret;
}

LL f2(int x, int y){
	if (dp2[x][y] != -1) return dp2[x][y];
	if (!x) return dp2[x][y] = 1;
	LL ret = f2(x - 1, y);
	if (y > x) ret = (ret + f2(x, y - 1)) % M;
	return dp2[x][y] = ret;
}

int main(){
	memset(dp1, -1, sizeof(dp1));
	memset(dp2, -1, sizeof(dp2));

	int T;
	scanf("%d", &T);
	FOE(cc,1,T){
		int a, b;
		printf("Case #%d: ", cc);
		scanf("%s", s);
		char *p = strtok(s, "-");
		sscanf(p, "%d", &a);
		p = strtok(NULL, "-");
		sscanf(p, "%d", &b);
		printf("%d %d\n", f1(a, b), f2(a, b));
	}
	return 0;
}

