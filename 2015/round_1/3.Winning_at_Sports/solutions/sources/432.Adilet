#include <iostream>
#include <fstream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <cstring>
#include <cassert>
#include <utility>
#include <iomanip>

using namespace std;

const int mod = 1000000007;
const int MAXN = 2050;

int tn;
int dp1[MAXN][MAXN];
int dp2[MAXN][MAXN];

int main() {
	//assert(freopen("input.txt","r",stdin));
	//assert(freopen("output.txt","w",stdout));

	dp1[1][0] = 1;
	for (int i = 0; i < MAXN; i++) {
		for (int j = 0; j < MAXN; j++) {
			if (i <= j)
				continue;
			if (i > 0)
				dp1[i][j] = (dp1[i][j] + dp1[i - 1][j]) % mod;
			if (j > 0) 
				dp1[i][j] = (dp1[i][j] + dp1[i][j - 1]) % mod;
		}
	}

	dp2[0][0] = 1;
	for (int i = 0; i < MAXN; i++) {
		for (int j = 0; j < MAXN; j++) {
			if (i > j)
				continue;
			if (i > 0)
				dp2[i][j] = (dp2[i][j] + dp2[i - 1][j]) % mod;
			if (j > 0) 
				dp2[i][j] = (dp2[i][j] + dp2[i][j - 1]) % mod;
		}
	}

	scanf("%d\n", &tn);

    for (int test = 1; test <= tn; test++) {
    	int a, b;
    	scanf("%d-%d\n", &a, &b);
    	printf("Case #%d: %d %d\n", test, dp1[a][b], dp2[b][b]);
    }                         

	return 0;
}