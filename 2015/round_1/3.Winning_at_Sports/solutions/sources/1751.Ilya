#include <stdio.h>

using namespace std;

typedef long long LL;
const int MOD = 1e9+7;


const int N = 2000;

int fa, fb;
int t;

int sfree[N + 1][N + 1];
int sfull[N + 1][N + 1];

void clear() {
	for (int i = 0; i <= N; ++i) {
		for (int j = 0; j < N; ++j) {
			sfree[i][j] = -1;
			sfull[i][j] = -1;
		}
	}
	return;
}
int getsfull(int a, int b) {
	if (a > fa || b > fb)
		return 0;
	if (b == fb)
		return 1;
	if (sfull[a][b] != -1)
		return sfull[a][b];
	LL res = 0;
	res += (LL)getsfull(a, b + 1);
	if (a < b)
		res += (LL)getsfull(a + 1, b);
	return sfull[a][b] = res % MOD;
}

int getsfree(int a, int b) {
	if (a > fa || b > fb)
		return 0;
	if (a == fa && b == fb)
		return 1;
	if (sfree[a][b] != -1)
		return sfree[a][b];
	LL res = 0;
	res += (LL)getsfree(a + 1, b);
	if (a > b + 1)
		res += (LL)getsfree(a, b + 1);
	return sfree[a][b] = res % MOD;
}





int main() {
	scanf("%d", &t);
	for (int q = 0; q < t; ++q) {
		scanf("%d-%d", &fa, &fb);
		clear();
		printf("Case #%d: %d %d\n", q + 1, getsfree(1, 0), getsfull(0, 0));
	}

	return 0;
}