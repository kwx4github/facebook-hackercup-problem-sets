#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <map>
#include <set>
#include <list>
#include <algorithm>
#include <cctype>
#include <queue>
#include <complex>
#include <functional>
#include <sstream>
#include <tuple>

using namespace std;
const int maxn = 2100;
const long long mod = 1000000007;

long long sful[maxn][maxn];
long long sfree[maxn][maxn];

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    sful[0][0] = 1;
    sfree[1][0] = 1;
    for (int i = 0; i < maxn; i++)
    	for (int j = 0; j < maxn; j++)
    		if (i > 1 || j > 0)
    		{
    			if (i > 0 && i <= j)
    				sful[i][j] = sful[i - 1][j];
    			if (j > 0 && i <= j - 1)
    				sful[i][j] = (sful[i][j] + sful[i][j - 1]) % mod;

    			if (i - 1 > j)
    				sfree[i][j] = sfree[i - 1][j];
    			if (i > j && j > 0)
    				sfree[i][j] = (sfree[i][j] + sfree[i][j - 1]) % mod;
    		}


    int tn;
    cin >> tn;
    for (int tc = 0; tc < tn; tc++)
    {
    	int a, b;
    	string s;
    	cin >> s;
    	int e = s.find("-");
    	
    	stringstream s1;
    	s1 << s.substr(0, e);
    	s1 >> a;
    	
    	stringstream s2;
    	s2 << s.substr(e + 1);
    	s2 >> b;
    	
    	cout << "Case #" << tc + 1 << ": " << sfree[a][b] << " " << sful[b][b] << endl;
    }
    return 0;
}