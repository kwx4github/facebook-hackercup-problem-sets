#include <bits/stdc++.h>
using namespace std;
typedef int ll;
#define F(i,a,b) for(ll i=a;i<=b;i++)
#define mp make_pair
#define pb push_back 
#define X first
#define Y second
#define pi 3.14159265
#define mod 1000000007

double dist(double x1,double y1,double x2,double y2){
    return sqrt( (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1) ); }

ll gcd(ll a,ll b){
    if(b==0) return a; else return gcd(b,a%b); }

ll exp(ll a,ll b){
    if(b==0) return 1; else if(b&1) return a*exp(a,b/2); else { ll ans=exp(a,b/2); return ans*ans; } }

void sieve(ll n,bool *prime,ll *c){
    prime[0]=1; prime[1]=1;
    for(ll i=2;i<=n;i++) 
    if(prime[i]==0)
	{		c[i]++;
			for(ll j=2;j*i<=n;j++) 
			{
				prime[i*j]=1;
				c[i*j]++;
			}
	}
	 
    }
    
struct cmp{
  bool operator()(pair<ll,ll> const& lhs, pair<ll,ll> const& rhs){
    return lhs.Y >=rhs.Y;
  }
};

ll full[2001][2001];
ll fr[2001][2001];

ll cfull(ll w,ll l){
	
	if(l<0 || w<0)
	return 0;
	
	if(w<=l) //w always more
	return 0;
	
	if(full[w][l]!=-1)
	return full[w][l];
	
	if(w==0) //w is >=1
	{
		full[w][l]=0;
		return 0;
	}
	
	if(l==0) //if l is 0 then any w,0 can be reached by only 1 way, incrementing w continously
	{	full[w][l]=1;
		return 1;
	}
	
	full[w][l]=0;
	
	if(w-1>l) //w-1>l
	full[w][l]=(full[w][l]+cfull(w-1,l))%mod;
	
	if(w>l-1) //w>l-1
	full[w][l]=(full[w][l]+cfull(w,l-1))%mod;
	
	return full[w][l];
}

ll cfr(ll w,ll l){
	
	if(l<0 || w<0)
	return 0;
	
	if(w>l) //w cant be more than l
	return 0;
	
	if(fr[w][l]!=-1)
	return fr[w][l];
	
	if(l==0 && w==0) //base case w==l
	{
		fr[w][l]=1;
		return fr[w][l];
	}
	
	fr[w][l]=0;
	
	if(w-1<=l)
	{
		fr[w][l]=(fr[w][l]+cfr(w-1,l) )%mod;
	}
	
	if(w<=l-1)
	{
		fr[w][l]=(fr[w][l]+cfr(w,l-1) )%mod;
	}
	
	
	return fr[w][l];
}

int main(){
	
	cin.sync_with_stdio(0);

	memset(full,-1,sizeof(full));
	memset(fr,-1,sizeof(fr));	

	cfull(2000,1999);
	
	cfr(2000,2000);

	ll t;
	
	cin>>t;
	
	F(k,1,t)
	{
		ll a;
		char c;
		ll b;
		ll ans1;
		ll ans2;
		
		cin>>a>>c>>b;	
		
		ans1=cfull(a,b);
		
		ans2=cfr(b,b);
		
		cout<<"Case #"<<k<<": "<<ans1<<" "<<ans2<<"\n"; 
	}

	return 0;
}
