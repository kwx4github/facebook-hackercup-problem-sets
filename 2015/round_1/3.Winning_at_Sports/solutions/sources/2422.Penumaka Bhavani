#include <iostream>
#include <map>
#define MOD 1000000007
using namespace std;

map < int , long long int > mp[2002];
//stress free
long long int f(int A, int B) {
	if (B == 0) {
		return 1;
	}
	if ( A <= B ) return 0;
	if ( mp[A].find(B) != mp[A].end() ) return mp[A][B];
	if ( B == A-1) {
		return f(A,B-1)%MOD;
	}
	
	long long int ret = (f(A-1,B)%MOD+f(A,B-1)%MOD)%MOD;
	mp[A][B] = ret;
	return ret; 	
}
map <int, long long int> mp2[2002];
// stress ful
long long int g(int A, int B) {

	if ( A > B ) return g(B,B);
	if ( A == 0 ) return 1;
	
	if ( mp2[A].find(B) != mp2[A].end() ) return mp2[A][B];
	if ( A == B ) return g(A-1,B)%MOD;
	long long int ret = (g(A-1,B)%MOD+g(A,B-1)%MOD)%MOD;
	mp2[A][B] = ret;
	return ret;	
}
int main() {
	int T;
	cin >> T;
	for (int i = 0 ; i < T; i++ ) {
		string str;
		cin >> str;
		int A[] = {0,0};
		int index = 0;
		for ( int j = 0 ;  j < str.size(); j++ ) {
			if ( str[j] == '-' ) {
				j++; index++;
			}
			A[index] =A[index]*10+ (str[j] - '0');
		}
	//	cout << A[0] << " "<< 	A[1]<<endl;
		cout << "Case #"<<(i+1)<<": "<< f(A[0],A[1]) << " "<<g(A[0],A[1])<<endl;	
	}
}
