//Anirudh Bhargava
#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cmath>
#include <ctype.h>
#include <stack>
#include <queue>
#include <limits.h>
#include <fstream>
#include <map>
#include <set>

#define rep(i, a) for(long long int i = 0; i < a; i++)
#define rep1(i, a) for(long long int i = 1; i <= a; i++)
#define fo(i, a, b) for(long long int i = a; i < b; i++)
#define defo(i, a, b) for(long long int i = a; i >= b; i--)
#define ll long long
#define Int long long int
#define pr(i) printf("Case #%lld: ",i)
#define pb push_back
#define sz(a) ((long long int)(a.size()))
#define x first
#define y second
#define SET(x, a) memset(x, a, sizeof(x));
#define pi  3.1415926535897
#define mod 1000000007
using namespace std;
Int C[4005][4005];
void pre(){
    Int i,j;
    for(i=0;i<4005;i++){
        C[i][0] = 1;
        C[i][i] = 1;
    }
    for(i=2;i<4005;i++){
        for(j=1;j<i;j++){
            C[i][j] = (C[i-1][j-1]+C[i-1][j])%mod;
        }
    }
    //cout<<C[5][2]<<"\n";
    return;
}
long long binpow(long long val, long long deg, long long m) {
        if (!deg) return 1 % m;
        if (deg & 1) return binpow(val, deg - 1, mod) * val % m;
        long long res = binpow(val ,deg >> 1, m);
        return (res*res) % m;
}
Int a,b;
Int dp[2005][2005];
Int rec(Int r,Int g){
    if(r<0||g<0){
        return 0;
    }
    if(r==0||g==0){
        return 1;
    }
    if(dp[r][g]!=-1){
        return dp[r][g];
    }
    if((a-r)==(b-g+1)){
        dp[r][g] = (rec(r-1,g))%mod;
        return dp[r][g];
    }
    Int ans = (rec(r,g-1)+rec(r-1,g))%mod;
    dp[r][g] = ans;
    return ans;
}
int main(){
    freopen("winning_at_sports.txt","r",stdin);
    freopen("output.txt","w",stdout);
    pre();
    Int test,l=0;
    cin>>test;
    while(test--){
        a = 0;
        b = 0;
        l++;
        string s;
        cin>>s;
        int i;
        memset(dp,-1,sizeof(dp));
        for(i=0;i<s.size();i++){
            if(s[i]=='-'){
                i++;
                break;
            }
            int d = s[i]-'0';
            a = a*10+d;
        }
        for(;i<s.size();i++){
            int d = s[i]-'0';
            b = b*10+d;
        }
        Int ans = (C[2*b][b]*binpow(b+1,mod-2,mod))%mod;
        Int ans1 = rec(a-1,b);
        pr(l);
        printf("%lld %lld\n",ans1,ans);
    }
    return 0;
}

