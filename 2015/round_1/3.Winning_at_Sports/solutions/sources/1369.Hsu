#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <vector>
using namespace std;

const int maxn = 2010;
const int mod = 1000000007;

int dp[maxn][maxn], dp0[maxn][maxn];

inline void init(){
  memset(dp, 0, sizeof(dp));
  memset(dp0, 0, sizeof(dp0));

  for(int i = 0; i < maxn; i++) dp[i][0] = 1;
  for(int i = 1; i < maxn; i++)
  for(int j = 1; j < i; j++){
    dp[i][j] += dp[i][j - 1];
    if(i - 1 > j) dp[i][j] = (dp[i][j] + dp[i - 1][j]) % mod;
  }

  for(int i = 0; i < maxn; i++) dp0[i][0] = 1;
  for(int i = 1; i < maxn; i++)
  for(int j = 1; j <= i; j++){
    dp0[i][j] += dp0[i][j - 1];
    if(i > j) dp0[i][j] = (dp0[i][j] + dp0[i - 1][j]) % mod;
  }
}

inline int extract(char str[], int &idx){
  int res = 0;
  while(str[idx] < '0' || str[idx] > '9') idx++;
  while(str[idx] >= '0' && str[idx] <= '9') res = res * 10 + str[idx++] - '0';
  return res;
}

int main(){
  int cas, a, b;
  char input[maxn];

  init();

  scanf("%d", &cas);
  for(int cascnt = 1; cascnt <= cas; cascnt++){
    scanf("%s", input);

    int idx = 0;
    a = extract(input, idx);
    b = extract(input, idx);

    printf("Case #%d: %d %d\n", cascnt, dp[a][b], dp0[b][b]);
  }
  return 0;
}
