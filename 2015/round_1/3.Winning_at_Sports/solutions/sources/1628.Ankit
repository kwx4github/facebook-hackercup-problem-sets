#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007
typedef long long int LL;

int n, m, tc;

LL dp1[2005][2005], dp2[2005][2005];

LL cal_stressFree(){
	/*if(f==n&&s==m){
		return 1;
	}
	else{
		if(f==n&&s<m)
		return cal(f, s+1);
		else{
			if(f==s){
				return cal(f+1, s);
			}else{
				if(f>s&&((f-s)>1)){
					return (cal(f+1,s)+cal(f,s+1))%MOD;
				}else{
					if(f>s){
						return cal(f+1, s);
					}
				}
			}
		}
	}*/
	memset(dp1, 0, sizeof(dp1));
	for(int f=n;f>=0;f--){
		for(int s=m;s>=0;s--){
			if(f<s)
				dp1[f][s]= 0;
			else{
				if((f==n)&&(s==m)){
					dp1[f][s]= 1;
				}else{
					if(f==n&&s<m){
						dp1[f][s]=(dp1[f][s]+dp1[f][s+1])%MOD;
					}else{
						if(f==s){
							dp1[f][s]=(dp1[f][s]+dp1[f+1][s])%MOD; 
						}else{
							if(f>s&&((f-s)>1)){
								dp1[f][s]= (dp1[f][s]+(dp1[f+1][s]+dp1[f][s+1])%MOD)%MOD;
							}else{
								if(f>s){
									dp1[f][s]= (dp1[f][s]+dp1[f+1][s])%MOD;
								}
							}
						}
					}
					
				}
			}	
		}
	}
	return dp1[0][0];
}

LL cal_streeFul(){
	memset(dp2, 0, sizeof(dp2));
	for(int s=m;s>=0;s--){
		for(int f=n;f>=0;f--){
			if((f==n)&&(s==m)){
				dp2[f][s]= 1;
			}else{
				if(s==m){
					dp2[f][s]= 1;
				}else{
					if((f>s)&&s!=m)
						dp2[f][s]= 0;
					else{
						if(f==s){
							dp2[f][s]= (dp2[f][s]+dp2[f][s+1])%MOD;
						}else{
							if(f<s){
								dp2[f][s]= (dp2[f][s]+(dp2[f+1][s]+dp2[f][s+1])%MOD)%MOD;
							}
						}
					}	
				}
				
			}	
		}
	}
	return dp2[0][0];
}

int main(){
	//freopen("aain.txt", "r", stdin);
	//freopen("aaout.txt", "w", stdout);
	
	char c;
	int t=0;
	scanf("%d", &tc);
	
	while(tc--){
		t++;	
		cin>>n>>c>>m;
		cout<<"Case #"<<t<<": "<<cal_stressFree()<<" "<<cal_streeFul()<<"\n";
	}
}
