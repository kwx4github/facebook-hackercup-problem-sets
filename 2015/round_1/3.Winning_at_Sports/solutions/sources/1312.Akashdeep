#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define sz size()

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;
const int mod = 1000000007;

int a,b;
LL memo[2002][2002];

LL solve(int x, int y, bool flag) {
	LL &res = memo[x][y];
	if(res != -1) return res;

	if(x == a && y == b) return 1;

	if(!flag) {
		res = 0;
		if(x < a) {
			res += solve(x+1, y, flag);
			res %= mod;
			if(y+1 < x && y != b) {
				res += solve(x, y+1, flag);
				res %= mod;
			}
		} else {
			res += solve(x, y+1, flag);
			res %= mod;
		}
		
	} else {
		res = 0;
		if(y < b) {
			res += solve(x, y+1, flag);
			res %= mod;
			if(x+1 <= y) {
				res += solve(x+1, y, flag);
				res %= mod;
			}
		} else {
			res += solve(x+1, y, flag);
			res %= mod;
		}
	}

	return res;
}

int main() {
	int t;
	S(t);
	rep(tc,1,t+1) {
		scanf("%d-%d",&a,&b);
		memset(memo, -1, sizeof(memo));
		int ans = solve(0,0,false);
		memset(memo, -1, sizeof(memo));
		int ans1 = solve(0,0,true);
		printf("Case #%d: %d %d\n",tc,ans,ans1);
	}

	return 0;
}