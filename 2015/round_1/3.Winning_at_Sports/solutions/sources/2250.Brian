#include <iostream>
#include <vector>
using namespace std;

int stress_free(int a, int b) {
  vector<int> V;
  for (int i = 1; i <= a+b; i++) {
    bool extend = false;
    if (i <= (b*2)+1) {
      if (i % 2 != 0) {
        V.push_back((V.size() > 0) ? V.back() : 1);
        extend = true;
      }
    }
    int end = (extend) ? V.size()-1 : V.size();
    int m1, m2;
    m1 = V[0];
    for (int j = 1; j < end; j++) {
      m2 = V[j];
      V[j] = (m1+m2) % 1000000007;
      m1 = m2;
    }
    if (i > a) V.erase(V.begin());
  }
  return V[0];
}

int stress_full(int a, int b) {
  vector<int> V;
  V.push_back(1);
  for (int i = 1; i <= 2*b; i++) {
    int front = V.front();
    bool extended = false;
    if (i <= b) {
      if (i % 2 == 0) extended = true;
      for (int j = 0; j < V.size()-1; j++) {
        V[j] = (V[j]+V[j+1]) % 1000000007;
      }
      if (extended) V.insert(V.begin(), front);
    } else {
      int m1, m2;
      m1 = V[0];
      for (int j = 1; j < V.size(); j++) {
        m2 = V[j];
        V[j] = (m1+m2) % 1000000007;
        m1 = m2;
      }
      if (i % 2 != 0) V.erase(V.begin());
    }
  }
  return V[0];
}

int main() {
  int T; scanf("%d", &T);
  for (int t = 1; t <= T; t++) {
    int a, b;
    scanf("%d-%d", &a, &b);

    int free = stress_free(a,b);
    int full = stress_full(a,b);

    cout << "Case #" << t << ": " << free << " " << full << endl;
  }
  return 0;
}
