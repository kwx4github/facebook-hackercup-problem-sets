#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>

using namespace std;

#define pb push_back
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define sz(v) ((int)v.size())
#define rep(i, m) for (int i = 0; i < (int)(m); i++)
#define rep2(i, n, m) for (int i = n; i < (int)(m); i++)
#define For(it, c) for (__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define mem(a, b) memset(a, b, sizeof(a))
#define mp make_pair
#define dot(a, b) ((conj(a) * (b)).X)
#define X real()
#define Y imag()
#define length(V) (hypot((V).X, (V).Y))
#define vect(a, b) ((b) - (a))
#define cross(a, b) ((conj(a) * (b)).imag())
#define normalize(v) ((v) / length(v))
#define rotate(p, about, theta) ((p - about) * exp(point(0, theta)) + about)
#define pointEqu(a, b) (comp(a.X, b.X) == 0 && comp(a.Y, b.Y) == 0)

typedef stringstream ss;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<string> vs;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vii;
typedef long double ld;
typedef complex<double> point;
typedef pair<point, point> segment;
typedef pair<double, point> circle;
typedef vector<point> polygon;

const int oo = (int) 1e9;
const double PI = 2 * acos(0.0);
const double eps = 1e-9;

int T, A, B;

int md = 1000000007;

bool stress;
int dp[2222][2222];
int calc(int a, int b) {
	if (a == A && b == B)
		return 1;
	if (a > A || b > B)
		return 0;
	if (stress && (a + b) && a <= b)
		return 0;
	if (!stress && a > b && b < B)
		return 0;
	if (dp[a][b] != -1)
		return dp[a][b];
	return dp[a][b] = (calc(a + 1, b) + calc(a, b + 1)) % md;
}

int main() {
#ifdef AHMED_ALY
	freopen("a.txt", "rt", stdin);
	freopen("b.txt", "wt", stdout);
#endif
	string s;
	cin >> T;
	rep2(tt,1,T+1)
	{
		cin >> s;
		rep(i,sz(s))
			if (s[i] == '-')
				s[i] = ' ';
		ss S(s);
		S >> A >> B;
		mem(dp, -1);
		stress = 0;
		int r1 = calc(0, 0);
		mem(dp, -1);
		stress = 1;
		int r2 = calc(0, 0);
		cout << "Case #" << tt << ": " << r2 << " " << r1 << endl;
	}
	return 0;
}
