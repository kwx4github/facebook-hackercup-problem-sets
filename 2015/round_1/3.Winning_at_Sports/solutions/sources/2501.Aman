
#include <iostream>
#include <math.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#define mod 1000000007
#define f(n) for(int i=0;i<n;i++)
using namespace std;

void  ffull(int a, int b, int ** fu)
{
    
    for(int i=0;i<=a;i++)
    {
        for(int j=0;j<=b;j++)
        {
            
            if(i==0 && j==0)
                fu[i][j]=1;
            
            else if(j>=i && j>=1 && i>=1)
                fu[i][j]=(fu[i-1][j]+fu[i][j-1])%mod;
            
            else if(j>=i && i==0)
                fu[i][j]=1;
            
            else
                fu[i][j]=0;
            
        }
    }
    
}


void ffree(int a, int b, int ** fr)
{
    
    for(int i=0;i<=a;i++)
    {
        for(int j=0;j<=b;j++)
        {
            
            if(i==1 && j==0)
                fr[i][j]=1;
            
            else if(i>j && j>=1 && i>=1)
                fr[i][j]=(fr[i-1][j]+fr[i][j-1])%mod;
            
            else if(i>j && j==0)
                fr[i][j]=1;
            
            else
                fr[i][j]=0;
        }
    }
    
}


int main()
{
    int T;
    cin>>T;
    int cases=T;
    
        int  **fu=new int*[2001];
        int  **fr=new int*[2001];
        
        for(int i = 0; i < 2001; i++)
            fu[i] = new int[2001];
        
        for(int i = 0; i < 2001; i++)
            fr[i] = new int[2001];
        
        
        ffull(2000,2000,fu);
        ffree(2000,2000,fr);   
        
        
    
    while(T--)
    {
        char g[10];                                  // to get a and b
        int a=0,b=0;
        
        scanf("%s",g);
        
        int i=0;
        
            while(g[i]!='-')
            {
                a = (a*10) + ((int)((int)g[i] - 48)) ;
                i++;
            }
            
           i++;
           
            while(i<strlen(g))
            {
            	b = (b*10) + ((int)((int)g[i] - 48)) ;
                  i++;
            }      
        
        
     cout<<"Case #"<<cases-T<<": "<<fr[a][b]<<" "<<fu[b][b]<<endl;
    }
    
    return 0;
}