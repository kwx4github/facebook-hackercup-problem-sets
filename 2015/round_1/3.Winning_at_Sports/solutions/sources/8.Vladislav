#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const int mod = 1000*1000*1000+7;

int n;
int m;
int wfree[2001][2001];
int rfree[2001][2001];
int wful[2001][2001];
int rful[2001][2001];
int ct = 0;

int free (int x, int y, int a, int b) {
	if (x > a || y > b) re 0;
	if (x + y > 0 && x <= y) re 0;
	if (x == a && y == b) re 1;
	if (wfree[x][y] == ct) re rfree[x][y];
	wfree[x][y] = ct;
	re rfree[x][y] = (free (x + 1, y, a, b) + free (x, y + 1, a, b)) % mod;
}

int ful (int x, int y, int a, int b) {
	if (x > a || y > b) re 0;
	if (x > y && y < b) re 0;
	if (x == a && y == b) re 1;
	if (wful[x][y] == ct) re rful[x][y];
	wful[x][y] = ct;
	re rful[x][y] = (ful (x + 1, y, a, b) + ful (x, y + 1, a, b)) % mod;
}

int main () {
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
		int a, b;
		scanf (" %d-%d", &a, &b);		
		ct++;
		cout << "Case #" << it << ": " << free (0, 0, a, b) << " " << ful (0, 0, a, b);
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
	}
	return 0;
}