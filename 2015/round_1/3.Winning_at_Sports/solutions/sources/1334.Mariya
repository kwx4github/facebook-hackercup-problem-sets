#include <algorithm>
#include <iostream>
#include <map>
#include <set>
#include <string>
#include <vector>
#include <sstream>
#include <cstring>

using namespace std;

#define MAXN 2001
#define MOD 1000000007

// first ind is my score, second - opponent's score
int nGood[MAXN][MAXN];
int nBad[MAXN][MAXN];

void solve(int ind) {
    // input
    int my, opp;
    cin >> my >> opp;
    opp *= -1;

    // output
    cout << "Case #" << ind << ": " << nGood[my][opp] << " " << nBad[opp][opp] << endl;
}

int main() {
    // precalc
    memset(nGood, 0, sizeof(nGood));
    memset(nBad, 0, sizeof(nBad));
    nBad[0][0] = 1;
    for (int i = 1; i < MAXN; ++i)
    {
        // i:0 score is always stress-free
        nGood[i][0] = 1;
        // 0:i score is always a way to stress-full
        nBad[0][i] = 1;
    }
    for (int i = 2; i < MAXN; ++i)
    for (int j = 1; j < i; ++j) 
    {
        nGood[i][j] = (nGood[i - 1][j] + nGood[i][j - 1]) % MOD;
    }
    for (int i = 1; i < MAXN; ++i)
    for (int j = i; j < MAXN; ++j) 
    {
        nBad[i][j] = (nBad[i - 1][j] + nBad[i][j - 1]) % MOD;
    }
        
    int T;
    cin >> T;
    for (int i = 1; i <= T; ++i) {
        solve(i);
    }
}