#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

const int N = 5000;
const int MOD = (int) 1e9 + 7;

int T, a, b, w[N][N], z[N][N];
char c;

void add(int &a, int b) {
    a += b;
    if (a >= MOD) {
        a -= MOD;
    }
}

int main() {

    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);

    scanf("%d", &T);

    for (int t = 1; t <= T; ++t) {
        scanf("%d %c %d", &a, &c, &b);
        int x = a + b;
        for (int i = 0; i <= x; i++) {
            for (int j = 0; j <= x; j++) {
                w[i][j] = 0;
                z[i][j] = 0;
            }
        }
        w[1][1] = 1;
        z[0][0] = 1;
        for (int i = 1; i < x; i++) {
            for (int j = 1; j <= i; j++) {
                int l = j;
                int r = i - j;
                if (l <= r) {
                    continue;
                }
                if (l == r + 1) {
                    add(w[i + 1][l + 1], w[i][j]);
                } else {
                    add(w[i + 1][l], w[i][j]);
                    add(w[i + 1][l + 1], w[i][j]);
                }
            }
        }
        for (int i = 0; i < x; i++) {
            for (int j = 0; j <= i; j++) {
                int l = i - j;
                int r = j;
                if (l > r && r != b) {
                    continue;
                }
                if (r == b) {
                    add(z[i + 1][r], z[i][j]);
                } else if (l == r) {
                    add(z[i + 1][r + 1], z[i][j]);
                } else {
                    add(z[i + 1][r], z[i][j]);
                    add(z[i + 1][r + 1], z[i][j]);
                }
            }
        }
        printf("Case #%d: %d %d\n", t, w[x][a], z[x][b]);
    }

    return 0;

}
