#include <bits/stdc++.h>
using namespace std;

const int MOD = 1000000007, MAXN = 2001;

int A, B, r, DP[2][MAXN][MAXN];

int free(int a, int b){
	if(b >= a || a > A || b > B) return 0;
	if(DP[0][a][b] != -1) return DP[0][a][b];
	if(A == a && B == b)  return DP[0][a][b] = 1;
	return DP[0][a][b] = ((free(a+1, b) + free(a, b+1))%MOD);
}

int full(int a, int b){
	if((a > b && b != B) || a > A || b > B) return 0;
	if(DP[1][a][b] != -1) return DP[1][a][b];
	if(A == a && B == b)  return DP[1][a][b] = 1;
	return DP[1][a][b] = ((full(a+1, b) + full(a, b+1))%MOD);
}

int main(){
    int t, T, ctr, sum1, sum2;
    scanf("%d", &T);
    for(t = 1; t <= T; t++){
		memset(DP, ~0, sizeof DP);
        scanf("%d-%d", &A, &B);
        printf("Case #%d: %d %d\n", t, free(1, 0), full(0, 0));
    }
}
