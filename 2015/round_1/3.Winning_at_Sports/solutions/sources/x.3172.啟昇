#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define M 1000000007
#define N 2100
int dpp1[N][N],dpp2[N][N];

int dp1(int x,int y){
	if(~dpp1[x][y])
		return dpp1[x][y];
	if(x<=y || y<0)
		return 0;
	if(x==1 && y==0)
		return 1;
	long long r=0;
	r+=dp1(x-1,y);
	r+=dp1(x,y-1);
	r%=M;
	return dpp1[x][y]=int(r);
}

int dp2(int x,int y,int fy){
	if(~dpp2[x][y])
		return dpp2[x][y];
	if(x<0 || (x>y && y!=fy))
		return 0;
	if(x==0 && y==1)
		return 1;
	long long r=0;
	r+=dp2(x-1,y,fy);
	r+=dp2(x,y-1,fy);
	r%=M;

//	printf("**%d %d %d\n",x,y,int(r));

	return dpp2[x][y]=int(r);
}	

int main(){
	int t,tk=1;
	scanf("%d",&t);
	while(t--){
		memset(dpp1,-1,sizeof(dpp1));
		memset(dpp2,-1,sizeof(dpp2));
		int x,y;
		scanf("%d-%d",&x,&y);
		printf("Case #%d: %d %d\n",tk++,dp1(x,y),dp2(x,y,y));
	}
}
