#include <iostream>
#include <fstream>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <cstring>
#include <string>
#include <cmath>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <numeric>
#include <utility>
#include <functional>
#include <limits>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int ui;
typedef pair<int,int> pii;
typedef vector<vector<int> > graph;

const double pi = acos(-1.0);

#define oned(a, x1, x2) { cout << #a << ":"; for(int _i = (x1); _i < (x2); _i++){ cout << " " << a[_i]; } cout << endl; }
#define twod(a, x1, x2, y1, y2) { cout << #a << ":" << endl; for(int _i = (x1); _i < (x2); _i++){ for(int _j = (y1); _j < (y2); _j++){ cout << (_j > y1 ? " " : "") << a[_i][_j]; } cout << endl; } }

#define mp make_pair
#define pb push_back
#define fst first
#define snd second

#define endl '\n'

const int MAXN = 2005;
const int MOD = 1000000007;

int dp1[MAXN][MAXN], dp2[MAXN][MAXN];

int w, l;

void solve() {
	cout << dp1[w][l] << ' ' << dp2[w][l] << '\n';
}

int main() {
    dp1[1][0] = 1;
    for(w = 2; w < MAXN; w++) {
		for(l = 0; l < w; l++) {
            dp1[w][l] = ((w-1>l ? dp1[w-1][l] : 0) + (l>0 ? dp1[w][l-1] : 0)) % MOD;
		}
    }
    dp2[0][0] = 1;
    for(l = 1; l < MAXN; l++) {
		for(w = 0; w < MAXN; w++) {
            dp2[w][l] = ((w>0 ? dp2[w-1][l] : 0) + (w<=l-1 ? dp2[w][l-1] : 0)) % MOD;
		}
    }

	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	int T; cin >> T;
	for(int C = 1; C <= T; C++) {
		scanf("%d-%d", &w, &l);
        cout << "Case #" << C << ": ";
        solve();
	}
}
