#include <fstream>
#include <string>
#include <sstream>
using namespace std;

#define MOD (1000000007)
#define P (MOD-2)

long long binom[4001][4001], pn[2002], dp[2002], invs[2002];

long long inv(int n) {
    long long ans = 1, m = n;
    for(int i = 1; i <= P; i <<= 1) {
        if(i & P) ans = (ans*m)%MOD;
        m = (m*m)%MOD;
    }
    return ans;
}

long long catalan(int n) {
    return (pn[n]*invs[n+1])%MOD;
}

long long stressfree(int a, int b) {
    long long ans = binom[a+b-1][a-1];
    for(int i = 1; i <= b; i++) {
        ans = (ans-dp[i]*binom[a+b-2*i][b-i])%MOD;
        if(ans < 0) ans += MOD;
    }
    return ans;
}

int main() {
    for(int i = 0; i <= 4000; i++) {
        binom[i][0] = binom[i][i] = 1;
        for(int j = 1; j < i; j++)
            binom[i][j] = (binom[i-1][j-1]+binom[i-1][j])%MOD;
    }
    for(int i = 1; i <= 2001; i++) {
        invs[i] = inv(i);
        pn[i] = binom[2*i][i];
        dp[i] = binom[2*i-1][i-1];
        for(int j = 1; j < i; j++) {
            dp[i] = (dp[i] - pn[i-j]*dp[j])%MOD;
            if(dp[i] < 0) dp[i] += MOD;
        }
    }
    ifstream fin("winning_at_sports.in");
    ofstream fout("winning_at_sports.out");
    int T,a,b;
    string buf;
    getline(fin,buf);
    stringstream tin(buf);
    tin >> T;
    for(int i = 1; i <= T; i++) {
        getline(fin,buf);
        for(int j = 0; j < buf.length(); j++) if(buf[j] == '-') buf[j] = ' ';
        stringstream sin(buf);
        sin >> a >> b;
        if(b == 0) {
            fout << "Case #" << i << ": 1 1\n";
            continue;
        }
        int x = catalan(b);
        int y = stressfree(a,b);
        fout << "Case #" << i << ": " << y << ' ' << x << '\n';
    }
    fin.close();
    fout.close();
    return 0;
}
