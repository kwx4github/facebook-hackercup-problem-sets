#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <utility>
#include <string>
#include <stdio.h>
using namespace std;
int* dpfull[2001];
int* dpfree[2001];
int queryfull(int i, int j){
	if(dpfull[i][j]>=0) return dpfull[i][j];
	int res=queryfull(i-1,j);
	if(i<=j-1) res+=queryfull(i,j-1);
	res%=1000000007;
	dpfull[i][j]=res;
	return res;
}
int queryfree(int i, int j){
	if(dpfree[i][j]>=0) return dpfree[i][j];
	int res=queryfree(i,j-1);
	if(i-1>j) res+=queryfree(i-1,j);
	res%=1000000007;
	dpfree[i][j]=res;
	return res;
}
int main(){
	int t;
	cin>>t;
	for(int i=0;i<=2000;++i){
		dpfull[i]=new int[2001];
		dpfree[i]=new int[2001];
		for(int j=0;j<=2000;++j){
			dpfull[i][j]=-1;
			dpfree[i][j]=-1;
		}
	}
	for(int i=0;i<=2000;++i){
		dpfull[0][i]=1;
		dpfree[i][0]=1;
	}
	dpfree[0][0]=0;
	for(int caso=1;caso<=t;++caso){
		int a;
		int b;
		cin>>a>>b;
		b=-b;
		int fulla=a,fullb=b;
		if(fulla>b) fulla=b;
		cout<<"Case #"<<caso<<": "<<queryfree(a,b)<<" "<<queryfull(fulla,fullb)<<endl;
	}
}