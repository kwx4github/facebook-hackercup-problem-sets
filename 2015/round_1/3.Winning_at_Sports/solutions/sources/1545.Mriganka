#include <cstdio>
#include <iostream>
#include <cassert>
#include <vector>
#include <cmath>
#include <cstdlib>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <queue>
#include <stack>
#include <bitset>
#include <functional>
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define REPE(i,x,y) for (int i=(x);i<(y);i++)
#define REP(i,x,y) for (int i=(x);i<=(y);i++)
#define DREP(i,x,y) for (int i=(x);i>=(y);i--)
#define mp make_pair
#define pb push_back
#define MAXN 2100
#define MD 1000000007
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;

ll f[MAXN][MAXN];
ll g[MAXN][MAXN];

int main() {
	ios::sync_with_stdio(false);

	int t; cin>>t; ll x,y;

	REP(q,1,t) { 
		string s; cin>>s;
		bool mode=true; ll x=0,y=0;
		REPE(i,0,s.size()) {
			int d=s[i]-'0';
			if (s[i]=='-') { mode=false; continue; }
			if (mode) {
				x*=10;
				x+=d;
			} else {
				y*=10;
				y+=d;
			}
		}
		REP(i,0,MAX(x,y)) {
			f[0][i]=1;
			f[i][0]=1;
			g[0][i]=0;
			g[i][0]=1;
		}
		g[0][0]=1;
		REP(i,1,x) {
			REP(j,1,y) {
				int cx=x-i,cy=y-j;
				f[i][j]=f[i-1][j];
				if (cx>cy+1) {
					f[i][j]=(f[i][j]+f[i][j-1])%MD;
				}
				g[i][j]=g[i][j-1];
				if (cx+1 <= cy) {
					g[i][j]=(g[i][j] + g[i-1][j])%MD;
				}
			}
		}
		cout<<"Case #"<<q<<": "<<f[x][y]<<" "<<g[x][y]<<endl;

	}
	return 0;
}
