#include <iostream>
#include <cstring>
using namespace std;

const int maxn = 2001;
const int mod = 1e9+7;
int mfree[maxn][maxn];
int mstress[maxn][maxn];
int A, B;


int free(int a, int b) {
  if (a > A or b > B or b >= a) return 0;
  if (a == A and b == B) return 1;
  if (mfree[a][b] != -1) return mfree[a][b];
  return mfree[a][b] = (free(a+1, b) + free(a, b+1))%mod;
}

int stress(int a, int b) {
  if (a > A or b > B or (a > b and b != B)) return 0;
  if (a == A and b == B) return 1;
  if (mstress[a][b] != -1) return mstress[a][b];
  return mstress[a][b] = (stress(a+1, b) + stress(a, b+1))%mod;
}

int main() {
  int T; cin >> T;
  int cas = 0;
  while (T--) {
    memset(mfree, -1, sizeof mfree);
    memset(mstress, -1, sizeof mstress);
    cin >> A;
    cin >> B;
    B *= -1;
    cout << "Case #" << ++cas << ": " << free(1, 0) << " " << stress(0, 0) << endl;
  }
}
