import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Sports {

	static int MAX = 1000000007;
	/**
	 * @param args
	 */
	static int[] tab = new int[4002001];

	public static void main(String[] args) throws FileNotFoundException {
		Arrays.fill(tab, -1);

		 Scanner sc = new Scanner(new File("winning_at_sports.txt"));
		 PrintWriter pw = new PrintWriter(new File("output.txt"));

		//Scanner sc = new Scanner(System.in);
		 
		int t = sc.nextInt();
		int a, b;
		String s;
		for (int i = 1; i < t + 1; i++) {
			s = sc.next();
			a = (Integer.valueOf(s.split("-")[0])).intValue();
			b = (Integer.valueOf(s.split("-")[1])).intValue();

			pw.println("Case #" + i + ": " + stress_less(a, b) + " "
					+ stress_full(Math.min(a, b), Math.min(a, b)));

		}
		pw.close();
		sc.close();
		

	}

	static int stress_less(int home, int away) {

		if (away < 0 || home < 0)
			return 0;
		if (home <= away)
			return 0;
		if (tab[ind(home, away)] != -1)
			return tab[ind(home, away)];

		if (home == 1 && home > away)
			return tab[ind(home, away)] = 1;

		return tab[ind(home, away)] = ((stress_less(home - 1, away) + stress_less(
				home, away - 1)) % MAX);

	}

	static int stress_full(int home, int away) {
		if (away < 0 || home < 0)
			return 0;

		if (home - away > 0) {
			return 0;
		}

		if (home == 0 && away == 1)
			return 1;

		if (tab[ind(home, away)] != -1)
			return tab[ind(home, away)];

		return tab[ind(home, away)] = ((stress_full(home - 1, away) + stress_full(
				home, away - 1)) % MAX);

	}

	private static int ind(int m, int n) {
		if (m > n)
			return m * (m + 1) / 2 - (m - n - 1);
		else
			return 2001000 + (n + 1) * (n + 2) / 2 - (n - m);
	}

}
