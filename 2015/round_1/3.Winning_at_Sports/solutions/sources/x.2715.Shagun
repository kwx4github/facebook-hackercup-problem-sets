#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <map>
#include <vector>
#include <set>
#include <string.h>
#include <math.h>
#include <limits.h>
#include <algorithm>
#include <assert.h>
#include<fstream>
using namespace std;
#define MOD 1000000007
#define MAXN 100000
#define INF INT_MAX
#define ll long long 
#define MEM(a, v) memset(a, v, sizeof(a))
#define pb push_back

ll dpfree[2001][2001];
ll dpful[2001][2001];
void precomputefree(int a,int b){
    int totala=a;
    int totalb=b;
    int i,j,k;
    dpfree[0][0]=1;
    for(i=0;i<=totala;i++){
        for(j=0;j<=totalb;j++){
            if(i==j)dpfree[i][j]=0;
            if(i<j)dpfree[i][j]=0;
            if(j==0)dpfree[i][j]=1;
        }   
    }
    for(i=1;i<=totala;i++){
        for(j=1;j<=totalb;j++){
            if(i>j)dpfree[i][j]=(dpfree[i-1][j]+dpfree[i][j-1])%MOD;
        }   
    }

}
void precomputeful(int totala,int totalb){
    //  int totala=2000;
    //  int totalb=2000;
    int i,j,k;
    dpful[0][0]=1;
    for(j=1;j<=totalb;j++)
        dpful[0][j]=1;
    for(i=1;i<=totala;i++){
        for(j=1;j<=totalb;j++){
            //  if(i==j)dpful[i][j]=1;
            //  if(i==0)dpful[i][j]=1;
            if(i>j&&j<totalb)dpful[i][j]=0;
        }   
    }
    for(i=1;i<=totala;i++){
        for(j=1;j<=totalb;j++){
            if(i==j||i<j||(i>j&&j==totalb))dpful[i][j]=(dpful[i-1][j]+dpful[i][j-1])%MOD;
        }   
    }

}
int main(){
    int c;
    int t;
    ofstream myfile3;
	//ifstream in("in.txt");
	myfile3.open("out.txt");
	FILE * pFile;

  pFile = fopen ("in.txt","r+");
  	fscanf(pFile,"%d",&t);
   // cin>>t;

    int i,j,k;
    int a,b;
    for(c=0;c<t;c++){
    	myfile3<<"Case #"<<c+1<<":"<<" ";
		fscanf(pFile,"%d-%d",&a,&b);
       // scanf("%d-%d",&a,&b);
        precomputefree(a,b);
        precomputeful(a,b);
       // printf("Case #%d: %lld %lld\n", c+1, dpfree[a][b], dpful[a][b]);
       myfile3<<(dpfree[a][b]%MOD)<<" "<<(dpful[a][b]%MOD)<<endl;
    }


}

