
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author bassem
 */
public class Match {

    public static void main(String[] args) throws IOException {
        BufferedReader input = new BufferedReader(new FileReader("Match.in"));
        long dp1[][] = new long[2001][2001];
        for (int i = 0; i < 2001; i++) {
            dp1[0][i] = 1;
            dp1[i][0] = 1;
        }
        for (int i = 1; i < 2001; i++) {
            for (int j = 1; j < 2001; j++) {
                if (i - 1 > j) {
                    dp1[i][j] += dp1[i - 1][j];
                    dp1[i][j] %= 1000000007;
                }
                if (i > j - 1) {
                    dp1[i][j] += dp1[i][j - 1];
                    dp1[i][j] %= 1000000007;
                }
            }
        }
        long dp2[][] = new long[2001][2001];
        for (int i = 0; i < 2001; i++) {
            dp2[0][i] = 1;
            dp2[i][0] = 0;
        }
        for (int i = 1; i < 2001; i++) {
            for (int j = 1; j < 2001; j++) {
                if (j > i) {
                    dp2[i][j] += dp2[i][j - 1];
                    dp2[i][j] %= 1000000007;
                }
                dp2[i][j] += dp2[i - 1][j];
                dp2[i][j] %= 1000000007;
            }
        }
        try (FileWriter file = new FileWriter("Math.out")) {
            int cases = 1;
            int testcase = Integer.parseInt(input.readLine());
            while (testcase-- > 0) {
                String line = input.readLine(), a = null, b = null;
                for (int i = 0; i < line.length(); i++) {
                    if (line.charAt(i) == '-') {
                        a = line.substring(0, i);
                        b = line.substring(i + 1);
                        break;
                    }
                }
                int A = Integer.parseInt(a);
                int B = Integer.parseInt(b);
                file.append("Case #" + cases++ + ": " + (dp1[A][B]) + " " + (dp2[A][B]) + "\n");
            }
        }
    }
}
