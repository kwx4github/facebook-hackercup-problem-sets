import sys

from operator import mul    # or mul=lambda x,y:x*y
from fractions import Fraction

def nCk(n,k): 
  return int( reduce(mul, (Fraction(n-i, i+1) for i in range(k)), 1) )

f = open(sys.argv[1])
#f = open('prac.txt')
T = int(f.readline())

M = 1000000007

for t in range(T):

    try1 = []
    try2 = []
    z = 1

    for i in range(2002):
        try1 += [0]
        try2 += [0]
    
    A, B = map(int,f.readline().split('-'))
    if(B == 0):
        sfree = 1
    else:
        for j in range(2002):
            try1[j] = 1
        while True:
            for i in xrange(z+1,2002):
                if(i == z+1):
                    try2[i] = try1[i] % M
                else:
                    try2[i] = (try1[i] + try2[i-1]) % M
                if(i == A and z == B):
                    break
            if(i == A and z == B):
                break
            for i in xrange(z+1,2002):
                try1[i] = try2[i]
            z = z + 1
        sfree = try2[A] % M

    for i in range(2002):
        try1 += [0]
        try2 += [0]

    z = 1
    if(B == 0):
        sstr = 1
    else:
        sstr = nCk(B*2,B)/(B+1) % M

    print "Case #%d: %d %d" % (t+1,sfree,sstr)                
            
            

    
