#include<iostream>
#include<cstdio>
using namespace std;

int dp[4001][2001];
bool done[4001][2001];
int type, ans, a, b, n;
const int MOD = 1000000007;

void upt(int fh1, int fh2, int w)
{
	if(fh2 > a || fh1-fh2 > b)
		return;
	if(fh1 == n)
	{
		(ans += w) %= MOD;
		return ;
	}
	if(!done[fh1][fh2])
	{
		done[fh1][fh2] = 1;
		dp[fh1][fh2] = 0;
	}
	(dp[fh1][fh2] += w) %= MOD;
}

int main(int argc, const char *argv[])
{
	int t;
	scanf("%d", &t);
	for(int cases = 1 ; cases <= t ; cases ++)
	{
		scanf("%d-%d", &a, &b);
		n = a+b;
		int ansm[2];
		for(type = 0 ; type < 2 ; type ++)
		{
			memset(done, 0, sizeof(done));
			ans = 0;
			upt(0, 0, 1);
			for(int i = 0 ; i < n ; i ++)
				for(int j = 0 ; j <= i && j <= a ; j ++)
					if(done[i][j])
					{
						int x, y;
						x = j+1;
						y = i-j;
						if(type?(x<=y||y==b):(x > y))
							upt(i+1, j+1, dp[i][j]);
						x = j;
						y = i+1-j;
						if(type?(x<=y||y==b):(x > y))
							upt(i+1, j, dp[i][j]);
					}
			ansm[type] = ans;
		}
		printf("Case #%d: %d %d\n", cases, ansm[0], ansm[1]);
	}
	return 0;
}
