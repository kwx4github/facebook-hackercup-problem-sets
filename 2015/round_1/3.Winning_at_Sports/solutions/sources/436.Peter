package R1;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

public class WinningAtSports {
	static String inFile = "in3.txt";
	static String outFile = "R3_out.txt";
	static InputStreamReader isr;
	static BufferedReader br;
	static PrintWriter pw;

	static int gint() throws NumberFormatException, IOException {
		return Integer.parseInt(br.readLine());
	}

	static int[] ginta() throws NumberFormatException, IOException {
		String l = br.readLine();
		String[] v = l.split(" ");
		int[] a = new int[v.length];

		for (int i = 0; i < a.length; i++) {
			a[i] = Integer.parseInt(v[i]);
		}

		return a;
	}

	public static void main(String[] args) throws NumberFormatException,
			IOException {

		isr = new InputStreamReader(new FileInputStream(inFile));
		br = new BufferedReader(isr);
		pw = new PrintWriter(outFile);

		int t = gint();
		for (int i = 1; i <= t; i++) {
			String l = solve(i);
			System.out.println(l);
			pw.println(l);
		}

		pw.close();
	}

	static int MOD = 1000000007;

	static String solve(int caseN) throws NumberFormatException, IOException {
		String[] v = br.readLine().split("\\-");
		int m = Integer.parseInt(v[0]);
		int o = Integer.parseInt(v[1]);

		int[][] stressFree = new int[m + 1][o + 1];
		stressFree[1][0] = 1;
		stressFree[0][0] = 1;
		for (int cm = 2; cm <= m; cm++) {
			for (int co = 0; co <= o; co++) {
				if (cm > co) {

					if (cm - 1 > co) {
						stressFree[cm][co] += stressFree[cm - 1][co];						
					}
					
					if (co > 0) {
						stressFree[cm][co] += stressFree[cm][co - 1];
					}
					
					stressFree[cm][co] %= MOD;
				}
			}
		}

		int[][] stressFull = new int[m + 1][o + 1];
		stressFull[0][0] = 1;
		for (int cm = 0; cm <= m; cm++) {
			for (int co = 0; co <= o; co++) {
				if (!(cm > co && co < o)) {
					if (cm > co && cm > 0) {
						stressFull[cm][co] = stressFull[cm - 1][co];
					}
					if (cm == co && cm > 0) {
						stressFull[cm][co] += stressFull[cm - 1][co];
					} 
					
					if (co > cm) {
						if (cm > 0)
							stressFull[cm][co] += stressFull[cm - 1][co];
						
						stressFull[cm][co] += stressFull[cm][co - 1];
					}
					
					stressFull[cm][co] %= MOD;
				}
			}
		}

		return String.format("Case #%d: %d %d", caseN, stressFree[m][o],
				stressFull[m][o]);
	}
}
