#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cstdlib>
#include<map>
#include<queue>
#include<iterator>
using namespace std;
#define FOR(i,s,e) for(int i = (s); i < (e); i++)
#define FOE(i,s,e) for(int i = (s); i <= (e); i++)
#define FOD(i,s,e) for(int i = (s); i >= (e); i--)
#define CLR(a) memset(a,0,sizeof(a))
#define LL long long
#include<ctime>
#include<vector>
int n, m, x, y, z, k, w, T, t;
LL DP[2005][2005], DP2[2005][2005];
LL M = 1000000007LL;
char c;
int main () {
	
	scanf("%d", &T);
	DP[1][0] = 1LL;
	DP2[0][1] = 1LL;
		
	x = 2000; y = 2000;
		
	FOE(i, 1, x) FOE(j, 0, y) {
		if (i == 1 && j == 0) continue;
		if (i > j) DP[i][j] += DP[i][j - 1];
		DP[i][j] %= M;
		DP[i][j] += DP[i-1][j];
		DP[i][j] %= M;
	}
		
	DP2[0][1] = 1;
		
	FOE(i, 0, x) FOE(j, 1, y) {
		if (i == 0 && j == 1) continue;
		if (j > i) DP2[i][j] += DP2[i][j - 1];
		DP2[i][j] %= M;
		if (j >= i) DP2[i][j] += DP2[i - 1][j];
		DP2[i][j] %= M;
	}
	while (T--) {
		scanf("%d%c%d", &x, &c, &y);
		printf("Case #%d: ", ++t);
		if (x - 1 == y) printf("%d %d\n", DP[x][y], DP2[y][y]);
		else printf("%d %d\n", DP[x][y], DP2[y][y]);
	}
	return 0;
}
	
		
		
