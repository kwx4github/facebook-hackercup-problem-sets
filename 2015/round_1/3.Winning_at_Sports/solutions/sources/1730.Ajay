#include<stdio.h>
#include<algorithm>
#include<iostream>

using namespace std;

long long int p = 1000000007;
long long int inv_fact[200000],inv[200000],d[200000],fact[200000];

long long int expo(long long int a,long long int b)
{
	long long int temp = a,ans = 1;
	
	while(b>0)
	{
		if(b%2==1)
		{
			ans = (ans*temp)%p;
		}
		
		b = b/2;
		temp = (temp*temp)%p;
	}
	
	return ans;
}

long long int inverse(long long int a)
{
	long long int ans = expo(a,p-2);
	return ans;
}

int main()
{
	int t,i,j,count=0,len;
	string h;
	
	cin>>t;
	
	long long int temp,tmp,c1,c2,c3,c4,ans,n,k,a,b,ans2,ans1,temp1,temp2,temp3;
	
	temp = 1;
	inv_fact[0] = 1;
	fact[0]  = 1;
	
	for(i=1;i<=120000;i++)
	{
		temp = (temp*i)%p;
		fact[i] = temp;
		inv_fact[i] = inverse(temp);
		inv[i] = inverse(i) ;	
	}
	
	while(t--)
	{
		cin>>h;
		len = h.size();
		
		a = 0;
		
		for(i=0;h[i]!='-';i++)
		{
			a = 10*a + (h[i]-'0');	
		}

		i++;
		b=0;
		
		for(;i<len;i++)
		{
			b = 10*b + (h[i]-'0');	
		}

		
		count++;

		if(b==0)
		{
			ans1 = 1;
			cout<<"Case #"<<count<<": "<<"1 1"<<endl;
			continue;
		}
				
		ans2 = fact[2*b];
		ans2 = (ans2 * inv_fact[b])%p;
		ans2 = (ans2 * inv_fact[b])%p;
		ans2 = (ans2*inv[b+1])%p;


		ans1 = fact[a+b-1];
		ans1 = (ans1 * inv_fact[a])%p;
		ans1 = (ans1 * inv_fact[b-1])%p;
		
		for(i=1;i<=b;i++)
		{
			temp = fact[2*(i-1)];
			temp = (temp * inv_fact[i-1])%p;
			temp = (temp * inv_fact[i-1])%p;
			temp = (temp*inv[i])%p;
		
			temp1 = a-i;
			temp2 = b-i;
			
			temp3 = fact[temp1+temp2];
			temp3 = (temp3 * inv_fact[temp1])%p;
			temp3 = (temp3 * inv_fact[temp2])%p;
			
			ans1 = (ans1 + temp*temp3)%p;
		}
		
		temp3 = fact[a+b];
		temp3 = (temp3 * inv_fact[a])%p;
		temp3 = (temp3 * inv_fact[b])%p;
			
			
		ans1 = temp3 - ans1;
		
		while(ans1<0)
		{
			ans1 = ans1 + p;
		}
		
		
		cout<<"Case #"<<count<<": "<<ans1<<" "<<ans2<<endl;
	}
	
	return 0;
}
