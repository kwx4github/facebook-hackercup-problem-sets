#include <iostream>
#include <sstream>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <string>
#include <ctime>
#include <cmath>
#include <vector>
#include <deque>
#include <string>
#include <cctype>
using namespace std;

#define REP(i,n) for(int i=0;i<(n);++i)
#define FOR(i,a,b) for(int i=(a);i<=(b);++i)
#define RFOR(i,a,b) for(int i=(a);i>=(b);--i)

#define MAXN 2000
#define MOD 1000000007
typedef long long LL;

int s2i(string str) {
    stringstream ss;
    ss << str;
    int res;
    ss >> res;
    return res;
}

LL mm[MAXN + 5][MAXN + 5];
LL dd[MAXN + 5][MAXN + 5];

void init() {
    memset(mm, 0, sizeof(mm));
    memset(dd, 0, sizeof(dd));
    mm[1][0] = dd[1][0] = dd[1][1] = dd[0][0] = 1;
    FOR(me,2,MAXN) {
        FOR(op,0,me-1) {
            if (op >= 1) mm[me][op] = (mm[me][op] + mm[me][op - 1]) % MOD;
            if (me - 1 > op) mm[me][op] = (mm[me][op] + mm[me - 1][op]) % MOD;
        }
    }

    FOR(me,2,MAXN) {
        FOR(op,0,me) {
            if (op >= 1) dd[me][op] = (dd[me][op] + dd[me][op - 1]) % MOD;
            if (me - 1 >= op) dd[me][op] = (dd[me][op] + dd[me - 1][op]) % MOD;
        }
    }
}

void run() {
    string str;
    cin >> str;
    int idx = str.find('-');
    string s1 = str.substr(0, idx);
    string s2 = str.substr(idx + 1);

    int a = s2i(s1), b = s2i(s2);

    int stressfree = mm[a][b];
    int stressful = 0;
    if (b == 0) stressful = 1;
    else {
        RFOR(i,b-1,0) {
            stressful = (stressful + dd[b - 1][i]) % MOD;
        }
    }

    cout << stressfree << " " << stressful << endl;
}

int main() {
    init();
    int T;
    cin >> T;
    FOR(t,1,T) {
        cout << "Case #" << t << ": ";
        run();
    }
    return 0;
}

