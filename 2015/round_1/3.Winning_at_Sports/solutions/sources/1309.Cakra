#include<bits/stdc++.h>
 
#define INF 1000000000
#define EPS 1e-9
#define sz(c) (int) (c).size()
#define all(c) (c).begin(), (c).end()
#define tr(c, i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define uniq(c) sort(all(c)); (c).resize(unique(all(c)) - (c).begin())
#define lobo(c, x) (int) (lower_bound(all(c), (x)) - (c).begin())
#define upbo(c, x) (int) (upper_bound(all(c), (x)) - (c).begin())
 
#define pb push_back
#define mp make_pair
#define fi first
#define se second
 
using namespace std;

#ifdef DEBUG   
    #define wrap(a) a
    #define debug(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); }

    vector<string> split(const string& s, char c) {
        vector<string> v;
        stringstream ss(s);
        string x;
        while (getline(ss, x, c))
            v.emplace_back(x);
        return move(v);
    }

    void err(vector<string>::iterator it) { cout << endl; }
    template<typename T, typename... Args>
    void err(vector<string>::iterator it, T a, Args... args) {
        cerr << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << ", ";
        err(++it, args...);
    }
#else
    #define debug(args...) 
    #define wrap(a) 
#endif
typedef long long ll;
typedef pair <int, int> ii;

const int MAXN = 2000;
const int MOD = 1000000007;

int st_free_memo[MAXN+2][MAXN+2];
int st_full_memo[MAXN+2][MAXN+2];

int st_free(int a, int b, const int &A, const int &B) {
    if ( a == A && b == B ) return 1;

    int &result = st_free_memo[a][b];
    if ( result != -1 ) return result;

    result = 0;
    
    // inc a
    if ( a+1 <= A ) result += st_free(a+1, b, A, B);

    // inc b
    if ( b+1 <= B && a > b+1 ) result = (result + st_free(a, b+1, A, B))%MOD;

    return result;
}

int st_full(int a, int b, const int &A, const int &B) {
    if ( a == A && b == B ) return 1;

    int &result = st_full_memo[a][b];
    if ( result != -1 ) return result;

    result = 0;
    
    if ( a+1 <= A && (b == B || a+1 <= b) )
        result += st_full(a+1, b, A, B);

    if ( b+1 <= B ) 
        result = (result + st_full(a, b+1, A, B))%MOD;

    return result;
}

int main() {
    int ntc;
    scanf("%d", &ntc);

    for ( int tc = 1; tc <= ntc; ++tc ) {
        int A, B;
        scanf("%d-%d", &A, &B);

        memset(st_free_memo, -1, sizeof(st_free_memo));
        int st_free_ans = st_free(0, 0, A, B);

        memset(st_full_memo, -1, sizeof(st_full_memo));
        int st_full_ans = st_full(0, 0, A, B);
        
        printf("Case #%d: %d %d\n", tc, st_free_ans, st_full_ans);
    }

    return 0;
}
