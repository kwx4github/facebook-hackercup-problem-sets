#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;

#define MAXN 2048
#define MOD 1000000007LL

long long dp[MAXN][MAXN], dp2[MAXN][MAXN];

long long _dp(int a, int b) {
	if (dp[a][b] == -1LL) {
		dp[a][b] = _dp(a, b-1);
		if (a-1 > b) dp[a][b] = (dp[a][b]+_dp(a-1,b))%MOD;
	}
	return dp[a][b];
}

long long _dp2(int a, int b) {
	if (dp2[a][b] == -1LL) {
		dp2[a][b] = _dp2(a, b-1);
		if (a > b) dp2[a][b] = (dp2[a][b]+_dp2(a-1,b))%MOD;
	}
	return dp2[a][b];
}

int main() {
	int T, t, a, b, i;
	long long tmp;
	
	memset(dp, -1LL, sizeof(dp));
	for (i=1; i<MAXN; i++) dp[i][0] = 1LL;
	
	memset(dp2, -1LL, sizeof(dp2));
	for (i=0; i<MAXN; i++) dp2[i][0] = 1LL;
	
	cin >> T;
	for (t=1; t<=T; t++) {
		scanf("%d-%d", &a, &b);
		cout << "Case #" << t << ": " << _dp(a, b) << ' ' << _dp2(b, b) << endl;
	}

	return 0;
}
