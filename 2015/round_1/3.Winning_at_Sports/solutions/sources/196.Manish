#include<bits/stdc++.h>

#define s(a) scanf("%d",&a)
#define ss(a) scanf("%s",a)

#define MP           make_pair
#define PB           push_back
#define REP(i, n)    for(int i = 0; i < n; i++)
#define INC(i, a, b) for(int i = a; i <= b; i++)
#define DEC(i, a, b) for(int i = a; i >= b; i--)
#define CLEAR(a)     memset(a, 0, sizeof a)

using namespace std;

typedef long long          LL;
typedef unsigned long long ULL;
typedef vector<int>        VI;
typedef pair<int, int>     II;
typedef vector<II>         VII;

int dp[2005][2005][2];  //0 = stress-free, 1 =stress-ful
const int SIZE = 2002;
const int MOD = 1e9+7;
void precomp()
{
      CLEAR(dp);
      dp[0][0][0] = dp[0][0][1]=1;
      REP(i,SIZE)
      REP(j,SIZE)
      {
            if(i>j)
            {
                  if(i>0 && i-1>j)
                        dp[i][j][0] = (dp[i][j][0] + dp[i-1][j][0])%MOD;
                  if(j>0)
                        dp[i][j][0] = (dp[i][j][0] + dp[i][j-1][0])%MOD;
                  if(i>0)dp[i][j][1] = dp[i-1][j][1];
            }
            if(i<j)
            {
                  //dp[i][j][0] = 0;
                  if(j>0)
                        dp[i][j][1] = (dp[i][j][1] + dp[i][j-1][1])%MOD;
                  if(i>0)
                        dp[i][j][1] = (dp[i][j][1] + dp[i-1][j][1])%MOD;
            }
            if(i==j)
            {
                  //dp[i][j][0] = 0;
                  if(i>0)dp[i][j][1] = dp[i-1][j][1];
            }
            if(i==1 && j==0)
                  dp[i][j][0] = 1;
            if(i==0 && j==1)
                  dp[i][j][1] = 1;
      }
}
int main()
{
      precomp();
      int t;
      s(t);
      REP(tt,t)
      {
            printf("Case #%d: ",tt+1);
            int a,b;
            scanf(" %d-%d",&a,&b);
            printf("%d %d\n",dp[a][b][0],dp[a][b][1]);
      }
      return 0;
}
