#include <iostream>
#include <algorithm>
#include <string> 
#include <cstring>
using namespace std;

#define MOD 1000000007

int dp1[2005][2005];
int dp2[2005][2005];

int full(int a , int b)
{
    if(b==0)
        return 1;
    if (a<b)
        return 0;

    if (dp1[a][b]!=-1)
        return dp1[a][b];
    else 
    {	
        int ans = 0 ;
        ans+=full(a-1,b);
        ans%=MOD;
        ans+=full(a,b-1);
        ans%=MOD;
        dp1[a][b]=ans;
        return ans;
    }


}


int freegame(int a , int b)
{
    if(b==0)
        return 1;
    if (a<=b)
        return 0;

    if (dp2[a][b]!=-1)
        return dp2[a][b];
    else 
    {	
        int ans = 0 ;
        ans+=freegame(a-1,b);
        ans%=MOD;
        ans+=freegame(a,b-1);
        ans%=MOD;
        dp2[a][b]=ans;
        return ans;
    }
}

int main()
{
    int t;
    cin >> t;

    memset(dp1,-1,sizeof(dp1));
    memset(dp2,-1,sizeof(dp2));

    for (int z=1;z<=t;z++)
    {
        string s;
        cin >> s;
        int x = s.find('-');
        string a , b;
        a = s.substr(0,x);
        b = s.substr(x+1,s.size()-x);
        int a_n = atoi(a.c_str());
        int b_n = atoi(b.c_str());
        cout << "Case #" << z << ": " <<  freegame(a_n,b_n) << " " << full(b_n,b_n-1)  << endl;  
    }

    return 0;
}

