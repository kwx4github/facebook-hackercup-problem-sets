#include <iostream>
#include <fstream>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>

#define menja scanf ("%c", &fi)
#define FOR(v, i) for(unsigned int i = 0; i < v.size(); ++i)


using namespace std;

char fi;
const int INF = 2000000000;

typedef long long int lol;
typedef long double ld;
typedef vector<int> VI;
typedef vector<bool> VB;
typedef vector<VB> VVB;
typedef vector<double> VD;
typedef vector<ld> VLD;
typedef vector<string> VS;
typedef pair<int, int> ii;
typedef vector<VI> VVI;
typedef vector<ii> VII;
typedef vector<VII> VVII;

struct iii {
  int first, second, third;
  iii() {}
  iii(int f, int s, int t) : first(f), second(s), third(t) {}
};

typedef vector<iii> VIII;

bool operator < (iii i1, iii i2) {
  if (i1.first < i2.first) return true;
  if (i1.second < i2.second) return true;
  return i1.third < i2.third;
}

bool operator > (iii i1, iii i2) {
  if (i1.first > i2.first) return true;
  if (i1.second > i2.second) return true;
  return i1.third > i2.third;
}

bool operator == (iii i1, iii i2) {
  return (i1.first == i2.first) and (i1.second == i2.second) and (i1.third == i2.third);
}

//END OF THE HEADER

const int p = 1000000007;

int fre[2001][2001];
int ful[2001][2001];

void calc() {
  fre[0][0] = 1;
  for (int i = 0; i <= 2000; ++i) fre[0][i] = 1;
  for (int i = 1; i <= 2000; ++i) for (int j = 0; j <= 2000; ++j) {
    if (j <= i) fre[i][j] = 0;
    else fre[i][j] = (fre[i - 1][j] + fre[i][j - 1])%p;
  }
  for (int i = 0; i <= 2000; ++i) for (int j = 0; j <= 2000; ++j) {
    ful[i][j] = 0;
    for(int k = 0; k < i; ++k) ful[i][j] = (ful[i][j] + fre[k][i])%p;
  }
}

int main() {
  calc();
  int test;
  scanf ("%d\n", &test);
  int a, b;
  for (int cas = 1; cas <= test; ++cas) {
    scanf ("%d-%d\n", &a, &b);
    printf ("Case #%d: %d %d\n", cas, fre[b][a], ful[b][a]);
  }
}