#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll dp1[2001][2001], dp2[2001][2001];
const ll mod = 1000000007LL;

int build(){
        for (int i=1; i<=2000; i++){
                dp1[0][i] = 0;
                dp2[0][i] = 1;
        }
        for (int i=1; i<=2000; i++){
                dp1[i][0] = 1;
                dp2[i][0] = 0;
        }
        for (int i=1; i<=2000; i++){
            for (int j=1; j<i; j++){
                    dp1[i][j] = dp1[i-1][j] + dp1[i][j-1];
                    dp1[i][j]%=mod;
            }
        }
    return 0;
}

pair<int,int> getNumbers(string &s){
    int fi=0,se=0;
    int id = 0;
    for (int i=0; i<s.length(); i++){
        if (s[i]=='-'){
            id = i+1; break;
        }
        fi = fi*10 + (s[i]-'0');
    }
    for (int i=id; i<s.length(); i++){
        se = se*10 + (s[i]-'0');
    }
    return make_pair(fi,se);
}

int main(){
    freopen("out.txt","w",stdout);
    int t;
    scanf("%d",&t);
    build();
    for (int id=1; id<=t; id++){
        string s;
        cin>>s;
        pair<int,int> p = getNumbers(s);
        int l = p.first, r = p.second;
        ll ans2 = 0LL;
        for (int i=0; i<r; i++){
            ans2+=dp1[r][i];
            ans2%=mod;
        }
        cout<<"Case #"<<id<<": "<<dp1[l][r]<<" "<<ans2<<"\n";
    }
}
 
