#include <list>
#include <stack>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include <sstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <assert.h>


using namespace std;

#define pb push_back
#define mp make_pair


typedef unsigned long long ull;
typedef long long int64;


#define mo 1000000007


ull sum[2][2048];

int main()
{
	freopen("..\\in.txt", "r", stdin);
	freopen("..\\out.txt", "w", stdout);
	
	int test_case=0;
	scanf("%d", &test_case);

	for (int i=1; i<=test_case; i++)
	{
		printf("Case #%d: ", i);

		int a,b;
		scanf("%d-%d", &a, &b);

		ull stressfree=0, stress=0;

		if (b == 0) {
			stressfree = stress = 1;
		} else {
			int index=0;
			for (int jb=1; jb<=b; jb++) {
				memset(sum[index], 0, sizeof(sum)/2);

				for (int ja=jb+1;ja<=a;ja++) {
					if (jb>1)	sum[index][ja]+= sum[1-index][ja];
					else	sum[index][ja]+= 1;

					if(ja>jb+1)
						sum[index][ja]+= sum[index][ja-1];

					sum[index][ja]%=mo;
				}

				index=1-index;
			}
			stressfree = sum[1-index][a];

			index=0;
			for (int jb=1; jb<=b; jb++) {
				memset(sum[index], 0, sizeof(sum)/2);

				for (int ja=1;ja<=jb;ja++) {
					if (ja>1)	sum[index][ja]+= sum[index][ja-1];
					else	sum[index][ja]+= 1;

					if(ja<jb)
						sum[index][ja]+= sum[1-index][ja];

					sum[index][ja]%=mo;
				}

				index=1-index;
			}
			stress = sum[1-index][b];
		}

		printf("%lld %lld", stressfree, stress);

		printf("\n");
	}

	return 0;
}



