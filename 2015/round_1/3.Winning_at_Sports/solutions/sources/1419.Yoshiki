#include <bits/stdc++.h>

using namespace std;

const long long int mod = 1e9 + 7;

int a, b;
long long int dp1[2005][2005]; // stress-free
long long int dp2[2005][2005]; // stressful

void solve() {
  for (int i = 0; i <= a; i++) {
    for (int j = 0; j <= b; j++) {
      dp1[i][j] = dp2[i][j] = 0;
    }
  }
  dp1[0][0] = dp2[0][0] = 1;

  for (int i = 0; i <= a; i++) {
    for (int j = 0; j <= b; j++) {
      if (dp1[i][j] != 0) {
        dp1[i + 1][j] += dp1[i][j];
        dp1[i + 1][j] %= mod;
        if (i > j + 1) {
          dp1[i][j + 1] += dp1[i][j];
          dp1[i][j + 1] %= mod;
        }
      }
      if (dp2[i][j] != 0) {
        dp2[i][j + 1] += dp2[i][j];
        dp2[i][j + 1] %= mod;
        if ((i + 1 <= j) || (j == b)) {
          dp2[i + 1][j] += dp2[i][j];
          dp2[i + 1][j] %= mod;
        }
      }
    }
  }
}

int main() {
  int T;
  cin >> T;

  for (int tc = 1; tc <= T; tc++) {
    scanf("%d-%d", &a, &b);
    solve();
    cout << "Case #" << tc << ": " << dp1[a][b] << ' ' << dp2[a][b] << endl;
  }
  
  return 0;
}
