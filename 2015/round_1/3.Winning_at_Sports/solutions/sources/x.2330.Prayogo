#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;

long long dp[2003][2003][2];
long long MOD = (long long) 1e9 + 7LL;
int me,opp;
int N;
int main(){
	int TC;
	scanf("%d",&TC);
	for(int TT=1;TT<=TC;++TT){
		printf("Case #%d: ",TT);
		scanf(" %d-%d",&me,&opp);
		N = me+opp;
		for(int i=0;i<=N;++i){
			for(int j=0;j<=N;++j){
				dp[i][j][0] = dp[i][j][1] = 0;
			}
		}
		// 0 is stressfree
		dp[1][1][0] = 1;
		// stressful lose
		dp[1][1][1] = 1;
		for(int i=2;i<=N;++i){
			for(int j=1;j<=N;++j){
				//stress free
				//if lose but still has more
				dp[i][j][0] += dp[i-1][j+1][0];
				dp[i][j][0] %= MOD;
				//if win
				dp[i][j][0] += dp[i-1][j-1][0];
				dp[i][j][0] %= MOD;

			}
		}
		for(int i=2;i<=opp+opp;++i){
			for(int j=0;j<=N;++j){
				if(i+j > 2*opp)continue;
				//stressfull
				//if lose
				if(j>0){
					dp[i][j][1] += dp[i-1][j-1][1];
					dp[i][j][1] %= MOD;
				}
				//if win but still has less
				dp[i][j][1] += dp[i-1][j+1][1];
				dp[i][j][1] %= MOD;
				// if(i+j == 2*opp){
				// 	dp[N][N][1] += dp[i][j][1];
				// 	dp[N][N][1] %= MOD;
				// }
			}
		}
		/*
		for(int i=0;i<=N;++i){
			for(int j=0;j<=N;++j){
				printf("%d ",(int)dp[i][j][0]);
			}
			printf("\n");
		}
		*/
		printf("%d %d\n",(int)dp[N][me-opp][0], (int)dp[2*opp][0][1]);

	}
	return 0;
}