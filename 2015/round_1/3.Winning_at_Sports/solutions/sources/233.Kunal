#include <vector>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include<iomanip>
using namespace std;

typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
#define pb push_back
#define sz size()
#define ln length()
#define fore(i,a,b) for(int i=a;i<b;i++)
#define fores(i,a,b) for(int i=a;i<=b;i++)
#define ford(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%d",&a)
#define md 1000000007

int main() {
	freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
	int t;
	cin>>t;
	fore(z,0,t)
	{
		printf("Case #%d: ",z+1);
		string s;
		cin>>s;
		int a = 0, b = 0;
		int i = 0;
		while(s[i]!='-')
        {
            a = (a*10) + (int)(s[i]-'0');
            i++;
        }
        i++;
        for(;i<s.ln;i++)
            b = (b*10) + (int)(s[i]-'0');
        if(b==0)
        {
            cout<<"1 1"<<endl;
            continue;
        }
        vector<vector<unsigned int> > dp(a+5,vector<unsigned int> (b+5));
        fore(i,0,a+5)
            fore(j,0,b+5)
                dp[i][j] = 0;
        dp[0][0] = 1;
        fore(i,1,b+1)
            dp[0][i] = 0;
        fore(i,1,a+1)
            dp[i][0] = 1;
        fore(i,1,a+1)
        {
            fore(j,1,b+1)
            {
                if(j>=i)
                    dp[i][j] = 0;
                else
                    dp[i][j] = ( (dp[i-1][j]%md) + (dp[i][j-1]%md) ) %md;
            }
        }
        cout<<dp[a][b]<<" ";

        fore(i,0,a+5)
            fore(j,0,b+5)
                dp[i][j] = 0;
        dp[0][0] = 1;
        fore(i,1,b+1)
            dp[0][i] = 1;
        fore(i,1,a+1)
            dp[i][0] = 0;
        fore(i,1,a+1)
        {
            fore(j,1,b+1)
            {
                if(i>j && j<b)
                    dp[i][j] = 0;
                else
                    dp[i][j] = ( (dp[i-1][j]%md) + (dp[i][j-1]%md) ) %md;
            }
        }
        cout<<dp[a][b]<<endl;
	}
	return 0;
}
