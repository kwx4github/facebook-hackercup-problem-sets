#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <queue>
#include <algorithm>
#include <iostream>
using namespace std;

typedef long long ll;
#define mod 1000000007
#define pi acos(-1.0)

int dp[2005][2005];
int a, b;

int solve1(int i, int j)
{
	if(i == a && j == b)
		return 1;
	if(dp[i][j] == -1)
	{
		dp[i][j] = 0;
		if(i + 1 <= a)
			dp[i][j] = (dp[i][j] + solve1(i + 1, j)) % mod;
		if(i > j + 1 && j + 1 <= b)
			dp[i][j] = (dp[i][j] + solve1(i, j + 1)) % mod;
	}
	return dp[i][j];
}

int solve2(int i, int j)
{
	if(i == a && j == b)
		return 1;
	if(dp[i][j] == -1)
	{
		dp[i][j] = 0;
		if(i + 1 <= a && (i + 1 <= j || j == b))
			dp[i][j] = (dp[i][j] + solve2(i + 1, j)) % mod;
		if(j + 1 <= b)
			dp[i][j] = (dp[i][j] + solve2(i, j + 1)) % mod;
	}
	return dp[i][j];
}

int main()
{
	freopen("winning_at_sports.txt", "r", stdin);
	freopen("winning_at_sports.out", "w", stdout);
	int T;
	scanf("%d", &T);
	for(int t = 1; t <= T; t++)
	{
		scanf("%d-%d", &a, &b);
		memset(dp, -1, sizeof(dp));
		int stressfree = solve1(0, 0);
		memset(dp, -1, sizeof(dp));
		int stressful = solve2(0, 0);
		printf("Case #%d: %d %d\n", t, stressfree, stressful);
	}
	return 0;
}