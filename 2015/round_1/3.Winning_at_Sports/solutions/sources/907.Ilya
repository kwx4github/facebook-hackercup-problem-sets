#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;

const int base = 1000000007;
const int max_val = 2000;

vector<vector<int>> cache_f(max_val + 1, vector<int>(max_val + 1, -1));
vector<vector<int>> cache_g(max_val + 1, vector<int>(max_val + 1, -1));

int f(int a, int b)
{
	if (a == 0 && b == 0)
		return 1;
	if (a <= b || b < 0 || a < 0)
		return 0;


	if (cache_f[a][b] != -1)
		return cache_f[a][b];

	return cache_f[a][b] = (f(a - 1, b) + f(a, b - 1)) % base;
}

int g(int a, int b)
{
	if (a == 0 && b == 0)
		return 1;
	if (a < b || b < 0 || a < 0)
		return 0;

	if (cache_g[a][b] != -1)
		return cache_g[a][b];

	return cache_g[a][b] = (g(a - 1, b) + g(a, b - 1)) % base;
}

int main()
{
	int T;
	cin >> T;
	for (int t = 1; t <= T; t++)
	{
		char ch;
		int a, b;
		cin >> a >> ch >> b;

		cout << "Case #" << t << ": " << f(a, b) << ' ' << g(min(a, b), min(a, b)) << endl;
	}
}