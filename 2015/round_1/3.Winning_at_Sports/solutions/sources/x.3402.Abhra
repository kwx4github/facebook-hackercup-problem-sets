/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
ll mod=1e9 + 7;
matrix(dp,2010,2010);
void init(){
	fe(i,2000){
		dp[i][0]=1;
		fe(j,2000){
			if(j>=i) break;
			dp[i][j]=dp[i-1][j]+dp[i][j-1];
			if(dp[i][j]>=mod) dp[i][j]-=mod;
		}
	}
}
int main(){
	int t,cas=0,n,m;
	ll ans=0;
	bool fl;
	string s;
	si(t);
	init();
	while(t--){
		printf("Case #%d: ",++cas);
		cin>>s;
		n=0;m=0;fl=true;
		f(i,s.size()){
			if(s[i]=='-'){
				fl=false;
				continue;
			}
			if(fl) n=(n*10)+(s[i]-'0');
			else m=(m*10)+(s[i]-'0');
		}
		ans=0;
		f(i,m){
			ans+=dp[m][i];
			if(ans>=mod) ans-=mod;
		}
	//	cout<<n<<" "<<m<<endl;
		printf("%Ld %Ld\n",dp[n][m],ans);
	}
	return 0;
}