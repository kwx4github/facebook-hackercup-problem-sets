#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;

const int mod = 1000000007;
const int MAXN = 2010;

int dp[MAXN][MAXN],n,m,dp1[MAXN][MAXN];

int rek(int a,int b) {
	//printf("rek %d %d\n",a,b);
	if (a < 0 || b < 0) return 0;
	if (a == 0 && b == 0) return 1;
	if (a <= b) return 0;
	if (dp[a][b] != -1) return dp[a][b];
	
	return dp[a][b] = (rek(a - 1,b) + rek(a,b - 1)) % mod;
}

int rek1(int a,int b) {
	//printf("rek1 %d %d\n",a,b);
	if (a < 0 || b < 0) return 0;
	if (a == 0 && b == 0) return 1;
	if (a > b && b < m) return 0;
	if (dp1[a][b] != -1) return dp1[a][b];
	
	return dp1[a][b] = (rek1(a - 1,b) + rek1(a, b - 1)) % mod;
}


void solve(int in) {
	printf("Case #%d: ",in);
	//printf("------------\n");
	scanf("%d-%d",&n,&m);
	printf("%d %d\n",rek(n,m),rek1(n,m));
}

int main() {
	memset(dp,-1,sizeof dp);
	memset(dp1,-1,sizeof dp1);
	int t;
	scanf("%d",&t);
	for (int i = 0;i < t; i++)
		solve(i + 1);
	return 0;
}
