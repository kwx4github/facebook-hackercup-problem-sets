 #include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <cassert>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include<stdio.h>
#define FOR(i,a,b) for(long int i=a;i<b;i++)
#define MOD 1000000007
using namespace std;
int n1,n2;
long long int dp[2005][2005] = {0};
long long int f(int a,int b)
{
    if(a <= b || a > n1 || b > n2) return 0;
    else if(a == n1 && b == n2) 
    {
        dp[a][b] = 1;
        return dp[a][b];
    }    
    else
    {
        if(a+1 <= n1 && dp[a+1][b] == 0) dp[a+1][b] = f(a+1,b);
        if(b+1 <= n2 && dp[a][b+1] == 0) dp[a][b+1] = f(a,b+1);
        dp[a][b] = (dp[a+1][b]%MOD + dp[a][b+1]%MOD)%MOD;
    }        
    return dp[a][b];
}
long long int f1(int a,int b)
{
    if( (a > b && b < n2) || a > n1 || b > n2) return 0;
    else if(a == n1 && b == n2) 
    {
        dp[a][b] = 1;
        return dp[a][b];
    }    
    else
    {
        if(a+1 <= n1 && dp[a+1][b] == 0) dp[a+1][b] = f1(a+1,b);
        if(b+1 <= n2 && dp[a][b+1] == 0) dp[a][b+1] = f1(a,b+1);
        dp[a][b] = (dp[a+1][b]%MOD + dp[a][b+1]%MOD)%MOD;
    }        
    return dp[a][b];
}
int main()
{
  freopen("read.txt","r",stdin);
  freopen("write.txt","w",stdout);
  
  int t,c = 1;
  
  cin>>t;
  while(t--)
  {
      scanf("%d-%d",&n1,&n2);
      memset(dp,0,sizeof(dp));
      long long int ans1,ans2;
      ans1 = f(1,0)%MOD;
      memset(dp,0,sizeof(dp));
      ans2 = f1(0,0)%MOD;
      cout<<"Case #"<<c<<": "<<ans1<<" "<<ans2<<"\n";
      c++;
  }
  return 0;
}
