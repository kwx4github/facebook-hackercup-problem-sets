#include<iostream>
#include<cstring>
#include<cstdio>
using namespace std;
const int maxN = 2000 + 1;
const int module = 1e9 + 7;
void add(int &a, int b)
{
  a += b;
  if ( a >= module)
  {
    a -= module;
  }
}

int main()
{
  static int good[maxN + 1][maxN + 1], bad[maxN + 1][maxN + 1];
  memset(good, 0, sizeof good);
  memset(bad, 0, sizeof bad);
  good[1][0] = 1;
  bad[0][0] = 1;
  for (int i = 0; i < maxN; i++) {
    for (int j = 0; j < maxN; j++)
    {
      if (i > j)
      {
        add(good[i + 1][j], good[i][j]);
        add(good[i][j + 1], good[i][j]);
      }
      if (i <= j)
      {
        add(bad[i + 1][j], bad[i][j]);
        add(bad[i][j + 1], bad[i][j]);
      }
    }
  }
  int testN;
  cin >> testN;
  for (int testId = 1; testId <= testN; ++testId)
  {
    printf("Case #%d: ", testId);
    int a, b;
    scanf("%d-%d", &a, &b);
    cout << good[a][b] << ' ' <<  bad[b][b] << endl;
  }
  return 0;
}