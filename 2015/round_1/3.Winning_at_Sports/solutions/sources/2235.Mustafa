def calc_sfree(a,b) 
  return @arr[a][b] if @arr[a][b] != -1
  if b==0 
      @arr[a][b] = 1 
  elsif a==b+1
      @arr[a][b] = calc_sfree(a,b-1)
  else
     @arr[a][b] = (calc_sfree(a,b-1) + calc_sfree(a-1,b))%(@p)
  end
end

def calc_sful(a,b) 
  return @arr[a][b] if @arr[a][b] != -1
  if a==0 
      @arr[a][b] = 1 
  elsif a==b
      @arr[a][b] = calc_sful(a-1,b)
  else
     @arr[a][b] = (calc_sful(a,b-1) + calc_sful(a-1,b))%(@p)
  end
end

@p = 1000000007
gets.to_i.times { |tc| 
    a,b = gets.split("-").map(&:to_i)
    @arr = Array.new(a+1)
    for i in 0..a
        @arr[i] = Array.new(a+1,-1) 
    end

    sfree = calc_sfree(a,b) 

    @arr = Array.new(a+1)
    for i in 0..a
        @arr[i] = Array.new(a+1,-1) 
    end
    
    sful = calc_sful(b,b)

    puts "Case ##{tc+1}: #{sfree} #{sful}"
}
