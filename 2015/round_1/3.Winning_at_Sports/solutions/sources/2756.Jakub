#include<iostream>
#include<string>
using namespace std;

int const mod = 1000000007;
int n, m, t;
string wynik;
int dp[2345][2345];

bool stress(int a, int b){
    return a <= b;
}

bool free(int a, int b){
    if(a == 0 && b == 0) return true;
    return a > b;
}

int main(){
    cin >> t;
    for(int i = 1; i <= t; ++i){
	cin >> wynik;
	int j = 0;
	n = m = 0;
	while(wynik[j] != '-'){
	  n *= 10;
	  n += wynik[j] - '0';
	  ++j;
	}
	++j;
	for(;j < wynik.size(); ++j){
	  m *= 10;
	  m += wynik[j] - '0';
	}
	for(int x = 1; x <= n; ++x)
	   for(int y = 1; y <=m; ++y) dp[x][y] = 0;
	for(int j = 0; j <= m; ++j) dp[0][j] = 1;
	for(int j = 1; j <= n; ++j) dp[j][0] = 1;
	for(int j = 1; j <= n; ++j)
	  for(int l = 1; l <= m; ++l){
	    if(stress(j, l)){
	      if(stress(j - 1, l)){
		dp[j][l] += dp[j - 1][l];
		dp[j][l] %= mod;
	      }
	      if(stress(j, l - 1)){
		dp[j][l] += dp[j][l - 1];
		dp[j][l] %= mod;
	      }
	    }
	    if(free(j, l)){
	      if(free(j - 1,l)){
		dp[j][l] += dp[j - 1][l];
		dp[j][l] %= mod;
	      }
	      if(free(j, l -1)){
		dp[j][l] += dp[j][l - 1];
		dp[j][l] %=mod;
	      }
	    }
	  }
      cout << "Case #" << i << ": " << dp[n][m] << " " << dp[m][m] << endl;
    }
    return 0;
}