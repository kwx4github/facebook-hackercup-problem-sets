#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <climits>
#include <cctype>
#define SZ(x) ( (int) (x).size() )
#define me(x,a) memset(x,a,sizeof(x))
#define FN(a,n) for(int a=0;a<n;a++)
#define FOR(a,ini,fin) for(int a=(ini);a<(fin);a++)
#define ull unsigned long long
#define sc1(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d %d",&x,&y)
#define sc3(x,y,z) scanf("%d %d %d",&x,&y,&z)
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define endl "\n"
#define MOD 1000000007 
#define MAXN 2003
using namespace std;
int memo1[MAXN][MAXN];
int memo2[MAXN][MAXN];

int dp1(int a ,int b){
    if( a == b) return 0;
    if( b == 0) return 1;
    int &res = memo1[a][b];
    if( res != -1) return res;
    
    res = 0;
    res += dp1( a-1, b );
    res += dp1( a, b-1 );
    res%= MOD;
    return res;
}

int dp2(int a ,int b){
    if( b == 0 || a == 0) return 1;
    int &res = memo2[a][b];
    if( res != -1) return res;
        
    if( a >= b ) return res = dp2( b-1, b );
    res = 0;
    res += dp2( a-1, b );
    res += dp2( a, b-1 );
    res%= MOD;
    return res;
}

int main(){
    int ntc;
    me(memo1,-1);
    me(memo2,-1);
    sc1(ntc);
    FN(itc,ntc){
        int a, b;
        scanf("%d-%d",&a,&b);
        int res1 = dp1(a,b);
        int res2 = dp2(a,b);
        printf("Case #%d: %d %d\n",(itc+1),res1 ,res2 );
    }
    
}

