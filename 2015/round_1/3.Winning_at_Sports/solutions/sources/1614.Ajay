#include<stdio.h>
#include<stdlib.h>
#define MAX_N 2001
int main() {
	int i, j, a, b, tc;
	int* dp = (int*)malloc(sizeof(int)*MAX_N*MAX_N);
	int* dp2 = (int*)malloc(sizeof(int)*MAX_N*MAX_N);
	dp[0] = 0;
	dp2[0] = 0;
	for (i=1;i<MAX_N;i++) {
		dp[i*MAX_N+0] = 1;
		dp2[i*MAX_N+0] = 1;
		dp2[0*MAX_N+i] = 1;
	}
	for (i=2;i<MAX_N;i++) {
		for (j=1;j<i;j++) {
			if (i-1 > j) {
				dp[i*MAX_N+j] += dp[(i-1)*MAX_N+j];
			}
			if (j-1 >= 0) {
				dp[i*MAX_N+j] += dp[i*MAX_N+j-1];
			}
			dp[i*MAX_N+j]%=1000000007;
		}
	}
	for (i=1;i<MAX_N;i++) {
		for (j=1;j<MAX_N;j++) {
			if (i > j) {
				dp2[i*MAX_N+j] = dp2[(i-1)*MAX_N+j];
			} else {
				if (i <= j-1) {
					dp2[i*MAX_N+j] += dp2[i*MAX_N+j-1];
				}
				if (i-1 >= 0) {
					dp2[i*MAX_N+j] += dp2[(i-1)*MAX_N+j];
				}
				dp2[i*MAX_N+j]%=1000000007;
			}
		}
	}
	scanf("%d", &tc);
	j = 0;
	while(j++ < tc) {
		scanf("%d-%d", &a, &b);
		printf("Case #%d: %d %d\n", j, dp[a*MAX_N+b], dp2[a*MAX_N+b]);	
	}
	return 0;
}
