#include <iostream>
#include <algorithm>
#include <array>
#include <climits>
#include <cmath>
#include <iterator>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <tuple>
#include <vector>

typedef long long          ll;
typedef unsigned int       uint;
typedef unsigned long long ull;

using namespace std;

string solve() {
  int you;
  int opponent;
  cin >> you >> opponent;
  opponent *= -1;

  vector<vector<ll>> dp(opponent + 1, vector<ll>(you + 1, 0));
  dp[0][1] = 1;
  for (int i = 0; i <= opponent; i++) {
    for (int j = 0; j <= you; j++) {
      if (j > i) {
        if (i > 0) {
          dp[i][j] += dp[i - 1][j];
        }
        if (j > 0) {
          dp[i][j] += dp[i][j - 1];
        }
        dp[i][j] %= 1000000007;
      }
    }
  }
  vector<vector<ll>> dp2(opponent + 1, vector<ll>(you + 1, 0));
  dp2[0][0] = 1;
  for (int i = 0; i <= opponent; i++) {
    for (int j = 0; j <= you; j++) {
      if (j <= i) {
        if (i > 0) {
          dp2[i][j] += dp2[i - 1][j];
        }
        if (j > 0) {
          dp2[i][j] += dp2[i][j - 1];
        }
        dp2[i][j] %= 1000000007;
      }
    }
  }
  return to_string(dp[opponent][you]) + " " + to_string(dp2[opponent][opponent]);
}

int main() {
  int T;
  cin >> T;
  for (int i = 0; i < T; i++) {
    std::cout << "Case #" << i + 1 << ": " << solve() << std::endl;
  }
  return 0;
}
