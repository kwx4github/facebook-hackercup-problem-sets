#define _CRT_SECURE_NO_WARNINGS
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <string>
#include <utility>
#include <vector>
using namespace std;
template<class T> inline void checkmin(T &a, T b) { if (b < a) a = b; }//NOTES:checkmin( 
template<class T> inline void checkmax(T &a, T b) { if (b > a) a = b; }//NOTES:checkmax( 
#define SIZE(x) ((int)(x).size()) 
#define for0(i,n) for(int i=0;i<(n);i++) 
#define for1(i,n) for(int i=1;i<=(n);i++) 
#define for0r(i,n) for(int i=(n)-1;i>=0;i--) 
#define for1r(i,n) for(int i=(n);i>=1;i--) 
typedef long long ll;
typedef pair<int, int> pii;

const int kMod = 1000000007;
const int kN = 2000;
int d[2020][2020];
int e[2020][2020];

void init() {
  d[0][0] = 1;
  for1(i, kN) {
    d[i][0] = 1;
    for1(j, i - 1)
      d[i][j] = (d[i - 1][j] + d[i][j - 1]) % kMod;
  }
  e[0][0] = 1;
  for1(j, kN) {
    e[0][j] = 1;
    for1(i, j - 1)
      e[i][j] = (e[i - 1][j] + e[i][j - 1]) % kMod;
    e[j][j] = e[j - 1][j];
  }
}

void solve() {
  int a, b;
  scanf("%d-%d", &a, &b);
  int ans = 0;
  for (int i = 0; i < b; i++) {
    ans = (ans + e[i][b - 1]) % kMod;
  }
  printf("%d %d\n", d[a][b], ans);
}

int main() {
  init();
  freopen("winning_at_sports.txt", "r", stdin);
  freopen("winning_at_sports.out", "w", stdout);
  int T, TC = 0;
  scanf("%d", &T);
  while (++TC <= T) {
    printf("Case #%d: ", TC);
    solve();
  }
  return 0;
}
