#include <string>
#include <vector>
#include <set>
#include <iostream>
#include <algorithm>
#include <utility>
#include <map>
#include <cstdio>
#include <sstream>
#include <cmath>

using namespace std;

#define REP(a, b) for (int a = 0; a<(b); ++a)
#define FOR(a, b, c) for (int a = (b); a<=(c); ++a)
#define FORD(a, b, c) for (int a = (b); a>=(c); --a)
#define FOREACH(a, v) for (INIT(a, (v).begin()); a!=(v).end(); ++a)
 
template<class T>
inline int size(const T&t){return t.size();}
 
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef long long LL;

#define INF 1000000000
#define PB push_back
#define MP make_pair

////////////////////////////////

#define MOD 1000000007

int tab[3000][3000];
int N1, N2;

void licz() {
    scanf("%d-%d", &N1, &N2);
    REP(a, N1+2) REP(b, N2+2) tab[a][b] = 0;
    tab[0][0] = 1;
    REP(a, N1+1) REP(b, N2+1) {
        if (a+1>b)
            tab[a+1][b] = (tab[a+1][b]+tab[a][b])%MOD;
        if (a>b+1)
            tab[a][b+1] = (tab[a][b+1]+tab[a][b])%MOD;
    }
    printf("%d ", tab[N1][N2]);
    REP(a, N1+2) REP(b, N2+2) tab[a][b] = 0;
    tab[0][0] = 1;
    REP(a, N1+1) REP(b, N2+1) {
        if (a+1<=b || b==N2)
            tab[a+1][b] = (tab[a+1][b]+tab[a][b])%MOD;
        if (a<=b+1 || b+1==N2)
            tab[a][b+1] = (tab[a][b+1]+tab[a][b])%MOD;
    }
    printf("%d\n", tab[N1][N2]);
}

int main() {
    int TT;
    scanf("%d", &TT);
    REP(tt, TT) {
        printf("Case #%d: ", (tt+1));
        licz();
    }
}
