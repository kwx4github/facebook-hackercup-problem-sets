#include <iostream>
#include <vector>
using namespace std;
long findStressfree(vector<vector<long> > &data, int num1, int num2);
int findStressful(vector<vector<long> > &data, int num1, int num2);
int main(){
	int T;
	cin>>T;
	vector<vector<long> > data(2001, vector<long>(2001,-1));
	for (int t=1; t<= T; t++)
	{
		string str;
		cin >> str;
		string n1 = str.substr(0,str.find("-"));
		string n2 = str.substr(str.find("-")+1);
		int num1 = stoi(n1),num2 = stoi(n2);
		vector<vector<long> > data2 = data;
		data[1][0] = 1;	 
		cout << "Case #" << t << ": " ;
		cout << findStressfree(data, num1,num2) << " ";
		data2[0][1] = 1; 
		cout << findStressful(data2,num2,num2) << endl; 
	}	
}
long findStressfree(vector<vector<long> > &data, int num1, int num2){	
	if(num2 < 0 || num2 >= num1){
		return 0;
	}
	if(data[num1][num2] != -1){
		return data[num1][num2];
	}	
	long result = (findStressfree(data,num1,num2-1) + findStressfree(data,num1-1,num2))% 1000000007;
	data[num1][num2] = result;
	return result;
}
int findStressful(vector<vector<long> > &data, int num1, int num2){
	if(num2 < 0 || num1 < 0|| num1 > num2){
		return 0;
	}
	if(data[num1][num2] != -1){
		return data[num1][num2];
	}	
	long result = (findStressful(data,num1,num2-1) + findStressful(data,num1-1,num2))% 1000000007;
	data[num1][num2] = result;
	return result;
}