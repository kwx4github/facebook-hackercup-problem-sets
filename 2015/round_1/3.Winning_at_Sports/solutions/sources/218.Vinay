#include<cstdio>
#include<vector>
#include<queue>
#include<algorithm>
#include<set>
#include<map>
#include<stack>
#include<cmath>
#include <map>
#include<iostream>
#include<cstdlib>
#include<cstring>
#include<string>
#include<cassert>
using namespace std;
 
#define DEBUG //on-off switch for prlling statements
 
// Input macros
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
 
// Useful constants
#define EPS                         1e-9
 
// Useful hardware instructions
#define bitcount1                    __builtin_popcount1
#define gcd                         __gcd
 
// Useful container manipulation / traversal macros
#define forall(i,a,b)               for(ll i=a;i<b;i++)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                    memset(a, v, sizeof a)
#define sz(a)                       ((ll)(a.size()))
 
// Some common useful functions
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))
 
#define INF 1000000000
#define ll long long int
#define llu long long unsigned
#define ld long
 
#define llu long long unsigned
#define ld long
#define F first
#define S second
 
#define mod 1000000007
ll dp[2001][2001];
ll dp1[2001][2001];
int main()
{
	fill(dp,0);
	dp[1][0]= 1;
	for(int i=1;i<=2000;i++)
	{
		for(int j=0;j<=2000;j++)
		{

			if(i-1 > j)
			{
				dp[i][j] = (dp[i][j] + dp[i-1][j])%mod;
			}
			if(j!=0)
			dp[i][j] = (dp[i][j] + dp[i][j-1])%mod;
			
		}
	}
	fill(dp1,0);
	dp1[1][0]= 1;
	for(int i=1;i<=2000;i++)
	{
		for(int j=0;j<=2000;j++)
		{

			if(i-1 >= j)
			{
				dp1[i][j] = (dp1[i][j] + dp1[i-1][j])%mod;
			}
			if(j!=0)
			dp1[i][j] = (dp1[i][j] + dp1[i][j-1])%mod;
			
		}
	}
	int t;
	s(t);
	for(int i=0;i<t;i++)
	{
		int a,b;
		scanf("%d-%d",&a,&b);
		ll ans1;
		if(b == 0)
		ans1=1;
		else
		ans1=dp1[b][b];
		printf("Case #%d: %lld %lld\n",i+1,dp[a][b],ans1);
	}
		
	
		
			
} 