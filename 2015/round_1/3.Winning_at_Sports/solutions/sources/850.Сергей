#!/usr/bin/pypy3

from bisect import bisect_left, bisect_right
from pickle import dump, load
import os

MOD = 10**9+7

def solve():
    a, b = map(int, input().split('-'))
    r1 = s[a][b]
    r2 = 1 if b <= 1 else s[b+1][b]
    return "%d %d" % (r1, r2)

def main():
    T = int(input())
    for t in range(T):
        print ("Case #%d: %s" % (t+1, solve()))

def precalc():
    global s
    s = []
    s= [[0 for j in range(2001)] for i in range(2001)]
    for i in range(1,2001):
        for j in range(i):
            if j == 0:
                s[i][j] = 1
            elif i - j == 1:
                s[i][j] = s[i][j-1]
            else:
                s[i][j] = (s[i-1][j]+s[i][j-1])%MOD

if __name__ == "__main__":
    precalc()
    main()
