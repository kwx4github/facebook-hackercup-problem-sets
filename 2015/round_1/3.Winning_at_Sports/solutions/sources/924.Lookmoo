#include <cstdio>
#include <iostream>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <stack>
#include <cmath>
#include <queue>
using namespace std;

int stressfree[2010][2010];
int stressful[2010][2010];
const int mod = 1000000007;


int sf(int me, int you)
{
	if (stressfree[me][you] != -1) return stressfree[me][you];
	int out = 0;

	if (you < me-1 && me-1 >= 0) out += sf(me-1, you);
	if (you-1 < me && you-1 >= 0) out += sf(me, you-1);

	return stressfree[me][you] = out % mod;
}

int sfu(int me, int you)
{
	if (me < 0) return 1;
	if (stressful[me][you] != -1) return stressful[me][you];
	int out = 0;

	if (you >= me-1 && me-1 >= 0) out += sfu(me-1, you);
	if (you-1 >= me && you-1 >= 0) out += sfu(me, you-1);

	//printf("%d/%d = %d\n", me, you, out % mod);
	return stressful[me][you] = out % mod;
}


void input()
{
	int me, you;
	scanf("%d-%d", &me, &you);
	printf("%d %d\n", sf(me, you), sfu(you-1, you));
}


void computeStressfree()
{
	for (int i = 0; i < 2010; ++i)
	{
		for (int j = 0; j < 2010; ++j)
		{
			stressfree[i][j] = -1;
		}
	}
	stressfree[1][0] = 1;
	sf(2000, 2000);
}

void computeStressful()
{
	for (int i = 0; i < 2010; ++i)
	{
		for (int j = 0; j < 2010; ++j)
		{
			stressful[i][j] = -1;
		}
	}
	stressful[0][0] = 1;
	sfu(2000, 2000);
}

int main()
{
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	
	computeStressfree();
	computeStressful();

	int T;
	scanf("%d", &T);

	for (int test = 1; test <= T; ++test)
	{
		printf("Case #%d: ", test);
		input();
	}

	return 0;
}