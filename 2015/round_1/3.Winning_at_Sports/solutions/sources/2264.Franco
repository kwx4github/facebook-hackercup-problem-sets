#include <iostream>
#include <vector>
#include <cstring>
#include <map>
#include <cstdio>

using namespace std;

#define forsn(i,s,n) for(int i = (s);i < (int)(n);i++)
#define forn(i,n) forsn(i,0,n)

typedef long long int tint;

const int MOD = 1000000007;
tint dp[4096][4096];

int main() {
	int t; cin >> t;
	forsn(caso, 1, t + 1) {
		int a,b; cin >> a; scanf("%*c"); cin >> b;
		
		cout << "Case #" << caso << ": ";
		
		memset(dp, 0, sizeof(dp));
		dp[1][0] = 1;
		forsn(points, 2, a + b + 1) {
			forsn(myscore, 1, points + 1) {
				int other_score = points - myscore;
				if (myscore > other_score) {
					if (myscore - 1 > other_score) {
						dp[myscore][other_score] += dp[myscore - 1][other_score];
						dp[myscore][other_score] %= MOD;
					}
					if (other_score) {
						dp[myscore][other_score] += dp[myscore][other_score - 1];
						dp[myscore][other_score] %= MOD;
					}
				}
			}
		}
		cout << dp[a][b] << " ";
		
		if (b == 0) cout << 1 << endl;
		else {
			memset(dp, 0, sizeof(dp));
			dp[0][1] = 1;
			forsn(points, 2, 2 * b) {
				forn(myscore, points + 1) {
					int other_score = points - myscore;
					if (myscore <= other_score) {
						if (myscore) {
							dp[myscore][other_score] += dp[myscore - 1][other_score];
							dp[myscore][other_score] %= MOD;
						}
						if (myscore <= other_score - 1) {
							dp[myscore][other_score] += dp[myscore][other_score - 1];
							dp[myscore][other_score] %= MOD;
						}
					}
				}
			}
			
			cout << dp[b - 1][b] << endl;
		}
	}
}
