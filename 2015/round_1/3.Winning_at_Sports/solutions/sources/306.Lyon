#include <bits/stdc++.h>
using namespace std;

const int N = 2015;
const int MOD = 1e9 + 7;
int dp[N][N];

inline void Add(int &a, const int b) {
	a += b;
	if (a >= MOD) {
		a -= MOD;
	}
}

int StressFree(int a, int b) {
	memset(dp, 0, sizeof dp);
	for (int i = 1; i <= a; ++i) {
		dp[i][0] = 1;
	}
	for (int i = 1; i <= a; ++i) {
		for (int j = 1; j <= b; ++j) {
			if (i > j) {
				Add(dp[i][j], dp[i - 1][j]);
				Add(dp[i][j], dp[i][j - 1]);
			}
		}
	}

	return dp[a][b];
}

int Stressful(int a, int b) {
	memset(dp, 0, sizeof dp);
	for (int i = 0; i <= b; ++i) {
		dp[0][i] = 1;
	}
	for (int i = 1; i <= b; ++i) {
		for (int j = 0; j <= b; ++j) {
			if (i <= j) {
				if (j) {
					Add(dp[i][j], dp[i][j - 1]);
				}
				Add(dp[i][j], dp[i - 1][j]);
			}
		}
	}

	return dp[b][b];
}

int Run() {
	int T, a, b;
	char hyphen;

	cin >> T;
	for (int cas = 1; cas <= T; ++cas) {
		cin >> a >> hyphen >> b;
		cerr << a << ' ' << b << endl;
		cout << "Case #" << cas << ": " << StressFree(a, b) << ' ' << Stressful(a, b) << endl;
	}

	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	return Run();
}
