import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


public class Main {
	
	private static final int MOD = 1000000007;
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		
		int tests = Integer.valueOf(reader.readLine());
		
		for (int i=0; i<tests; ++i) {
			System.out.println("Case #" + (i+1) + ": " + solve(reader));
		}
	}
	
	private static String solve(BufferedReader reader) throws IOException {
		String[] scores = reader.readLine().split("-");
		int a = Integer.valueOf(scores[0]);
		int b = Integer.valueOf(scores[1]);
		
		return getStressfree(a, b) + " " + getStressfull(a, b);
	}
	
	private static int getStressfree(int a, int b) {
		if (a == 0) {
			return 1;
		}
		
		int[][] m = new int[a+1][b+1];
		m[0][0] = 1;
		m[1][0] = 1;
		
		for (int i=0; i<=a; ++i) {
			for (int j=0; j<i && j <= b; ++j) {
				if (m[i][j] != 0) {
					continue;
				}
				if (i > 0) {
					m[i][j] += m[i-1][j]; 
				}
				if (j > 0) {
					m[i][j] += m[i][j-1];
				}
				m[i][j] %= MOD;
			}
		}
		
		return m[a][b];
	}
	
	private static int getStressfull(int a, int b) {
		
		int[][] m = new int[a+1][b+1];
		m[0][0] = 1;
		
		for (int j=0; j<=b; ++j) {
			for (int i=0; (i<=j || j == b) && i<=a; ++i) {
				if (i > 0) {
					m[i][j] += m[i-1][j]; 
				}
				if (j > 0) {
					m[i][j] += m[i][j-1];
				}
				m[i][j] %= MOD;
			}
		}
		
		return m[a][b];
	}


	/* (non-Java-doc)
	 * @see java.lang.Object#Object()
	 */
	public Main() {
		super();
	}

}
 