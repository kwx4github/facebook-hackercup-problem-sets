#define PRETEST
#include <iostream>
#include <stdio.h>
#include <string>
#include <string.h>
#include <math.h>
#include <algorithm>
#include <map>
#include <vector>
#include <queue>
#include <stdlib.h>

using namespace std;

const int INF = 0x7fffffff;
const int BIG = 0x4f4f4f4f;
const int MOD = 1000000007;
const int MAXSCORE = 2000;

long long dp1[MAXSCORE + 1][MAXSCORE + 1];
long long dp2[MAXSCORE + 1][MAXSCORE + 1];

void solver() {
  dp1[1][0] = 1;
  for (int i = 2; i <= MAXSCORE; ++i) {
    dp1[i][0] = 1;
    for (int j = 1; j < i; ++j) {
      dp1[i][j] = (dp1[i - 1][j] + dp1[i][j - 1]) % MOD;
    }
  }
  for (int i = 0; i <= MAXSCORE; ++i) {
    dp2[0][i] = 1;
  }
  for (int i = 1; i <= MAXSCORE; ++i) {
    dp2[i][i] = dp2[i - 1][i];
    for (int j = i + 1; j <= MAXSCORE; ++j) {
      dp2[i][j] = (dp2[i - 1][j] + dp2[i][j - 1]) % MOD;
    }
  }
}

int main() {
#ifdef PRETEST
  freopen("c.txt", "r", stdin);
  freopen("out.txt", "w+", stdout);
#endif
  solver();
  int T;
  scanf("%d", &T);
  for (int Case = 1; Case <= T; ++Case) {
    int a, b;
    scanf("%d-%d", &a, &b);
    long long ans1 = dp1[a][b];
    long long ans2 = dp2[b][b];
    printf("Case #%d: %lld %lld\n", Case, ans1, ans2);
  }
  return 0;
}
