
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
unsigned long long int catalan[2001];
unsigned long long int dp[2001][2001];
 
unsigned long long calcatalan(unsigned int n)
{	int i,j;
     catalan[0] = catalan[1] = 1;
 
    for (i=2; i<=n; i++)
    {
        catalan[i] = 0;
        for (j=0; j<i; j++)
		{catalan[i] += (catalan[j] * catalan[i-j-1])%1000000007;
		catalan[i]=catalan[i]%1000000007;}
		
    }
   return catalan[n];
}

unsigned long long calDP(unsigned int n)
{	int i,j;
    for (i=0; i<=n; i++)
    {	
		
        for (j=0; j<=i; j++)
		if (j==0){
		dp[i][j]=1;}else{
		if (j==1)	{
			dp[i][j] = i-1;
		} else{
		if (i<=j || i==0){
				dp[i][j]=0;
			}else{
            dp[i][j] += ((dp[i-1][j] + dp[i][j-1])%1000000007);}
}}}
    return dp[n][n];
}

int main() {
	
 unsigned int i,j,t,k,l,m,n;
 unsigned int sum,added;
 calcatalan(2000);
 calDP(2000);
 scanf("%d",&t);
 for (i =0;i<t;i++){
	
	 scanf("%u-%u",&m,&n);
	 
	
printf("Case #%d: %lld %lld\n",i+1,dp[m][n],catalan[n]); 
 }
}


