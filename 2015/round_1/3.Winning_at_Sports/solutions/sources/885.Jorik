#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cmath>
#include <string>

using namespace std;

long long modd=1000000007;

int main()
{
    freopen("winning_at_sports.in", "r", stdin);
    freopen("winning_at_sports.out", "w", stdout);
    vector< vector<int> > stress_free(2001, vector<int>(2001, 0)); //stress_free[i][j] = ways to form it when your score is i and his score is j.

    for(int i=1; i<=2000; i++)
    {
        stress_free[i][0] = 1;
    }

    for(int i=1; i<=2000; i++)
    {
        for(int j=1; j<=2000; j++)
        {
            if(i>j+1)
            {
                  stress_free[i][j] = (stress_free[i][j]+stress_free[i-1][j])%modd;
            }
            if(i>j)
            {
                stress_free[i][j] = (stress_free[i][j]+stress_free[i][j-1])%modd;
            }
        }
    }

    vector< vector<int> > stress_full(2001, vector<int>(2001, 0));
    for(int i=1; i<=2000; i++)
    {
        stress_full[i][0] = 1;
        stress_full[0][i] = 1;
    }
    for(int i=1; i<=2000; i++)
    {
        for(int j=1; j<=2000; j++)
        {
            if(i>=j)
            {
                stress_full[i][j] = (stress_full[i][j]+stress_full[i-1][j])%modd;
            }
            else
            {
                stress_full[i][j] = (stress_full[i][j]+stress_full[i-1][j])%modd;
                stress_full[i][j] = (stress_full[i][j]+stress_full[i][j-1])%modd;
            }
        }
    }



    int tc;
    scanf("%d", &tc);
    for(int kras=1; kras<=tc; kras++)
    {
        string s;
        cin >> s;
        int streepje = 0;
        for(int i=0; i<s.size(); i++)
        {
            if(s[i] == '-')
            {
                streepje = i;
                break;
            }
        }
        int n1 = atoi(s.substr(0, streepje).c_str());
        int n2 = atoi(s.substr(streepje+1, ((int)s.size())-(streepje+1)).c_str());
        printf("Case #%d: %d %d\n", kras, stress_free[n1][n2], stress_full[n1][n2]);
    }
    return 0;
}
