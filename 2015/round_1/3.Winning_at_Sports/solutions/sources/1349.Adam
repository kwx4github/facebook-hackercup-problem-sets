#include <cstdio>
#include <cstring>

const int n = 2000, Mod = 1000000007;

int dp1[n + 1][n + 1], dp2[n + 1][n + 1];
char in[10];

int main()
{
    for (int i=0; i<=n; i++)
        dp1[i][0] = dp2[i][0] = 1;

    for (int i=2; i<=n; i++)
        for (int j=1; j<i; j++)
            dp1[i][j] = (dp1[i - 1][j] + dp1[i][j - 1]) % Mod;

    for (int i=1; i<=n; i++)
        for (int j=1; j<=i; j++)
            dp2[i][j] = (dp2[i - 1][j] + dp2[i][j - 1]) % Mod;

    int q;
    scanf ("%d", &q);

    getchar();

    for (int t=1; t<=q; t++)
    {
        scanf ("%s", in);

        int a = 0, b = 0, length = strlen(in);
        bool hyphenOccured = 0;

        for (int i=0; i<length; i++)
        {
            if (in[i] == '-')
            {
                hyphenOccured = 1;
                continue;
            }

            int& c = hyphenOccured ? b : a;

            c *= 10;
            c += (in[i] - '0');
        }

        printf("Case #%d: %d %d\n", t, dp1[a][b], dp2[b][b]);
    }

    return 0;
}
