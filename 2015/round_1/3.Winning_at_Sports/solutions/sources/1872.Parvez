/* Supto
   Dept. Of CSE
   University Of Dhaka
*/
//#include<bits/stdc++.h>
#include <cstdio>
#include <sstream>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <iostream>
#include <fstream>
#include <numeric>
#include <string>
#include <vector>
#include <cstring>
#include <map>
#include <iterator>

#define pb push_back
#define ins insert
#define ff first
#define ss second
#define ll long long int
#define llu long long unsigned
#define sss stringstream
#define oss ostringstream
#define iss istringstream
#define pii pair<int,int>
#define _sq(x) ((x)*(x))
#define lcm(a,b) ((a)*((b)/gcd(a,b)))
#define mem(a) memset(a,0,sizeof(a))
#define _set(a) memset(a,-1,sizeof(a))
#define popcount(n) __builtin_popcount(n)
#define popcountl(n) __builtin_popcountll(n)
#define ctz(x) __builtin_ctz(x) //number of trailing zeroes in a digit
#define ctzl(x) __builtin_ctzll(x)
#define clz(x) __builtin_clz(x)
#define clzl(x) __builtin_clzll(x) //number of leading zeroes in a digit
//If Long Long (mask & (1LL << k))
#define check(mask, k) (mask & (1 << k))
#define set1(mask, k) (mask | (1 << k))
#define set0(mask ,k) (mask & (~(1<<k)))
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

using namespace std;
#define pi acos(-1.0)
#define inf (1<<30)
#define eps 1e-9
#define MAX 1000005
#define MAXL 15

//const ll mod = 1000003;
//int dx[] = {0,0,1,-1};
//int dy[] = {1,-1,0,0};
//int dx[] = {-1,-1,-1,0,0,1,1,1};
//int dy[] = {-1,0,1,-1,1,-1,0,1};
const ll mod = 1000000007;
ll dp[2005][2005], dp1[2005][2005];
int first, second;
ll stressFree(int i, int j)
{
    if(i == first && j == second) return 1LL;
    if(i > first || j > second) return 0LL;
    if(~dp[i][j]) return dp[i][j];
    ll ret = stressFree(i+1, j) % mod;
    if(j+1 < i) ret = (ret + stressFree(i, j+1)) % mod;
    return dp[i][j] = ret;
}
ll stressFull(int i, int j)
{
    if(j == second) return 1LL;
    if(j > second) return 0LL;
    if(~dp1[i][j]) return dp1[i][j];
    ll ret = stressFull(i, j+1) % mod;
    if(i+1 <= j) ret = (ret + stressFull(i+1, j)) % mod;
    return dp1[i][j] = ret;
}
int main()
{
    READ("winning_at_sports.txt");
    WRITE("output.txt");
    //ios_base::sync_with_stdio(false);
    int ncase, tcase = 1;
    scanf("%d", &ncase);
    while(ncase--)
    {
        scanf("%d-%d", &first, &second);
        _set(dp);
        _set(dp1);
        printf("Case #%d: %lld %lld\n", tcase++, stressFree(1, 0), stressFull(0, 0));
    }
    return 0;
}
