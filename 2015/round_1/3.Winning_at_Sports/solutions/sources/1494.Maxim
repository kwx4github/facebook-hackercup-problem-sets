#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <sstream>
#include <string>
#include <map>
#include <set>
#include <algorithm>
#include <iomanip>
#include <functional>
#include <bitset>
#include <cassert>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <memory.h>
#include <complex>
#include <numeric>
using namespace std;
#pragma comment(linker, "/STACK:256000000")
#define mp make_pair
#define pb push_back
#define all(C) (C).begin(), (C).end()
#define sz(C) (int)(C).size()
#define PRIME 1103
#define PRIME1 31415
#define INF ((1ll << 30) - 1)
// #define INF 1e20
#define MOD 1000000007
#define FAIL ++*(int*)0
#define EPS 1e-8
#define IT 10000
template<class T> T sqr(T a) {return a * a;}
typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pi64;
typedef pair<int, pii> piii;
typedef vector<int> vi;
typedef vector<int64> vi64;
typedef vector<vi64> vvi64;
typedef vector<pi64> vpi64;
typedef vector<vpi64 > vvpi64;
typedef vector<pii> vpii;
typedef vector<vector<int> > vvi;
typedef vector<vvi> vvvi;
typedef vector<vector<pair<int, int > > > vvpii;
typedef vector<vector<vector<pair<int, int > > > > vvvpii;
typedef complex<double> cd;
#define TASK "test"
//------------------------------------------------------------


const int MAXN = 2001;
int n, m;
int dp1[MAXN][MAXN];

int rec1(int x, int y) // stress-free
{
    if(x == n && y == m)
        return 1;

    if(x > n || y > m || x <= y)
        return 0;

    if(dp1[x][y] != -1)
        return dp1[x][y];

    return dp1[x][y] = (rec1(x + 1, y) + rec1(x, y + 1)) % MOD;
}

int dp2[MAXN][MAXN];

int rec2(int x, int y) // stressfull
{
    if(x == n && y == m)
        return 1;

    if(x > n || y > m || (x > y && y != m))
        return 0;

    if(dp2[x][y] != -1)
        return dp2[x][y];

    return dp2[x][y] = (rec2(x + 1, y) + rec2(x, y + 1)) % MOD;
}

int main()
{
#ifdef __APPLE__
    freopen(TASK ".in", "r", stdin);
    freopen(TASK ".out", "w", stdout);
#endif
    int test;
    scanf("%d", &test);

    for(int t = 1; t <= test; ++t)
    {
        memset(dp1, -1, sizeof dp1);
        memset(dp2, -1, sizeof dp2);

        string s;
        cin >> s;
        n = 0, m = 0;

        int i = 0;
        while(s[i] != '-')
        {
            n = n * 10 + s[i] - '0';
            ++i;
        }

        ++i;

        while(i < s.length())
        {
            m = m * 10 + s[i] - '0';
            ++i;
        }

        printf("Case #%d: %d %d\n", t, rec1(1, 0), rec2(0, 0));
    }

    return 0;
}




