#include <bits/stdc++.h>
using namespace std;
#define int long long
const int MOD = 1e9+7;
int dp[2020][2020], dp2[2020][2020], MY, HIS;

//my my<=his till his == HIS
int stressfull(int my, int his)
{
	if(my == MY)	{
		return 1;
	}
	int & ret = dp[my][his];
	if(~ret)	{
		return ret;
	}
	ret = 0;
	if(my + 1 <= his or his == HIS)	{
		ret += stressfull(my + 1, his);
	}
	if(his < HIS)	{
		ret += stressfull(my, his + 1);
	}
	if(ret >= MOD)	{
		ret -= MOD;
	}
	return ret;
}

//my my>his till end
int stressfree(int my, int his)
{
	if(my == MY)	{
		return 1;
	}
	int & ret = dp2[my][his];
	if(~ret)	{
		return ret;
	}
	ret = 0;
	ret += stressfree(my + 1, his);
	
	if(his < HIS and his + 1 < my)	{
		ret += stressfree(my, his + 1);
	}
	if(ret >= MOD)	{
		ret -= MOD;
	}
	return ret;
}

template<class T>
void splitstr(const string &s, vector<T> &out)
{
    istringstream in(s);
    out.clear();
    copy(istream_iterator<T>(in), istream_iterator<T>(), back_inserter(out));
}

#undef int
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	freopen("cin.txt", "r", stdin);
	freopen("cout.txt", "w", stdout);
	#define int long long
	int t; cin >> t;
	for(int i=1; i<=t; i++)	{
		cout << "Case #" << i << ": ";
		memset(dp, -1, sizeof dp);
		memset(dp2, -1, sizeof dp2);
		string s; cin >> s;
		for(int i=0; i<s.size(); i++)	{
			if(s[i] == '-')	{
				s[i] = ' ';
			}
		}
		vector<int> temp;
		splitstr(s, temp);
		MY = temp[0], HIS = temp[1];
		cout << stressfree(0, 0) << " " << stressfull(0, 0) << "\n";
	}
}
