///ROHIT PATIYAL///

#include <iostream>
#include <cstdio>	//for printf and scanf (faster io)
#include <cmath> 	//for logl2() and pow etc math functions
#include <algorithm>	//for sort and other algorithms
#include <vector> 	//for vectors(resizable arrays)
#include <cstring>	//for memset
#include <cstdlib>
#include <queue>
#include <stack>
#include <set>
#include <map>				
using namespace std;

#define lli long long int
#define ull unsigned long long	//(0 - 18446744073709551615) ie (0 - 10^19) 	int - 0 to 4294967295 ie (0 - 10^9)
#define rep(i,b) for(i=0;i<b;i++)
#define repe(i,b) for(i=0;i<=b;i++)
#define repab(i,a,b) for(i=a;i<b;i++)
#define repabe(i,a,b) for(i=a;i<=b;i++)
#define printArray(a,size) for(lli o=0;o<size;o++){cout<<a[o]<<endl;};

#define MAX 2005
#define INF 1000000007

lli	 freeways[MAX][MAX];
lli	 fullways[MAX][MAX];

void precomputefree(){
	int i, j;
	rep(i, MAX){
		rep(j, MAX){
			freeways[i][j] = 0;
		}
	}
	freeways[1][0] = 1;

	rep(i, MAX){
		rep(j, MAX){
			if(i>j){
				if((i-1)>j)
					freeways[i][j] = freeways[i-1][j];
				if((j-1)>=0)
					freeways[i][j] += freeways[i][j-1];
				freeways[i][j] %= INF;
			}
			
		}
	}

	// rep(i, MAX){
	// 	rep(j, MAX){
	// 		cout<<freeways[i][j]<<" ";
	// 	}
	// 	cout<<endl;
	// }
}

void precomputefull(){
	int i, j;
	rep(i, MAX){
		rep(j, MAX){
			fullways[i][j] = 0;
		}
	}
	fullways[0][0] = 1;
	rep(i, MAX){
		rep(j, MAX){
			if(i<=j){
				if((i-1)>=0)
					fullways[i][j] = fullways[i-1][j];
				if((j-1)>=i)
					fullways[i][j] += fullways[i][j-1];
				fullways[i][j] %= INF;
			}
		}
	}
	// rep(i, MAX){
	// 	rep(j, MAX){
	// 		cout<<fullways[i][j]<<" ";
	// 	}
	// 	cout<<endl;
	// }
	
}

void precompute(){
	precomputefree();
	precomputefull();
}


lli getfree(int a, int b){
	if(a>b)
		return freeways[a][b];
	else
		return 0;
}
lli getfull(int a, int b){
	if(a>b)
		return fullways[b][b];
	else
		return 0;
}


//max stack size allowed is 10^8
int main(){
	//max stack size allowed is 10^6
	lli t, T;
	
	precompute();

	scanf("%lld", &T);
	rep(t, T){
		int a, b;
		scanf("%d-%d",&a,&b);

		lli fre = getfree(a,b);
		lli full = getfull(a,b);
		printf("Case #%lld: %lld %lld\n",(t+1),fre, full);
	}
	return 0;
} 
