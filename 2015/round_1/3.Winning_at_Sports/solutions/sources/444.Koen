#include <iostream>
#include <string>
#include <cstdlib>

#define MOD 1000000007

long long sfr[2002][2002];
long long sfu[2002][2002][2];

long long solver(int a, int b){
	if(a <= b || b < 0) return 0;
	else if(a == 1) return 1;
	else if(sfr[a][b] != -1) return sfr[a][b];
	sfr[a][b] = 0;
	sfr[a][b] += solver(a-1, b);
	sfr[a][b] %= MOD;
	sfr[a][b] += solver(a, b-1);
	sfr[a][b] %= MOD;
	return sfr[a][b];
}

long long solveu(int a, int b, bool m){
	if(a < 0 || b < 0 || (m == false && a > b)) return 0;
	else if(a == 0 && b == 0 && m == false) return 1;
	else if(sfu[a][b][m] != -1) return sfu[a][b][m];
	sfu[a][b][m] = 0;
	if(m){
		sfu[a][b][m] += solveu(a-1, b, true);
		sfu[a][b][m] %= MOD;
		if(a==b) {
			sfu[a][b][m] += solveu(a, b, false);
			sfu[a][b][m] %= MOD;
		}
	}else{
		sfu[a][b][m] += solveu(a-1, b, false);
		sfu[a][b][m] %= MOD;
		sfu[a][b][m] += solveu(a, b-1, false);
		sfu[a][b][m] %= MOD;
	}
	return sfu[a][b][m];
}

int main(){
	int T;
	std::cin >> T;
	
	for(int i=0; i<2002; ++i){
		for(int j=0; j<2002; ++j){
			sfr[i][j] = sfu[i][j][0] = sfu[i][j][1] = -1;
		}
	}
	for(int p=1; p<=T; ++p){
		std::string s;
		std::cin >> s;
		int k = s.find('-');
		int a = atoi(s.substr(0, k).c_str());
		int b = atoi(s.substr(k+1).c_str());
		std::cout << "Case #" << p << ": " << solver(a, b) << " " << solveu(a, b, true) << std::endl;
	}
}