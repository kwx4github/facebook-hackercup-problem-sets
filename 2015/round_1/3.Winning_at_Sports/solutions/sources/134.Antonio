#include <bits/stdc++.h>

using namespace std;

#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define mt make_tuple
#define eb emplace_back

#define foreach(v,c) for(typeof((c).begin()) v = (c).begin(); v!=(c).end(); ++v)
#define all(c) (c).begin(), (c).end()
#define REP(i,n) for(int i=0; i<n; i++)
#define F(i,L,R) for(int i=L; i<R; i++)

#define printA(a,L,R) F(puf,L,R) cout << a[puf] << (puf==(R-1)?'\n':' ')
#define prinvV(a) printA(a,0,a.size())
#define dbg(x) cerr << #x << " = " << x << endl;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

typedef pair<int,int> ii;
typedef pair<int, ii> iii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<iii> viii;
typedef vector<ld> vld;

#define PI 3.1415926535897932384626
#define INF 2001000009
#define EPS 1e-8
#define MAXN 2048
#define MOD 1000000007

int T;
int sfree[MAXN][MAXN], sful[MAXN][MAXN];

int getsfree(int i, int j) {
  if (i<=j) return 0;
  if (sfree[i][j]!=-1) return sfree[i][j];
  if (i-1==j) return (sfree[i][j] = getsfree(i,j-1));
  return (sfree[i][j] = (getsfree(i-1,j) + getsfree(i,j-1))%MOD);
}

int getsful(int i, int j) {
  if (i>j) return 0;
  if (sful[i][j]!=-1) return sful[i][j];
  if (i==j) return (sful[i][j] = getsful(i-1,j));
  return (sful[i][j] = (getsful(i-1,j) + getsful(i,j-1))%MOD);
}

int main() { ios_base::sync_with_stdio(0); cin.tie(0);

  REP(i,MAXN) REP(j,MAXN) sfree[i][j] = sful[i][j] = -1;
  REP(i,MAXN) sfree[i][0] = sful[0][i] = 1;
  REP(i,MAXN) sfree[0][i] = sful[i][0] = 0;
  sfree[0][0]=0;
  sful[0][0]=1;

  cin >> T;
  F(zz,1,T+1) {

    string s;
    cin >> s;
    int i,j;
    for (int k = 0; k<s.size(); k++)
      if (s[k]=='-') s[k]=' ';
    stringstream ss; ss << s;
    ss >> i >> j;





    cout << "Case #" << zz << ": ";

    cout << getsfree(i,j);
    cout << " ";
    cout << getsful(j,j);

    cout << endl;
  }
}
