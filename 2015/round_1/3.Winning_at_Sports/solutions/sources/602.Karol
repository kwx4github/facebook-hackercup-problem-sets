//Karol Kaszuba
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <unordered_map>
#include <unordered_set>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef double D;
typedef long double LD;
typedef vector<PII> VII;

#define FOR(i,x,y) for(auto i=(x);i<=(y);++i)
#define REP(i,x) FOR(i,0,(x)-1)
#define FORD(i,x,y) for(auto i=(x);i>=(y);--i)
#define VAR(i,c) __typeof(c) i=(c)
#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)

#define SIZE(c) (int)((c).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define IN insert
#define ER erase
#define MP make_pair
#define ST first
#define ND second
#define IOSYNC ios_base::sync_with_stdio(0)

const LL mod = 1000000007;
LL les[2100][2100], ful[2100][2100];

PII stp(string s)
{
	int n = SIZE(s);
	int pos = 0;
	int xx[2];
	REP(i, 2)
	{
		int a = 0;
		while(pos < n && s[pos] != '-')
		{
			a *= 10;
			a += (s[pos] - '0');
			pos++;
		}
		pos++;
		xx[i] = a;
	}
	return MP(xx[0], xx[1]);
}

PII jebaj()
{
	string s;
	cin >> s;
	PII p = stp(s);
	return MP(ful[p.ND + 1][p.ST], ful[p.ND + 1][p.ND + 1]);
}

void prepro()
{
	int N = 2050;
	les[1][1] = 1;
	FOR(i, 1, N)
	{
		FOR(j, i + 1, N)
		{
			les[i][j] = (les[i - 1][j] + les[i][j - 1]) % mod;
		}
	}
	ful[1][1] = 1;
	FOR(j, 2, N)
	{
		FOR(i, 1, j)
		{
			ful[i][j] = (ful[i - 1][j] + ful[i][j - 1]) % mod;
		}
	}
}

int main()
{
	prepro();
	IOSYNC;	
	int t;
	t = 1;
	cin >> t;
	
	REP(i, t) 
	{
		PII p = jebaj();
		cout << "Case #" << i + 1 << ": " << p.ST << " " << p.ND << "\n";
	}
}
