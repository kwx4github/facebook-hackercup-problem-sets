#include<stdio.h>
#define MOD 1000000007
#define maxi 2020

int dp1[maxi][maxi],dp2[maxi][maxi];

void prepare()
{
	memset(dp1,0,sizeof(dp1));
	dp1[1][0]=1;
	int i,j;
	for(i=1;i<(maxi+maxi-2);i++) {
		for(j=1+(i>>1);j<=i;j++) {
			int x=j,y=i-j;
			if(!(x<maxi-2 && y<maxi-2)) continue;
			if(x>y+1) { dp1[x][y+1]+=dp1[x][y]; if(dp1[x][y+1]>=MOD) dp1[x][y+1]-=MOD; }
			dp1[x+1][y]+=dp1[x][y]; if(dp1[x+1][y]>=MOD) dp1[x+1][y]-=MOD;
		}
	}
}

int solve1(int A,int B) { return dp1[A][B]; }

int solve2(int A,int B) {
	if(B==0) return 1;
	memset(dp2,0,sizeof(dp2));
	dp2[0][1]=1; int i,j;
	for(i=1;i<(maxi+maxi-2);i++) {
		for(j=0;j<=i;j++) {
			int x=j,y=i-j;
			if(!(x<maxi-2 && y<maxi-2 && y<B+2)) continue;
			if(y==B || x+1<=y) { dp2[x+1][y]+=dp2[x][y]; if(dp2[x+1][y]>=MOD) dp2[x+1][y]-=MOD; }
			if(y<B) { dp2[x][y+1]+=dp2[x][y]; if(dp2[x][y+1]>=MOD) dp2[x][y+1]-=MOD; }
		}
	}
	return dp2[A][B];
}

int main()
{
	prepare();
	int cas,T,A,B;
	scanf("%d",&T);
	for(cas=1;cas<=T;cas++) {
		scanf("%d-%d",&A,&B);
		printf("Case #%d: %d %d\n",cas,solve1(A,B),solve2(A,B));
	}
	return 0;
}