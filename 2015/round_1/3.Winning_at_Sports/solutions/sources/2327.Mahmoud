#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
using namespace std;


#define SZ(a) (int)a.size()
#define fr first
#define sc second
typedef long long ll;
#define vi vector<ll> 
#define MOD 1000000007
long str[2002][2002];
long str1[2002][2002];
int a, b;
void res() {
	for (int i = 0; i <= 2000; i++)
		for (int j = 0; j <= 2000; j++)
			str[i][j] = j == 0 ? 1 : 0;

	for (int i = 1; i <= 2000; i++) {
		for (int j = 1; j < i; j++) {
			str[i][j] = str[i - 1][j] % MOD + str[i][j - 1] % MOD;
			str[i][j] %= MOD;
		}
	}
}

void res2() {
	for (int i = 0; i <= 2000; i++)
		for (int j = 0; j <= 2000; j++)
			str1[i][j] = i == 0 ? 1 : 0;

	for (int i = 1; i <= a; i++)
	{
		if (i <= b)
			for (int j = i; j <= b; j++) {
				str1[i][j] = str1[i - 1][j] % MOD + str1[i][j - 1] % MOD;
				str1[i][j] %= MOD;
			}
		else {
			str1[i][b] = (str1[i - 1][b] % MOD + str1[i][b - 1] % MOD) % MOD;
		}
	}
}
int main() {
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	int t, cs;
	res();
	for (scanf("%d", &t), cs = 1; cs <= t; cs++) {
		scanf("%d-%d", &a, &b);
		res2(); 
		printf("Case #%d: %ld %ld\n", cs, str[a][b], str1[a][b]);
	}
}
/*
class TimeTicker {
private:
clock_t start, elapsed;
public:
TimeTicker() {
start = clock();
}
void print() {
printf("Time elapsed is %.6lf\n", (double)(clock() - start) / CLOCKS_PER_SEC);
}
};

int main(void) {
vector < pair<int, int> > a, b;
TimeTicker	aa;
for (int i = 0; i < 1000000; i++)
{
a.push_back({ i, i + 1 });
}
aa.print();
putchar('\n');
TimeTicker bb;
for (int i = 0; i < 1000000; i++)
{
a.emplace_back(i, i + 1);
}
bb.print();

system("pause");
return 0;
}
*/