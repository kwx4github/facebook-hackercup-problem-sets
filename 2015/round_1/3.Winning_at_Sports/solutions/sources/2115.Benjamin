#include <stdio.h>
typedef long long ll;

const int N = 2000;
const ll M = 1000000007;

ll dpF[N+1][N+1];

ll full(int y, int t) {
	if (y > t) return 0;
	if (y == 0) return 1;
	if (dpF[y][t] > 0) return dpF[y][t];
	dpF[y][t] = (full(y-1, t) + full(y, t-1)) % M;
	return dpF[y][t];
}
ll dpL[N+1][N+1];
ll less(int y, int t) {
	if (y <= t) return 0;
	if (t == 0) return 1;
	if (dpL[y][t] > 0) return dpL[y][t];
	dpL[y][t] = (less(y-1, t) + less(y, t-1)) % M;
	return dpL[y][t];
}

int main() {
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	int T;
	scanf("%d", &T);
	for (int t = 1 ; t <= T ; t++) {
		int A, B;
		scanf("%d-%d", &A, &B);
		printf("Case #%d: %lld %lld\n", t, less(A, B), full(B, B));
	}
	return 0;
}
