#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <algorithm>
#include <sstream>
#include <stack>
#include <cstring>
#include <iomanip>
#include <ctime>
using namespace std;
#define pb push_back
#define INF 1001001001
#define FOR(i,n) for(int (i)=0;(i)<(n);++(i))
#define FORI(i,n) for(int (i)=1;(i)<=(n);++(i))
#define mp make_pair
#define pii pair<int,int>
#define ll long long
#define vi vector<int>
#define SZ(x) ((int)((x).size()))
#define fi first
#define se second
#define wez(n) int (n); scanf("%d",&(n));
#define wez2(n,m) int (n),(m); scanf("%d %d",&(n),&(m));
#define wez3(n,m,k) int (n),(m),(k); scanf("%d %d %d",&(n),&(m),&(k));
inline void pisz(int n) { printf("%d\n",n); }
template<typename T,typename TT> ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream& operator<<(ostream &s,vector<T> t){FOR(i,SZ(t))s<<t[i]<<" ";return s; }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define ALL(t) t.begin(),t.end()
#define FOREACH(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define TESTS wez(testow)while(testow--)
#define REP(i,a,b) for(int (i)=(a);(i)<=(b);++i)
#define REPD(i,a,b) for(int (i)=(a); (i)>=(b);--i)
#define REMAX(a,b) (a)=max((a),(b));
#define REMIN(a,b) (a)=min((a),(b));
#define IOS ios_base::sync_with_stdio(0);

int dp1[4042][2042], dp2[4042][2042];
const int MOD = 1000000007;

void solve()
{
    string s;
    cin>>s;
    int x=0, y=0;
    bool after = 0;
    for(int i=0; i<s.length(); i++)
    {
        if(s[i] == '-'){after = 1; continue;}
        if(after)y = y*10 + (int)(s[i] - '0');
        else x = x*10 + (int)(s[i] - '0');
    }
    //cout<<x<<" "<<y<<endl;
    int diff = x - y, n = x + y;
    //cout<<"diff "<<diff<<" n "<<n<<endl;
    for(int i=0; i<=2000; i++)dp1[0][i]=0;
    dp1[0][diff] = 1;
    for(int k=1; k<=n; k++)
        for(int i=1; i<=2000; i++)
        {
            if(i==1)dp1[k][i] = dp1[k-1][i+1];
            else dp1[k][i] = (dp1[k-1][i-1] + dp1[k-1][i+1]) % MOD;
        }

    for(int i=0; i<=2000; i++)dp1[0][i]=0;
    for(int k=1; k<=n; k++)
        for(int i=0; i<=2000; i++)
        {
            dp2[k][i] = dp2[k-1][i+1];
            if(i == 0 && k == diff)dp2[k][i] += 1;
            else dp2[k][i] += dp2[k-1][i-1];
            dp2[k][i] = dp2[k][i] % MOD;
        }

    cout<<dp1[n-1][1]<<" "<<dp2[n][0]<<"\n";
}

int main()
{
    IOS
    int t;
    cin>>t;
    for(int i=1; i<=t; i++)
    {
        cout<<"Case #"<<i<<": ";
        solve();
    }
    return 0;
}
