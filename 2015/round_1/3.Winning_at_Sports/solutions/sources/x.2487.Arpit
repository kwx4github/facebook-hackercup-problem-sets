#include <bits/stdc++.h>
using namespace std ;


#define MAXN 2001
#define LL long long
#define MOD 1000000007

int DP[2][MAXN][MAXN] ;
int T,A,B ;

int solve1(int N,int M,int f = 0){

    if(N <= M)
        return 0 ;
    if(M == 0)
        return 1 ;
    int &ret = DP[f][N][M] ;
    if(ret != -1){
        return DP[f][N][M] ;
    }
    ret = 0 ;
    ret = ( solve1(N,M-1,f) + solve1(N-1,M,f) ) ;
    ret %= MOD ;
    return ret ;
}

int solve2(int N,int M,int f = 1){

    if(N > M)
        return 0 ;
    if(M == 0 && N == 0)
        return 0 ;
    if(N == 0)
        return 1 ;
    int &ret = DP[f][N][M] ;
    if(ret != -1){
        return DP[f][N][M] ;
    }
    ret = 0 ;
    ret = ( solve2(N,M-1,f) + solve2(N-1,M,f) ) ;
    ret %= MOD ;
    return ret ;
}


int main(){
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);

    scanf("%d",&T) ;
    memset(DP,-1,sizeof DP) ;
    for(int t=1;t<=T;t++){
        scanf("%d-%d",&A,&B) ;
        printf("Case #%d: %d %d\n",t,solve1(A,B),solve2(B,B)) ;
    }
    return 0 ;
}
