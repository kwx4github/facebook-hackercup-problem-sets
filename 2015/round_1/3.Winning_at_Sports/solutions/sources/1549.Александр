{$o-}
uses
  math;
 
var
  dp: array[-1 .. 3000, -1 .. 3000] of longint;
  t, a, b, i, j: longint;
  c: char;
 
function get1(a, b: longint): longint;
begin
  if (a <= b) or (a = 0) or (b < 0) then
    exit(0);
  if (dp[a][b] > 0) then
    exit(dp[a][b]);
  dp[a][b] := get1(a - 1, b) + get1(a, b - 1);
  dp[a][b] := dp[a][b] mod 1000000007;
  exit(dp[a][b]);
end;
 
function get2(a, b: longint): longint;
begin
  if (b < 0) or (a < 0) then
    exit(0);
  if dp[a][b] > 0 then
    exit(dp[a][b]);
  if a = b then
    dp[a][b] := get2(a - 1, b)
  else
    dp[a][b] := get2(a - 1, b) + get2(a, b - 1);
  dp[a][b] := dp[a][b] mod 1000000007;
  exit(dp[a][b]);
end;
 
begin
  readln(t);
  dp[0, 0] := 1;
  dp[1, 0] := 1;
  for i := 1 to t do
    begin
      a := 0;
      read(c);
      while c <> '-' do
        begin
          if (c >= '0') and (c <= '9') then
            a := a * 10 + ord(c) - ord('0');
          read(c);
        end;
      readln(b);
      writeln('Case #', i, ': ', get1(a, b), ' ', get2(min(a, b), b));
    end;
  {get2(2, 2);
  for i := 0 to 3 do
    begin
      for j := 0 to 3 do
        write(dp[i][j]:5);
      writeln;
    end;}
end.