#include <bits/stdc++.h>

#define INF 1000000010
#define FO(i,a,b) for (int (i) = (a); (i) < (b); ++(i))

using namespace std;
//PAIRS:
#define mp make_pair
#define fi first
#define se second
typedef pair<int,int> pii;

/*~~~~TEMPLATE END~~~~*/

#define MAX_S 2005
#define MOD_N 1000000007

int mAdd (int _a, int _b) {
    return (_a+_b) % MOD_N;
}

int T, fSc, sSc;

int dp[2][MAX_S][MAX_S];

int main() {
    freopen ("q3.in", "r", stdin);
    freopen ("q3.out", "w", stdout);
    scanf ("%d", &T);
    FO (_z,0,T) {
        printf ("Case #%d: ", _z+1);
        char wst;
        scanf ("%d%c%d", &fSc, &wst, &sSc);
        if (sSc == 0) {
            printf ("%d %d\n", 1, 1);
            continue;
        }
        FO (i,1,fSc+1) dp[0][i][0] = 1;
        FO (i,1,sSc+1) dp[1][0][i] = 1;
        FO (i,1,fSc+1) {
            FO (p,1,sSc+1) {
                if (i > p) {
                    dp[0][i][p] = mAdd (dp[0][i-1][p], dp[0][i][p-1]);
                }
                if (i <= p || p == sSc) {
                    dp[1][i][p] = mAdd (dp[1][i-1][p], dp[1][i][p-1]);
                }
                assert (dp[0][i][p] < MOD_N);
                assert (dp[1][i][p] < MOD_N);
                assert (dp[0][i][p] >= 0);
                assert (dp[1][i][p] >= 0);
            }
        }
        printf ("%d %d\n", dp[0][fSc][sSc], dp[1][fSc][sSc]);
        FO (i,0,fSc+1) {
            FO (p,0,sSc+1) {
                dp[0][i][p] = dp[1][i][p] = 0;
            }
        }
    }
    return 0;
}




