#include <algorithm>
#include <numeric>
#include <functional>

#include <iostream>
#include <iomanip>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <unordered_set>
#include <unordered_map>

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cassert>

#include <cmath>
#include <complex>
#include <ctime>
using namespace std;

#define debug(x) cerr<<#x<<" = "<<(x)<<endl;

long long mod = 1000000007;


long long fa(int a, int b){
  if(a<=b) return 0;
  vector<vector<long long> > dp (a+1, vector <long long>(b+1, 0));
  if(a==0){
  }else{
    for(int i = 1 ; i <= a; i++){
      dp[i][0]=1;
    }

    for(int i=1; i<=a;i++){
      for(int j=1;j<i && j<=b;j++){
        dp[i][j] = dp[i][j-1];
        if(i-1>j)
          dp[i][j] += dp[i-1][j];
        dp[i][j] %= mod;
      }
    }
  }
  return dp[a][b];
}


long long fb(int a, int b){
  if(a<=b) return 0;
  if(b==0) return 1;
  a=b;
  vector<vector<long long> > dp (a+1, vector <long long>(b+1, 0));
  for(int i=1;i<=b;i++){
    dp[0][i] = 1;
  }

  for(int j=1;j<=b;j++){
    for(int i=1;i<=j;i++){
      dp[i][j] = (i-1<=j) * dp[i-1][j] + (i<=j-1) * dp[i][j-1];
      dp[i][j] %= mod;
    }
  }
  return dp[b][b];
}

void solve(int cse){
  int a, b;cin>>a>>b;
  b=abs(b);
  cout<<"Case #"<<cse<<": "<<fa(a, b)<<" "<<fb(a,b)<<endl;
}

int main(int argc, char *argv[])
{
  int t;cin>>t;
  for(int i = 0 ; i < t; i++){
    solve(i+1);
  }

  return 0;
}
