#include <iostream>
#include <stdio.h>
#include <vector>
#include <map>
#include <list>
#include <string>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <queue>

using namespace std;

#define fore(i, l, r) for(int i = l; i < r; i++)
#define forn(i, n) fore(i, 0, n)
#define pb push_back
#define mp make_pair
#define x first
#define y second
#define mod(a, b) if (a >= b) a -= b;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef long long ll;
typedef vector<pii> vpii;
typedef vector<ll> vll;

int M = 1000000007;

int main(){
  int t;
  scanf("%d", &t);
  forn(cs, t){
    int n, m;
    scanf("%d-%d", &n, &m);
    int *arr = new int[(n + 1) * (m + 1)];
    
    forn(i, n + 1) forn(j, m + 1) arr[i * (m + 1) + j] = 0;
    arr[0 * (m + 1) + 0] = 1;
    
    forn(i, n + 1){
      forn(j, i){
	if (j <= m){
	  if (i > 0) arr[i * (m + 1) + j] += arr[(i - 1) * (m + 1) + j];
	  mod(arr[i * (m + 1) + j], M);
	  if (j > 0) arr[i * (m + 1) + j] += arr[i * (m + 1) + j - 1];
	  mod(arr[i * (m + 1) + j], M);
	}
      }
    }
    
    int ans1 = arr[n * (m + 1) + m];
    forn(i, n + 1) forn(j, m + 1) arr[i * (m + 1) + j] = 0;
    arr[0 * (m + 1) + 0] = 1;
    forn(i, n + 1){
      fore(j, i, m + 1){
	if (i > 0) arr[i * (m + 1) + j] += arr[(i - 1) * (m + 1) + j]; 	  
	mod(arr[i * (m + 1) + j], M);
	if (j > 0) arr[i * (m + 1) + j] += arr[i * (m + 1) + j - 1];	  
	mod(arr[i * (m + 1) + j], M);
      }
    }
    
    int ans2 = arr[m * (m + 1) + m];
    delete[] arr;
    printf("Case #%d: %d %d\n", cs + 1, ans1, ans2);
  }
}
