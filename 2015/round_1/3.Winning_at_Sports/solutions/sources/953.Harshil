#include <iostream>
#include <string>
#include <vector>
#include <cstring>
#include <cstdlib>
using namespace std;
#define PR(x) cout << #x " = " << x << "\n";
typedef vector<int> VI; 
typedef vector<VI> VVI; 
typedef pair<int,int> II; 
#define SZ(a) int((a).size()) 
#define PB push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define FOR(i,n) for( int i =0 ; i < n ; i++ )
#define ll long long
#define FF first
#define SS second
#define MOD 1000000007

ll dp[2001][2001];
bool idp[2001][2001];

ll stressFree(int a, int b){
	if (b >= a || b < 0 || a <0 ) return 0;
	if (a == 1 && b == 0) return 1;
	if (idp[a][b]){
		return dp[a][b];
	}
	ll ans = 0;
	ans = (stressFree(a, b - 1) + stressFree(a-1,b))%MOD;
	dp[a][b] = ans;
	idp[a][b] = true;
	return ans;
}

ll stressFull(int a, int b){
	if (b > a || b < 0 || a <0) return 0;
	if (a == 1 && b == 0) return 1;
	if (idp[a][b]){
		return dp[a][b];
	}
	ll ans = 0;
	ans = (stressFree(a, b - 1) + stressFree(a - 1, b)) % MOD;
	dp[a][b] = ans;
	idp[a][b] = true;
	return ans;
}

int main(){

	 int T; cin>>T;
	 for (int Z = 1; Z <= T; ++Z)
	 {
		 int a, b;
		 char dummy_c;
		 cin >> a >> dummy_c >> b;
		 memset(idp, 0, sizeof(idp));
	 	cout<<"Case #"<<Z<<": "<<stressFree(a,b)<<" "<<stressFull(b+1,b)<<endl;
	 }
}