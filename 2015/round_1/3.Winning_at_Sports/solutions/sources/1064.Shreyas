#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;

const long long mod = 1000000007;
long long lookup[2001][2001];

long long stressfree(long long p, long long c) {
	if(lookup[p][c] != -1)
		return lookup[p][c]%mod;
	else {
		if(c == 0) {
			lookup[p][c] = 1;
			return lookup[p][c]%mod;
		}
		if(p-1 == c) {
			lookup[p][c] = stressfree(p, c-1);
			return lookup[p][c]%mod;
		}
		if(p-1 > c) {
			lookup[p][c] = stressfree(p-1, c) + stressfree(p, c-1);
			return lookup[p][c]%mod;
		}
	}
}

long long stressful(long long p, long long c) {
	if(lookup[p][c] != -1)
		return lookup[p][c]%mod;
	else {
		if(p == 0) {
			lookup[p][c] = 1;
			return lookup[p][c]%mod;
		}
		if(c <= p) {
			lookup[p][c] = stressful(p-1, c);
			return lookup[p][c]%mod;
		}
		if(c-1 >= p) {
			lookup[p][c] = stressful(p-1, c) + stressful(p, c-1);
			return lookup[p][c]%mod;
		}
	}
}

int main() {
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	long long t;
	cin >> t;
	for(long long ii = 0; ii < t; ii++) {
		cout << "Case #" << ii+1 << ": ";
		string score;
		cin >> score;
		long long p, c, i;
		p = 0;
		c = 0;
		for(i = 0; score[i] != '-'; i++) {
			p *= 10;
			long long r = (char)score[i]-'0';
			p += r;
		}
		for(i++; i < score.length(); i++) {
			c *= 10;
			long long r = (char)score[i]-'0';
			c += r;
		}
		
		for(long long i = 0; i < 2001; i++)
			for(long long j = 0; j < 2001; j++)
				lookup[i][j] = -1;
		cout << stressfree(p, c)%mod << " ";
		for(long long i = 0; i < 2001; i++)
			for(long long j = 0; j < 2001; j++)
				lookup[i][j] = -1;
		cout << stressful(p, c)%mod << endl;
	}
	return 0;
}