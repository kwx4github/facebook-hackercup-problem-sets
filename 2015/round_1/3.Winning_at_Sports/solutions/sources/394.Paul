#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

ll mod = 1000000007;
ll memo0[2005][2005], memo1[2005][2005];

//stress free dp
ll dp0(int a, int b) {
    if (memo0[a][b] != -1) return memo0[a][b];
    if (a == 0) return 1;
    
    ll res = 0;
    if (b > a+1) {
        res = (res + dp0(a, b-1))%mod;
    }
    res = (res + dp0(a-1, b))%mod;
    return memo0[a][b] = res;
}

//stress full dp
ll dp1(int a, int b) {
    if (memo1[a][b] != -1) return memo1[a][b];
    if (b == 0) return 1;
    
    ll res = 0;
    if (a-1 >= b) {
        res = (res + dp1(a-1, b))%mod;
    }
    res = (res + dp1(a, b-1))%mod;
    return memo1[a][b] = res;
}

int main() {
    memset(memo0, -1, sizeof memo0);
    memset(memo1, -1, sizeof memo1);
    int t; scanf("%d", &t);
    for (int ca = 1; ca <= t; ca++) {
        int a, b; scanf("%d-%d", &b, &a);
        
        
        cout << "Case #" << ca << ": " << dp0(a, b) << " " << dp1(a, a) << endl;
    }
	return 0;
}