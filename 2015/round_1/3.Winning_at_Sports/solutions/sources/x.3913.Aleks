#include <iostream>
#include <string>
#include <utility>
#include <queue>
using namespace std;

long long stressfree(int score1, int score2)
{
	long long ans = 0;
	pair<int, int>score(score1, score2);
	queue<pair<int, int>> q;
	q.push(score);
	while (!q.empty())
	{
		pair<int, int>cur = q.front();
		q.pop();

		if (cur.first > 1)
		{
			pair<int, int>cur1(cur.first - 1, cur.second);
			if (cur1.first == 1 && cur1.second == 0)
				ans++;
			else
			{
				if (cur1.first > cur1.second)
					q.push(cur1);
			}
		}

		if (cur.second > 0)
		{
			pair<int, int>cur2(cur.first, cur.second - 1);
			if (cur2.first == 1 && cur2.second == 0)
				ans++;
			else
				q.push(cur2);
		}
		ans %= 1000000007;
	}

	return ans;
}

long long stressful(int score1, int score2)
{
	long long ans = 0;
	pair<int, int>score(score1, score2);
	queue<pair<int, int>> q;
	q.push(score);
	while (!q.empty())
	{
		pair<int, int>cur = q.front();
		q.pop();

		if (cur.first > 0)
		{
			pair<int, int>cur1(cur.first - 1, cur.second);
			if (cur1.first == 0 && cur1.second == 0)
				ans++;
			else
				q.push(cur1);
		}

		if (cur.second > 0)
		{
			pair<int, int>cur2(cur.first, cur.second - 1);
			if (cur2.first == 0 && cur2.second == 0)
				ans++;
			else
			{
				if (cur2.first <= cur2.second || cur2.second == score2)
					q.push(cur2);
			}
		}
	}
	ans %= 1000000007;

	return ans;
}

int main()
{
	int t, p, a, b;
	string inp, sa, sb;
	cin >> t;
	for (int i = 1; i <= t; i++)
	{
		cin >> inp;
		int len = inp.length();
		for (int j = 0; j < len; j++)
		{
			if (inp[j] == '-')
			{
				p = j;
				break;
			}
		}
		sa = inp.substr(0, p);
		sb = inp.substr(p + 1, len - p);
		a = stoi(sa);
		b = stoi(sb);
		cout << "Case #" << i << ": " << stressfree(a, b) << " " << stressful(a, b) << endl;
	}

	return 0;
}
