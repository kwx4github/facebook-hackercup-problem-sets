import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class C {

	private Scanner sc;
	private BufferedWriter out;
	int n = 2001;
	int mod = 1000 * 1000 * 1000 + 7;
	int nr[][];
	int nrS[][];
	
	public static void main(String[] args) throws IOException {
		new C().solve();
	}
	
	private String solveCase() {
		long rez = 0;
		String scoreStr = sc.next();
		String[] scores = scoreStr.split("-");
		int myScore = Integer.parseInt(scores[0]);
		int herScore = Integer.parseInt(scores[1]);
		// X-0 is considered stressful.
		int withStress = herScore == 0 ? 1 : nrS[herScore][herScore - 1];
		return String.valueOf(nr[myScore][herScore] + " " + withStress);
	}
	
	private void prec() {
		nr = new int[n][n];
		for (int i = 1; i < n; i++) {
			for (int j = 0; j < i; j++) {
				if (j == 0) {
					// This includes the only i == 1 case.
					nr[i][j] = 1;
				} else {
					nr[i][j] = (nr[i][j - 1]  + nr[i - 1][j]) % mod;
				}
			}
		}
		
		nrS = new int[n][n];
		for (int i = 1; i < n; i++) {
			for (int j = 0; j <= i; j++) {
				if (j == 0) {
					nrS[i][j] = 1;
				} else if (i == 1) {
					// This must be j == 1.
					nrS[i][j] = 1;
				} else {
					nrS[i][j] = (nrS[i][j - 1]  + nrS[i - 1][j]) % mod;
				}
			}
		}
	}
	
	private void solve() throws IOException {
		prec();
		sc = new Scanner(new File("C.in"));
		out = new BufferedWriter(new FileWriter("C.out"));
		int nrt = sc.nextInt();
		for (int i = 0; i < nrt; i++) {
			System.out.println("test " + i);
			out.write("Case #" + (i + 1) + ": " + solveCase());
			out.newLine();
		}
		out.close();
	}
}
