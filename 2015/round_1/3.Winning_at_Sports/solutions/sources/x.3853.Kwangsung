#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int modulo = 1000000007;


int get_stress_free(int m, int y) {
    vector<vector<int>> dp = vector<vector<int>>(m+2, vector<int>(y+2, 0));

    dp[0][0] = 1;

    for (int i = 1; i < m + 1; ++i) {
        for (int j = 0; j < min(i, y+1); ++j) {
            int a = (i-1) >= 0 ? dp[i-1][j] : 0;
            int b = (j-1) >= 0 ? dp[i][j-1] : 0;

            dp[i][j] = (a+b) % modulo;
        }
    }

    return dp[m][y];
}

int get_stressful(int m, int y) {
    vector<vector<int>> dp = vector<vector<int>>(m+2, vector<int>(y+2, 0));

    dp[0][0] = 1;

    for (int i = 0; i < m + 1; ++i) {
        for (int j = 1; j < y+1; ++j) {
            if (j != y && i > j) {
                dp[i][j] = 0;
                continue;
            }

            int a = (i-1) >= 0 ? dp[i-1][j] : 0;
            int b = (j-1) >= 0 ? dp[i][j-1] : 0;

            dp[i][j] = (a+b) % modulo;
        }
    }

    return dp[m][y];
}

int main() {
    int T;
    cin >> T;

    for (int testcase = 1; testcase <= T; ++testcase) {
        string score;
        cin >> score;

        int me, you;
        sscanf(score.data(), "%d-%d", &me, &you);

        printf("Case #%d: %d %d\n", testcase,  get_stress_free(me, you), get_stressful(me, you));

    }

    return 0;
}
