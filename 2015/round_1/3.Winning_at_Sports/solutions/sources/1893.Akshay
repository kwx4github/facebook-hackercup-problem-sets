#include <cstdlib>
#include <cstring>
#include <cassert>
#include <climits>
#include <cstdio>
#include <cctype>
#include <cfloat>
#include <ctime>

#include <algorithm>
#include <iterator>
#include <iostream>
#include <utility>
#include <iomanip>
#include <sstream>
#include <fstream>
#include <numeric>
#include <complex>
#include <vector>
#include <string>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <set>
#include <map>

#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))

#define memo(a,b)       memset (a,b,sizeof(a))
#define all(a)          a.begin () , a. end ()
#define clr(a)          a.clear ()
#define sz(a)           a.size()
#define sf              scanf
#define pf              printf
#define si(a)           scanf("%d",&a)
#define pb              push_back
#define mp              make_pair
#define nl              puts("")
#define ll              long long
#define vi              vector < int >
#define vii				vector < int , int >
#define vll             vector < ll >
#define pii             pair < int , int >
#define endl			'\n'
#define mod             1000000007

#define rd              freopen ( "input.txt" , "r" , stdin )
#define wr              freopen ( "output.txt" , "w" , stdout )

using namespace std ;

#define error(args...) { vector<string> _v;                       \
			 string _s = #args;                       \
		         replace(_s.begin(), _s.end(), ',', ' '); \
			 splitstr(_s, _v);                        \
			 err(_v.begin(), args);                   \
		        }

void splitstr(const string &s, vector<string> &v) {
	istringstream in(s);
	copy(istream_iterator<string>(in), istream_iterator<string>(), back_inserter(v));
}

void err(vector<string>::iterator it) {}
template<typename T, typename... Args>
void err(vector<string>::iterator it, T a, Args... args) {
	cerr << *it << " = " << a << '\n';
	err(++it, args...);
}

ll dp1[2005][2005],dp2[2005][2005];

int main()
{

#ifndef ONLINE_JUDGE
    rd;wr;
#endif

    ios_base::sync_with_stdio(1);
	int n=0,a=0,arr[100004],t=0,k=0,m=0,i=0,j=0,ans=0,b=0,c=0,d=0,x=0,y=0,f=0,l=0,r=0;
	string str,s;

    cin>>t;
    rep(q,1,t+1)
    {
        scanf("%d-%d",&a,&b);
        rep(i,0,a+1)
            dp1[i][0]=1;
        rep(i,2,a+1)
        {
            rep(j,0,b+1)
            {
                dp1[i][j]=0;
                if(j)
                    dp1[i][j]+=dp1[i][j-1];
                if(i>j+1)
                    dp1[i][j]+=dp1[i-1][j];
                dp1[i][j]%=mod;
            }
        }
        rep(i,0,b+1)
            dp2[0][i]=1;
        rep(i,1,a+1)
        {
            rep(j,0,b+1)
            {
                if(i>=j)
                    dp2[i][j]=dp2[i-1][j];
                else if(i<j)
                    dp2[i][j]=dp2[i][j-1]+dp2[i-1][j];
                dp2[i][j]%=mod;
            }
        }

        cout<<"Case #"<<q<<": "<<dp1[a][b]<<" "<<dp2[a][b]<<endl;
    }
 return 0;
}
