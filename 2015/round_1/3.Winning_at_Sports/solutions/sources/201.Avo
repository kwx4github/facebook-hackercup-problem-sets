program winning_at_sports;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  SysUtils;

const
  MaxScore = 2000;
  Modulo = 1000000007;

var
  DP: array [0..MaxScore, 0..MaxScore] of Int64;

procedure Init;
var
  i, j: Integer;
begin
  for i := 0 to MaxScore do
  begin
    for j := 0 to MaxScore do
      DP[i, j] := 0;
  end;
end;

function StressFreeDP(Home, Away: Int64): Int64;
var
  i, j: Integer;
begin
  Init;
  DP[0, 0] := 1;
  DP[1, 0] := 1;
  for i := 2 to Home do
  begin
    for j := 0 to i - 1 do
    begin
      if j > 0 then
        DP[i, j] := (DP[i, j] + DP[i, j - 1]) mod Modulo;
      if i - 1 > j then
        DP[i, j] := (DP[i, j] +  DP[i - 1, j]) mod Modulo;
    end;
  end;
  Result := DP[Home, Away];
end;

function StressfulDP(Away: Int64): Int64;
var
  i, j: Integer;
begin
  Init;
  DP[0, 0] := 1;
  for i := 1 to Away do
  begin
    for j := 0 to i do
    begin
      if j > 0 then
        DP[i, j] := (DP[i, j] + DP[i, j - 1]) mod Modulo;
      if i - 1 >= j then
        DP[i, j] := (DP[i, j] +  DP[i - 1, j]) mod Modulo;
    end;
  end;
  Result := DP[Away, Away];
end;

function Solve: string;
var
  S: string;
  Home, Away: Int64;
  StressFreeCount, StressFullCount: Int64;
begin
  Readln(S);
  Home := StrToInt(Copy(S, 1, Pos('-', S) - 1));
  Away := StrToInt(Copy(S, Pos('-', S) + 1, MaxInt));
  Init;
  StressFreeCount := StressFreeDP(Home, Away);
  Init;
  StressFullCount := StressfulDP(Away);
  Result := Format('%d %d', [StressFreeCount, StressFullCount]);
end;

var
  i, T: Integer;
begin
  Readln(T);
  for i := 1 to T do
    Writeln('Case #', i, ': ', Solve);
end.

