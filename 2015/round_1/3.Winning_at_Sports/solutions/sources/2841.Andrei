using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace FB3
{
	class ProgramR1FB3
	{
		static int MAX = 1000000007;
		static int[,] valuesNS;
		static int[,] valuesS;

		static void Main(string[] args)
		{
			int index = 2001;
			valuesS = new int[index, index];
			for (int i = 0; i < index; i++)
				for (int j = 0; j < index; j++)
					valuesS[i, j] = -1;
			valuesNS = new int[index, index];
			for (int i = 0; i < index; i++)
				for (int j = 0; j < index; j++)
					valuesNS[i, j] = -1;

			StreamReader sr = new StreamReader("input.txt");
			string input = sr.ReadLine();
			string output = string.Empty;

			int nrCount = int.Parse(input);

			for (int count = 1; count <= nrCount; count++)
			{
				string[] inputList = sr.ReadLine().Split('-');
				int A = int.Parse(inputList[0]), B = int.Parse(inputList[1]);
				int resultNS = CaseNS(A, B);
				int resultS = CaseS(B, B);

				output += string.Format("Case #{0}: {1} {2}\r\n", count, resultNS, resultS);
				Console.WriteLine("Case #{0}: {1} {2}", count, resultNS, resultS);
			}

			sr.Close();

			output = output.TrimEnd();
			StreamWriter sw = new StreamWriter("output.txt");
			sw.Write(output);
			sw.Close();

			Console.WriteLine("\r\nEND");
			Console.ReadLine();
		}

		static int CaseNS(int A, int B)
		{
			if (valuesNS[A, B] >= 0)
				return valuesNS[A, B];

			int res;
			if (A <= B)
				res = 0;
			else if (B == 0)
				res = 1;
			else if (A == 1)
				res = 1;
			else res = (CaseNS(A - 1, B) + CaseNS(A, B - 1)) % MAX;

			valuesNS[A, B] = res;

			return res;
		}

		static int CaseS(int A, int B)
		{
			if (valuesS[A, B] >= 0)
				return valuesS[A, B];

			int res;
			if (A > B)
				res = 0;
			else if (B == 0)
				res = 1;
			else if (B == 1)
				res = 1;
			else if (A == 0)
				res = 1;
			else res = (CaseS(A - 1, B) + CaseS(A, B - 1)) % MAX;

			valuesS[A, B] = res;

			return res;
		}
	}
}
