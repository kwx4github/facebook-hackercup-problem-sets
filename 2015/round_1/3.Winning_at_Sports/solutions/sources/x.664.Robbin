#include<vector>
#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

const int N = 2005, MOD = 1000000007;

int dp[N][N], dp2[N][N];

int main() {
    dp[0][0] = 1;
    for (int i = 0; i < N - 1; ++i) {
        for (int j = 0; j <= i; ++j) {
            if (i > j + 1) {
                (dp[i][j + 1] += dp[i][j]) %= MOD;
            }
            (dp[i + 1][j] += dp[i][j]) %= MOD;
        }
    }
    dp2[0][0] = 1;
    for (int i = 0; i < N - 1; ++i) {
        for (int j = 0; j <= i; ++j) {
            if (i > j) {
                (dp2[i][j + 1] += dp2[i][j]) %= MOD;
            }
            (dp2[i + 1][j] += dp2[i][j]) %= MOD;
        }
    }
    int t;
    scanf("%d", &t);
    while (t--) {
        int a, b;
        scanf("%d-%d", &a, &b);
        static int id = 0;
        int ans1 = dp[a][b], ans2 = b ? dp2[b][b - 1] : 0;
        printf("Case #%d: %d %d\n", ++id, ans1, ans2);
    }
    return 0;
}
