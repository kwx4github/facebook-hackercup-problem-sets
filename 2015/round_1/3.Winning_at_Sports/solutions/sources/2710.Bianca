#include <stdio.h>

#define N 2001
#define mod 1000000007

long long pd[N][N][2];

int main (void) {
	int i, j;

	pd[0][0][1] = 1;
	pd[1][0][0] = 1;
	//stress-free
	for (i = 2; i < N; i++) {
		for (j = 0; j < i; j++) {
			if (i == j+1) {
				pd[i][j][0] = pd[i][j-1][0];
			} else {
				pd[i][j][0] = ((j?pd[i][j-1][0]:0)+pd[i-1][j][0])%mod;
			}
		}
	}

	//stressful
	for (i = 0; i < N; i++) {
		for (j = 0; j < N; j++) {
			if (i == 0 && j == 0)	continue;
			if (i >= j) {
				pd[i][j][1] = pd[i-1][j][1];
			} else {
				pd[i][j][1] = ((i?pd[i-1][j][1]:0)+pd[i][j-1][1])%mod;
			}
		}
	}

	int t, c;
	int a, b;
	scanf ("%d", &t);
	for (c = 1; c <= t; c++) {
		scanf ("%d-%d", &a, &b);
		printf ("Case #%d: %lld %lld\n", c, pd[a][b][0], pd[a][b][1]);
	}
}
