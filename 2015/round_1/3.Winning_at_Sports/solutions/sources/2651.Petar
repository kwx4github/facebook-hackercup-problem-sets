/*
 Petar 'PetarV' Velickovic
 Task: Winning at Sports
*/

#include <stdio.h>
#include <math.h>
#include <string.h>
#include <iostream>
#include <vector>
#include <list>
#include <string>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <complex>

#define MAX_N 2001
#define MOD 1000000007LL

#define DPRINTC(C) printf(#C " = %c\n", (C))
#define DPRINTS(S) printf(#S " = %s\n", (S))
#define DPRINTD(D) printf(#D " = %d\n", (D))
#define DPRINTLLD(LLD) printf(#LLD " = %lld\n", (LLD))
#define DPRINTLF(LF) printf(#LF " = %.5lf\n", (LF))

using namespace std;
typedef long long lld;
typedef unsigned long long llu;

int t;
string line;
lld ret;

lld dp_free[MAX_N][MAX_N];
lld dp_str[MAX_N][MAX_N];

inline void init()
{
    for (int i=0;i<MAX_N;i++) dp_free[i][0] = 1LL;
    for (int i=2;i<MAX_N;i++)
    {
        for (int j=1;j<i;j++)
        {
            if (j < i - 1)
            {
                dp_free[i][j] += dp_free[i-1][j];
                dp_free[i][j] %= MOD;
            }
            dp_free[i][j] += dp_free[i][j-1];
            dp_free[i][j] %= MOD;
        }
    }
    for (int j=0;j<MAX_N;j++) dp_str[0][j] = 1LL;
    for (int j=1;j<MAX_N;j++)
    {
        for (int i=1;i<=j;i++)
        {
            dp_str[i][j] += dp_str[i-1][j];
            dp_str[i][j] %= MOD;
            if (i < j)
            {
                dp_str[i][j] += dp_str[i][j-1];
                dp_str[i][j] %= MOD;
            }
        }
    }
}

int main()
{
    freopen("/Users/PetarV/HackerCup/winning_at_sports.txt","r",stdin);
    freopen("/Users/PetarV/HackerCup/sports-out.txt","w",stdout);
    
    init();
    
    scanf("%d", &t);
    
    for (int f=1;f<=t;f++)
    {
        cin >> line;
        int poz = line.find("-");
        int A = atoi(line.substr(0, poz).c_str());
        line.erase(0, poz + 1);
        int B = atoi(line.c_str());
        ret = 0LL;
        printf("Case #%d: %lld %lld\n", f, dp_free[A][B], dp_str[B][B]);
    }
    
    return 0;
}