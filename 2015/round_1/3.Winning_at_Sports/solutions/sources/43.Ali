#!/usr/bin/env python3

big_prime = 1000000007

stressfree = dict()
stressfull = dict()

def precompute():
  # stressfree
  for player in range(2001):
    for opponent in range(player):
      if player == 1 and opponent == 0:
        possible = [1]
      else:
        possible = []
        if player - 1 > opponent:
          possible.append(stressfree[player - 1, opponent])
        if opponent - 1 >= 0:
          possible.append(stressfree[player, opponent - 1])
      answer = sum(possible) % big_prime
      stressfree[player, opponent] = answer
  # stressfull
  for opponent in range(2001):
    for player in range(opponent + 1):
      if opponent == 0:
        possible = [1]
      else:
        possible = []
        if opponent - 1 >= player:
          possible.append(stressfull[player, opponent - 1])
        if player - 1 >= 0:
          possible.append(stressfull[player - 1, opponent])
      answer = sum(possible) % big_prime
      stressfull[player, opponent] = answer

def solve(player, opponent):
  free = stressfree[player, opponent]
  full = stressfull[opponent, opponent]
  return "%d %d" % (free, full)

def main():
  precompute()
  T = int(input())
  for case in range(1, T + 1):
    player, opponent = map(int, input().strip().split("-"))
    solution = solve(player, opponent)
    print("Case #%d: %s" % (case, solution))

if __name__ == "__main__":
  main()

