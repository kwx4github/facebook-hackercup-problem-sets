import java.io.OutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.InputMismatchException;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		TaskC solver = new TaskC();
		solver.solve(1, in, out);
		out.close();
	}
}

class TaskC {
    int countedS[][];
    int countedS1[][];
    final int mod = 1000000007;
    int countStressFul(int sc1, int sc2) {
        if (countedS[sc1][sc2] !=-1)
            return countedS[sc1][sc2];

        if(sc1==0)
            return 1;
        // stresful means sc2 must be greater than sc1!
        if(sc1>sc2) {
            return countStressFul(sc2,sc2);
        }

        if(sc1==sc2) {
            return countedS[sc1][sc2] = countStressFul(sc1-1,sc2);
        } else {
            // sc2>sc1
            return countedS[sc1][sc2] = (countStressFul(sc1-1,sc2) + countStressFul(sc1,sc2-1))%mod;
        }
    }

    int countStressFree(int sc1, int sc2) {
        if (countedS1[sc1][sc2] !=-1)
            return countedS1[sc1][sc2];

        if(sc2==0)
            return 1;
        if(sc1>sc2+1) {
            return countedS1[sc1][sc2] = (countStressFree(sc1-1,sc2) + countStressFree(sc1,sc2-1))%mod;
        } else {

            return countedS1[sc1][sc2] = countStressFree(sc1,sc2-1);
        }
    }


    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int t = in.nextInt();

        for(int tc=0;tc<t;tc++) {
            String s= in.nextLine();
            String[] score = s.split("-");

            int sc1 = Integer.parseInt(score[0]);
            int sc2 = Integer.parseInt(score[1]);

            countedS = new int[2001][2001];
            countedS1 = new int [2001][2001];

            for(int i=0;i<2001;i++) {
                for(int j=0;j<2001;j++) {
                    countedS[i][j] = -1;
                    countedS1[i][j] = -1;
                }
            }
            out.println("Case #"+(tc+1)+": "+countStressFree(sc1,sc2)+" "+ countStressFul(sc1,sc2));
        }
    }
}

class InputReader {

    private InputStream stream;
    int curCharIndex = 0;
    int charsInBuf = 0;
     byte buf[] = new byte[16*1024];

    public InputReader(InputStream stream) {
        this.stream = stream;
    }


    public int readChar() {

        if (curCharIndex >= charsInBuf) {
            curCharIndex = 0;
            try {
                charsInBuf = stream.read(buf);
            } catch (IOException e) {
                throw new InputMismatchException();
            }
            if (charsInBuf <= 0)
                return -1;
        }
        return buf[curCharIndex++];
    }


    public String nextLine() {
        StringBuilder buf = new StringBuilder();
        int c = readChar();
        while (c != '\n' && c != -1) {
            if (c != '\r')
                buf.appendCodePoint(c);
                c = readChar();
        }
        return buf.toString();
    }

    public int nextInt() {

        int c;
        do {
            c = readChar();
        }while(isWhitespace(c));

        int sign = 1;
        if (c == '-') {
            c = readChar();
            sign = -1;

        }
        int res = 0;
        do {
            res *= 10;
            res += c - '0';
            c = readChar();
        } while (!isWhitespace(c) && c!=-1);
        return sign * res;
    }


    /*
    * For the purpose of compatibilty with Chelper Chrome extension
     */


    private boolean isWhitespace(int c) {
        return  c==' ' || c=='\n'|| c=='\r' || c=='\t';
    }
}

