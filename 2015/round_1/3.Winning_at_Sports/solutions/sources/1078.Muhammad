#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <bitset>
#include <cassert>
#define Lovely using
#define my_angel namespace
#define Ayase_tan std

Lovely my_angel Ayase_tan;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> pii;
typedef pair<double,double> pdd;
typedef pair<string,string> pss;
typedef pair<int,double> pid;
typedef pair<int,LL> pil;
typedef pair<LL,LL> pll;

#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define SYNC ios_base::sync_with_stdio(false)
#define TIE cin.tie(0)
#define INF 1000000000
#define INFLL 4000000000000000000LL
#define EPS 1e-9
#define MOD 1000000007
#define DEBUG puts("DEBUG")

#ifdef _WIN32
#define getchar_unlocked getchar
#endif

#define g getchar_unlocked

int dx8[8]={-1,-1,0,1,1,1,0,-1},dx4[4]={-1,0,1,0};
int dy8[8]={0,-1,-1,-1,0,1,1,1},dy4[4]={0,-1,0,1};

inline void open(string name){
    freopen((name+".in").c_str(),"r",stdin);
    freopen((name+".out").c_str(),"w",stdout);
}

inline void close(){
    fclose(stdin);
    fclose(stdout);
}

inline int io(){
    register char c;
    while(1){
        c = g();
        if(c != '\n' && c != ' ') break;
    }
    int res = 0, sign = 1;
    if(c=='-') sign = -1;
    else       res = c-'0';
    while(1){
        c = g();
        if(c == ' ' || c == '\n' || c == EOF) break;
        res = (res << 3) + (res << 1) + c - '0';
    }
    return res * sign;
}

///////////////////////////////////////////////////
//////            End of Template            /////
/////////////////////////////////////////////////

const int MAXN = 2005;

int dp1[MAXN][MAXN]; // type 1
int dp2[MAXN][MAXN]; // type 2
int limu, lime;
int tc;
char s[55];

int solve1(int us,int enemy){
    if(us <= enemy) return 0;
    if(us == limu && enemy == lime) return 1;
    int &ret = dp1[us][enemy];
    if(ret != -1) return ret;
    ret = 0;
    if(us < limu)
        ret += solve1(us + 1,enemy);
    if(enemy < lime)
        ret += solve1(us,enemy + 1);
    if(ret >= MOD)  
        ret -= MOD;
    return ret;            
}

int solve2(int us,int enemy){
    if(enemy < lime && us > enemy) return 0;
    if(us == limu && enemy == lime) return 1;
    int &ret = dp2[us][enemy];
    if(ret != -1) return ret;
    ret = 0;
    if(us < limu)
        ret += solve2(us + 1,enemy);
    if(enemy < lime)
        ret += solve2(us,enemy + 1);
    if(ret >= MOD)  
        ret -= MOD;
    return ret;   
}

int main(){
    scanf("%d",&tc);
    for(int t = 1 ; t <= tc ; t++){
        limu = lime = 0;
        int st;
        
        scanf("%s",s);
        int len = strlen(s);
        for(int i = 0 ; i < len ; i++)
            if(s[i] == '-'){
                st = i;
                break;
            }
            else
                limu = 10 * limu + (s[i] - '0');
        for(int i = st + 1 ; i < len ; i++)
            lime = 10 * lime + (s[i] - '0');
        
        for(int i = 0 ; i <= limu ; i++)
            for(int j = 0 ; j <= lime ; j++)
                dp1[i][j] = dp2[i][j] = -1;
        //printf("%d %d\n",limu,lime);        
        printf("Case #%d: %d %d\n",t,solve1(1,0),solve2(0,0));                    
    }
    //puts("ganteng");
    return 0;
}

