// Author: Harhro94 [Harutyunyan Hrayr]
#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define FOR(i, n) for (int i = 0; i < (n); ++i)
typedef pair<int, int> pii;
typedef long long LL;
typedef long double LD;
#define pb push_back
#define mp make_pair
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

const int N = 2007;
const LL MOD = 1000000007LL;
LL dp1[N][N];
LL dp2[N][N];

void add(LL &a, LL b) {
   a = (a + b) % MOD;
}

void solve() {

   int T;
   scanf("%d", &T);
   for (int test = 1; test <= T; ++test) {

      int a, b;
      scanf("%d-%d", &a, &b);

      memset(dp1, 0, sizeof dp1);
      dp1[1][0] = 1;
      for (int i = 1; i <= a; ++i) {
         for (int j = 0; j < i && j <= b; ++j) {
            add(dp1[i + 1][j], dp1[i][j]);
            add(dp1[i][j + 1], dp1[i][j]);
         }
      }
      LL ans1 = dp1[a][b];

      memset(dp2, 0, sizeof dp2);
      dp2[0][0] = 1;
      FOR(i, a + 1) {
         FOR(j, b + 1) {
            if (j != b && i > j) continue;
            if (j == b) add(dp2[i + 1][j], dp2[i][j]);
            else {
               add(dp2[i + 1][j], dp2[i][j]);
               add(dp2[i][j + 1], dp2[i][j]);
            }
         }
      }
      LL ans2 = dp2[a][b];

      printf("Case #%d: %d\ %d\n", test, (int)ans1, (int)ans2);
   }
}

void testGen() {
   FILE *f = fopen("input.txt", "w");
   fclose(f);
}

int main() {
#ifdef harhro94
   //testGen();
   freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);
#else
#define task "game"
   //freopen(task".in", "r", stdin);
   //freopen(task".out", "w", stdout);
#endif

   cerr << fixed;
   cerr.precision(5);

   solve();

#ifdef harhro94
   cerr << fixed << setprecision(3) << "\nExecution time = " << clock() / 1000.0 << "s\n";
#endif
   return 0;
}