#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<cstring>
#include<numeric>
using namespace std;

#define ll long long int 
#define ss1(a) scanf("%d",&a)
#define ss2(a,b) scanf("%d %d",&a,&b)
#define ss3(a,b,c) scanf("%d %d %d",&a,&b,&c)
#define loop(i,a,b) for(int i=a;i<b;i++)
#define loope(i,a,b) for(int i=a;i<=b;i++)
#define loopd(i,a,b) for(int i=a;i>=b;i--)


#define pii pair<int,int>
typedef vector<int> vi; 
typedef vector< vi > vvi;  
#define setzero(a) fill(a,a+sizeof(a),0);
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define mp(a,b) make_pair(a,b)
#define F first
#define S second
#define DEBUG if(0)

ll powr(int s,int p)
{
	if(p==0)
		return 1;	

	if(p%2==1)
	{
		ll q=powr(s,p/2);
		ll a=q;
		q=(a*a);
		q=(q*s);	
		return ( q );
	}

	else
	{
		ll q=powr(s,p/2);
		ll a=q;
		q=(a*a);	
		return (q);
	}
}

/*******************************MAIN CODE STARTS*******************************/
#define mod 1000000007
ll f[2010][2010];
ll g[2010][2010];
int n=2000;

void Scan()
{
	return;
}

void pre()
{
	ll sum[2][2010];
	loope(i,1,n)
	{
		f[i][0]=1;
		sum[0][i]=sum[0][i-1]+f[i][0]; if(sum[0][i-1]>=mod) sum[0][i-1]%=mod;
	}
	for(int j=1;j<=n;j++)
	{
		for(int i=0;i<=n;i++)
		{
			if(i<=j) 
			{
				f[i][j]=0;
				sum[1][i]=0;
			}
			else			
			{
				f[i][j]=sum[0][i]-sum[0][j];   if(f[i][j]<0) f[i][j]+=mod;
				sum[1][i]=sum[1][i-1]+f[i][j]; if(sum[1][i]>=mod) sum[1][i]%=mod;
			}	
		}	
		for(int i=0;i<=n;i++) sum[0][i]=sum[1][i];
	}
	/*DEBUG
	for(int i=1;i<=n;i++)
	{
		loope(j,0,n)
			printf("%lld ",f[i][j]);
		printf("\n");		
	}*/	
	
	sum[0][0]=0;
	loope(i,1,n)
	{
		g[i][0]=1;
		sum[0][i]=sum[0][i-1]+g[i][0]; if(sum[0][i-1]>=mod) sum[0][i-1]%=mod;
	}
	for(int j=1;j<=n;j++)
	{
		for(int i=0;i<=n;i++)
		{
			if(i<=j) 
			{
				g[i][j]=0;
				sum[1][i]=0;
			}
			else			
			{
				g[i][j]=sum[0][i]-sum[0][j-1];   if(g[i][j]<0) g[i][j]+=mod;
				sum[1][i]=sum[1][i-1]+g[i][j]; if(sum[1][i]>=mod) sum[1][i]%=mod;
			}	
		}	
		for(int i=0;i<=n;i++) sum[0][i]=sum[1][i];
	}
	/*DEBUG
	for(int i=1;i<=10;i++)
	{
		loope(j,0,10)
			printf("%lld ",g[i][j]);
		printf("\n");		
	}*/	
	
	return;
}
void Out()
{
	int t; cin>>t;
	loope(z,1,t)
	{
		int i,j;
		scanf("%d-%d",&i,&j);
		printf("Case #%d: ",z);
		if(j==0) printf("1 1\n");
		else printf("%lld %lld\n",f[i][j],g[j][j-1]);
	}	
	return;
}
int main()
{
	pre();
	Out();
	return 0;
}
