#include<bits/stdc++.h>

using namespace std;

#define mod 1000000007
#define mod1 1000003
#define inf 999999999

map< pair<int,int>,int > mp;
int d1[2001][2001],d2[2001][2001];

int stress_free(int user,int opponent,int fuser,int fopponent)
{
	pair<int,int> p;p.first=user;p.second=opponent;
	if(user>fuser || opponent>fopponent){return 0;}
	if(user==fuser && opponent==fopponent){return 1;}
	if(user<=opponent){return 0;}
	if(d1[user][opponent]>=0){return d1[user][opponent];}
	//if(mp.find(p)!=mp.end()){return mp[p];}
	int ans=0;
	ans=(stress_free(user+1,opponent,fuser,fopponent)%mod+stress_free(user,opponent+1,fuser,fopponent)%mod)%mod;
	//mp[p]=ans;
	return d1[user][opponent]=ans;
}
	
int stress_full(int user,int opponent,int fuser,int fopponent)
{
	
	if(user>fuser || opponent>fopponent){return 0;}
	if(user==fuser && opponent==fopponent){return 1;}
	if(user>opponent && opponent<fopponent){return 0;}
	if(d2[user][opponent]>=0){return d2[user][opponent];}
	//if(mp.find(p)!=mp.end()){return mp[p];}
	int ans=0;
	ans=(stress_full(user+1,opponent,fuser,fopponent)%mod+stress_full(user,opponent+1,fuser,fopponent)%mod)%mod;
	//mp[p]=ans;
	return d2[user][opponent]=ans;
}

int main()
{
	freopen("input.txt","r",stdin);
	//freopen("winning_at_sports_example_input.txt","r",stdin);	
	freopen("output.txt","w",stdout);
	//ios::sync_with_stdio(false);
	int i,j,x,y,t,n,k=0;
	int ans1,ans2;
	string s,s1,s2;
	cin>>t;
	while(t--)
	{
		cin>>s;k++;
		s1="";s2="";
		for(i=0;i<s.size();i++){if(s[i]=='-'){break;}s1+=s[i];}
		for(j=i+1;j<s.size();j++){s2+=s[j];}
		x=atoi(s1.c_str());
		y=atoi(s2.c_str());
		//cout<<x<<" "<<y<<"\n";
		memset(d1,-1,sizeof(d1));
		
		ans1=ans2=0;
		ans1=stress_free(1,0,x,y);
		memset(d2,-1,sizeof(d2));
		ans2=stress_full(0,0,x,y);
		printf("Case #%d: %d %d\n",k,ans1,ans2);
	}
	return 0;
	
}
	
		

	
		
	
	
		

		
		
		
		 
		

	
		
		
						

			
		
		
	
		
		
	
	
	
		
		
	
      

		
		
				
		
		
		

		
		
		
				
		
	
	
		
	
	

	
	
	
	
	

				
		
		
			
			
	
				


	
	
					
		
		
	

		
		
	
	

	
		



	
		
		

	
	
		
	
	

	
	
	
	
	

				
		
		
			
			
	
				


	
	
					
		
		
	

		
		
	
	

	
		


