#include <iostream>

#define MAXSCORE 2001
#define OUTPUTMODULO 1000000007

using namespace std;

int main(){
    freopen("in", "r", stdin);
    freopen("out", "w", stdout);

    int caseCount;
    scanf("%d", &caseCount);

    long long **pathStressfree;
    long long **pathStressful;
    pathStressfree = new long long*[MAXSCORE];
    pathStressful = new long long*[MAXSCORE];
    for (int i = 0; i < MAXSCORE; ++i)
    {
    	pathStressfree[i] = new long long[MAXSCORE];
    	pathStressful[i] = new long long[MAXSCORE];
    }


    for (int caseIndex = 0; caseIndex < caseCount; caseIndex++) {
    	int scoreMe, scoreOpponent;
    	scanf("%d-%d", &scoreMe, &scoreOpponent);
    	// cout<<scoreMe<<endl<<scoreOpponent<<endl;
    	// clear the array
    	for (int i = 0; i < MAXSCORE; ++i)
    	{
    		for (int j = 0; j < MAXSCORE; ++j)
    		{
    			pathStressful[i][j] = 0;
    			pathStressfree[i][j] = 0;
    		}
    	}
		// calc stressfree
		for (int i = 0; i <= scoreMe; ++i)
		{
			pathStressfree[i][0] = 1;
		}
		for (int j = 1; j <= scoreOpponent; ++j)
		{
	   		for (int i = j + 1; i <= scoreMe; ++i)
	    	{
	    		pathStressfree[i][j] = (pathStressfree[i-1][j] + pathStressfree[i][j-1]) % OUTPUTMODULO;
	    	}
	   	}
	   	// calc stressful
		for (int j = 0; j <= scoreOpponent; ++j)
		{
			pathStressful[0][j] = 1;
		}
		for (int i = 1; i <= scoreOpponent; ++i)
		{
			for (int j = i; j <= scoreOpponent; ++j)
			{	
				pathStressful[i][j] = (pathStressful[i-1][j] + pathStressful[i][j-1]) % OUTPUTMODULO;
			}
		}

		// output
		long long pathNumberOfStressfree = pathStressfree[scoreMe][scoreOpponent] % OUTPUTMODULO;
		long long pathNubmerOfStressful = pathStressful[scoreOpponent][scoreOpponent] % OUTPUTMODULO;
		cout<<"Case #"<<caseIndex+1<<": "<<pathNumberOfStressfree<<" "<<pathNubmerOfStressful<<"\n";

    }

    for (int i = 0; i < MAXSCORE; ++i)
    {
    	delete[] pathStressfree[i];
    	delete[] pathStressful[i];
    }
    delete[] pathStressfree;
    delete[] pathStressful;

	return 0;
}

