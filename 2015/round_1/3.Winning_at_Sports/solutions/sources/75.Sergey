#if 1
#include <functional>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <sstream>
#include <numeric>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <list>
 
using namespace std;
 
typedef long long LL;
typedef long double LD;
typedef pair<int, int> pii;
 
const LD eps = 1e-9;
const LD pi = acos(-1.0);
const LL inf = 1e+9;
 
#define mp make_pair
#define pb push_back
#define X first
#define Y second
 
#define dbg(x) { cerr << #x << " = " << x << endl; }
 
// extended template
#pragma comment(linker, "/STACK:36777216")
typedef vector<int> vi;
typedef vector<vi> vvi;
 
#define forn(i, n) for (int i = 0; i < n; ++i)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
 
template<typename T> istream & operator >> (istream &, vector<T> &);
template<typename T> ostream & operator << (ostream &, const vector<T> &);
 
#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;
 
#define NAME "improvements"

const int mod = 1e9 + 7;

int get1(int n, int m)
{
    vvi dp(n + 1, vi(m + 1));
    dp[0][0] = 1;
    forn(i, n + 1)
        forn(j, m + 1)
            if (i == n && j == m || i > j)
            {
                LL v1 = i - 1 >= 0 ? dp[i - 1][j] : 0;
                LL v2 = j - 1 >= 0 ? dp[i][j - 1] : 0;
                dp[i][j] = (v1 + v2) % mod;
            }
    return dp[n][m];
}

int get2(int n, int m)
{
    vvi good(n + 1, vi(m + 1));
    forn(i, n + 1)
        forn(j, m + 1)
            if (i <= j)
                good[i][j] = true;
    forn(i, n + 1)
        good[i][m] = true;

    good[0][0] = false;


    //if (n < 10)
    //{
    //    cout << endl;
    //    cout << n << " " << m << endl;
    //    cout << endl;
    //    forn(i, n + 1)
    //        cout << good[i] << endl;
    //    cout << endl;
    //}
    
    vvi dp(n + 1, vi(m + 1));
    dp[0][0] = 1;
    forn(i, n + 1)
        forn(j, m + 1)
            if (good[i][j])
            {
                LL v1 = i - 1 >= 0 ? dp[i - 1][j] : 0;
                LL v2 = j - 1 >= 0 ? dp[i][j - 1] : 0;
                dp[i][j] = (v1 + v2) % mod;
            }
    return dp[n][m];
}

void solve(int test)
{
    cout << "Case #" << test << ": ";

    int n, m; scanf("%d-%d", &n, &m);
    
    cout << get1(n, m) << " " << get2(n, m) << endl;
}
 
int main()
{
    START
    // freopen(NAME ".in", "r", stdin); freopen(NAME ".out", "w", stdout);
    freopen("winning_at_sports.txt", "r", stdin); freopen("winning_at_sports_out.txt", "w", stdout);

    int t; cin >> t;
    forn(i, t)
        solve(i + 1);

    END
    return 0;
}
/*******************************************
*******************************************/
 
template<typename T> istream & operator >> (istream &is, vector<T> &v)
{
    forn(i, v.size())
        is >> v[i];
    return is;
}
template<typename T> ostream & operator << (ostream &os, const vector<T> &v)
{
    forn(i, v.size())
        os << v[i] << " ";
    return os;
}
#endif