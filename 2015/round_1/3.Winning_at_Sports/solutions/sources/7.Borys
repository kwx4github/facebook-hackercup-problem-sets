import java.io.*;
import java.util.*;

public class A {
	FastScanner in;
	PrintWriter out;

	final int MAX = 2222;
	final int mod = (int) 1e9 + 7;

	void solve() {
		int tc = in.nextInt();
		int[][] dp1 = new int[MAX][MAX];
		dp1[0][0] = 1;
		int[][] dp2 = new int[MAX][MAX];
		dp2[0][0] = 1;
		for (int my = 1; my < MAX; my++)
			for (int an = 0; an < my; an++) {
				dp1[my][an] = (dp1[my - 1][an] + (an == 0 ? 0 : dp1[my][an - 1]))
						% mod;
			}
		for (int my = 0; my < MAX; my++)
			for (int an = my; an < MAX; an++) {
				if (my == 0 && an == 0) {
					continue;
				}
				dp2[my][an] = ((my == 0 ? 0 : dp2[my - 1][an]) + dp2[my][an - 1])
						% mod;
			}
		for (int t = 0; t < tc; t++) {
			out.print("Case #" + (t + 1) + ": ");
			String[] s = in.next().split("-");
			int my = Integer.parseInt(s[0]), an = Integer.parseInt(s[1]);
			out.println(dp1[my][an] + " " + dp2[an][an]);
			System.err.println((t + 1) + "/" + tc + " done");
		}
	}

	void run() {
		try {
			in = new FastScanner(new File("A.in"));
			out = new PrintWriter(new File("A.out"));

			solve();

			out.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	void runIO() {

		in = new FastScanner(System.in);
		out = new PrintWriter(System.out);

		solve();

		out.close();
	}

	class FastScanner {
		BufferedReader br;
		StringTokenizer st;

		public FastScanner(File f) {
			try {
				br = new BufferedReader(new FileReader(f));
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}

		public FastScanner(InputStream f) {
			br = new BufferedReader(new InputStreamReader(f));
		}

		String next() {
			while (st == null || !st.hasMoreTokens()) {
				String s = null;
				try {
					s = br.readLine();
				} catch (IOException e) {
					e.printStackTrace();
				}
				if (s == null)
					return null;
				st = new StringTokenizer(s);
			}
			return st.nextToken();
		}

		boolean hasMoreTokens() {
			while (st == null || !st.hasMoreTokens()) {
				String s = null;
				try {
					s = br.readLine();
				} catch (IOException e) {
					e.printStackTrace();
				}
				if (s == null)
					return false;
				st = new StringTokenizer(s);
			}
			return true;
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}
	}

	public static void main(String[] args) {
		new A().run();
	}
}