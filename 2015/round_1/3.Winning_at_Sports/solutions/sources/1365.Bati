#include <algorithm>
#include <iostream>
#include <string.h>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <string.h>
using namespace std;
#define MAXN 2010
#define xx first 
#define yy second 
#define INF 1000000000
#define mp make_pair
#define pb push_back
#define MOD 1000000007
using namespace std;
int n;
long long dpA[MAXN][MAXN],  dpB[MAXN][MAXN];

long long calcA (int a , int b) {
    if ( a <= 0 || b <= 0 ) return 1;
    long long res = dpA[a][b];
    if ( res != -1 ) return res;
    res = calcA ( a , b - 1 ) % MOD;
    if (a - 1 > b ) {
        res = ( res + calcA (a - 1 , b) ) % MOD;   
    } 
    res %= MOD;
    dpA[a][b] = res;
    return res;
}

long long calcB (int a , int b) {
    if ( a <= 0 || b <= 0 ) return 1;
    long long res = dpB[a][b];
    if ( res != -1 ) return res;
    res = calcB ( a - 1, b  ) % MOD;
    
    if ( a <= b - 1 ) {
        res = ( res + calcB ( a  , b - 1 ) ) % MOD;   
    }
     
    res %= MOD;
    dpB[a][b] = res;
    return res;
    
}
pair<int,int> split ( string str ) {
    int a = 0 , b = 0;
    int i = 0;
    for ( i = 0; i < str.size() && str[i] != '-'; i ++  )
         a = a * 10 + str[i] - '0';
    i ++;
    for (; i < str.size(); i ++ )
         b = b * 10 + str[i] - '0';
    return mp ( a , b );                    
}
int main() {
    memset (dpA , -1, sizeof (dpA) );
    memset (dpB , -1, sizeof (dpB) );
    
    freopen ("winning_at_sports.txt" , "r" , stdin);
    freopen  ("out.txt" , "w", stdout);
   
    int T;
    
    cin >> T;
    for ( int test = 1; test <= T; test ++ ) {
         string str;
         cin >> str;
         pair< int,int > t = split (str);
         cout <<"Case #"<< test <<": "<< calcA (t.xx , t.yy) << " " << calcB(t.xx , t.yy)<<endl;
    } 
    
//system("pause");    
return 0;
}


