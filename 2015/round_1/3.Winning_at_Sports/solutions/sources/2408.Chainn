#include<iostream>

using namespace std;

#define MAX_M 2001
#define MAX_N 2001
#define MODULO 1000000007LL

int dp[MAX_M][MAX_N];

void init()
{
	int i,j;
	for(i=0;i<MAX_M;i++)
	{
		for(j=0;j<MAX_N;j++)
		{
			dp[i][j] = -1;
		}
	}
	return;
}

int run_dp(int i, int j, int M, int N)
{
	long long int temp;
	if(dp[i][j]>-1)
	{
		return dp[i][j];
	}
	else
	{
		if(((i+j)==M)||(j==N))
		{
			dp[i][j] = 1;
			return dp[i][j];
		}
		else
		{
			if(i>0)
			{
				temp = ((long long int)run_dp(i-1,j+1,M,N))+((long long int)run_dp(i+1,j,M,N));
				dp[i][j] = (int)temp%MODULO;	
				return dp[i][j];
			}
			else
			{
				dp[i][j] = run_dp(i+1,j,M,N);
				return dp[i][j];
			}
		}
	}
}

int run_and_init(int M, int N)
{
	init();
	return run_dp(0,0,M,N);
}

int main()
{
	int T,M,N,i;
	
	cin >> T;
	
	for(i=0;i<T;i++)
	{
		cin >> M;
		cin.ignore();
		cin >> N;
		
		if(N==0)
		{
			cout << "Case #" << (i+1) << ": 1 1\n";
		}

		else
		{
			cout << "Case #" << (i+1) <<": "<<run_and_init(M-1,N)<<" "<<run_and_init(N,M)<<"\n";
		}
	}
	
	return 0;
} 
