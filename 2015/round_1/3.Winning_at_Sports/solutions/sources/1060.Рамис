#include <iostream>
#include <cstring>
#include <set>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <bitset>
#define _USE_MATH_DEFINES
#include <math.h>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <assert.h>
using namespace std;

void smain();
int main(){
    //ios_base::sync_with_stdio(0);
#ifdef DEBUG
    //freopen("/Users/ramis/Downloads/autocomplete.txt","rt",stdin);
    freopen("input.txt","rt",stdin);
    freopen("output.txt","wt",stdout);
    const clock_t start = clock();
#endif
    smain();
#ifdef DEBUG
    cerr << "\nTotal Execution Time: " << float( clock () - start ) /  CLOCKS_PER_SEC << endl;
#endif
    return 0;
}

#define forn(i,n) for (int i=0;i<n;i++)
#define rforn(i,n) for (int i=n-1;i>=0;i--)
#define fori(i,a) for(auto i=a.begin(); i!=a.end(); ++i)
#define rfori(i,a) for(auto i=a.rbegin(); i!=a.rend(); ++i)
#define int long long
#define LL long long
#define mp(a,b) make_pair(a,b)
#define INF ((1LL<<62)-1) //2305843009213693951LL
#define MOD 1000000007
#define EPS 0.00000000001
#define N 2001
/* --------- END TEMPLATE CODE --------- */

int d[N][N];
int b[N][N];


void smain() {
    int T;
    cin >> T;
    
    d[0][0] = 1;
    forn(i, N) forn(j, i) {
        d[i][j] = ((i ? d[i-1][j] : 0) + (j ? d[i][j-1] : 0)) % MOD;
    }
    b[0][0] = 1;
    forn(i, N) forn(j, i + 1) if(i + j){
        b[i][j] = ((i ? b[i-1][j] : 0) + (j ? b[i][j-1] : 0)) % MOD;
    }
    
    string s;
    for(int t = 1; t <= T; ++t) {
        cin >> s;
        int j = s.find('-');
        int x = stoi(s.substr(0, j)), y = stoi(s.substr(j + 1, s.length() - j - 1));
        cout << "Case #" << t << ": " << d[x][y] << ' ' << b[y][y] * d[x-y][0] % MOD << '\n';
    }
}



