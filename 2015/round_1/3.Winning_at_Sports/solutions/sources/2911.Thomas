###########################################################
#  Facebook awesome hacker (2 girls 1) cup solution to:   #
#                      Problem 3                          #
#   (actually it's problem 2, but someone(TM) at facebook #
#   don't know that zero-based indexing is the right way  #
#   to do stuff.)                                         #
#                                                         #
#   Since you are looking at my solution, have some art!  #
#     _____                                               #
#    /     \_______________________                       #
#   (                              \                      #
#   |                              <  o o o o o o         #
#   (       _______________________/                      #
#    \_____/                                              #
#                               (hehe it's penis art)     #
###########################################################

# Read a file in the typical FHC format and return a list
# containing each token as a string. 
def fileToList(filename):
    text_file = open(filename+".txt", "r")
    lines = text_file.readlines()
    newlinestemp = []
    for e in lines:
        temp = ""
        for i in range(0, len(e)-1):
            if ((ord(e[i]) == 10) or (ord(e[i]) == 32) or (ord(e[i]) == 45)):
                newlinestemp.append(temp)
                temp = ""
            else:
                temp += (e[i])
        newlinestemp.append(temp)
    text_file.close()
    return newlinestemp

# Thisfunction should save and print the solution
def saveAndPrint(n):
    text_file = open("Output3.txt", "w")
    text_file.write(n)
    text_file.close()


def squareWalkFree(x,y):
    a = []
    b = []
    for e in range(0,x+1):
        temp = []
        temb = []
        for i in range(0,y+1):
            if e > i:
                if (e > 0 and i > 0):
                    temp.append((a[e-1][i] + temp[i-1]))
                else:
                    temp.append(1)
                temb.append(0)
            else:
                temp.append(0)
                if e == 0:
                    temb.append(1)
                else:
                    temb.append(b[e-1][i] + temb[i-1])
        b.append(temb)
        a.append(temp)
    return (a[x][y] % 1000000007, b[y][y] % 1000000007)

def toInteger(n):
    q = 0
    for e in n:
        q *= 10
        q += ord(e)-48
    return q

def run():
    a = fileToList("winning_at_sports")
    q = 1
    build = ""
    Case = 1
    while q < len(a):
        temp = squareWalkFree(toInteger(a[q]), toInteger(a[q+1]))
        q += 2
        print ("Case #" + str(Case) + ": " + str(temp[0]) + " " + str(temp[1]))
        build += ("Case #" + str(Case) + ": " + str(temp[0]) + " " + str(temp[1]) + "\n")
        Case += 1
    clean = ""
    for e in range(0,len(build)-1):
        clean += build[e]
    saveAndPrint(clean)
run()
