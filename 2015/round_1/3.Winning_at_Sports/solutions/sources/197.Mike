package main

import (
  "os"
  "bufio"
  "strconv"
  "fmt"
  "strings"
)

func scanInt(scanner *bufio.Scanner) int {
  scanner.Scan()
  x, _ := strconv.Atoi(scanner.Text())
  return x
}

const modulo int64 = 1000000007

func stressFree(a, b int64) int64 {
  if a < 1 {
    return 0
  }
  previous, current := make([]int64, a+1), make([]int64, a+1)
  current[1] = 1
  for i := int64(2); i <= a; i++ {
    previous, current = current, previous
    for j := int64(1); j <= i; j++ {
      current[j] = current[j-1] + previous[j]
      for current[j] >= modulo {
        current[j] -= modulo
      }
    }
  }
  return current[b+1]
}

func stressful(a, b int64) int64 {
  return b
}

func main() {
  scanner := bufio.NewScanner(os.Stdin)
  scanner.Split(bufio.ScanWords)
  writer := bufio.NewWriter(os.Stdout)
  defer writer.Flush()

  numCases := scanInt(scanner)
  for caseIndex := 1; caseIndex <= numCases; caseIndex++ {
    scanner.Scan()
    parts := strings.Split(scanner.Text(), "-")
    a, _ := strconv.ParseInt(parts[0], 10, 64)
    b, _ := strconv.ParseInt(parts[1], 10, 64)
    x := stressFree(a, b)
    y := stressFree(b+1, b)
    writer.WriteString(fmt.Sprintf("Case #%d: %d %d\n", caseIndex, x, y))
  }
}
