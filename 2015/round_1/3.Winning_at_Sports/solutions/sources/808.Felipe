#include <cstdio>

using namespace std;

const int MOD = 1000000007;
const int MAXN = 2010;

int me, opp;
int free[MAXN][MAXN];
int full[MAXN][MAXN];

int calcfree(int remme, int remopp)
{
    if(free[remme][remopp] >= 0)
    {
        return free[remme][remopp];
    }
    
    int ptsme = me - remme;
    int ptsopp = opp - remopp;
    if(ptsopp >= ptsme)
    {
        free[remme][remopp] = 0;
        return 0;
    }
    
    if((remme == 0) || (remopp == 0))
    {
        free[remme][remopp] = 1;
        return 1;
    }
    
    free[remme][remopp] = (calcfree(remme-1, remopp) + calcfree(remme, remopp-1)) % MOD;
    return free[remme][remopp];
}

int calcfull(int remme, int remopp)
{
    if(full[remme][remopp] >= 0)
    {
        return full[remme][remopp];
    }
    
    int ptsme = me - remme;
    int ptsopp = opp - remopp;
    if(ptsopp < ptsme)
    {
        full[remme][remopp] = 0;
        return 0;
    }
    
    if(remopp == 0)
    {
        full[remme][remopp] = 1;
        return 1;
    }
    
    full[remme][remopp] = (calcfull(remme-1, remopp) + calcfull(remme, remopp-1)) % MOD;
    return full[remme][remopp];
    
}

int main()
{
    int t;
    scanf("%d", &t);
    for(int lp=1;lp<=t;++lp)
    {
        scanf("%d-%d", &me, &opp);
        for(int i=0;i<=me;++i)
        {
            for(int j=0;j<=opp;++j)
            {
                free[i][j] = -1;
                full[i][j] = -1;
            }
        }
        
        int respfree = calcfree(me-1, opp);
        int respfull = calcfull(me, opp);
        
        printf("Case #%d: %d %d\n", lp, respfree, respfull);
        
    }
    
    return 0;
}