#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cassert>
#include <cstdlib>

using namespace std;

#define ri(X) scanf("%d", &(X))
#define pi(X) printf("%d", (X))
#define mp(X,Y) make_pair(X,Y)
#define pb(X) push_back(X)
#define lint long long
#define pii pair<int,int>
#define inf 1e9
#define linf 1e18
#define X first
#define Y second
#define all(X) (X).begin(),(X).end()
#define uni(X) X.erase(unique(X.begin(), X.end()), X.end());
#define MOD 1000000007

int t, a, b, dp[2001][2001], dp2[2001][2001];

int f(int ca, int cb) {
  if (ca <= cb) return 0;
  if (ca == a && cb == b) return 1;
  if (dp[ca][cb] != -1) return dp[ca][cb];
  int res = 0;
  res = (ca >= a ? 0 : f(ca+1, cb));
  res += (cb >= b ? 0 : f(ca, cb+1));
  res %= MOD;
  
  return dp[ca][cb] = res;
}

int g(int ca, int cb) {
  if (ca > cb && cb == b) return 1;
  else if (ca > cb) return 0;
  if (dp2[ca][cb] != -1) return dp2[ca][cb];
  int res = 0;
  res = (ca >= a ? 0 : g(ca+1, cb));
  res += (cb >= b ? 0 : g(ca, cb+1));
  res %= MOD;
  
  return dp2[ca][cb] = res;
}

int main(){
  ri(t);
  for (int i = 1; i <= t; i++) {
    cout << "Case #" << i << ": ";
    scanf("%d-%d", &a, &b);
    memset(dp, -1, sizeof dp);
    memset(dp2, -1, sizeof dp2);
    cout << f(1, 0) << " " << g(0, 0) << endl;
  }
  
  return 0;
}
