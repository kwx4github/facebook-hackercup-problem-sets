#include<bits/stdc++.h>

#define MIN(a, b) (((a) < (b))?(a):(b))
#define MAX(a, b) (((a) > (b))?(a):(b))

using namespace std;

const char INPUT[] = "winning_at_sports.txt";
const char OUTPUT[] = "HelloWorld.outp";

const int MAX_SCORE = 2000 + 111;
const int MODULO = 1000000007;

int main(void){
  freopen(INPUT, "r", stdin);
  freopen(OUTPUT, "w", stdout);

  int num_test;
  cin >> num_test;

  for (int id_test = 0; id_test < num_test; ++ id_test){
    int my_score, opp_score;
    cin >> my_score >> opp_score;
    opp_score = -opp_score;
    cout << "Case #" << id_test + 1 << ": ";
    int dp[MAX_SCORE];
    dp[0] = 0;
    for (int id_opp = 0; id_opp <= opp_score; ++ id_opp){
	  for (int id_my = id_opp; id_my <= my_score; ++ id_my){
	    if (id_opp == 0){
		  dp[id_my] = 1;
		} else {
		  if (id_my != id_opp){
		    long long temp = (long long) dp[id_my] + dp[id_my - 1];
			dp[id_my] = temp % MODULO;
		  } else {
		    dp[id_my] = 0;
		  }
		}
      }
    }
	cout << dp[my_score] << " ";//stress-free
	for (int id_opp = 0; id_opp <= opp_score; ++ id_opp){
	  for (int id_my = 0; id_my <= id_opp; ++ id_my){
	    if (id_my == 0){
		  dp[id_my] = 1;
		} else if (id_my == id_opp){
		  dp[id_my] = dp[id_my - 1];
		} else {
		  long long temp = (long long) dp[id_my] + dp[id_my - 1];
          dp[id_my] = temp % MODULO;
		}
	  }
	}
	cout << dp[opp_score] << endl;//stress-full
  }
  return 0;
}
