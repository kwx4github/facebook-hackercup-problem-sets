#include <iostream>
#include <functional>
#include <algorithm>

#include <math.h>
#include <iomanip>

#include <vector>
#include <string>
#include <deque>
#include <set>
#include <map>
#include <queue>

using namespace std;

long long module = 1e9 + 7;

int main() {

	freopen("winning_at_sports.txt", "r", stdin);
	freopen("out.txt", "w", stdout);

	int test_case;

	cin >> test_case;

	for(int tc = 1; tc <= test_case; ++tc) {

		long long stress_free = 0, stressful = 0;

		int my_score, his_score;

		char str;

		cin >> my_score >> str >> his_score;

		if(!his_score) {
			cout << "Case #" << tc << ": " << 1 << ' ' << 0 << endl;
			continue;
		}


		vector<vector<long long>> dp_ful(my_score + 1, vector<long long>(his_score + 1)),
									dp_free(my_score + 1, vector<long long>(his_score + 1));

		for(int i = 0; i <= his_score; ++i) {
			dp_ful[0][i] = 1;
		}

		for(int i = 1; i <= his_score; ++i) {
			for(int j = i; j <= his_score; ++j) {
				dp_ful[i][j] = (dp_ful[i - 1][j] + dp_ful[i][j - 1]) % module;
			}
		}

		stressful = dp_ful[his_score - 1][his_score];

		for(int i = 0; i <= my_score; ++i) {
			dp_free[i][0] = 1;
		}

		for(int i = 2; i <= my_score; ++i) {
			for(int j = 1; j < min(i, his_score); ++j) {
				dp_free[i][j] = (dp_free[i - 1][j] + dp_free[i][j - 1]) % module;
			}
		}

		stress_free = dp_free[my_score][his_score - 1];

		cout << "Case #" << tc << ": " << stress_free % module << ' ' << stressful % module << endl;

	}

    return 0; 
}