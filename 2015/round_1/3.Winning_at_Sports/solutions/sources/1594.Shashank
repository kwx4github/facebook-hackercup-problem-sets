/*
*************************************************************************
* $ Author : honeyslawyer   $
* $ Name   : shashank gupta $
*************************************************************************
*
* Copyright 2014 @ honeyslawyer and shashank gupta
*
************************************************************************/
#include<cstdio>
#include<iostream>
#include<cmath>
#include<conio.h>
#include<cstring>
#include<ctype.h>
#include<algorithm>
#include<vector>
#include<stdlib.h>
#include<map>
#include<queue>
#include<stack>
#include<set>
#include<string>
#include<fstream>
#include<climits>

#define mod 1000000007
#define ll long long

using namespace std;
ll gcd(ll a,ll b) {if(b==0) return a; return gcd(b,a%b);}

ll power(ll b,ll exp,ll m)
 {ll ans=1;
  b%=m;
  while(exp)
   {if(exp&1)
     ans=(ans*b)%m;
    exp>>=1;
	b=(b*b)%m;
   }
  return ans;
 }
long long dp[2010][2010]={0};
int main()
{
    std::ifstream in("input.txt");
    std::streambuf *cinbuf = std::cin.rdbuf(); //save old buf
    std::cin.rdbuf(in.rdbuf()); //redirect std::cin to in.txt!

    std::ofstream out("out.txt");
    std::streambuf *coutbuf = std::cout.rdbuf(); //save old buf
    std::cout.rdbuf(out.rdbuf());
    
    int t;
    cin>>t;
    for(int z=1;z<=t;z++)
    {
        memset(dp,0,sizeof(dp));
        int m,n;
        char f;
        cin>>n>>f>>m;
        dp[0][0]=1;
        dp[1][0]=1;
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
                if(i==1&j==0);
                else if(i>j)
                {
                    if(i-1>j)
                    {
                        dp[i][j]=(dp[i-1][j]+dp[i][j-1])%mod;
                    }
                    else
                    {
                        dp[i][j]=dp[i][j-1]%mod;
                    }
                }

            }
        }
        cout<<"Case #"<<z<<": ";
        cout<<dp[n][m]<<" ";
        memset(dp,0,sizeof(dp));
        dp[0][0]=1;
        for(int i=0;i<=m;i++)
        {
            for(int j=0;j<=m;j++)
            {
                if(i==0&&j==0)
                {
                }
                else if(j>=i)
                {
                    if(i-1<=j&&i<=j-1&&i>0&&j>0)
                    dp[i][j]=(dp[i-1][j]+dp[i][j-1])%mod;
                    else if(i-1<=j&&i>0)
                    dp[i][j]=dp[i-1][j];
                    else if(i<=j-1&&j>0)
                    dp[i][j]=dp[i][j-1];
                }
            }
        }
        cout<<dp[m][m]<<endl;

    }
    printf("done\n");






getch();
return 0;
/*checklist
1)getch() and conio.h removed.*/
}
