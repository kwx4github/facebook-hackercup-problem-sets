#include <bits/stdc++.h>
using namespace std;

#define R(i,a,b) for(int i=a;i<b;i++)
#define RE(i,a,b) for(int i=a;i<=b;i++)
#define RR(i,a,b) for(int i=a;i>b;i--)
#define RRE(i,a,b) for(int i=a;i>=b;i--)
#define F(i,n) for(int i=0;i<n;i++)
#define FE(i,n) for(int i=0;i<=n;i++)
#define FR(i,n) for(int i=n;i>0;i--)
#define FRE(i,n) for(int i=n;i>=0;i--)
#define mp(a,b) make_pair(a,b)
#define pii pair <int, int>
#define pb push_back
#define ft first
#define sd second
#define LL long long
#define gc getchar_unlocked
#define pc putchar_unlocked

inline void get(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

#define mod 1000000007LL
LL dpr[2005][2005];

int main()
{
	memset(dpr,0,sizeof(dpr));	
	// memset(dpf,0,sizeof(dpf));
	dpr[0][0] = 1LL;
	F(i,2004)
	{
		dpr[i][0] = 1LL;
		dpr[0][i] = 1LL;
	}

	RE(i,1,2004)
	{
		R(j,1,i)
		{
			if (j+1 == i)
				dpr[i][j] = dpr[i][j-1];
			else dpr[i][j] = (dpr[i-1][j] + dpr[i][j-1])%mod;
		}
	}

	FE(j,2004)
	{
		RE(i,1,j)
		{
			if (i == j)
				dpr[i][j] = dpr[i-1][j];
			else dpr[i][j] = (dpr[i-1][j] + dpr[i][j-1])%mod;
		}
	}

	int T;
	get(T);
	for (int __rep = 1; __rep <=T; __rep++)
	{
		int n,m;
		scanf("%d-%d",&n,&m);
		if (m!=0)
			cout << "Case #"<<__rep<<": "<<dpr[n][m]<< " " << dpr[m-1][m] << endl;
		else 
			cout << "Case #"<<__rep<<": "<<dpr[n][m]<< " 1" << endl;
	}
	return 0;
}