#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cmath>
#include <cassert>
#include <cstring>
#include <ext/numeric>
#include <gmpxx.h>			// -lgmpxx -lgmp
using namespace std ;
using namespace __gnu_cxx ;
typedef mpz_class BIGNUM ;
typedef long long LL ;
typedef pair<int,int> PII ;
typedef vector<int> VI ;
const int INF = 1e9+100 ;
const LL INFLL = (LL)INF * (LL)INF ;
#define REP(i,n) for(i=0;i<(n);++i)
#define ALL(c) c.begin(),c.end()
#define VAR(v,i) __typeof(i) v=(i)
#define FOREACH(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)
#define CLEAR(t) memset(t,0,sizeof(t))
#define PB push_back
#define MP make_pair
#define FI first
#define SE second

template<class T1,class T2> ostream& operator<<(ostream &s, const pair<T1,T2> &x) { s<< "(" << x.FI << "," << x.SE << ")"; return s;}
template<class T>           ostream& operator<<(ostream &s, const vector<T>   &t) { FOREACH(it, t) s << *it << " " ; return s ; }
template<class T>           ostream& operator<<(ostream &s, const set<T>      &t) { FOREACH(it, t) s << *it << " " ; return s ; }
template<class T1,class T2> ostream& operator<<(ostream &s, const map<T1, T2> &t) { FOREACH(it, t) s << *it << " " ; return s ; }

///////////////////////////////////////////

const int MOD = 1000000007 ;
const int MAXN = 2100 ;

LL A[MAXN][MAXN] ;
LL B[MAXN][MAXN] ;

int main(int argc, char* argv[])
{
	ios_base::sync_with_stdio(0) ;
	
	A[0][0] = 1 ;
	for(int i=0 ; i<MAXN ; i++)
		for(int j=0 ; j<i ; j++) {
			if(i>0) A[i][j] += A[i-1][j] ;
			if(j>0) A[i][j] += A[i][j-1] ;
			
			A[i][j] %= MOD ;
		}
	
	B[0][0] = 1 ;
	for(int i=0 ; i<MAXN ; i++)
		for(int j=i ; j<MAXN ; j++) {
			if(i>0) B[i][j] += B[i-1][j] ;
			if(j>0) B[i][j] += B[i][j-1] ;
			
			B[i][j] %= MOD ;
		}
	
	int Tests ;
	cin >> Tests ;
	for(int test=1 ; test<=Tests ; test++) {
		//cerr << "Case #" << test << endl ;
		cout << "Case #" << test << ": " ;
		int x, y ;
		char ignore ;
		cin >> x >> ignore >> y ;
		cout << A[x][y] << " " ;
		if(y==0) cout << 1 << endl ;
		else {
			LL s=0 ;
			for(int z=0 ; z<=y-1 ; z++) {
				s += B[z][y-1] ;
				s %= MOD ;
			}
			cout << s << endl ;
		}
	}
}

