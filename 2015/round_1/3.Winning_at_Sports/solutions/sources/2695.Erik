using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Round1_Winning
{
	class Program
	{

		static void Main(string[] args)
		{
			var cases = Read.Int();

			using (var s = new StreamWriter(@"c:\users\krox\Downloads\HackerCup\Winning.out", false))
			{
				for (var t = 0; t < cases; t++)
				{
					var answer = "Case #" + (t + 1) + ": " + Solve() + "\n";
					Console.Write(answer);
					s.Write(answer);
				}
			}

			Console.ReadLine();
		}

		static string Solve()
		{
			var inp = Read.String().Split('-');
			var H = int.Parse(inp[0]);
			var A = int.Parse(inp[1]);

			
			return Free(H, A) + " " + Full(A, A-1);
		}

		const long Modulu = 1000000007L;

		static long Free(int a, int b)
		{
			var res = new long[a+b+2, Math.Max(a, b) + 2];

			res[1, 1] = 1;
			for(int gls=1; gls < a + b; gls++)
			{
				var myGls = Math.Max(
					(gls / 2) + 1,	// My goals > Their goals
					gls - b);

				for (; myGls <= Math.Min(gls, a); myGls++)
				{
					res[gls + 1, myGls + 1] += res[gls, myGls];
					res[gls + 1, myGls] += res[gls, myGls];
					res[gls + 1, myGls + 1] %= Modulu;
					res[gls + 1, myGls] %= Modulu;
				}
			}

			return res[a + b, a];
		}

		static long Full(int a, int b)
		{
			if (b == -1)
			{
				return 1;
			}

			var res = new long[6000, 6000];

			res[1, 1] = 1;
			for (int gls = 1; gls < a + b; gls++)
			{
				var myGls = Math.Max(
					(gls / 2) + (gls % 2),
					gls - b);

				for (; myGls <= Math.Min(gls, a); myGls++)
				{
					res[gls + 1, myGls + 1] += res[gls, myGls];
					res[gls + 1, myGls] += res[gls, myGls];
					res[gls + 1, myGls + 1] %= Modulu;
					res[gls + 1, myGls] %= Modulu;
				}
			}

			return res[a + b, a];
		}
	}

	public static class Read
	{
		private static string[] input = ReadAllText().Split(new[] { ' ', '\r', '\n', '\t' }, StringSplitOptions.RemoveEmptyEntries);

		private static int indexer = 0;

		public static int Int()
		{
			return int.Parse(input[indexer++]);
		}

		public static int[] Ints(int c)
		{
			return Enumerable.Range(0, c).Select(t => Int()).ToArray();
		}

		public static long Long()
		{
			return long.Parse(input[indexer++]);
		}

		public static string String()
		{
			return input[indexer++];
		}

		private static string ReadAllText()
		{
			return File.ReadAllText(@"c:\users\krox\Downloads\HackerCup\Winning.in");
		}
	}
}
