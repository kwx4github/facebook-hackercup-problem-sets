//
//  main.cpp
//  hack_cup_4
//
//  Created by hijackyan on 1/17/15.
//  Copyright (c) 2015 haker cup. All rights reserved.
//

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
const int MAX = 2005;
const int MOD = 1000000007;

int dpfree[MAX][MAX];
int dpstress[MAX][MAX];

void calfree()
{
    memset(dpfree, sizeof(dpfree), 0);
    dpfree[1][0] = 1;
    for(int i = 2; i < MAX; i++)
    {
        for(int j = 0; j < i; j++)
        {
            if(j > 0)
                dpfree[i][j] += dpfree[i][j-1];
            dpfree[i][j] += dpfree[i-1][j];
            dpfree[i][j] %= MOD;
        }
    }
}
void calstress()
{
    memset(dpstress, sizeof(dpstress), 0);
    dpstress[0][0] = 1;
    for(int i = 0; i < MAX; i++)
    {
        for(int j = i; j < MAX; j++)
        {
            if(j > i)
                dpstress[i][j] += dpstress[i][j-1];
            if(i > 0)
            dpstress[i][j] += dpstress[i-1][j];
            dpstress[i][j] %= MOD;
        }
    }
}
int main(int argc, const char * argv[]) {
    calfree();
    calstress();
    int n, ca = 1;
    cin>>n;
    while(n--)
    {
        string score;
        cin>>score;
        int i = 0;
        while(score[i] != '-') i++;
        int a = stoi(score.substr(0, i));
        int b = stoi(score.substr(i+1, score.length()-i-1));
        cout<<"Case #"<<ca++<<": ";
        cout<<dpfree[a][b]<<" "<<dpstress[b][b]<<endl;
        

    }
}

