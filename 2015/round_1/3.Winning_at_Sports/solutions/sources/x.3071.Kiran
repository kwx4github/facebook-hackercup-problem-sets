#include <iostream>
#include <vector>
#include <bitset>
#include <cmath>
using namespace std;
typedef unsigned long long ull;

int MOD=1000000007;

int a,b;
string line;
vector< vector<int> > matrix;

void initialize()
{
//Initialize matrix
    matrix.resize(a+1);
    for(int i=0; i<=a; i++)
    {
        matrix[i].resize(b+1);
        for(int j=0; j<=b; j++)
        {
            matrix[i][j]=-1;
        }
    }

}


int getStressFree(int num1, int num2)
{
    //cout<<num1<<" "<<num2<<"\n";
    if(num1>a||num2>b)
        return 0;
    if(num1<=num2)
        return 0;
    if(num1==a&&num2==b)
        matrix[num1][num2]=1;
    if(matrix[num1][num2]==-1)
        matrix[num1][num2]= ( getStressFree(num1+1,num2) + getStressFree(num1,num2+1) )%MOD;
    return matrix[num1][num2];
}

int getStressFull(int num1,int num2)
{
    //cout<<num1<<" "<<num2<<"\n";
    if(num1>a||num2>b)
        return 0;
    if(num1>num2&&num2!=b)
        return 0;
    if(num1==a&&num2==b)
        matrix[num1][num2]=1;
    if(matrix[num1][num2]==-1)
        matrix[num1][num2]= ( getStressFull(num1+1,num2) + getStressFull(num1,num2+1) )%MOD;
    return matrix[num1][num2];
}
void getNum()
{
    a=0;
    b=0;
    int i=0;
    while(line[i]!='-')
    {
        a=a*10;
        a+= (int) (line[i]-'0') ;
        i++;
    }
    i++;
    while(i<line.size())
    {
        b=b*10;
        b+= (int) (line[i]-'0') ;
        i++;
    }
}
int main()
{
    int tmax;
    cin>>tmax;
    cin.ignore();
    for(int counter=1; counter<=tmax; counter++)
    {
        getline(cin,line);
        getNum();
        initialize();
        int stressFree=getStressFree(1,0);
        initialize();
        int stressFull=getStressFull(0,1);
        cout<<"Case #"<<counter<<": "<<stressFree<<" "<<stressFull<<"\n";
    }
}
