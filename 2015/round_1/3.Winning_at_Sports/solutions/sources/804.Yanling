#include <vector>
#include <list>
#include <queue>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <tr1/unordered_set>
#include <tr1/unordered_map>

using namespace std;
using namespace tr1;

const int mod=(int)1e9+7;
const int maxn=2005;

int dp[maxn][maxn];

void init(){
    memset(dp,0,sizeof(dp));
    dp[0][0]=1;
    dp[1][0]=1;
    static int i,j;
    for(i=0;i<=2000;i++)
    for(j=0;j<=2000;j++){
        //if(i<=5&&j<=5)printf("%d:%d %d\n",i,j,dp[i][j]);
        if(i<=j){
            if(i+1<=j){
                //if(i==0&&j==0)puts("2333333");
                dp[i+1][j]+=dp[i][j];
                if(dp[i+1][j]>=mod)dp[i+1][j]-=mod;
            }
            if(i<=j+1){
                dp[i][j+1]+=dp[i][j];
                if(dp[i][j+1]>=mod)dp[i][j+1]-=mod;
            }
        }
        else{
            if(i+1>j){
                dp[i+1][j]+=dp[i][j];
                if(dp[i+1][j]>=mod)dp[i+1][j]-=mod;
            }
            if(i>j+1){
                dp[i][j+1]+=dp[i][j];
                if(dp[i][j+1]>=mod)dp[i][j+1]-=mod;
            }
        }
    }
}

int main(){
    freopen("C-in.txt","r",stdin);
    freopen("C-out.txt","w",stdout);
    init();
    static int T,Cas;
    scanf("%d",&T);
    for(Cas=1;Cas<=T;Cas++){
        static int a,b;
        scanf("%d-%d",&a,&b);
        //printf("%d:%d\n",a,b);
        printf("Case #%d: %d %d\n",Cas,dp[a][b],dp[b][b]);
    }
    return 0;
}
