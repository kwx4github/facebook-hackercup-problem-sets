#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <complex>
#include <string>
#include <sstream>
#include <algorithm>
#include <numeric>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <iostream>
#include <map>
#include <set>
using namespace std;
typedef pair<int,int> P;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
#define pu push
#define pb push_back
#define mp make_pair
#define eps 1e-9
#define INF 2000000000
#define sz(x) ((int)(x).size())
#define fi first
#define sec second
#define SORT(x) sort((x).begin(),(x).end())
#define all(x) (x).begin(),(x).end()
#define EQ(a,b) (abs((a)-(b))<eps)
#define MOD 1000000007
ll dp1[2010][2010],dp2[2010][2010];
ll rec1(int i,int j)
{
	if(i==1&&j==0)return 1;
	if(dp1[i][j]!=-1)return dp1[i][j];
	ll res = 0ll;
	if(i-1>j)res = rec1(i-1,j)%MOD;
	if(j>0)res = (res+rec1(i,j-1))%MOD;
	return dp1[i][j]=res;
}
ll rec2(int i,int j)
{
	if(j==0)return 1;
	if(i==0&&j==1)return 1;
	if(dp2[i][j]!=-1)return dp2[i][j];
	if(i>j)return rec2(j,j);
	ll res = 0;
	if(i>0)res = rec2(i-1,j)%MOD;
	if(i<=j-1)res = (res+rec2(i,j-1))%MOD;
	return dp2[i][j]=res;
}
int main()
{
	int T;
	scanf("%d",&T);
	for(int t=0;t<T;t++)
	{
		memset(dp1,-1,sizeof(dp1));
		memset(dp2,-1,sizeof(dp2));
		string s;
		cin >> s;
		int a=0,b=0;
		bool flag = true;
		for(int i=0;i<s.size();i++)
		{
			if(s[i]=='-'){flag=false;continue;}
			if(flag)a = a*10 + (s[i]-'0');
			else b = b*10 + (s[i]-'0');
		}
		printf("Case #%d: %lld %lld\n",t+1,rec1(a,b),rec2(a,b));
	}
	return 0;
}
