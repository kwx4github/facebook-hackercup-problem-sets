//Bismillahir Rahmanir Rahmeem

#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<math.h>
#include<string.h>
#include<map>
#include<queue>
#include<stack>
#include<utility>
#include<stdlib.h>
#include<string>
#include<set>
#include<iomanip>
#define INF 1e9
#define lld long long int
#define clr(a) memset(a,0,sizeof(a))
#define reset(a) memset(a,-1,sizeof(a))
#define act(a) memset(a,1,sizeof(a))
#define setinf(a) memset(a,0b01111111,sizeof(a));
#define FRO freopen("input.txt","r",stdin);
#define FROut freopen("output.txt","w",stdout);
#define ui unsigned int
#define came "came"
#define pii pair<int,int>
#define plii pair<long long int, int>
#define pll pair<long long,long long>
#define pic pair<int,char>
#define ninf (-1e9)-2
#define inf (1e9)+2
#include<fstream>
#include <assert.h>

#define foreach(x) for(__typeof(x.begin()) it=x.begin(); it!=x.end();it++)

using namespace std;
#define pid pair<int,double>
#define pdi pair<double,int>

#define pb push_back
#define mp make_pair
#define pri(x) printf("%d\n",x)
#define pi 3.14159265359
#define X first
#define Y second

int memo1[2001][2001];
int memo2[2001][2001];

int e1,e2;

int mod=1000000007;

int dp1(int p1, int p2)
{
    if(((p1 || p2) && p1<=p2) || p1>e1 || p2>e2)
    {
        return 0;
    }
    else if(p1==e1 && p2==e2)
    {
        return 1;
    }
    else if(memo1[p1][p2]!=-1)
    {
        return memo1[p1][p2];
    }
    else
    {
        int ans=0;
        ans=dp1(p1+1,p2);
        ans=(ans+dp1(p1,p2+1))%mod;
        return memo1[p1][p2]=ans;
    }
}

int dp2(int p1, int p2)
{
    if(((p1 || p2) && p2<e2 && p1>p2) || p1>e1 || p2>e2)
    {
        return 0;
    }
    else if(p1==e1 && p2==e2)
    {
        return 1;
    }
    else if(memo2[p1][p2]!=-1)
    {
        return memo2[p1][p2];
    }
    else
    {
        int ans=0;
        ans=dp2(p1+1,p2);
        ans=(ans+dp2(p1,p2+1))%mod;
        return memo2[p1][p2]=ans;
    }
}

int main()
{
    FRO
    FROut
    int t,ca;
    scanf("%d",&t);
    for(ca=1;ca<=t;ca++)
    {
        scanf("%d-%d",&e1,&e2);
        reset(memo1);
        reset(memo2);
        int ans1=dp1(0,0);
        int ans2=dp2(0,0);
        printf("Case #%d: %d %d\n",ca,ans1,ans2);
        //cout<<ans1<<endl;
    }
    return 0;
}
