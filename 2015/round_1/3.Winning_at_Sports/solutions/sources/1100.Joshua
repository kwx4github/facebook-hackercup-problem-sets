#include <cstdio>

typedef long long ll;

const ll MOD = (1e9)+7;
const int MAX_N = 2005;

int A, B;
ll free[MAX_N][MAX_N];
ll full[MAX_N][MAX_N];

void reset(void) {
    for(int i=0;i<MAX_N;i++) {
        for(int j=0;j<MAX_N;j++) {
            free[i][j] = 0ll;
            full[i][j] = 0ll;
        }
    }
}

int main() {
    int T;
    scanf("%d",&T);

    for(int z=1;z<=T;z++) {
        reset();
        scanf("%d-%d",&A,&B);

        free[A][B] = 1ll;
        full[A][B] = 1ll;

        // assume a valid state
        for(int tot=A+B-1;tot>=0;tot--) {
            // my score = i
            for(int i=0;i<=A;i++) {
                // their score = j
                int j = tot-i;

                // stress free
                free[i][j] = 0ll;
                if(i > j || tot == 0) {
                    if(i < A) {
                        free[i][j] = (free[i][j]+free[i+1][j])%MOD;
                    }

                    if(i > j+1 && j < B) {
                        free[i][j] = (free[i][j]+free[i][j+1])%MOD;
                    }
                }

                // stressful
                full[i][j] = 0ll;
                if(j == B) {
                    full[i][j] = full[i+1][j];
                } else {
                    full[i][j] = 0ll;
                    if(i <= j) {
                        if(i+1 <= j) {
                            full[i][j] = (full[i][j]+full[i+1][j])%MOD;
                        }
                        full[i][j] = (full[i][j]+full[i][j+1])%MOD;
                    }
                }
            }
        }
        printf("Case #%d: %lld %lld\n",z,free[0][0],full[0][0]);
    }
    return 0;
}
