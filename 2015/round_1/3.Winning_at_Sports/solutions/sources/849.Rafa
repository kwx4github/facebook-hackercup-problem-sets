#include <iostream>
#include <vector>
using namespace std;

typedef long long ll;
typedef vector<ll> vi;
typedef vector<vi> vvi;

const int MOD = 1000000007;
vvi sf, sl;

ll ddp(int a, int b) {
  ll& res = sl[a][b];
  if (res != -1) return res;
  if (!b) return res = 1;
  res = ddp(a, b-1);
  if (a-1 > b) res += ddp(a-1, b);
  return res = res%MOD;
}

ll dpp(int a, int b) {
  ll& res = sf[a][b];
  if (res != -1) return res;
  if (a > b) return res = dpp(b, b);
  if (!a) return res = 1;
  res = dpp(a-1, b);
  if (b > a) res += dpp(a, b-1);
  return res = res%MOD;
}

int main() {
  sf = vvi(2014, vi(2014, -1));
  sl = vvi(2014, vi(2014, -1));
  int T; cin >> T;
  for (int cas = 1; cas <= T; ++cas) {
    int a, b; char x; cin >> a >> x >> b;
    cout << "Case #" << cas << ": " << ddp(a, b) << " " << dpp(a, b) << endl;
  }
}
