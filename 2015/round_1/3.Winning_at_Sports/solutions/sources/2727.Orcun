#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <map>
#include <set> 
#include <sstream>
#include <fstream>
#include <utility>
#include <iomanip>
#include <string>
#include <vector>
#include <stack>
#include <queue>
using namespace std;
#define REP(i,a) for(int i=0;i<a;i++)
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define FOREACH(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define SIZE(c) (int)c.size()
#define ALL(c) (c).begin(),(c).end() 
typedef pair<int, int> PII;
vector<int> primes;
const int MOD = 1000000007;
int A, B, dp[2005][2005], dp2[2005][2005];
int go(int x, int y) {
	if (x <= y || x > A || y > B) {
		return 0;
	}
	if (x == A && y == B) {
		return 1;
	}
	if (dp[x][y] != -1) return dp[x][y];
	int a = go(x + 1, y);
	int b = go(x, y + 1);
	return dp[x][y] = (a + b) % MOD;
}
int go2(int x, int y){
	if (x == A && y == B) {
		return 1;
	}
	if (x > A || y > B || (x > y && y != B)) {
		return 0;
	}
	if (dp2[x][y] != -1) return dp2[x][y];
	int a = go2(x + 1, y);
	int b = go2(x, y + 1);
	return dp2[x][y] = (a + b) % MOD;
}
int solve() {
	memset(dp, -1, sizeof dp);
	int ret = go(1, 0);
	return ret;
}
int solve2() {
	memset(dp2, -1, sizeof dp2);
	int ret = go2(0, 0);
	return ret;
}
int main() {
	freopen("sports.txt", "r", stdin);
		freopen("sports.out", "w", stdout);
	int T; cin>>T;
	REP(t, T){
		char c;
		cin>>A>>c>>B;
		cout << "Case #" << (t + 1) << ": " << solve()<<" "<<solve2()<<endl; 
	}
	return 0;
}
