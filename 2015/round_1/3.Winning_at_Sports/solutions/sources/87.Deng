#include<stdio.h>
#include<string.h>
const int mod = 1000000007;
struct Int
{
    Int () {}
    Int (int _d) {d = _d;}
    void set(int _d) {d =_d;}
    Int operator + (const Int& o) const{
        int t = d+o.d;
        if(t>=mod) t-=mod;
        return Int(t);
    }
    int d;
};
bool used[2001][2001];
Int dp[2001][2001];
Int solve(int s,int t)
{
    if(s<0||t<0) return Int(0);
    if(used[s][t]) return dp[s][t];
    if(s>t){
        dp[s][t] = solve(s,t-1);
        if(s-1>t) dp[s][t] = dp[s][t]+solve(s-1,t);
    }else{
        dp[s][t] = solve(s-1,t);
        if(s<=t-1) dp[s][t] = dp[s][t]+solve(s,t-1);
    }
    used[s][t] = true;
    return dp[s][t];
}
int main ()
{
    int T,a,b;
    Int free,full;
    used[0][0] = used[1][0] = used[0][1] = true;
    dp[0][0] = dp[1][0] = dp[0][1] = Int(1);
    scanf("%d",&T);
    for(int _ = 1;_<=T;_++){
        scanf("%d-%d",&a,&b);
        free = solve(a,b);
        full.set(0);
        for(int x =0;x<=b-1;x++){
            full = full+solve(x,b-1);
        }
        if(b==0) full.d = 1;
        printf("Case #%d: %d %d\n",_,free.d,full.d);
    }
    return 0;
}