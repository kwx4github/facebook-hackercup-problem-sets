#include <bits/stdc++.h>

using namespace std;

// Useful constants
#define INF                         numeric_limits<int>::max()
#define EPS                         1e-9

// Useful hardware instructions
#define bitcount                    __builtin_popcount
#define gcd                         __gcd
int A,B;
int memoiz[2002][2002];
int freeRecurse(int a, int b){
	if(a==A && b==B)
		return 0;
	if(a==A || b==B)
		return 1;
	if(memoiz[a][b]!=-1) return memoiz[a][b];
	if(a==b)
		return freeRecurse(a+1,b);
	if(a==b+1)
		return freeRecurse(a+1,b);
	return memoiz[a][b] = (freeRecurse(a+1,b) + freeRecurse(a,b+1))%1000000007;
}
int fullRecurse(int a, int b){
	if(a==A && b==B)
		return 0;
	if(a==A || b==B)
		return 1;
	if(memoiz[a][b]!=-1) return memoiz[a][b];	
	if(a==b)
		return fullRecurse(a,b+1);
	if(b>a)
		return memoiz[a][b] = (fullRecurse(a,b+1) + fullRecurse(a+1,b))%1000000007;
}
int main(){
	int t,c=1;
	char ch;
	scanf("%d",&t);
	while(t--){
		scanf("%d%c%d",&A,&ch,&B);
		memset(memoiz,-1,sizeof memoiz);
		int freeAnswer = freeRecurse(0,0);
		printf("Case #%d: %d ",c++,freeAnswer);
		memset(memoiz,-1,sizeof memoiz);
		int fullAnswer = fullRecurse(0,0);
		printf("%d\n",fullAnswer);
	}
	return 0;
}
