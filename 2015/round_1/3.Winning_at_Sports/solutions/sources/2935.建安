#include <cstdio>
#include <cstring>
#include <stack>
using namespace std;
typedef pair<int, int> P;
#define M 1000000007
#define A first
#define B second
int pro[2001][2001], stress_free[2001][2001], stressful[2001][2001];
int main()
{
	int T, a, b, sub;
	stack<P> S;
	P tmp, ans;
	memset(stress_free, 0, sizeof(stress_free));
	memset(stressful, 0, sizeof(stressful));
	memset(pro, 0, sizeof(pro));
	for (int i = 0 ; i < 2001 ; i++)
		stress_free[0][i] = stress_free[i][0] = stressful[0][i] = stressful[i][0] = 1;
	scanf("%d", &T);
	for (int cases = 1 ; cases <= T ; cases++){
		scanf("%d-%d", &a, &b);
		while (!S.empty())
			S.pop();
		S.push(P(a, b));
		while (!S.empty()){
			tmp = S.top();
			if (pro[tmp.A][tmp.B] == 2){
				stress_free[tmp.A][tmp.B] = (stress_free[tmp.A][tmp.B] + sub) % M;
				sub = 0;
				pro[tmp.A][tmp.B] = 0;
				if ((tmp.A - 1) > tmp.B){
					pro[tmp.A][tmp.B] = 1;
					sub = 0;
					S.push(P(tmp.A - 1, tmp.B));
					continue;
				}
			}
			if (pro[tmp.A][tmp.B] == 1){
				stress_free[tmp.A][tmp.B] = (stress_free[tmp.A][tmp.B] + sub) % M;
				pro[tmp.A][tmp.B] = 0;
				continue;
			}
			if (stress_free[tmp.A][tmp.B] == 0){
				pro[tmp.A][tmp.B] = 2;
				if (tmp.B > 0)
					S.push(P(tmp.A, tmp.B - 1));
				continue;
			}
			if (stress_free[tmp.A][tmp.B] != 0){
				sub = stress_free[tmp.A][tmp.B];
				S.pop();
			}
		}
		ans.A = sub;
		while (!S.empty())
			S.pop();
		S.push(P(a, b));
		while (!S.empty()){
			tmp = S.top();
			if (pro[tmp.A][tmp.B] == 2){
				stressful[tmp.A][tmp.B] = (stressful[tmp.A][tmp.B] + sub) % M;
				sub = 0;
				pro[tmp.A][tmp.B] = 0;
				if (tmp.A < tmp.B){
					pro[tmp.A][tmp.B] = 1;
					sub = 0;
					S.push(P(tmp.A, tmp.B - 1));
					continue;
				}
			}
			if (pro[tmp.A][tmp.B] == 1){
				stressful[tmp.A][tmp.B] = (stressful[tmp.A][tmp.B] + sub) % M;
				pro[tmp.A][tmp.B] = 0;
				continue;
			}
			if (stressful[tmp.A][tmp.B] == 0){
				pro[tmp.A][tmp.B] = 2;
				if (tmp.A > 0)
					S.push(P(tmp.A - 1, tmp.B));
				continue;
			}
			if (stressful[tmp.A][tmp.B] != 0){
				sub = stressful[tmp.A][tmp.B];
				S.pop();
			}
		}
		ans.B = sub;
		printf("Case #%d: %d %d\n", cases, ans.A, ans.B);
	}
	return 0;
}