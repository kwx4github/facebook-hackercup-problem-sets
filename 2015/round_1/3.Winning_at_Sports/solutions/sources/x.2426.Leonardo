import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class WinningAtSports {
	
	private static final String TEMPLATE = "Case #%d: %s";
	private static final int MOD = 1000000007;
	
	public Output solve(Input input) {
		
		int[][] scoreTable = scoreArray(input);
		
		// stress-free
		for (int i = 1; i <= input.against; i++) {
			for (int j = i + 1; j <= input.myscore; j++) {
				scoreTable[i][j] = (scoreTable[i-1][j] + scoreTable[i][j-1]) % MOD;
			}
		}
		
		// stressful
		for (int i = 1; i <= input.against; i++) {
			for (int j = 1; j < i; j++) {
				scoreTable[i][j] = (scoreTable[i-1][j] + scoreTable[i][j-1]) % MOD;
			}
			scoreTable[i][i] = scoreTable[i][i-1];
		}
		
		int stressFree = scoreTable[input.against][input.myscore];
		int stressful = input.against == 0 ? 0 : scoreTable[input.against][input.against];
		
		return new Output(stressFree, stressful);
	}



	private int[][] scoreArray(Input input) {
		int[][] scoreTable = new int[input.against + 1][input.myscore + 1];
		
		// initialize first row and column
		for (int i = 0; i <= input.against; i++) {
			scoreTable[i][0] = 1;
		}
		Arrays.fill(scoreTable[0], 1);
		return scoreTable;
	};
	
	
	
	/*****************/
	
	public static List<Input> readInput(BufferedReader reader) throws IOException {
		String numOfLines = reader.readLine();
		int n = Integer.parseInt(numOfLines);

		List<Input> input = new ArrayList<>();

		for (int i = 0; i < n; i++) {
			String line = reader.readLine();
			String[] tokens = line.split("-");
			
			int myscore = Integer.parseInt(tokens[0]);
			int against = Integer.parseInt(tokens[1]);
			
			Input in = new Input(myscore, against);
			input.add(in);
		}

		return input;
	}
	
	public static class Input {

		public final int myscore;
		public final int against;
		
		public Input(int myscore, int against) {
			this.myscore = myscore;
			this.against = against;
		}

	}

	public static class Output {

		private final int stressFree;
		private final int stressful;

		public Output(int stressFree, int stressful) {
			this.stressFree = stressFree;
			this.stressful = stressful;
		}

		@Override
		public String toString() {
			return Integer.toString(stressFree) + " " + Integer.toString(stressful);
		}
	}
	
	/**************************************************************************/

	public static void main(String[] args) {
		WinningAtSports.start();
	}
		
	private static List<Output> solve(List<Input> input) {
		List<Output> output = new ArrayList<>(input.size());
		int i = 0;
		for (Input in : input) {
			System.err.println("resolvendo caso " + ++i);
			output.add((new WinningAtSports()).solve(in));
		}
		return output;
	}
		
	public static void start() {
		try {
			BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
			PrintWriter writer = new PrintWriter(System.out);

			List<Input> input = readInput(reader);
			List<Output> output = solve(input);
			writeOutput(output, writer);

			reader.close();
			writer.close();

		} catch (IOException e) {
			throw new RuntimeException(e);
		}
	}
		
	private static void writeOutput(List<Output> output, PrintWriter writer) {
		for (int i = 0; i < output.size(); i++) {
			String line = String.format(TEMPLATE, i + 1, output.get(i));
			writer.println(line);
		}
	}
}
