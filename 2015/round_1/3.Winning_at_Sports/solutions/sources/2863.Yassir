#include <iostream>
#include <cstdio>
#include <cstring>
#include <iomanip>
#include <vector>
#include <string>
#include <fstream>
#include <sstream>
#include <list>
#include <cctype>
#include <algorithm>
#include <deque>
#include <stack>
#include <queue>
#include <cmath>
#include <sstream>
#include <map>
#include <functional>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <ctime>
#include <complex>
#define INT_MAX 2147483647
#define INT_MIN -2147483648
#define PI acos(-1.0)
#define E 2.71828182845904523536
#define sz(X) (int)(X).size()
#define all(X) (X).begin(),(X).end()
#define allr(X) (X).rbegin(),(X).rend()
#define lst(X) (X)[sz((X))-1]
#define mset(X,s) memset((X),(s),sizeof(X))
typedef long long ll;

using namespace std;
int DP[2001][2001][2];
int fi,fj;
int mod=1e9+7;
int stress(int i,int j,bool state)
{
    if(i==fi && j==fj)
        return 1;
    if(i>fi || j>fj)
        return 0;
    if(!state)
        if(j>=i)
            return 0;
    if(state)
        if(i>j && j<fj)
            return 0;
    int& ret=DP[i][j][state];
    if(ret!=-1)
        return ret;
    ret=0;
    ret=stress(i+1,j,state)%mod+stress(i,j+1,state)%mod;
    return ret%mod;
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("winning_at_sports.txt","rt",stdin);
        freopen("winning_at_sports_out.txt","wt",stdout);
    #endif // ONLINE_JUDGE
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int t;
    cin>>t;
    for(int x=1;x<=t;x++)
    {
        char c;
        cin>>fi>>c>>fj;
        mset(DP,-1);
        cout<<"Case #"<<x<<": "<<stress(1,0,0)<<" "<<(fj==0?1:stress(0,1,1))<<endl;
    }
    return 0;

}

