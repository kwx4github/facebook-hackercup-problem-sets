import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;

public class Solution {
	int score1, score2;
	BigInteger mem[][];
	final static BigInteger big = new BigInteger("1000000007");
	final BigInteger minusOne = new BigInteger("-1");
	final BigInteger zero = new BigInteger("0");
	final BigInteger one = new BigInteger("1");

	public Solution(int score1, int score2) {
		super();
		this.score1 = score1;
		this.score2 = score2;
		mem = new BigInteger[score1 + 1][score2 + 1];
		for (int i = 0; i <= score1; i++) {
			for (int j = 0; j <= score2; j++) {
				mem[i][j] = minusOne;
			}
		}
	}

	public static void main(String[] args) throws IOException {
		FileInputStream fis = new FileInputStream("winning_at_sports.txt");
		DataInputStream in = new DataInputStream(fis);
		BufferedReader br = new BufferedReader(new InputStreamReader(in));
		FileWriter fw = new FileWriter(new File("output.txt"));
		String line = br.readLine();
		int T = Integer.parseInt(line);
		for (int i = 0; i < T; i++) {
			line = br.readLine();
			String arr[] = line.split("-");
			int score1 = Integer.parseInt(arr[0]);
			int score2 = Integer.parseInt(arr[1]);
			Solution sol = new Solution(score1, score2);
			fw.write("Case #" + (i + 1) + ": " + sol.stressFree(1, 0).mod(big) + " " + sol.stressful(0, 0).mod(big));
			if (i + 1 < T)
				fw.write("\n");
		}
		fw.flush();
	}

	BigInteger stressFree(int s1, int s2) {
		if (s2 >= s1 || s1 > score1 || s2 > score2)
			return zero;
		if (!mem[s1][s2].equals(minusOne))
			return mem[s1][s2];
		if (s1 == score1 && s2 == score2)
			return one;
		return mem[s1][s2] = (stressFree(s1 + 1, s2).add(stressFree(s1, s2 + 1)));
	}

	BigInteger stressful(int s1, int s2) {
		if ((s1 > s2 && s2 < score2) || s1 > score1 || s2 > score2)
			return zero;
		if (!mem[s1][s2].equals(minusOne))
			return mem[s1][s2];
		if (s1 == score1 && s2 == score2)
			return one;
		return mem[s1][s2] = (stressful(s1 + 1, s2).add(stressful(s1, s2 + 1)));
	}
}
