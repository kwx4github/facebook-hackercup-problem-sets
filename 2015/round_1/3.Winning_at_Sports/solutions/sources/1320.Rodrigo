#include <stdlib.h>
#include <stdio.h>
#define MODULO 1000000007

int mem[2001][2001];


int count_stressful(int fA, int fB, int cA, int cB)
{
	if (cB == fB || cA == fA)
		return 1;
	
	if (mem[cA][cB] != -1)
		return mem[cA][cB];
	else
	{
		if (cB > cA)
		{
			mem[cA][cB] = (count_stressful(fA, fB, cA+1, cB)%MODULO + count_stressful(fA, fB, cA, cB+1)%MODULO)%MODULO;
		}
		else
		{
			mem[cA][cB] = count_stressful(fA, fB, cA, cB+1)%MODULO;
		}
	}
	return mem[cA][cB];
}

int count_stressfree(int fA, int fB, int cA, int cB)
{
	if (cA == fA || cB == fB)
		return 1;
	
	if (mem[cA][cB] != -1)
		return mem[cA][cB];
	else
	{
	
		if (cA - cB > 1)
		{
			mem[cA][cB] = (count_stressfree(fA, fB, cA+1, cB)%MODULO + count_stressfree(fA, fB, cA, cB+1)%MODULO)%MODULO;
		}
		else
		{
			mem[cA][cB] = count_stressfree(fA, fB, cA+1, cB)%MODULO;
		}
	}
	return mem[cA][cB];
}

int memreset(int A, int B)
{
	int i, j;
	for (i=0; i<=A; i++)
	{
		for (j=0; j<=B; j++)
			mem[i][j] = -1;
	}
}

int main()
{
	int A, B;
	int T, c = 1;
	int stressfree, stressful;
	scanf("%d", &T);
	while (c <= T)
	{
		scanf("%d-%d", &A, &B);
		memreset(A, B);
		stressfree = count_stressfree(A, B, 0, 0);
		memreset(A, B);
		stressful = count_stressful(A, B, 0, 0);
		printf("Case #%d: %d %d\n", c, stressfree, stressful);
		c++;
	}
	return 0;
}
