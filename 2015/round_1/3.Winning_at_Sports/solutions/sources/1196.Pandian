#include<stdio.h>
#include<math.h>
#include<string.h>
#include<stdlib.h>

#include<iostream>
#include<vector>
#include<map>
#include<string>
#include<set>
#include<queue>
#include<stack>
#include<algorithm>
using namespace std;

#define fori(a,b) for(i = a; i <= b; i++)
#define forj(a,b) for(j = a; j <= b; j++)
#define fork(a,b) for(k = a; k <= b; k++)
#define scani(a) scanf("%d",&a);
#define scanlli(a) scanf("%lld", &a);
#define scanc(c) scanf("%c",&c);
#define scans(s) scanf("%s", s);
#define mp(a,b) make_pair(a, b)
#define ll(a) (long long int)(a)
#define vi vector<int>
#define vc vector<char>
#define vs vector<string>
#define println printf("\n");
#define sz(v) v.size()
#define len(s) s.length()
#define max(a,b) ((a > b) ? a : b)
#define min(a,b) ((a < b) ? a : b)

#define MOD 1000000007

int dp1[2002][2002];
int dp2[2002][2002];

void makezero() {
    int i, j;
    fori(0, 2001) {
        forj(0, 2001) {
            dp1[i][j] = dp2[i][j] = 0;
        }
    }
}
void stressfree(int a, int b, int c) {
    int i, j, x, y;
    fori(1, c) {
        for(j = min(i, a); j >= 0; j--) {
            x = j;
            y = i - j;
            if (y >= x || y > b) {
                break;
            }
            if (x == 0 || y == 0) {
                dp1[x][y] = 1;
            } else {
                dp1[x][y] = (dp1[x-1][y] + dp1[x][y-1]) % MOD;
            }
        }
    }
}

void stressful(int a, int b, int c) {
    int i, j, x, y;
    fori(1, c) {
        for(j = min(i, b); j >= 0; j--) {
            x = i - j;
            y = j;
            if ((x > y && y < b) || x > a) {
                break;
            }
            if (x == 0 || y == 0) {
                dp2[x][y] = 1;
            } else {
                dp2[x][y] = (dp2[x-1][y] + dp2[x][y-1]) % MOD;
            }
        }
    }
}

int main() {
    int t, tn, i, j, a, b, c;
    string str;
    scani(t)
    for (tn = 1; tn <= t; tn++) {
        cin >> str;
        a = b = c = 0;
        fori(0, str.length()-1) {
            if (str[i] == '-') {
                i++;
                break;
            }
            a = a * 10 + (str[i] - '0');
        }
        fori(i, str.length()-1) {
            b = b * 10 + (str[i] - '0');
        }
        makezero();
        c = a + b;
        stressfree(a, b, c);
        stressful(a, b, c);
        printf("Case #%d: %d %d\n", tn, dp1[a][b], dp2[a][b]);
    }
}