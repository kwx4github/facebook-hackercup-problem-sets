import java.util.*;
import java.io.*;

public class Sports {
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(new File("winning_at_sports.txt"));
		int T = in.nextInt();
		PrintWriter out = new PrintWriter(new FileWriter("winning_at_sports_output.txt"));
		for(int testCase = 1; testCase <= T; testCase++) {
			String[] score = in.next().split("-");
			int s1 = Integer.parseInt(score[0]), s2 = Integer.parseInt(score[1]);
			long sfree = countStressFree(s1, s2) % 1000000007, sful = countStressFree(s2 + 1, s2) % 1000000007;
			System.out.printf("Case #%d: %d %d\n", testCase, sfree, sful);
			out.printf("Case #%d: %d %d\n", testCase, sfree, sful);
		}
		out.close();
	}

	private static Map<Pair, Long> csfMemo = new HashMap<Pair, Long>();
	private static long countStressFree(int s1, int s2) {
		if(s2 == 0) {
			return 1;
		}
		else if (s2 == 1) {
			return s1 - 1;
		}
		Pair p = new Pair(s1, s2);
		if(csfMemo.containsKey(p)) {
			return csfMemo.get(p);
		}
		long total = countStressFree(s1, s2 - 1) % 1000000007;
		if(s1 - 1 > s2) {
			total = (total + countStressFree(s1 - 1, s2)) % 1000000007;
		}
		csfMemo.put(p, total);
		return total;
	}

	static class Pair {
		int n1, n2;
		public Pair(int n1, int n2) {
			this.n1 = n1;
			this.n2 = n2;
		}

		@Override
		public boolean equals(Object o) {
			if(o instanceof Pair) {
				Pair p = (Pair)o;
				return this.n1 == p.n1 && this.n2 == p.n2;
			}
			return false;
		}

		@Override
		public int hashCode() {
			return 2001 * n1 + n2;
		}
	}
}