#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
//#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for( it = coll.begin(); it != coll.end(); ++it)
const int MAXN = 35000;
typedef long long LL;


LL notstress[4005][4005];
LL stress[4005][4005];

int main() {
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

	mems(notstress, 0);
	notstress[1][1] = 1;
	for (int i = 2; i < 4001; i++)
	{
			for (int j = i; j > 0; j -= 2)
			{
				if (j != i)
					notstress[i][j] = (notstress[i][j] + notstress[i - 1][j + 1]) % 1000000007;
				if (j - 1 > 0)
					notstress[i][j] = (notstress[i][j] + notstress[i - 1][j - 1]) % 1000000007;
			}
	}

	stress[0][0] = 1;
	for (int i = 1; i < 4001; i++)
	{
		for (int j = i; j >= 0; j -= 2)
		{
			if (j != i)
				stress[i][j] = (stress[i][j] + stress[i - 1][j + 1]) % 1000000007;
			if (j - 1 >= 0)
				stress[i][j] = (stress[i][j] + stress[i - 1][j - 1]) % 1000000007;
		}
	}

	int T;
	scanf("%d", &T);
	for (int t = 0; t < T; t++)
	{
		
		int a, b;
		scanf("%d-%d", &a, &b);


		cout << "Case #" << t + 1 << ": " << notstress[a+b][a-b] << " " << stress[b+b][0] << endl;
		
	}

	return 0;
}