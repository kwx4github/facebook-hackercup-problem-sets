#include <algorithm>
#include <bitset>
#include <cstring>
#include <cmath>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define MAX_SCORE 2005
#define MOD 1000000007

int t, a, b;
long long best[MAX_SCORE][MAX_SCORE];

long long compStressfree() {
    for (int i = 0; i <= a; ++i) {
        for (int j = 0; j <= b; ++j) {
            best[i][j] = 0;
        }
    }

    best[1][0] = 1;
    for (int i = 2; i <= a; ++i) {
        for (int j = 0; j <= b; ++j) {
            if (i > j) {
                if (i > 0 && i - 1 > j) {
                    best[i][j] += best[i - 1][j];
                }

                if (j > 0 && i > j - 1) {
                    best[i][j] += best[i][j - 1];
                }

                if (best[i][j] >= MOD) {
                    best[i][j] %= MOD;
                }
            }
        }
    }

    return best[a][b];
}

long long compStressful() {
    for (int i = 0; i <= a; ++i) {
        for (int j = 0; j <= b; ++j) {
            best[i][j] = 0;
        }
    }

    best[0][0] = 1;
    for (int i = 1; i <= b; ++i) {
        for (int j = 0; j <= b; ++j) {
            if (i >= j) {
                if (i > 0 && i - 1 >= j) {
                    best[i][j] += best[i - 1][j];
                }

                if (j > 0 && i >= j - 1) {
                    best[i][j] += best[i][j - 1];
                }

                if (best[i][j] >= MOD) {
                    best[i][j] %= MOD;
                }
            }
        }
    }

    return best[b][b];
}

int main() {
    ifstream fin("stdin.input");
    ofstream fout("stdout.output");

    fin >> t;
    for (int i = 1; i <= t; ++i) {
        fin >> a;
        fin.ignore(1, '-');
        fin >> b;

        fout << "Case #" << i << ": ";
        fout << compStressfree() << " " << compStressful() << "\n";
    }

    return 0;
}
