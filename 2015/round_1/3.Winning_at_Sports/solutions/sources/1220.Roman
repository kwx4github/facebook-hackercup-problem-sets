#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
using namespace std;

#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,value) memset(A,value,sizeof(A))

#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define Pi 3.14159265358979

typedef long long Int;
typedef unsigned long long UINT;
typedef vector <int> VI;
typedef pair <int, int> PII;

const int INF = 1000100000;
const int MAX = 2007;
const int MAX2 = 10007;
const int BASE = 1000000000;
const int MOD = 1000000007;

int c[MAX][MAX];
int d[MAX][MAX];

int main()
{
    #ifndef ONLINE_JUDGE
        freopen("in.txt", "r", stdin);
        freopen("out.txt" , "w" , stdout);
    #endif
    FILL(c,0);
    FILL(d,0);
    c[1][0] = 1;
    d[0][0] = 1;
    FOR(i,1,MAX - 2)
    {
        FOR(j,0,i)
        {
            c[i + 1][j] += c[i][j];
            c[i + 1][j] %= MOD;
            c[i][j + 1] += c[i][j];
            c[i][j + 1] %= MOD;
        }
    }

    FOR(i,0,MAX - 2)
    {
        FOR(j,0,i + 1)
        {
            d[i + 1][j] += d[i][j];
            d[i + 1][j] %= MOD;
            d[i][j + 1] += d[i][j];
            d[i][j + 1] %= MOD;
        }
    }

    int t;
    cin >> t;
    FOR(tt,0,t)
    {
        string s;
        cin >> s;
        int a = 0;
        int b = 0;
        int pos = 0;
        while (s[pos] != '-')
        {
            a = 10 * a + s[pos] - '0';
            ++pos;
        }
        ++pos;
        while (pos < s.size())
        {
            b = 10 * b + s[pos] - '0';
            ++pos;
        }
        cout << "Case #" << tt + 1 << ": ";
        cout << c[a][b] << ' ' << d[b][b] << endl;
    }

    return 0;
}
