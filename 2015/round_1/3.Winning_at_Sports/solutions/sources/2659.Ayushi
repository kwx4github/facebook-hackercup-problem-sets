#include<stdio.h>

#define max 2000
#define m 1000000007

long long int dp[max][max] = {0};

long long int modPow(long long int a, long long int x) 
{
	long long int res = 1;
	while(x>0) 
	{
		if(x%2 != 0) 
		{
			res = (res*a) % m;
		}
		a = (a*a) % m;
		x/= 2;
	}
	return res;
}
 
long long int mi(long long int a) 
{
	return modPow(a, m-2);
}

long long int ncr(long long int n, long long int k) 
{
	int i;
	long long int num = 1;
	if(k>n-k)
		k = n-k;
	for (i=0; i<k; i++) 
	{
		num = (num*(n-i)) % m;
	}
	long long int den = 1; 
	for (i=1; i<=k; i++) 
	{
		den = (den*i) % m;
	}
	return ((num*mi(den)) % m);
}
 
long long int catalan(long long int n)
{
	long long int c = ncr(2*n, n);
 	return ((c*mi(n+1)) % m);
}

void stress_free()
{
	int i,j;
	for(i=0; i<max; i++)
	{
		dp[i][0]=1;
	}

	for(i=1; i<max; i++)
	{
		for(j=1; j<max && j<=i; j++)
		{
			dp[i][j] = ((dp[i-1][j] % m)+(dp[i][j-1] % m)) % m;
		}
	}
}
 
int main()
{
	int t,l=0;
	stress_free();
	scanf("%d",&t);
	while(t--)
	{
		l++;
		int a,b;
		char c;
		scanf("%d %c %d",&a,&c,&b);
    		printf("Case #%d: %lld %lld\n",l,dp[a-1][b],catalan(b));
	}
        return 0;
}
