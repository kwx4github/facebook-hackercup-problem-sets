#pragma comment(linker, "/STACK:134217728")

#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <stack>
#include <queue>
#include <functional>
#include <numeric>
#include <memory.h>

using namespace std;

typedef long long LL;

const int MOD = (int)1e9 + 7;

int n, m;

int dp1[1 << 11][1 << 11];
int dp2[1 << 11][1 << 11];

int go1(int a, int b)
{
	if (a == n && b == m)
		return 1;
	int & res = dp1[a][b];
	if (res != -1)
		return res;
	res = 0;
	if (a + 1 <= n)
	{
		res += go1(a + 1, b);
		if (res >= MOD)
			res -= MOD;
	}
	if (a > 0 && b + 1 <= m && a > b + 1)
	{
		res += go1(a, b + 1);
		if (res >= MOD)
			res -= MOD;
	}
	return res;
}

int go2(int a, int b)
{
	if (a == n && b == m)
		return 1;
	int & res = dp2[a][b];
	if (res != -1)
		return res;
	res = 0;
	if (b > 0 && a + 1 <= n && (a + 1 <= b || b == m))
	{
		res += go2(a + 1, b);
		if (res >= MOD)
			res -= MOD;
	}
	if (b + 1 <= m)
	{
		res += go2(a, b + 1);
		if (res >= MOD)
			res -= MOD;
	}
	return res;
}

int main()
{
#ifndef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int T;
	scanf("%d", &T);
	for(int I = 1; I <= T; ++I)
	{
		scanf("%d-%d", &n, &m);
		memset(dp1, -1, sizeof(dp1));
		memset(dp2, -1, sizeof(dp2));
		printf("Case #%d: %d %d\n", I, go1(0, 0), go2(0, 0)); 
	}
	return 0;
}