#include <bits/stdc++.h>

typedef long long i64;

const long long MOD = 1000000007;
const int MAX = 2000;

i64 memo_stressless[MAX + 2][MAX + 2];
i64 memo_stressful[MAX + 2][MAX + 2];
int cookie_stressless[MAX + 2][MAX + 2];
int cookie_stressful[MAX + 2][MAX + 2];

int callnum, my_score, oppo_score;

i64 solve_stressless(int me, int oppo) {
    if (me == my_score && oppo == oppo_score) {
        return 1;
    }

    long long &ret = memo_stressless[me][oppo];

    if (cookie_stressless[me][oppo] == callnum)
        return ret;

    cookie_stressless[me][oppo] = callnum;

    ret = 0;

    if (me + 1 <= my_score)
        ret = (ret + solve_stressless(me + 1, oppo)) % MOD;

    if (oppo + 1 <= oppo_score && oppo + 1 < me)
        ret = (ret + solve_stressless(me, oppo + 1)) % MOD;

    return ret;
}

i64 solve_stressful(int me, int oppo) {
    if (me == my_score && oppo == oppo_score) {
        return 1;
    }

    long long &ret = memo_stressful[me][oppo];

    if (cookie_stressful[me][oppo] == callnum)
        return ret;

    cookie_stressful[me][oppo] = callnum;

    ret = 0;

    if (me + 1 <= my_score) {
        if ((me + 1 <= oppo) || (me + 1 > oppo && oppo == oppo_score))
            ret = (ret + solve_stressful(me + 1, oppo)) % MOD;
    }

    if (oppo + 1 <= oppo_score)
        ret = (ret + solve_stressful(me, oppo + 1)) % MOD;

    return ret;
}

char scores[16];

int main() {

    freopen("c.in", "r", stdin);
    freopen("c.out", "w", stdout);

    int tests;

    scanf("%d", &tests);

    callnum = 0;

    for (int case_no = 1; case_no <= tests; ++case_no) {
        scanf("%s", scores);
        sscanf(scores, "%d-%d", &my_score, &oppo_score);

        callnum++;
        i64 n_stressless = solve_stressless(0, 0);

        callnum++;
        i64 n_stressful = solve_stressful(0, 0);

        printf("Case #%d: %lld %lld\n", case_no, n_stressless, n_stressful);
    }

    return 0;
}
