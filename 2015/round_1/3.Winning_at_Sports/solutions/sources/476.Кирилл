#include <iostream>
#include <algorithm>
using namespace std;

const int N = 2005;
const int MOD = (int) 1e9 + 7;

int dp1[N][N], dp2[N][N];

void add_to(int & a, int b)
{
    a += b;
    if (a >= MOD)
        a -= MOD;
}

void calc_dp1()
{
    dp1[0][0] = 1;

    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
        {
            if (i + 1 < N)
                add_to(dp1[i + 1][j], dp1[i][j]);
            if (j + 1 < N && i > j + 1)
                add_to(dp1[i][j + 1], dp1[i][j]);
        }
}

void calc_dp2()
{
    dp2[0][0] = 1;

    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
        {
            if (i + 1 < N && i + 1 <= j)
                add_to(dp2[i + 1][j], dp2[i][j]);
            if (j + 1 < N)
                add_to(dp2[i][j + 1], dp2[i][j]);
        }
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    calc_dp1();
    calc_dp2();

    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; i++)
    {
        int a, b;
        scanf("%d-%d", &a, &b);
        printf("Case #%d: %d %d\n", i + 1, dp1[a][b], dp2[b][b]);
    }

    return 0;
}
