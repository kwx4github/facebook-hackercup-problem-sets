#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

#define MAX1 2005
#define MOD1 1000000007

long long int solve(long long int N, long long int M)
{
	long long int *a = (long long int *)malloc(sizeof(long long int)*MAX1*MAX1);

	for(int i=0;i<=N;i++)
		for(int j=0;j<=M;j++)
		{
			if(i==0&&j==0)
				a[i*MAX1+j]=0;
			else if(j==0)
				a[i*MAX1+j]=1;
			else if(i==j)
				a[i*MAX1+j]=0;
			else if(i==0)
				a[i*MAX1+j]=0;
			else
				a[i*MAX1+j] = (a[i*MAX1+j-1]+a[(i-1)*MAX1+j])%MOD1;
				
		}

		long long out = a[N*MAX1+M];
		free(a);
		return out;
}
long long int solve1(long long int N, long long int M)
{
	long long int *a = (long long int *)malloc(sizeof(long long int)*MAX1*MAX1);

	for(int i=0;i<=N;i++)
		for(int j=0;j<=M;j++)
		{
			if(i==0&&j==0)
				a[i*MAX1+j]=0;
			else if(j==0)
				a[i*MAX1+j]=0;
			else if(i>j&&j!=M)
				a[i*MAX1+j]=0;
			else if(i==0)
				a[i*MAX1+j]=1;

			else
				a[i*MAX1+j] = (a[i*MAX1+j-1]+a[(i-1)*MAX1+j])%MOD1;
				
		}

		long long out = a[N*MAX1+M];
		free(a);
		return out;

}

int main()
{
 freopen("in.txt", "r", stdin);
 freopen("out.txt", "w", stdout);
  int tt;
 // scanf("%d", &tt);
	cin>>tt;
	
  int total=tt;
  while(tt--)
  {
	  long long int N,M;
	  char K;
	  cin>>N>>K>>M;

	  long long int result = solve(N,M);
	  long long int result1 = solve1(N,M);
//	  if(result!=0)
	  if(M==0)
		  result1=1;
		  printf("Case #%d: %llu %llu\n",total-tt,result,result1);
//	  else
//		  printf("Case :#%d: YES\n",total-tt);
  }
  return 0;
}