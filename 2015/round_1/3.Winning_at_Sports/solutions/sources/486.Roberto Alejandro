#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cmath>

#define N 2005
#define MOD 1000000007LL

using namespace std;

long long t[N][N];

long long dp(int ct1, int ct2){
	long long &ret = t[ct1][ct2];
	if(ret != -1) return ret;
	
	if(ct1 == 0 && ct2 == 0) return ret = 1LL;
	if(ct2 == 0) return ret = dp(ct1 - 1, ct2);
	
	if(ct1 == ct2) return ret = dp(ct1, ct2 - 1);
		
	return ret = (dp(ct1 - 1, ct2) + dp(ct1, ct2 - 1)) % MOD;
}

int main(){
	
	memset(t, -1LL, sizeof(t));
	
	int nc, caso = 1;
	scanf("%d\n", &nc);
	
	while(nc--){
		
		int sc1, sc2;
		scanf("%d-%d\n", &sc1, &sc2);
		//cout<<sc1<<"-"<<sc2<<endl;
		long long res1 = dp(sc1 - 1, sc2);
		long long res2 = dp(sc2, sc2);
		
		printf("Case #%d: %lld %lld\n", caso, res1, res2);
		caso++;
	}
	
	
	return 0;
}
