
// AUTHOR: AMAN JAIN
#include <bits/stdc++.h>
using namespace std;

#define LL long long
#define LLU unsigned long long
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define INF 1000000007
#define EPS 1e-9
#define asd(x)              cout<<__LINE__<<" :: "<<#x<< ": "<<x<<endl;
#define asdf(x, y)          cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<endl;
LL dp[2010][2010][2];

pair<LL,LL> solve(int p1,int p2){
	if(p1 < 0 || p2 < 0)return mp(0,0);
	
	if(p1 == 0 && p2 == 0){
		dp[p1][p2][0] = 1;
		dp[p1][p2][1] = 0;
		return mp(dp[p1][p2][0],dp[p1][p2][1]);
	}
	if(p1 == 0 && p2 == 1){
		return mp(0,1);
	}
	if(p1 == 1 && p2 == 0){
		return mp(1,0);
	}

	if(dp[p1][p2][0]!=-1 && dp[p1][p2][1]!=-1){
		return mp(dp[p1][p2][0],dp[p1][p2][1]);
	}
	if(p1 <= p2){
		pair<int,int> a = solve(p1-1,p2);
		pair<int,int> b = solve(p1,p2-1); 
		dp[p1][p2][1] = (a.second+b.second)%INF;
		dp[p1][p2][0] = 0;
	}
	else{
		dp[p1][p2][1] = 0;
		pair<int,int> a = solve(p1-1,p2);
		pair<int,int> b = solve(p1,p2-1); 
		dp[p1][p2][0] = (a.first+b.first)%INF;
	}
	return mp(dp[p1][p2][0],dp[p1][p2][1]);
}

int main(){
	int T;
	cin >> T;
	// cout << T << endl;
	for(int test = 1; test <= T; test++){
		memset(dp,-1,sizeof(dp));
		string s;
		cin >> s;
		// cout << s << endl;
		int p1 = 0;
		int p2 = 0;
		int h = 0;
		for(int i = 0; i < s.size(); ++i){
			if(s[i] == '-'){
				h = 1;
				continue;
			}
			if(h){
				p2 = p2*10 + s[i] - '0';
			}
			else p1 = p1*10 + s[i] - '0';
		}
		// cout << p1 << " " << p2 <<"\n";
		pair<LL,LL> ans = solve(p1,p2);
		pair<LL,LL> ans1 = solve(p2,p2);
		printf("Case #%d: %lld %lld\n", test,ans.first,ans1.second);
	}
	return 0;
}