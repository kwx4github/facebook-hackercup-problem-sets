#include<bits/stdc++.h>
#define ll long long int
#define F first
#define S second
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define rep(i,in1,n) for(i=in1;i<=n;i++)
#define repn(i,in1,n) for(i=in1;i<n;i++)

#define pf(n) printf("%d ",n);
#define sf(n) scanf("%d",&n)
#define sl(n) scanf("%I64d",&n)
#define nl printf("\n")
#define mem(arr,init) memset(arr,init,sizeof(arr))
//#define vector<int> vi 
//#define vector<vi> vvi 
 
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mp make_pair
#define ep emplace_back//c++11
#define ii pair<int,int> 
#define mod 1000000007
using namespace std;
int n1,n2;
int dp1[2001][2001];
int dp2[2001][2001];
int f1()
{
	int i,j;
	for(i=0;i<=n2;i++)
	{
		dp1[n1][i]=1;
	}
	rep(i,0,n1)
	{
		dp1[i][n2]=1;
	}
	for(i=n1-1;i>=0;i--)
	{
		for(j=n2-1;j>=0;j--)
		{
			if(i==j)
			{
				dp1[i][j]=dp1[i+1][j]%mod;
			}
			if(i>j)
			{
				dp1[i][j]=(dp1[i+1][j]+dp1[i][j+1])%mod;
			}
		}
	}
	return dp1[0][0]%mod;
}

int f2()
{
	int i,j;
	for(i=0;i<=n2;i++)
	{
		dp2[n1][i]=1;
	}
	rep(i,0,n1)
	{
		dp2[i][n2]=1;
	}
	for(i=n1-1;i>=0;i--)
	{
		for(j=n2-1;j>=0;j--)
		{
			if(i==j)
			{
				dp2[i][j]=dp2[i][j+1]%mod;
			}
			if(j>i)
			{
				dp2[i][j]=(dp2[i+1][j]+dp2[i][j+1])%mod;
			}
		}
	}
	return dp2[0][0]%mod;
}


int main()
{
	int i,j,k,t,n,m,cs,ans,ans2;
//	freopen("input.txt","r",stdin);
 //  freopen("output.txt","w",stdout);
	sf(t);
	
	for(cs=1;cs<=t;cs++)
	{
	//	sf(n1); sf(n2);
		scanf("%d-%d",&n1,&n2);
    	
		n1--;
	//	ans=fun(0,0);
		ans=f1();
		n1++;
		ans2=f2();
		printf("Case #%d: %d %d\n",cs,ans,ans2);
		//ans2=fun2(0,0);
	//	printf("%d %d\n",ans,ans2);
	}
	
		


	
	return 0;
}
