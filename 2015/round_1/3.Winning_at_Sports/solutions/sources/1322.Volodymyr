#include <iostream>
#include <string>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string.h>
#include <utility>
#include <queue>
#include <stack>
#include <iomanip>
#include <ctype.h>
#include <sstream>
#include <map>
#include <set>
#include <stdio.h>
#include <assert.h>
#include <ctype.h>
 
using namespace std;

typedef long long LL;

#define FOR(i,n) for(int i = 0;i < n;i++)
#define MP make_pair
#define PB push_back
#define ALL(a) (a).begin(),(a).end()
#define PII pair<int, int>
#define CLEAR(a) memset(a, 0, sizeof(a))
#define INF 2000000000
const double EPS = 1E-8;
const LL mod = 1000000007;
 
using namespace std;

int a,b;
char c;

LL dp[2002][2002];
LL ss[2002][2002];

LL getsf(LL a, LL b) {
  if (b == 0)
    return 1;

  if (a - 1 == b) {
    return getsf(a, b - 1);
  }

  if (dp[a][b] > 0)
    return dp[a][b];

  dp[a][b] = (getsf(a-1,b) + getsf(a,b-1))%mod;
  return dp[a][b];
}

LL getss(LL a, LL b) {
  if (a == 0 && b == 0)
    return 1;

  if (a == b) {
    return getss(a - 1, b);
  }

  if (a == 0)
    return 1;

  if (ss[a][b] > 0)
    return ss[a][b];

  ss[a][b] = (getss(a-1,b) + getss(a,b-1))%mod;
  return ss[a][b];
}

void solve(int tn) {
  cin >> a >> c >> b;
  cout << "Case #" << tn << ": " << getsf(a,b) << ' ' << getss(b,b) << endl;
}

int main() {
  FOR(i, 2002)
  FOR(j, 2002) {
    dp[i][j] = -1;
    ss[i][j] = -1;
  }

  int t;
  cin >> t;
  FOR(i, t) {
    solve(i+1);
  }

  return 0;
}
