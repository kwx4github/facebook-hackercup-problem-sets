#include <fstream>
#include <string>
#include <cctype>


using namespace std;

ifstream fin("input.txt");
ofstream fout("output.txt");

const int MOD = 1000000007;
bool computedNoStress[2001][2001];
bool computedStress[2001][2001];
int noStress[2001][2001];
int Stress[2001][2001];

int nemoNoStress(int x, int y)
{
    if(computedNoStress[x][y])
        return noStress[x][y];
    if(y == 0)
    {
        noStress[x][y] = 1;
        computedNoStress[x][y] = true;
        return 1;
    }
    int a = 0, b = 0;
    if(x - 1 > y)
        a = nemoNoStress(x-1,y);
    b = nemoNoStress(x,y-1);
    noStress[x][y] = (a%MOD + b%MOD)%MOD;
    computedNoStress[x][y] = true;
    return noStress[x][y];
}

int nemoStress(int x, int y)
{
    if(computedStress[x][y])
        return Stress[x][y];
    if(x == 0)
    {
        computedStress[x][y] = true;
        Stress[x][y] = 1;
        return 1;
    }
    int a = 0, b = 0;
    a = nemoStress(x-1,y);
    if(x < y)
        b = nemoStress(x,y-1);
    Stress[x][y] = (a%MOD + b%MOD)%MOD;
    computedStress[x][y] = true;
    return Stress[x][y];

}

void solve()
{
    string s;
    fin>>s;
    int a = 0, b = 0;
    int i = 0;
    while(s[i] != '-')
    {
        a = a*10 + s[i]-'0';
        ++i;
    }
    ++i;
    while(i < s.length())
    {
        b = b*10 + s[i]-'0';
        ++i;
    }
    fout<<nemoNoStress(a,b)<<' '<<nemoStress(a,b)<<'\n';

}


int main()
{
    int T;
    fin>>T;
    nemoStress(2000,2000);
    nemoNoStress(2000,2000);
    for(int i = 1; i <= T; i++ )
    {
        fout<<"Case #"<<i<<": ";
        solve();
    }
    fin.close();
    fout.close();
    return 0;
}
