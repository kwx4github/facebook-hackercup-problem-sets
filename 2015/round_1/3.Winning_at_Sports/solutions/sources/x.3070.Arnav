#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <utility>
#include <set>
#include <queue>
#define MOD 1000000007
using namespace std;

int T;
string S;
int A, B;
long long memo[2002][2002];

int solve(int w, int l) {
    if (l == 0) {
        return 1;
    }
    if (memo[w][l] != -1) {
        return memo[w][l];
    }

    memo[w][l] = 0;
    if (w > l + 1) {
        memo[w][l] += solve(w - 1, l) % MOD;
        memo[w][l] %= MOD;
    }
    memo[w][l] += solve(w, l - 1) % MOD;
    memo[w][l] %= MOD;
    
    return memo[w][l];
}

int main() {
    memset(memo, -1, sizeof(memo));
    cin >> T;
    for (int case_num = 1; case_num <= T; case_num++) {
        cin >> S;
        int index = S.find('-');
        A = stoi(S.substr(0, index));
        B = stoi(S.substr(index + 1, string::npos));
        int ans1 = solve(A, B);
        long long ans2 = 0;
        for (int i = 0; i < B; i++) {
            ans2 += solve(B, i);
            ans2 %= MOD;
        }
        cout << "Case #" << case_num << ": " << ans1 << " " << ans2 << '\n';
    }
    return 0;
}
