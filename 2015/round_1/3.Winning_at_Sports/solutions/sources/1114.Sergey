#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <map>
#include <unordered_map>
#include <set>
#include <list>
#include <stack>
#include <bitset>

using namespace std;

#define MOD 1000000007
#define MAXSCORE 2000

int DP[MAXSCORE + 2][MAXSCORE + 2];

int find_stress_free(int a, int b)
{
    memset(DP, 0, sizeof(DP));
    DP[0][0] = 1;

    for (int i = 0; i <= a; ++i)
    {
        for (int j = 0; j <= b; ++j)
        {
            if (i < a) DP[i + 1][j] = (DP[i][j] + DP[i + 1][j]) % MOD;
            if (j < b && j < (i - 1)) DP[i][j + 1] = (DP[i][j] + DP[i][j + 1]) % MOD;
        }
    }

    return DP[a][b];
}

int find_stressful(int a, int b)
{
    memset(DP, 0, sizeof(DP));
    DP[0][0] = 1;

    for (int i = 0; i <= a; ++i)
    {
        for (int j = 0; j <= b; ++j)
        {
            if (i < a && (j > i) || j == b) DP[i + 1][j] = (DP[i][j] + DP[i + 1][j]) % MOD;
            if (j < b) DP[i][j + 1] = (DP[i][j] + DP[i][j + 1]) % MOD;
        }
    }

    return DP[a][b];
}

int main()
{
    //freopen("input.txt", "r", stdin);

    int T = 0;
    scanf("%d", &T);
    for (int t = 1; t <= T; t++)
    {
        int A = 0, B = 0;
        memset(DP, 0, sizeof(DP));
        scanf("%d-%d", &A, &B);


        cout << "Case #" << t << ": " << find_stress_free(A, B) << " " << find_stressful(A,B) << endl;
    }
}