//bcw0x1bd2 {{{
#include<bits/stdc++.h>
using namespace std;
#define FZ(n) memset((n),0,sizeof(n))
#define FMO(n) memset((n),-1,sizeof(n))
#define MC(n,m) memcpy((n),(m),sizeof(n))
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define FOR(x,y) for(__typeof(y.begin())x=y.begin();x!=y.end();x++)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0);
#ifdef ONLINE_JUDGE
#define FILEIO(name) \
  freopen(name".in", "r", stdin); \
  freopen(name".out", "w", stdout);
#else
#define FILEIO(name)
#endif

void RI() {}

template<typename... T>
void RI( int& head, T&... tail ) {
	    scanf("%d",&head);
			    RI(tail...);
}

mt19937 rng(0x5EED);
int randint(int lb, int ub) {
    return uniform_int_distribution<int>(lb, ub)(rng);
}
// Let's Fight! }}}

const int MOD = 1000000007;
const int MX = 4015;

int N,A,B,dp1[MX][MX],dp2[MX][MX];

int main(int argc, char** argv){
	int nT;
	RI(nT);
	for (int t=1; t<=nT; t++){
		fprintf(stderr, "t = %d\n", t);
		scanf("%d-%d", &A, &B);
		N = A + B;
		FZ(dp1); FZ(dp2);
		dp1[1][0] = 1;
		for (int i=2; i<=N; i++){
			for (int j=0; j<=i; j++){
				int w = i-j;
				int l = j;
				if (w <= l) break;
				// win
				dp1[i][j] = dp1[i-1][j];
				// lose
				if (j > 0) dp1[i][j] += dp1[i-1][j-1];
				if (dp1[i][j] >= MOD) dp1[i][j] -= MOD;
			}
		}
		dp2[1][1] = 1;
		for (int i=2; i<=N; i++){
			for (int j=i; j>=0; j--){
				int w = i-j;
				int l = j;
				if (w > l && j < B) break;
				// win
				dp2[i][j] = dp2[i-1][j];
				// lose
				if (j > 0) dp2[i][j] += dp2[i-1][j-1];
				if (dp2[i][j] >= MOD) dp2[i][j] -= MOD;
			}
		}

		printf("Case #%d: %d %d\n", t, dp1[N][B], dp2[N][B]);
	}
	return 0;
}

