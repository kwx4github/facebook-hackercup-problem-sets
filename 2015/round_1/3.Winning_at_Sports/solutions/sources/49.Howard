#include <iostream>
#include <algorithm>

using namespace std;

typedef long long ll;

const ll MOD = 1000000007;

// f = stress-free, g = stressful
ll f[2001][2001], g[2001][2001];

void init()
{
  f[0][0] = 1;
  for (int my = 0; my <= 2000; my++) {
    for (int yours = 0; yours <= 2000; yours++) {
      if (!my && !yours) continue;
      f[my][yours] = 0;
      if (my > yours) {
	if (my > 0) {
	  f[my][yours] += f[my-1][yours];
	  f[my][yours] %= MOD;
	}
	if (yours > 0) {
	  f[my][yours] += f[my][yours-1];
	  f[my][yours] %= MOD;
	}
      }
    }
  }
}

void compute_g(int my, int yours)
{
  for (int m = 0; m <= my; m++) {
    for (int y = 0; y <= yours; y++) {
      g[m][y] = 0;
    }
  }
  g[0][0] = 1;

  for (int m = 0; m <= my; m++) {
    for (int y = 0; y <= yours; y++) {
      if (!m && !y) continue;
      if (m > y && y < yours) continue;
      if (m > 0) {
	g[m][y] += g[m-1][y];
	g[m][y] %= MOD;
      }
      if (y > 0) {
	g[m][y] += g[m][y-1];
	g[m][y] %= MOD;
      }
    }
  }
}

int main()
{
  init();

  int T;
  cin >> T;
  for (int c = 1; c <= T; c++) {
    cout << "Case #" << c << ": ";
    int my, yours;
    char dash;
    cin >> my >> dash >> yours;
    compute_g(my, yours);
    cout << f[my][yours] << ' ' << g[my][yours] << endl;
  }

  return 0;
}
