#include <iostream>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <cstring>
using namespace std;
#define ll long long
#define MAX 2005
ll sec(int x, int y, int left);
ll first(int x, int y, int left);

ll dp1[MAX][MAX], dp2[MAX][MAX];
int v1[MAX][MAX], v2[MAX][MAX], cases, mod = 1000000007;
int m_x, m_y;
int p = 1;
int main()
{

freopen("winning_at_sports.txt", "r", stdin);
freopen("o.txt", "w", stdout);
    memset(v1, -1, sizeof(v1));
    memset(v2, -1, sizeof(v2));

    scanf("%d", &cases);
    while(cases--)
    {
        scanf("%d-%d", &m_x, &m_y);
        printf("Case #%d: %lld %lld\n", p++, first(1, 0, m_x + m_y - 1), sec(0, 0, m_x + m_y));
    }

    return 0;
}


ll first(int x, int y, int left)
{
    if(y >= x)
        return 0;

    if(left == 0)
        return (x == m_x && y == m_y);

    int& flag = v1[x][left];
    ll& ret = dp1[x][left];
    if(flag == cases)
        return ret;
    ret = 0, flag = cases;

    ret = (first(x + 1, y, left - 1) % mod + first(x, y + 1, left - 1) % mod) % mod;
    return ret;
}


ll sec(int x, int y, int left)
{
    if(x > y && y < m_y)
        return 0;

    if(left == 0)
        return (x == m_x && y == m_y);

    int& flag = v2[x][left];
    ll& ret = dp2[x][left];
    if(flag == cases)
        return ret;
    ret = 0, flag = cases;

    ret = (sec(x + 1, y, left - 1) % mod + sec(x, y + 1, left - 1) % mod) % mod;
    return ret;
}
