#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;
#define N 2001
#define mod 1000000007
int dp[N][N];
int T, A, B;

void solve(int test) {
    memset (dp, 0, sizeof(dp));

    dp[0][0] = 1;
    int i, j;
    for (i = 1; i <= A; ++i)
        for (j = 0; j < i; ++j) {
            if (j - 1 >= 0)
                dp[i][j] += dp[i][j - 1];
            if (i - 1 >= 0)
                dp[i][j] += dp[i - 1][j];
            dp[i][j] %= mod;
        }
    printf ("Case #%d: %d ", test, dp[A][B]);
    
    memset (dp, 0, sizeof(dp));
    
    int X = min(A, B);
    
    dp[0][0] = 1;
    for (i = 0; i <= X; ++i)
        for (j = i; j <= X; ++j) {
            if (i - 1 >= 0)
                dp[i][j] += dp[i - 1][j];
            if (j - 1 >= 0)
                dp[i][j] += dp[i][j - 1];
            dp[i][j] %= mod;
        }

    printf ("%d\n", dp[X][X]);
}


int main() {
    freopen ("c.in", "r", stdin);
    freopen ("c.out", "w", stdout);
    scanf ("%d\n", &T);
    for (int test = 1; test <= T; ++test) {
        scanf ("%d-%d\n", &A, &B);
        solve(test);
    }
}
