#include <stdio.h> 
#include <stdlib.h> 
#include <ctype.h> 
#include <string.h> 
#include <math.h> 
#include <algorithm>
#include <functional>
#include <vector> 
#include <string> 
#include <queue>
#include <iostream> 
#include <map>
#include <sstream> 
using namespace std; 

int n, m;
int mod;
int dp[2020][2020][2];

int sol (int i, int j, int t){
	if (i == n && j == m)
		return 1;

	if (dp[i][j][t] != -1)
		return dp[i][j][t];

	int ret = 0;

	if (!t){
		if (j+1 < i)
			ret = (ret + sol(i, j+1, t))%mod;
		if (i < n)
			ret = (ret + sol (i+1, j, t))%mod;
	} else{
		if (i+1 <= j || j == m)
			ret = (ret + sol(i+1, j, t))%mod;
		if (j < m)
			ret = (ret + sol(i, j+1, t))%mod;
	}

	return dp[i][j][t] = ret;
}

int main (){
	int t;
	mod = 1000000007;

	freopen ("3.in", "r", stdin);
	freopen ("3.out","w",stdout);

	scanf ("%d", &t);

	for (int tc=1;tc<=t;tc++){
		memset (dp, -1, sizeof(dp));

		scanf ("%d-%d", &n, &m);

		printf ("Case #%d: %d %d\n", tc, sol(0, 0, 0), sol(0, 0, 1));
	}

	return 0;
}
