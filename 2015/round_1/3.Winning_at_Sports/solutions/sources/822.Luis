#include<bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; ++i )
#define clr( t , val ) memset( t , val , sizeof( t ) )

#define all( v ) v.begin() , v.end()
#define SZ( v ) ((int)(v).size())
#define pb push_back

#define mp make_pair
#define fi first
#define se second

#define N 2000
#define MOD 1000000007

int A , B;
bool used1[ N + 5 ][ N + 5 ];
int memo1[ N + 5 ][ N + 5 ];
int dp1( int a , int b ){
	if( !(a > b) ) return 0;
	if( a > A ) return 0;
	if( b > B ) return 0;
	if( a == A && b == B ) return 1;
	if( used1[ a ][ b ] ) return memo1[ a ][ b ];
	used1[ a ][ b ] = 1;
	int &dev = memo1[ a ][ b ] = 0;
	dev = ( dp1( a + 1 , b ) + dp1( a , b + 1 ) );
	if( dev >= MOD ) dev -= MOD;
	return dev;
}

bool used2[ N + 5 ][ N + 5 ];
int memo2[ N + 5 ][ N + 5 ];
int dp2( int a , int b ){
	if( a > b ) return 0;
	if( a > A ) return 0;
	if( b > B ) return 0;
	if( a == B && b == B ) return 1;
	if( used2[ a ][ b ] ) return memo2[ a ][ b ];
	used2[ a ][ b ] = 1;
	int &dev = memo2[ a ][ b ] = 0;
	dev = ( dp2( a + 1 , b ) + dp2( a , b + 1 ) );
	if( dev >= MOD ) dev -= MOD;
	return dev;
}

int main(){
	int cases;
	sc( cases );
	REP( tc , cases ){
		scanf( "%d-%d" , &A , &B );
		clr( used1 , 0 );
		clr( used2 , 0 );
		printf( "Case #%d: %d %d\n" , tc + 1 , dp1( 1 , 0 ) , dp2( 0 , 0 ) );
	}

}
