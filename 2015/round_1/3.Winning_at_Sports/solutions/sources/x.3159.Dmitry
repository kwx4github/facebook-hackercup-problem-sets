import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.Scanner;

/**
 * by dt on 1/17/15, 11:13 AM
 */
public class WinningAtSports {
    private static final int MOD = 1000000007;
    static int[][] sfree, sful;

    public static void main(String... args) throws FileNotFoundException {
        Scanner sc = new Scanner(new FileInputStream("WinningAtSports.in.txt"));
        int count = Integer.valueOf(sc.nextLine());
        PrintStream ps = new PrintStream("WinningAtSports.out.txt");
        for (int i = 1; i <= count; i ++) {
            String[] scores = sc.nextLine().split("-");
            int myScore = Integer.valueOf(scores[0]);
            int opScore = Integer.valueOf(scores[1]);
            calcWins(myScore, opScore);
            String res = "Case #" + i + ": " + sfree[myScore][opScore] + " " + sful[myScore][opScore];
            ps.println(res);
        }
        ps.flush();ps.close();
    }

    private static void calcWins(int maxMy, int maxOp) {
        sfree = new int[maxMy + 1][maxOp + 1];
        sful = new int[maxMy + 1][maxOp + 1];

        sfree[0][0] = 1; sful[0][0] = 1;

        for (int i = 1; i <= maxMy; i ++) {
            for (int j = 0; ((i > j) ? j <= maxOp : j < Math.min(i, maxOp)); j ++) {
                sfree[i][j] = (sfree[i - 1][j] + ((j > 0) ? sfree[i][j - 1] : 0)) % MOD;
            }
        }

        for (int j = 1; j <= maxOp; j ++) {
            for (int i = 0; (j == maxOp ? i <= maxMy : i <= Math.min(j, maxMy)); i ++) {
                sful[i][j] = (((i > 0) ? sful[i - 1][j] : 0) + sful[i][j - 1]) % MOD;
            }
        }
    }

}
