#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

const int MAXN = (int) 5e3 + 50;
const LL mod = (LL) 1e9 + 7;

char buf[MAXN];
int WINS, LOSES, TOTAL;
LL memo_chill[MAXN][MAXN];
LL memo_hard[MAXN][MAXN];

LL dp_chill(int id, int myWins) {
	LL &res = memo_chill[id][myWins];
	if (res == -1) {
		res = 0;
		if (id == TOTAL) {
			if (myWins == WINS) {
				res = 1;
			}
		} else {
			// I win.
			int loses = id - myWins;
			if (myWins + 1 > loses) {
				res += dp_chill(id + 1, myWins + 1);
				res %= mod;
			}
			// I lose.
			if (myWins > loses + 1) {
				res += dp_chill(id + 1, myWins);
				res %= mod;
			}
		}
	}
	return res;
}

LL dp_hard(int id, int myWins) {
	LL &res = memo_hard[id][myWins];
	if (res == -1) {
		res = 0;
		if (id == TOTAL) {
			if (myWins == WINS) {
				res = 1;
			}
		} else {
			int loses = id - myWins;
			if (loses == LOSES) {
				res += dp_hard(id + 1, myWins + 1);
				res %= mod;
			} else {
				// I win.
				if (myWins + 1 <= loses) {
					res += dp_hard(id + 1, myWins + 1);
					res %= mod;
				}
				// I lose.
				res += dp_hard(id + 1, myWins);
				res %= mod;
			}
		}
	}
	return res;
}


int main() {
    freopen("in.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    int T, caseNo = 1;
    scanf("%d", &T);
    while (T--) {
		scanf("%s", buf);
     	sscanf(buf, "%d-%d", &WINS, &LOSES);	 
		//cout << WINS <<" " << LOSES << endl;
		
		TOTAL = WINS + LOSES;

		memset(memo_chill, -1, sizeof(memo_chill));
		LL ans_chill = dp_chill(0, 0);
					
		memset(memo_hard, -1, sizeof(memo_hard));
		LL ans_hard = dp_hard(0, 0);

        printf("Case #%d: %lld %lld\n", caseNo++, ans_chill, ans_hard);
    }
    return 0;
}
