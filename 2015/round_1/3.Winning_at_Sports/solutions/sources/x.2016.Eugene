#define _CRT_SECURE_NO_WARNINGS

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
#include "stdio.h"
using namespace std;

const int MAX = 2010;
long long a[MAX][MAX];
long long b[MAX][MAX];
const long long MOD = 1000000007;

void solve_case(int tc)
{
	int n, m;
	cin >> n >> m; m = -m;
	cout << "Case #" << tc << ": ";
	cout << a[n][m] << " " << b[m][m];
	cout<< endl;
}

void prepare()
{
	// a
	for (int i = 1; i < MAX; ++i)
	{
		a[i][0] = 1;
		for (int j = 1; j < i; ++j)
			a[i][j] = (a[i][j - 1] + a[i-1][j]) % MOD;
	}

	// b
	for (int i = 1; i < MAX; ++i)
	{
		b[i][0] = 1;
		for (int j = 1; j <= i; ++j)
			b[i][j] = (b[i - 1][j] + b[i][j - 1]) % MOD;
	}
}


int main()
{

#ifndef __OLIMP__
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int T;
	scanf("%d", &T);
	prepare();
	for (int tc = 1; tc <= T; tc++)
		solve_case(tc);

	return 0;
}