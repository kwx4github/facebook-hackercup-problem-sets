#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <queue>
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <ctime> 
#include <cstring> 

using namespace std; 

typedef long long ll; 
typedef pair<int, int> pii;

#define INF 1000000000
#define pb push_back 
#define itr iterator 
#define sz size() 
#define mp make_pair

int t, teste;
int my_score, opp_score;
int stress_free[2100][2100];
int stressful[2100][2100];
const int mod = 1000000007;

int main() {
	for (scanf("%d", &t); t; t--) {
		printf("Case #%d: ", ++teste);

		scanf("%d-%d", &my_score, &opp_score);
		for (int ms = my_score; ms >= 0; ms--) {
			for (int os = opp_score; os >= 0; os--) {
				if (os == opp_score && ms == my_score) {
					stress_free[ms][os] = stressful[ms][os] = 1;
					continue;
				}

				stress_free[ms][os] = 0;
				if (os < ms) {
					if (ms < my_score) {
						stress_free[ms][os] += stress_free[ms+1][os];
						stress_free[ms][os] %= mod;
					}
					if (os < opp_score) {
						stress_free[ms][os] += stress_free[ms][os+1];
						stress_free[ms][os] %= mod;
					}
				}

				stressful[ms][os] = 0;
				if (os == opp_score) {
					stressful[ms][os] = stressful[ms+1][os];
				}
				else if (ms <= os) {
					stressful[ms][os] += stressful[ms][os+1]; 
					stressful[ms][os] %= mod;
				
					if (ms < my_score) {
						stressful[ms][os] += stressful[ms+1][os]; 
						stressful[ms][os] %= mod;
					}
				}
			}
		}

		printf("%d %d\n", stress_free[1][0], stressful[0][0]);
	}	
}