using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace Sports 
{
    class Program 
    {
        const int MOD = 1000000007;

        static int[,] paths;

        static int modInverse(int a) {
            Int64 x = 1, y = a;
            Int64 b = MOD - 2;
            while (b > 0) {
                if (b % 2 == 1) {
                    x = x * y;
                    if (x > MOD) x %= MOD;
                }
                y = y * y;
                if (y > MOD) y %= MOD;
                b /= 2;
            }
            return (int)(x % MOD);
        }

        static int modFactorial(int num) {
            if (num < 2) return 1;
            Int64 fact = 1;
            for (Int64 i = 2; i <= num; i++) 
                fact = (fact * i) % MOD;
            return (int) fact;
        }

        static int modCombination(int n, int k) {
            if (k < 2) return n;
            if (k >= n) return 1;
            Int64 numerator = modFactorial(n);
            Int64 denominator = ((Int64)modFactorial(k) * (Int64)modFactorial(n-k))%MOD;
            Int64 invdenom = modInverse((int)denominator);
            Int64 combination = (numerator * invdenom) % MOD;
            return (int)combination;
        }

        static int modCatalan(int n) {
            if (n < 2) return 1;
            Int64 numerator = modFactorial(2*n);
            Int64 denominator = ((Int64)modFactorial(n) * (Int64)modFactorial(n+1)) % MOD;
            Int64 invdenom = modInverse((int)denominator);
            Int64 catalan = (numerator * invdenom) % MOD;
            return (int)catalan;
        }

        static int modStressFree(int x, int y) {
            if (paths[x, y] > 0) return paths[x, y];
            int tx = x > 0 ? modStressFree(x - 1, y) : 0;
            int ty = y > x + 1 ? modStressFree(x, y - 1) : 0;
            int ts = (tx + ty) % MOD;
            paths[x, y] = ts;
            return ts;
        }

        static void Main(string[] args) {
            StringBuilder sb = new StringBuilder();
            char[] delimiterChars = { '-' };
            string[] lines = File.ReadAllLines("C:\\Projects\\FHC\\Round1\\winning_at_sports.txt");
            int T = Int32.Parse(lines[0]);
            for (int i = 1; i <= T; i++) {
                string[] wd = lines[i].Split(delimiterChars);
                int W = Int32.Parse(wd[0]);
                int L = Int32.Parse(wd[1]);
                int sfull = modCatalan(L);
                paths = new int[2001,2001];
                paths[0, 1] = 1;
                int sfree = modStressFree(L, W);
                string st = String.Format("Case #{0}: {1} {2}", i, sfree, sfull);
                //Console.WriteLine(st);
                sb.AppendLine(st);
            }

            using (StreamWriter outfile = new StreamWriter("C:\\Projects\\FHC\\Round1\\winning_at_sports_output.txt")) outfile.Write(sb.ToString());

        }

    }
}
