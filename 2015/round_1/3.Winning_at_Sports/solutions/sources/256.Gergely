#include <bits/stdc++.h>

#define x first
#define y second
#define pb push_back


using namespace std ;

typedef long long ll ;
typedef unsigned long long ull ;
typedef pair <int, int> Pair ;

const int INF = 0x3f3f3f3f ;
const int NMAX = 2005 ;
const int MOD = 1000000007 ;

ifstream fin("input.in") ;
ofstream fout("output.out") ;

int T ;
int A, B ;
char C ;



ll DP[NMAX][NMAX], DP1[NMAX][NMAX] ;

inline int min(int a, int b)
{
    if(a > b)
        return b ;
    return a ;

}

inline int max(int a, int b)
{
    if(a > b)
        return a ;
    return b ;
}


int main()
{
    fin >> T ;

    for(int iii = 1 ; iii <= T ; ++ iii)
    {
        fout << "Case #" << iii << ": " ;

        fin >> A >> C >> B ;

        DP[1][0] = 1 ;

        for(int i = 1 ; i <= A; ++ i)
            DP[i][0] = 1 ;

        for(int i = 2 ; i <= A ; ++ i)
        {
            for(int j = 0 ; j <= min(B, i - 1) ; ++ j)
            {
                DP[i][j] = 0 ;

                if(j > 0)
                    DP[i][j] = DP[i][j] + DP[i][j - 1] ;

                if(i - j > 1)
                    DP[i][j] = DP[i][j] + DP[i - 1][j] ;
              DP[i][j] =   DP[i][j] % MOD ;
            }
        }


        for(int i = 0 ; i <= B ; ++ i)
            DP1[0][i] = 1;

        for(int i = 1; i <= A;  ++ i)
            for(int j = 0 ; j <= B ; ++ j)
        {
            if(i > j)
            {
                if(j < B)
                    DP1[i][j] = 0 ;
                else DP1[i][j] = DP1[i - 1][j] ;
            }
            else if(i < j)
                DP1[i][j] = DP1[i][j - 1] + DP1[i - 1][j] ;
            else DP1[i][j] = DP1[i - 1][j] ;

            DP1[i][j] = DP1[i][j] % MOD ;


        }

        fout << DP[A][B] << ' ' << DP1[A][B] << '\n' ;



    }

    fin.close() ;
    fout.close() ;
    return  0 ;
}
