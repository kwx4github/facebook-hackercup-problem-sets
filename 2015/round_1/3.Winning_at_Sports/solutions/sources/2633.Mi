#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define rall(x) (x).rbegin(),(x).rend()
#define sz(x) ((int)(x).size())
#define REP(i,b,n) for(int i=(int)(b);i<(int)(n);++i)
#define rep(i,n) REP(i,0,n)
#define repsz(i,v) rep(i,sz(v))
#define eb emplace_back
#define mt make_tuple
#define aur auto&
#define bit(n) (1LL<<(n))
using namespace std;
typedef long long ll;
//#define int long long
static const int INF = 1<<25;
static const double EPS = 1e-5;
template<class T>bool chmin(T&a,const T&b){if(a<=b)return false;a=b;return true;}
template<class T>bool chmax(T&a,const T&b){if(a>=b)return false;a=b;return true;}

template<typename T> string to_s(T t){ //{{{
    stringstream ss;
    ss << t;
    return ss.str();
} //}}}
template<typename T> T s_to(string s){ //{{{
    stringstream ss;
    T res;
    ss << s;
    ss >> res;
    return res;
} //}}}

const int N = 2100;
const int mod = 1000000007;
array<array<int, N+10>, N+10> dp1; // dp1[i][j] = 勝利数 (i,j) で常に i> j
array<array<int, N+10>, N+10> dp2; // dp1[i][j] = 勝利数 (i,j) で常に i<=j
void pre(){
    rep(i, N) rep(j, N) dp1[i][j] = dp2[i][j] = 0;
    dp1[1][0] = 1;
    dp2[0][0] = 1;
    rep(i, N) rep(j, N){
        if(i+1  >  j ) (dp1[i+1][j] += dp1[i][j]) %= mod;
        if( i   > j+1) (dp1[i][j+1] += dp1[i][j]) %= mod;
        if(i+1 <=  j ) (dp2[i+1][j] += dp2[i][j]) %= mod;
        if( i  <= j+1) (dp2[i][j+1] += dp2[i][j]) %= mod;
    }
}

bool solve(){//{{{
    int a, b; char ch;
    cin >> a >> ch >> b;
    cout << dp1[a][b] << " " << dp2[b][b] << endl;
    return true;
}//}}}

signed main(){
    pre();
    //cin.tie(0);
    //ios_base::sync_with_stdio(0);
    cout.setf(ios::fixed); cout.precision(10);
    int T;
    cin >> T;
    cin.ignore();
    for(int i = 1; i <= T; ++i){
        cout << "Case #" << i << ": ";
        solve();
    }
    return 0;
}
// vim:set foldmethod=marker commentstring=//%s:
