#include <bits/stdc++.h>
using namespace std;

int mod=1e9+7;
int a, b;
int dp1[2001][2001];
int dp2[2001][2001];

inline int dfs1(int x, int y) {
  if (!~dp1[x][y]) {
    dp1[x][y]=x==a && y==b;
    if (x+1<=a)          dp1[x][y]=(dp1[x][y]+dfs1(x+1, y))%mod;
    if (y+1<x && y+1<=b) dp1[x][y]=(dp1[x][y]+dfs1(x, y+1))%mod;
  }
  return dp1[x][y];
}

inline int dfs2(int x, int y) {
  if (!~dp2[x][y]) {
    dp2[x][y]=x==a && y==b;
    if (x+1<=a && (y==b || x+1<=y))  dp2[x][y]=(dp2[x][y]+dfs2(x+1, y))%mod;
    if (y+1<=b)                      dp2[x][y]=(dp2[x][y]+dfs2(x, y+1))%mod;
  }
  return dp2[x][y];
}

int main(void) {
  int t;
  scanf("%d", &t);
  for (int _case=1; _case<=t; _case++) {
    memset(dp1, 0xff, sizeof dp1);
    memset(dp2, 0xff, sizeof dp2);
    scanf("%d-%d", &a, &b);
    printf("Case #%d: %d %d\n", _case, dfs1(1, 0), dfs2(0, 0));
  }
}
