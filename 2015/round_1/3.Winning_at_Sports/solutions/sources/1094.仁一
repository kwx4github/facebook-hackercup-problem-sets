#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cctype>

#include <iostream>
#include <string>
#include <vector>
#include <list>
#include <stack>
#include <queue>
#include <map>
#include <algorithm>

using namespace std;

int dp[2003][2003];

int main(){
   int n, ti = 1;
   scanf("%d", &n);
   
   while(n--){
      int a, b, mod = 1e9+7;
      scanf("%d-%d", &a, &b);
      
      int total = a+b;
      
      memset(dp, 0, sizeof(int)*2003*2003);
      dp[1][0] = 1;
      int i, j, s;
      for(s = 2; s <= total; s++){
      for(i = 1; i <= s && i <= a; ++i){
         j = s-i;
         if(i <= j) continue;
         dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % mod;
         
      }}
      int ans1 = dp[a][b];
      
      
      memset(dp, 0, sizeof(int)*2003*2003);
      dp[0][0] = 1;
      if(b == 0){
         dp[1][0] = dp[0][0];
         dp[0][1] = 0;
      }else{
         dp[0][1] = dp[0][0];
         dp[1][0] = 0;
      }
                  
      
      for(s = 2; s <= total; s++){
      for(i = 0; i <= s && i <= a; ++i){
         j = s-i;
         if(j > b || j < b && i > j) continue; 
         
         if(i > 0 && j > 0) dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % mod;
         else if(i == 0) dp[i][j] = dp[i][j-1];
         else dp[i][j] = dp[i-1][j];
              
      }}
      int ans2 = dp[a][b];
      
      
      
      
      printf("Case #%d: %d %d\n", ti++, ans1, ans2);
   }

   //system("pause");
   return 0;
}
