#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

const int MAXN = 2001, MOD = 1000000007;

int t, a, b, dp1[MAXN][MAXN], dp2[MAXN][MAXN];

int f(int fi, int se) {
	if(fi == a && se == b) return 1;
	int &ret = dp1[fi][se];
	if(ret != -1) return ret;
	ret = 0;
	if(fi < a) ret += f(fi + 1, se);
	if(se + 1 < fi && se < b) ret += f(fi, se + 1);
	if(ret >= MOD) ret -= MOD;
	return ret;
}

int g(int fi, int se) {
	if(fi == a && se == b) return 1;
	int &ret = dp2[fi][se];
	if(ret != -1) return ret;
	ret = 0;
	if(se == b) {
		ret += g(fi + 1, se);
	} else {
		if(fi + 1 <= se && fi < a) ret += g(fi + 1, se);
		if(se < b) ret += g(fi, se + 1);
	}
	if(ret >= MOD) ret -= MOD;
	return ret;
}

int main() {
	ios_base::sync_with_stdio(0);
	#ifndef ONLINE_JUDGE
		freopen("D:/in.txt","r",stdin);
		freopen("D:/out.txt","w",stdout);
		clock_t start = clock();
	#endif
	
	scanf("%d\n", &t);
	for(int tc = 1; tc <= t; ++tc) {
		scanf("%d-%d\n", &a, &b);
		memset(dp1, -1, sizeof dp1);
		memset(dp2, -1, sizeof dp2);
		int sfree = f(1, 0);
		int sful = g(0, 0);
		printf("Case #%d: %d %d\n", tc, sfree, sful);
	}
	
	#ifndef ONLINE_JUDGE
		fprintf(stderr, "\ntime=%.3lfsec\n", 0.001 * (clock() - start));
	#endif
	return 0;
}
