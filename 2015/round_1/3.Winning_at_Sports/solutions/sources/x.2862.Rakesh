//
//  main.m
//  FBHackRankSports
//
//  Created by Rakesh Balasubramanian on 1/17/15.
//  Copyright (c) 2015 zerog. All rights reserved.
//

#import <Foundation/Foundation.h>

long getStressFree(NSInteger myScore, NSInteger opponentScore, NSInteger count);
long getStressFull(NSInteger myScore, NSInteger opponentScore, NSInteger count);


int main(int argc, const char * argv[]) {
    @autoreleasepool {
        NSFileHandle *input;
        if (argc == 1) {
            input = [NSFileHandle fileHandleWithStandardInput];
        }else{
            
            NSString *basePath = [[NSFileManager defaultManager] currentDirectoryPath];
            NSString *filePath = [basePath stringByAppendingPathComponent:[NSString stringWithCString:argv[1] encoding:NSUTF8StringEncoding]];
            input = [NSFileHandle fileHandleForReadingAtPath:filePath];
        }
        
        NSData *inputData = [NSData dataWithData:[input availableData]];
        NSString *inputString = [[NSString alloc] initWithData:inputData encoding:NSUTF8StringEncoding];
        
        
        NSMutableArray *lines = [[inputString componentsSeparatedByCharactersInSet:[NSCharacterSet newlineCharacterSet]] mutableCopy];
        NSInteger numTestCases = [lines[0] integerValue];
        
        [lines removeObject:lines[0]];
        
        
        for (int i = 0; i<numTestCases; i++) {
            NSArray *nums = [lines[i] componentsSeparatedByString:@"-"];
            NSInteger myScore = [nums[0] integerValue];
            NSInteger opponentScore = [nums[1] integerValue];
            long combos1 = getStressFree(myScore,opponentScore,0);
            long combos2 = getStressFull(myScore,opponentScore,0);
            printf("Case #%d: %ld ",i+1,combos1);

            printf("%ld\n",combos2);
            
        }
        
    }
    return 0;
}



long getStressFree(NSInteger myScore, NSInteger opponentScore, NSInteger count)
{
//    long long combos[myScore+1][opponentScore+1];
    NSMutableArray *combos = [NSMutableArray arrayWithCapacity:myScore+1];
    for(int i=0; i<=myScore; i++ ){
        [combos addObject:[NSMutableArray arrayWithCapacity:opponentScore+1]];
        for(int j=0; j<=opponentScore; j++){
            if (i==0 || j==0) {
                combos[i][0] = @(1);
                combos[0][j] = @(0);
            }else if (j>=i) {
                combos[i][j] = @(0);
            }else{
                combos[i][j] = @([combos[i-1][j] integerValue] +  [combos[i][j-1] integerValue]); //+  combos[i-1][j-1];
                combos[i][j] = @([combos[i][j] integerValue]%1000000007);
            }
            //            printf("%lld\t",combos[i][j]);
            
        }
        //        printf("\n");
    }
    return [combos[myScore][opponentScore] longValue];
    
}


long getStressFull(NSInteger myScore, NSInteger opponentScore, NSInteger count)
{
    
//    long combos[myScore+1][opponentScore+1];
    NSMutableArray *combos = [NSMutableArray arrayWithCapacity:myScore+1];
    for(int i=0; i<=myScore; i++ ){
        [combos addObject:[NSMutableArray arrayWithCapacity:opponentScore+1]];
        for(int j=0; j<=opponentScore; j++){
            if (i==0 || j==0) {
                combos[i][0] = @(0);
                combos[0][j] = @(1);
            }else if (j<i && j!=opponentScore) {
                combos[i][j] = @(0);
            }else{
                combos[i][j] = @([combos[i-1][j] integerValue]+  [combos[i][j-1] integerValue]); //+  combos[i-1][j-1];
                combos[i][j] = @([combos[i][j] integerValue] %1000000007);
            }
//            printf("%lld\t",combos[i][j]);
            
        }
//        printf("\n");

    }
    return [combos[myScore][opponentScore] longValue];
}