// {{{ template
#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef vector<string> vs;
typedef vector<long long> vll;
typedef vector<pii> vpii;
// }}}

const int MAX = 2001;

const int MOD = (int)1e9 + 7;

int a, b;
int memo1[MAX][MAX];
int memo2[MAX][MAX];

int add(int p, int q) {
  p += q;
  if (p >= MOD) {
    p -= MOD;
  }
  return p;
}

int f(int p, int q) {
  if (q >= p) {
    return 0;
  }
  if (p > a || q > b) {
    return 0;
  }
  if (p == a && q == b) {
    return 1;
  }
  if (memo1[p][q] != -1) {
    return memo1[p][q];
  }
  int ret = 0;
  if (p < a) {
    ret = add(ret, f(p + 1, q));
  }
  if (q < b) {
    ret = add(ret, f(p, q + 1));
  }
  return memo1[p][q] = ret;
}

int g(int p, int q) {
  if (q < b && p > q) {
    return 0;
  }
  if (p > a || q > b) {
    return 0;
  }
  if (p == a && q == b) {
    return 1;
  }
  if (memo2[p][q] != -1) {
    return memo2[p][q];
  }
  int ret = 0;
  if (p < a) {
    ret = add(ret, g(p + 1, q));
  }
  if (q < b) {
    ret = add(ret, g(p, q + 1));
  }
  return memo2[p][q] = ret;
}

int main() {
  int T;
  scanf("%d", &T);
  for (int t = 1; t <= T; t++) {
    scanf("%d-%d", &a, &b);
    memset(memo1, -1, sizeof(memo1));
    memset(memo2, -1, sizeof(memo2));
    printf("Case #%d: %d %d\n", t, f(1, 0), g(0, 1));
  }
  return 0;
}

