#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
using namespace std;

const int MAX_NUM = 2001;
const int MODULO = 1000000007;

int dp[MAX_NUM][MAX_NUM];

int main(int argc, char *argv[]) {
    int T;
    scanf("%d", &T);
    for (int t = 0; t < T; ++t) {
        int N, M;
        int v1, v2;
        scanf("%d-%d", &N, &M);
        memset(dp, 0, sizeof(dp));
        dp[1][0] = 1;
        for (int i = 2; i <= N; ++i) {
            for (int j = 0; j <= min(i, M); ++j) {
                if (i - 1 > j) {
                    dp[i][j] = (dp[i][j] + dp[i - 1][j]) % MODULO;
                }
                if (j != 0) {
                    dp[i][j] = (dp[i][j] + dp[i][j - 1]) % MODULO;
                }
            }
        }
        v1 = dp[N][M];
        memset(dp, 0, sizeof(dp));
        dp[0][0] = 1;
        for (int j = 1; j <= N; ++j) {
            for (int i = 0; i <= j; ++i) {
                if (i != 0) {
                    dp[i][j] = (dp[i][j] + dp[i - 1][j]) % MODULO;
                }
                if (j - 1 >= i) {
                    dp[i][j] = (dp[i][j] + dp[i][j - 1]) % MODULO;
                }
            }
        }
        v2 = dp[M][M];
        printf("Case #%d: %d %d\n", (t + 1), v1, v2);
    }
    return 0;
}
