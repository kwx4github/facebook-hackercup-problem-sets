package zhang.kevin;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.common.base.Charsets;
import com.google.common.base.Throwables;
import com.google.common.collect.Lists;
import com.google.common.io.Files;

public class B {
	
	private static final long MOD = 1000000007;

	public static void main(String[] args) {
		ArrayList<String> readLines = readLines("B.in");
		ArrayList<String> answers = Lists.newArrayList();
		int caseNumber = 1;
		for (int i = 1; i < readLines.size(); i++ ) {
			System.out.println("Case: " + caseNumber);
			String[] tokens = readLines.get(i).split("-");
			int me = Integer.parseInt(tokens[0]);
			int you = Integer.parseInt(tokens[1]);
			answers.add(createCase(caseNumber++, solveStressFree(me, you) + " " + solveStressful(me, you)));
		}
		writeLines(answers, "B.out");
	}
	
	private static long solveStressFree(int me, int you) {
		long[][] table = new long[me + 1][you + 1];
		for (int i = 1; i <= me; i++) {
			table[i][0] = 1;
		}
		for (int j = 1; j <= you; j++) {
			for (int i = j + 1; i <= me; i++) {
				table[i][j] = table[i-1][j] + table[i][j-1];
				table[i][j] = table[i][j] % MOD;
			}
		}
		return table[me][you];
	}
	
	private static long solveStressful(int me, int you) {
		long[][] table = new long[me + 1][you + 1];
		for (int j = 0; j <= you; j++) {
			table[0][j] = 1;
		}
		for (int i = 1; i <= me; i++) {
			for (int j = i; j <= you; j++) {
				table[i][j] = table[i-1][j] + table[i][j-1];
				table[i][j] = table[i][j] % MOD;
			}
		}
		return table[you][you];
	}

	private static String createCase(int caseNum, String content) {
		return "Case #" + caseNum + ": " + content;
	}

	private static ArrayList<String> readLines(String path) {
		try {
			return Lists.newArrayList(Files.readLines(new File(path), Charsets.UTF_8));
		} catch (IOException e) {
			throw Throwables.propagate(e);
		}
	}

	private static void writeLines(List<String> lines, String path) {
		try {
			StringBuilder fileContents = new StringBuilder();
			for (String line : lines) {
				fileContents.append(line + "\n");
			}
			Files.write(fileContents.toString(), new File(path), Charsets.UTF_8);
		} catch (IOException e) {
			throw Throwables.propagate(e);
		}
	}
}
