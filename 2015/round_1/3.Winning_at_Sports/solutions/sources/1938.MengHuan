// @author cebrusfs
// headers {{{
#include<bits/stdc++.h>
using namespace std;
// }}}
// macros {{{
#ifdef WIN32
    #define LLD "%I64d"
#else
    #define LLD "%lld"
#endif

#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)

#define MS0(x) memset(x,0,sizeof(x))
#define MS1(x) memset(x,-1,sizeof(x))

#define ALL(x) (x).begin(), (x).end()
#define SZ(x) ((int)(x).size())

#define IOS ios_base::sync_with_stdio(false)

#define REP(i,n) for(int i=0;i<(n);i++)
#define REP1(i,a,b) for(int i=(a);i<=(b);i++)

#define PER(i,n) for(int i=(n)-1;i>=0;i--)
#define PER1(i,a,b) for(int i=(a);i>=(b);i--)

#ifdef ONLINE_JUDGE
#define FILEIO(x) freopen(#x ".in","r",stdin);freopen(#x ".out","w",stdout);
#define FILEIOS freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#else
#define FILEIO(x) ;
#define FILEIOS ;
#endif

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

typedef pair<int, int> PII;
#define MP make_pair
#define F first
#define S second

typedef vector<int> VI;
#define PB push_back
#define PF push_front

#define PPB pop_back
#define PPF pop_front


// C++11
#if __cplusplus >= 201103L
#define MT make_tuple
typedef tuple<int, int> TII;
#endif

#define runtime() ((double)clock() / CLOCKS_PER_SEC)

const double eps = 1e-7;
// }}}


#define MAX 2005
#define MOD 1000000007

int dp[MAX][MAX];

int solve1(int n, int m)
{
    MS0(dp);

    dp[0][0] = 1;
    for (int i = 1; i <= n; ++i)
        for (int j = 0; j <= m; ++j)
        {
            if (i <= j) continue;

            dp[i][j] = dp[i - 1][j];
            dp[i][j] += j > 0 ? dp[i][j - 1] : 0;
            dp[i][j] %= MOD;
        }
    return dp[n][m];
}

int solve2(int n, int m)
{
    MS0(dp);

    dp[0][0] = 1;
    for (int i = 0; i <= n; ++i)
        for (int j = 0; j <= m; ++j)
        {
            if (i == 0 and j == 0) continue;
            if (i > j and j != m) continue;

            dp[i][j] = i > 0 ? dp[i - 1][j] : 0;
            dp[i][j] += j > 0 ? dp[i][j - 1] : 0;
            dp[i][j] %= MOD;
        }
    return dp[n][m];
}


void solve(int caseid)
{
    fprintf(stderr, "solve at Case %d ... \n", caseid);
    int n, m;
    scanf("%d-%d", &n, &m);

    int ans1 = solve1(n, m);
    int ans2 = solve2(n, m);
    printf("Case #%d: %d %d\n", caseid, ans1, ans2);
}

int main()
{
    int T;
    scanf("%d", &T);
    for (int i = 1; i <= T; ++i)
        solve(i);
}

