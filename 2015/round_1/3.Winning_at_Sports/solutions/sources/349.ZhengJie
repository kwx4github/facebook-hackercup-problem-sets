#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdio>
#include<vector>
#include<cassert>
#include<cstring>
#include<cstdlib>
#include<utility>
#include<iostream>
#include<algorithm>
#include<functional>
#define REP(x,y,z) for(int x=y;x<=z;x++)
#define FORD(x,y,z) for(int x=y;x>=z;x--)
#define MSET(x,y) memset(x,y,sizeof(x))
#define FOR(x,y) for(__typeof(y.begin()) x=y.begin();x!=y.end();x++)
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define SZ size()
#define M 2005
#define MOD 1000000007
using namespace std;
typedef long long LL;
int t,n,m,dp1[M][M],dp2[M][M];

void init()
{
	dp1[0][0] = 1;
	REP(i,0,M-1)REP(j,0,M-1) //i>j
	{
		if(i+1>j && i+1<M)
		{
			dp1[i+1][j] += dp1[i][j];
			dp1[i+1][j] %= MOD;
		}
		if(i>j+1 && j+1<M)
		{
			dp1[i][j+1] += dp1[i][j];
			dp1[i][j+1] %= MOD;
		}
	}

	dp2[0][0] = 1;
	REP(i,0,M-1)REP(j,0,M-1) //i<=j
	{
		if(i+1<=j && i+1<M)
		{
			dp2[i+1][j] += dp2[i][j];
			dp2[i+1][j] %= MOD;
		}
		if(i<=j+1 && j+1<M)
		{
			dp2[i][j+1] += dp2[i][j];
			dp2[i][j+1] %= MOD;
		}
	}
}
int main()
{
	init();
	scanf("%d",&t);
	REP(tt,1,t)
	{
		scanf("%d-%d",&n,&m);
		printf("Case #%d: %d %d\n",tt,dp1[n][m],dp2[m][m]);
	}
	
	return 0;
}

