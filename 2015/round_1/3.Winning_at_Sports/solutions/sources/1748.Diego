import java.util.*;
import java.io.*;
public class B{
public static long dp1[][] = new long[2001][2001];
public static boolean si1[][] = new boolean[2001][2001];
public static long dp2[][] = new long[2001][2001];
public static boolean si2[][] = new boolean[2001][2001];
public static long mod = 1000000007;
public static void main(String args[]) throws IOException{
BufferedReader lector = new BufferedReader(new InputStreamReader(System.in));
int c = Integer.parseInt(lector.readLine());
for(int a = 1;a<=c;a++){
String t = lector.readLine();
int t1 = Integer.parseInt(t.substring(0,t.indexOf("-")));
int t2 = Integer.parseInt(t.substring(t.indexOf("-")+1));
System.out.println("Case #"+a+": "+do1(t1,t2)+" "+do2(t1,t2,true));
}
}
public static long do1(int a,int b){
if(a==1 && b==0) return 1;
if(a<=b || a<0 || b<0)return 0;
if(si1[a][b])return dp1[a][b];
long res = (do1(a-1,b)+do1(a,b-1))%mod;
si1[a][b]=true;
dp1[a][b]=res;
return res;
}
public static long do2(int a,int b,boolean prime){
if(a==0 && b==0) return 1;
if((a>b && !prime) || a<0 || b<0)return 0;
if(si2[a][b])return dp2[a][b];
long res = prime?do2(a-1,b,a-1>b):(do2(a-1,b,false)+do2(a,b-1,false))%mod;;
si2[a][b]=true;
dp2[a][b]=res;
return res;
}

}
