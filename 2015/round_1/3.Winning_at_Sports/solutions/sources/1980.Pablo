#include <algorithm>
#include <cstdio>
#include <cstring>
#include <iostream>

using namespace std;
int const MOD = 1000000007;

pair<int,int> mem[2001][2001][4];
int a, b;
pair<int,int> solve(int i, int j, bool good, bool bad) {
  if (i == a || j == b) {
    return make_pair(good, bad);
  }
  pair<int,int>& rv = mem[i][j][(good<<1) | bad];
  if (rv.first != -1) {
    return rv;
  }
  pair<int,int> w = solve(i+1, j, good, bad && (i+1) <= j);
  pair<int,int> l = solve(i, j+1, good && i > (j + 1), bad);
  rv.first = (w.first + l.first) % MOD;
  rv.second = (w.second + l.second) % MOD;
  return rv;
}

int main() {
  cin.sync_with_stdio(false);
  int T; scanf("%d", &T);
  for (int C = 1; C <= T; C++) {
    scanf("%d-%d", &a, &b);
    memset(mem, -1, sizeof(mem));
    pair<int,int> rv = solve(0, 0, true, true);
    cout << "Case #" << C << ": " << rv.first << ' ' << rv.second << '\n';
  }
}