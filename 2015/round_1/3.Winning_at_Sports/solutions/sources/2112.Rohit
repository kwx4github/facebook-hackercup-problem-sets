#include<iostream>
#include<cstdio>
#include<cstring>
#include<climits>
#include<cmath>
#include<cstdlib>
#include<vector>
#include<queue>
#include<string>
#include<map>
#include<set>
#include<bitset>
#include<stack>
#include<algorithm>
#include<typeinfo>

#define mp make_pair
#define pb push_back
#define fi first
#define se second

#define setBit(n,i) (n|=(1<<i))
#define clearBit(n,i) (n&=(~(1<<i)))
#define checkBit(n,i) (n&(1<<i))
#define lsBit(n) ((n)&(-n))

#define s(n) scanf("%d",&n)
#define fora(i,a,b) for(int i=a;i<b;i++)
#define fore(i,a) for(__typeof((a).begin())i=(a).begin();i!=(a).end();i++)
#define ms(a,b) memset(a,b,sizeof(a))
#define all(a) (a).begin(),(a).end()

#define INF 1e9

using namespace std;

typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef long long int ll;
#define MOD 1000000007
ll DPsfr[2001][2001];
ll sfr(int a,int b,int c,int d)
{
   if(d>=c) return 0;
   if(a<0||b<0)   return 0;
   if(a==0) return 1;
   if(b==0) return 1;
   if(DPsfr[a][b]!=-1)  return DPsfr[a][b];
   DPsfr[a][b]=(sfr(a,b-1,c,d+1)+sfr(a-1,b,c+1,d))%MOD;
   return DPsfr[a][b];
}
ll DPsfu[2001][2001];
ll sfu(int a,int b,int c,int d)
{
   if(c>d) return 0;
   if(a<0||b<0)  return 0;
   if(a==0) return 1;
   if(b==0) return 1;
   if(DPsfu[a][b]!=-1)  return DPsfu[a][b];
   DPsfu[a][b]=(sfu(a,b-1,c,d+1)+sfu(a-1,b,c+1,d))%MOD;
   return DPsfu[a][b];
}
int main()
{
   #ifndef ONLINE_JUDGE
   freopen("tempC.txt","r",stdin);
   freopen("outC.txt","w",stdout);
   #endif
   char str[10];
   int t,x,y;
   scanf("%d\n",&t);
   fora(i,0,t)
   {
      scanf("%d-%d",&x,&y);
      ms(DPsfr,-1);
      ms(DPsfu,-1);
      printf("Case #%d: %lld %lld\n",i+1,sfr(x-1,y,1,0),sfu(x,y,0,0));
   }
   return 0;
}
