#include<iostream>
#include<map>
#include<algorithm>
#include<math.h>
#include<stack>
#include<queue>
#include<string.h>
#include<vector>
#include<iomanip>
#include<cstdio>
#include<set>
#define REP(i,n)	for(int i=0;i<n;i++)
#define RE(i,j,n)	for(int i=j;i<n;i++)
using namespace std;
typedef long long LL;
typedef long L;
int **dp;
LL getVal(int a,int b,int ac,int bc)
{
	if(ac==a || bc==b)	return 1;
	if(dp[ac][bc]!=-1)	return dp[ac][bc];
	LL val1=0,val2=0;
	val1=getVal(a,b,ac+1,bc);
	if(bc+1<ac)	val2=getVal(a,b,ac,bc+1);
	dp[ac][bc]=((val1+val2)%1000000007);	
}
LL getVal1(int a,int b,int ac,int bc)
{
	if(ac==a || bc==b)	return 1;
	if(dp[ac][bc]!=-1)	return dp[ac][bc];
	LL val1=0,val2=0;
	val1=getVal1(a,b,ac+1,bc);
	if(bc+1<=ac)	val2=getVal1(a,b,ac,bc+1);
	dp[ac][bc]=((val1+val2)%1000000007);	
}
int main()
{
	ios::sync_with_stdio(false);
	int t;
	cin>>t;
	int n;
	REP(z,t)
	{
		char s[20];
		cin>>s;
		int a=0,b=0;
		int i=0;
		while(s[i]!='-')
		{
			a*=10;
			int temp=s[i]-'0';
			a+=temp;
			i++;
		}
		i++;
		while(s[i])
		{
			b*=10;
			int temp=s[i]-'0';
			b+=temp;
			i++;
		}
		dp=new int*[a+1];
		REP(i,a+1)	dp[i]=new int[b+1];
		RE(i,0,a+1)
		{
			RE(j,0,b+1)
			{
				dp[i][j]=-1;
			}
		}
		//cout<<a<<" "<<b<<endl;
		LL ans1=0,ans2=0;
		ans1=getVal(a,b,0,0);
		RE(i,0,a+1)
		{
			RE(j,0,b+1)
			{
				dp[i][j]=-1;
			}
		}
		ans2=getVal1(b,a,0,0);
		cout<<"Case #"<<(z+1)<<": "<<ans1<<" "<<ans2<<endl;
	}
	return 0;
}

