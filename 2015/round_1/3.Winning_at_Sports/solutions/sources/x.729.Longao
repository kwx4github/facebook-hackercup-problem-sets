#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int MODNUM = 1000000007;

int cases, A, B;
long long dp[4005][2005];

int main(){
	scanf("%d", &cases);
	for(int xx = 1; xx <= cases; ++xx){
		scanf("%d-%d", &A, &B);
		// Stress-free
		memset(dp, 0, sizeof(dp));
		dp[0][0] = 1;
		for(int i = 1; i <= A + B; ++i)
			for(int j = 0; j <= min(i, A); ++j)
				if(j > i - j){
					// Win
					if(j > 0) dp[i][j] = dp[i - 1][j - 1];
					// Lose one point
					if(j > (i - 1 - j)) dp[i][j] = (dp[i][j] + dp[i - 1][j]) % MODNUM;
				}
		long long ans1 = dp[A + B][A];
		// Stressful
		memset(dp, 0, sizeof(dp));
		dp[0][0] = 1;
		for(int i = 1; i <= A + B; ++i)
			for(int j = 0; j <= min(i, A); ++j)
				if(j <= i - j || (i - j == B)){
					// Lose one point
					if((i - 1 - j) < B) dp[i][j] = dp[i - 1][j];
					// Win
					if(j > 0 && (j <= (i - j) || (i - j == B))) dp[i][j] = (dp[i][j] + dp[i - 1][j - 1]) % MODNUM;
				}
		printf("Case #%d: %lld %lld\n", xx, ans1, (B ? dp[A + B][A] : 0));
	}
}
