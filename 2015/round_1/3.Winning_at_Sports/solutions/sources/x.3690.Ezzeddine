#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <climits>
using namespace std;	


int dp[2005][2005];

long long int noStress(int a, int b);
long long int stress(int a, int b);

void fill(){
	for(int i=0; i<2005; i++){
		for(int j=0; j<2500; j++){
			dp[i][j] = -1;
			}
		}	
}
int main(){

	freopen("out.txt","w",stdout);
	freopen("in.txt","r",stdin);

	int T,a,b;
	char hyph;
	cin>>T;
	for(int i=0; i<T; i++){
		cin>>a>>hyph>>b;
		fill();
		long long int x = noStress(a,b);
		fill();
		long long int y = stress(a,b);
		cout<<"Case #"<<i+1<<": "<<x<<" "<<y<<endl;
	}
	return 0;
}

long long int noStress(int a, int b){
	//a>b
	if(dp[a][b] != -1){
		return dp[a][b];
	}
	long long int x = 0,y = 0;
	if(a==1 && b==0){
		return 1;
	}
	if(a > 1 && b == 0){
		return 1;
	}
	if(a-1 > b){
		x = noStress(a-1,b)%1000000007;
	}
	y = noStress(a,b-1)%1000000007;

	return dp[a][b] = (x+y)%1000000007;
	
}

long long int stress(int a, int b){
	//you never have more points than your opponent until after their score is equal to their final score
	if(dp[a][b] != -1){
		return dp[a][b];
	}
	long long int x=0,y=0;
	if(b==1 && a==0){
		return 1;
	}
	if(b > 1 && a == 0){
		return 1;
	}
	if(b < a){
		return dp[a][b] = stress(a-1,b)%1000000007;
	}
	if(b-1 >= a){
		x = stress(a,b-1)%1000000007;
	}
	y = stress(a-1,b)%1000000007;

	return dp[a][b] = (x+y)%1000000007;
}