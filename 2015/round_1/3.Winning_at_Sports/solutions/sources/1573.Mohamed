

#include <iostream>
#include <fstream>
#include <unordered_map>
#include <algorithm>
#include <unordered_set>

using namespace std;

#define M 1000000007
long long dp[5000][5000], ep[5000][5000];
long long solveDp(int i, int j, int a, int b){
	if (i == a && j == b) return 1;
	if (i > a || j > b) return 0;
	if (i <= j) return 0;
	if (dp[i][j] != -1) return dp[i][j];
	long long ans = ((solveDp(i + 1, j, a, b) % M) + (solveDp(i, j + 1, a, b) % M)) % M;
	dp[i][j] = ans;
	return ans;
}

long long solveEp(int i, int j, int a, int b){
	if (i == a && j == b) return 1;
	if (j > b || i > a) return 0;
	if (i > j && j != b) return 0;
	if (ep[i][j] != -1) return ep[i][j];
	long long ans = ((solveEp(i + 1, j, a, b) % M) + (solveEp(i, j + 1, a, b) % M)) % M;
	ep[i][j] = ans;
	return ans;
}
int main(){
	ifstream fin("input.txt");
	ofstream fout("output.txt");
	//--
	int t, a, b, z = 1;
	char c;
	fin >> t;
	while (t--){
		fin >> a >> c >> b;
		for (int i = 0; i <= a; i++)
			for (int j = 0; j <= b; j++) dp[i][j] = -1;

		for (int i = 0; i <= a; i++)
			for (int j = 0; j <= b; j++) ep[i][j] = -1;
		fout << "Case #" << z << ": " << solveDp(1, 0, a, b) << " " << solveEp(0, 0, a, b) << endl;
		z++;
	}


	return 0;
}

