#include <bits/stdc++.h>
#define mod 1000000007
using namespace std;

int vis[2001][2001];
int con[2001][2001];
int Id =  0;

int main(){
    freopen("winning_at_sports.txt", "rt", stdin);
    freopen("Winningout.txt", "wt", stdout);
    int t ;
    int n , m ;
    int cas =  0 ;
    char c;
    scanf("%d",&t);
    while(t-->0){
        Id++;
        scanf("%d-%d",&n,&m);
        con[1][0] = 1 ;
        for(int i = 0  ; i <= n ; i++){
            for(int j = 0 ; j <= m ; j++){
               if( i <= j){
                continue;
               }
               if(vis[i+1][j]!=Id){
                    vis[i+1][j] = Id ;
                    con[i+1][j] = 0 ;
                }
                con[i+1][j] += con[i][j];
                con[i+1][j] = (con[i+1][j] >= mod?con[i+1][j]-mod:con[i+1][j]);
                if(j+1 < i){
                    if(vis[i][j+1]!=Id){
                        vis[i][j+1] = Id ;
                        con[i][j+1] = 0 ;
                    }
                    con[i][j+1] += con[i][j];
                    con[i][j+1] = (con[i][j+1] >= mod?con[i][j+1]-mod:con[i][j+1]);
                }
            }
        }
        printf("Case #%d: %d ",++cas,con[n][m]);
        Id++;
        vis[0][1] = Id;
        con[0][1] = 1 ;
        for(int i = 0  ; i <= n ; i++){
            for(int j = 0 ; j <= m ; j++){
                if( j < i){
                   continue;
                }
                if(vis[i][j+1]!=Id){
                    vis[i][j+1] = Id ;
                    con[i][j+1] = 0 ;
                }
                con[i][j+1] += con[i][j];
                con[i][j+1]  = (con[i][j+1] >= mod?con[i][j+1]-mod:con[i][j+1]);
                if(i+1 <= j){
                    if(vis[i+1][j]!=Id){
                        vis[i+1][j] = Id ;
                        con[i+1][j] = 0 ;
                    }
                    con[i+1][j] += con[i][j];
                    con[i+1][j] = (con[i+1][j] >= mod?con[i+1][j]-mod:con[i+1][j]);
                }
            }
        }
        printf("%d\n",con[m][m]);
    }
}

