
#include<iostream>
# include <cmath>
# include <algorithm>
# include <cstdio>
# include <cstring>
# include <string>
# include <cstdlib>
# include <vector>
# include <bitset>
# include <map>
# include <queue>
# include <stack>
# include <set>
# include <list>
# include <deque>
# include <functional>
using namespace std;

//#define DEBUG


#define DEB(x) cout<<#x<<"="<<x<<" "
#define DEBN(x) cout<<#x<<"="<<x<<"\n"


#ifdef DEBUG
#define D(x) DEB(x)
#define DN(x) DEBN(x)
#define DA(a,n) cout<<#a<<"=["; printarray(a,n); cout<<"]\n"
#define DAR(a,n,s) cout<<#a<<"["<<s<<"-"<<n-1<<"]=["; printarray(a,n,s); cout<<"]\n"
#else
#define D(x) 
#define DN(x)
#define DA(a,n) 
#define DAR(a,n,s)
#endif

#ifdef DEBUG
#define DPR(fmt, ...) \
	do { printf(fmt, ## __VA_ARGS__); } while (0)
#else
#define DPR(fmt, ...) \
	do { } while (0)
#endif

#define PR(fmt, ...) \
	do { printf(fmt, ## __VA_ARGS__); } while (0)

#define SC(fmt, ...) \
	do { scanf(fmt, ## __VA_ARGS__); } while (0)

# define mod 1000000007
# define PI 3.14159265f

#define pii pair<int,int>
#define pll pair<long long,long long>
#define mp make_pair
#define F first 
#define S second
#define ll long long

#define tri pair< int,pii >
#define trl pair< long long,pll >
#define Ft first
#define St second.first
#define Tt second.second
#define mkt(a,b,c) mp(a,mp(b,c))



#define Max(a,b) (a>b?a:b)
#define Min(a,b) (a<b?a:b)
#define FI(n) for(i=0;i<n;i++)
#define FI1(n) for(i=1;i<n;i++)
#define FJ(n) for(j=0;j<n;j++)
#define FJ1(n) for(j=1;j<n;j++)
#define FJI for(j=0;j<i;j++)
#define FJI1 for(j=1;j<i;j++)
#define FJIE for(j=0;j<=i;j++)
#define FJIE1 for(j=1;j<=i;j++)
#define For(i,a,b) for(i=a;i<b;i++)

// Input macros
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)

//Output macros
#define pr(n)                      printf("%d ",n)
#define prn(n)                      printf("%d\n",n)
#define prc(n)                       printf("%c",n)
#define prcn(n)                       printf("%c\n",n)
#define prl(n)                       printf("%lld ",n)
#define prln(n)                       printf("%lld\n",n)
#define prf(n)                       printf("%lf ",n)
#define prfn(n)                       printf("%lf\n",n)
#define prs(n)                       printf("%s ",n)
#define prsn(n)                       printf("%s\n",n)


// Useful constants
#define INF                         (int)1e9
#define EPS		(int)1e-9

//STL containers
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define sz(a)                       ((int)(a.size()))
#define vi vector<int>
#define vl vector<long long>
#define svi(vec,n) FI(n) s(vec[i])
#define svl(vec,n) FI(n) sl(vec[i])
#define it ::iterator

//fill char arrays
#define fill(a,v)                    memset(a, v, sizeof (a))

#define checkbit(n,b)                ( (n >> b) & 1)
#define DREP(a)                      sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)               (lower_bound(all(arr),ind)-arr.begin())

#define sor(a)	sort(all(a))
#define rsor(a) sort(all(a)); reverse(all(a));
#define exchange(t,a,b) typeof(a) t =a; a=b; b=t
//STL output ********************************
template <typename T1, typename T2>
inline std::ostream& operator << (std::ostream& os, const std::pair<T1, T2>& p)
{
	return os << "(" << p.first << ", " << p.second << ")";
}

template<typename T>
inline std::ostream &operator << (std::ostream & os,const std::vector<T>& v)
{
	bool first = true;
	os << "[";
	for(unsigned int i = 0; i < v.size(); i++)
	{
		if(!first)
			os << ", ";
		os << v[i];
		first = false;
	}
	return os << "]";
}


	
template<typename T1, typename T2>
inline std::ostream &operator << (std::ostream & os,const std::map<T1, T2>& v)
{
	bool first = true;
	os << "[";
	for (typename std::map<T1, T2>::const_iterator ii = v.begin(); ii != v.end(); ++ii)
	{
		if(!first)
			os << ", ";
		os << *ii ;
		first = false;
	}
	return os << "]";
}
//*****************************************
//printing array
template<typename T,typename T2>
void printarray(T  a[],T2 sz,T2 beg=0)
{
	for(T2 i=beg;i<sz;i++) cout<<a[i]<<" ";
}
//*********************************8
//The main code starts here
int table[2010];
int new_table[2010];
int get_cur_cell(int a)
{
	if (a<=0) 
	{
		return 1;
	}	
	return new_table[a];
}
int get_prev_cell(int a,bool isfirst)
{
	if (isfirst ||a<=0) 
	{
		return 1;
	}	
	return table[a];
}
int fill_cell(int a,int b,bool isfirst)
{
	int val1,val2;
	if(b>0)
	{
		 val1=get_cur_cell(a-1);
	}
	else 
	{
		val1=0;
	}
	if(a>0)
	{
	val2=get_prev_cell(a,isfirst);
	}
	else
	{
		val2=1;
	}
	int val=val1+val2;
	val%=mod;
	return val;
}
void dp(int s1,int s2)
{
	int i,j,k;

	for (i = 1; i < s1+1; i++) 
	{
		for (j = 1; j < s2+1; j++) 
		{
				k=(s1-i)-(s2-j);	
				new_table[j]=fill_cell(j,k,i==1);					
		}
		for (j = 1; j < s2+1; j++) 
		{
				table[j]=new_table[j];
		}
	}
}
int main()
{
	int cas,t;
	int i,j;
	int n,m;
	s(t);
	For(cas,1,t+1)
	{
		char str[15];
		scanf("%s",&str);
		char s1[10],s2[10];
		sscanf(str,"%[^-]-%s",&s1,&s2);
		D(s1); 
		DN(s2); 
		int scor1=atoi(s1),scor2=atoi(s2);	
		D(scor1); 
		DN(scor2); 
		dp(scor1-1,scor2);
		int ans1=table[scor2];
		dp(scor2,scor1);
		int ans2=table[scor1];
		if (scor2==0) 
		{
			ans1=ans2=1;
		}
		printf("Case #%d: %d %d\n",cas,ans1,ans2);
	}
	return 0;
}	

