#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>

using namespace std;

const int N = 2000 + 10;
const int MOD = (int)1e9 + 7;

int A, B;
int f[N][N];

int ok1(int a, int b)
{
	if (a > A || b > B) return false;
	return a > b;
}

int ok2(int a, int b)
{
	if (a > A || b > B) return false;
	if (b == B) return true;
	return a <= b;
}

void solve()
{
	scanf("%d-%d", &A, &B);

	memset(f, 0, sizeof f);
	f[0][0] = 1;
	for(int i = 0; i <= A; ++ i) {
		for(int j = 0; j <= B; ++ j) {
			if (f[i][j] == 0) continue;
			if (ok1(i + 1, j)) {
				(f[i + 1][j] += f[i][j]) %= MOD;
			}
			if (ok1(i, j + 1)) {
				(f[i][j + 1] += f[i][j]) %= MOD;
			}
		}
	}

	cout << ' ' << f[A][B];

	memset(f, 0, sizeof f);
	f[0][0] = 1;
	for(int i = 0; i <= A; ++ i) {
		for(int j = 0; j <= B; ++ j) {
			if (f[i][j] == 0) continue;
			if (ok2(i + 1, j)) {
				(f[i + 1][j] += f[i][j]) %= MOD;
			}
			if (ok2(i, j + 1)) {
				(f[i][j + 1] += f[i][j]) %= MOD;
			}
		}
	}
	cout << ' ' << f[A][B] << endl;
}

int main()
{
	int t;
	cin >> t;
	for(int i = 1; i <= t; ++ i) {
		cout << "Case #" << i << ":";
		solve();
	}
	return 0;
}
