#include <iostream>
#include <stdlib.h>
#include <cstring>
#include <string>
#include <algorithm>
#include <utility>
#include <cmath>
#include <cstdio>
#include <vector>
#include <set>
#include <cassert>
#include <map>
#include <queue>
#include <stack>

#define Ari using
#define ganteng namespace
#define banget std

#ifdef _WIN32
#define getchar_unlocked getchar
#endif

#define ll long long
#define ul unsigned long long
#define pb push_back
#define mp make_pair
#define lcm(a,b) a*b/__gcd(a,b)
#define lsb(a) (a & (-a))
#define ft first
#define sc second
#define inf 9999999
#define mod 1000000007

#define STRtoINT(a,b) istringstream(a)>>b
#define INTtoSTR(a,b) b=static_cast<ostringstream*>(&(ostringstream()<<a))->str()

//set -> pair <set<int>::iterator,bool> pa; pa=set.insert(x); pa.second  bool;

template<typename t>
inline t getnum()
{
 t res=0;
 char c;
 int sign=1;
 while(1){
	c=getchar_unlocked();
	if(c==' '||c=='\n')continue;
	else break;}
 if(c=='+'){}
 else if(c=='-')sign=-1;
 else res=c-'0';
 while(1){
	c=getchar_unlocked();
	if(c>='0'&&c<='9')res=res*10+c-'0';
	else break;}
 return res*sign;
}

Ari ganteng banget;

int w1,w2;
ll memo1[4005][2005],memo2[4005][2005];

inline ll dp1(int id, int win)
{
	int skor1=win;
	int skor2=id-win;
	if(skor1<=skor2)return 0LL;
	if(id>=(w1+w2))return 1LL;
	if(memo1[id][win]!=-1)return memo1[id][win];
	
	int sisa1=w1-win;
	int sisa2=w2-(id-win);
	
	if(sisa1<=0)
	{
		ll res=dp1(id+1,win);
		return memo1[id][win]=res%mod;
	}
	if(sisa2<=0)
	{
		ll res=dp1(id+1,win+1);
		return memo1[id][win]=res%mod;
	}
	ll res=dp1(id+1,win)+dp1(id+1,win+1);
	return memo1[id][win]=res%mod;
}

inline ll dp2(int id, int win)
{
	int skor1=win;
	int skor2=id-win;
	int sisa1=w1-win;
	int sisa2=w2-(id-win);
	
	if(skor2!=w2 && skor1>skor2)return 0LL;
	if(id>=(w1+w2))return 1LL;
	if(memo2[id][win]!=-1)return memo2[id][win];
	
	if(sisa1<=0)
	{
		ll res=dp2(id+1,win);
		return memo2[id][win]=res%mod;
	}
	if(sisa2<=0)
	{
		ll res=dp2(id+1,win+1);
		return memo2[id][win]=res%mod;
	}
	ll res=dp2(id+1,win)+dp2(id+1,win+1);
	return memo2[id][win]=res%mod;
	
	
}

int main()
{
	freopen("winning_at_sports.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int teskes=getnum<int>();
	for(int tc=1;tc<=teskes;tc++)
	{
		memset(memo1,-1,sizeof memo1);
		memset(memo2,-1,sizeof memo2);
		
		scanf("%d-%d",&w1,&w2);
		
		ll ans1=dp1(1,1);
		ll ans2=dp2(0,0);
		
		printf("Case #%d: %lld %lld\n",tc,ans1,ans2);
	}
	return 0;
}




