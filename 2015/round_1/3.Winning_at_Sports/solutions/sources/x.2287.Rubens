#include <stdio.h>

#define MODx 1000000007

long long int mod(long long int a) {return ((a % MODx) + MODx)%MODx;}

long long int dpmin[4005][2005];
long long int dpmax[4005][2005];
int a, b;

long long int dpminf(int tot, int vit) {
    if (tot == 0)
        return 1LL;

    if (dpmin[tot][vit] != -1) {
        return dpmin[tot][vit];
    } else {
        long long int x, y;

        if (vit - 1 > (tot - vit) || tot == 1)
            x = dpminf(tot-1, vit-1);
        else
            x = 0;

        if (tot > vit)
            y = dpminf(tot-1, vit);
        else
            y = 0;

        return dpmin[tot][vit] = mod(x+y);
    }
}

long long int dpmaxf(int tot, int vit) {
    if (tot == 0 || vit == 0)
        return 1LL;

    if (dpmax[tot][vit] != -1) {
        return dpmax[tot][vit];
    } else {
        long long int x, y;

        if (vit > 0)
            x = dpmaxf(tot-1, vit-1);
        else
            x = 0;

        if (vit <= (tot - vit - 1))
            y = dpmaxf(tot-1, vit);
        else
            y = 0;

        return dpmax[tot][vit] = mod(x+y);
    }
}

int main() {
    int n, i, j, k;

    scanf (" %d", &n);

    for (i = 0; i < n; i++) {

        for (j = 0; j < 4005; j++)
            for (k = 0; k < 2005; k++)
                dpmin[j][k] = dpmax[j][k] = -1;

        scanf (" %d-%d", &a, &b);

        printf("Case #%d: %lld %lld\n", i+1, dpminf(a+b,a), dpmaxf(2*b-1, b-1));
    }

    return 0;
}
