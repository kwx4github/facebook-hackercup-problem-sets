#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<iostream>
#include<algorithm>
#include<queue>
#include<stack>
#include<vector>
#include<map>
#include<set>
#include<deque>
#include<bitset>
#include<time.h>
#define ll long long
#define inf 0x7FFFFFFF
#pragma comment(linker, "/STACK:102400000,102400000")
#define MOD 1000000007
using namespace std;
ll dp1[2005][2005];
ll dp2[2005][2005];
#define N 2000
void init()
{
    memset(dp1,0,sizeof(dp1));
    dp1[1][0]=1;
    int i,j;
    for (i=2; i<=N; i++)
    for (j=0; j<i; j++)
    {
        if (i-1>j)
            dp1[i][j]=(dp1[i][j]+dp1[i-1][j])%MOD;
        if (i>j-1 && j-1>=0)
            dp1[i][j]=(dp1[i][j]+dp1[i][j-1])%MOD;
    }
}
ll sfree(ll n,ll m)
{
    if (n<=m) return 0;
    return dp1[n][m];
}
ll sful(ll n,ll m)
{
    if (n<=m) return 0;
    memset(dp2,0,sizeof(dp2));
    int i,j;
    for (i=0; i<=N; i++)
        dp2[i][0]=1;
    for (j=0; j<=N; j++)
        dp2[0][j]=1;
    for (i=1; i<=n; i++)
    for (j=1; j<=m; j++)
    {
        if (i-1<=j || (i-1>j && j==m))
            dp2[i][j]=(dp2[i][j]+dp2[i-1][j])%MOD;
        if (i<=j-1 || (i>j-1 && j-1==m))
            dp2[i][j]=(dp2[i][j]+dp2[i][j-1])%MOD;
    }
    return dp2[n][m];
}
int main()
{
    int i,j,k;
    int t;
    ll n,m;
    init();
    //srand((unsigned)time(NULL));//int data=rand()%10000+1;
    freopen("winning_at_sports.txt","r",stdin);freopen("C-output.txt","w",stdout);
    scanf("%d",&t);for(int tcase=1;tcase<=t;tcase++)
    //while(scanf("%d",&n)!=EOF)
    {
        scanf("%lld-%lld",&n,&m);
        if (n<=m)
        {
            printf("Case #%d: 0 0\n",tcase);
            continue;
        }
        printf("Case #%d: %lld %lld\n",tcase,sfree(n,m)%MOD,sful(n,m)%MOD);
    }
}
