import sys
import math

# sample input
'''
5
2-1
3-1
3-2
10-5
1000-500
'''

# sample output
'''
Case #1: 1 1
Case #2: 2 1
Case #3: 2 2
Case #4: 1001 42
Case #5: 70047606 591137401
'''

# Write solution here
def solve1(w, l):
	if w == 1 and l == 0:
		return 1
	elif w <= l or w < 0 or l < 0:
		return 0
	elif (w, l) in mem:
		return mem[(w, l)]
	else:
		out = solve1(w-1, l) + solve1(w, l-1)
		out %= 1000000007
		mem[(w, l)] = out
		return out

def solve2(w, l):
	if w == 0 and l == 1:
		return 1
	elif w > l or w < 0 or l < 0:
		return 0
	elif (w, l) in mem2:
		return mem2[(w, l)]
	else:
		out = solve2(w-1, l) + solve2(w, l-1)
		out %= 1000000007
		mem2[(w, l)] = out
		return out


#######################################################################################################
# Basic setting reading. No need to touch this part
sys.setrecursionlimit(1000000) 
if len(sys.argv) > 1:
	inFile = sys.argv[1]
else:
	inFile = "C.txt"

f = open(inFile, 'r')
cases = int(f.readline())

outFile = open("C_out.txt","w")

#######################################################################################################

global mem, mem2
for c in xrange(cases):

	# read input for the c-th case
	(win, loss) = f.readline().strip().split("-")
	(w, l) = (int(win), int(loss))

	# print input to make sure the reading works
	print (w, l)

	mem = dict()
	out = solve1(w, l)

	mem2 = dict()
	out2 = solve2(l-1, l)

	outStr = "Case #%d: %d %d\n" %(c+1, out, out2)
	outFile.write(outStr)
	print outStr

outFile.close() 



