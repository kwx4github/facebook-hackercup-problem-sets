#include <iostream>
#include <fstream>
#include <algorithm>

using namespace std;

const int N  = 2005;
const int MOD = 1000000007;
int dp[N][N];
int a, b;

int go(int i, int j){
	if (dp[i][j]!= -1)
		return dp[i][j];
	else 
		return dp[i][j] = (go(i+1, j) + go(i, j+1))%MOD;
}
	
int main(){
	ifstream fin("c.in");
	ofstream fout("c.out");

	int tc;
	fin>>tc;
	
	
	for(int t = 1; t <= tc; t++){
		fin>>a>>b;
		b=-b;
		
		cout<<"Case #"<<t<<": ";
		fout<<"Case #"<<t<<": ";

		for(int i = 0; i < a+2; i++)
			for(int j = 0; j < b+2; j++)
				dp[i][j] = (i>a || j>b || j>=i) ? 0: -1;
		dp[a][b] = 1;	

		cout<<go(1, 0)<<" ";
		fout<<go(1, 0)<<" ";

		for(int i = 0; i < a+2; i++)
			for(int j = 0; j < b+2; j++)
				dp[i][j] = (i>a || j>b || (i>j && j<b) ) ? 0: -1;
		dp[a][b] = 1;	

		cout<<go(0, 0)<<endl;
		fout<<go(0, 0)<<endl;

	}

	fout.close();
}