#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <iterator>
#include <vector>

using namespace std;

long long dp[2005][2005];
long long dp2[2005][2005];
long long MOD = 1000000007;
long long stress_free(int A, int B) {
	if (A <= B) return 0;
	if (dp[A][B] != -1) return dp[A][B];
	long long ans = 0;
	if (B - 1 >= 0) ans = (ans + stress_free(A, B-1)) % MOD;
	if (A - 1 >= 0) ans = (ans + stress_free(A-1, B)) % MOD;
	return dp[A][B] = ans;
}

long long stressful(int A, int B) {
	if (A > B) return 0;
	if (dp2[A][B] != -1) return dp2[A][B];
	long long ans = 0;
	if (B - 1 >= 0) ans = (ans + stressful(A, B-1)) % MOD;
	if (A - 1 >= 0) ans = (ans + stressful(A-1, B)) % MOD;
	return dp2[A][B] = ans;
}

int main() {
	memset(dp, -1, sizeof dp);
	memset(dp2, -1, sizeof dp2);
	dp[1][0] = 1;
	dp2[0][1] = 1;
	int T, A, B; cin >> T;
	for (int caseNo = 1; caseNo <= T; ++caseNo) {
		scanf("%d-%d", &A, &B);
		int ans = 0;
		cout << "Case #" << caseNo << ": " << stress_free(A, B) << " " 
			<< stressful(B, B) << endl;
	}
	return 0;
 }