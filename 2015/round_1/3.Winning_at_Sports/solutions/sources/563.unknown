#include <iostream>
using namespace std;

#define once for(static int rest__=1;rest__;--rest__)

const int N = 2015 + 2015;
const long mod = 1000000007;

long binom(int n, int k)
{
    static long binom_[N][N];
    once for (int i = 0; i < N; ++i) {
        binom_[i][0] = 1;
        for (int j = 1; j <= i; ++j) {
            binom_[i][j] = binom_[i-1][j-1] + binom_[i-1][j];
            if (binom_[i][j] >= mod) binom_[i][j] -= mod;
        }
    }
    return 0 <= k and k <= n ? binom_[n][k] : 0;
}
inline long grid(int a, int b) { return binom(a+b, b); }
inline long stressfree(int a, int b) { return (grid(a-1, b) - grid(a, b-1) + mod) % mod; }
inline long stressful(int b) { return (grid(b, b) - grid(b+1, b-1) + mod) % mod; }

int main()
{
    cin.tie(0);
    ios_base::sync_with_stdio(false);

    int t;
    cin >> t;
    for (int i = 1; i <= t; ++i) {
        int a, b; char dummy;
        cin >> a >> dummy >> b;
        cout << "Case #" << i << ": " << stressfree(a, b) << ' ' << stressful(b) << endl;
    }
}
