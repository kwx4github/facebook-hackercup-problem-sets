#pragma comment(linker, "/STACK:256000000")
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>

#define pb push_back
#define ll long long
#define pll pair<ll, ll>
#define mp make_pair
#define sq(x) ((x)*(x))
#define tmin(x,y,z) (min(min((x),(y)),(z)))
#define _MOD 1000000007LL
#define MOD(x) (((x) + 2LL * (_MOD)) % (_MOD))
#define INF (1e9)
#define LINF (1e16)
#define EPS (1e-8)
#define PI (3.1415926535897932384626433832795)
#define y1 asdf_1
#define y0 asdf_2
#define j0 jj0
typedef unsigned long long ull;
typedef long double ldd;

using namespace std;

long long f1[2010][2010], f2[2010][2010];

long long dyn1(int s1, int s2)
{
	if (s1 < 0 || s2 < 0)
		return 0;
	if (s1 <= s2)
		return 0;
	if (f1[s1][s2] != -1)
		return f1[s1][s2];
	return f1[s1][s2] = (dyn1(s1 - 1, s2) + dyn1(s1, s2 - 1)) % 1000000007;
}

long long dyn2(int s1, int s2)
{
	if (s1 < 0 || s2 < 0)
		return 0;
	if (s1 > s2)
		return 0;
	if (f2[s1][s2] != -1)
		return f2[s1][s2];
	return f2[s1][s2] = (dyn2(s1 - 1, s2) + dyn2(s1, s2 - 1)) % 1000000007;
}

void precalc()
{
	memset(f1, -1, sizeof f1);
	memset(f2, -1, sizeof f2);
	f1[1][0] = 1;
	f2[0][0] = 1;
}

void solve()
{
	int s1, s2;
	cin >> s1 >> s2;
	s2 = -s2;
	cout << dyn1(s1, s2) << " " << dyn2(s2, s2);
}

int main()
{
	ios_base::sync_with_stdio(false); cin.tie(0);
	freopen ("input.txt","r",stdin);freopen ("output.txt","w",stdout);
	precalc();

	int tt;
	cin >> tt;
	for (int ttt = 0; ttt < tt; ttt++)
	{
		cout << "Case #" << ttt + 1 << ": ";
		solve();
		cout << endl;
	}

	return 0;
}