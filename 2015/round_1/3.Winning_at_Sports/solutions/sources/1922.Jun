#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <cstdlib>
#include <map>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int N = 2010;
const int mod = 1e9 + 7;    

int A, B;
ll dp1[N][N], dp2[N][N];

inline void add(ll &x, ll y){
    x += y;
    if(x >= mod) x -= mod;
}
ll DP1(int x, int y){
    // cout << x << ' ' << y << endl;
    if(x == 0 || y == 0) return 1;
    ll &ret = dp1[x][y];
    if(ret != -1) return ret;
    ret = 0;
    if(x - 1 >= 0 && x - 1 > y) add(ret, DP1(x - 1, y));
    if(y - 1 >= 0 && x > y - 1) add(ret, DP1(x, y - 1));
    return ret;
}
ll DP2(int x, int y){
    if(x == 0 || y == 0) return 1;
    ll &ret = dp2[x][y];
    if(ret != -1) return ret;
    ret = 0;
    if(x - 1 >= 0 && x - 1 <= y) add(ret, DP2(x - 1, y));
    if(y - 1 >= 0 && x <= y - 1) add(ret, DP2(x, y - 1));
    return ret;
}
int main(){
    int _, cas = 1;
    memset(dp1, -1, sizeof(dp1));
    memset(dp2, -1, sizeof(dp2));
    for(scanf("%d", &_); _--; ){
        printf("Case #%d: ", cas++);
        scanf("%d-%d", &A, &B);
        cout << DP1(A, B) << ' ' << DP2(B, B) << endl;
    }   
    return 0;
}