/*
AUTHOR: Tenzing Shaw
LANGUAGE: Java
PROBLEM: WinningAtSports
*/

import java.io.*;
import java.util.*;

class WinningAtSports {
    private static Map<List<Integer>, Long> cacheStressFree = new HashMap<List<Integer>, Long>();

    public static long solveStressFree(int W, int L) {
        List<Integer> args = Arrays.asList(W, L);
        if(cacheStressFree.containsKey(args))
            return cacheStressFree.get(args);
        long ret;
        if(L == 0)
            ret = 1;
        else if(L == W - 1)
            ret = solveStressFree(W, L - 1);
        else
            ret = solveStressFree(W, L - 1) + solveStressFree(W - 1, L);
        cacheStressFree.put(args, ret);
        return ret % 1000000007;
    }

    private static Map<List<Integer>, Long> cacheStressful = new HashMap<List<Integer>, Long>();

    public static long solveStressful(int W, int L) {
        List<Integer> args = Arrays.asList(W, L);
        if(cacheStressful.containsKey(args))
            return cacheStressful.get(args);
        long ret;
        if(L == 0 || W == 0)
            ret = 1;
        else if(L == W)
            ret = solveStressful(W - 1, L);
        else
            ret = solveStressful(W, L - 1) + solveStressful(W - 1, L);
        cacheStressful.put(args, ret);
        return ret % 1000000007;
    }

    public static void main(String[] args) throws IOException {
        BufferedReader f = new BufferedReader(new FileReader("WinningAtSports.in"));
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("WinningAtSports.out")));
        int T = Integer.parseInt(f.readLine());

        for (int tt = 1; tt <= T; tt++) {
            StringTokenizer st = new StringTokenizer(f.readLine(), "-");
            int W = Integer.parseInt(st.nextToken());
            int L = Integer.parseInt(st.nextToken());
            out.println("Case #" + tt + ": " + solveStressFree(W, L) + " " + solveStressful(L, L));
        }

        out.close();
        System.exit(0);
    }
}