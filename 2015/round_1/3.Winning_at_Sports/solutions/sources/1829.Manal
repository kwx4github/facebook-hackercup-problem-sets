#include <map>
#include <set>
#include <math.h>
#include <deque>
#include <stack>
#include <queue>
#include <vector>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <memory.h>
#include <stdio.h>

using namespace std;

int di[] = { -1, 0, 1, 0 };
int dj[] = { 0, 1, 0, -1 };

int H, O;
long long dp[2011][2011];

void stressfree() {
	dp[2][0] = 1ll;
	for (int i = 2; i <= 2010; i++) {
		for (int j = 1; j <= i - 1; ++j) {
			dp[i][j] = ((dp[i - 1][j] % 1000000007) + (dp[i][j - 1]
					% 1000000007)) % 1000000007;
		}
	}
}
void stressful() {
	dp[1][1] = 1ll;
	for (int i = 1; i <= 2010; i++) {
		for (int j = i; j <= 2010; ++j) {
			dp[i][j] = (dp[i - 1][j] % 1000000007);
			if (i - 1 != j)
				dp[i][j] = (dp[i][j] + (dp[i][j - 1] % 1000000007))
						% 1000000007;
		}
	}
}

int main() {

#ifndef ONLINE_JUDGE
	freopen("input.in", "rt", stdin);
	freopen("output.txt", "wt", stdout);
#endif
	int T;
	char ch;
	memset(dp, 0, sizeof(dp));
	stressfree();
	stressful();
	dp[1][1] = 1;
	cin >> T;
	for (int t = 0; t < T; ++t) {
		cin >> H >> ch >> O;
		H++, O++;
		cout << "Case #" << t + 1 << ": " << dp[H][O] << " " << dp[O][O]
				<< endl;
	}

	return 0;
}
