#include <iostream>

#define MAX_N 2005
#define MOD 1000000007

using namespace std;

int tests, a, b;
char tmp;
int dp[MAX_N][MAX_N][2];

inline bool isin(int i, int j) {
	return (i < MAX_N) && (j < MAX_N);
}

inline int add(int i, int j) {
	return (i + j) % MOD;
}

inline void precomp() {
	for (int i = 0 ; i < MAX_N ; i ++) {
		for (int j = 0 ; j < MAX_N ; j ++) {
			if (i == 0 and j == 0) dp[i][j][1] = 1;
			else if (i == 1 and j == 0) dp[i][j][0] = 1;

			if (isin(i + 1, j)) {
				dp[i + 1][j][0] = add(dp[i + 1][j][0], dp[i][j][0]);
				if (i + 1 <= j) {
					dp[i + 1][j][1] = add(dp[i + 1][j][1], dp[i][j][1]);
				}
			}

			if (isin(i, j + 1)) {
				if (i > j + 1) {
					dp[i][j + 1][0] = add(dp[i][j + 1][0], dp[i][j][0]);
				}
				if (i <= j + 1) {
					dp[i][j + 1][1] = add(dp[i][j + 1][1], dp[i][j][1]);
				}
			}
		}
	}
}

int main() {
	precomp();
    cin >> tests;
    for (int test = 0 ; test < tests ; test ++) {
    	cin >> a >> tmp >> b;
		printf("Case #%d: %d %d\n", test + 1, dp[a][b][0], dp[b][b][1]);
    }
    return 0;
}
