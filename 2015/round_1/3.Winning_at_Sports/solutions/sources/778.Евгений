/*
ID: eoart2
PROG: transform
LANG: C++
*/
//#define MYDEBUG
#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:134217728")
#include <cstdio>
#include <iostream>
#include <iomanip> 
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <functional>
#include <cassert>

const long long MOD = 1000000007;
const long long INF = 2111111111111111111;
const int MAXN = 105;
const double EPS = 1e-7;
const int HASH_POW = 29;
const double PI = acos(-1.0);

using namespace std;

void my_return(int code)
{
	#ifdef MYDEBUG
		cout << "\nTime = " << fixed << setprecision(3) << double(clock()) / CLOCKS_PER_SEC << endl;
	#endif
	exit(code);
}

int dp1[2010][2010], dp2[2010][2010];

int main()
{
	//cin.sync_with_stdio(0);
	#ifdef MYDEBUG
	freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	#else
	freopen("winning_at_sports.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	#endif

	for (int i = 0; i <= 2000; ++i)
	{
		dp1[i][0] = 1;
		for (int j = 1; j < i; ++j)
			dp1[i][j] = (dp1[i - 1][j] + dp1[i][j - 1]) % MOD;
	}
	for (int i = 0; i <= 2000; ++i)
		dp2[i][0] = 1;
	for (int i = 1; i <= 2000; ++i)
	{
		for (int j = 1; j <= 2000; ++j)
		{
			if (i > j)
				dp2[i][j] = dp2[i - 1][j];
			else
				dp2[i][j] = (dp2[i - 1][j] + dp2[i][j - 1]) % MOD;
		}
	}

	int CASE;
	scanf("%d", &CASE);
	for (int t = 1; t <= CASE; ++t)
	{
		int x, y;
		scanf("%d-%d", &x, &y);
		printf("Case #%d: %d %d\n", t, dp1[x][y], dp2[x][y]);
	}

	my_return(0);
}