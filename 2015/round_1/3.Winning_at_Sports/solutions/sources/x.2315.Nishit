#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<string>
#include<stack>
#include<vector>
#include<list>
#include<queue>
#include<set>
#include<map>
#include<unordered_set>
#include<unordered_map>
#include<utility>

using namespace std;

typedef long long ll;

#define REP(a, b, c) for(ll (a)=(b); (a)<(c); (a)++)
#define dREP(a, b, c) for(ll (a)=(b); (a)>=(c); (a)--)
#define MAX 2000+10
#define MOD 1000000007

int dpfree[2000+10][2000+10], dpfull[2000+10][2000+10];

void init(){
	REP(i, 0, MAX)
		REP(j, 0, MAX)
			dpfree[i][j] = dpfull[i][j] = -1;
}

int SFree(int M, int Op){
	if(M<0||Op<0) return 0;
	if(dpfree[M][Op]!=-1) return dpfree[M][Op];
	if((M==1)&&(Op==0)) return 1;
	if(M<=Op) return dpfree[M][Op] = 0;
	return dpfree[M][Op] = (SFree(M-1, Op)+SFree(M, Op-1))%MOD;
}

int SFull(int M, int Op){
	if(M<0||Op<0) return 0;
	if(dpfull[M][Op]!=-1) return dpfull[M][Op];
	if(M==0&&Op==1) return 1;
	if(M>Op) return dpfull[M][Op] = 0;
	return dpfull[M][Op] = (SFull(M-1, Op)+SFull(M, Op-1))%MOD;
}

int main(){
	freopen("winning_at_sports.txt", "r", stdin);
	freopen("final_output.txt", "w", stdout);
	int T;
	scanf("%d", &T);
	REP(t, 1, T+1){
		printf("Case #%d: ", t);
		init();
		int M, Op;
		scanf("%d", &M);
		scanf("%*c");
		scanf("%d", &Op);
		if(M!=0)
			printf("%d %d\n", (SFree(M, Op)), (SFull(Op-1, Op)));
		else
			printf("1 0\n");
	}
	return 0;
}

