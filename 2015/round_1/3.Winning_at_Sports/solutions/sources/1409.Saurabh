#include <limits>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#define PR(x) cout<<#x<<"="<<x<<endl
#define READ2(x,y) scanf("%d %d",&x,&y)
#define REP(i,a,b) for(decltype(b) i=a;i<b;i++)
#define RP(i,a) for(decltype(a) i=0;i<a;i++)
#define tr(iter,container) for(auto iter = container.begin();iter!=container.end();iter++) 
#define S(x) cin>>x
#define PRARR(x,n) for(decltype(n) i=0;i<n;i++) cout<<#x<<"["<<i<<"]= "<<x[i]
#define rd(arr,i,n) for(decltype(n) i=0;i<n;i++) cin>>arr[i]
#define PB push_back
#define SUM(arr,n,sum) {sum=0;for(decltype(n) i=0;i<n;i++) sum+=arr[i]; }
#define VC vector
#define CLR(arr) memset(arr,0,sizeof(arr))
#define FILL(arr,val) memset(arr,val,sizeof(arr))
using namespace std;
int test = 1;
int const mod = 1000000007;
long long dp[2001][2001];
void solve(){
    int m,n;
    char ch;
    S(m);S(ch);S(n);
    REP(i,0,m+1){
        REP(j,0,n+1){
            dp[i][j]=0;
        }
    }
    REP(i,0,m+1){
        dp[i][0] = 1;
    }
    REP(i,2,m+1){
        REP(j,1,i){
            dp[i][j] = dp[i][j-1];
            if (i-1>j) dp[i][j] = (dp[i][j]+dp[i-1][j])%mod;
        }
    }
    cout<<dp[m][n]<<" ";
    void solve1(int,int);
    solve1(m,n);
}
void solve1(int m, int n){
    REP(i,0,m+1){
        REP(j,0,n+1){
            dp[i][j]=0;
        }
    }
    REP(i,0,n+1){
        dp[0][i] = 1;
    }
    REP(i,1,n+1){
        REP(j,i+1,n+1){
            dp[i][j] = dp[i-1][j];
            if (j-1>i) dp[i][j] = (dp[i][j]+dp[i][j-1])%mod;
        }
    }
    long long ans = 0;
    REP(i,0,n+1){
        ans = (ans + dp[i][n])%mod;
    }
    cout<<ans<<endl;
}
int main(){
    #ifndef ONLINE_JUDGE
    test = 3;
    #endif
    S(test);
    for (int i=0;i<test;i++){
        cout<<"Case #"<<i+1<<": ";
        solve();
    }
}

