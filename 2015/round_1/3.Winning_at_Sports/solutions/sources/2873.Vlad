#include <iostream>
#include <fstream>

using namespace std;

long long dp[2005][2005];
long long dp2[2005][2005];

const long long MOD = 1000000007;

ifstream in ("input.in");
ofstream out ("output.txt");

long long memo (int i, int j) {
	if (j == 0) {
		dp[i][j] = 1;
		return dp[i][j];
	}
	
	if (dp[i][j] > - 1)
		return dp[i][j];
	else {
		dp[i][j] = 0;
		
		if (i - 1 > j)
			dp[i][j] = memo (i - 1, j);
		if (j - 1 >= 0)
			dp[i][j] += memo (i, j - 1);
		
		dp[i][j] %= MOD;
		return dp[i][j];
	}
}

long long memo2 (int i, int j) {
	if (i == 0) {
		dp2[i][j] = 1;
		return dp2[i][j];
	}
	
	if (dp2[i][j] > -1)
		return dp2[i][j];
	
	if (i >= j) {
		dp2[i][j] = memo2 (i - 1, j);
		dp[i][j] %= MOD;
		return dp2[i][j];
	} else {
		dp2[i][j] = 0;
		if (i > 0)
			dp2[i][j] = memo2 (i - 1, j);
		dp2[i][j] += memo2 (i, j - 1);
		dp2[i][j] %= MOD;
		
		return dp2[i][j];
	}
}

int main() {
	int n, m, teste;
	string str;
	
	in >> teste;
	for (int k = 1; k <= teste; k++) {
		n = m = 0;
		
		in >> str;
		for (int i = 0; str[i] != '-'; i++)
			n = n * 10 + (str[i] - '0');
		for (int i = str.size() - 1, ZECE = 1; str[i] != '-'; i--) {
			m = ((str[i] - '0') * ZECE) + m;
			ZECE *= 10;
		}
		
		for (int i = 0; i <= 2000; i++)
			for (int j = 0; j <= 2000; j++)
				dp[i][j] = dp2[i][j] = -1;
			
		out << "Case #" << k << ": " << memo (n, m) << " " << memo2 (n, m) << '\n';
	}
	
	return 0;
}
