#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <iterator>
#include <tuple>
#include <regex>
#include <array>
#include <valarray>
#define all(v)begin(v),end(v)
#define dump(v)copy(begin(v),end(v),ostream_iterator<decltype(*begin(v))>(cout,"\n"))
#define rg(i,a,b)for(int i=a,i##e=b;i<i##e;++i)
#define fr(i,n)for(int i=0,i##e=n;i<i##e;++i)
#define rf(i,n)for(int i=n-1;i>=0;--i)
#define ei(a,m)for(auto&a:m)if(int a##i=&a-&*begin(m)+1)if(--a##i,1)
#define ec(i,m)for(int i=0,i##e=m.size();i<i##e;++i)
#define sz(v)int(v.size())
#define sr(v)sort(begin(v),end(v))
#define rs(v)sort(begin(v),end(v),greater<decltype(*begin(v))>())
#define rev(v)reverse(begin(v),end(v))
#define eb emplace_back
#define big numeric_limits<int>::max()
#define g(t,i)get<i>(t)
#define cb(v,w)copy(begin(v),end(v),back_inserter(w))
#define uni(v)sort(begin(v),end(v));v.erase(unique(begin(v),end(v)),end(v))
#define vt(...)vector<tuple<__VA_ARGS__>>
#define smx(a,b)a=max(a,b)
#define smn(a,b)a=min(a,b)
#define perm(v)next_permutation(begin(v),end(v))
#define perms(v)for(int c=(sort(begin(v),end(v)),1);c||next_permutation(all(v));c=0)
typedef long long ll;
using namespace std;

int main() {
	const int mod = 1000000007;
	ifstream cin("input.txt");
	ofstream cout("output.txt");
	int T;
	cin >> T;
	string FUCK;
	fr(cc, T) {
		int W, L;
		char dummy;
		cin >> W >> dummy >> L;
		//if (W > 5 || L > 5) break; // debug
		vector<vector<int>> m(W + 1, vector<int>(L + 1)), n = m;
		m[0][0] = n[0][0] = 1;
		for (int i = 0; i <= W; ++i) {
			for (int j = 0; j <= L; ++j) if (i || j) {
				if (i <= j || j == L) {
					if (i) n[i][j] += n[i - 1][j], n[i][j] %= mod;
					if (j) n[i][j] += n[i][j - 1], n[i][j] %= mod;
				}
				if (i > j) {
					if (i) m[i][j] += m[i - 1][j], m[i][j] %= mod;
					if (j) m[i][j] += m[i][j - 1], m[i][j] %= mod;
				}
			}
		}
		/*for (int i = 0; i <= W; ++i) {
			for (int j = 0; j <= L; ++j) {
				cerr << m[i][j] << ' ';
			}
			cerr << '\t';
			for (int j = 0; j <= L; ++j) {
				cerr << n[i][j] << ' ';
			}
			cerr << endl;
		}cerr << endl;*/
		cout << "Case #" << cc + 1 << ": " << m[W][L] << ' ' << n[W][L] << endl;
	}
	//system("pause");
}