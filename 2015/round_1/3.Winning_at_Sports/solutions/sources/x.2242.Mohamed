#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007 
typedef long long ll;
int a, b;
ll dp1[2002][2002], dp2[2002][2002];
vector<string> &split(const string &s, char delim, vector<string> &elems) {
    stringstream ss(s);
    string item;
    while (getline(ss, item, delim)) elems.push_back(item);
    return elems;
}

vector<string> split(const string &s, char delim) {
    vector<string> elems;
    split(s, delim, elems);
    return elems;
}

ll sf(int i, int j){
	if(i == 1 && j == 0) return 1;
	if(j >= i || i < 1 || j < 0) return 0;
	if(dp1[i][j] != -1) return dp1[i][j];
	return dp1[i][j] = (sf(i-1, j)%MOD + sf(i, j-1)%MOD)%MOD;
}
ll su(int i, int j){
	if(i == 0 && j == 1) return 1;
	if(i > j || i < 0 || j < 1) return 0;
	if(dp2[i][j] != -1) return dp2[i][j];
	return dp2[i][j] = (su(i-1, j)%MOD + su(i, j-1)%MOD)%MOD;
}
int main (int argc, char const* argv[])
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin>>t;	
	for(int i = 0; i < t; ++i){
		memset(dp1, -1, sizeof dp1);
		memset(dp2, -1, sizeof dp2);
		string x; cin>>x;
		vector<string> ab = split(x, '-');
		a = atoi(ab[0].c_str()); b = atoi(ab[1].c_str());		
		cout<<"Case #"<<(i+1)<<": "<<sf(a,b)%MOD<<' '<<su(b,b)%MOD<<'\n';	
	}
	return 0;
}
