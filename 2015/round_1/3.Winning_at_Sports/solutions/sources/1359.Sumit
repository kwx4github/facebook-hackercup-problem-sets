#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<deque>
#include<string>
#include<limits.h>
#include<vector>
#include<cmath>
#include<cstdlib>
#include<cassert>
#include<cctype>
#include<cstring>

#define IT(a,it) for(auto it=a.begin(); it != a.end(); it++)
#define ITT(a,it) for(typeof(a.begin()) it=a.begin();it!=a.end();it++)
#define REV_IT(a,it) for(auto it=a.rbegin(); it != a.rend(); it++)
#define REV_ITT(a,it) for(typeof(a.rbegin()) it=a.rbegin(); it != a.rend(); it++)
#define LL long long
#define LD long double
#define MP make_pair
#define FF first
#define SS second
#define PB push_back
#define INF (int)(1e9)
#define L_INF (LL)(1e18)
#define EPS (double)(1e-9)
#define L_EPS (LD)(1e-18)
#define PI (double)(3.141592653589793238)

#ifndef ONLINE_JUDGE
#  define LOG(x) cerr << #x << " = " << (x) << endl
#else
#  define LOG(x) 0
#endif

#define MAXX 100005
#define MODD 1000000007

using namespace std;

typedef pair <int, int> pi_i;
typedef pair<int, pi_i> pi_ii;

bool cmp(int a, int b){ return a>b; }
template<class T> T gcd(T a, T b) { return b ? gcd(b, a % b) : a; }
template<class T> T lcm(T a, T b) { return a * b / gcd(a, b); }

int a, b, dp[2005][2005], dp2[2005][2005];

LL solve(int ii, int jj){
	//cout<<ii<<" "<<jj<<endl;
	if(dp[ii][jj] != -1) return dp[ii][jj];
	
	if(ii >= a || jj >= b) return 1;
	
	LL v1 = 0, v2 = 0;
	if(ii-jj >= 2){
		v1 = solve(ii+1, jj);
		v2 = solve(ii, jj+1);
	}else if(ii-jj == 1){
		v1 = solve(ii+1, jj);
	}
	v1 = v1%MODD;v2 = v2%MODD;
	dp[ii][jj] = (v1+v2)%MODD;
return dp[ii][jj];
}

LL solve2(int ii, int jj){
	//cout<<ii<<" "<<jj<<endl;
	if(dp2[ii][jj] != -1) return dp2[ii][jj];
	
	if(ii >= a || jj >= b) return 1;
	
	LL v1 = 0, v2 = 0;
	
	if(jj-ii >= 1){
		v1 = solve2(ii+1, jj);
		v2 = solve2(ii, jj+1);
	}else if(jj-ii == 0){
		v2 = solve2(ii, jj+1);
	}
		
	v1 = v1%MODD;v2 = v2%MODD;
	dp2[ii][jj] = (v1+v2)%MODD;
return dp2[ii][jj];
}

int main(){
	ios_base::sync_with_stdio(false);
	freopen("game.txt","w",stdout);
	
	int t;cin>>t;
	int cas = 1;
	while(t--){
		for(int i=0;i<2005;i++) for(int j=0;j<2005;j++) dp[i][j]=-1, dp2[i][j]=-1;
		
		scanf("%d-%d",&a,&b);
		
		cout<<"Case #"<<cas<<": ";cas++;
		cout<<solve(2, 0)<<" ";
		cout<<solve2(0, 1)<<endl;
	}
return 0;	
}
