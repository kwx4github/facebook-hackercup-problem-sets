#include <cstdio>
#include <cstring>

int lut[2001][2001] = {{0}};

int compute_stressfree(int M, int N, int a, int b)
{
    if (lut[a][b])
        return lut[a][b];

    if (a==M && b==N) 
        return 1;

    int result = 0;

    if (a < M) {
        result += compute_stressfree(M,N, a+1, b);
        if (result >= 1000000007)
            result %= 1000000007;
    }

    if (a-1 < N) {
        if (b < a-1) {
            result += compute_stressfree(M,N, a, b+1);
            if (result >= 1000000007)
                result %= 1000000007;
        }
    } else {
        if (b < N) {
            result += compute_stressfree(M,N,a, b+1);
            if (result >= 1000000007)
                result %= 1000000007;
        }
    }

    lut[a][b] = result;
    return result;
}

int compute_stressful(int M, int N, int a, int b) {
    if (lut[a][b])
        return lut[a][b];

    if (a==M && b==N) 
        return 1;

    int result = 0;

    if (b<N) {
        if (a < b) {
            result += compute_stressful(M,N,a+1,b);
            if (result >= 1000000007)
                result %= 1000000007;
        }
        
        result += compute_stressful(M,N,a,b+1);
        if (result >= 1000000007)
            result %= 1000000007;
    }else{
        if (a < M) {
            result += compute_stressful(M,N,a+1,b);
            if (result >= 1000000007)
                result %= 1000000007;
        }
    }


    lut[a][b] = result;
    return result;
}

int main (int argc, char** argv)
{
    int T;
    scanf("%d", &T);
    for (int i=0; i<T; i++) {
        int M,N;
        scanf("%d-%d", &M, &N);
    
        memset(lut, 0, sizeof(int)*2001*2001);
        int stressfree = compute_stressfree(M,N,2,0); 
        memset(lut, 0, sizeof(int)*2001*2001); 
        int stressful = compute_stressful(M,N,0,1); 

        if (M == 1)
            printf("Case #%d: %d %d\n", i+1, 1, 0);
        else
            printf("Case #%d: %d %d\n", i+1, stressfree, stressful);
    }
    return 0;
}
