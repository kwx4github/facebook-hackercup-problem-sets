#include <bits/stdc++.h>

using namespace std;

typedef long long LL;
#define vi vector<int>
#define vs vector<string>
#define vl vector<LL>
#define pb push_back
#define endl "\n"

static const int MAXA = 2e3 + 5;
static const int MOD = 1000000007;
int a;
int b;
int dp[MAXA][MAXA];

int f(int x, int y)
{
   if (x < 0 || y < 0)
      return 0;
   if (dp[x][y] != -1)
      return dp[x][y];

   int z = (a-x) - (b-y);
   if (x == 0 || y == 0)
   {
      dp[x][y] = 1;
   }
   else if (z <= 1)
   {
      dp[x][y] = f(x-1, y);
   }
   else
   {
      dp[x][y] = (f(x-1, y) + f(x, y-1)) % MOD;
   }
   //cout << "f(" << x << "," << y << ") = " << dp[x][y] << endl;
   return dp[x][y];
}

int fwrap()
{
   for(int i=0;i<MAXA;i++) for(int j=0;j<MAXA;j++)
      dp[i][j] = -1;
   return f(a,b);
}

int g(int x, int y)
{
   if (x < 0 || y < 0)
      return 0;
   if (dp[x][y] != -1)
      return dp[x][y];

   int z = (b - y) - (a - x);
   if (z == 0 && y == 0)
   {
      dp[x][y] = 1;
   }
   else if (z == 0 && y != 0)
   {
      dp[x][y] = g(x,y-1);
   }
   else
   {
      dp[x][y] = (g(x-1,y) + g(x,y-1)) % MOD;
   }
   return dp[x][y];
}

int gwrap()
{
   for(int i=0;i<MAXA;i++) for(int j=0;j<MAXA;j++)
      dp[i][j] = -1;
   return g(a,b);
}


void solve(int& ret1, int& ret2)
{
   string s;
   cin >> s;
   size_t sz = s.size();
   size_t curr = 0;
   a = 0;
   while (s[curr] != '-')
   {
      a = a*10 + (s[curr] - '0');
      curr++;
   }
   b = 0;
   curr++;
   while (curr < sz)
   {
      b = b*10 + (s[curr] - '0');
      curr++;
   }

   // got a,b
   // cout << a << " " << b << endl;

   ret1 = fwrap();
   ret2 = gwrap();
}

int main()
{
   ios_base::sync_with_stdio(false);
   int T;
   cin >> T;
   for(int i=1;i<=T;++i)
   {
      int ret1 = 0;
      int ret2 = 0;
      solve(ret1, ret2);
      cout << "Case #" << i << ": " << ret1 << " " << ret2 << endl;
   }
	return 0;
}
