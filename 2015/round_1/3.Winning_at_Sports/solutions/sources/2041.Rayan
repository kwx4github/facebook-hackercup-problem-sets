#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

int DP[2002][2002];
int DP2[2002][2002];

void init() {
	for (int i = 0; i < 2002; i++)  {
		for (int j = 0; j < 2002; j++) {
			DP[i][j] = -1;
			DP2[i][j] = -1;
		}
	}
}

int stressfree(int w, int l, int W, int L) {
	if (DP[w][l] != -1) return DP[w][l];
	
	if (w > W || l > L) return 0;
	if (w == W && l == L) return 1;

	int a, b;
	a = stressfree(w + 1, l, W, L) % 1000000007;
	
	if (l == w - 1) 
		b = 0;
	else 
		b = stressfree(w, l + 1, W, L) % 1000000007;
	
	return DP[w][l] = (a + b) % 1000000007;
}

int stressfull(int w, int l, int W, int L) {
	if (DP2[w][l] != -1) return DP2[w][l];

	if (w > W || l > L) return 0;
	if (w == W && l == L) return 1;

	int a, b;
	a = stressfull(w, l + 1, W, L) % 1000000007;
	if (l == w && l != L)
		b = 0;
	else
		b = stressfull(w + 1, l, W, L) % 1000000007;
	
	return DP2[w][l] = (a + b) % 1000000007;
}

int main() {
	int T;
	ofstream out("sports.txt");
	cin >> T;
	for (int idx = 1; idx <= T; idx++) {
		init();
		string s;
		cin >> s;
		int a, b;
		a = atoi(s.substr(0, s.find('-')).c_str());
		b = atoi(s.substr(s.find('-') + 1).c_str());
		int W = max(a, b);
		int L = min(a, b);
		out << "Case #" << idx << ": " << stressfree(1, 0, W, L) << " " << stressfull(0, 0, W, L) << endl;
	}
}