//----------------------JUGNU---------------------------//
#include<bits/stdc++.h>
#define ll long long int
#define pb push_back
#define pf push_front
#define sz size
#define fr(i,a,b) for(i=a;i<b;i++)
#define fre(i,a,b) for(i=a;i<=b;i++)
#define mk make_pair
#define isset(x,i) ((x>>i)&1)
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
#define MOD 1000000007LL
using namespace std;
ll per[4001][2001];

ll power(ll a, ll b, ll m) {
	if(b==0LL || a==0LL)
		return 1LL;
	ll root = power(a,b/2LL,m);
	if(b&1LL)
		return (((root * a) % m) * root) % m;
	return (root * root) % m;
}

ll ncr (ll n, ll r) {
	if(n-r < r)
		return ncr(n, n-r);
	if(r == 0LL) return 1LL;
	if(per[n][r])
		return per[n][r];
	return per[n][r] = (ncr(n-1LL, r) + ncr(n-1LL, r-1LL)) % MOD;
}

ll inverse(ll a) {
	return power(a, MOD-2LL, MOD);
}

int main() {
	fastScan;
	ll  i,n,j ,a ,b, k, result_1;
	cin >> n;
	
	fre(k,1, n) {

		string s;
		cin >> s;
		a = b = 0;

		for(i = 0; s[i] != '-'; i++)
			a = 10 * a + s[i] - '0';

		for (j = i+1; s[j]; j++)
			b = 10*b + s[j] - '0';

		result_1 = ncr(a+b, a);
		cout << "Case #" << k << ": " << (((result_1*(a-b))%MOD) * inverse((a+b))) % MOD << " " << (ncr(2*b, b)*inverse((b+1)))%MOD << endl;

	}
return 0;
}
