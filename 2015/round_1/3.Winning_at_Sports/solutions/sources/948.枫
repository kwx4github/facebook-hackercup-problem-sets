#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <algorithm>

const int mod = 1000000007;

using namespace std;

int f1[2048][2048], f2[2048][2048];

void add(int &a, int b)
{
	a = (a + b) % mod;
}

int main()
{
	freopen("G:\\code\\HackerCup\\HackerCup\\winning_at_sports.txt", "r", stdin);
	freopen("G:\\code\\HackerCup\\HackerCup\\winning_at_sports.out", "w", stdout);

	int T, cases = 1;

	memset(f1, 0, sizeof(f1));
	memset(f2, 0, sizeof(f2));

	f1[1][0] = 1;
	for (int i = 1; i <= 2000; ++i)
	{
		for (int j = 0; j < i; ++j)
		{
			add(f1[i + 1][j], f1[i][j]);
			if (i > j + 1)
				add(f1[i][j + 1], f1[i][j]);
		}
	}

	f2[0][0] = 1;
	for (int i = 0; i <= 2000; ++i)
	{
		for (int j = i; j <= 2000; ++j)
		{
			if (i + 1 <= j)
				add(f2[i + 1][j], f2[i][j]);
			add(f2[i][j + 1], f2[i][j]);
		}
	}

	scanf("%d", &T);
	while (T--)
	{
		int ans1, ans2, x, y;
		scanf("%d-%d", &x, &y);

		ans1 = f1[x][y];

		if (y == 0)
			ans2 = 1;
		else
		{
			ans2 = 0;
			for (int i = 0; i <= x; ++i)
				add(ans2, f2[i][y - 1]);
		}

		printf("Case #%d: %d %d\n", cases++, ans1, ans2);
	}

	return 0;
}