#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <stack>
#include <queue>
#include <set>



#define forn(i,n) for(int i = 0; i < n; i++)
#define forn1(i,n) for(int i = 1; i <= n; i++)
#define forall(it, vec) for(vector<int>::iterator it = vec.begin(); it != vec.end(); it++)
#define ON(mask,i) (mask | (1L << (i)))
#define OFF(mask,i) (mask &  (-1 ^ (1L<<(i))) )
#define TOGGLE(mask,i) (mask ^ (1L << (i)))
#define isON(mask, i) (mask & (1L<<(i)))
#define mp make_pair
using namespace std;
typedef pair<int, int> pii;
#define MOD 1000000007
#define MAX 2048
int A, B, memo[MAX][MAX];

int free(int a, int b){
	if(a > A || b > B) return 0;
	if(a == A && b == B)
		return 1;
	if(memo[a][b] != -1) return memo[a][b];
	int res = 0;
	if(a - b > 1) res += free(a, b + 1);
	res = (res + free(a + 1, b)) % MOD;
	return memo[a][b] = res;
}
int full(int a, int b){
	if(a > A || b > B) return 0;
	if(a == A && b == B)
		return 1;
	if(memo[a][b] != -1) return memo[a][b];
	int res = 0;
	if(b -  a > 0 || b == B) res += full(a + 1, b);
	res = (res + full(a, b + 1)) % MOD;
	return memo[a][b] = res;
}
int main(){
	int T;
	cin >> T;
	forn1(t,T){
		cin >> A >> B;
		B *= -1;
		memset(memo,-1,sizeof(memo));
		int a = free(0,0);
		memset(memo,-1,sizeof(memo));
		int b = full(0,0);
		cout << "Case #" << t << ": " << a << " " << b << endl;
	}
	return 0;
}

