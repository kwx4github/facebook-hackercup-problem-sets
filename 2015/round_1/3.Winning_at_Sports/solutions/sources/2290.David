using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace QualifRoundFB
{
    class WinningAtSports
    {
        static void Main(string[] args)
        {
            int t;
            String line;
            
            StreamReader sr = new StreamReader("winning_at_sports.txt");
            StreamWriter sw = new StreamWriter("winning_at_sports_output.txt");
            t = Convert.ToInt32(sr.ReadLine());
            Console.WriteLine(t);
            for (int i = 1; i <= t; i++)
            {
                line = sr.ReadLine();
                String[] bits = line.Split('-');

                int you = Convert.ToInt32(bits[0]);
                int rival = Convert.ToInt32(bits[1]);

                int free = stressfree(you, rival);
                int ful = stressful(you, rival);


                //resultados
                sw.WriteLine("Case #" + i + ": " + free + " " + ful);
                Console.WriteLine("Case #" + i + ": " + free + " " + ful);

            }
            
            sw.Close();
            Console.ReadKey();

        }

        static int stressfree(int a, int b)
        {
            if (b == 0)
                return 1;
            int [,] matrix = new int [a+1,b+1];
            for (int i = 0; i < a + 1; i++)
            {
                for(int j = 0; j< b + 1; j++)
                {
                    if (i == 0)
                    {
                        matrix[i, j] = 1;
                        continue;
                    }
                    if(j == 0)
                    {
                        if (a - i > b)
                        {
                            matrix[i, j] = 1;
                        }
                        else
                            matrix[i, j] = 0;
                        continue;
                    }
                    if (i == a && j == b)
                    {
                        matrix[i, j] = matrix[i - 1, j];
                        return matrix[i, j];
                    }
                    if( (a-i) > (b-j) )
                    {
                        int x = (a - i + 1) > (b - j) ? matrix[i - 1, j] : 0;
                        int y = (a - i) > (b - j + 1) ? matrix[i, j - 1] : 0;
                        matrix[i, j] = (x + y)%1000000007;
                    }
                    else
                    {
                        matrix[i, j] = 0;
                    }
                }
            }
            return matrix[a, b];
        }

        static int stressful(int a, int b)
        {
            if(b == 0)
                return 1;
            int [,] matrix = new int [a+1,b+1];
            for (int i = 0; i < a + 1; i++)
            {
                for (int j = 0; j < b + 1; j++)
                {
                    if(j == 0)
                    {
                        matrix[i, j] = 1;
                    }
                    else
                    {
                        if(a - i > b - j)
                        {
                            matrix[i, j] = 0;
                        }
                        else
                        {
                            matrix[i, j] = (matrix[i - 1, j] + matrix[i, j - 1]) % 1000000007;
                        }
                    }
                }
            }
            return matrix[a, b];
        }

    }
}