#include <cstdio>
#include <cassert>

#include <cstring>

using namespace std;

const int MOD = 1000000007;

int W, L;

// stress-free
int DP1[2004][2004];
int go1(int w, int l) {
   if (w == 0 && l == 0) return go1(w+1, l);  // initial score
   if (w <= l) return 0;              // must have more wins than losses
   if (w == W && l == L) return 1;    // final score
   if (w > W || l > L) return 0;      // cannot exceed total wins or losses
   int& res = DP1[w][l];
   if (res < 0)
      res = ( go1(w+1, l) + go1(w, l+1) ) % MOD;
   return res;
}

// stressful
int DP2[2004][2004];
int go2(int w, int l) {
   if (w == W && l == L) return 1;  // final score
   if (w > l && l < L) return 0;    // no more wins than losses until opponent scores its final victory
   if (w > W || l > L) return 0;    // cannot exceed total wins or losses
   int& res = DP2[w][l];
   if (res < 0)
      res = ( go2(w+1, l) + go2(w, l+1) ) % MOD;
   return res;
}

int main(int argc, char* argv[]) {
   int TC;
   scanf("%d", &TC);
   for (int tc = 1; tc <= TC; ++tc) {
      scanf("%d-%d", &W, &L);
      assert( W > L );

      memset(DP1, -1, sizeof(DP1));
      int res1 = go1(1, 0);
      
      memset(DP2, -1, sizeof(DP2));
      int res2 = go2(0, 0);
      printf("Case #%d: %d %d\n", tc, res1, res2);
   }

   return 0;
}
