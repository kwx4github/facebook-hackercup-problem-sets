#include <bits/stdc++.h>
using namespace std;
#define M 1000000007

long long store[2001][2001];

long long get_Stress_free(int a , int b , int limita , int limitb) {
	if(a <= b && !(a==0 && b == 0)) return store[a][b] ;
	if(a > b && (a == limita || b == limitb)) store[a][b] = 1 ;
	if(store[a][b]) return store[a][b] ;

	else {
		store[a][b] = (get_Stress_free(a+1 , b , limita, limitb) +
					   get_Stress_free(a , b+1 , limita, limitb))%M ;

		return store[a][b] ;
	}
}

long long get_Stress_full(int a , int b , int limita , int limitb) {
	if(a > b ) return store[a][b] ;
	if(a <= b && (a == limita || b == limitb)) store[a][b] = 1 ;
	if(store[a][b]) return store[a][b] ;

	else {
		store[a][b] = (get_Stress_full(a+1 , b , limita, limitb) +
					   get_Stress_full(a , b+1 , limita, limitb))%M ;

		return store[a][b] ;
	}
	return 0 ;
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt" , "r" , stdin);
        freopen("output.txt" , "w" , stdout);
    #endif // ONLINE_JUDGE
	int test , a , b ;
	cin >> test ;
	for(int i = 1 ; i <= test ; i++) {
		scanf("%d-%d",&a , &b) ;

		memset(store , 0 , sizeof(long long) * 2001*2001) ;
		cout << "case #" << i << ": " << get_Stress_free(0 , 0 , a , b) << " ";

		memset(store , 0 , sizeof(long long) * 2001*2001) ;
		cout << get_Stress_full(0 , 0 , a , b ) << endl;
	}
	return 0 ;
}
