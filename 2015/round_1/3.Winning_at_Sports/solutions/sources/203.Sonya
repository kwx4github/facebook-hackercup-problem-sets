#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<algorithm>
#include<string>
using namespace std;

int mod = 1000000007;
long long a[2005][2005][2] = {0};
bool u[2005][2005] = {0};

int n, m;

void func(int p, int q)
{
	if (u[p][q])
		return;
	u[p][q] = 1;
	if (p == n && q == m)
	{
		a[p][q][0] = a[p][q][1] = 1;
		return;
	}

	// state 0
	if (p > q || p == q && p == 0)
	{
		if (q + 1 < p && q < m)
		{
			func(p, q + 1);
			a[p][q][0] = (a[p][q+1][0] + a[p][q][0]) % mod;
		}
		if (p < n)
		{
			func(p + 1, q);
			a[p][q][0] = (a[p + 1][q][0] + a[p][q][0]) % mod;
		}
	}

	// state 1
	if (q > p || q == p)
	{
		if (q < m)
		{
			func(p, q + 1);
			a[p][q][1] = (a[p][q + 1][1] + a[p][q][1]) % mod;
		}
		if (p < n && (p + 1 <= q || q == m))
		{
			func(p + 1, q);
			a[p][q][1] = (a[p + 1][q][1] + a[p][q][1]) % mod;
		}
	}
	if (p > q && q == m)
	{
		if (p < n)
		{
			func(p + 1, q);
			a[p][q][1] = (a[p + 1][q][1] + a[p][q][1]) % mod;
		}
	}
}

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);

	int TT;
	scanf("%d", &TT);


	for (int T = 0; T < TT; T++)
	{
		printf("Case #%d: ", T + 1);

		memset(a, 0, sizeof(a));
		memset(u, 0, sizeof(u));

		scanf("%d-%d", &n, &m);
		func(0, 0);
		printf("%lld %lld\n", a[0][0][0], a[0][0][1]);
	}

	return 0;
}