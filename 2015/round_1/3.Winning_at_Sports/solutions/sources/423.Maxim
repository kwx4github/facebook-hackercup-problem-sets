#include <algorithm>
#include <iomanip>
#include <istream>
#include <map>
#include <ostream>
#include <set>
#include <sstream>
#include <utility>
#include <vector>

using namespace std;
// Solution template generated by caide

const long long MOD = 1000000007LL;

class Solution {
public:
    void solve(std::istream& in, std::ostream& out) {
		const int MAX = 4010;
		vector<vector<long long>> C(MAX);
		C[0].resize(1);
		C[0][0] = 1;
		for (int n = 1; n < MAX; ++n) {
			C[n].resize(n + 1);
			C[n][0] = C[n][n] = 1;
			for (int k = 1; k < n; ++k)
				C[n][k] = (C[n - 1][k - 1] + C[n - 1][k]) % MOD;
		}

		int T;
		in >> T;
		for (int test = 1; test <= T; ++test) {
			out << "Case #" << test << ": ";
			string s;
			in >> s;
			size_t i = s.find('-');
			const int a = stoi(s.substr(0, i));
			const int b = stoi(s.substr(i + 1));
			if (b == 0) {
				out << "1 1" << endl;
				continue;
			}
			const int n = a + b;
			const long long ans1 = (C[n - 1][a - 1] + MOD - C[n - 1][a]) % MOD;
			const long long ans2 = (C[2 * b][b] + MOD - C[2 * b][b + 1]) % MOD;
			out << ans1 << " " << ans2 << endl;
		}
    }
};

void solve(std::istream& in, std::ostream& out)
{
    out << std::setprecision(12);
    Solution solution;
    solution.solve(in, out);
}


#include <iostream>


int main() {
    std::ios_base::sync_with_stdio(0);
    std::cin.tie(0);
    solve(std::cin, std::cout);
    return 0;
}


























