//package hackercup2015.round1

import java.util.Scanner

/**
 * Created by dimitar on 1/17/15.
 */
object Sports {

  val mod = 1000000007
  def main(args: Array[String]) {
    val sc = new Scanner(System.in)

    val t = sc.nextInt()

    sc.nextLine()
    (0 until t).foreach { c =>

      val line = sc.nextLine().split("-")
      val s1 = line(0).toInt
      val s2 = line(1).toInt

      // compute stress-free
      val n = (s1+s2-2)
      val d1 = s1
      val d2 = s1-2

      val num1 = combinations(n, d1, mod)
      val num2 = combinations(n, d2, mod)
      val free = math.abs((num1 % mod - num2 % mod) % mod)

      // compute stressful
      val num3 = combinations(s1, s2, mod)
      val num4 = combinations(s1, s2-1, mod)
      val full = {
        if (num3 < num4) {
          (mod + num3 % mod - num4 % mod) % mod
        } else {
          if (s2 <= 2) s2 else (num3 % mod - num4 % mod) % mod
        }
      }

      val res = free +" " +full
      println("Case #" +(c+1) +": " +res)

    }
  }

  def combinations(n: Int, k: Int, p: Long): Long = {
    var res = 1L
    for (i <- n until n - k by -1){
      res = res * i % p
    }

    for (i <- 1 to k) {
      res = res * inverse(i, p-2, p) %p
    }
    res
  }

  def inverse(a: Long, b: Long, mod: Long): Long = {
    var x = 1L
    var y = a
    var t = b

    while (t > 0) {
      if(t%2 == 1) {
        x= x*y  % mod
      }

      y =  y*y % mod
      t = t / 2
    }
    return x
  }
}


