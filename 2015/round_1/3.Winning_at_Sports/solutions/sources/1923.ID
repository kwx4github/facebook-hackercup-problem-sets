#include <iostream>
#include <fstream>
#include <string.h>
#include <cstdio>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <cassert>
#include <list>
#include <iomanip>
#include <math.h>
#include <deque>
#include <utility>
#include <map>
#include <set>
#include <bitset>
#include <numeric>
#include <climits>
#include <cctype>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <sstream>

#define  MOD 1000000007
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rrep(i,n) for(int i = 1; i <= n; ++i)
#define drep(i,n) for(int i = n-1; i >= 0; --i)
#define gep(i,g,j) for(int i = g.head[j]; i != -1; i = g.e[i].next)
#define each(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define rng(a) a.begin(),a.end()
#define maxs(x,y) x = max(x,y)
#define mins(x,y) x = min(x,y)
#define pb push_back
#define sz(x) (int)(x).size()
#ifndef ONLINE_JUDGE
#define gc getchar
#define pc putchar
#else
#define gc getchar_unlocked
#define pc putchar_unlocked
#endif
using namespace std;
typedef vector<int> vi;
typedef vector<string> vs;
typedef long long ll;
typedef pair<int, int> pii;
bool myfunction (int i,int j) { return (i<j); }
/*vi s;
 cout<<sz(s);
 sort(s.begin(), s.end(), myfunction);*/

long long int dp[2001][2001];
long long int hd[2001][2001];

int main()
{
    int g;
    cin>>g;
    for (int u =1; u<g+1; u++) {
        for (int i =0; i<2001; i++) {
            for (int j =0; j<2001; j++) {
                dp[i][j]=0;
                hd[i][j]=0;
            }
        }
    int x,y,i,j;
    char v;
       freopen("Homework.txt", "r", stdin);
     freopen("Homework.out", "w", stdout);
       cin>>x>>v>>y;
    dp[1][0]=1;dp[2][0]=1;dp[2][1]=1;
    hd[1][0]=1;hd[2][0]=1;hd[1][1]=1;hd[2][1]=2;hd[2][2]=2;
    for (int i=0; i<x+1; i++) {
        dp[i][0]=1;
        hd[i][0]=1;
    }
    for (int i =3; i<=x; i++) {
        for (int j=1;j<=y ; j++) {
            if(i>j){
                dp[i][j]=(dp[i][j]+dp[i][j-1])%1000000007;
            }
            if (i>j+1) {
                dp[i][j]=(dp[i][j]+dp[i-1][j])%1000000007;
            }
            if(i>=j){
                hd[i][j]=(hd[i][j]+hd[i][j-1])%1000000007;
            }
            if (i>=j+1) {
                hd[i][j]=(hd[i][j]+hd[i-1][j])%1000000007;
            }

        }
    }
    
    
    
    cout<<"Case #"<<u<<": "<<dp[x][y]<<" "<<hd[y][y]<<"\n";
    
}
    return 0;
}


