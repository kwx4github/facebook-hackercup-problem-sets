#include <bits/stdc++.h>
using namespace std;
#define int long long

int read_int() {
  char c = (char)getchar();
  while(c<'0' || c>'9') c = (char)getchar();
  int ret = 0;
  while(c>='0' && c<='9') {
    ret = 10 * ret + c - 48;
    c = (char)getchar();
  }
  return ret;
}

int go1(int cx, int cy, int x, int y) {
  //cout<<"1: "<<cx<<" "<<cy<<" "<<x<<" "<<y<<endl;
  if(cx==x && cy==y) return 1;
  if(cx<=cy) return 0;
  int res1= 0, res2 = 0;
  if(cx<x) res1 = go1(cx+1,cy,x,y);
  if(cy<y) res2 = go1(cx,cy+1,x,y);
  return res1+res2;
}

int go2(int cx, int cy, int x, int y) {
  //cout<<"2: "<<cx<<" "<<cy<<" "<<x<<" "<<y<<endl;
  if(cx==x || cy==y) return 1;
  if(cx>cy) return 0;
  int res1 = 0, res2 = 0;
  if(cx<x) res1 = go2(cx+1,cy,x,y);
  if(cy<y) res2 = go2(cx,cy+1,x,y);
  return res1+res2;
}

tuple<int,int> solve_stupid(int x, int y) {
  return make_tuple(go1(1,0,x,y),go2(0,0,x,y));
}

int mod = 1000000007;

int dp1[2005][2005], dp2[2005][2005];

signed main() {
  int T = read_int();
  for(int z=1; z<=T; z++) {
    cout<<"Case #"<<z<<": ";
    int x = read_int(), y = read_int();
    //cout<<x<<" "<<y<<endl;
    //tuple<int,int> res2 = solve_stupid(x,y);
    assert(x<=2000);
    assert(y<=2000);
    assert(x>y);
    assert(y>=0);
    for(int i=0; i<=x+2; i++) {
      for(int j=0; j<=y+2; j++) {
        dp1[i][j] = 0;
        dp2[i][j] = 0;
      }
    }
    for(int i=x; i>=0; i--) {
      for(int j=min(y,i-1); j>=0; j--) {
        if(i==x && j==y) dp1[i][j] = 1;
        else {
          dp1[i][j] = dp1[i+1][j] + dp1[i][j+1];
          if(dp1[i][j]>=mod) dp1[i][j]-=mod;
        }
      }
      for(int j=y; j>=i; j--) {
        if(i==x || j==y) dp2[i][j] = 1;
        else {
          dp2[i][j] = dp2[i+1][j] + dp2[i][j+1];
          if(dp2[i][j]>=mod) dp2[i][j]-=mod;
        }
      } 
    }
    cout<<dp1[1][0]<<" "<<dp2[0][0]<<endl;
    //assert(get<0>(res2)==dp1[1][0]);
    //assert(get<1>(res2)==dp2[0][0]);
  }
  return 0;
}
