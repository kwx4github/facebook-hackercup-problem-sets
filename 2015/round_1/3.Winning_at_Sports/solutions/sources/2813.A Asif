//!
///

/**========================================**
@Author: A Asif Khan Chowdhury
@Category:
/**========================================**/


/**................ Headers ................**/
#include <bits/stdc++.h>

using namespace std;

/**................ Macros ................**/
#define Set(N, j) (N|(1<<j))
#define reset(N, j) (N&~(1<<j))
#define Check(N, j) (bool)(N&(1<<j))
#define toggle(N, j) (N^(1<<j))
#define turnOff(N, j) (N & ~(1<<j))
#define CLEAR(A, x) ( memset(A,x,sizeof(A)) )
#define pi 3.141592653589793
#define pii pair <int, int>
#define pb push_back
#define pf printf
#define S(x) scanf("%d", &x)
#define SL(x) scanf("%ld", &x)
#define out(C) printf("Case #%d: ", C);
#define FOR(i, x, y) for(int i=x; i<=y; i++)
#define open freopen("E:/a.txt", "r", stdin);
#define write freopen("E:/b.txt","w", stdout);
#define MAX (1+(1<<5))
#define inf 0x7fffffff
#define ll long long
#define mod 1000000007
#define mx 2010
#define gc getchar
//Fast Reader
template<class T>inline bool read(T &x) {
    int c=getchar();
    int sgn=1;
    while(~c&&c<'0'||c>'9') {
        if(c=='-')sgn=-1;
        c=getchar();
    }
    for(x=0; ~c&&'0'<=c&&c<='9'; c=getchar())x=x*10+c-'0';
    x*=sgn;
    return ~c;
}
int X[]= {-1, -1, -1, 0, 1, 1, 1, 0};
int Y[]= {-1, 0, +1, 1, 1, 0, -1, -1};
int gcd(int a, int b) {
    return b?gcd(b,a%b):a;
}

ll stressFree[2010][2010], stressFull[2010][2010];

int main() {
//	open
//	write
	CLEAR(stressFree, 0);
	CLEAR(stressFull, 0);
	for(int i=1; i<mx; i++) stressFree[i][0]=1;
	for(int i=2; i<mx; i++){
        for(int j=1;j<i; j++){
            stressFree[i][j] += stressFree[i-1][j]+stressFree[i][j-1];
            if(stressFree[i][j]>=mod)
                stressFree[i][j]%=mod;
        }
	}
	for(int i=1; i<mx; i++)stressFull[0][i]=1;
	for(int j=1; j<mx; j++){
        for(int i=1; i<=j; i++){
            stressFull[i][j]+=stressFull[i-1][j]+stressFull[i][j-1];
            if(stressFull[i][j]>=mod)
                stressFull[i][j]%=mod;
        }
	}
    int test;
    read(test);
    FOR(C, 1, test) {
        int me, he;
        scanf("%d-%d", &me, &he);
        out(C);
        printf("%lld ", stressFree[me][he]);
        printf("%lld\n", stressFull[he-1][he]);
    }
    return 0;
}





