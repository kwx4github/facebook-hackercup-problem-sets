#include<iostream>
#include<cstdio>
#include<list>
#include<string>
#include<cstring>
#include<sstream>
#include<cctype>
#include<string.h>
#include<algorithm>
#include<cmath>
#include<stack>
#include<fstream>
#include<cstdlib>
#include<vector>
#include<map>
#include<set>
#include<utility>
#include<iomanip>
#include<queue>
#include<deque>
#include<iterator>
#include<assert.h>
#include<bitset>
#include<climits>
#include<ctime>
#include<complex>

using namespace std;

#define SET(a) memset(a,-1,sizeof(a))
#define ALL(a) a.begin(),a.end()
#define CLR(a) memset(a,0,sizeof(a))
#define PB push_back
#define PI acos(-1.0)
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define READ freopen("input.txt", "r", stdin)
#define WRITE freopen("output.txt", "w", stdout)
#define LL long long

#define S(a) scanf("%d",&a)
#define S2(a,b) scanf("%d%d",&a,&b)
#define KS printf("Case %d: ",kk++)

#define MOD 1000000007
#define MX 100010
long long int arr[2001][2001];

void stressfull(long long int row,long long int col)
{
	int i=0,j=0;
	arr[0][0]=1;
	for(i=0;i<=col;i++)
	{
		for(j=1;j<=col;j++)
		{
			if(j==i)
			{
				arr[i][j] = arr[i-1][j];
			}
			else if(i>0)

			{
				arr[i][j] = (arr[i-1][j]%MOD + arr[i][j-1]%MOD)%MOD;

			}
			else
			{
				arr[i][j]=arr[i][j-1];
			}
		}
	}
}

void stressfree(long long int row,long long int col)
{
	int i=0,j=0;
	arr[0][0]=1;
	for(i=1;i<=row;i++)
	{
		for(j=0;j<=col;j++)
		{
			if(j<i)
			{
				if(j>0)
				{
					if(i-1!=j)
					{
						arr[i][j] = (arr[i-1][j]%MOD + arr[i][j-1]%MOD)%MOD;
					}
					else
					{
						arr[i][j] = arr[i][j-1]%MOD;
					}
				}
				else if(j==0)
				{
					arr[i][j] = arr[i-1][j];
				}

			}
		}
	}
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
#endif

freopen("out.txt" , "w" , stdout );
	long long int tc,t=1,w,x,y,z,n,m,u,v,cnt,max_pos,min_pos,p,q,r,i,j,max,min,rem,tmp;
	long long int l;
	char s;

	cin>>tc;
	//scanf("\n");
	while(tc--)
	{
		long long int res=0,i=0;
		scanf("%lld%c%lld",&x,&s,&z);
		stressfree(x,z);

		cout << "Case #"<<t<<": ";
		res=arr[x][z];
		cout << res;
		CLR(arr);
		stressfull(x,z);
		res=arr[z][z];
		cout << " " << res;
		cout<<endl;
		t++;

	}		
	return 0;
}

