#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <map>
#include <string>
#include <iostream>
using namespace std;
#define MOD 1000000007
bool M1[2005][2005];
bool M2[2005][2005];
long long S1[2005][2005];
long long S2[2005][2005];

long long stressFreeDP(int a, int b) {
  if (a <= b || a < 0 || b < 0) {
    return  0;
  }
  if (a == 1) {
    return 1;
  }
  if (!M1[a][b]) {
    S1[a][b] = stressFreeDP(a - 1, b) +
               stressFreeDP(a, b - 1);
    S1[a][b] %= MOD;
    M1[a][b] = 1;
  }
  
  return S1[a][b];
}

long long stressfulDP(int a, int b) {
  if (a > b || a < 0 || b < 0) {
    return  0;
  }
  if (a == 0) {
    return 1;
  }
  if (!M2[a][b]) {
    S2[a][b] = stressfulDP(a - 1, b) +
               stressfulDP(a, b - 1);
    S2[a][b] %= MOD;
    M2[a][b] = 1;
  }
  return S2[a][b];
}
int main() {
  freopen("/Users/valdes/Documents/OJ/OJ/a.in", "r", stdin);
  freopen("/Users/valdes/Documents/OJ/OJ/a.out", "w", stdout);

  int t, tt = 0;
  cin >> t;
  int a, b;
  while (tt++ < t) {
    scanf("%d-%d",&a,&b);
    printf("Case #%d: %d %d\n",tt,(int)stressFreeDP(a, b), (int)stressfulDP(b, b));
  }
  return 0;
}