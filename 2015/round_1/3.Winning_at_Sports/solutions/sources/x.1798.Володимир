#pragma comment(linker, "/STACK:133217728")
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
#include <numeric>
#include <ctime>
#include <fstream>
#include <iomanip>
#include <stdexcept>
#include <functional>
#include <math.h>
using namespace std;

typedef pair<int, int> PII;
typedef vector<int> VI;

#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, a, b) for(int i = (a) - 1; i >= (b); --i)
#define CLEAR(a, b) memset(a, b, sizeof(a))
#define ALL(a) (a).begin(),(a).end()
#define PB push_back
#define MP make_pair
const int INF=1e+9;
const int MAX=2000;
const int MOD=1000000007;

int dp[2][MAX+1][MAX+1];

void precalc()
{
	dp[0][1][0]=1;
	FOR(i,1,MAX)
		FOR(j,0,MAX)
		{
			if (i>j)
			{
				dp[0][i+1][j]+=dp[0][i][j];
				if (dp[0][i+1][j]>=MOD)
					dp[0][i+1][j]-=MOD;
			}
			if (i>j+1)
			{
				dp[0][i][j+1]+=dp[0][i][j];
				if (dp[0][i][j+1]>=MOD)
					dp[0][i][j+1]-=MOD;
			}
		}

			
	dp[1][0][1]=1;
	FOR(i,0,MAX)
		FOR(j,1,MAX)
		{
			if (i<j)
			{
				dp[1][i+1][j]+=dp[1][i][j];
				if (dp[1][i+1][j]>=MOD)
					dp[1][i+1][j]-=MOD;
			}
			if (i<=j)
			{
				dp[1][i][j+1]+=dp[1][i][j];
				if (dp[1][i][j+1]>=MOD)
					dp[1][i][j+1]-=MOD;
			}
		}
}

PII solve(int a, int b)
{
	return MP(dp[0][a][b], dp[1][b][b]);
}

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);

	precalc();
	cerr << "OK" << endl;

	int T;
	scanf("%d",&T);

	FOR(t,1,T+1)
	{
		int a,b;
		scanf("%d-%d",&a,&b);
		cerr << a << " " << b << endl;
		PII p=solve(a,b);
		cout << "Case #" << t << ": " << p.first << " " << p.second << endl; 
	}

	return 0;
}