#include <cassert>
#include <cstdio>
#include <cstring>

const int limit = 2010;
const int modulo = 1000000007;

int d1[limit][limit];
int d2[limit][limit];

int main () {
  memset (d1, 0, sizeof (d1));
  d1[1][0] = 1;
  for (int a = 0; a < limit - 1; a++)
    for (int b = 0; b < limit - 1; b++) {
      while (d1[a][b] >= modulo)
        d1[a][b] -= modulo;
      if (d1[a][b] == 0)
        continue;
      if (a + 1 > b)
        d1[a + 1][b] += d1[a][b];
      if (a > b + 1)
        d1[a][b + 1] += d1[a][b];
    }
  memset (d2, 0, sizeof (d2));
  d2[0][0] = 1;
  for (int a = 0; a < limit - 1; a++)
    for (int b = 0; b < limit - 1; b++) {
      while (d2[a][b] >= modulo)
        d2[a][b] -= modulo;
      if (d2[a][b] == 0)
        continue;
      if (a + 1 >= b)
        d2[a + 1][b] += d2[a][b];
      if (a >= b + 1)
        d2[a][b + 1] += d2[a][b];
    }

  int tn;
  assert (scanf ("%d", &tn) == 1);
  for (int t = 1; t <= tn; t++) {
    int a, b;
    assert (scanf ("%d-%d", &a, &b) == 2);
    printf ("Case %d: %d %d\n", t, d1[a][b], b > 0 ? d2[b][b - 1] : 1);
  }
  return 0;
}

