#include <vector> // headers {{{
#include <list>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdlib>
#include <cmath>
#include <cstdio>
#include <fstream>
#include <ctime>

#define DEBUG(x) ::cerr << #x << ": " << x << "\n"
using namespace std; // }}}

typedef long long lint;
const int Z = 1000000007;
vector<int> P;

bool isPrime(int x)
{
    if (x < 2)
        return false;
    for (int i = 2; i * i <= x; ++i) {
        if (x % i == 0)
            return false;
    }
    return true;
}

void fill_it(vector<int>& V, int x, int mult)
{
    for (int i = 0; i < P.size(); ++i) {
        if (P[i] > x)
            return;
        while (x % P[i] == 0) {
            x/= P[i];
            V[i]+= mult;
        }
    }
}

int calc_it(const vector<int>& V)
{
    lint res = 1;
    for (int i = 0; i < V.size(); ++i) {
        if (V[i] < 0)
            throw 1;
        for (int j = 0; j < V[i]; ++j) {
            res = (res * P[i]) % Z;
        }
    }
    return res;
}

string result(int a, int b)
{
    int n = P.size();
    vector<int> V1(n), V2(n);

    --a;
    for (int i = 2; i <= a + b; ++i) {
        fill_it(V1, i, 1);
    }
    for (int i = 2; i <= a - b; ++i) {
        fill_it(V1, i, -1);
    }
    for (int i = 1; i <= b; ++i) {
        fill_it(V1, a + 2 - i, -1);
    }
    for (int i = 2; i <= b; ++i) {
        fill_it(V1, i, -1);
    }

    for (int i = 2; i <= 2 * b; ++i) {
        fill_it(V2, i, 1);
    }
    for (int i = 2; i <= b; ++i) {
        fill_it(V2, i, -2);
    }
    fill_it(V2, b + 1, -1);

    stringstream ss0;
    ss0 << calc_it(V1) << " " << calc_it(V2);
    return ss0.str();
}

int main()
{
    ifstream cin("input.txt");
    ofstream cout("output.txt");
    //cout.precision(6);
    //cout.setf(ios::fixed,ios::floatfield);

    const int N = 2000;
    for (int i = 2; i <= N; ++i) {
        if (isPrime(i))
            P.push_back(i);
    }

    int T;
    cin >> T;
    for (int i = 1; i <= T; ++i) {
        int a, b;
        string s;
        cin >> s;
        sscanf(s.c_str(), "%d-%d", &a, &b);
        cout << "Case #" << i << ": " << result(a, b) << endl;
    }

    return 0;
}
