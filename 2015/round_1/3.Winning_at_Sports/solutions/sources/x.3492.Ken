#!/usr/bin/env python

MAX_W = 2001
MOD_NO = 1000000007

#no of ways to stress-free win
easy_win = [[0 for x in range(MAX_W)] for y in range(MAX_W)]
#no of ways to stressful win
always_lose_even = [[0 for x in range(MAX_W)] for y in range(MAX_W)]

easy_win[1][0] = 1
always_lose_even[0][1] = 1

def calc_easy_win ():
    for i in range(2, MAX_W):
        easy_win[i][0] = easy_win[i-1][0]
    for lose in range(1, MAX_W):
        for win in range(1, MAX_W):
            if win == lose + 1:
                easy_win[win][lose] = (easy_win[win][lose] + easy_win[win][lose-1]) % MOD_NO
            elif win > lose + 1:
                easy_win[win][lose] = (easy_win[win][lose] + easy_win[win][lose-1] + easy_win[win-1][lose]) % MOD_NO

# Just calculate the number of ways to get the equal score and no_of_lose cannot exceed no_of_win
def calc_stressful_win ():
    for i in range(1, MAX_W):
        always_lose_even[i][0] = 1
    for i in range(2, MAX_W):
        always_lose_even[0][i] = always_lose_even[0][i-1]
    for lose in range(1, MAX_W):
        for win in range(1, MAX_W):
            if lose >= win :
                always_lose_even[win][lose] = (always_lose_even[win][lose] + always_lose_even[win][lose-1] + always_lose_even[win-1][lose]) % MOD_NO

def debug_print_table(arr, n):
    for i in range(n):
        for j in range(n):
            print arr[i][j],
        print

if __name__ == '__main__':
    no_of_tests = int(raw_input())

    calc_easy_win();
    calc_stressful_win();

    #debug_print_table(easy_win, 10)
    #debug_print_table(always_lose_even, 10)

    for test_case_id in range(1, no_of_tests+1):
        w, l = [int(x) for x in raw_input().split('-')]

        #why always_lose_even[l][l]? after the no_of_lose reached the input l, there is only one way to win: keep wining until input w
        if l == 0:
            print "Case #%d: %d %d" % (test_case_id, easy_win[w][l], always_lose_even[w][l])
        else:
            print "Case #%d: %d %d" % (test_case_id, easy_win[w][l], always_lose_even[l][l])
