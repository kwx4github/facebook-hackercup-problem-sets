#include <iostream>
#include <cstdio>
#include <cstdlib>
using namespace std;

const int MAXN = 2100;
const long long MOD = 1000000007LL;

int T;
int A, B;

long long dp1[MAXN][MAXN];
long long rec1(int a, int b) {
  if (a < 0 || b < 0) return 0;
  if (dp1[a][b] != -1) {
    return dp1[a][b];
  }
  if (b == 0) {
    return 1;
  }
  dp1[a][b] = rec1(a,b-1) + ((a-1 > b)?rec1(a-1,b):0);
  dp1[a][b] %= MOD;
  return dp1[a][b];
}
long long dp2[MAXN][MAXN];
long long rec2(int a, int b) {
  if (a < 0 || b < 0) return 0;
  if (dp2[a][b] != -1) {
    return dp2[a][b];
  }
  if (a == 0) {
    return 1;
  }
  if (a > b && b != B) {
    return 0;
  }
  dp2[a][b] = rec2(a-1,b) + rec2(a,b-1);
  dp2[a][b] %= MOD;
  return dp2[a][b];
}

int main () {
  scanf("%d", &T);
  for (int TC = 1; TC <= T; TC++) {
    for (int i = 0; i < MAXN; i++) {
      for (int j = 0; j < MAXN; j++) {
        dp1[i][j] = dp2[i][j] = -1LL;
      }
    }
    scanf("%d-%d", &A, &B);
    printf("Case #%d: %lld %lld\n",TC,rec1(A,B),rec2(A,B));
  }
  return 0;
}
