import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.StringTokenizer;

public class Main {
    private static final int MOD = 1000000007;

    public static void main(String[] args) throws FileNotFoundException {
        PrintWriter writer = new PrintWriter("out.txt");
        Scanner in = new Scanner(new FileInputStream("C:\\Users\\Vlad\\Downloads\\in.txt"));
        int t = Integer.parseInt(in.nextLine());
        for (int i = 0; i < t; i++) {
            StringTokenizer tokenizer = new StringTokenizer(in.nextLine(), "-");
            int a = Integer.parseInt(tokenizer.nextToken()),
                    b = Integer.parseInt(tokenizer.nextToken());

            writer.println("Case #" + (i + 1) + ": " + countStresslessGames(a, b) + " " + countStressfulGames(a, b));
        }
        in.close();
        writer.close();
    }

    private static int countStresslessGames(int a, int b) {
        int[][] F = new int[a + 1][b + 1];
        for (int i = 0; i <= a; i++)
            for (int j = i; j <= b; j++)
                F[i][j] = 0;
        F[1][0] = 1;
        F[0][0] = 1; // ???

        for (int i = 1; i <= a; i++)
            for (int j = 0; j <= Math.min(i - 1, b); j++)
                if (!(i == 1 && j ==0)) {
                    F[i][j] = 0;

                    if (i > j + 1)
                        F[i][j] = (F[i][j] + F[i - 1][j]) % MOD;

                    if (j >= 1)
                        F[i][j] = (F[i][j] + F[i][j - 1]) % MOD;
            }

        return F[a][b];
    }

    private static int countStressfulGames(int a, int b) {
        int[][] F = new int[a + 1][b + 1];
        F[0][0] = 1;

        for (int i = 0; i <= a; i++)
            for (int j = 0; j <= b; j++)
                if (i != 0 || j != 0) {
                    if (i <=j) {
                        F[i][j] = 0;

                        if (i >= 1)
                            F[i][j] = (F[i][j] + F[i - 1][j]) % MOD;

                        if (i < j && j >= 1)
                            F[i][j] = (F[i][j] + F[i][j - 1]) % MOD;
                    }
                    else {
                        if (j == b)
                            F[i][j] = (i == 0 ? 0 : F[i - 1][j]);
                        else
                            F[i][j] = 0;
                    }
                }

        return F[a][b];
    }
}
