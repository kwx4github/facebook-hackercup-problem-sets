#include <algorithm>
#include <numeric>
#include <string>
#include <string.h>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <iostream>
#include <fstream>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <stdlib.h>
#include <time.h>
#include <sstream>
#include <stdio.h>
#include <stack>

using namespace std;
int dpOne[2001][2001];
int dpTwo[2001][2001];
int MOD = 1000000007;

void solve(int i) {
    string result;
    cin>>result;
    int a=0,b=0;
    bool was=false;
    for (int i=0;i<result.size();i++) {
        if (result[i]=='-')
            was=true;
        else if (was) {
            int k=result[i]-'0';
            b*=10;
            b+=k;
        } else {
            int k=result[i]-'0';
            a*=10;
            a+=k;
        }
    }
    printf("Case #%d: %d %d\n",i+1,dpOne[a][b],dpTwo[b][b]);
}

int main() {
    freopen("in.in", "r", stdin);
    freopen("out.out", "w", stdout);
    //std::ios_base::sync_with_stdio(false); 
    dpOne[1][0]=1;
    dpTwo[0][0]=1;
    for (int i=0;i<=2000;i++)
        for (int j=0;j<=2000;j++) {
            if (i>j) {
                dpOne[i][j]+=dpOne[i-1][j];
                if (j>0) {
                    dpOne[i][j]+=dpOne[i][j-1];
                }
                dpOne[i][j]%=MOD;
            } else {
                if (i>0) {
                    dpTwo[i][j]+=dpTwo[i-1][j];
                }
                if (j>0) {
                    dpTwo[i][j]+=dpTwo[i][j-1];
                }
                dpTwo[i][j]%=MOD;
            }
        }
    int t;
    cin>>t;
    for (int i=0;i<t;i++) {
        solve(i);
    }
    return 0;
}