#if 1
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <vector>
#include <utility>
#include <queue>
#include <stack>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <string>
#include <map>
#include <set>
#include <time.h>

#define LL long long
#define LD long double

#define REP(i,n) for (int i = 0; i < (n); i++)
#define REP2(i,n) for (int i = 0; i <= int(n); i++)
#define FOR(i,a,b) for (int i = int(a); i <= int(b); i++)
#define FORB(i,a,b) for (int i = int(a); i >= int(b); i--)

#define mp(u,v) make_pair(u, v)
#define pb push_back

using namespace std;

typedef pair<int, int> pii;
typedef pair<string, string> pss;
typedef vector<int> vi;
typedef vector<vi> vvi;

#define MAXN 2010
#define MAXT 3600
#define oo 1000000001
#define MODULE 1000000007

#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;

LL dp[MAXN][MAXN], dp2[MAXN][MAXN];
int n, m;

void readin(){
    string s;
    cin >> s;
    n = 0;
    int i = 0;
    while (s[i] != '-'){
        n = n * 10 + s[i] - '0';
        i++;
    }
    i++;
    m = 0;
    while (i < s.length()){
        m = m * 10 + s[i] - '0';
        i++;
    }
}

void init(){
    memset(dp, 0, sizeof(dp));
    memset(dp2, 0, sizeof(dp2));
}

void process(){
    dp[1][0] = 1;
    FOR(i, 2, 2000){
        dp[i][0] = 1;
        FOR(j, 1, i - 1){
            dp[i][j] = dp[i][j - 1];
            if (i - 1 > j) dp[i][j] += dp[i - 1][j];
            if (dp[i][j] > MODULE) dp[i][j] -= MODULE;
        }
    }
    dp2[0][0] = 1;
    FOR(i, 1, 2000){
        dp2[i][0] = 1;
        FOR(j, 1, i){
            dp2[i][j] = dp2[i][j - 1];
            if (i - 1 >= j) dp2[i][j] += dp2[i - 1][j];
            if (dp2[i][j] > MODULE) dp2[i][j] -= MODULE;
        }
    }
}

void writeout(){

}

void make(){
    freopen("in.txt", "wt", stdout);
    int N = 200000, M = 150000, Q = 300000;
    cout << N << endl;
    for (int i = 0; i < N; i++)
        cout << 1000000 - i << " ";
    exit(0);
}


int main(){
    //make();
    freopen("in.txt", "rt", stdin);
    //freopen("in.txt", "rt", stdin);
    freopen("out", "wt", stdout);
    //START
    init();
    process();
    int test;
    cin >> test;
    char buf[30];
    gets(buf);
    REP(i, test){
        readin();
        cout << "Case #" << i + 1 << ": " << dp[n][m] << " " << dp2[m][m] << endl;
    }
    //writeout();
    //END
    return 0;
}

#endif