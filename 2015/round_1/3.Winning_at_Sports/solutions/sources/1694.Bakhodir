#include <cstdio>
#include <cmath>
#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;

const int MAXN = 2001;
const long long mod = 1000000007;

long long sfree[MAXN][MAXN];
long long sfull[MAXN][MAXN];

void precalc() {
    sfree[0][0] = 1;
    for (int i = 0; i < MAXN; i++) {
        for (int j = 0; j < MAXN; j++) {
            if (i > j) {
                sfree[i][j] = (sfree[i][j] + sfree[i - 1][j]) % mod;
                if (j > 0) {
                    sfree[i][j] = (sfree[i][j] + sfree[i][j - 1]) % mod;
                }
            }
        }
    }
    
    sfull[0][0] = 1;
    for (int i = 0; i < MAXN; i++) {
        for (int j = 0; j < MAXN; j++) {
            if (i <= j) {
                if (i > 0) {
                    sfull[i][j] = (sfull[i][j] + sfull[i - 1][j]) % mod;
                }
                if (j > 0) {
                    sfull[i][j] = (sfull[i][j] + sfull[i][j - 1]) % mod;
                }
            }
        }
    }
}

void solveTest() {
    int a, b;
    scanf("%d-%d", &a, &b);
    cout << sfree[a][b] << " " << sfull[b][b];
}

void solve() {
    precalc();
    
    int T;
    scanf("%d", &T);
    
    for (int i = 1; i <= T; i++) {
        cout << "Case #" << i << ": ";
        solveTest();
        cout << endl;
    }
}

int main() {
    freopen("winning_at_sports.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
    
    solve();
}
