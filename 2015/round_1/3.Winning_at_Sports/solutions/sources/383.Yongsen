#include <iostream>
using namespace std;

const int N = 2222;
const int MOD = 1000000007;
int a[N][N], b[N][N];

int dfs_a(int x, int y) {
    if (a[x][y] != -1) return a[x][y];
    if (x == y && x == 0) return a[x][y] = 1;
    if (x <= y) return a[x][y] = 0;
    int &res = a[x][y];
    res = 0;
    if (x > 0) res = (res + dfs_a(x - 1, y)) % MOD;
    if (y > 0) res = (res + dfs_a(x, y - 1)) % MOD;
    return res;
}

int dfs_b(int x, int y) {
    if (b[x][y] != -1) return b[x][y];
    if (x == y && x == 0) return b[x][y] = 1;
    if (x > y) return b[x][y] = 0;
    int &res = b[x][y];
    res = 0;
    if (x > 0) res = (res + dfs_b(x - 1, y)) % MOD;
    if (y > 0) res = (res + dfs_b(x, y - 1)) % MOD;
    return res;
}

int main() {
    int T, Case = 1;
    memset(a, -1, sizeof(a));
    memset(b, -1, sizeof(b));
    cin >> T;
    while (T--) {
        int x, y;
        scanf("%d-%d", &x, &y);
        cout << "Case #" << Case++ << ": " << dfs_a(x, y) << " " << dfs_b(min(x, y), y) << endl;
    }
    return 0;
}
