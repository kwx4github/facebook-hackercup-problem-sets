#include <algorithm>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <map>
#include <queue>
#include <string>
#include <stack>
#include <set>
#include <vector>
#define MOD 1000000007
using namespace std;

typedef long long    LL;

// Input Macros
#define s(n)               scanf("%d",&n)
#define sl(n)              scanf("%lld",&n)
#define sc(n)              scanf("%c",&n)
#define sf(n)              scanf("%lf",&n)
#define ss(n)              scanf("%s",n)

// Output Macros
#define p(n)               printf("%d\n",n)
#define pl(n)              printf("%lld\n",n)

#define fill(a,v)          memset(a, v, sizeof a)

int me, hy, op;
LL fr[2001][2001],fu[2001][2001];

void solvefr()
{
    fill(fr,-1);
    fr[0][0] = 0;
    for(int i=1; i <= me; i++)
        fr[i][0] = 1;
    for(int i = 2; i <= me; i++)
    {
        for(int j = 1; j <= min(i-1,op); j++)
        {
        	if(j != i-1)
        		fr[i][j] = (fr[i][j-1] + fr[i-1][j])%MOD;
        	else
        		fr[i][j] = (fr[i][j-1] == -1) ? 1 : (fr[i][j-1])%MOD;
        }
    }
}

void solvefu()
{
	fill(fu,-1);
	fu[0][0] = 0;
	for(int i=0; i<= me; i++)
        fu[i][0] = 0;
	for(int i=1; i <= op; i++)
		fu[0][i] = 1;
    for(int i = 1; i <= op; i++)
    {
        for(int j = 1; j <= op; j++)
        {
            if(i > j)
                fu[i][j] = 0;
            else
                fu[i][j] = (fu[i-1][j] + fu[i][j-1])%MOD;
            //cout<<j<<" "<<i<<" = "<<fu[j][i]<<endl;
            //cout<<i<<" "<<j<<" = "<<fu[i][j]<<endl;
        }
    }
    //cout<<"solvefu: "<<fu[op][op]<<endl;
}

int main()
{
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
	int T, caseNum = 0;
	s(T);
	while(T--)
	{
		caseNum++;
		fill(fu,-1);
        s(me);sc(hy);s(op);
		printf("Case #%d: ",caseNum);
		solvefr();
		solvefu();
		printf("%lld %lld\n",fr[me][op],fu[op][op]);
	}
	return 0;
}
