#include <iostream>
#include <fstream>
#include <vector>
#include <cstring>

using namespace std;


int main(){
	ifstream fin("in.txt");
	ofstream fout("out.txt");

	int T, M = 1000000007;
	fin >> T;

	for(int t = 1; t <= T; t++){
		int a, b;
		char ignore; //'-'
		fin >> a >> ignore >> b;

		vector<vector<int> > dp(a+b+1, vector<int>(a+1));
		dp[1][1] = 1;

		for(int i = 2; i < a+b+1; i++)               //i = num of rounds
			for(int j = 2; j < a+1 && j <= i; j++){  //j = rounds won by a
				dp[i][j] = dp[i-1][j];         //losing this round
				if((j-1)*2 > i-1)
					dp[i][j] += dp[i-1][j-1];  //winning this round
				dp[i][j] %= M;
			}

		fout << "Case #" << t << ": " << dp[a+b][a];
		cout << "Case #" << t << ": " << dp[a+b][a];

		dp = vector<vector<int> >(a+b+1, vector<int>(b+1));
		dp[1][1] = 1;

		for(int i = 2; i < a+b+1; i++)                 //i = num of rounds
			for(int j = 1; j < b+1 && j <= i; j++){    //j = rounds lost
				dp[i][j] = dp[i-1][j-1];   //lose this round
				if(j*2 >= i || j == b)
					dp[i][j] += dp[i-1][j]; //win this round
				dp[i][j] %= M;
			}

		/*for(unsigned int i = 0; i < dp.size(); i++){
			for(unsigned int j = 0; j < dp[0].size(); j++)
				cout << dp[i][j] << " ";
			cout << endl;
		}*/

		fout << " " << max(dp[a+b][b], 1) << endl;
		cout << " " << max(dp[a+b][b], 1) << endl; //max mit 1 für b=0
	}

	return 0;
}
