

#if 1

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <string>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cassert>
#include <fstream>
using namespace std;
typedef int64_t int64;

static void solve();

#define M 1000000007
#define N 2000

static int64 easy[N+1][N+1];
static int64 hard[N+1][N+1];

int main() {
	for (int i = 1; i <= N; i++) {
		easy[i][0] = 1;
		hard[i][0] = 1;
		hard[0][i] = 1;
	}
	for (int i = 1; i <= N; i++) {
		for (int j = 1; j < i; j++) {
			easy[i][j] = (easy[i-1][j] + easy[i][j-1]) % M;
			hard[i][j] = hard[i-1][j];
		}
		hard[i][i] = hard[i-1][i];
		for (int j = i + 1; j <= N; j++) {
			hard[i][j] = (hard[i-1][j] + hard[i][j-1]) % M;
		}
	}
	freopen("C1.in.txt","r",stdin);
	freopen("C1.out.txt","w",stdout);
	int test_case;
	cin >> test_case;
	for (int t = 1; t <= test_case; ++t) {
		cout << "Case #" << t << ": ";
		solve();
		cout << '\n';
	}
	return 0;
}

static void solve() {
	int us, them;
	cin >> us >> them;
	them = -them;
	
	cout << easy[us][them] << " " << hard[us][them];
}

#endif

