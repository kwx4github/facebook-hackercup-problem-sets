#include <iostream>
#include <vector>
#include <list>
#include <map>

using namespace std;

typedef long long int LLINT;

#define MODUL 1000000007LL

#define REP(i, n) for(int i=0; i < n;i++)

void process(int caseNum) {
    int me, op;
    cin >> me;
    cin.ignore(1);
    cin >> op;

    //compute stressfree

    LLINT ** scores = new LLINT*[me+1];
    for(int i=0; i <= me;i++) {
        scores[i] = new LLINT[op+1];
        for(int j=0; j <= op;j++) {
            scores[i][j] = 0;
        }
    }
    for(int i=1; i <= me;i++) {
        scores[i][0] = 1;
    }

    for(int j=1; j <= op;j++) {
        for(int i=j+1; i <= me;i++) {
            scores[i][j] = (scores[i-1][j] + scores[i][j-1]) % MODUL;
        }
    }
    LLINT stressfreeret = scores[me][op];

    //compute stressfull

     for(int i=0; i <= me;i++) {
        for(int j=0; j <= op;j++) {
            scores[i][j] = 0;
        }
    }

    for(int i=1; i <= op;i++) {
        scores[0][i] = 1;
    }

    for(int i=1; i <= me;i++) {
        for(int j=i; j <= op;j++) {
            scores[i][j] = (scores[i-1][j] + scores[i][j-1]) % MODUL;
        }
    }
    LLINT stressfullret = scores[op][op];


    //print

    cout << "Case #"<<caseNum<<": "<<stressfreeret<<" "<<stressfullret << endl;
}

int main() {

    int n;
    cin >> n;
    REP(i,n) process(i+1);
    return 0;
}