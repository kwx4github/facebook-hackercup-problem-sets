#include<iostream>
#include<string>
#include<algorithm>
#include<string>
#include<sstream>
#include<vector>
using namespace std;
static const int maxn = 2004;
static const long long mod = (10e8) + 7;
int d[maxn][maxn];

int sum(long long a, long long b) {
	return (a + b) % mod;
}
int find_stressfull(int a, int b) {
		for(int i = 0; i <= b; ++i) {
			d[0][i] = 1;
		}	
		for(int i = 1; i <= b-1 ; ++i) {
			for(int j = 0; j <= b; ++j) {
				if (i > j) {
					d[i][j] = 0;
				}
				else {
					d[i][j] = sum(d[i-1][j], d[i][j-1]);				
				}
//				cout << i << " " << j << " " << d[i][j] << endl;
			}
		}
		return d[b-1][b];
}

int find_stressfree(int a, int b) {
	d[0][0] = 0;
	for(int i = 1; i <= a; ++i) {
		d[i][0] = 1;
	}
	for(int j = 1; j <= b; ++j) {
		for(int i = 0; i <= a ; ++i) {
			if (i <= j) {
				d[i][j] = 0;
			}
			else {
				d[i][j] = sum(d[i-1][j], d[i][j-1]);
			}
		}
	}
	return d[a][b];
}

int main() {

	int tt; cin >> tt;

	for(int t = 1; t <= tt; ++t) {
		string s; cin >> s;
		int pos = s.find("-");
		s[pos] = ' ';
		stringstream ss(s);
		int a, b; ss >> a >> b;
		if (b == 0) {
			cout << "Case #" << t << ": 1 1" << endl;
			continue;
		}
		int sfr =	find_stressfree(a, b);
		int sfl = find_stressfull(a, b);
		cout << "Case #" << t << ": " << sfr << " " << sfl << endl;
	}
}
