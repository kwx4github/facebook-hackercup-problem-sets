//!!!!!!!!!	NEVER GIVE UP !!!!! NEVER !!!!!!!! 
/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <utility>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <queue>
#include <sstream>
#include <iomanip>
#include <limits>
using namespace std;
//cout << fixed << setprecision(4);
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const int MOD =  1000000007; 
int Dp[3000][3000]; 
int OPP,ME; 
ll stressfree(int x ,int y )
{
	ll ways = 0 ; 
      if(x==ME || y==OPP)
      	 return 1 ; 
      if(Dp[x][y] != -1 )
	     return Dp[x][y] ;
   if(x-y>0)
   {
   	  if(x-y>1)
   	  	 ways =  (ways + stressfree(x,y+1))%MOD;
      //if(y)
   	 ways = (ways + stressfree(x+1,y))%MOD;
   }   	
  return Dp[x][y] = ways ; 
}
ll stressful(int x,int y)
{  ll ways = 0 ; 
	  if(y==OPP)
	  	return 1 ;
	 if(Dp[x][y] != -1 )
	     return Dp[x][y] ;
     if(y-x >=0)
     {
     	 if(y-x != 0)
     		ways = (ways + stressful(x+1,y))%MOD;
         
    	ways = (ways + stressful(x,y+1))%MOD;
     }	  	  
  return Dp[x][y] = ways; 
}
int main()
{ 
   /*#ifdef _WIN32 
    {freopen("input.txt", "r", stdin);
     freopen("output.txt","w",stdout);}
   #endif // LOCAL_USER
   */
geti(t);
int j = 1 ;
while(j<=t)
{
	string str ; 
	cin>>str ;
	int k ;  
	rep(i,str.length())
	  {
	  	if(str[i] =='-')
            {k = i ; 
            break ; }
	  }
	string str1 = str.substr(0,k);
	string str2 = str.substr(k+1,((str.length()-1) - k));  
    stringstream ss(str1);
    int x,y;
    ss >> x;
    stringstream ss2(str2);
    ss2 >> y;
    OPP = y ; 
    ME  = x ; 
    //cout<<"x: "<<x<<"y: "<<y<<endl;
    mem(Dp,-1);
    ll ans1 = stressfree(1,0);
    mem(Dp,-1);
    ll ans2 = stressful(0,1); 
    cout<<"Case #"<<j<<": "<<ans1<<" "<<ans2<<endl; // 1 1
j++;
}    
return 0;
}