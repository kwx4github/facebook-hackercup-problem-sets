import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class WinningAtSports {

	public static void main(String[] args) throws IOException {
		new Thread(null, new Runnable() {
            public void run() {
                new WinningAtSportsSolution().run();
            }
        }, "1", 1 << 23).start();
	}

}

class WinningAtSportsSolution implements Runnable {
	
	static int a;
	static int b;
	static long mod = 1000000007;

	static long dp1[][], dp2[][];

	public static long f(int n, int m) {
		if (m == 0)
			return 1;
		if (dp1[n][m] != -1)
			return dp1[n][m];
		if (n > m + 1) {
			return dp1[n][m] = (f(n - 1, m)%mod + f(n, m - 1)%mod /*- f(n - 1, m - 1)%mod*/)%mod;
		}
		return dp1[n][m] = f(n, m - 1)%mod;
	}
	
	public static long g(int n, int m) {
		if (n == 0)
			return 1;
		if (dp2[n][m] != -1)
			return dp2[n][m];
		if (n > m && m == b)
			return dp2[n][m] = g(n - 1, m)%mod;
		if (n <= m)
			return dp2[n][m] = (g(n - 1, m)%mod + g(n, m - 1)%mod /*- g(n - 1, m - 1)%mod*/)%mod;
		return dp2[n][m] = 0;
	}

	@Override
	public void run() {
		try {
			BufferedReader bf = new BufferedReader(new FileReader("input.in"));
			PrintWriter out = new PrintWriter(new FileWriter("output.txt"));

			int t = Integer.parseInt(bf.readLine());

			for (int tc = 1; tc <= t; tc++) {
				StringTokenizer st = new StringTokenizer(bf.readLine(), "-");
				a = Integer.parseInt(st.nextToken());
				b = Integer.parseInt(st.nextToken());
				dp1 = new long[a + 1][b + 1];
				dp2 = new long[a + 1][b + 1];
				for (int i = 0; i <= a; i++) {
					Arrays.fill(dp1[i], -1);
					Arrays.fill(dp2[i], -1);
				}
				out.println("Case #" + tc + ": " + f(a, b) + " " + g(a, b));
			}
			
			out.flush();
			out.close();
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}
