#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <math.h>

#define FR(i, a, b)   for(int i = a; i < b; i++)
#define FOR(i, a, b)  for(int i = a; i <= b; i++)
#define LFOR(i, a, b) for(int i = a; i >= b; i--)
#define FRSZ(i, x)    for(int i = 0; i < (int)x.size(); i++)
#define RP(i, n)      for(int i = 0; i < n; i++)
#define repeat        do
#define until(x)      while(!(x))
#define _ve vector
#define _pa pair
#define _tu tuple
#define _mp make_pair
#define _mt make_tuple
#define _pb push_back
#define _fi first
#define _sc second
#define sz(a) ((int)(a).size())

using namespace std;

template <class T> T min3(T a, T b, T c){ return min(a, min(b, c));};
template <class T> T max3(T a, T b, T c){ return max(a, max(b, c));};

typedef long long int64;
typedef unsigned long long qword;
typedef long double ldouble;

pair<int, int> getRes(char *s)
{
    int len = strlen(s);
    int i = 0;
    int a = 0;
    while(s[i] != '-')
    {
        a = a * 10 + (s[i] - '0');
        i++;
    }
    i++;
    int b = 0;
    while(i < len)
    {
        b = b * 10 + (s[i] - '0');
        i++;
    }
    return _mp(a, b);
}

const int mm = 1e9 + 7;

int64 res[4010][2010];
char s[100100];

int main()
{
    freopen("d:\\winning_at_sports.txt", "r", stdin);
    freopen("d:\\Output.txt", "w", stdout);
    int oo;
    scanf("%d", &oo);
    for(int o = 0; o < oo; o++)
    {
        memset(res, 0, sizeof(res));
        scanf("%s", &s);
        pair<int, int> aa = getRes(s);
        int a = aa.first;
        int b = aa.second;
        cout << "Case #" << o + 1 << ": ";
        res[0][0] = 1;
        int64 res1 = 0;
        for(int i = 1; i <= a + b; i++)
            for(int j = 0; j <= min(i, a); j++)
                if(j > i - j)
                {
                    if(j == 1)
                        res[i][j] = 1;
                    else
                        res[i][j] += (res[i - 1][j] + res[i - 1][j - 1]) % mm;
                }
        cout << res[a + b][a] << " ";
        memset(res, 0, sizeof(res));
        res[0][0] = 1;
        for(int i = 1; i <= a + b; i++)
            for(int j = 0; j <= min(i, a); j++)
                if(j <= i - j || i - j == b)
                {
                    if(j == 0) res[i][j] = res[i - 1][j];
                    else res[i][j] = (res[i - 1][j] + res[i - 1][j - 1]) % mm;
                }
        cout << res[a + b][a] << endl;
    }
}
