#include <iostream>
#include <cstdio>
#include <set>
#include <vector>
using namespace std;

//Facebook, if you read this code, let me take this oppurtunity to say thanks.

#define mod 1000000007
#define lim 2001

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<vi> vvi;

vvi mfree(lim, vi(lim, 0));
vvi mstress(lim, vi(lim, 0));

void stressfree(void) 
{
    set<ii> Q;
    Q.insert(ii(1, 0));

    set<ii> temp;
    while (!Q.empty())
    {
        for (set<ii>::iterator i = Q.begin();i != Q.end(); i++) 
        {
            int a = i->first, b = i->second;
            if (a+1 <= 2000) 
            {
                temp.insert(ii(a+1, b));
                mfree[a+1][b] = (mfree[a+1][b] + mfree[a][b]) % mod;
            }
            if (a > b+1) 
            {
                temp.insert(ii(a, b+1));
                mfree[a][b+1] = (mfree[a][b+1] + mfree[a][b]) % mod;
            }
        }
        Q.swap(temp);
        temp.clear();
    }
}

void stressful(void) 
{
    set<ii> Q;
    Q.insert(ii(0, 1));

    set<ii> temp;
    while (!Q.empty()) 
    {
        for (set<ii>::iterator i = Q.begin();i != Q.end(); i++) 
        {
            int a = i->first, b = i->second;
            if (a+1 <= b) 
            {
                temp.insert(ii(a+1, b));
                mstress[a+1][b] = (mstress[a+1][b] + mstress[a][b]) % mod;
            }
            if (b < 2000) 
            {
                temp.insert(ii(a, b+1));
                mstress[a][b+1] = (mstress[a][b+1] + mstress[a][b]) % mod;
            }
        }
        Q.swap(temp);
        temp.clear();
    }
}

int main() 
{
    //Init
    mfree[1][0] = 1;
    stressfree();
    mstress[0][1] = 1;
    stressful();

    for(int i = 0;i < lim;i++)
    {
        for(int j = 0;j < lim;j++)
        {
            mstress[i][j] = mstress[j][j];
        }
    }

    //Let's go
    int t;
    scanf("%d", &t);
    for (int rep = 1;rep <= t;rep++) 
    {
        int a, b;
        scanf("%d-%d", &a, &b);
        printf("Case #%d: %d %d\n", rep, mfree[a][b], mstress[a][b]);
    }
}
