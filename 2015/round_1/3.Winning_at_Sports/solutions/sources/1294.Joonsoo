#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <cfloat>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iostream>
#include <limits.h>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <tuple>
#include <utility>
#include <vector>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

#define rep(i,m) for(int i=0;i<(int)(m);++i)
#define sz(c) (int((c).size()))
#define fill(a,b) memset(a,b,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define mp make_pair

const int MX = 2002, MOD = 1000000007;
ll stress_free[MX][MX];
ll stressful[MX][MX];

int calc_stress_free(int a, int b) {
	if (a < 0 || b < 0) return 0;
	ll &res = stress_free[a][b];
	if (res != -1) return res;
	if (b >= a) return res = 0;
	if (b == 0 && a > 0) return res = 1;
	res = calc_stress_free(a - 1, b) + calc_stress_free(a, b - 1);
	res %= MOD;
	return res;
}

int calc_stressful(int a, int b) {
	if (a < 0 || b < 0) return 0;
	ll &res = stressful[a][b];
	if (res != -1) return res;
	if (a == 0 && b == 0) return res = 0;
	if (b == 0 && a > 0) return res = 1;
	if (a == 0 && b > 0) return res = 1;
	if (a >= b) return res = calc_stressful(b - 1, b);
	res = calc_stressful(a - 1, b) + calc_stressful(a, b - 1);
	res %= MOD;
	return res;
}

void init() {
	fill(stress_free, -1);
	fill(stressful, -1);
}

string replace(string s, string from, string to) {
	int from_len = from.length();
	while (true) {
		string::size_type pos = s.find(from);
		if (pos != string::npos) s.replace(pos, from_len, to);
		else break;
	}
	return s;
}

void solve(int cur_case) {
	string s; cin >> s;
	s = replace(s, "-", " ");
	stringstream ss(s);
	int a, b; ss >> a >> b;
	cout << "Case #" << cur_case << ": " << calc_stress_free(a, b) << " " << calc_stressful(a, b) << endl;
}

int main(int argc, char *argv[]) {
	ios_base::sync_with_stdio(false); cout.precision(10); cout << fixed;
	freopen("winning_at_sports.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	clock_t start_time = clock(), check_time;
	init();
	int total_cases; cin >> total_cases;
	for (int cur_case = 1; cur_case <= total_cases; ++cur_case) {
		solve(cur_case);
		check_time = clock(); cerr << "Case #" << cur_case << " elapsed time: " << check_time - start_time << "ms" << endl; start_time = clock();
	}
	return 0;
}