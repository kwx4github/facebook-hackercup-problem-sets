#include <algorithm>
#include <string>
#include <string.h>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <iostream>
#include <fstream>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <stdlib.h>
#include <stdio.h>

using namespace std;

#define FOR(i,n) for (int i=0; i<n; ++i)
#define FORE(i,n) for (int i=0; i<=n; ++i)
#define REP(i,a,b) for (int i=a; i<b; ++i)
#define REPE(i,a,b) for (int i=a; i<=b; ++i)
#define ALL(c) (c).begin(), (c).end()
#define SORT(c) sort(ALL(c))
#define mp make_pair
#define pb push_back

typedef pair<int, int> PII;
typedef vector<PII> VPII;
typedef long long int LL;
typedef vector<int> VI;
typedef vector<bool> VB;
typedef vector<VI> VVI;
const double pi = acos(-1.0);
const int inf = (int) 1e9;

const int mx = 2005;
const int mod = inf + 7;

int dp1[mx][mx];
int dp2[mx][mx];

void go1() {
	REP(i,1,mx) {
		dp1[i][0] = 1;
	}
	REP(i,1,mx) {
		REP(j,1,i) {
			dp1[i][j] = (dp1[i - 1][j] + 0ll + dp1[i][j - 1]) % mod;
		}
	}
}

void go2() {
	REP(i,1,mx) {
		dp2[0][i] = 1;
	}
	REP(i,1,mx) {
		REP(j,i,mx) {
			dp2[i][j] = (dp2[i - 1][j] + 0ll + dp2[i][j - 1]) % mod;
		}
	}
}

int main()
{
#ifdef _DEBUG
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
#else
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
#endif
	go1();
	go2();
	int t;
	cin >> t;
	FOR(tt,t) {
		if (tt) {
			cout << "\n";
		}
		cout << "Case #" << tt + 1 << ": ";
		int a,b;
		char c;
		cin >> a >> c >> b;
		cout << dp1[a][b] << " " << dp2[b][b]; 
	}
	return 0;
}