#include <algorithm>
#include <bitset>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <iomanip>
#include <iterator>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <string.h>
#include <utility>
#include <vector>
#define si 21
using namespace std;


int dp[2001][2001];
int dp1[2001][2001];

int makedp(){
	memset(dp,0,sizeof(dp));
	for(int i=1;i<=2000;i++){
		dp[0][i]=1;
		dp1[i][0]=1;
	}
	for(int i=1;i<=2000;i++){
		for(int j=1;j<=2000;j++){
			if(i==j){
				dp1[i][j]=dp1[i][j-1];
				continue;
			}
			dp1[i][j]=dp1[i][j-1]+dp1[i-1][j];
			dp[i][j]=dp[i][j-1]+dp[i-1][j];
			if(dp[i][j]>=1000000007)
				dp[i][j]%=1000000007;
			if(dp1[i][j]>=1000000007)
				dp1[i][j]%=1000000007;
		}
	}
	return 0;
}
int main() {

	freopen("winning_at_sports.txt","r",stdin);
	freopen("q3_out.txt","w",stdout);
	int T, a, b;
	
	makedp();
	scanf("%d",&T);
	for(int t=1;t<=T;t++){
		scanf("%d-%d",&a,&b);
		printf("Case #%d: %d %d\n",t, dp[b][a],dp1[b][b]);
	}
	return 0;
}