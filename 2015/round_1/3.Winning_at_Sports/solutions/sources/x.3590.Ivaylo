#include <cstdio>
#include <iostream>
#include <cmath>

using namespace std;

#define mod 1000000007

int dp[2048][2048];
int dp2[2048][2048];

int rec(int A, int B) {


    if(B < 0)
	return 0;
    if(A < 0)
	return 0;

    if(B == 0)
	return 1;

    if(A == 0)
	return 0;
	
    if(dp[A][B] != -1) {
	return dp[A][B];
    }

    int res = 0;

    if(A - 1 > B) {
	res += (rec(A - 1, B) % mod);
	res %= mod;
    }

    res += (rec(A, B - 1) % mod);
    res %= mod;

    dp[A][B] = res;

    return res;
}

int rec2(int A, int B) {

    if(B < 0)
	return 0;
    if(A < 0)
	return 0;
    
    if(A == 0)
	return 1;

    if(B == 0)
	return 0;

    if(dp2[A][B] != -1) {
	return dp2[A][B];
    }

    if(A > B) {
	return rec2(A - 1, B);
    }

    int res = 0;

    if(B - 1 >= A) {
	res += (rec2(A, B -1) % mod);
	res %= mod;
    }

    res += (rec2(A - 1, B) % mod);
    res %= mod;

    dp2[A][B] = res; 

    return res;
}

int main() {


    int T;
    scanf("%d", &T);

    for(int i = 0; i < 2048; ++i) {
	for(int j = 0; j < 2048; ++j) {
	    dp[i][j] = -1;
	    dp2[i][j] = -1;
	}
    }
    for(int t = 1; t <= T; ++t) {
	int A,B;

	string s;
	cin >> s;
	A = 0;
	B = 0;

	int i =0;
	while(s[i] != '-') {
	    A *= 10;
	    A += s[i] - '0';
	    i++;
	}

	i++;

	while(i < (int)s.size()) {
	    B *= 10;
	    B += s[i] - '0';
	    i++;
	}

	printf("Case #%d: %d %d\n", t, rec(A,B), rec2(A,B));
    }

    return 0;
}
