#pragma warning (disable : 4996)
#pragma comment(linker, "/STACK:36777216")



#include <stdlib.h>
#include <iostream>
#include <vector>
#include <string>
#include <assert.h>
#include <stack>
#include <algorithm>
#include <ios>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <queue>
#include <set>
#include <functional>
#include <cmath>
#include <sstream>
#include <map>
#include <memory.h>
#include <stdio.h>
#include <cassert>
#include <string.h>
#include <deque>

#define forn(i , n) for (int i = 0; i < n; ++i)
#define down(i, n) for (int i = n - 1; i >= 0; --i)


using namespace std;

typedef unsigned long long int u64;
typedef long long int i64;
typedef vector<int> vint;
typedef vector<i64> vi64;
typedef pair<int, int> pint;
typedef pair<i64, i64> pi64;

#define FILE_NAME "file"
#define CONTEST "seq"
#define M_PI 3.14159265358979323846

double sqr(double a)
{
	return a * a;
}

const i64 inf = 100000000000000000LL;

#define MOD 1000000007 


int w[5000][5000], l[5000][5000];


int main()
{
	clock_t start = clock();
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout << fixed << setprecision(15);
#ifdef FILE_INPUT
	freopen(FILE_NAME ".in", "r", stdin);
	freopen(FILE_NAME ".out", "w", stdout);
#endif

	w[1][1] = 1;
	w[0][0] = 1;
	forn(i, 5000)
	{
		forn(f, 3000)
		{
			int s = i - f;
			if (f > s)
			{
				w[i + 1][f + 1] += w[i][f];
				w[i + 1][f + 1] %= MOD;
			}
			if (f > s + 1)
			{
				w[i + 1][f] += w[i][f];
				w[i + 1][f] %= MOD;
			}
		}
	}

	


	int T;
	cin >> T;
	
	forn(t, T)
	{
	
		i64 a = 0, b = 0;
		char c;
		

		int n, m;
		cin >> n >> c >> m;
	
		forn(i, n + m)
		{
			forn(j, n)
			{
				l[i][j] = 0;
		
			}
		}
		l[0][0] = 1;
	
		forn(i, n + m)
		{
			forn(f, n)
			{
				int s = i - f;
				if (f + 1 <= s || s == m)
				{
					l[i + 1][f + 1] += l[i][f];
					l[i + 1][f + 1] %= MOD;
				}
				l[i + 1][f] += l[i][f];
				l[i + 1][f] %= MOD;
				
			}
		}


		a = w[n + m][n];
		b = l[n + m][n];
		cout << "Case #" << (t + 1) << ": " << a << " " << b << "\n";
	}

	return 0;
}
