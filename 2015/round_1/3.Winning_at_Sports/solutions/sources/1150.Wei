#include <bits/stdc++.h>

using namespace std;

const int maxn = 2015, mod = 1000000007;

int f[maxn][maxn], g[maxn][maxn];


int get_stressfree(int x, int y) {
	if (x >= 0 && x < maxn && y >= 0 && y < maxn) {
		if (f[x][y] != -1) return f[x][y];

		if (x <= y) {
			return f[x][y] = 0;
		} else {
			return f[x][y] = (get_stressfree(x - 1, y) + get_stressfree(x, y - 1) ) % mod;
		}

	} else {
		return 0;
	}
}

int get_stressful(int x, int y) {
	if (x >= 0 && x < maxn && y >= 0 && y < maxn) {
		if (g[x][y] != -1) return g[x][y];

		if (x > y) {
			return g[x][y] = get_stressful(x - 1, y) % mod;
		} else {
			return g[x][y] = get_stressfree(y + 1, x) % mod;
		}

	} else {
		return 0;
	}
}
int main() {
	memset(f, -1, sizeof(f));
	memset(g, -1, sizeof(g));

	f[0][0] = 1;
	g[0][0] = 1;

	int Tn;
	scanf("%d", &Tn);
	for (int Tc = 1; Tc <= Tn; ++Tc) {
		int x, y;
		scanf("%d-%d", &x, &y);

		int free = get_stressfree(x, y);
		int ful = get_stressful(x, y);
		printf("Case #%d: %d-%d\n", Tc, free, ful);
	}

	return 0;
}
