package winningatsports;

import java.io.*;
import java.math.*;
import java.lang.*;
import java.util.*;
import java.util.Arrays.*;
import java.io.BufferedReader;

public class Happy {

    public static void main(String[] args) {
        new Happy().haha();
    }

    class Node{
        public Node(int a, int b){
            x = a;
            y = b;
        }
        public int x;
        public int y;

    }

    public void haha() {
        BufferedReader in = null;
        BufferedWriter out = null;

        try{
            in = new BufferedReader(new FileReader("winning_at_sports.txt"));
            out = new BufferedWriter(new FileWriter("out.txt"));


            BigInteger[][] ss = new BigInteger[2000+1][2000+1];
            for(int i=1;i<=2000;i++){
                ss[i][0] = new BigInteger("1");
            }
            for(int y=1;y<=2000;y++){
                for(int x=y+1;x<=2000;x++){
                    BigInteger tmp = new BigInteger("0");
                    if(x-1>y){
                        tmp = tmp.add(ss[x-1][y]);
                    }
                    if(x>y-1){
                        tmp = tmp.add(ss[x][y-1]);
                    }
                    ss[x][y] = tmp;
                }
            }

            int T = Integer.parseInt(in.readLine());
            System.out.println("T="+T);
            for(int i=0;i<T;i++){
                System.out.print("Case #"+(i+1)+":");
                out.write("Case #"+(i+1)+":");

                String[] line = in.readLine().split("-");
                int x = Integer.parseInt(line[0]);
                int y = Integer.parseInt(line[1]);
                BigInteger free = ss[x][y];
                BigInteger free2 = free.mod(new BigInteger("1000000007"));

                BigInteger ful;
                ful = ss[x-y][0];
                BigInteger ful2 = ful.mod(new BigInteger("1000000007"));


                System.out.print(" "+free2+" "+ful+"\n");
                out.write(" "+free2+" "+ful2+"\n");
            }

            in.close();
            out.close();
        }catch(Exception e){
            e.printStackTrace();
            try{
                in.close();
                out.close();
            }catch(Exception ee){
                ee.printStackTrace();
            }
        }
        System.out.print("Ha Ha :D\n");
    }

}

