#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define N 2000
int dp[N + 1][N + 1];
char s[1000];
void PreCompute()
{
    dp[1][0] = 1;
    int mod = pow(10,9) + 7;
    for(int i = 2 ; i<=N ; i++)
    {
        dp[i][0] = 1;
        for(int j = 1 ;j<i ; j++)
        {
            if(i-1 > j) dp[i][j] += dp[i-1][j];
            if(i > j-1) dp[i][j] += dp[i][j-1];
            if(dp[i][j] >= mod) dp[i][j] = dp[i][j] - mod;
        }
    }
}
int main()
{
    int tc,t;
    PreCompute();
    freopen("C:\\Users\\dell\\Downloads\\inputC.txt","r",stdin);
    freopen("C:\\Users\\dell\\Downloads\\outputC.txt","w",stdout);
    scanf("%d",&tc);
    int mod = pow(10,9) + 7;
    for(t = 1 ; t<=tc ; t++)
    {
        int x,y;
        scanf("%s",s+1);
        x = 0;
        y = 0;
        int fl = 0;
        for(int i = 1 ; s[i] != '\0' ; i++)
        {
            if(s[i] == '-')
            {
                fl = 1;
                continue;
            }
            int d = s[i] - '0';
            if(fl == 0)
            {
                x = 10*x + d;
            }
            else
            {
                y = 10*y + d;
            }
        }
        int ans = dp[x][y];
        int ans2 = 0;
        //printf("%d %d\n",x,y);
        for(int j = y-1 ; j>=0 ; j--)
        {
            ans2 = ans2 + dp[y][j];
            if(ans2 >= mod) ans2 = ans2 -  mod;
        }
        printf("Case #%d: ",t);
        // Print the result of the code here
        printf("%d %d",ans,ans2);
        //Don't do anything after this.
        printf("\n");
    }
    return 0;
}

