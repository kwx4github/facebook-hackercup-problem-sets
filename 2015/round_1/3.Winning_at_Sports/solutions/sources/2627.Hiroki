// {{{ Boilerplate Code <--------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define ALL(A)     (A).begin(), (A).end()

using namespace std;

// }}}

int firstpatt[3000][3000];
int secondpatt[3000][3000];

int main(){
	int T;
	cin>>T;


	FOR(i,0,3000)FOR(j,0,3000)firstpatt[i][j]=0;
	FOR(i,0,3000)FOR(j,0,3000)secondpatt[i][j]=0;
	firstpatt[0][0]=1;
	secondpatt[0][0]=1;


	FOR(i,0,3000){
		FOR(j,0,3000){
			if(i<=j)
				continue;

			if(i==0 && j==0)
				continue;

			int p=0;
			if(i>0)
				p+=firstpatt[i-1][j];
			if(j>0)
				p+=firstpatt[i][j-1];

			firstpatt[i][j]=p%1000000007;
		}
	}


	FOR(i,0,3000){
		FOR(j,0,3000){
			if(i>j)
				continue;

			if(i==0 && j==0)
				continue;

			int p=0;
			if(i>0)
				p+=secondpatt[i-1][j];
			if(j>0)
				p+=secondpatt[i][j-1];

			secondpatt[i][j]=p%1000000007;
		}
	}


	for(int iter=0; iter<T; iter++){
		cout<<"Case #"<<(iter+1)<<": ";

		string scorelist;
		cin>>scorelist;

		int myscore=0,opposite=0;

		int hyphendone=0;

		FOR(i,0,scorelist.length()){
			if(scorelist[i]=='-')
				hyphendone=1;
			else
				if(hyphendone)
					opposite=opposite*10+scorelist[i]-'0';
				else
					myscore=myscore*10+scorelist[i]-'0';
		}

		cout<<firstpatt[myscore][opposite]<<" "<<secondpatt[opposite-1][opposite]<<endl;








	}

}
