#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <fstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <ctime> 
#include <cctype> 
#include <cassert>
using namespace std;
typedef long long int64;

int64 c[2002][2002];
int64 c2[2002][2002];
int N = 2002;
void compute()
{
	memset(c, 0, sizeof(c));
	c[1][0] = 1;
	for (int a = 2; a < N; a++) {
		for (int b = 0; b < a; b++) {
			if (b>0)
				c[a][b] += c[a][b - 1];
			if (a - 1>b)
				c[a][b] += c[a - 1][b];
			c[a][b] = c[a][b] % 1000000007LL;
		}
	}
}
void compute2()
{
	memset(c2, 0, sizeof(c2));
	c2[0][0] = 1;
	for (int a = 1; a < N; a++) {
		for (int b = 0; b <= a; b++) {
			if (b>0)
				c2[a][b] += c2[a][b - 1];
			if (a >b)
				c2[a][b] += c2[a - 1][b];
			c2[a][b] = c2[a][b] % 1000000007LL;
		}
	}
}


int main()
{
	compute();
	compute2();
	ifstream in("q3.txt");
	ofstream out("q3_output.txt");

	int T;
	in >> T;

	for (int t = 1; t <= T; t++)
	{
		int A, B;
		A = B = 0;
		string st;
		in >> st;
		int i = 0;
		while (st[i] != '-') {
			A = A * 10 + (st[i] - '0');
			i++;
		}
		i++;
		while (i < (int)st.length()) {
			B = B * 10 + st[i++] - '0';
		}
		//cout << A << " against " << B << endl;

		out << "Case #" << t << ": " << c[A][B]<<" "<<c2[B][B] << endl;
		cout << "Case #" << t << ": " << c[A][B] << " " << c2[B][B] << endl;
		
	}
	
	cin >> T;
	return 0;
}

