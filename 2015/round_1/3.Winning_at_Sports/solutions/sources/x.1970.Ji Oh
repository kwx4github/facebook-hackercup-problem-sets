package fhc2015.r1;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Scanner;

public class C {

	public static void main(String[] args) throws Exception {
		String DIR = "src/fhc2015/r1/";
		String READ_FILE = null;
		String WRITE_FILE = null;

		      READ_FILE = "c.in";
		//      WRITE_FILE = "c.out";

		if(READ_FILE != null){
			System.setIn(new BufferedInputStream(new FileInputStream(new File(DIR+READ_FILE))));
		}
		if(WRITE_FILE != null){
			System.setOut(new PrintStream(new File(DIR+WRITE_FILE)));
		}
		precalc();
		new C().run();
	}

	boolean DEBUG = false;
	Scanner sc;
	static void precalc(){}

	void run(){
		sc = new Scanner(System.in);
		int caseCnt = sc.nextInt();
		for (int caseNum = 1; caseNum <= caseCnt; caseNum++) {
			System.out.print("Case #" + caseNum + ": ");
			solve();
			System.out.flush();
		}
	}
	void debug(Object... o){
		if (DEBUG) System.out.println(Arrays.deepToString(o));
	}

				
	long MOD = 1000000007;
	void solve(){
		String str = sc.next();
		int A = Integer.parseInt(str.substring(0, str.indexOf('-')));
		int B = Integer.parseInt(str.substring(str.indexOf('-')+1));
		
		long[][] f = new long[A+1][B+1];
		for (int a = 1 ; a <= A ; a++) {
			f[a][0] = 1;
		}
		for (int b = 1 ; b <= B ; b++) {
			for (int a = b+1 ; a <= A ; a++) {
				f[a][b] = f[a][b-1] ;
				if (a-1 > b) {
					f[a][b] = (f[a][b] + f[a-1][b]) % MOD;
				}
			}
		}
		System.out.print(f[A][B] + " ");
		
		long[][] g = new long[B+1][B+1];
		for (int b = 1 ; b <= B ; b++) {
			g[0][b] = 1;
		}
		
		for (int a = 1 ; a <= B ; a++) {
			for (int b = a ; b <= B ; b++) {
				g[a][b] = g[a-1][b];
				if (b-1 >= a) {
					g[a][b] = (g[a][b] + g[a][b-1]) % MOD;
				}
			}
		}

		System.out.println(g[B][B]);
	}
	

}
/**

5
2-1
3-1
3-2
10-5
1000-500
Case #1: 1 1
Case #2: 2 1
Case #3: 2 2
Case #4: 1001 42
Case #5: 70047606 591137401


 */
