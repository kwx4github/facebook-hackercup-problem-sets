/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(2005);

long long dp[MAXN][MAXN], dp2[MAXN][MAXN];

void solve(int test){

    int A,B;
    S("%d-%d",&A,&B);

    P("Case #%d: ",test);

    P("%I64d %I64d\n",dp[A][B],dp2[B][B]);
}

int main(){

    freopen("1input.txt","r",stdin);
    freopen("1output.txt","w",stdout);

    dp[1][0] = 1;
    dp2[0][0] = 1;

    for(int i=0;i<=2000;i++)
        for(int j=0;j<=2000;j++)
        {
            dp[i+1][j] += dp[i][j];
            dp[i+1][j] %= MOD;

            dp2[i+1][j] += dp2[i][j];
            dp2[i+1][j] %= MOD;

            if(i-j != 1)
            {
                dp[i][j+1] += dp[i][j];
                dp[i][j+1] %= MOD;
            }

            if(i-j != 0)
            {
                dp2[i][j+1] += dp2[i][j];
                dp2[i][j+1] %= MOD;
            }
        }

    int t;
    S("%d",&t);
    FOR(i,1,t)
        solve(i);

}
