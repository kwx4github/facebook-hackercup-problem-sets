#include <iostream>
#include <string>
#include <cstdio>
#include <ctime>
#include <cassert>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <algorithm>
#include <utility>
#include <cstdlib>
#include <cstring>

using namespace std;

#ifdef WIN32
	#define lld "%I64d"
#else
	#define lld "%lld"
#endif

#define mp make_pair
#define pb push_back

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int M = 2015;
const int Q = 1000000007;

int dp[M][M];
int f[M][M][2];
char s[M];


int make_int(int i, int j){
	int res = 0;
	for (int k = i; k < j; k++)
		res = res * 10 + s[k] - '0';
	return res;	
}
int inc(int x, int y){
	int res = x + y;
	if (res >= Q)
		res -= Q;
	return res;	
}
int main(){
	srand(time(NULL));
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int i, j, n, a, b, ans;

	dp[1][0] = 1;
	f[1][0][0] = 1;
	f[1][0][1] = -1;
	f[1][1][0] = -1;
	f[1][1][1] = 1;
	for (i = 2; i < M; i++){
		for (j = 0; j < i; j++){
			if (i - 1 > j)
				dp[i][j] = inc(dp[i][j], dp[i - 1][j]);
			if (j > 0)
				dp[i][j] = inc(dp[i][j], dp[i][j - 1]);
		}

		for (j = 0; j <= i; j++){
			if (i > j){
				if (f[i - 1][j][0] != -1)
					f[i][j][0] = inc(f[i][j][0], f[i - 1][j][0]);
				if (f[i - 1][j][1] != -1)
					f[i][j][0] = inc(f[i][j][0], f[i - 1][j][1]);
			}	
			else
				f[i][j][0] = -1;

			if (j > 0){
			    if (f[i][j - 1][0] != -1)
			    	f[i][j][1] = inc(f[i][j][1], f[i][j - 1][0]);
			    if (f[i][j - 1][1] != -1)
			    	f[i][j][1] = inc(f[i][j][1], f[i][j - 1][1]);
			}
			else
				f[i][j][1] = -1;
		}
	}	




	scanf("%d", &n);
	for (i = 0; i < n; i++){
		scanf("%s", s);
		for (j = 0; j < (int)strlen(s); j++){
			if (s[j] == '-')
				break;
		}
		ans = 0;
		a = make_int(0, j);
		b = make_int(j + 1, (int)strlen(s));
		if (b == 0){
			ans = 1;
		}
		else{
			for (j = 0; j <= b; j++){
				if (f[b][j][0] != -1)
					ans = inc(ans, f[b][j][0]);
			}
		}
	/*	for (j = 1; j <= b; j++)
			for (t = 0; t <= j; t++)
				if (f[j][t][0] != -1)
					ans = 	inc(ans, f[j][t][0]);   */
		printf("Case #%d: %d %d\n", i + 1, dp[a][b], ans);
	}
	return 0;       
}                                              	