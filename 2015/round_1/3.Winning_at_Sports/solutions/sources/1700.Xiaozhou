#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <string>
#include <sstream>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <ctime>

#define inf 0x3f3f3f3f
#define Inf 0x3FFFFFFFFFFFFFFFLL
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define Rep(i, n) for (int i = 1; i <= (n); ++i)
#define clr(x, a) memset(x, (a), sizeof x)
using namespace std;
typedef long long ll;
ll const mod = 1000000007LL;
int const N = 2020;
ll f[N][N], g[N][N];

ll dfsf(int a, int b) {
	if (a < 0 || b < 0) return 0;
	if (~f[a][b]) return f[a][b];
	if (a == 1 && b == 0) return f[a][b] = 1;
	ll ret = 0;
	if (a > b) {
		ret = dfsf(a, b - 1);
		if (a - 1 > b) {
			ret += dfsf(a - 1, b);
			ret %= mod;
		}
	}
	return f[a][b] = ret;	
}

ll dfsg(int a, int b) {
	if (a < 0 || b < 0) return 0;
	if (~g[a][b]) return g[a][b];
	if (a == 1 && b == 0) return g[a][b] = 1;
	if (a == 0 && b == 1) return g[a][b] = 1;
	ll ret = 0;
	if(a >= b) ret = dfsg(a - 1, b);
	else {
		ret = (dfsg(a - 1, b) + dfsg(a, b - 1)) % mod;
	}
	return g[a][b] = ret;
}

int main() {
		freopen("winning_at_sports.txt", "r", stdin);
	freopen("c-ans", "w", stdout);
	
	clr(f, 0xff), clr(g, 0xff);
	int T, ca = 1; scanf("%d", &T);
	int a, b;
	while (T--) {
		scanf("%d-%d", &a, &b);
		printf("Case #%d: %I64d %I64d\n", ca++, dfsf(a, b), dfsg(a, b));	
		//cout << "Case #" << ca << ": " << dfsf(a, b) << " " << dfsg(a, b) << endl;
	}
	return 0;
}

