#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
#include<cmath>
#include<queue>
#include<climits>
#include<stack>
using namespace std;
typedef long long int ll;
#define MOD 1000000007;
ll w,l,dp[4005][4005],cp[4005][4005];
ll rec(ll index,ll loss)
{
    if(cp[index][loss]!=-1)
        return cp[index][loss];
    if(index-loss==w)
    {
        cp[index][loss]=1;
        return cp[index][loss];
    }
    if(index>w+l)
    {
        cp[index][loss]=0;
        return 0;
    }
    //ll a=0,b=0;
    if(loss<l)
    {
        ll a=0,b=0;
        if((index+1)-(loss+1)<=(loss+1))
            a=rec(index+1,loss+1);
        if((index+1)-loss<=loss)
            b=rec(index+1,loss);
        cp[index][loss]=(a+b)%MOD;
        return cp[index][loss];
    }
    if(loss==l)
    {
        ll a=0;
        a=rec(index+1,loss);
        cp[index][loss]=a%MOD;
        return cp[index][loss];
    }
}
ll recc(ll index,ll wins)
{
    if(dp[index][wins]!=-1)
        return dp[index][wins];
    if(wins==w)
    {
        dp[index][wins]=1;
        return dp[index][wins];
    }
    if(index>w+l)
    {
        dp[index][wins]=0;
        return 0;
    }
    ll a=0,b=0;
    if(wins>(index+1)-wins)
    {
        a=recc(index+1,wins);
    }
    if(wins+1>(index+1)-(wins+1))
    {
        b=recc(index+1,wins+1);
    }
    dp[index][wins]=(a+b)%MOD;
    return dp[index][wins];
}
int main()
{
    freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
    char ch;
    ll tc,t,i,j;
    cin>>tc;
    for(t=1;t<=tc;t++)
    {
        cin>>w>>ch>>l;
        for(i=0;i<=w+l;i++)
        {
            for(j=0;j<=w+l;j++)
                {dp[i][j]=cp[i][j]=-1;}
        }
        cout<<"Case #"<<t<<": "<<(recc(1,1))<<" "<<rec(1,1)<<endl;
        //cout<<"Case #"<<t<<": "<<recc(0,1)%MOD<<" "<<rec(0,1)%MOD<<endl;
    }
    return 0;
}