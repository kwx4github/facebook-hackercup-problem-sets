#include <iostream>
#include <vector>
#include <sstream>
using namespace std;

long long mod = 1000000007;

vector <vector <long long> > stressfree, stressfull;

long long stress(int a, int b) {
    if (a > b or a < 0 or b < 0) return 0;
    if (a == 0 and b == 0) return 1;
    long long& mem = stressfull[a][b];
    if (mem != -1) return mem;
    mem = (stress(a, b - 1) + stress(a - 1, b))%mod;
    if(mem < 0) mem = (mem + mod)%mod;
    return mem;
}

long long no_stress(int a, int b) {
    if (b >= a or a < 0 or b < 0) return 0;
    if (a == 1 and b == 0) return 1;
    long long& mem = stressfree[a][b];
    if (mem != -1) return mem;
    mem = (no_stress(a, b - 1) + no_stress(a - 1, b))%mod;
    if(mem < 0) mem = (mem + mod)%mod;
    return mem;
}


int main() {
    
    stressfree = vector <vector <long long > > (2005, vector <long long>(2005, -1));
    stressfull = vector <vector <long long > > (2005, vector <long long>(2005, -1));
    
    int t;
    cin >> t;
    for (int cas = 1; cas <= t; ++cas) {
        
        string caca;
        cin >> caca;
        bool toca = false;
        int a, b;
        a = b = 0;
        for (int j = 0; j < int(caca.size()); ++j) {
            if (caca[j] == '-') toca = true;
            else if (toca) b = b*10 + int(caca[j] - '0');
            else a = a*10 + int(caca[j] - '0');
        }
        
        cout << "Case #" << cas <<": " << no_stress(a, b) << ' ' << stress(b, b) << endl;
    }
    
    
    
}