#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <memory.h>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

const int md = 1000000007;

inline void add(int &a, int b) {
  a += b;
  if (a >= md) {
    a -= md;
  }
}

const int MAX = 4010;

int main() {
  freopen("in", "r", stdin);
  freopen("out", "w", stdout);
  vector < vector <int> > stressfree(MAX, vector <int>(MAX, 0));
  {
    stressfree[1][0] = 1;
    for (int my = 0; my < MAX; my++) {
      for (int opp = 0; opp < my; opp++) {
        if (my + 1 < MAX) {
          add(stressfree[my + 1][opp], stressfree[my][opp]);
        }
        if (opp + 1 < my) {
          add(stressfree[my][opp + 1], stressfree[my][opp]);
        }
      }
    }
  }
  vector < vector <int> > stressful(MAX, vector <int>(MAX, 0));
  {
    stressful[0][0] = 1;
    for (int my = 0; my < MAX; my++) {
      for (int opp = my; opp < MAX; opp++) {
        if (my + 1 <= opp) {
          add(stressful[my + 1][opp], stressful[my][opp]);
        }
        if (opp + 1 < MAX) {
          add(stressful[my][opp + 1], stressful[my][opp]);
        }
      }
    }
  }
  int tt;
  scanf("%d", &tt);
  for (int qq = 1; qq <= tt; qq++) {
    printf("Case #%d: ", qq);
    int my, opp;
    scanf("%d-%d", &my, &opp);
    printf("%d %d\n", stressfree[my][opp], stressful[opp][opp]);
  }
  return 0;
}
