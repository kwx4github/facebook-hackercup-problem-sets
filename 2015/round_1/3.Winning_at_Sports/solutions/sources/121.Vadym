#include <iostream>
#include <vector>
#include <algorithm>
#include <sstream>

using namespace std;

int const mod = 1000000007;

pair<int, int> solve(int a, int b)
{
	if (b == 0)
		return make_pair(1, 1);
	vector<int> A(b+1, 0), B(b+1, 0);
	A[0] = 1;
	for (int i = 2, to; i <= a; ++i)
	{
		B[0] = 1;
		to = min(b, i-1);
		for (int j = 1; j <= to; ++j)
			B[j] = (A[j] + B[j-1])%mod;
		A.swap(B);
	}
	int stress_free = A[b];

	fill(A.begin(), A.end(), 0);
	fill(B.begin(), B.end(), 0);
	A[0] = 1;
	for (int i = 2, to; i <= b; ++i)
	{
		B[0] = 1;
		to = min(b, i-1);
		for (int j = 1; j <= to; ++j)
			B[j] = (A[j] + B[j-1])%mod;
		A.swap(B);
	}
	int stressful = 0;
	for (int i = 0; i < b; ++i)
		stressful = (stressful + A[i])%mod;
	return make_pair(stress_free, stressful);

}

int main()
{
	int T;
	cin>>T;
	string s;
	for (int z = 1, a, b; z <= T; ++z)
	{
		cerr<<z<<endl;
		cin>>s;
		replace(s.begin(), s.end(), '-', ' ');
		istringstream sin(s);
		sin>>a>>b;
		auto res = solve(a, b);
		cout<<"Case #"<<z<<": "<<res.first<<" "<<res.second<<endl;
	}
	return 0;
}

