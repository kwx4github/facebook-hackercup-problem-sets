#include <set>
#include <bitset>
#include <queue>
#include <deque>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cstring>
#include <string>
#include <cassert>

#include <vector>
#include <list>
#include <map>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

typedef vector <int> vi;
typedef vector <vi> vvi;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <string> vs;

typedef long long LL; //NOTES:int64
typedef unsigned long long ULL; //NOTES:uint64
typedef unsigned uint;

const double pi = acos(-1.0); //NOTES:pi
const double eps = 1e-11; //NOTES:eps
const int MAXI = 0x7fffffff;
const int dx[] = {1, 0, -1, 0};
const int dy[] = {0, 1, 0, -1};
const char dz[] = "SENW";

#define rep(i,n)        for (int i=0;i<n;i++)
#define loop(i,a,b)     for (int i=(a),_b=(b); i<_b; i++)
#define rloop(i,b,a)    for (int i=(b)-1,_a=(a); i>=_a; i--)
#define Reset(a,b)      memset((a),(b),sizeof(a))

#define endline         putchar('\n')
#define space           putchar(' ')
#define EXIT(x)         {cout << x;return 0;}

#define fi              first
#define se              second
#define pb              push_back

#define S(x)            scanf("%d",&x);
#define input freopen("input.txt","r",stdin);
#define deb(i,a,n) for(i=0;i<n;i++){cout<<a[i]<<" ";}
#define db(x,y)          printf("%d %d\n",x,y);
#define debug(args...)	{dbg,args; cerr<<endl;}
#define dline			cerr<<endl
#define INF				(int)1e9
#define LINF			(long long)1e18
#define EPS				1e-9
#define maX(a,b)		((a)>(b)?(a):(b))
#define miN(a,b)		((a)<(b)?(a):(b))
#define abS(x)			((x)<0?-(x):(x))
#define mod             1000000007

int assume_lim = 2001;

int free_nums[2001][2001];
int full_nums[2001][2001];

void getFreeNums(int s1, int s2) {
	if (free_nums[s1][s2] < 0) {
		if (s1 == 1 && s2 == 0) {
			free_nums[s1][s2] = 1;
		}
		else {
			int tot_nums = 0;
			int s1_new = s1 - 1;
			int s2_new = s2 - 1;
			if (s1_new >= 0 && s1_new > s2) {
				getFreeNums(s1_new, s2);
				tot_nums += free_nums[s1_new][s2];
				tot_nums = tot_nums%mod;
			}
			if (s2_new >= 0 && s1 > s2_new) {
				getFreeNums(s1, s2_new);
				tot_nums += free_nums[s1][s2_new];
				tot_nums = tot_nums%mod;
			}
			free_nums[s1][s2] = tot_nums;
		}
	}
}

void getFullNums(int s1, int s2) {
	if (full_nums[s1][s2] < 0) {
		if (s2 > 0) {
			int tot_nums = 0;
			for (int i =0; i < s2 ; i++) {
				getFreeNums(s2, i);
				tot_nums += free_nums[s2][i];
				tot_nums = tot_nums%mod;
			}
			
			full_nums[s1][s2] = tot_nums;
		}
		else {
			full_nums[s1][s2] = 1;
		}
	}
}

void getFreeAndFullNums(int s1, int s2) {
		getFreeNums(s1, s2);
		getFullNums(s1, s2);
}

int main() {
	int T;
	cin>>T;
	for (int i=0; i < assume_lim; i++) {
		for (int j=0; j< assume_lim; j++) {
			free_nums[i][j] = -1;
			full_nums[i][j] = -1;
		}
	}
	for (int i=0; i<T; i++) {
		int s1,s2;
		scanf("%d-%d",&s1,&s2);
		getFreeAndFullNums(s1, s2);
		cout<<"Case #"<<i + 1<<": "<<free_nums[s1][s2]<<" "<<full_nums[s1][s2]<<endl;
	}
	return 0;
}