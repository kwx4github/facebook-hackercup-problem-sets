#include <bits/stdc++.h>

using namespace std;

long long dp1[2010][2010],dp2[2010][2010];
const long long mod = 1000000007;
int lim = 2000;
void precomp()
{
	for(int i = 1;i <= lim; i++)
	{
		dp1[i][0] = dp2[0][i] = 1;
	}
	dp2[0][0] = dp1[0][0] = 1;

	for(int i = 1; i <= lim; i++)
	{
		for(int j = 1; j < i; j++)
		{
			// assert(i > j);
			dp1[i][j] = dp1[i][j-1];
			if(i-1 > j)
				dp1[i][j] = (dp1[i][j] + dp1[i-1][j])%mod;
		}
	}

	for(int i = 1; i <= lim; i++)
	{
		for(int j = 1; j <= lim; j++)
		{
			if(j >= i)
			{	
				dp2[i][j] = dp2[i-1][j];
				if(j-1 >= i)
					dp2[i][j] = (dp2[i][j] + dp2[i][j-1])%mod;

			}

			else
				dp2[i][j] = dp2[i-1][j];
		}
	}


} 

int main()
{
	precomp();
	int tests;
	scanf("%d",&tests);
	for(int test = 1; test <= tests; test++)
	{
		int a,b;
		scanf("%d-%d",&a,&b);
		printf("Case #%d: %lld %lld\n",test,dp1[a][b],dp2[a][b]);

	}
	return 0;
}