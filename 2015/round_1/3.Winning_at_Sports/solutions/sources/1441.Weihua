/**
 * Description:
 * ProblemName:
 * Source:
 * Author: Ply_py
 */
#include <iostream>
#include <fstream>
#include <string>
#include <cmath>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <vector>
#include <queue>
#include <ctime>
#include <map>
#include <set>
#include <iomanip>
#include <algorithm>
using namespace std;

const int MAXN = 2005;
const int MOD = 1000000007;

int f[MAXN][MAXN];

int add(long long a, long long b) {
    long long c = a+b;
    if (c >= MOD) {
        c -= MOD;
    }
    return c;
}

int dp1(int a, int b)
{
    // cout << a << ' ' << b << endl;
    if (-1 != f[a][b]) {
        return f[a][b];
    }
    int ret = 0;
    if (a-1 >= 0 && a-1 > b) {
        ret = dp1(a-1,b);
    }
    if (b-1 >= 0 && a > b-1) {
        ret = add(ret, dp1(a,b-1));
    }
    return f[a][b] = ret;
}

int g[MAXN][MAXN];
int dp2(int a, int b)
{
    if (-1 != g[a][b]) {
        return g[a][b];
    }
    int ret = 0;
    if (a-1 >= 0 && a-1 >= b) {
        ret = dp2(a-1,b);
    }
    if (b-1 >= 0 && a >= b-1) {
        ret = add(ret, dp2(a,b-1));
    }
    return g[a][b] = ret;
}

int main(int argc, char const *argv[]) {
    int a, b;
    memset(f,-1,sizeof(f));
    memset(g,-1,sizeof(g));
    f[2][0] = f[1][0] = f[0][0] = 1;
    g[1][0] = g[0][0] = 1;

    int T;
    scanf("%d", &T);
    for (int i = 1; i <= T; ++i) {
        int a, b;
        scanf("%d-%d", &a, &b);
        printf("Case #%d: %d %d\n", i, dp1(a,b), dp2(b,b));
    }
    return 0;
}