#include<ctime>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<string>
#include<vector>
#include<sstream>
#include<iostream>
#include<algorithm>
#include<queue>
#include<stack>
#include<set>
#include<map>
#include<numeric>
#include<cmath>
#include<locale>
using namespace std;
#define all(x) (x).begin(),(x).end()
#define sz(a) (int((a).size()))
typedef istringstream iss; typedef ostringstream oss; typedef long long lli;
const lli MOD = 1000000007;
int myTarget, theirTarget;
lli dp1[2011][2011], dp2[2011][2011];

lli stressFree(int mine, int their)
{
    if(their>=mine) return 0;
    if(mine==myTarget && their==theirTarget) return 1;
    if(dp1[mine][their]!=-1) return dp1[mine][their];
    lli rv=0;
    if(mine<myTarget) rv+=stressFree(mine+1, their);
    rv%=MOD;
    if(their<theirTarget) rv+=stressFree(mine,their+1);
    rv%=MOD;
    return dp1[mine][their]=rv;
}

lli stressFull(int mine,int their)
{
    if(their != theirTarget && mine>their) return 0;
    if(mine==myTarget && their==theirTarget) return 1;
    if(dp2[mine][their]!=-1) return dp2[mine][their];
    lli rv=0;
    if(mine<myTarget) rv+=stressFull(mine+1, their);
    rv%=MOD;
    if(their<theirTarget) rv+=stressFull(mine,their+1);
    rv%=MOD;
    return dp2[mine][their]=rv;
}

int main()
{
    int T; cin>>T; int cn=0;
    while(T--)
    {
        scanf("%d-%d",&myTarget,&theirTarget);
        memset(dp1,-1,sizeof dp1); memset(dp2,-1,sizeof dp2);
        lli sfree = stressFree(1,0) % MOD;
        lli sfull = stressFull(0,0) % MOD;
        cout<<"Case #"<<++cn<<": "<<sfree<<' '<<sfull<<endl;

    }
}
