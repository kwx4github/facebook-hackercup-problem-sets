#include <stdio.h>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <fstream>
#include <stdlib.h>
#include <math.h>
#include <cmath>
#include <string.h>
#include <string>
#include <algorithm>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <limits.h>
#include <time.h>
#include <bitset>
#include <list>
#include <cassert>

#define EPS 1e-11
#define PI acos(-1)
#define LL long long
#define INF 1000000009
#define MP(a,b) make_pair(a,b)
#define PB(a) push_back(a)
#define OPENR(a) freopen(a,"r",stdin)
#define OPENW(a) freopen(a,"w",stdout)
#define pii pair<int,int>

int x4[4] = { 0, 0,-1, 1};
int y4[4] = {-1, 1, 0, 0};
int x8[8] = {-1,-1,-1, 0, 0, 1, 1, 1};
int y8[8] = {-1, 0, 1,-1, 1,-1, 0, 1};
int xhorse[8] = {1,2,1,2,-1,-2,-1,-2};
int yhorse[8] = {2,1,-2,-1,2,1,-2,-1};

using namespace std;

#define MOD 1000000007

int t;
int dp[2005][2005];
int dp2[2005][2005];
int a,b;

int getDp(int aa,int bb)
{
	if (aa>a || bb>b) return 0;
	if (aa==a && bb==b) return 1;
	
	if (dp[aa][bb]!=-1) return dp[aa][bb];
	int &res = dp[aa][bb];
	
	res = 0;
	res += getDp(aa+1, bb);
	res %= MOD;
	if (bb+1<aa) res+=getDp(aa, bb+1);
	res %= MOD;
	
	return res;
}

int getDp2(int aa,int bb)
{
	if (aa>a || bb>b) return 0;
	if (aa==a && bb==b) return 1;
	
	if (dp2[aa][bb]!=-1) return dp2[aa][bb];
	int &res = dp2[aa][bb];
	
	res = 0;
	if ((aa+1>bb && bb==b) || aa+1<=bb) res+= getDp2(aa+1,bb);
	res%=MOD;
	res += getDp2(aa, bb+1);
	res%=MOD;
	
	return res;
}

int main()
{
	OPENR("winning_at_sports.txt");
	OPENW("winning_at_sports.out");
	
	scanf("%d",&t);
	
	for (int tc=1;tc<=t;tc++)
	{
		memset(dp,-1,sizeof(dp));
		memset(dp2,-1,sizeof(dp2));
		scanf("%d-%d",&a,&b);
		
		printf("Case #%d: %d %d\n",tc,getDp(0,0), getDp2(0,0));
	}
	
	return 0;
}

