// Authored by dolphinigle

#include <vector>
#include <list>
#include <map>
#include <set>

#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cassert>
#include <cstdarg>

#define FORN(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define REP(X,Y,Z) for (int (X) = (Y);(X) < (Z);++(X))

#define SZ(Z) ((int)(Z).size())
#define ALL(W) (W).begin(), (W).end()
#define PB push_back

#define MP make_pair
#define A first
#define B second

#define INF 1023123123
#define EPS 1e-11

#define MX(Z,Y) Z = max((Z),(Y))
#define MN(X,Y) X = min((X),(Y))

using namespace std;

typedef long long ll;
typedef double db;
typedef vector<int> vint;

int finscore_a, finscore_b;

ll modu = 1000000007LL;
const int LIMT = 2050;
ll dp[LIMT][LIMT][2];

ll Solve(int my, int you, int isfun) {
  if (my == finscore_a && you == finscore_b) return 1LL;
  ll& alias = dp[my][you][isfun];
  if (alias != -1LL) return alias;
  if (my != 0 || you != 0) {
    if (isfun && my <= you) return alias=0LL;
    if (!isfun && my > you && you != finscore_b) return alias=0LL;
  }
  alias = 0LL;
  if (my < finscore_a) alias += Solve(my+1, you, isfun);
  if (you < finscore_b) alias += Solve(my, you+1, isfun);
  alias %= modu;
  return alias;
}

#ifdef DOLPHINIGLE_ENV
int main_c() {
#else
int main() {
#endif
  int ntc;
  cin >> ntc;
  FORN(itc, ntc) {
    printf("Case #%d: ", itc+1);
    int a, b;
    scanf("%d-%d", &a, &b);
    finscore_a = a;
    finscore_b = b;
    FORN(i, LIMT) FORN(j, LIMT) FORN(k, 2) dp[i][j][k] = -1;
    cout << Solve(0, 0, 1) << " " << Solve(0, 0, 0) << endl;
  }
  return 0;
}

