import codejam as gcj

@gcj.persistent_memoize
def free(x, y):
    if x <= y or y < 0:     return 0
    if (x, y) == (1, 0):    return 1

    return (free(x - 1, y) + free(x, y - 1)) % 1000000007

@gcj.persistent_memoize
def ful(x, y):
    if x > y or x < 0:      return 0
    if (x, y) == (0, 1):    return 1

    return (ful(x - 1, y) + ful(x, y - 1)) % 1000000007

for x in range(2100):
    for y in range(2100):
        free(x, y), ful(x, y)

T = gcj.read_input('i')
for t in range(T):
    X, Y = map(int, gcj.read_input('s').split('-'))
    print 'Case #%i:' % (t + 1), free(X, Y), ful(Y, Y)