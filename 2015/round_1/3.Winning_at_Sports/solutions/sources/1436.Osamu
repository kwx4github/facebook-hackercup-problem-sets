#include <iostream>
#include <vector>

using namespace std;

const long long MOD = 1000000007;
template<typename T>
long long calc(int a, int b, T cond) {
    vector<vector<long long>> dp(a+1, vector<long long>(b+1, 0));
    dp[0][0] = 1;
    for(int i = 0; i <= a; ++i) {
        for(int j = 0; j <= b; ++j) {
            if(cond(i, j)) {
                if(i > 0) dp[i][j] += dp[i-1][j];
                if(j > 0) dp[i][j] += dp[i][j-1];
                if(dp[i][j] >= MOD) dp[i][j] %= MOD;
            }
        }
    }
    return dp[a][b];
}

void solve(int CASE) {
    int A, B;
    cin >> A;
    cin.ignore();
    cin >> B;

    const long long stress_free = calc(A, B, [](int i, int j){return i > j;});
    const long long stressful = calc(A, B, [A,B](int i, int j){return i == A || j == B || i <= j;});
    cout << "Case #" << CASE << ": " << stress_free << " " << stressful << endl;
}

int main() {
    cin.tie(0);
    ios::sync_with_stdio(0);

    int N;
    cin >> N;
    for(int i = 1; i <= N; ++i) {
        solve(i);
    }
    return 0;
}
