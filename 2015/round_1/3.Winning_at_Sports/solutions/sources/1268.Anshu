#include <iostream>
#include <stack>
#include <map>

typedef unsigned long long ull;

static const ull modulus = 1000000007;

std::map<std::pair<ull, ull>, ull> stressFreeMemory;
ull stressFree(ull a, ull b)
{
    if (!b)
        return 1;

    auto key = std::make_pair(a, b);
    if (stressFreeMemory.find(key) != stressFreeMemory.end())
        return stressFreeMemory[key];

    ull answer = 0;
    if (a - 1 > b)
        answer = (answer + stressFree(a - 1, b)) % modulus;

    if (a > b - 1)
        answer = (answer + stressFree(a, b - 1)) % modulus;

    return stressFreeMemory[key] = answer;
}

std::map<std::pair<ull, ull>, ull> stressfulMemory;
ull stressful(ull a, ull b)
{
    if (a > b)
        return stressful(b, b);

    if (!a)
        return 1;

    auto key = std::make_pair(a, b);
    if (stressfulMemory.find(key) != stressfulMemory.end())
        return stressfulMemory[key];

    ull answer = stressful(a - 1, b) % modulus;
    if (b - 1 >= a)
        answer = (answer + stressful(a, b - 1)) % modulus;

    return stressfulMemory[key] = answer;
}

int main()
{
    int cases;
    std::cin >> cases;
    for (int c = 1; c <= cases; ++c) {
        int a, b;
        scanf("%d-%d", &a, &b);
        printf("Case #%d: %llu %llu\n", c, stressFree(a, b), stressful(a, b));
    }

    return 0;
}

