#include <cstdio>
#include <iostream>
#include <vector>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <algorithm>
#include <stdbool.h>
#include <list>
#include <stack>
#include <sstream>
using namespace std;
#define mx 1000000007

long long int dp[2001][2001];
long long int dp1[2001][2001];

long long int stress_free(long long int a, long long int b, long long int pos, long long int sum, long long int total)
{
  long long int temp = 0;
  if(pos == total - 1)
  {
    temp++;
    return temp;
  }

  if(pos == 0)
  {
    if(a > 0)
    {
      if(dp[a - 1][b] == 0)
        temp += stress_free(a-1,b,pos+1,sum+1,total);
      else
        temp += dp[a-1][b];
    }  
  }

  else
  {
    if(sum == 1)
    {
      if(a > 0)
      {
        if(dp[a-1][b] == 0)
          temp += stress_free(a-1,b,pos+1,sum+1,total);
        else
          temp += dp[a-1][b];
      }
        
    }

    else
    {
      if(a > 0)
      {
        if(dp[a-1][b] == 0)
          temp += stress_free(a-1,b,pos+1,sum+1,total) % mx;
        else
          temp += dp[a-1][b];
      }
        
      if(b > 0)
      {
        if(dp[a][b-1] == 0)
          temp += stress_free(a,b-1,pos+1,sum-1,total) % mx;
        else
          temp += dp[a][b-1];
      }  
          
    }
  
  }

  dp[a][b] = temp % mx;
  return temp % mx;
}

long long int stress_full(long long int a, long long int b, long long int pos, long long int sum, long long int total)
{
  long long int temp = 0;
  if(b == 0 && sum <= 0)
  {
    temp++;
    return temp;
  }

  if(pos == 0)
  {
    if(b > 0)
    {
      if(dp1[a][b - 1] == 0)
        temp += stress_full(a,b - 1,pos+1,sum-1,total);
      else
        temp += dp1[a][b-1];
    }

    else
      temp = 1;
  }

  else
  {
    if(sum == 0)
    {
      if(b > 0)
      {
        if(dp1[a][b - 1] == 0)
          temp += stress_full(a,b - 1,pos+1,sum-1,total);  
        else
          temp += dp1[a][b-1];
      }

      else
      {
        temp = 1;
      }
      
    }

    else
    {
      if(b > 0)
      {
        if(dp1[a][b - 1] == 0)
          temp += (stress_full(a,b - 1,pos+1,sum-1,total) % mx);  
        else
          temp += dp1[a][b-1]; 
      }

      if(a > 0)
      {
        if(dp1[a-1][b] == 0)
          temp += (stress_full(a-1,b,pos+1,sum+1,total) % mx);  
        else
          temp += dp1[a-1][b];
      }
    }
  }

  dp1[a][b] = temp % mx;
  return temp % mx;
}

int main()
{
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  long long int t,a,b;
  scanf("%lld",&t);
  for(int k = 1; k <= t; k++)
  {
    scanf("%lld-%lld",&a,&b);
    
    for(int i = 0; i <= a; i++)
    {
      for(int j = 0; j <= b; j++)
      {
        dp[i][j] = 0;
        dp1[i][j] = 0;
      }
    }

    printf("Case #%d: %lld %lld\n",k,stress_free(a,b,0,0,a+b),stress_full(a,b,0,0,a+b));
  }
  return 0;
}
