package round1;

import java.io.*;

public class WinningAtSports {
    private final static long mod = 1000000007;
    private long [][] combination;
    private int myscore;
    private int otherscore;

    public static void main(String args[]) throws IOException {
        WinningAtSports winningAtSports = new WinningAtSports();
        winningAtSports.solve("winning_at_sports.txt");
    }

    private void solve(String path) throws IOException{
        PrintWriter writer = new PrintWriter("output.txt", "UTF-8");
        BufferedReader br = new BufferedReader(new FileReader(path));
        String firstLine = br.readLine();
        int count = Integer.parseInt(firstLine);
        int testCaseNumber = 1;

        while(count > 0){
            String [] nums = br.readLine().split("-");
            int myScore = Integer.parseInt(nums[0]);
            int otherScore = Integer.parseInt(nums[1]);
            this.myscore = myScore;
            this.otherscore = otherScore;

            //compute stress free
            long stressFreeCount = 1;
            this.combination = new long[otherScore + 1][myScore + 1];
            computeStreeFree();
            stressFreeCount = combination[otherScore][myScore];

            //compute stressful
            long stressfulCount = 1;
            this.combination = new long[otherScore + 1][myScore + 1];
            computeStressful();
            stressfulCount = combination[otherScore][myScore];

            writer.println("Case #" + testCaseNumber + ": " + stressFreeCount + " " + stressfulCount);
            count--;
            testCaseNumber++;
        }
        writer.close();
    }

    private void computeStreeFree(){
        //initialize the first row
        for(int i = 0; i <= myscore; i++){
            combination[0][i] = 1;
        }

        for(int i = 1; i <= otherscore; i++){
            for(int j = 1; j <= myscore; j++){
                if(i >= j) {
                    continue;
                }
                combination[i][j] = (combination[i-1][j] + combination[i][j-1])%mod;
            }
        }
    }

    private void computeStressful(){
        //initialize the first col
        for(int i = 0; i <= otherscore; i++){
            combination[i][0] = 1;
        }

        for(int i = 1; i <= otherscore; i++){
            for(int j = 1; j <= myscore; j++){
                if(j > i && i!=otherscore) {
                    continue;
                }
                combination[i][j] = (combination[i-1][j] + combination[i][j-1])%mod;
            }
        }
    }
}