#include <bits/stdc++.h>

using namespace std;

const long long MOD = 1000000007;

bool mark[2001][2001];
bool mark2[2001][2001];

long long memo[2001][2001];
long long memo2[2001][2001];

long long stress_free (int a, int b){

	if (a==0 && b==0 ) return 1;
	if (a<0 || b<0) return 0;
	if (b>=a) return 0;
	
	long long &best= memo[a][b];
	
	if (mark[a][b]) return best;
	mark[a][b]=true;

	
	best=  ( (stress_free(a-1,b)%MOD) + (stress_free(a,b-1)%MOD) ) %MOD;
	
	return best;
}

long long stressful (int a, int b){
	if (a==0 && b==0) return 1;
	if (a<0 || b<0) return 0;
	if (a>b) return 0;
	
	long long &best= memo2[a][b];
	
	if (mark2[a][b]) return best;
	
	mark2[a][b]=true;
	
	best= ( ( stressful(a-1,b)%MOD) + (stressful(a,b-1)%MOD) ) %MOD;
	
	return best;
}


int main(){
	
	memset(mark,0,sizeof(mark));
	memset(mark2,0,sizeof(mark2));
	stressful(1999,1999);
	stress_free(2000,1999);
	
	int t;
	scanf("%d",&t);
	
	for (int i=0;i<t;++i){
		int n,m;
		printf("Case #%d: ",i+1);
		scanf("%d-%d",&n,&m);
		printf("%lld %lld\n",stress_free(n,m), stressful(m,m));
	}
	
	return 0;
}
