/*
 * Bidhan Roy
 * University of Dhaka
 */

using namespace std;
#include <bits/stdc++.h>

#define rep(i,n) for(auto i=0; i<(n); i++)
#define mem(x,val) memset((x),(val),sizeof(x));
#define rite(x) freopen(x,"w",stdout);
#define read(x) freopen(x,"r",stdin);
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define sqr(x) ((x)*(x))
#define pb push_back
#define clr clear()
#define inf (1<<30)
#define ins insert
#define xx first
#define yy second
#define eps 1e-9

typedef long long i64;
typedef unsigned long long ui64;
typedef string st;
typedef vector<int> vi;
typedef vector<st> vs;
typedef map<int,int> mii;
typedef map<st,int> msi;
typedef set<int> si;
typedef set<st> ss;
typedef pair<int,int> pii;
typedef vector<pii> vpii;

#define mx 2003
#define mod 1000000007

int dp[mx][mx];
int mP, oP;

int stressFree( int my, int op ) {
    if( my > mP ) return 0;
    if( op > oP ) return 0;
    if( my <= op ) return 0; /// always have more points than opponent

    if( my == mP && op == oP ) return 1;

    int &ret = dp[ my ][ op ];
    if( ret != -1 ) return ret;

    ret = 0;
    ret += stressFree( my+1, op ); if( ret >= mod ) ret -= mod;
    ret += stressFree( my, op+1 ); if( ret >= mod ) ret -= mod;

    return ret;
}

int stressFull( int my, int op ) {
    if( my > mP ) return 0;
    if( op > oP ) return 0;
    if( my > op ) return 0; /// never have more points than your opponent

    if( my == oP && op == oP ) return 1;

    int &ret = dp[ my ][ op ];
    if( ret != -1 ) return ret;

    ret = 0;
    ret += stressFull( my+1, op ); if( ret >= mod ) ret -= mod;
    ret += stressFull( my, op+1 ); if( ret >= mod ) ret -= mod;

    return ret;
}

int main() {
    read("winning_at_sports.txt");
    rite("Winning_At_Sports222.out");
    int test,kas=0;
    cin >> test;
    while( test-- ) {
        scanf("%d-%d",&mP,&oP);
        assert(mP > oP);
        mem(dp, -1);
        int a = stressFree( 1, 0 );
        mem(dp, -1);
        int b = stressFull( 0, 0 );
        cout << "Case #" << ++kas << ": " << a << " " << b << endl;
        //return 0;
    }
    return 0;
}
