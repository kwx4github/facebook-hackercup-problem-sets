#include <cstdlib>
#include <cmath>
#include <climits>
#include <cfloat>
#include <map>
#include <utility>
#include <set>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <sstream>
#include <deque>
#include <complex>
#include <stack>
#include <queue>
#include <cstdio>
#include <cctype>
#include <cstring>
#include <ctime>
#include <iterator>
#include <bitset>
#include <numeric>
#include <list>
#include <iomanip>

#if __cplusplus >= 201103L
#include <array>
#include <tuple>
#include <initializer_list>
#include <unordered_set>
#include <unordered_map>
#include <forward_list>

#define cauto const auto&
#define ALL(v) begin(v),end(v)
#else
#define ALL(v) (v).begin(),(v).end()
#endif

using namespace std;


namespace{
typedef long long LL;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;

typedef vector<int> vint;
typedef vector<vector<int> > vvint;
typedef vector<long long> vll, vLL;
typedef vector<vector<long long> > vvll, vvLL;

#define VV(T) vector<vector< T > >

template <class T>
void initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){
	v.assign(a, vector<T>(b, t));
}

template <class F, class T>
void convert(const F &f, T &t){
	stringstream ss;
	ss << f;
	ss >> t;
}


#define REP(i,n) for(int i=0;i<int(n);++i)
#define RALL(v) (v).rbegin(),(v).rend()


#define MOD 1000000007LL
#define EPS 1e-8

struct node{
	int nxt[26];
	node(){ fill(ALL(nxt), -1); }
};

void mainmain(){
	vector<node> nd(1);

	int n;
	cin >> n;
	string s = "_";
	int ans = 0;
	for(int i = 0; i < n; ++i){
		cin >> s;
		int v = 0;
		int res = -1;
		for(size_t j = 0; j < s.size(); ++j){
			int &r = nd[v].nxt[s[j] - 'a'];
			if(r >= 0){
				v = r;
			}
			else{
				if(res == -1){ res = j + 1; }
				r = v = nd.size();
				nd.emplace_back();
			}
		}
		if(res == -1){ res = s.size(); }
		ans += res;
	}
	cout << ans;

}

}
int main() try{
	ios::sync_with_stdio(false);

	char buf[32] = "";
	cin.getline(buf, 32);
	string s = buf;
	int T = strtol(buf, 0, 10);
	int d = strlen(buf);
	for(int tc = 1; tc <= T; ++tc){
		cerr << setw(d + 4) << tc << " / " << setw(d) << T << '\n';
		cout << "Case #" << tc << ": " << flush;
		mainmain();
		cout << endl;
	}
}
catch(...){
	cerr << "ERROR\n";
}
