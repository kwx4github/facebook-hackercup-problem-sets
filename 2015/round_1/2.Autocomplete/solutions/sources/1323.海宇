#include <cstdio>
#include <cstring>

const int N = 1000005;

struct node {
	node *ch[26];
}Tree[N], *Null, *Root;

char s[N];

int main() {
	freopen("1.in", "r", stdin);
	freopen("1.out", "w", stdout);
	int T, ca = 0;
	scanf("%d", &T);
	Null = &Tree[0];
	for (int i = 0; i < 26; ++i) Null->ch[i] = Null;
	while (T--) {
		int used = 1;
		Root = &Tree[used++];
		for (int i = 0; i < 26; ++i) Root->ch[i] = Null;
		int n, ans = 0;
		scanf("%d", &n);
		while (n--) {
			scanf("%s", s);
			int len = strlen(s);
			node *p = Root;
			bool flag = 0;
			for (int i = 0; i < len; ++i)
				if (p->ch[s[i] - 'a'] == Null) {
					if (!flag) {
						ans += i + 1;
						flag = 1;
					}
					node *q = &Tree[used++];
					for (int i = 0; i < 26; ++i) q->ch[i] = Null;
					p->ch[s[i] - 'a'] = q;
					p = q;
				}
				else p = p->ch[s[i] - 'a'];
			if (!flag) ans += len;
		}
		printf("Case #%d: %d\n", ++ca, ans);
	}
	return 0;
}

