#include <cstdio>
#include <algorithm>
#include <cstring>

#define eprintf(...) fprintf(stderr, __VA_ARGS__)

using namespace std;
  
const int MAXN = (int)1e6 + 123;
char str[MAXN];
int go[MAXN][26];
int dp[MAXN];
int ff;

int init() {
	memset(go[ff], -1, sizeof go[ff]);
	dp[ff] = 0;
	return ff++;
}


int add(int ind, int p) {
	if (str[ind] == 0) {
		dp[p]++;
		return 0;
	}
	int c = str[ind] - 'a';
	if (go[p][c] == -1) {
		go[p][c] = init();
	}
	dp[p] -= dp[go[p][c]];
	int res = add(ind + 1, go[p][c]);
	dp[p] += dp[go[p][c]];
	if (p != 0 && dp[p] == 1) return 0;
	return res + 1;
}

void solve(int test) {
	int N;
	ff = 0;
	init();
	int res = 0;
	scanf("%d", &N);
	for (int i = 0; i < N; i++) {
		scanf("%s", str);
		int f = add(0, 0);
		res += f;
	}
	printf("Case #%d: %d\n", test, res);
}

int main() {
	int T;
	scanf("%d", &T);
	for (int test = 1; test <= T; test++) solve(test);
}
