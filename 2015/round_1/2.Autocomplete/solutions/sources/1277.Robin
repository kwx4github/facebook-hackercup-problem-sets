#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include "fstream"

#define sz(X) ((int)X.size())
#define FOR(i,x,y) for(int i=x; i<y; ++i)
#define FORE(i,x,y) for(int i=x; i<=y; ++i)

using namespace std;

class Node
{
    map<char, Node *> V;

public:
    Node * addChar(char c)
    {
        Node *N = new Node;
        V[c] = N;
        return  N;
    }

    Node * getNodeForChar(char c)
    {
        return V[c];
    }
};

int main()
{
    ofstream cout ("output.txt");
    ifstream cin ("input.txt");

    int T;
    cin>>T;

    FOR(i,1,T+1)
    {
        Node *root = new Node;

        long count = 0;
        int N; cin>>N;
        FOR(n,0,N)
        {
            string str; cin>>str;
            int len = sz(str);

            Node *s = root;
            int i = 0;
            for(;i<len;++i)
            {
                if(!s->getNodeForChar(str[i])) break;
                else s = s->getNodeForChar(str[i]);
            }

            count += min((i+1), len);

            //add remaining characters
            FOR(j,i,len)
            s = s->addChar(str[j]);
        }
        cout<<"Case #"<<i<<": "<<count<<endl;
    }

    return 0;
}
// END KAWIGIEDIT TESTING

//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
