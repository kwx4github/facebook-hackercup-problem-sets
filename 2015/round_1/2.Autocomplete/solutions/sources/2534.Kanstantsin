#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <memory.h>
#include <fstream>
#include <iostream>
#include <set>
#include <map>

using namespace std;

set<long long> mySet;
string a[111111];

const long long modulo = 345368237;


int main() {  
	freopen("autocomplete.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int test;
	cin >> test;
	int tst = 0;
	while (test) {
		--test;
		++tst;
		int n;
		cin >> n;
		for (int i = 1; i <= n; ++i) cin >> a[i];
		mySet.clear();
		long long answer = 0;
		for (int i = 1; i <= n; ++i) {
			long long hash = 0;
			bool used = true;
			for (int j = 1; j <= a[i].size(); ++j) {
				long long code = a[i][j - 1] - 'a' + 1;
				hash = hash * (long long)modulo + code;   
				if (used) ++answer;
				if (mySet.find(hash) == mySet.end()) used = false;
				mySet.insert(hash);
			}
		}
		cout << "Case #" << tst << ": " << answer << endl;
	}
	return 0;	
}