import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

/**
 * Created by poly on 1/17/15.
 */
public class Autocomplete {
    static class Node {
        char c;
        Map<Character, Node> children;

        Node(char c) {
            this.c = c;
            children = null;
        }

        int type(String s, int pos) {
            if (s == null || pos >= s.length()) {
                return 0;
            }
            if (children == null) {
                children = new HashMap<Character, Node>();
            }
            char c = s.charAt(pos);
            Node n = children.get(c);

            if (n == null) {
                return pos + 1;
            }
            if (pos == s.length() - 1) {
                return pos + 1;
            }
            return n.type(s, pos + 1);
        }

        void insert(String s, int pos) {
            if (s == null || pos >= s.length()) {
                return;
            }
            if (children == null) {
                children = new HashMap<Character, Node>();
            }
            char c = s.charAt(pos);
            Node n = children.get(c);

            if (n == null) {
                n = new Node(c);
                children.put(c, n);
            }
            if (pos != s.length() - 1) {
                n.insert(s, pos + 1);
                return;
            }
        }

        @Override
        public String toString() {
            String res = "[";
            if (children != null) {
                for (char c : children.keySet()) {
                    res += c + ":" + children.get(c).toString() + ", ";
                }
            }
            res +=  "]";
            return res;
        }
    }

    public static void main(String argv[]) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt();
        for (int t = 0; t < T; t++) {
            int n = scanner.nextInt();
            Node root = new Node((char) 0);
            int ans = 0;
            for (int i = 0; i < n; i++) {
                String s = scanner.next();
                int type = root.type(s, 0);
                ans += type;
                root.insert(s, 0);
            }
            System.out.println("Case #" + (t + 1) + ": " + ans);
        }
    }
}
