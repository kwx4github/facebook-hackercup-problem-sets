#include <fstream>
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

#define MAXN 1000000

vector<string> pref[MAXN + 5];

ifstream fin("autocomplete.txt");
ofstream fout("1-2.out");

void solve()
{
	int n; fin >> n;
	int ans = 0;
	
	for(int i = 0; i < n; ++i) {
		//cout << i << endl;
		string s;
		fin >> s;
		
		int done = 0;
		
		string k = "";
		for(int j = 0; j < s.size(); ++j) {
			k += s[j];
			
			bool b = find(pref[j].begin(), pref[j].end(), k) == pref[j].end();
			if(done == 0 && b) {
				done = 1;
				ans += (j + 1);
				pref[j].push_back(k);
			} else if(b) {
				pref[j].push_back(k);
			}
			
			if(i == n-1) pref[j].clear();
		}
		
		if(done == 0) ans += s.size();
	}
	fout << ans << endl;
}

int main()
{
	ios_base::sync_with_stdio(0);
	int t; fin >> t;
	
	for(int i = 0; i < t; ++i) {
		fout << "Case #" << i+1 << ": ";
		solve();
		
		for(int j = 0; j < 1000000; ++j) pref[j].clear();
	}
}
