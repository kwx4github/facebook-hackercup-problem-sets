#include <stdio.h>
#include <vector>
#include <cstring>
#include <cmath>
using namespace std;

struct XD{
	int c[30];

	XD(){
		memset(c, 0, sizeof(c));
	}
};

vector<XD> trie;
char s[1000006];

int build()
{
	int len = strlen(s);

	int cc = len;
	int ptr = 0;
	for (int i = 0; i < len; i++ ){
		int ch = s[i] - 'a';
		if (trie[ptr].c[ch] == 0){
			cc = min(cc, i+1);
			trie[ptr].c[ch] = int(trie.size());
			trie.push_back(XD());
		}
		ptr = trie[ptr].c[ch];
	}

	return cc;
}

int main()
{
	int T;
	int N;
	int cnt;

	scanf(" %d",&T);

	for(int cas = 1; cas <= T; cas++ ){
		scanf(" %d",&N);

		cnt = 0;
		trie.resize(1);
		trie[0] = XD();
		for(int i = 0; i < N; i++ ){
			scanf(" %s", s);
			cnt += build();
		}

		printf("Case #%d: %d\n",cas, cnt);
	}


	return 0;
}