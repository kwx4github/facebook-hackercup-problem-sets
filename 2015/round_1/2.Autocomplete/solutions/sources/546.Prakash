#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <limits>
#include <cstring>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;


struct node{
	vector<node*> childs;
	node(){
		for(int i=0;i<26;i++)
			childs.push_back(NULL);	
	}
};

node *trie;

int insert(string &s){
	int l = s.length(),i=0;

	bool found = false;
	int ans;

	for(node *n = trie;i<l;i++){
		if(n->childs[s[i]-'a']==NULL){
			if(!found){
				found = true;
				ans = i+1;
			}
			n->childs[s[i]-'a'] = new node();
		}
		n = n->childs[s[i]-'a'];
	}
	if(found)
		return ans;
	else return l;
}

void erase(node* trie){
	if(trie == NULL)
		return;
	for(int i=0;i<26;i++)
		erase(trie->childs[i]);
	(trie->childs).clear();
	delete trie;
}

int main(){
	ios::sync_with_stdio(false);
	freopen("input2.txt","r",stdin);
	freopen("output.txt","w",stdout);

	int t,n,c=1,i;
	string s;
	cin>>t;
	while(t--){
		cout<<"Case #"<<c++<<": ";
		trie = new node();
		int ans = 0;
		cin>>n;
		for(i=0;i<n;i++){
			cin>>s;
			ans+=insert(s);
		}
		cout<<ans<<endl;
		//erase(trie);
	}
	return 0;
}