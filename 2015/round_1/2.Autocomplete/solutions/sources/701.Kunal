#include<bits/stdc++.h>
using namespace std;


struct node
 {
 	bool end;
 	int count;
 	node * next[26];
 	
 	node()
 	 {
 	 	end=false;
 	 	count=0;
 	 	for(int i=0;i<26;i++)
 	 	  {
 	 	  next[i]=NULL;
 	     }
 	 }
 };
 
 node * root;
 
 void insert_trie(string s)
  {
  	node * curr=root;
  	int l=s.size();
  	int id;
	for(int i=0;i<l;i++)
	 {
	 	id=s[i]-'a';
	 	if(curr->next[id]==NULL)
	 	 {curr->next[id]=new node();
	 	 }
	 
	 	curr=curr->next[id];
	 	curr->count++;
	 }
	 curr->end=true;
  }

void delete_trie(node * curr)
 {
 	for(int i=0;i<26;i++)
 	 {
 	 	if(curr->next[i])
 	 	  delete_trie(curr->next[i]);
 	 }
 	 delete(curr);
 }

int search_trie(string s)
 {
 	node * curr=root;
 	int l=s.size();
	int id;
 	for(int i=0;i<l;i++)
 	 {
 	 	id=s[i]-'a';
 	 	curr=curr->next[id];
 	 	if(curr->count==1)
 	 	  return i+1;
 	 }
 	return l;
 }

int main()
 {
 	// freopen("autocomplete.txt","r",stdin);
    
      //freopen("out.txt","w",stdout);
   int t;
   cin>>t;
   for(int te=1;te<=t;te++)
	{
		
		int count;
 		cin>>count;
 		root=new node();
		string str;
 		long long ans=0;
 		while(count--)
 	 	 {
 	 		cin>>str;
 	 		insert_trie(str);
 	 		ans+=search_trie(str);
 	 	//	cout<<str<<" "<<ans<<endl;
 	 	 }
		
		cout<<"Case #"<<te<<": ";
		cout<<ans<<endl;
	
	}
 	
 }
