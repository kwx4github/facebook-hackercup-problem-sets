#include <algorithm>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <set>
#include <vector>
#define FOR(i,a,b) for(i=a; i<=b; i++)
#define FOR2(i,n) FOR(i,0,n-1)
#define TFOR(i,a,b) for(i=a; i>=b; i--)
#define f first
#define s second
#define pb push_back
#define all(x) x.begin(),x.end()
#define BASE 1009ll
#define MAXN 1000005
using namespace std;
typedef pair < int , int > pii;
int read(){ int res(0),sign(1); char c;
	while(1){ c = getchar(); if('0' <= c && c <= '9') { res = c - '0'; break; } else if(c == '-') { sign = -1; break; } }
	while(1){ c = getchar(); if('0' <= c && c <= '9') res = res*10 + c - '0'; else break; }
	return res * sign;
}
set < long long > st[MAXN];
int test;
long long H[MAXN];
bool control(int x)
{
	return st[x].find(H[x-1]) != st[x].end();
}
int BS(int bas,int son)
{
	if( bas == son ) return bas;
	if( bas + 1 == son ) return control(son) ? son : bas;
	int orta = ( bas + son ) >> 1;
	return control(orta) ? BS(orta,son) : BS(bas,orta-1);
}
void solve()
{
	string str;
	int N,i,j,res(0);
	FOR(i,1,100000) st[i].clear();
	N = read();
	FOR(i,1,N)
	{
		cin >> str;
		H[0] = str[0];
		for(j = 1; j < str.size(); j++)
			H[j] = H[j-1] * BASE + str[j];
		
		res += min( (int) str.size() , BS(0,str.size()) + 1 );
		
		for(j = 0 ; j < str.size(); j++)
			st[j+1].insert(H[j]);
	}
	printf("Case #%d: %d\n" , ++test , res );
}
int main()
{
	freopen("autocomplete.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int T = read();
	while(T--) solve();
	return 0;
}
