#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <vector>
#include <cmath>

using namespace std;

const int maxn = 1000005;
const int INF = 1e9;
const int kind = 26;

typedef struct tire
{
    tire *next[kind];
}tire;
tire memory[maxn];
int tot, n;
char word[maxn];
tire *create()
{
    tire *p;
    p = &memory[tot++];
    for(int i = 0; i < kind; i++) p->next[i] = NULL;
    return p;
}
int insert(tire *p, char *s)
{
    int cnt = 0, flag = 0;
    while(*s)
    {
        int k = *s++ - 'a';
        if(!flag) cnt++;
        if(!p->next[k])
        {
            flag = 1;
            p->next[k] = create();
        }
        p = p->next[k];
    }
    return cnt;
}
int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
    int t, ca = 0;
    scanf("%d", &t);
    while(t--)
    {
        scanf("%d", &n);
        tot = 0;
        tire *root = create();
        int ans = 0;
        for(int i = 0; i < n; i++)
        {
            scanf("%s", word);
            ans += insert(root, word);
        }
        printf("Case #%d: %d\n", ++ca, ans);
    }
    return 0;
}

