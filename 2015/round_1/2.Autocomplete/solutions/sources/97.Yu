package fhc2015a1.b;

import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.Scanner;
import java.util.TreeSet;

public class Main {

	static final String FILENAME = "autocomplete.txt";
	static final boolean LOCAL = false;

	Scanner sc;

	void solve() {
		int n = sc.nextInt();

		long res = 0;
		TreeSet<String> dict = new TreeSet<String>();
		for (int i = 0; i < n; i++) {
			String word = sc.next();
			String lower = dict.lower(word);
			String upper = dict.ceiling(word);
			res += Math.max(f1(lower, word), f2(upper, word));
			dict.add(word);
		}
		System.out.println(res);
	}

	int f1(String a, String b) {
		if (a == null) return 1;
		for (int i = 0; i < a.length() && i < b.length(); i++) {
			if (a.charAt(i) != b.charAt(i)) {
				return i + 1;
			}
		}
		return a.length() + 1;
	}
	int f2(String a, String b) {
		if (a == null) return 1;
		for (int i = 0; i < a.length() && i < b.length(); i++) {
			if (a.charAt(i) != b.charAt(i)) {
				return i + 1;
			}
		}
		return b.length();
	}

	void run() throws Exception {
		String pkg = new Object(){}.getClass().getEnclosingClass().getPackage().getName().replace('.', '/');
		String dir = "src/" + pkg;
		if (LOCAL) {
			sc = new Scanner(System.in);
		} else {
			sc = new Scanner(new File("/tmp/fhc/" + FILENAME));
			System.setOut(new PrintStream(new FileOutputStream(dir + "/" + FILENAME + ".res")));
		}
		int T = sc.nextInt();

		long start = System.currentTimeMillis();
		for (int t = 1; t <= T; t++) {
			System.out.printf("Case #%d: ", t);
			solve();
			System.out.flush();
			System.err.flush();
		}
		long end = System.currentTimeMillis();
		tr(end - start, "ms");
	}

	public static void tr(Object... o) {
		System.err.println(Arrays.deepToString(o));
	}
	public static void main(String[] args) throws Exception {
		new Main().run();
	}
}
