#include <bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define each(it,n) for(__typeof((n).begin()) it=(n).begin();it!=(n).end();++it)

using namespace std;

typedef long long ll;

const ll MOD = 1000000007;

struct Trie {
    int value;
    Trie *next[0x100];
    int count[0x100];
    Trie() { fill(next, next+0x100, (Trie*)0); fill(count, count+0x100, 0); }
    ~Trie() {
        for (int i = 0; i < 0x100; i++) {
            delete next[i];
        }
    }
};

Trie* find(string t, Trie *r) {
    for (int i = 0; i < (int)t.size(); i++) {
        char c = t[i];
        if (!r->next[c]) r->next[c] = new Trie;
        r->count[c]++;
        r = r->next[c];
    }
    return r;
}

int calc(string t, Trie *r) {
    int ans = 0;
    for (int i = 0; i < (int)t.size(); i++) {
        ans++;
        char c = t[i];
        if (r->count[c] <= 1) break;
        r = r->next[c];
        int count = 0;
    }
    return ans;
}

void solve() {
    int N;
    cin >> N;
    Trie t;
    int ans = 0;
    rep(i, N) {
        string s;
        cin >> s;
        find(s, &t);
        ans += calc(s, &t);
    }
    cout << ans << endl;
}

int main() {
    ios::sync_with_stdio(false);
    int N;
    cin >> N;

    rep(i, N) {
        cout << "Case #" << i + 1 << ": ";
        solve();
    }
    return 0;
}
