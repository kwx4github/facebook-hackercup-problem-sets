#include <cstdio>
#include <cstring>
#include <string>

using namespace std;

struct Node {
	Node *child[26];
	Node() {
		memset(child, 0, sizeof(child));
	}
};

int n;

inline long long insert(Node *x, char *str) {
	int len = (int)strlen(str);
	
	int ret = len;
	for (int i = 0; i < len; ++i) {
		int c = str[i] - 'a';
		if (!x->child[c]) {
			x->child[c] = new Node();
			ret = min(ret, i + 1);
		}
		x = x->child[c];
	}
	return ret;
}

inline void solve() {
	Node *root = new Node();
	
	scanf("%d", &n);
	long long ret = 0;
	for (int i = 0; i < n; ++i) {
		static char buffer[1111111];
		scanf("%s", buffer);
		ret += insert(root, buffer);
	}
	printf("%lld\n", ret);
}

int main() {
	int tests;
	scanf("%d", &tests);
	for (int i = 1; i <= tests; ++i) {
		printf("Case #%d: ", i);
		solve();
	}
	return 0;
}