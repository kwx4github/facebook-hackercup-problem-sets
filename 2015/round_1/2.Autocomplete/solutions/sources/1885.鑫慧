#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>

using namespace std;

struct NODE
{
    int ch[30];
    int cnt;
}trie[1000010];
const int root = 0;
int ed;
int T,n;
char str[1000020];

int addStr()
{
    int len = strlen(str);
    int p = root;
    int ret = 0;
    for (int i = 0; i < len; ++i)
    {
        if (trie[p].ch[str[i] - 'a'] == -1)
        {
            trie[p].ch[str[i] - 'a'] = ++ed;
            memset(trie[ed].ch, -1, sizeof(trie[ed]));
            trie[ed].cnt = 0;
        }
        p = trie[p].ch[str[i] - 'a'];
//cout<<p<<"  "<<trie[p].cnt<<endl;
        if (trie[p].cnt != 0)
            ret++;
        trie[p].cnt++;
    }
    //cout<<str<<"  "<<ret+1<<endl;
    return min(ret + 1, len);
}

int main()
{
    freopen("autocomplete.txt","r", stdin);
    freopen("autocomplete_out.txt", "w", stdout);
    scanf("%d", &T);
    for (int ca = 1; ca <= T; ++ca)
    {
        scanf("%d", &n);
        ed = 0;
        trie[root].cnt = 0;
        memset(trie[root].ch, -1, sizeof(trie[root].ch));
        int ans = 0;
        for (int i = 0; i < n; ++i)
        {
            scanf("%s", str);
            ans += addStr();
        }
        printf("Case #%d: %d\n", ca, ans);
    }
    return 0;
}
