#include <iostream>
#include <string>

#include <set>
#include <map>
#include <queue>
#include <stack>

#include <algorithm>
#include <string.h>
using namespace std;
typedef long long ill;

const int INF = 1e9+1;

struct vertex{
    map<char, vertex*> next;
};


vertex *ROOT;


int add(string str, vertex* root){
    int nstep = 0;
    int i = 0;
    while ( i < str.length() ){
        nstep++;
        if ( root->next.count( str[i] ) )
            root = root->next[ str[i++] ]; 
        else{
            while (i < str.length()) {
                root->next[ str[i] ] = new vertex;
                root = root->next[ str[i++] ];
            }
        }
    }
    return nstep;
}

int main() {
    int nt;
    cin >> nt;
    ROOT = new vertex;
    for ( int i = 0; i < nt; i++ ){
        string str;
        int n, res = 0;
        ROOT->next.clear();
        cin >> n;
        for ( int j = 0; j < n; j++){
            cin >> str;
            res += add(str, ROOT);;
        }
        cout << "Case #" << i +1 << ": " << res << endl;
    }
    return 0;
}