#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <iostream>
#include <utility>
#include <sstream>
#include <cmath>
#include <ctime>
#include <iostream>

#define clr(a) memset(a, 0, sizeof(a))
#define fill(a, b) memset(a, b, sizeof(a))

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef std::pair<int,int> pii;

#ifdef DBG1
    #define dbg(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)
#else
    #define dbg(...)
#endif

const int MAX = int(1e6) + 1000;
char s[MAX];

struct Node {
    Node() {
        memset(next, 0xFF, sizeof(next));
    }

    int next[26];
};

void solve() {
    vector <Node> trie;
    trie.push_back(Node());
    const int root = 0;

    int n;
    scanf("%d", &n);
    int ans = 0;
    for (int i = 0; i < n; ++i) {
        scanf("%s", s);
        int j = 0, t = root;
        while (s[j] && trie[t].next[s[j] - 'a'] != -1) {
            t = trie[t].next[s[j] - 'a'];
            ++j;
        }
        ans += s[j] ? j + 1 : j;
        while (s[j]) {
            trie[t].next[s[j] - 'a'] = int(trie.size());
            t = int(trie.size());
            trie.push_back(Node());
            ++j;
        }
    }
    printf("%d\n", ans);
}

int main()
{
#ifdef DBG1
    freopen(".in", "r", stdin);
    freopen(".out", "w", stdout);
    freopen(".err", "w", stderr);
#endif

    int tt;
    scanf("%d", &tt);
    for (int ii = 1; ii <= tt; ++ii) {
        printf("Case #%d: ", ii);
        solve();
    }

    return 0;
}
