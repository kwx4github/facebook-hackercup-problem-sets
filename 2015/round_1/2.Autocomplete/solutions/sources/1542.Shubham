/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<cstdio>
#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<climits>
#include<string>
#include<map>
#include<stack>
#include<queue>
#include<set>
#include<algorithm>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 1000000007
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef pair<int,int> PII;
struct node
{
	int ele;
	struct node * nxt[26];
	node()
	{
		ele=0;
		memset(nxt,0,sizeof(nxt));
	}
	node * getNode(char c)
	{
		int val=c-'a';
		if(nxt[val]==NULL)
			nxt[val]=new node();
		return nxt[val];
	}
};

string s;

class Trie
{
	public:
	node * root;
	Trie()
	{
		root=new node();
	}
	void insert(string s)
	{
		node * cur=root;
		int i,l=s.size();
		for(i=0;i<l;i++)
		{
			cur=cur->getNode(s[i]);
			cur->ele++;
		}
	}
	int findString(string s)
	{
		node *cur=root;
		int i,l=s.size();
		for(i=0;i<l;i++)
		{
			cur=cur->getNode(s[i]);
			if(cur->ele==1)
				return i+1;
		}
		return l;
	}
};

int main()
{
	int t,test;
	si(test);
	for(t=1;t<=test;t++)
	{
		Trie tr;
		int n,i,ans=0;
		si(n);
		REP(i,n)
		{
			cin>>s;
			tr.insert(s);
			ans+=tr.findString(s);
		}
		printf("Case %d: %d\n",t,ans);
	}
	return 0;
}
