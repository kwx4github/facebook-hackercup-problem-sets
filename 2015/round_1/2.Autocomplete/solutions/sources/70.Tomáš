#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <queue>
#include <cstring>
#include <string>

#define vi vector<int>
#define vpii vector< pair<int,int> >
#define pii pair<int,int>
#define mp(x,y) make_pair(x,y)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define sqr(x) ((x)*(x))
#define FOR(i,n) for (ll i = 0; i < ll(n); i++)
#define FOR1(i,n) for (ll i = 1; i < ll(n); i++)
#define READ(v,n) { FOR(i,n){int x;cin>>x;v.pb(x);} }
#define FREAD(v,n) { FOR(i,n){int x;in>>x;v.pb(x);} }
#define WRITE(v) "";FOR(i,sz(v))cout<<v[i]<<" ";cout
#define FWRITE(v) "";FOR(i,sz(v))out<<v[i]<<" ";out
#define gmin(a,b) { if (b < a) a = b; }
#define gmax(a,b) { if (b > a) a = b; }
#define pb push_back
#define ppb pop_back
typedef long long ll;
typedef unsigned long long ull;
using namespace std;
int num = 0;

struct Node{
public:
  map<char, Node*> m;
};

vector <Node*> nodes;


int add(string s, Node* base){
  int n = s.length();
  Node* node = base;
  FOR(i,n){
    if(node->m.find(s[i])==node->m.end()){
      int r = i+1;
      for(;i<n;i++){
        Node* nn = new Node();
        nodes.pb(nn);
        node->m[s[i]] = nn;
        node = nn;
      }
      return r;          
    }else{
      node = node->m[s[i]];
    }
  }
  return n;
}

void destroy(){
  FOR(i,sz(nodes)){
    delete nodes[i];
  }
  nodes.clear();
}

int main(void){
  int T;
  cin>>T;
  FOR1(t,T+1){
    destroy();
    ll sum =0;
    Node* base = new Node();
    int n;
    cin>>n;
    FOR(i,n){
      string s;
      cin>>s;
      int k = add(s, base);
      sum+=k;
    }
    cout<<"Case #"<<t<<": "<< sum <<endl;    
  }
    
  return 0;
}
