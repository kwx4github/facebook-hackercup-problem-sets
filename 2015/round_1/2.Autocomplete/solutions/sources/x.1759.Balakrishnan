#include <stdio.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#define NUMP 2
#define ll long long
using namespace std;

string W;


set<vector<ll> > all_hashvals;

int main() {
    
    vector<ll> primes(6);
    primes[0]=1000000007;
    primes[1]=1000000009;
    primes[2]=1000000021;
    primes[3]=1000000033;
    primes[4]=1000000087;
    primes[5]=1000000093;
    
    
    int T;
    cin>>T;
    for(int t=1;t<=T;t++) {
        int N;
        cin>>N;
        
        set<vector<ll> > empty;
        all_hashvals.swap(empty);
        ll answer = 0;
        for(int j=0;j<N;j++) {
            cin>>W;
            
            vector<ll> hash_vals(NUMP,0);
            
            
            ll num_presses = -1;
            
            for(int k=0;k<W.size();k++) {
                for(int pid=0;pid<NUMP;++pid) {
                    ll P = primes[pid];
                    hash_vals[pid] = (hash_vals[pid] * 26+W[k]-'a')%P;
                }
                
                if (all_hashvals.find(hash_vals) == all_hashvals.end()) {
                    if (num_presses == -1) {
                        num_presses = k + 1;
                    }
                }
                
                all_hashvals.insert(hash_vals);
            }
            
            if (num_presses == -1)
            {
                num_presses = (int)W.size();
            }
            
            answer += num_presses;
        }
        
        printf("Case #%d: %lld\n",t,answer);
    }
}