import java.util.*;
class Node{
	char ch;
	HashMap<Character,Node> hm=new HashMap<Character,Node>();
	Node(char ch)
	{
		this.ch=ch;
	}
}

class prefixTree
{
	Node header=null;
	int count=0;
	void add(String word)
	{
		boolean first=true;
		
		if(header==null)
			header=new Node(' ');
		
		int len=word.length();
		Node ptr=header;
		for(int i=0;i < len;i++)
		{
			if(ptr.hm.containsKey(word.charAt(i)))
			{
				ptr=ptr.hm.get(word.charAt(i));
			}else{
				if(first)
				{
					count+=(i+1);
					first=false;
				}
				Node curr=new Node(word.charAt(i));
				ptr.hm.put(word.charAt(i),curr);
				ptr=curr;
			}
		}
		
		if(first) count+=len;
	}
}
public class Autocomplete {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		for(int i=1;i<=t;i++)
		{
			prefixTree obj=new prefixTree();
			int n=sc.nextInt();
			while(n-- > 0)
			{
				String word=sc.next();
				obj.add(word);
			}
			
			System.out.println("Case #"+i+" : "+ obj.count);
		}

	}

}
