#include <iostream>
#include <map>
#include <string>
#include <algorithm>
#include <fstream>

using namespace std;

int N;

class Trie
{
public:
    Trie* next[26];
    Trie()
    {
        for(int i=0; i<26; ++i)
            next[i]=NULL;
    }
};

void insert(Trie* r, const string& word)
{
    Trie* t = r;
    for(unsigned int i=0; i<word.size(); i++)
    {
        if(t->next[word[i]-'a']==NULL)
           t->next[word[i]-'a'] = new Trie;
        t = t->next[word[i]-'a'];
    }
    //if(t==NULL)
    //       t = new Trie;
}

int check(Trie* r, const string& word)
{
    Trie* t =r;
    unsigned int i=0;
    while(t!=NULL && i<word.length())
    {
        t = t->next[word[i]-'a'];
        i++;
    }
    return i;
}

int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("autocomplete_out.txt","w",stdout);
    int T;
    cin >> T;

    string s;
    for(int t=0; t<T; t++)
    {

        cin >> N;
        int count=0;
        Trie* trie = new Trie;
        for(int i=0; i<N; i++)
        {
            cin >> s;
            count += check(trie,s);
            insert(trie,s);
        }

        cout << "Case #" << t+1 << ": " << count << endl;
    }
    return 0;
}
