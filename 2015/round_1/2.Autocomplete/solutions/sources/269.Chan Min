#include <cstdio>
#include <memory.h>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

struct node {
	int p[26];
	int cnt[26];
	node() {
		memset(p,-1,sizeof(p));
		memset(cnt,0,sizeof(cnt));
	}
};

char word[1048576];
int main(){
	int T;
	scanf("%d",&T);
	for (int testcase = 1; testcase <= T; testcase++) {
		int n;
		scanf("%d",&n);
		vector<node> trie;
		trie.emplace_back();
		int ans = 0;
		for (int i = 0; i < n; i++) {
			scanf("%s",word);
			int p = 0;
			int cur = -1, len = 0;
			for (int j = 0; word[j] != '\0'; j++) {
				int ind = word[j]-'a';
				len++;
				if (++trie[p].cnt[ind] == 1 && cur < 0) cur = j+1;
				if (trie[p].p[ind] == -1) {
					int np = trie.size();
					trie.emplace_back();
					p = trie[p].p[ind] = np;
				} else {
					p = trie[p].p[ind];
				}
			}
			if (cur == -1) ans += len;
			else ans += cur;
		}
		printf("Case #%d: %d\n", testcase, ans);
	}
	return 0;
}