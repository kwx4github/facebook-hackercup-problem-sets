#include<cstdio>
#include<algorithm>
#include<iostream>
#include<vector>
using namespace std;
int t;
struct tree {
  tree *children[26];
  tree(){memset(children,0,sizeof(children));}
  ~tree(){
    for(int i=0;i<26;i++)if(children[i]){
      delete children[i];
    }
  }
};
int main(){
  cin>>t;
  for(int T=1;T<=t;T++){
    tree *root=new tree();
    int N,ans=0;
    cin>>N;
    string s;
    if(N==1){
      cin>>s;
      ans=s.size();
    }else{
    for(int i=1;i<=N;i++){
      cin>>s;
      int j=0;
      tree *pos=root;
      while(j<s.size()&&pos->children[s[j]-'a']){
        pos=pos->children[s[j]-'a'];
        ++j;
      }
      ans+=j==s.size()?s.size():j+1;
      while(j<s.size()){
        pos->children[s[j]-'a']=new tree();
        pos=pos->children[s[j]-'a'];
        ++j;
      }
    }
    }
    delete root;
    cout<<"Case #"<<T<<": "<<ans<<endl;
  }
}
