#include <iostream>
#include <cstring>
using namespace std;
typedef struct _trie{
	struct _trie *t[26];
	char end;
}trie;


void init_trie(trie *t)
{
	memset(t,0,sizeof(trie));
}

void insertTrie(trie *root,string text)
{
	int index,alphabet;
	trie *next,*t;

	t = root;

	for(index=0;index<text.length();index++)
	{
		alphabet = text[index] - 'a';
		if(t->t[alphabet] == NULL)
		{
			next = new trie;
			init_trie(next);
			t->t[alphabet] = next;
			t = next;
		}
		else
		{
			t = t->t[alphabet];
		}
	}
	//t->end = 1;

}

void deleteTrie(trie *t)
{
	for(int counter=0;counter<26;counter++)
		if(t->t[counter] != NULL) {
			deleteTrie(t->t[counter]);
			delete t->t[counter];
			t->t[counter] = NULL;
		}
}

int main()
{
	int T,t,N;
	int res;
	string text; 
	trie root,*search;
	int stroffset,i;

	init_trie(&root);

	cin>>T;
	for(t=0;t<T;t++) {
		cin>>N;
		res =0;
		for(int counter=0;counter<N;counter++) {
			cin>>text;	
			search = &root;
			for(i = 0;i<text.length();++i)
			{
				if(search->t[text[i] - 'a'] != NULL)
				{
					search = search->t[text[i] - 'a'];
				}
				else
				{
					break;
				}

			}
			if(i ==  text.length()) {
				res+=i;
				//cout<<text<<" "<<i<<endl;
			}
			else {
				res+= i + 1;
				//cout<<text<<" "<<i+1<<endl;
			}
			/*Insert the word in Trie*/
			if( counter != N-1)
				insertTrie(&root,text);
		}
		cout<<"Case #"<<t+1<<": "<<res<<endl;
		deleteTrie(&root);
		init_trie(&root);
	}


	return 0;
}
