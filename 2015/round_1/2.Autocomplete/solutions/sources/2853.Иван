#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
using namespace std;

struct bor
{
    struct bor *go[26];
    int cnt;
    bor()
    {
        cnt = 0;
        for(int i = 0; i < 26; ++i)
            go[i] = NULL;
    }
};

void del_bor(bor *root)
{
    for(int i = 0; i < 26; ++i)
        if(root -> go[i])
            del_bor(root -> go[i]);
    delete root;
}

void bor_add(bor *root, string &s)
{
    for(int i = 0; i < s.length(); ++i)
    {
        root -> cnt++;
        if(root -> go[s[i] - 'a'] == NULL)
            root -> go[s[i] - 'a'] = new bor();
        root = root -> go[s[i] - 'a'];
    }
    if(root == NULL)
        root = new bor();
    root -> cnt++;
}

int get_ans(bor *root, string &s)
{
    int ans = 0;
    for(int i = 0; i < s.length(); ++i)
    {
        if(root -> cnt == 1)
            break;
        root = root -> go[s[i] - 'a'];
        ++ans;
    }
    return max(1, ans);
}

int main()
{
    ifstream cin("input.txt");
    ofstream cout("output.txt");
    int t;
    cin >> t;
    bor *root = new bor();
    for(int tt = 0; tt < t; ++tt)
    {
        //del_bor(root);
        root = new bor();
        int n, ans = 0;
        string s;
        cin >> n;
        for(int i = 0; i < n; ++i)
        {
            cin >> s;
            bor_add(root, s);
            ans += get_ans(root, s);
        }
        cout << "Case #" << tt + 1 << ": " << ans << endl;
    }
    return 0;
}
