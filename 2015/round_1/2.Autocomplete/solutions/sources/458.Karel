#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>
#include <string>
#include <climits>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <ctime>
#include <iostream>
#include <sstream>

#define PI 3.14159265358979
#define EPS 1e-9

using namespace std;

#define REP(i, n) for (int i=0; i<n; i++)
#define FOR(i, m, n) for (int i=m; i<=n; i++)
#define ABS(a) (((a)>0)?(a):(-(a)))
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> ii;

struct Trie {
    bool end;
    struct Trie *next[26];
};
void trie_free(Trie *t) {
    if (t==NULL) return;
    REP(i, 26) trie_free(t->next[i]);
    delete t;
}
Trie* create() {
    Trie *t = new Trie;
    REP(i, 26) t->next[i] = NULL;
    t->end = false;
    return t;
}
int find(Trie *t, char *s) {
	int ans = 0;
    if (t==NULL) return false;
    while (*s!='\0') {
		char c = *s;
        if (t->next[c-'a']) {
            t = t->next[c-'a'];
        }
        else return ans+1;
        ans++;
        s++;
    }
    if (t->end) return -1;
    return ans;
}
void add(Trie *t, char *s) {
	while(*s!='\0') {
		char c = *s;
		if (t->next[c-'a']==NULL)
			t->next[c-'a'] = create();
		t = t->next[c-'a'];
		s++;
	}
	t->end = true;
}

#define MAXS 1111111

char s[MAXS];
Trie *trie;

void solve() {
	trie = create();
	int n; scanf("%d", &n);
	int ans = 0;
	REP(i, n) {
		scanf(" %s", s);
		
			ans += find(trie, s);
			add(trie, s);
		
	}
	printf("%d\n", ans);
	//trie_free(trie);
}

int main() {
	int t; scanf("%d", &t);
	REP(i, t) {
		printf("Case #%d: ", i+1);
		solve();
	}
	return 0;
}
