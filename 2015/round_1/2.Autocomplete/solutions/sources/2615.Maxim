#include <iostream>
#include <fstream>
#include <string>
#include <set>

using namespace std;

int diff(const string &s, const string &t) {
    int i;
    for (i = 0; i < s.size() && i < t.size() && s[i] == t[i]; ++i) {
    }
    return min(i + 1, (int)t.size());
}

void solve() {
    int n, i;
    cin >> n;
    string s;
    getline(cin, s);
    set<string> S;
    set<string>::iterator it, nextIt, prevIt;
    int addL, addR;
    long long ans = 0;
    for (i = 0; i < n; ++i) {
        getline(cin, s);
        S.insert(s);
        it = S.find(s);
        if (it == S.begin())
            addL = 1;
        else {
            prevIt = --it;
            it++;
            addL = diff(*prevIt, *it);
        }
        if (it == --S.end())
            addR = 1;
        else {
            nextIt = ++it;
            it--;
            addR = diff(*nextIt, *it);
        }

        ans += (long long)max(addL, addR);
    }
    cout << ans;
}

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    
    int _T, T;
    cin >> _T;
    for (T = 1; T <= _T; ++T) {
        cout << "Case #" << T << ": ";
        solve();
        cout << "\n";
    }
    return 0;
}