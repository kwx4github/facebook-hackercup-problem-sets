/** author : ayush sharma **/
#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<cstring>
#include<ctime>

#include<algorithm>
#include<string>
#include<sstream>
#include<vector>
#include<queue>
#include<set>
#include<map>
#include<stack>

#define FOR(i,a,b) for(int i=a; i<b; i++)
#define FORr(i,a,b) for(int i=a ; i>=b; i--)
#define pb push_back
#define mp make_pair
#define ub upper_bound
#define lb lower_bound
#define si1(n) scanf("%d",&n)
#define si2(n1, n2) scanf("%d%d",&n1,&n2)
#define si3(n1,n2,n3) scanf("%d%d%d",&n1, &n2, &n3)
#define si4(n1,n2,n3,n4) scanf("%d%d%d%d",&n1, &n2, &n3, &n4)
#define ff first
#define ss second
#define READ(x) freopen(x,"r",stdin)
#define WRITE(x) freopen(x,"w",stdout)
#define show1(a) cout<<a<<"\n"
#define show2(a, b) cout<<a<<"   "<<b<<"\n"
#define show3(a, b, c) cout<<a<<"   "<<b<<"    "<<c<<"\n"
#define show4(a, b, c,d) cout<<a<<"   "<<b<<"    "<<c<<"   "<<d<<"\n"

using namespace std;
typedef long long LL;
typedef pair <int,int> pii;
typedef pair <pii, int> piii;
typedef pair<string,int> psi;
typedef vector<int> vi;
typedef unsigned long long ull;
const int INFI = 1<<29;
const int sz = 1000005;

struct Node{
    int next[26];
    Node(){
        FOR(i,0,26) next[i] = -1;
    }
    void clean(){
        FOR(i,0,26) next[i] = -1;
    }
};

Node Trie[sz];
int trieEnd;
char w[sz];

void cleanTrie(){
    FOR(i,0,trieEnd+1){
        Trie[i].clean();
    }
    trieEnd = 1;
}

int addWord(){
    int i = 0, maxPrefix = -1;
    int cur = 0;
    int pre = 0;
    while(w[i] != '\0'){
        int alpha = (int)(w[i]-'a');
        if(Trie[cur].next[alpha] == -1 ){
            if(maxPrefix == -1) maxPrefix = pre + 1;
            Trie[cur].next[alpha] = trieEnd++;
        }
        pre++;
        cur = Trie[cur].next[alpha];
        i++;
    }
    if(maxPrefix == -1) maxPrefix = pre;
    return maxPrefix;
}



int main(){
    clock_t t1,t2;
    t1=clock();

    READ("tcAutocomplete.txt");
    WRITE("out.txt");
    int test, tc = 1; si1(test);
    while(test--){
        int N; si1(N);
        trieEnd = 1;
        LL sum = 0;
        FOR(i,0,N){
            scanf("%s", w);
            int ret = addWord();
            //show2("ret", ret);
            sum += (LL)ret;
        }
        printf("Case #%d: %lld\n",tc++,sum);
        cleanTrie();
    }

    t2=clock();
    float diff ((float)t2-(float)t1);
//    cout<<diff/CLOCKS_PER_SEC<<endl;
//    system ("pause");
    return 0;
}
