#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define INF (0x3f3f3f3f)

#define SZ(x) ((int)((x).size()))
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int (i)=0;(i)<(n);++(i))

typedef long long LL;
typedef pair<int, int> PII; typedef pair<PII, int> PII2;

class TrieNode {
public:
    TrieNode *next[26], *parent;
    int word;
    TrieNode () {
        for (int i = 0; i < 26; i++) {
            next[i] = NULL;
        }
        parent = NULL;
    }

};
typedef TrieNode* TrieNodePtr;

class Trie {
public:
    TrieNodePtr root;
    Trie() { root = new TrieNode(); }
    void insert(string &s, LL &ans) {
        TrieNodePtr cur = root;
        bool toggle = true;
        for (int j = 0; j < (int)s.size(); j++) {
            if (!insert(cur, s[j])) {
                if (toggle)
                    ans++;
            } else {
                if (toggle) {
                    toggle = false;
                    ans++;
                }
            }
        }
    }
    bool insert(TrieNodePtr &cur, char c) {
        bool ret = false;
        if (cur->next[c - 'a'] == NULL) {
            ret = true;
            cur->next[c - 'a'] = new TrieNode();
            cur->next[c - 'a']->parent = cur;
        }
        cur = cur->next[c - 'a'];
        return ret;
    }
};

void solve() {
    Trie tree;
    int N;
    cin >> N;
    string s;
    LL ans = 0;
    REP(i, N) {
        cin >> s;
        tree.insert(s, ans);
    }
    cout << ans << endl;  
}

int main() {
    int test;
    cin >> test;
    REP(t, test) {
        cout << "Case #" << (t + 1) << ": ";
        solve();
    }
    return 0;
}
