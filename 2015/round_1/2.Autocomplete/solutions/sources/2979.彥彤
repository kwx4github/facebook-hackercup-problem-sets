#include <bits/stdc++.h>

using namespace std;

const int maxnode = (1e6+1) * 3;
const int maxn = 100001;
const int maxl = 1e6+2;

struct node
{
    char w;
    int next, right;
}trie[maxnode];

int kase, n, res;
char buf[maxl];
int sz;

void init(int x)
{
	trie[x].next = trie[x].right = -1;
}

void insert()
{
	int u = 0 , v, cnt = 0;
	bool ok = 0;
	for(int i = 0; buf[i]; i++)
	{
		for(v = trie[u].next ; v != -1; v = trie[v].right)
			if(trie[v].w == buf[i]) break;

		if(v == -1)
		{
			v = sz++;
			trie[v].right = trie[u].next;
			trie[v].next = -1;
			trie[v].w = buf[i];
			trie[u].next = v;
			if(!ok){ cnt++; ok = 1;}
		}
		u = v;
		if(!ok) cnt++;
	}
	res += cnt;
}

int main()
{
    freopen("autocomplete.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    scanf("%d", &kase);
    for(int t = 1; t <= kase; t++)
    {
        sz = 1;
        init(0);
        res = 0;
        scanf("%d\n", &n);
        while(n--)
        {
            scanf("%s", buf);
            insert();
        }
        printf("Case #%d: %d\n", t, res);
    }
    return 0;
}
