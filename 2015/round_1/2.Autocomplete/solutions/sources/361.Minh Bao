#include <iostream>
#include <vector>
#include <algorithm>
#include <string>

using namespace std;

const int maxn = 100000 + 10;
struct trie {
	int cnt;
	trie *a[27];
};
trie* root;
int n;
long long res;
int T;
string st;

void buildTrie(trie* &t) {
	t = new trie();
	t->cnt = 0;
	for (int i = 0; i <= 26; i++) {
		t->a[i] = NULL;
	}
}

int main() {
	freopen("autocomplete-3.txt", "r", stdin);
	freopen("AutoComplete.out", "w", stdout);
	scanf("%d", &T);
	for (int nt = 1; nt <= T; nt ++) {
		scanf("%d", &n);
		getline(cin,st);
		buildTrie(root);
		res = 0;
		for (int i = 1; i <= n; i ++) {
			getline(cin,st);
			trie* cur = root;
			bool ok = false;
			for (int j = 0; j < st.length(); j++) {
				if (cur->a[(int)st[j] - 'a'] == NULL) {
					buildTrie(cur->a[(int)st[j] - 'a']);
					if (ok == false) {
						res = res + j + 1;
						//cerr<<j + 1<<endl;
						ok = true;
					}
				}
				cur = cur->a[(int)st[j] - 'a'];
			}
			if (ok == false) res = res + st.length();
			cur->cnt++;
		}
		printf("Case #%d: %lld\n", nt, res);
		//cerr<<endl;
	}
}