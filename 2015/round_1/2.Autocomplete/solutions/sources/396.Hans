#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <memory>

using namespace std;

///1G stack size :)
class Node{
public:
    unique_ptr<Node> children[26];
};

void comp(int tc){
    int n;
    string s;
    cin >> n;
    int res = 0;
    unique_ptr<Node> trie(new Node);
    for(int i=0; i<n; ++i){
        cin >> s;
        Node *cur = trie.get();
        int cnt = 0, curType = 0;
        for(char c : s){
            ++cnt;
            auto &next = cur->children[c-'a'];
            if(!next.get()){
                next.reset(new Node);
                if(!curType)
                    curType = cnt;
            }
            cur = next.get();
        }
        
        if(!curType)
            curType = cnt;
        
        res += curType;
    }
    
    cout << "Case #" << tc << ": " << res << endl;
}

int main(){
    int T;
    cin >> T;
    for(int i=1; i<=T; ++i){
        comp(i);
    }
}