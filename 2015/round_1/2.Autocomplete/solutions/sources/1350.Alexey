#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>

using namespace std;

#ifdef ONLINE_JUDGE
#define OJ 1
#else
#define OJ 0
#endif

#define dd				double
#define ll 				long long
#define pb 				push_back
#define mp 				make_pair
#define X				first
#define Y				second
#define forn( i, n ) 	for( ll i = 0; i < (ll) (n); i ++ )
#define endl 			'\n'

#define TIMESTAMP fprintf(stderr, "Execution time: %.3lf s.\n", (double)clock()/CLOCKS_PER_SEC)

struct __s { __s() {
		//srand( time( NULL ) );
		freopen( "autocomplete.txt", "r", stdin ); freopen( "autocomplete.out", "w", stdout );
		if( OJ ) { ios_base::Init i; cin.sync_with_stdio( 0 ); cin.tie( 0 ); }
	} ~__s() {
		if( !OJ ) TIMESTAMP;
		ll n;
		cin >> n;
	}
} __S;

ll t;
set< ll > v[1111111];

int main( void ) {
    cin.sync_with_stdio( 0 ); cin.tie( 0 );
    cin >> t;
    forn( _, t ) {
        ll n;
        cin >> n;
        forn( i, 1111111 )
            v[i].clear();
        ll ans = 0;
        forn( __, n ) {
            string s;
            cin >> s;
            ll h = 0;
            ll res = s.size();
            forn( i, s.size() ) {
                h = ( h * 41 + s[i] - 'a' ) % 1000000033;
                if( v[i].find( h ) == v[i].end() ) {
                    res = min( res, i + 1 );
                    v[i].insert( h );
                }
            }
            ans += res;
        }
        cout << "Case #" << _ + 1 << ": ";
        cout << ans << endl;
    }
	return 0;
}

