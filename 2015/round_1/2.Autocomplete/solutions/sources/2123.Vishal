#include<bits/stdc++.h>
using namespace std;
struct adj
{
	char alpha;
	int words;
	vector <adj *> connections;
}*start[26];
char s[10000000];
int main()
{
	int i,j,test,total;
	cin>>test;
	for(int testcase=1;testcase<=test;testcase++)
	{
		for(i=0;i<26;i++) start[i]=NULL;
		cout<<"Case #"<<testcase<<": ";
		long long possibilities=0;
		cin>>total;
		while(total--)
		{
			cin>>s;
			int len=strlen(s);
			adj *now,*temp;
			if(start[s[0]-'a']==NULL)
			{
				temp=new adj;
				temp->alpha=s[0];
				temp->words=0;
				start[s[0]-'a']=temp;
			}
			now=start[s[0]-'a'];
			now->words++;
			for(i=1;i<len;i++)
			{
				for(j=0;j<now->connections.size();j++) if(now->connections[j]->alpha==s[i]) break;
				if(j==now->connections.size())
				{
					temp=new adj;
					temp->alpha=s[i];
					temp->words=1;
					now->connections.push_back(temp);
				}
				else now->connections[j]->words++;
				now=now->connections[j];
			}
			long long count=0;
			//searching
			now=start[s[0]-'a'];
			count++;
			//cout<<now->alpha;
			for(i=1;i<len;i++)
			{
				if(now->words==1) break;
				j=0;
				while(now->connections[j]->alpha!=s[i]) j++;
				now=now->connections[j];
				count++;
				//cout<<now->alpha;
			}
			//cout<<endl;
			possibilities+=count;
		}
		cout<<possibilities<<endl;
	}
}
