
// Author : Manish Sharma
// 
// Prefix Tree / Trie of alphabets
// Codeforces Contest# 260 Div 2
// http://codeforces.com/contest/456/problem/D

#include<bits/stdc++.h>

#define s(a) scanf("%d",&a)
#define ss(a) scanf("%s",a)

#define MP           make_pair
#define PB           push_back
#define REP(i, n)    for(int i = 0; i < n; i++)
#define INC(i, a, b) for(int i = a; i <= b; i++)
#define DEC(i, a, b) for(int i = a; i >= b; i--)
#define CLEAR(a)     memset(a, 0, sizeof a)
using namespace std;

typedef long long          LL;
typedef unsigned long long ULL;
typedef vector<int>        VI;
typedef pair<int, int>     II;
typedef vector<II>         VII;

char inp[1000005];
int trie[2000005][26],size=0;

inline int add(int node,char c,int &st,int ind)
{
    c = c-'a';
    if(trie[node][c])
          return trie[node][c];
    st = min(ind,st);
    return (trie[node][c] = ++size);
}

int main()
{
      int t,n,l,u,st;
      s(t);
      REP(tt,t)
      {
            printf("Case #%d: ",tt+1);
            CLEAR(trie);
            size = 0;
            s(n);
            LL ans = 0;
            REP(i,n)
            {
                  ss(inp);
                  l = strlen(inp);
                  u=0;st=l-1;
                  REP(j,l)
                        u = add(u,inp[j],st,j);
                  ans += (st+1);
            }
            printf("%lld\n",ans);
      }
    return 0;
}
