#include<bits/stdc++.h>
using namespace std ;

#define FOR(i,a,b) for(int i= (int)a; i< (int)b; ++i)
#define REP(i,n) FOR(i,0,n)
#define fill(a, x) memset(a, x, sizeof(a))
#define all(c) c.begin(), c.end()

#define LL long long int 
#define PII pair<int,int> 
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define mod 1000000007

typedef struct node {
   int cnt;
   node *child[27];
} node;

string s;

class Trie {
   node *root[27];

   public :
   Trie() {
      REP(i, 27) {
         root[i] = new node();
         root[i]->cnt = 0;
      }
   }
   ~Trie() {
      REP(i, 27) {
         delete root[i];
      }
   }

   void insert(LL *where) {
      if(s.size() == 0) return;

      int n = s.size();
      node *r = root[s[0] - 'a'];

      REP(cur, n) {
         if(cur == n-1) {
            if(r->cnt == 0) {
               if(*where == -1) *where = cur; 
            }
            r->cnt++;
            if(*where == -1) *where = n-1;
            break;
         }
         int next = s[cur+1] - 'a';
         if(r->cnt == 0) {
            if(*where == -1) *where = cur; 
         }
         r->cnt++;
         if(r->child[next] == NULL) {
            r->child[next] = new node();
            r->child[next]->cnt = 0;
         }
         r = r->child[next];
      }
   }
};

Trie *tr;

int main()
{
   int T; cin>>T;
   int test=1;
   while(T--) {
      int N; cin>>N;
      tr = new Trie();
      LL sol = 0;
      REP(i, N) {
         getchar();
         cin>>s;
         LL where = -1;
         tr->insert(&where);
         sol += (where+1);
      }
      cout << "Case #" << test << ": " << sol << endl;
      test++;
   }
   return 0;
}
