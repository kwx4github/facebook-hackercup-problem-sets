import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.InputStream;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;


public class Autocomplete {
    
    public static class Node {
        HashMap<Character, Node> children = new HashMap<>();
        char character;
        boolean marked = false;
        public Node(char character) {
            this.character = character;
        }
        public Node() {
            this.character = 0;
        }
    }
    
    public static class Trie {
        Node root = new Node();
        
        public void add(String word) {
            addR(root, word);
        }
        
        public void addR(Node curr, String word) {
            if(word.isEmpty()) return;
            char first = word.charAt(0);
            Node next = curr.children.get(first);
            if(next != null) {
                addR(next, word.substring(1));
            } else {
                addAll(curr, word);
            }
        }
        
        public void addAll(Node curr, String word) {
            for(int i=0; i<word.length(); i++) {
                Node next = new Node(word.charAt(i));
                curr.children.put(word.charAt(i), next);
                curr = next;
            }
        }

        public int find(String word) {
            Node curr = root;
            int count = 1;
            for(int i=0; i<word.length(); i++) {
                Node next = curr.children.get(word.charAt(i));
                if(next.marked) {
                    count++;
                }
                next.marked = true;
                curr = next;
            }
            if(count > word.length()) count--;
            return count;
        }
        
    }

    public static void main(String[] args) throws FileNotFoundException {
        Scanner in = new Scanner(new FileReader("/tmp/autocomplete.txt"));
        int T = in.nextInt();
        
        for(int i=0; i<T; i++) {
            int N = in.nextInt();
            
            Trie trie = new Trie();
            LinkedList<String> list = new LinkedList<>();
            for(int j=0; j<N; j++) {
                String line = in.next();
                trie.add(line);
                list.add(line);
            }
            int count = 0;
            for(String word : list) {
                int num = trie.find(word);
                count += num;
            }
            System.out.println("Case #"+(i+1)+": "+count);
        }
    }
}
