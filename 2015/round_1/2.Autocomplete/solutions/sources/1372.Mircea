#include <cstdio>
#include <cstring>

struct nod {
    nod *next[27];
    int cnt;
};

nod *root;
int n;

void insert(char a[], int n) {
    nod *T = root;
    for (int i = 0; i < n; ++i) {
        if (T->next[ a[i] - 'a'] == NULL) {
            T->next[ a[i] - 'a'] = new nod;
            memset (T->next[a[i] - 'a'], 0, sizeof(T));
        }
        T = T->next[a[i] - 'a'];
        T->cnt++;
    }
}

int find(char a[],int n ) {
    nod *T = root;
    for (int i = 0; i < n; ++i) {
        if (T->cnt == 1)
            return i;
       T = T->next[a[i] - 'a'];
    }
    return n;
}

char a[1000003];
int main() {
    int T, t;
    freopen ("b.in", "r", stdin);
    freopen ("b.out", "w", stdout);
    scanf ("%d\n", &T);
    for (t = 1;t <= T; ++t) {
        scanf ("%d\n", &n);
        int i, len;
        root = new  nod;
        memset (root, 0, sizeof(root));

        int res = 0;
        for (i = 1; i <= n; ++i) {
            scanf ("%s\n", &a);
            len = strlen(a);
            insert(a, len);
            res += find(a, len);
            memset (a, 0, sizeof(char) * (len + 1));
        }
        printf ("Case #%d: %d\n", t, res);
    }
}
