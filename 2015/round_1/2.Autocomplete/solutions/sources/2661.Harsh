#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000000007
#define total 500005
#define NIL 0
#define EPS 1e-5
#define INF (1<<28)
typedef unsigned long long int uint64;
typedef long long int int64;


struct node{
	vector<node*>nxt;
	node(){
		nxt.resize(30,NULL);
	}
};
int query(string x,struct node *root){
	int ret=1;
	for(int i=0;i<x.length();i++){
		if(root->nxt[x[i]-'a']==NULL)
		return ret;
		ret++;
		root=root->nxt[x[i]-'a'];
	}
	return min(ret,(int)x.length());
}
void upd(string x,struct node *root){
	for(int i=0;i<x.length();i++){
		if(root->nxt[x[i]-'a']==NULL){
			root->nxt[x[i]-'a']=new node();
		}
		root=root->nxt[x[i]-'a'];
	}
}
int main(){
	int t,n,i;
	string s;
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	cin>>t;
	for(int cas=1;cas<=t;cas++){
		printf("Case #%d: ",cas);
		cin>>n;
		node *root=new node();
		int64 ans=0;
		for(i=0;i<n;i++){
			cin>>s;
			ans+=query(s,root);
			upd(s,root);
		}
		cout<<ans<<endl;
	}
	fclose(stdout);
	return 0;
}
