#include <iostream>
#include <memory>
using namespace std;

struct Node {
    Node() {
        memset(next, 0, sizeof(next));
    }
    ~Node() {
    }

    Node *next[26];
};

int main(void)
{
    int maxtc;
    cin >> maxtc;
    for (int tc = 1; tc <= maxtc; tc++) {
        int nw;
        cin >> nw;
        int sumtyped = 0;
        std::unique_ptr<Node> top(new Node);
        for (int w = 0; w < nw; w++) {
            std::string word;
            cin >> word;
            int len = word.size();
            Node *p = top.get();
            bool acdone = false;
            for (int i = 0; i < len; i++) {
                int l = word[i] - 'a';
                // cerr << word[i];
                if (p->next[l] == 0) {
                    if (!acdone) {
                        // cerr << '*';
                        sumtyped += (i + 1);
                        acdone = true;
                    }
                    p->next[l] = new Node;
                }
                p = p->next[l];
            }
            if (!acdone) {
                sumtyped += len;
            }

            // cerr << endl;
        }
        cout << "Case #" << tc << ": " << sumtyped << endl;
    }
}
