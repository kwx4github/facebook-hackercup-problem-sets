// /fb/HackerCup/2015/AUTOCMPLTE

#include <bits/stdc++.h>

using namespace std;

// Prefix Tree Node
class Node {
public:
	char ch;
	Node *child[26];

	Node(char ch) {
		this->ch = ch;
		for (int i = 0; i < 26; i++)
			child[i] = NULL;
	}
};

int main() {
	int n_tests = 0;
	cin >> n_tests;

	for (int tc = 1; tc <= n_tests; tc++) {
		Node *root = new Node('$');
		long long int n_words = 0, n_letters = 0;
		cin >> n_words;

		while (n_words--) {
			string word;
			cin >> word;

			long long int index = 0;
			Node *ptr = root;

			for (index = 0; index < word.length(); index++) {
				if (ptr->child[word[index] - 'a'] != NULL)
					ptr = ptr->child[word[index] - 'a'];
				else
					break;
			}

			if (index == word.length())
				n_letters += word.length();
			else
				n_letters += index + 1;

			for (index; index < word.length(); index++) {
				ptr->child[word[index] - 'a'] = new Node(word[index]);
				ptr = ptr->child[word[index] - 'a'];
			}
		}
		//Case #1: 11
		cout << "Case #" << tc << ": " << n_letters << endl;
	}
	return 0;
}