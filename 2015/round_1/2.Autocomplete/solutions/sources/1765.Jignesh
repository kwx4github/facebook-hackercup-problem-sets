#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef vector<int> vi;
typedef vector< vector<int> > vvi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<string> vs;

#define rep(i,n) for(int i=0;i<n;i++)
#define forup(i,a,b) for(int i=a;i<=b;i++)
#define fordn(i,a,b) for(int i=a;i>=b;i--)
#define all(x) x.begin(),x.end()
#define permute(x) next_permutation(all(x))
#define pb push_back

#define debug if(printf("JJ "))
#define mod 1000000007 // 1e9 + 7

struct node{
    bool isleaf;
    struct node* children[26];
};

int insert(struct node *root,char s[])
{
    int fir = -1;
    for(int i=0;s[i]!=0;i++){
        int x = s[i]-'a';
        if(root->children[x] == NULL){

            root->children[x] = new node;            
            root->children[x]->isleaf = false;
            for(int ii=0;ii<26;ii++) root->children[x]->children[ii]=NULL;
            
            if(fir == -1) fir = i+1;
        }
        root = root->children[x];
    }
    root->isleaf=true;
    return (fir == -1 ? strlen(s) : fir);
}

void deallocate(struct node *cur)
{
    for (int a=0; a<=25; a++)
    {
        if (cur->children[a] != NULL)
        {
            struct node *tmp = cur->children[a];
            cur->children[a] = NULL;
            deallocate(tmp);
        }
    }
    delete cur;
}

char ss[1000002];

int main(){

    int t,n,ans;
    struct node *trie;
    scanf("%d",&t);
    forup(zz,1,t){
        printf("Case #%d: ",zz);
        ans=0;
        trie = new node;
        scanf("%d",&n);
        while(n--)
        {
            scanf("%s",ss);
            ans += insert(trie,ss);
           // debug cout<<ans<<endl;
        }
        
        printf("%d\n",ans);
        //deallocate(trie);
    }
}
