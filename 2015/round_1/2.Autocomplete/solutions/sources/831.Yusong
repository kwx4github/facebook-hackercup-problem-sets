#include <stdio.h>
#include <string.h>
#include <string>
#include <iostream>

using namespace std;

const int MAXN = 1001000;

struct Node {
    Node *ch[30];

    void init()
    {
        memset(ch, 0, sizeof(ch));
    }
};

Node nodes[MAXN];
int tot;
Node *root;

Node *makeNode()
{
    Node *ret = nodes + tot++;
    ret->init();
    return ret;
}

void init()
{
    tot = 0;
    root = makeNode();
}

int insert(const string &word)
{
    int ret = word.size();
    Node *rt = root;
    for (int i = 0; i < word.size(); i++) {
        int x = word[i] - 'a';
        if (rt->ch[x] == NULL) {
            if (ret == word.size()) {
                ret = i + 1;
            }
            rt->ch[x] = makeNode();
        }
        rt = rt->ch[x];
    }
    return ret;
}

int main()
{
    int T;

    freopen("autocomplete.txt", "r", stdin);
    freopen("B.ans", "w", stdout);

    cin >> T;

    for (int cn = 1; cn <= T; cn++) {
        int n;
        cin >> n;
        init();
        string word;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            cin >> word;
            ans += insert(word);
        }

        cout << "Case #" << cn << ": " << ans << endl;
    }
    
    
    return 0;
}
