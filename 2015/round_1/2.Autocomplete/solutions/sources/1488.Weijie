#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <deque>
#include <sstream>
#include <iomanip>
using namespace std;
#define rep(i,n) for (int i = 0; i < (int)(n); i++)
typedef long long ll;
typedef pair <int, int> PII;
const int N = 2000005;
const int INF = 0x7FFFFFFF;
struct Node {
    Node *ch[26];
    Node() {
        memset(ch, 0, sizeof(ch));
    }
}pool[N], *C, *root;

Node *newNode() {
    *C = Node();
    return C++;
}

void rebuild() {
    C = pool;
    root = newNode();
}

int insert(const string &s) {
    Node *p = root;
    int depth = 0;
    int res = INF;
    for (char c : s) {
        c -= 'a';
        depth++;
        if (!p->ch[c]) {
            res = min(res, depth);
            p->ch[c] = newNode();
        }
        p = p->ch[c];
    }
    if (res == INF) res = depth;
    return res;
}

int main() {
    int Tc;
    cin >> Tc;
    rep (ri, Tc) {
        rebuild();
        int n;
        ll ans = 0;
        string s;
        cin >> n;
        rep (i, n) {
            string s;
            cin >> s;
            ans += insert(s);
        }
        printf("Case #%d: ", ri + 1);
        cout << ans << endl;
    }
}