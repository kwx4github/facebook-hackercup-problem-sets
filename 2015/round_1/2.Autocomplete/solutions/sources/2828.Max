import sys

sys.setrecursionlimit(1000000)

class Tree(object):
    def __init__(self, data):
        self.data = data
        self.nexts = {}
        
def insert_word(root, word):
    while word != "":
        root.data += 1
        letter = word[0]
        if letter not in root.nexts:
            root.nexts[letter] = Tree(0)
        root = root.nexts[letter]
        word = word[1:]
    root.data += 1

def n_types(root, word, n_so_far=0):
    if word == "":
        return n_so_far
    if root.data == 1:
        return n_so_far
    return n_types(root.nexts[word[0]], word[1:], n_so_far+1)

n_cases = int(sys.stdin.readline())
for i in range(n_cases):
    n_words = int(sys.stdin.readline())
    root = Tree(-100000000)
    r = 0
    for j in range(n_words):
        w = sys.stdin.readline().strip()
        insert_word(root, w)
        incr = n_types(root, w)
        #print(w, incr)
        r += incr
    print("Case #%d: %d" % (i+1, r))
