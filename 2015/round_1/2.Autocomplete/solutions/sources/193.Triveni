/*
user  : triveni
date  : 18/01/2015
time  : 01:09:22
*/
#include <bits/stdc++.h>

using namespace std;

#define      pii               std::pair<int,int>
#define      vi                std::vector<int>
#define      mp(a,b)           std::make_pair(a,b)
#define      pb(a)             std::push_back(a)
#define      each(it,s)        for(auto it = s.begin(); it != s.end(); ++it)
#define      rep(i, n)         for(int i = 0; i < (n); ++i)
#define      sortA(v)          sort(v.begin(), v.end())
#define      sortD(v)          sort(v.begin(), v.end(), greater<auto>())
#define      X                 first
#define      Y                 second

typedef long long LL;
LL MOD = 1000000007;

class Trie{
public:
	Trie(){
		head = make_node();
	}
	void insert(string& t){
		node * tmp = head;
		for(int i = 0; i<t.length(); ++i){
			int c = t[i] - 'a';
			if(tmp -> A[c] == NULL) tmp -> A[c] = make_node();
			tmp = tmp->A[c];
		}
	}

	int getPrefix(string& str){
		int cnt = 0;
		node * tmp = head;
		for(int i = 0; i < str.length(); ++i){
			int c = str[i] - 'a';
			if(tmp -> A[c] == NULL) return cnt;
			tmp = tmp -> A[c];
			cnt += 1;
		}
		return cnt;
	}
private:
	struct node{
		node * A[26];
	};

	node * head;

	node * make_node(){
		node * nd = (node *)calloc(1, sizeof(node));
		rep(i, 26) nd -> A[i] = NULL;
		return nd;
	}
};



int main()
{
	int T, N;
	string str;
	cin >> T;
	for(int tc = 1; tc <= T; ++tc){
		cin >> N;
		int ans = 0;
		Trie tr;
		rep(i, N){
			cin >> str;
			int xx = tr.getPrefix(str);
			ans += min(xx + 1, (int)str.length());
			tr.insert(str);
		}
		printf("Case #%d: %d\n", tc, ans);
	}
	return 0;
}
