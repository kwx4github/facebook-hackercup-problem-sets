#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <utility>
#include <set>
#include <map>
#include <numeric>
#include <cstdio>
#include <cstring>
#include <iomanip>

using namespace std;

#define pb push_back
#define f first
#define s second
typedef long long ll;
typedef pair<int, int> pint;
typedef pair<long long, long long> plint;
typedef vector<int> vint;
typedef vector<vector<int>> vvint;
typedef vector<long long> vlint;
typedef vector<vector<long long>> vvlint;
typedef vector<pair<int, int>> vpint;
typedef vector<pair<long long, long long>> vplint;

ifstream in("autocomplete.txt");
ofstream out("autocomplete.out");


int add(vector<map<char, int>> &trie, const string &word) {
    int v = 0;
    int result = 0;
    for (char c: word) {
        if (trie[v][c]) {
            v = trie[v][c];
            ++result;
        } else {
            int w = trie.size();
            trie.emplace_back();
            trie[v][c] = w;
            v = w;
        }
    }
    return result + (result != word.length());
}


void solve()
{
    int n;
    in >> n;
    vector<map<char, int>> trie(1);
    int result = 0;
    for (int i = 0; i < n; ++i) {
        string word;
        in >> word;
        result += add(trie, word);
    }
    out << result;
}


int main()
{
    int cases;
    in >> cases;
    for (int z = 0; z < cases; ++z) {
        out << "Case #" << z + 1 << ": ";
        solve();
        out << endl;
    }

    return 0;
}
