#include<iostream>
#include<cstring>
using namespace std;
const int NODE = 1000005;
const int CHAR = 26;
const int STR = 100005;


class Trie {
public:
    int nNode;
    int next[NODE][CHAR];
    
    Trie(){}
    
    void init() {
        nNode = 1;
        memset(next, -1, sizeof(next));
    }
    
    int getNeedType(string &s) {
        int cur = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (next[cur][s[i]] == -1) {
                return i + 1;
            }
            cur = next[cur][s[i]];
        }
        return s.size();
    }
    
    void insert(string &s) {
        int cur = 0;
        for (int i = 0; i < s.size(); ++i) {
            if (next[cur][s[i]] == -1) {
                next[cur][s[i]] = nNode++;
            }
            cur = next[cur][s[i]];
        }
    }
};


int nStr;
string str[STR];

void read() {
    cin >> nStr;
    for (int i = 0; i < nStr; ++i) {
        cin >> str[i];
        for (int j = 0; j < str[i].size(); ++j)
            str[i][j] -= 'a';
    }
}


void work(int cases) {
    int ans = 0;
    
    static Trie trie;
    trie.init();
    
    for (int i = 0; i < nStr; ++i) {
        ans += trie.getNeedType(str[i]);
        trie.insert(str[i]);
    }
    
    cout << "Case #" << cases << ": " << ans << endl;
}


int main() {
    int cases;
    cin >> cases;
    for (int i = 0; i < cases; ++i) {
        read();
        work(i + 1);
    }
    return 0;
}
