#include <iostream>
#include <vector>

using namespace std;

struct S {
    int q[26];
};

vector<S> v;

int t;
int n;

int add(string x) {
    int k = 0;
    int c = 1;
    for (int i = 0; i < x.size(); i++) {
        int z = x[i]-'a';
        if (v[k].q[z] != 0) {
            k = v[k].q[z];
            c++;
        } else {
            v[k].q[z] = v.size();
            k = v.size();
            S s;
            for (int i = 0; i < 26; i++) s.q[i] = 0;
            v.push_back(s);
        }
    }
    if (c > x.size()) c = x.size();
    return c;
}

void solve(int x) {
    S s;
    for (int i = 0; i < 26; i++) s.q[i] = 0;
    v.clear();
    v.push_back(s);
    cin >> n;
    int c = 0;
    for (int i = 0; i < n; i++) {
        string u;
        cin >> u;
        c += add(u);
    }
    cout << "Case #" << x << ": " << c << "\n";
}

int main() {
    cin >> t;
    for (int i = 1; i <= t; i++) solve(i);
}
