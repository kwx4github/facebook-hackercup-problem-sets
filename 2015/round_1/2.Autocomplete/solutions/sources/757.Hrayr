// Author: Harhro94 [Harutyunyan Hrayr]
#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define FOR(i, n) for (int i = 0; i < (n); ++i)
typedef pair<int, int> pii;
typedef long long LL;
typedef long double LD;
#define pb push_back
#define mp make_pair
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

const int N = 1000007;
int n, nxt[26][N], cnt[N];
char st[N];

void clear() {
   FOR(j, 26) FOR(i, N) nxt[j][i] = -1;
   FOR(i, n) cnt[i] = 0;
   n = 1;
}

void add(char *st) {
   int len = strlen(st);
   int root = 0;
   for (int i = 0; i < len; ++i) {
      int c = st[i] - 'a';
      if (nxt[c][root] == -1) nxt[c][root] = n++;
      root = nxt[c][root];
      ++cnt[root];
   }
}

int type(char *st) {
   int ret = 0;
   int len = strlen(st);
   int root = 0;
   for (int i = 0; i < len; ++i) {
      int c = st[i] - 'a';
      root = nxt[c][root];
      ++ret;
      if (cnt[root] == 1) return ret;
   }
   return ret;
}

void solve() {

   int T;
   scanf("%d", &T);
   for (int test = 1; test <= T; ++test) {
      
      clear();
       
      int n;
      int ans = 0;
      scanf("%d", &n);
      while (n--) {
         scanf("%s", st);
         add(st);
         ans += type(st);
      }

      printf("Case #%d: %d\n", test, ans);
   }
}

void testGen() {
   FILE *f = fopen("input.txt", "w");
   fclose(f);
}

int main() {
#ifdef harhro94
   //testGen();
   freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);
#else
#define task "game"
   //freopen(task".in", "r", stdin);
   //freopen(task".out", "w", stdout);
#endif

   cerr << fixed;
   cerr.precision(5);

   solve();

#ifdef harhro94
   cerr << fixed << setprecision(3) << "\nExecution time = " << clock() / 1000.0 << "s\n";
#endif
   return 0;
}