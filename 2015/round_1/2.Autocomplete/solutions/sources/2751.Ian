import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;


public class PredictText {
	public static void main(String args[]) throws FileNotFoundException {
		File inputFile = new File(args[0]);
		Scanner read = new Scanner(inputFile);
		String numLines = read.nextLine();
		int lines = Integer.parseInt(numLines);

		for (int i = 1; i <= lines; i++) {
			System.out.print("Case #" + i + ": ");
			String num = read.nextLine().trim();
			int words = Integer.parseInt(num);
			ArrayList<String> listOfWords = new ArrayList<String>(words);
			for (int j = 0; j < words; j++){
				listOfWords.add(read.nextLine().trim());
			}
			Dictionary dic = new Dictionary(words);
			int keystrokes = 0;
			for (String str : listOfWords){
				dic.add(str);
				for (int k = 1; k <= str.length(); k++){
					int check = dic.isSubstring(str.substring(0, k));
					if (check == 1 || k == str.length()){
						keystrokes += k;
						break;
					}
				}
			}
			System.out.println(keystrokes);
		}
		read.close();
	}
}

class Dictionary {
	private ArrayList<String> words;
	public Dictionary(int cap) {
		words = new ArrayList<String>(cap);
	}
	public String toString(){
		return words.toString();
	}
	public void add(String str){
		int pos = Collections.binarySearch(words, str);
		if (pos < 0){
			words.add(-(pos+1), str);
		}
	}
	public int isSubstring(String testString) {
		int pos = Collections.binarySearch(words, testString);
		if (pos >= 0) {
			int count = 1;
			pos++;
			while (pos < words.size()){
				if (words.get(pos).startsWith(testString)){
					count++;
					pos++;
				}
				else{
					break;
				}				
			}
			return count;
		}
		pos = -(pos+1);
		if (pos == words.size()){
			return 0;
		}
		int count = 0;
		while (pos < words.size()){
			if (words.get(pos).startsWith(testString)){
				count++;
				pos++;
			}
			else{
				break;
			}				
		}
		return count;		
	}
}


