import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;


public class B {

	static StringTokenizer st;
	static BufferedReader br;
	static PrintWriter pw;
	
	public static void main(String[] args) throws IOException{
		br = new BufferedReader(new InputStreamReader(System.in));
		pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		int test = nextInt();
		int max = (int) 1e6;
		int[][]next = new int[26][max+1];
		for (int t = 1; t <= test; t++) {
			pw.print("Case #"+t+": ");
			long ans = 0;
			int n = nextInt();
			String s = "";
			for (int i = 0; i < 26; i++) {
				Arrays.fill(next[i], -1);
			}
			int size = 0;
			for (int i = 1; i <= n; i++) {
				s = next();
				int cur = 0;
				boolean found = false;
				for (int j = 0; j < s.length(); j++) {
					int k = s.charAt(j)-'a';
					if (next[k][cur]==-1) {
						next[k][cur] = ++size;
						if (!found) {
							ans += j+1;
							found = true;
						}
					}
					cur = next[k][cur];
				}
				if (!found)
					ans += s.length();
			}
			pw.println(ans);
		}
		pw.close();
	}

	private static int nextInt() throws IOException {
		return Integer.parseInt(next());
	}
	private static long nextLong() throws IOException {
		return Long.parseLong(next());
	}
	private static double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	private static String next() throws IOException{
		while (st==null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine());
		return st.nextToken();
	}

}
