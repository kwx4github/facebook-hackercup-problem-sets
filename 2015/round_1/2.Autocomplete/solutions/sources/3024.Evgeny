#include <iostream>
#include <fstream>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <cstring>
#include <string>
#include <cmath>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <numeric>
#include <utility>
#include <functional>
#include <limits>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int ui;
typedef pair<int,int> pii;
typedef vector<vector<int> > graph;

const double pi = acos(-1.0);

#define oned(a, x1, x2) { cout << #a << ":"; for(int _i = (x1); _i < (x2); _i++){ cout << " " << a[_i]; } cout << endl; }
#define twod(a, x1, x2, y1, y2) { cout << #a << ":" << endl; for(int _i = (x1); _i < (x2); _i++){ for(int _j = (y1); _j < (y2); _j++){ cout << (_j > y1 ? " " : "") << a[_i][_j]; } cout << endl; } }

#define mp make_pair
#define pb push_back
#define fst first
#define snd second

#define endl '\n'

const int MAXN = 1000005;
const int MAXA = 30;

int T[MAXN][MAXA], cnt[MAXN];

int n;
string s;

void solve() {
	for(int i = 0; i < MAXA; i++) {
		T[0][i] = -1;
	}
	int free = 1;

	int ans = 0;
	cin >> n;
    for(int i = 0; i < n; i++) {
		cin >> s;
		int u = 0;
		bool src = true;
		for(size_t j = 0; j < s.size(); j++) {
            int c = s[j]-'a';
            if(T[u][c]==-1) {
				T[u][c] = free;
				cnt[free] = 0;
				for(int g = 0; g < MAXA; g++) {
					T[free][g] = -1;
				}
				free++;
            }
			u = T[u][c];

            cnt[u]++;
			ans += src;
			if(cnt[u]==1) {
                src = false;
			}
		}
    }
    cout << ans << '\n';
}

int main() {
	ios_base::sync_with_stdio(false);
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	int T; cin >> T;
	for(int C = 1; C <= T; C++) {
        cout << "Case #" << C << ": ";
        solve();
	}
}
