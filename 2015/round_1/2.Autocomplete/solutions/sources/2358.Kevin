#include <iostream>
#include <string>

const int INF = 1e8;

using namespace std;

struct node {
    node* child[26];
};

node nodeList[10000005];
int nCount;
node* newNode() {
    node* temp = &nodeList[nCount++];
    for(int i = 0; i < 26; i++) {
        temp->child[i] = NULL;
    }
    return temp;
}

string a;

int insert(node* root) {
    int charAt = 0;
    node* nodeAt = root;
    int ans = a.size();
    for(int charAt = 0; charAt < a.size(); charAt++) {
        int to = (a[charAt]-'a');
        if(nodeAt->child[to] == NULL) {
            nodeAt->child[to] = newNode();
            ans = min(ans, charAt+1);
        }
        nodeAt = nodeAt->child[to];
    }
    return ans;
}

void garbage() {
    nCount = 0;
}
int main() {
    int T;
    cin >> T;
    for(int t = 1; t <= T; t++) {
        int N;
        cin >> N;
        int ans = 0;
        node* ROOT = newNode();
        for(int i = 1; i <= N; i++) {
            cin >> a;
            int cur = insert(ROOT);
            //cout << "Typing " << a << " costs " << cur << "\n";
            ans += cur;
        }
        cout << "Case #" << t << ": " << ans << "\n";
        garbage();
    }
    return 0;
}
