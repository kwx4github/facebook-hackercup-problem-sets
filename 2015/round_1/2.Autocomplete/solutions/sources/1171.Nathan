import java.util.Arrays;
import java.util.Scanner;

public class Prefix {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int T = in.nextInt();
    for (int tc = 1; tc <= T; tc++) {
      int typed = 0;
      int N = in.nextInt();
      Node root = new Node();
      root.childct = 1;
      for (int i = 0; i < N; i++) {
        char[] word = in.next().toCharArray();
        Node curr = root;
        curr.childct++;
        for (char c : word) {
          if (curr.children[c - 'a'] == null) {
            curr.children[c - 'a'] = new Node();
          }
          curr = curr.children[c - 'a'];
          curr.childct++;
        }
        
        curr = root;
        for (char c : word) {
          typed++;
          curr = curr.children[c - 'a'];
          //System.out.println("   DBG had to type " + c);
          if (curr.childct == 1) {
            break;
          }
        }
        //System.out.println(" DBG after word " + (i + 1) + " which is " + new String(word) + ": " + typed);
      }
      System.out.printf("Case #%d: %d\n", tc, typed);
    }
  }
}

class Node {
  int childct;
  Node[] children;
  
  public Node() {
    childct = 0;
    children = new Node[26];
  }
}