/******************************************************************************\
*                         Author:  Dumbear                                     *
*                         Email:   dumbear[#at]163.com                         *
*                         Website: http://dumbear.com                          *
\******************************************************************************/
#include <algorithm>
#include <bitset>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <typeinfo>
#include <utility>
#include <vector>

using namespace std;

#define output(x) cout << #x << ": " << (x) << endl;

typedef long long LL;
typedef vector<int> VI;
typedef vector<long long> VL;
typedef vector<double> VD;
typedef vector<string> VS;

struct trie {
    struct node {
        int ch[26];
        node() {
            memset(ch, -1, sizeof(ch));
        }
    };
    vector<node> nodes;
    void clear() {
        nodes.clear();
        nodes.push_back(node());
    }
    int insert(const char *word) {
        int res = -1;
        int index = 0, cnt = 0;
        for (int i = 0; word[i] != '\0'; ++i) {
            ++cnt;
            int l = word[i] - 'a';
            if (nodes[index].ch[l] == -1) {
                nodes[index].ch[l] = nodes.size();
                nodes.push_back(node());
                if (res == -1)
                    res = cnt;
            }
            index = nodes[index].ch[l];
        }
        return res == -1 ? cnt : res;
    }
};

int t, n;
trie tr;

void solve() {
    tr.clear();
    int res = 0;
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
        string word;
        cin >> word;
        res += tr.insert(word.c_str());
    }
    printf("Case #%d: %d\n", ++t, res);
}

int main() {
    freopen("out.txt", "w", stdout);
    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; ++i)
        solve();
    return 0;
}
