#include <iostream>
#include <string>
#include <map>
#include <tuple>

using namespace std;

map<string, int> S;

int solve()
{
	S.clear();
	S.insert(make_pair("#", 0));
	S.insert(make_pair("~", 0));
	int n, res = 0;
	cin >> n;
	string word;
	map<string, int>::iterator cur, prev, next;
	while(n--)
	{
		cin >> word;
		word+="#";
		tie(cur, ignore) = S.insert(make_pair(word, 0));
		next = prev = cur;
		--prev;
		++next;
		cur->second = prev->second;
		while(prev->first[prev->second] == cur->first[prev->second])
			++(prev->second);
		while(cur->first[cur->second] == next->first[cur->second])
			++(cur->second);
		res += min(max(prev->second, cur->second) + 1, (int)cur->first.length()-1);
	}
	return res;
}

int main()
{
	ios_base::sync_with_stdio(false);
	int z;
	cin >> z;
	for(int i = 1; i <= z; ++i)
		cout << "Case #" << i << ": " << solve() << endl;
	return 0;
}