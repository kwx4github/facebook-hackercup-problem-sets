#include<fstream>
#include<iostream>
#include<sstream>
#include<iomanip>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<functional>
#include<numeric>
using namespace std;
typedef pair<int, int> pii;
typedef long long ll;

namespace
{
	int sim(const string& a, const string& b)
	{
		int ret = 0;
		while (ret < a.size() && ret < b.size() && a[ret] == b[ret])
			++ret;

		return ret;
	}
}

//int mainFHC15_R1_P3()
int main()
{
	ifstream fin("FHC\\autocomplete.txt");
	ofstream fout("FHC\\autocomplete_out.txt");

	unsigned int numberOfCases;
	fin >> numberOfCases;

	for (unsigned int zz=1; zz<=numberOfCases; ++zz)
	{
		int n;
		fin >> n;

		int ret = 0;
		string s;
		set<string> ss;
		for (int i = 0; i < n; ++i)
		{
			fin >> s;
			auto it = ss.lower_bound(s);
			int numSame = 0;
			if (it != ss.end())
				numSame = sim(s, *it);
			if (it != ss.begin())
			{
				--it;
				numSame = max(numSame, sim(s, *it));
			}

			ss.insert(s);
			int add = max<int>(1, min<int>(s.size(), numSame + 1));
			ret += add;
		}

		fout << "Case #" << zz << ": ";
		fout << ret << endl;
	}

	return 0;
}