#include <bits/stdc++.h>
#define MAXNODES 1005*1005
#define ALPH_SIZE 27

using namespace std;

int nodes, trie[MAXNODES][ALPH_SIZE];
int val[MAXNODES];

void init()
{
	nodes = 1;
	memset(trie, -1, sizeof trie);
	memset(val, 0, sizeof val);
}

inline int enc(char ch)
{
	return ch - 'a';
}

void Insert(string &s)
{
	int p = 0;
	for(int i=0; i<s.size(); i++)
	{
		if(trie[p][enc(s[i])] == -1) trie[p][enc(s[i])] = nodes++;
		val[p]++;
		p = trie[p][enc(s[i])];
	}
	val[p]++;
}

int Find(string &s)
{
    int cont = 0;
	int p = 0;
	for(int i=0; i<s.size(); i++)
	{
        if(val[p]==1)    {  break;}
        else    cont++;

        p = trie[p][enc(s[i])];

	}
	return max(cont , 1);
}




int main(){
    freopen("autocomplete.txt","r",stdin);
    freopen("out.c","w",stdout);


    int TC , NC = 1;
    cin>>TC;
    string cad;

    while(TC--){
        cout<<"Case #"<<NC++<<": ";
        long long ans = 0;

        init();
        int N;
        cin>>N;

        for(int i = 0 ; i<N ;i++){
            cin>>cad;
            Insert(cad);
            ans+=Find(cad);
        }
        cout<<ans<<endl;
    }
    return 0;

}
