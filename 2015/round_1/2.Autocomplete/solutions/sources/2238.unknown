//#define NDEBUG
#include <cassert>
#include <fstream>
#include <iostream>
#include <string>
using namespace std;

#define ALL(x) (x).begin(), (x).end()
#define SZ(a) ((int) (a).size())

const int MAXS=26;
char c2i(char c) { return c-'a'; }

typedef struct tnode tnode_t;
struct tnode {
    char v;
    tnode_t *ch[MAXS];
};

tnode_t *tinit(char c) {
    tnode_t *nn=(tnode_t *)malloc(sizeof(tnode_t));
    for(int i=0; i<MAXS; ++i) nn->ch[i]=nullptr;
    nn->v = c;
    return nn;
}

int tinsert(tnode_t *r, const string &s) {
    int sz=SZ(s);
    int cnt=0;
    
    tnode_t *nc=r;
    for(int i=0; i<sz; ++i) {
        int j=c2i(s[i]);
        if(!nc->ch[j]) {
            nc->ch[j]=tinit(s[i]);
            if(cnt==0) cnt=i+1;
        }
        nc=nc->ch[j];
    }
    return (cnt==0) ? sz : cnt;
}

tnode_t *root=nullptr;

int main() {
    cin.sync_with_stdio(false);
    //fstream in("autocomplete_example_input.txt");
    //cin.rdbuf(in.rdbuf());

    int T; cin >> T;
    for(int t=1; t<=T; ++t) {
        int N; cin >> N;

        root=tinit(' ');
        int sol=0;
        for(int i=0; i<N; ++i) {
            string s; cin >> s;
            sol += tinsert(root, s);
        }
        cout << "Case #" << t << ": " << sol << endl;
    }
}
