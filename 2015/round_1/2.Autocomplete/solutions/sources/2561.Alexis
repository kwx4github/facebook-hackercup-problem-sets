#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>
#include <iomanip>
#include <map>
#include <queue>
#include <stack>
#include <set>
#include <iterator>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>

using namespace std;

class Dictionary
{
    public:
        vector<Dictionary * > fils;

        Dictionary()
        {
            fils.resize(26);
            for(int c=0;c<26;c++)
            {
                fils[c] = NULL;
            }
        }

        int ajouter(string s)
        {
            int res = s.size();
            Dictionary *parcours = this;
            for(int c=0;c<s.size();c++)
            {
                if(parcours->fils[s[c]-'a'] == NULL)
                {
                    res = min(res,c+1);
                    parcours->fils[s[c]-'a'] = new Dictionary();
                }
                parcours = parcours->fils[s[c]-'a'];
            }
            return res;
        }
};


int main()
{
    ios_base::sync_with_stdio(false);
#ifndef ONLINE_JUDGE
    #define cin in
    #define cout out
    ifstream in("input.txt");
    ofstream out("output.txt");
#endif // ONLINE_JUDGE
    int T;
    cin>>T;
    for(int cas=1;cas<=T;cas++)
    {
        cout<<"Case #"<<cas<<": ";
        int N;
        cin>>N;
        Dictionary D;
        int res = 0;
        for(int c=0;c<N;c++)
        {
            string s;
            cin>>s;
            res += D.ajouter(s);
        }
        cout<<res<<endl;
    }
}
