#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <stack>

using namespace std;

typedef struct Trie
{
    struct Trie *next[26];
    int num, branch;
    Trie()
    {
        for(int i = 0; i < 26; i++)
            next[i] = NULL;
        num = 0;
        branch = 0;
    }
}Tree;

void inSert(char *str, Tree *now)
{
    int i = 0;
    while(str[i] != '\0')
    {
        int idx = str[i++] - 'a';
        if(now->next[idx] == NULL)
        {
            now->next[idx] = new Tree();
            now->branch++;
        }
        now->num++;
        now = now->next[idx];
    }
    if(i > 0)now->num++;
}

int work(char *str, Tree *now)
{
    int i = 0;
    while(str[i] != '\0')
    {
        now = now->next[str[i] - 'a'];
        if(now->num == 1)
        {
            i++;
            break;
        }
        i++;
    }
    //cout<<i<<endl;
    return i;
}

int main()
{
    freopen("x.in", "r", stdin);
    freopen("x.txt", "w", stdout);
    int T;
    scanf("%d", &T);
    char str[1000005];
    for(int cas = 1; cas <= T; cas++)
    {
        int N, ans = 0;
        Tree *root = new Tree();
        scanf("%d", &N);
        for(int i = 0; i < N; i++)
        {
            scanf(" %s", str);
            inSert(str, root);
            ans += work(str, root);
        }
        printf("Case #%d: %d\n", cas, ans);
    }
    return 0;
}
