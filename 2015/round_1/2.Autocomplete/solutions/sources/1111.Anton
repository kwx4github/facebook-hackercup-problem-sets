import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Locale;
import java.util.StringTokenizer;

public class Autocomplete {
  final String IN_FILENAME = "autocomplete.txt";
  final String OUT_FILENAME = "autocomplete_output.txt";

  int trie[][] = new int[26][1000000];
  int end;

  void init_trie() {
    for (int[] r : trie) Arrays.fill(r, 0);
    end = 1;
  }

  int add(String word) {
    int res = 1;
    int pos = 0;
    int idx;

    for (int i = 0; i < word.length(); ++i) {
      idx = word.charAt(i) - 'a';
      if (trie[idx][pos] == 0) {
        trie[idx][pos] = end++;
      } else {
        if (i != word.length() - 1) res++;
      }
      pos = trie[idx][pos];
    }

    return res;
  }

  private void solve() {
    init_trie();
    int n = ni();
    int res = 0;
    for (int i = 0; i < n; ++i) {
      res += add(nt());
    }
    prln(res);
  }

  public static void main(String ... args) throws FileNotFoundException {
    new Autocomplete().run();
  }

  private PrintWriter pw;
  private BufferedReader br;
  private StringTokenizer st;

  private void run() throws FileNotFoundException {
    Locale.setDefault(Locale.US);
    pw = new PrintWriter(new File(OUT_FILENAME));
    br = new BufferedReader(new FileReader(IN_FILENAME));
    int T = ni();

    for (int i = 1; i <= T; ++i) {
      pr("Case #" + i + ": ");
      solve();
    }

    pw.close();

    try {
      br.close();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  private void pr(Object o) { pw.print(o); }
  private void prln(Object o) {pw.println(o);}

  private int ni() { return Integer.parseInt(nt()); }

  private String nt() {
    if (st == null || !st.hasMoreTokens())
      try {
        st = new StringTokenizer(br.readLine());
      } catch (IOException e) {
        System.exit(666);
      }
    return st.nextToken();
  }
}
