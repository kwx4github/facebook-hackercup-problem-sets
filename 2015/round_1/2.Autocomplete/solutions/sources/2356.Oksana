import java.util.HashMap;
import java.util.Scanner;

public class Autocomplete {

    private static class Node {
        HashMap<Character, Node> map = new HashMap<>();
    }

    public static void main(final String[] args) {
        Scanner sc = new Scanner(System.in);

        int T = sc.nextInt();
        int step = 0;
        while (++step <= T) {

            int cnt = 0;
            Node root = new Node();

            int n = sc.nextInt();
            while (n-- > 0) {
                String str = sc.next();
                Node curr = root;
                int idx = 0;
                boolean foundPrefix = false;
                int minPrefix = 0;
                while (idx < str.length()) {
                    Node next = curr.map.get(str.charAt(idx));
                    if (next == null) {
                        next = new Node();
                        curr.map.put(str.charAt(idx), next);
                        minPrefix = foundPrefix ? minPrefix : idx + 1;
                        foundPrefix = true;
                    }

                    idx++;
                    curr = next;
                }

                cnt += foundPrefix ? minPrefix : str.length();
            }

            System.out.println(String.format("Case #%s: %s", step, cnt));
        }
    }

    private static int solve(final Node node, final String str, final int idx, final boolean foundPrefix,
            final int minPrefix) {
        if (idx >= str.length()) {
            return foundPrefix ? minPrefix : str.length();
        }

        Node next = node.map.get(str.charAt(idx));
        if (next != null) {
            return solve(next, str, idx + 1, false, minPrefix);
        }

        next = new Node();
        node.map.put(str.charAt(idx), next);

        return solve(next, str, idx + 1, true, foundPrefix ? minPrefix : idx + 1);
    }

}
