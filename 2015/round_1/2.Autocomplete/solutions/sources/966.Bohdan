import java.io.*;
import java.util.*;

public class cup_2_2 {
    
    static boolean uniquelyDet(TreeSet<String> ts, String word, String pref){
        if (pref.equals(word)) return true;
        if (ts.contains(pref)) return false;
    //    System.out.println(word+" "+pref);
        if (!ts.higher(pref).equals(word)) return false;
        String next=ts.higher(word);
   //     System.out.println(word+" "+pref+" "+next);
        if (next==null || next.length()<pref.length()) return true;
    //    System.out.println(word+" "+pref+" "+next);
        return (!next.substring(0,pref.length()).equals(pref));
        
    }
    
    
    static int minPrefLen(TreeSet<String>ts, String word ){
        int good=word.length(),
                bad=0;
        while (good-bad>1){
            int m=(good+bad)/2;
            String pref=word.substring(0,m);
            if (uniquelyDet(ts, word, pref)) good=m;
            else bad=m;
    //        System.out.println(word+" "+bad+" "+good);
        }
        return good;        
    }
    

    public static void main(String[] args) throws IOException {
           
        InputStream in=System.in;
        PrintStream out=System.out;
        
        in =new FileInputStream("autocomplete.txt");
        out =new PrintStream("autocomplete_output.txt");
        
        Scanner sc=new Scanner(in);
        
        int T=sc.nextInt();
        for (int t=0;t<T;t++){
            TreeSet<String> ts=new TreeSet<>();
            int N=sc.nextInt();
            int count=0;
            for (int i=0;i<N;i++){
                String word=sc.next();
      //          System.out.println(word);
                ts.add(word);
                count+=minPrefLen(ts,word);
        //        System.out.println(count);

            }
            
            out.println("Case #"+(t+1)+": "+count);
            
        }      
           
         
    }
    
}
