import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

public class Autocomplete {
	static int count = 0;
	static boolean insert = false;
	static boolean last = false;
    static class TrieNode {
       TrieNode[] nodes = new TrieNode[26];
       char c;
    }
    
    boolean isLeafNode (TrieNode node) {
    	if(node == null) return true;
    	for(int i = 0; i < 26; i++) {
    		if(node.nodes[0] != null) return false;
    	}
    	return true;
    }
    
    static void insertNode(TrieNode node, String str) {
    	while(str != null && str.length() != 0) {
    	char c = str.charAt(0);
    	int i = charToInt(c);
    	if(node.nodes[i] == null) {
    		TrieNode n = new TrieNode();
    		n.c = c;
    		node.nodes[i] = n;
    		if(insert == false) {
    			insert = true;
    			count++;
    			if(last == true) {
    				break;
    			}
    		}
    	} else {
    		count++;
    	}
    	node = node.nodes[i];
    	str = str.substring(1);
    	}
    }
    
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try {
		Scanner in = new Scanner(new File("/Users/pocketgems/Downloads/autocomplete.txt"));

//		Scanner in = new Scanner(System.in);
		int T = in.nextInt();
		for(int i = 1; i <= T; i++) {
			int N = in.nextInt();
			int counter = 0;
			last = false;
			TrieNode node = new TrieNode();
//			System.out.println("+++"+N+"+++");
			for(int j = 0; j < N; j++) {
				String str = in.next();
//				System.out.println("+++"+str+"+++");
				count = 0;
				insert = false;
				if(j == N-1) {
					last = true;
				}
				if(N==1) {
					counter = 1;
				} else {
					insertNode(node, str);
					counter += count;
				}
			}
			System.out.println("Case #"+i+": "+counter);
		}
		in.close();
		}
	    catch (FileNotFoundException e) {
	        e.printStackTrace();
	    }
	}
	
	static int charToInt(char c) {
		return c-'a';
	}

}
