#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <list>
#define gc getchar
using namespace std;
int a,b,t;
string word;
char in;
struct Trie
{
    list<pair<char,int> > alph;
    list<Trie> nex;
   // vector<pair<char,int> > alph;
   // vector<Trie> nex;
    int fin(int curr)
    {
        if (word.length()==curr)return 0;
        list<pair<char,int> > ::iterator it;
        list<Trie>::iterator it2=nex.begin();
        for (it=alph.begin();it!=alph.end();++it,++it2)
        {
            if (it->first==word[curr])
            {
                break;
            }
        }
        if (it->second==1)return 1;
        return 1+(*it2).fin(curr+1);
    }
    void ins(int curr)
    {
        if (word.length()==curr)return;
        list<pair<char,int> >::iterator it;
        list<Trie>::iterator it2=nex.begin();
        for (it=alph.begin();it!=alph.end();++it,++it2)
        {
            if (it->first==word[curr])
            {
                break;
            }
        }
        if (it==alph.end())
        {
            Trie hold;
            alph.push_back(make_pair(word[curr],1));
            nex.push_back(hold);
            it2=nex.begin();
            for (int i=1;i<alph.size();i++)++it2;
            (*it2).ins(curr+1);
            return;
        }
        else
        {
            it->second++;
            (*it2).ins(curr+1);
            return;
        }
    }
}TR;
void clea()
{
    while (!TR.alph.empty())TR.alph.pop_back();
    while (!TR.nex.empty())TR.nex.pop_back();
}
//Trie hold;
int main()
{
    scanf("%i\n",&t);
    for (int t2=1;t2<=t;t2++)
    {
        clea();
        scanf("%i\n",&a);
        b=0;
        while (a--)
        {
            word="";
            while ((in=gc())!='\n' && in!=EOF)word+=in;
            TR.ins(0);
            b+=TR.fin(0);
        }
        printf("Case #%i: %i\n",t2,b);
    }
    return 0;
}
