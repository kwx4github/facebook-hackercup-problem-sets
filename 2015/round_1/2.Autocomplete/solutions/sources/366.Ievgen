#include <iostream>
#include <string>
#include <cstdio>
#include <set>
#include <algorithm>
#include <vector>
#include <cstring>
#include <map>
#include <queue>
#include <bitset>
#include <ctime>
#pragma comment(linker, "/STACK:256000000")

using namespace std;

struct node {
	node* a[26];
	int cnt;

	node() {
		for (int i = 0; i < 26; ++i) {
			a[i] = NULL;
		}
		cnt = 0;
	}
};

node* head;
int res;

void add(const string& s) {
	node* cur = head;
	bool is_added = false;
	for (int i = 0; i < s.length(); ++i) {
		if (!cur->a[s[i] - 'a']) {
			node* nnode = new node();
			cur->a[s[i] - 'a'] = nnode;
		}
		cur = cur->a[s[i] - 'a'];
		++cur->cnt;
		if (cur->cnt == 1 && !is_added) {
			is_added = true;
			res += (i + 1);
		}
	}
	if (!is_added) {
		res += s.length();
	}
}

void solve(int tcase) {
	printf("Case #%d: ", tcase);
	int n;
	cin >> n;
	res = 0;
	head = new node();
	for (int i = 0; i < n; ++i) {
		string buf;
		cin >> buf;
		add(buf);
	}
	printf("%d\n", res);
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("autocomplete_ievgen.txt", "w", stdout);

	ios_base::sync_with_stdio(false);

	int t;
	cin >> t;

	for (int i = 1; i <= t; ++i) {
		solve(i);
	}


	return 0;
}
