#include <bits/stdc++.h>
using namespace std;

const int maxN = 1000000 + 10;

struct TNode{
    int d[26];
    TNode(){memset(d,0,sizeof d);}
    void clear(){memset(d,0,sizeof d);}
};

int n, nt;
TNode tr[maxN];
char s[maxN];

void solve(){
    tr[0].clear();
    scanf("%d", &n);
    long long res = 0;
    int ns, np;
    nt = 0;
    for (int i = 0; i < n; i++){
        scanf("%s", s);
        ns = np = strlen(s);
        int cc = 0;
        for (int j = 0; j < ns; j++){
            if (tr[cc].d[s[j]-'a'])
                cc = tr[cc].d[s[j]-'a'];
            else{
                tr[cc].d[s[j]-'a'] = ++nt;
                cc = nt;
                if (np == ns) np = j+1;
            }
        }
        res += np;
    }
    printf("%lld\n", res);
}

int main(){
    freopen("B.in", "r", stdin);
    freopen("B.out", "w", stdout);
    int t; scanf("%d", &t);
    for (int i = 1; i <= t; i++){
        printf("Case #%d: ", i);
        solve();
    }
    return 0;
}
