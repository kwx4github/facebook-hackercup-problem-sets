#include <iostream>
#include <cmath>
#include <set>
#include <map>
#include <algorithm>
#include <cstdio>
#include <vector>

#define mp(x,y) make_pair((x), (y))
#define pb(x) push_back((x))
#define sortv(v) sort((v).begin(),(v).begin()+(v).size())

using namespace std;

int next() {int x;cin >> x;return x;}
long long nextl() {long long x;cin >> x;return x;}
double nextd() {double x;cin >> x;return x;}

void out(long long x) {printf("%d ", x);}

int pref(string s1, string s2) {
	int k = 0;
	while (k < s1.length() && k < s2.length() && s1[k] == s2[k]) k++;
	return k;
}

int main() {
	int tests = next();

	for (int test = 1; test <= tests; test++) {
		set<string> st;
		int n = next();
		int answer = 0;
		for (int i = 0; i < n; i++) {
			string s;
			cin >> s;
			st.insert(s);
			if (i == 0) {
				answer += 1;
				continue;
			}

			set<string>::iterator it = st.lower_bound(s), prev = it, next = it;
			--prev;
			++next;
			if (it == st.begin()) prev = next;
			if (next == st.end()) next = prev;
			
			int min1 = pref(*it, *prev);
			if (min1 < it->length()) min1++;
			int min2 = pref(*it, *next);
			if (min2 < it->length()) min2++;
			
			int k = max(min1, min2);
			answer += k;
		}

		printf("Case #%d: %d\n", test, answer);
	}
}                                        