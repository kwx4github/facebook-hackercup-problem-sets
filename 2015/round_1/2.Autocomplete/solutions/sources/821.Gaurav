#include <bits/stdc++.h>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define forup(i,a,b) for(int i=(a); i<(b); ++i)
#define fordn(i,a,b) for(int i=(a); i>(b); --i)
#define rep(i,a) for(int i=0; i<(a); ++i)

#define gi(x) scanf("%d",&x)
#define gl(x) cin>>x
#define gd(x) scanf("%lf",&x)
#define gs(x) scanf(" %s",x)

#define fs first
#define sc second

#define pb push_back
#define mp make_pair

const int inf=numeric_limits<int>::max();
const LL linf=numeric_limits<LL>::max();

struct node {
	int next[26];
	node() {
		fill(next,next+26,-1);
	}
};

struct Trie {
	vector<node> trie;

	Trie() {
		trie.clear();
		trie.pb(node());
	}

	int insert(string s) {
		int nix=0,i=0,sz=int(s.size());
		while(i<sz and trie[nix].next[s[i]-'a']!=-1) {
			nix=trie[nix].next[s[i]-'a'];
			i++;
		}
		if(i==sz) return sz;
		int ans=i+1;
		while(i<sz) {
			trie.pb(node());
			trie[nix].next[s[i]-'a']=int(trie.size())-1;
			nix=trie[nix].next[s[i]-'a'];
			i++;
		}
		return ans;
	}
};


int t,n;
Trie trie;
string str;

int main() {
	ios_base::sync_with_stdio(false);
	cin>>t;
	rep(z,t) {
		trie=Trie();
		cin>>n;
		int ans=0;
		rep(i,n) {
			cin>>str;
			ans+=trie.insert(str);
		}
		cout<<"Case #"<<(z+1)<<": "<<ans<<"\n";
	}
	return 0;
}
