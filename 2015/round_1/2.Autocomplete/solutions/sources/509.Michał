#include <cstdio>
using namespace std;

const int MAXW = 2000000;

struct Trie {
    Trie* child[26];  
    int size;

    inline Trie() {
        for (int i = 0; i < 26; ++i)
            child[i] = NULL;
        size = 0;
    }
};

void deltree(Trie* t) {
    if (!t) return;

    for (int i = 0; i < 26; ++i)
        deltree(t->child[i]);

    delete t;
}

void add(Trie* t, char* word) {
    for (int pos = 0; word[pos]; ++pos) {
        t->size++;
        if (! t->child[word[pos] - 'a'])
            t->child[word[pos] - 'a'] = new Trie();
        t = t->child[word[pos] - 'a'];
    }
    t->size++;
}

int lookup(Trie* t, char *word) {
    t = t->child[word[0] - 'a'];
    int result = 1;
    while (t->size > 1 && word[result]) {
        t = t->child[word[result] - 'a'];
        result++;
    }

    return result;
}

void Go(int tc) {
    Trie* t = new Trie(); 
    int result = 0;

    int k;
    scanf("%d", &k);
    getchar();
    while (k--) {
        char word[MAXW];
        scanf("%s", word);
        getchar();
        add(t, word); 
        result += lookup(t, word);
    }
    
    printf("Case %d: %d\n", tc, result);
    deltree(t);
}

int main() {
    int N;
    scanf("%d", &N);
    for (int i = 1; i <= N; ++i)
        Go(i);
}

