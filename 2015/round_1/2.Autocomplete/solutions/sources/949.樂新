#include <algorithm>
#include <cstdio>
#include <cstring>

using namespace std;

// struct char
int tree[1000005][30];
int nxtn = 0;
int cnt[1000005];
int tt,n;
char str[1000005];
char fc[1000005];

int main(){
	scanf("%d",&tt);
	for(int t = 1; t <= tt; ++t){
		memset(cnt,0,sizeof(cnt));
		memset(fc,0,sizeof(fc));
		memset(tree,0,sizeof(tree));
		nxtn = 1;
		int ans = 0;
		scanf("%d",&n);
		for(int i = 0; i < n; ++i){
			scanf("%s",str);
			// add
			int j = 0;
			int node = 0;
			while(str[j] != '\0'){
				++cnt[node];
				char c = str[j] - 'a';
				if(tree[node][c] == 0){
					tree[node][c]= nxtn;
					fc[nxtn] = str[j];
					++nxtn;
				}
				node = tree[node][c];
				++j;
			}
			++cnt[node];
			// query unique
			node = 0;
			j = 0;
			bool flg = false;
			while(str[j] != '\0'){
				char c = str[j] - 'a';
				if(cnt[tree[node][c]] == 1){
					ans += j+1;
				//	printf("+%d\n",j+1);
					flg = true;
					break;
				}
				node = tree[node][c];
				++j;
			}
			if(!flg){
				ans += j;
				//printf("*%d\n",j);
			}
			// query unique
		}
		// debug
		/*
		for(int i = 0; i < nxtn; ++i){
			printf("%c %d\n",fc[i], cnt[i]);
		}
		*/

		printf("Case #%d: %d\n", t, ans);
	}
	return 0;
}
