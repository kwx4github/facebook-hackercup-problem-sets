#include <cstdio>
#include <cstring>
#include <cstdlib>

using namespace std;

struct node
{
    int L, R;
    struct node *p[26];
};

struct node x[1<<20];
int n, p, c;
char s[1<<21];

struct node *newnode(int L, int R)
{
    x[n].L=L;
    x[n].R=R;
    for(int i=26; i--; x[n].p[i]=NULL);
    return x+n++;
}

void match(struct node *v, int L, int R)
{
    int i, j;
    for(i=v->L; i<v->R && i-v->L+L<R && s[i-v->L+L]==s[i]; i++);
    c+=i-v->L;
    if(i-v->L+L<R)
    {
        if(i<v->R)
        {
            c++;
            struct node *u=x+n++;
            for(j=26; j--; u->p[j]=v->p[j]);
            u->L=i;
            u->R=v->R;
            v->R=i;
            for(j=26; j--; v->p[j]=NULL);
            v->p[s[i]-'a']=u;
            v->p[s[i-v->L+L]-'a']=newnode(i-v->L+L, R);
        }
        else if(v->p[s[i-v->L+L]-'a']!=NULL)
        {
            match(v->p[s[i-v->L+L]-'a'], i-v->L+L, R);
        }
        else
        {
            c++;
            v->p[s[i-v->L+L]-'a']=newnode(i-v->L+L, R);
        }
    }
}

int main ()
{
    int T, t, N, i, j;
    struct node *h;
    
    for(scanf("%d", &T), t=1; t<=T; t++)
    {
        scanf("%d", &N);
        c=n=p=0;
        h=newnode(0, 0);
        for(i=0; i<N; i++)
        {
            scanf("%s", s+p);
            j=strlen(s+p);
            match(h, p, p+j);
            p+=j+1;
        }
        printf("Case #%d: %d\n", t, c);
    }
    
    return 0;
}
