#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <queue>
using namespace std;

struct node
{
	node* d[26];
	node()
	{
		memset(d,0,sizeof(d));
	}
};

void freeList(node* h)
{
	if(!h) return;
	queue<node*> q;
	int i,j;
	q.push(h);
	while(!q.empty())
	{
		h = q.front();
		q.pop();
		for(i=0;i<26;i++)
		if(h->d[i])
			q.push(h->d[i]);
		delete h;
	}
	
}

int main()
{
	int i,j,t;
	cin>>t;
		
	for(i=1;i<=t;i++)
	{
		int a,b,k;
		cin>>a; 
		node* h = new node();
		int ans = 0;
		
		for(j=1;j<=a;j++)
		{
			string s;
			cin>>s;
			node* p = h;
			bool inc = true;
			for(k=0;k<s.size();k++)
			{
				int ch = s[k]-'a';
				if(inc) ans++;
				if(p->d[ch]==NULL)
				{
					p->d[ch] = new node();
					inc = false;
				}
				p = p->d[ch];
			}
		}
		
		cout<<"Case #"<<i<<": "<<ans<<"\n";
		freeList(h);
	}
	return 0;
}
	