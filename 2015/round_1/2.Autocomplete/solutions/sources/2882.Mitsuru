#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;

int main() {
    int N;
    cin >> N;
    for (int counter = 0; counter < N; counter++) {
        cout << "Case #" << counter + 1 << ": ";
        vector<vector<string> > dict;
        for (char i = 'a'; i <= 'z'; i++) {
            dict.push_back(vector<string>());
        }
        int dictsize;
        cin >> dictsize;
        int max = 0;
        for (int i = 0; i < dictsize; i++) {
            string word;
            cin >> word;
            //cout << max << "\n"; //DEBUG
            int index = word[0] - 'a';
            if (dict[index].size() == 0) {
                max++;
            } else if (word.size() > 1) {
                for (int i = 2; i <= word.size(); i++) {
                    string prefix = word.substr(0, i);
                    if (prefix == word) {
                        max += word.size();
                        break;
                    }
                    bool fail = false;
                    for (int j = 0; j < dict[index].size(); j++) {
                        if (dict[index][j].size() > prefix.size()) {
                            if (dict[index][j].substr(0, prefix.size()) == prefix) {
                                fail = true;
                                break;
                            }
                        } else if (dict[index][j].size() == prefix.size()) {
                            if (dict[index][j] == prefix) {
                                fail = true;
                                break;
                            }
                        }
                    }
                    if (!fail) {
                        max += prefix.size();
                        break;
                    }
                }
            } else if (word.size() == 1) {
                max++;
            }
            dict[index].push_back(word);
        }
        cout << max << "\n";
        //return 0;
    }
}