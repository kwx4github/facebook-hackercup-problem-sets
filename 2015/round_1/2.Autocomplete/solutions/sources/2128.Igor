#if 1
#include <iostream>
#include <cassert>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;

typedef long long li;

#define tonum(c) (c - 'a')

const int maxsize = 1e6 + 7;
int nextv [maxsize][26];
int cursize = 1;

void inittree()
{
    memset(nextv[0], 0, sizeof(nextv[0]));
    cursize = 1;
}

int add(const string &s)
{
    int cnt = 0;
    int ptr = 0;
    bool f = true;
    for (int i = 0; i < s.size(); ++i)
    {
        if(f) cnt++;
        int nextptr = nextv[ptr][tonum(s[i])];
        if(nextptr == 0)
        {
            nextptr = cursize;
            memset(nextv[cursize], 0, sizeof(nextv[cursize]));
            nextv[ptr][tonum(s[i])] = cursize;
            f = false;
            cursize++;
        }
        ptr = nextptr;
    }
    return cnt;
}

int main()
{
    freopen("autocomplete.txt", "r", stdin);
    cin.sync_with_stdio(false);
    freopen("autocomplete0.txt", "w", stdout);
    int T; cin >> T;
    for (int t = 0; t < T; ++t)
    {
        inittree();
        int N; cin >> N;
        int answer = 0;
        string str;
        for (int i = 0; i < N; ++i)
        {
            cin >> str;
            int val = add(str);
            answer += val;
        }
        cout << "Case #" << t + 1 << ": " << answer << endl;
    }
    return 0;
}
#endif