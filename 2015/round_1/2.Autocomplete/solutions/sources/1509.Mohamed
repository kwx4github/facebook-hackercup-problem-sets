
#include <ext/numeric>
#include <bits/stdc++.h>
using namespace std;
using namespace __gnu_cxx;

#define SZ(x) ((int)x.size())

struct Trie {
	bool isEnd;
	Trie* links[26];
	Trie() : isEnd(false) {
		for (int i = 0; i < 26; ++i) {
			links[i] = NULL;
		}
	}
	bool empty() {
		for (int i = 0; i < 26; ++i) {
			if (links[i] != NULL) {
				return false;
			}
		}
		return true;
	}
	void setIsEnd() {
		isEnd = true;
	}
};

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL), cout.tie(NULL);

	freopen("autocomplete.txt", "rt", stdin);
	freopen("out.out", "wt", stdout);

	int t, id = 0; cin >> t;
	while (t--) {
		cout << "Case #" << ++id << ": ";
		Trie* root = new Trie();
		int n, ans = 0; cin >> n;
		while (n--) {
			int s = 1;
			Trie *ptr = root;
			string str; cin >> str;
			for (int i = 0; i < SZ(str); ++i) {
				ans += s;
				int c = str[i] - 'a';
				if (ptr->links[c] == NULL) {
					ptr->links[c] = new Trie();
				}
				ptr = ptr->links[c];
				if (ptr->empty() && ptr->isEnd == false) {
					s = 0;
				}
			}
			ptr->setIsEnd();
		}
		cout << ans << '\n';
	}

	return 0;
}

