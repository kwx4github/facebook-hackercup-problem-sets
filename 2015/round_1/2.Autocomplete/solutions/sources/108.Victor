#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
#include <vector>
#include <set>
#include <string>
#include <map>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <functional>
#include <list>
#include <deque>
#include <algorithm>

using namespace std;

char _input[ 32000000 ];

class Solution
{
    int Result;
    int N;

    class compare : public binary_function< char *, char *, bool >
    {
    public:
        bool operator ()( char *a, char *b )
        {
            return strcmp( a, b ) < 0;
        }
    };

    typedef set< char *, compare > dict_t;

public:
	void Read()
	{
        int i;
        scanf( "%d", &N );

        dict_t dict;
        char *input = _input;

        Result = 0;

        for( i = 0; i < N; ++i )
        {
            scanf( " %s", input );
            dict.insert( input );
            int len = ( int )strlen( input );
            char *sub = input + len + 1;
            strcpy( sub, input );

            int min = 0, max = len;
            while( max - min > 1 )
            {
                int mid = ( min + max ) / 2;
                sub[ mid ] = '\0';
                dict_t::iterator dict_it = dict.lower_bound( sub );
                dict_t::iterator dict1_it = dict_it;
                ++dict1_it;
                if( dict1_it != dict.end() && strncmp( *dict_it, *dict1_it, mid ) == 0 )
                    min = mid;
                else
                    max = mid;
                sub[ mid ] = input[ mid ];
            }

            Result += max;

            input += len + 1;
        }
    }

	void Write( int t )
	{
		printf( "Case #%d: %d\n", t, Result );
	}
};

int main()
{
	int i, t;
	scanf( "%d", &t );
	for( i = 0; i < t; ++i )
    {
        Solution solution;
		solution.Read();
		solution.Write( i + 1 );
    }
    return 0;
}
