#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>

using namespace std;

typedef long long int LL;

struct node {
	struct node *child[27];
};

int fincnt;
struct node *insert(struct node *root, string s)
{
	struct node *tmp;
	tmp = root;
	
	int i, j;
	for (i = 0; i < (int)s.size(); i++) {
		if (tmp->child[s[i]-'a'] == NULL) {
			if (fincnt == -1) fincnt = i+1;
			
			struct node *tmp2;
			tmp2 = (struct node *)malloc(sizeof(struct node));
			
			tmp->child[s[i]-'a'] = tmp2;
			for (j = 0; j < 27; j++) tmp2->child[j] = NULL;
		}
		tmp = tmp->child[s[i]-'a'];
	}
	return root;
}

int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int t, cases = 0;
	scanf("%d", &t);
	
	while (t--) {
		struct node *root = (struct node *)malloc(sizeof(struct node));
		int n, i, j, ans;
		scanf("%d",&n);
		
		string s;
		
		ans = 0;
		for (i = 0; i < 27; i++) root->child[i] = NULL;
		
		for (i = 0; i < n; i++) {
			fincnt = -1;
			cin >> s;
			root = insert(root, s);
			if (fincnt != -1) ans += fincnt;
			else ans += (int)s.size();
		}
		printf("Case #%d: %d\n", ++cases, ans);
	}
	return 0;
}
