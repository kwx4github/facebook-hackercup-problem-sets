#include <iostream>
#include <string>

using namespace std;

struct node {
    node() {
        cnt = 0;
        for (int i = 0; i < 26; ++i) {
            child[i] = NULL;    
        }
    }
    int cnt;
    node* child[26];
};

node* root;

void insertWord(const string& word) {
    node* p = root;
    int len = (int)word.size();
    for (int i = 0; i < len; ++i) {
        int idx = word[i] - 'a';
        node* q = p->child[idx];
        if (q == NULL) {
            q = new node();
            p->child[idx] = q;
        }
        q->cnt++;
        p = q;
    }
}

int query(const string& word) {
    int ret = 0;
    node* p = root;
    int len = (int)word.size();
    for (int i = 0; i < len; ++i) {
        int idx = word[i] - 'a';
        p = p->child[idx];
        if (p->cnt == 1) {
            return i + 1;
        }
    }
    return len;
}

void clear(node* p) {
    if (p == NULL) {
        return;
    }
    for (int i = 0; i < 26; ++i) {
        clear(p->child[i]);
    }
    delete p;
}

int main() {
    int T;
    cin >> T;
    for (int cs = 1; cs <= T; ++cs) {
        int n;
        string word;
        cin >> n;

        root = new node();

        int ans = 0;
        for (int i = 0; i < n; ++i) {
            cin >> word;
            insertWord(word);
            ans += query(word);
        }

        cout << "Case #" << cs << ": " << ans << endl;
//        clear(root);
    }
    return 0;
}
