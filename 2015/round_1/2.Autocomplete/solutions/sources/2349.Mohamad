#include <iostream>
#include <cmath>
#include <cstdio>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstring>
#include <string>
#include <numeric>
#include <functional>
#include <map>
#include <stack>
#include <set>
#include <functional>
#include <numeric>
#include <math.h>
#include <fstream>
#include <cstdlib>
#include <cctype>
#include <bitset>
#include <iomanip>
using namespace std;

typedef pair<int, int> pi;
typedef pair<pi, pi> pp;
typedef unsigned long long ull;
typedef long long ll;

#define MAXN 100

typedef vector<int> vi;


class prf
{
public:
	char c;
	vector<prf*> a;
};

int finda(prf * root, string&  s, int t)
{
	
	for (int i =0;i < root->a.size(); i++)
	{
		if(root->a[i]->c == s[t])
			return 1+finda((root->a[i]),s,t+1);
	}
	return 0;
}
void insert(prf * root, string & s, int t)
{
	if(t== s.size())
		return;
	int id = -1;
	for(int i =0 ; i< root->a.size(); i++)
	{
		if(root->a[i]->c == s[t])
			id = i;
	}
	if(id>-1)
		insert((root->a[id]), s, t+1);
	else
	{
		while(t<s.size())
		{
			prf * node = new prf;
			node->c = s[t];
			root->a.push_back(node);
			root = root->a[root->a.size()-1];
			t++;
		}
	}
}
int main() 
{
	freopen("in.txt", "r",stdin);
	freopen("out.txt", "w",stdout);	
	//ios::sync_with_stdio(0);
	int T;
	cin>>T;
	for(int t = 1 ; t  <= T; t++)
	{
		int ans = 0, n = 0;
		cin>>n;
		prf root, *node;
		for (int i = 0; i < n; i++)
		{
			string s;
			cin>>s;
			int tm = finda(&root, s, 0);
			ans+=tm==s.size()?tm:tm+1;
			insert(&root, s, 0);
		}
		cout<<"Case #"<<t<<": "<<ans<<endl;
	}

}