#include <iostream>
#include <string>
#include <string>

using namespace std;

class Dict {
public:
	int count;
	int nc;
	struct Dict *n[32];
	Dict() {
		for (int i=0; i<32; i++) n[i] = NULL;
		count = 0;
		nc = 0;
	}
	~Dict() {
		// !!! stack overflow
		// for (int i=0; i<32; i++) if (n[i]) delete n[i];
	}
};

int len(Dict *d, const char *s) {
	int l = 0;
	for (const char *ss = s;*ss != '\0'; ss++) {
		int c = *ss -'a';
		l++;
		d = d->n[c];
		if (d->count == 1) return l;
	}
	return l;
}

void add(Dict *dict, const char *s) {
	Dict *d = dict;
	for (const char *ss = s;*ss != '\0'; ss++) {
		int c = *ss -'a';
		if (!d->n[c]) {
			d->n[c] = new Dict();
			d->nc++;
		}
		d = d->n[c];
	}
	if (d->count == 0 || d->nc != 0) {
		d = dict;
		for (const char *ss = s;*ss != '\0'; ss++) {
			int c = *ss -'a';
			d = d->n[c];
			d->count++;
		}
	}
}

int main() {
	int T;
	cin >> T;
	for (int t = 0; t < T; t++) {
		int N;
		cin >> N;
		string w;
		int ans = 0;
		Dict d;
		for (int n = 0; n < N; n++) {
			cin >> w;
			// for (int i = 0; i < 300000; i++) w+="z";
			add(&d, w.c_str());
			int l = len(&d, w.c_str());
			// cerr << l << endl;
			ans += l;
		}
		cout << "Case #" << (t+1) << ": " << ans << endl;
	}
	return 0;
}


