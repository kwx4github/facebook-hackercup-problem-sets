#include<bits/stdc++.h>
using namespace std;

#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define memo(a,b) memset(a,b,sizeof(a))

#define all(a) a.begin(),a.end()
#define pb push_back
#define mpp(a,b,c) make_pair(make_pair(a,b),c)

#define inf (1<<29)
#define i64 long long
#define pi (2.0*acos(0.0))
#define eps (1e-9)

struct node{
    node *next[26];
    node(){
        memset(next,0,sizeof(next));
    }
};
char a[1000006];
int ans ;
void trie_insert(node *root){
    node *p = root;
    int j;
    int c = 1;
    for(int i = 0;a[i];i++){
        j = a[i] - 'a';
        ans += c;
        if(p->next[j]==NULL){
            c = 0;
            p->next[j] = new node();
        }
        p = p->next[j];

    }
}
int main() {
      freopen("autocomplete.txt","r",stdin);
      freopen("output2.txt","w",stdout);
    int t, cs = 1, i, n;
    cin>>t;
    while(t--){
        node *root = new node();
        cin>>n;
        ans = 0;
        for(i = 0;i<n;i++){
            scanf("%s",a);
            trie_insert(root);
        }
        delete root;
        printf("Case #%d: %d\n", cs++, ans);
    }


	return 0;
}
