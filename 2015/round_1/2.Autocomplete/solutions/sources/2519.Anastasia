#include <stdio.h>
#include <iostream>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <cstring>
#include <math.h>
#include <algorithm>
#include <complex>
#include <ctime>
#include <iomanip>
#include <cassert>
#include <sstream>
#include <iterator>

using namespace std;

#define file "file"
#define mp make_pair
#define pb push_back
#define xx real()
#define yy imag()
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef complex<double> point;

const int MAXN = 1e6 + 5;
const int ALP = 26;

struct node{
    int nxt[ALP];
};

int sz = 2;
node trie[MAXN];
char s[MAXN];

int add_string(int n){
    int v = 1;
    int fl = 0;
    int ans = 0;
    for(int i = 0;i < n;i++) s[i] -= 'a';
    for(int i = 0;i < n;i++){
        if(!fl) ans++;
        if(!trie[v].nxt[s[i]]){
            fl = 1;
            trie[v].nxt[s[i]] = sz++;
        }
        v = trie[v].nxt[s[i]];
    }
    return ans;
}

void solve(){
    int n;
    sz = 2;
    for(int i = 0;i < MAXN;i++){
        for(int j = 0;j < ALP;j++){
            trie[i].nxt[j] = 0;
        }
    }
    scanf("%d",&n);
    ll ans = 0;
    for(int i = 0;i < n;i++){
        scanf("%s",s);
        int len = strlen(s);
        ans += add_string(len);
    }
    printf("%I64d\n",ans);
}

int main()
{
	#ifndef ONLINE_JUDGE
    assert(freopen("input.txt","r",stdin));
    assert(freopen("output.txt","w",stdout));
    #else
    //assert(freopen(file".in","r",stdin)); assert(freopen(file".out","w",stdout));
    #endif
	int t = 1;
	int cs = 1;
	scanf("%d",&t);
	while(t--){
        printf("Case #%d: ",cs++);
		solve();
	}
	return 0;
}
