#include <bits/stdc++.h>

using namespace std;

struct Trie {
	Trie *f[26];
	int cnt;
	
	Trie() {
		memset(f, 0, sizeof(f));
		cnt = 0;
	}
	~Trie() {
		for (int i = 0; i < 26; i++) {
			if (f[i] != NULL) {
				delete f[i];
			}
		}
	}
};

int T, N;
string S;
Trie *root;

void add(string &s) {
	Trie *t = root;
	t->cnt++;
	for (size_t i = 0; i < s.size(); i++) {
		int p = s[i] - 'a';
		if (t->f[p] == NULL) {
			t->f[p] = new Trie();
		}
		t = t->f[p];
		t->cnt++;
	}
}

int calc(string &s) {
	int ret = 0;
	Trie *t = root;
	for (size_t i = 0; i < s.size(); i++) {
		int p = s[i] - 'a';
		t = t->f[p];
		ret++;
		if (t->cnt == 1) {
			break;
		}
	}
	return ret;
}

int main() {
	freopen("date.in", "r", stdin);
	freopen("date.out","w", stdout);
	cin.sync_with_stdio(false);
	
	cin >> T;
	for (int t = 1; t <= T; t++) {
		cin >> N;
		int ans = 0;
		root = new Trie();
		for (int i = 0; i < N; i++) {
			cin >> S;
			add(S);
			int crt = calc(S);
			ans += crt;
		}
		cout << "Case #" << t << ": " << ans << '\n';
		delete root;
		cerr << t << '\n';
	}
	
//	srand(time(0));
//	int len = 0;
//	int num = 0;
//	for (int i = 1; ; i++) {
//		if (len + i > 1000000) {
//			break;
//		}
//		for (int j = 0; j < i; j++) {
//			cout << (char) ('a' + rand() % 26);
//		}
//		cout << '\n';
//		len += i;
//		num++;
//	}
//	cout << num << '\n';
//	cerr << len << '\n';
	
	return 0;
}
