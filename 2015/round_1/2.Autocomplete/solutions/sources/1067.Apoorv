#include<bits/stdc++.h>
using namespace std;
struct node
{
        node *child[26];
};
void insert(node* root, string key)
{
    int level;
    int length = key.length();
    int index;
    for( level = 0; level < length; level++ )
    {
        if( !root->child[key[level]-97] )
        {
            root->child[key[level]-97] = new node;
             for(int i = 0; i < 26; i++)
                 root->child[key[level]-97]->child[i] = NULL;
        }

        root = root->child[key[level]-97];
    }
}
int search(node *root, string key)
{
    int level;
    int length = key.length();
    int index;
    for( level = 0; level < length; level++ )
    {
       if( !root->child[key[level]-97] )
        return level;
        root=root->child[key[level]-97];
    }

    return length-1;
}
int main()
{
     string s;
   int t,n,ans=0,ca=0;
  freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
cin>>t;
while(t--){
    cin>>n;
    ans=0;
    ca++;
   node* root = NULL;
    root = new node;
    for(int i = 0; i < 26; i++)
        root->child[i] = NULL;

    for(int i = 0; i < n; i++)
    {
        cin>>s;
        int x=search(root, s)+1;
      //  cout<<x<<endl;
        insert(root, s);
         ans+=x;
}
cout<<"Case #"<<ca<<": ";
cout<<ans<<endl;
}
 fclose(stdout);
    return 0;
}
