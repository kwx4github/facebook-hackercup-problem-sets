#include <cstdio>
#include <iostream>
#include <fstream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctime>
#define rep(i,n) for(int i=0;i<n;i++)

using namespace std;

int T;
int N;
vector<string> words;
vector< pair<string, int> > words2;
vector<int> used;


int main()
{
    fstream fin("autocomplete2.txt",ifstream::in);
    fstream fout("autocomplete2.out",ofstream::out);
    fin >> T;
	char sstr[1000];
    for(int jj=1;jj<=T;jj++)
    {
        int ret = 0;
		fin >> N;
		words.resize(N);
		words2.resize(0);
		rep(i,N) {
			fin >> words[i];
			words2.push_back(make_pair(words[i], i));
		}

		sort(words2.begin(), words2.end());

		rep(i,N) {
			int st = 0;
			int end = words.size();
			int tot = 0;
			rep(j, words[i].size()) {
				ret++;
				tot = 0;
				while (st<words.size() && (j>=words2[st].first.size() || words[i][j]!=words2[st].first[j])) st++;
				int end1 = st;
				while (end1<end && j<words2[end1].first.size() && words[i][j]==words2[end1].first[j]) {
					if (words2[end1].second<=i) tot++;
					end1++;
				}
				end = end1;
				if (tot==1) break;
			}
		}

        cout << "Case #" << jj << ": " << ret << "\n";
		fout << "Case #" << jj << ": " << ret << "\n";
    }
    fin.close();
    fout.close();
    cout << "running time=" << clock()/(double)CLOCKS_PER_SEC << "\n";
    system("PAUSE");
    return 0;
}
