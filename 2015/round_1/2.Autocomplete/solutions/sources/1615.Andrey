using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace Round1Problem2
{
	public class Trie
	{
		public class Node
		{
			public Dictionary<char, Node> Edges = new Dictionary<char, Node>();
		}

		public Node Root = new Node();

		public int Add(string word)
		{
			var node = Root;
			int count = 1;
			bool f = false;
			for (int len = 1; len <= word.Length; len++) {
				var letter = word[len - 1];
				Node next;
				if (!node.Edges.TryGetValue(letter, out next)) {
					next = new Node();
					node.Edges.Add(letter, next);
					count--;
					f = true;
				}
				node = next;
				count++;
			}
			return count + (f ? 0 : -1);
		}
	}
}