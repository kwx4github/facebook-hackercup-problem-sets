// A.cpp : Defines the entry point for the console application.
//

#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <utility>
#include <set>
#include <cctype>
#include <queue>
#include <stack>
#include <fstream>
#include <cstring>

using namespace std;
#define ll long long

class Trie
{
public:
	Trie* next[30];
	int value;

	Trie(){for(int i=0;i<30;++i)next[i]=NULL;};
};

int main()
{
	int T;
	cin>>T;
	for(int _t=1;_t<=T;++_t){
		int N;
		cin>>N;

		ll ans = 0;
		Trie* pTrie = new Trie;
		Trie* root = pTrie;
		for(int wordNum = 0; wordNum < N; ++wordNum)
		{
			string word;
			cin>>word;

			 pTrie = root;
			//search
			for(int c = 0; c < word.length(); ++c)
			{
				++ans;
				if(!pTrie->next[word[c]-'a'])
				{
					break;
				}
				pTrie = pTrie->next[word[c]-'a'];
			}

			//insert
			pTrie = root;
			for(int c = 0; c < word.length(); ++c)
			{
				if(pTrie->next[word[c]-'a'] == NULL)
				{
					pTrie->next[word[c]-'a'] = new Trie();
				}
						
				pTrie = pTrie->next[word[c]-'a'];
			}
		}

		cout<<"Case #"<<_t<<": "<<ans<<endl;

		//clean
		pTrie = root;
		queue<Trie*> qTrie;
		qTrie.push(pTrie);
		while(!qTrie.empty())
		{
			pTrie = qTrie.front();
			qTrie.pop();
			for(int i = 0; i < 30; ++i)
			{
				if(pTrie->next[i])
					qTrie.push(pTrie->next[i]);
			}
			delete pTrie;
		}
	}

}



