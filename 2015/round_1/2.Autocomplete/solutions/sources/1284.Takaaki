#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

struct Node {
	Node *children[26];
	Node(){
		for(int i = 0; i < 26; ++i){ children[i] = nullptr; }
	}
/*
	~Node(){
		for(int i = 0; i < 26; ++i){
			if(children[i] != nullptr){ delete children[i]; }
		}
	}
*/
};

int main(){
	ios_base::sync_with_stdio(false);
	int T;
	cin >> T;
	for(int case_num = 1; case_num <= T; ++case_num){
		int n;
		cin >> n;
		int answer = 0;
		Node *root = new Node();
		for(int i = 0; i < n; ++i){
			string s;
			cin >> s;
			const int m = s.size();
			Node *cur = root;
			bool uniq = false;
			for(int j = 0; j < m; ++j){
				const int c = s[j] - 'a';
				if(!uniq){ ++answer; }
				if(cur->children[c] == nullptr){
					cur->children[c] = new Node();
					uniq = true;
				}
				cur = cur->children[c];
			}
		}
		delete root;
		cout << "Case #" << case_num << ": " << answer << endl;
	}
	return 0;
}

