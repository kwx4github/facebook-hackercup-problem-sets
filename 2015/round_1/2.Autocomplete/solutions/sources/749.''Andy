/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = 1000000007;
struct Node {
  Node* ch[26];

  Node() {
    memset(ch, 0, sizeof(ch));
  }
};
string wrd[111000];

int lcp(const string& a, const string& b) {
  int res = 0;
  while (res < (int) min(a.size(), b.size()) && a[res] == b[res])
    res++;
  return res;
}

void solve(int test_num) {
  int N;
  cin >> N;
  for (int i = 0; i < N; i++)
    cin >> wrd[i];
  Node* root = new Node();
  int sum = 0;
  for (int i = 0; i < N; i++) {
    Node* at = root;
    int now = 0;
    while (now < (int) wrd[i].size() && at->ch[wrd[i][now] - 'a']) {
      at = at->ch[wrd[i][now] - 'a'];
      now++;
    }
    if (now < (int) wrd[i].size())
      now++;
    sum += now;
    at = root;
    for (const char& c : wrd[i]) {
      if (!at->ch[c - 'a'])
        at->ch[c - 'a'] = new Node();
      at = at->ch[c - 'a'];
    }
  }
  printf("Case #%d: %d\n", test_num, sum);
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("autocomplete.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
  double start_t = clock();
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
