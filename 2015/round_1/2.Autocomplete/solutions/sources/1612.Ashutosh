#include <bits/stdc++.h>
using namespace std;
#define REP(a, b, c) for(int a = b; a < c; a++)
#define asd(x)              cout<<__LINE__<<" :: "<<#x<< ": "<<x<<endl;
#define asdf(x, y)          cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<endl;
typedef pair<int,int> ii;
typedef long long LL;


struct node{
    map<int, node*> child;
};

string cur;
void insert(node *root, int pos){
    
    while(pos < cur.size()){
        if(root->child.count(cur[pos] - 'a') == 0)
            root->child[cur[pos] - 'a'] = new node();
        root = root->child[cur[pos] - 'a'];
        pos++;
    }
    
}

int query(node *root, int pos){
    if(pos == cur.size()) return 0;
    char a = cur[pos];
    if(root->child.count(a-'a') == 0) return 1;
    return 1 + query(root->child[a-'a'], pos+1);
}


int main(){

    int test;
    cin >> test;
    REP(t, 0, test){
        node root;
        int N;
        cin >> N;
        long long ans = 0;
        while(N--){
            cin >> cur;
            ans += query(&root, 0);
            insert(&root, 0);
        }
        printf("Case #%d: %lld\n", t+1, ans);
    }

    return 0;
}
