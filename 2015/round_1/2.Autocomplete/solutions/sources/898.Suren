import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class A {
	// static int ans;

	static class TrieNode {
		Map<Character, TrieNode> m;
		int children;

		TrieNode() {
			children = 0;
			m = new HashMap<Character, TrieNode>();
		}
	}

	public static void main(String[] args) throws FileNotFoundException {
		Scanner sc = new Scanner(new File("a.txt"));

		int n = sc.nextInt();
		for (int caseno = 1; caseno <= n; caseno++) {
			int ts = sc.nextInt();

			TrieNode root = new TrieNode();
			List<String> input = new ArrayList<String>(ts);
			int ans = 0;
			while (ts-- > 0) {
				String toadd = sc.next() + "$";
				input.add(toadd);
				TrieNode c = root;
				for (int i = 0; i < toadd.length(); i++) {
					char cc = toadd.charAt(i);
					if (!c.m.containsKey(cc))
						c.m.put(cc, new TrieNode());
					c = c.m.get(cc);
					c.children++;
				}
//				dfs(root);
				c = root;
				for (int i = 0; i < toadd.length(); i++) {
					char cc = toadd.charAt(i);
					c = c.m.get(cc);
					if (c.children == 1) {
						int toadd_for = i + 1;
						if (cc == '$')
							toadd_for--;
						// System.out.println(" Adding : " + toadd + " - "
						// + toadd_for);
						ans += toadd_for;
						break;
					}
				}
			}

			// for (int j = 0; j < input.size(); j++) {
			// String toadd = input.get(j);
			//
			// }
			System.out.println("Case #" + caseno + ": " + ans);
		}
		sc.close();
	}

	private static int dfs(TrieNode r) {
		if (r.m.size() == 0) {
			return r.children = 1;
		}
		int a = 0;
		for (Map.Entry<Character, TrieNode> childd : r.m.entrySet()) {
			int toadd = dfs(childd.getValue());
			a += toadd;
		}
		return r.children = a;
	}

}
