#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import re

from collections import defaultdict

input = sys.stdin.read()
tokens = input.split("\n")
tokenI = 0


_end = '_end_'



def solve2():

    global tokens
    global tokenI

    N = int(tokens[tokenI])
    tokenI+=1


    key_strokes = 0
    root = dict()

    for i in range(N):
        word = tokens[tokenI]
        tokenI+=1

        current_dict = root
        for letter in word:
            if current_dict.has_key(letter):
                current_dict[letter][0] += 1
                current_dict = current_dict[letter][1]
            else:
                current_dict = current_dict.setdefault(letter, [1, {}])[1]
        current_dict = current_dict.setdefault(_end, [1, _end])

        current_dict = root
        for letter in word:
            key_strokes += 1
            nb = current_dict[letter][0]

            if nb == 1:
                break

            current_dict = current_dict[letter][1]

    print key_strokes




def mainLoop():
    global tokens
    global tokenI

    T = int(tokens[tokenI])
    tokenI+=1

    # print T

    for i in range(T):
        print "Case #%d:" % (i+1) , 
        solve2()

# print tokens

mainLoop()

