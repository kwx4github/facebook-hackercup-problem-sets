#include <stdio.h>
#include <memory.h>
#include <string.h>

using namespace std;

struct Trie
{
	int c[26];
	int cnt;

}trie[1000005];
int tc = 0;
char buf[1000005];

void process()
{

	memset(trie, 0, sizeof(trie));
	tc = 0;

	int n;
	int ans = 0;
	scanf("%d", &n);

	for (int i = 1; i <= n; i++) {
		scanf(" %s", buf);
		int len = strlen(buf);
		int x = 0;
		int j;
		for (j = 0; j < len; j++) {
			if (!trie[x].c[buf[j] - 'a']) trie[x].c[buf[j] - 'a'] = ++tc;
			x = trie[x].c[buf[j] - 'a'];
			trie[x].cnt++;
		}

		x = 0;
		for (j = 0; j < len; j++) {
			x = trie[x].c[buf[j] - 'a'];
			if (trie[x].cnt == 1) {
				ans += j + 1;
				break;
			}
		}
		if (j == len) ans += len;
	}

	printf("%d", ans);
}

int main()
{
	freopen("autocomplete.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	int t;
	scanf("%d", &t);
	for (int i = 1; i <= t; i++) {
		printf("Case #%d: ", i);
		process();
		printf("\n");
	}
	return 0;
}