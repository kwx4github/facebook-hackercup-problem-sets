#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define maxN 1000005

struct node
{
    int sons[26];
}dict[maxN];

int totIndex;

int dictIn(char* s)
{
    int now,next;
    now = 0;
    int num = 0;
    int l = strlen(s);
    while(*s)
    {
        next = (*s)-'a';
        if(dict[now].sons[next] == 0)
        {

            dict[now].sons[next] = totIndex++;
        }
        else
        {
            num++;
        }
        now = dict[now].sons[next];
        s++;
    }
    return num == l ? l : num+1;
}

int main()
{
    freopen("autocomplete.txt","r",stdin);
//    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int T;
    int N;
    char word[maxN];
    int num;
    scanf("%d",&T);
    for(int t = 1;t <= T;t++)
    {
        memset(dict,0,sizeof(dict));
        num = 0;
        totIndex = 1;
        printf("Case #%d: ",t);
        scanf("%d",&N);
        getchar();
        for(int i = 0;i < N;i++)
        {
            gets(word);
            num += dictIn(word);
        }
        printf("%d\n",num);
    }
    return 0;
}
