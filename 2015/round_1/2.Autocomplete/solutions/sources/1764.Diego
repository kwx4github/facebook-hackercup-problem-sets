#include<bits/stdc++.h>

using namespace std;

const int kMaxN = 1000050 ;
const int kNumLetters = 30;
const int kMaxNodes = 30000000;

int next[kMaxN][kNumLetters] , nodes , Tr[kMaxNodes];

inline int getPost(char c){
	return c-'a';
}

void init(){
    memset(next,-1,sizeof(next));
	memset(Tr,0,sizeof(Tr));
	nodes = 1;
}

void add(string &Str){
    int p = 0 , n = Str.size(),posSt;
	for(int i=0;i<n;++i){
	    posSt = getPost(Str[i]);
	    if(next[p][posSt] == -1)next[p][posSt] = nodes++;
		p = next[p][posSt];
		Tr[p]++;
	}
}

int getPr(string &Str){
	int p = 0, n = Str.size(),posSt;
	int ans = 0;
	for(int i=0;i<n;++i){
		posSt = getPost(Str[i]);
		p = next[p][posSt];
		ans++;
		if(Tr[p] == 1)return ans;
	}
	return ans;
}

int main(){
    int T,N,testCase = 0;
	string Str;
	scanf("%d",&T);
	while( T-- ){
	    scanf("%d",&N);
		init();
		long long ans = 0;
		for(int i=0;i<N;i++){
		    cin>>Str;
		
			add(Str);
			ans += getPr(Str);
		}
		printf("Case #%d: %d\n",++testCase,ans);
	}
}