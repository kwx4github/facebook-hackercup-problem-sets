#include <unordered_map>
#include <iostream>
#include <fstream>
#include <string>
using namespace std;

int main()
{
	ifstream source ("autocomplete.txt");
	ofstream target("o.txt");
	int T,N;
	source>>T;
	bool flag=false;
	for(int t = 0; t < T; t++) 
	{
		source>>N;
		string s;
		unordered_map <string,string> dict;
		vector<string> ins;
		for(int j=0; j<N; j++)
		{
			source>>s;
			ins.push_back(s);
			for(int x=1; x<=s.length(); x++)
				if(dict.count((s.substr(0,x)))==0)
					dict.insert(pair<string,string>(s.substr(0,x),s));
		}
		int themagicno=0;
		for(int j=0; j<N; j++)
		{
			s=ins[j];
			bool found=false;
			for(int x=1; x<=s.length(); x++)
			{
				if(dict.count((s.substr(0,x)))==1&&dict.at(s.substr(0,x))==s)
				{
					//cout<<"Case #"<<t+1<<": "<<s<<" "<<s.substr(0,x)<<" "<<x<<endl;
					themagicno+=x;
					break;
				}
				if(dict.count((s.substr(0,x)))==1&&!(dict.at(s.substr(0,x))==s)&&(x==s.length()-1||x==s.length()))
				{
					//cout<<"Case #"<<t+1<<": "<<s<<" "<<s.substr(0,x+1)<<" "<<s.length()<<endl;
					themagicno+=s.length();
					break;
				}
			}
		}
		target<<"Case #"<<t+1<<": "<<themagicno<<endl;
    }
}