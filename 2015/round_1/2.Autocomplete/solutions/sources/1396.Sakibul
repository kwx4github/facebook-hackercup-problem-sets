#include <bits/stdc++.h>

using namespace  std;

typedef long long ll;

#define clr(a) (a.clear())
#define MP(a,b) make_pair(a,b)
#define sz(x) (int)x.size()
#define mem(a,b) memset(a, b, sizeof(a))
#define Unique(store) store.resize(unique(store.begin(),store.end())-store.begin())
#define pb push_back
#define FAST ios_base::sync_with_stdio(0);cin.tie(0);

#define X first
#define Y second

typedef pair<int , int> pii;
typedef pair<ll , ll> pll;
const ll inf = 1;
const ll mod = 1LL;

#define SZ 100010

struct trie {
    int words;
    int M[26];
    trie () {
        memset(M, -1, sizeof M);
    }
};

vector <trie> T;
int cnt;
char word[1000000+10];

int addWord() {
    int node = 0, ans = strlen(word);
    bool f = 0;

    for(int i = 0; word[i]; i++) {
        if( T[node].M[ word[i]-'a' ] == -1 ) {
            T.push_back(trie());
            T[node].M[ word[i]-'a' ] = ++cnt;
            if (!f) {
                f = 1;
                ans = i + 1;
            }
        }
        node = T[node].M[ word[i]-'a' ];
    }

    return ans;
}

int main() {
#if defined JESI
        freopen("autocomplete.txt", "r", stdin);
        freopen("2.txt", "w", stdout);
#endif


    int t;
    scanf("%d", &t);

    for (int cs = 0; cs < t; cs++) {
        cnt = 0;
        T.clear();
        T.push_back(trie());

        int n;
        scanf("%d", &n);

        int ans = 0;
        for (int i = 0; i < n; i++) {
            scanf(" %s", word);
            ans += addWord();
        }

        printf("Case #%d: %d\n", cs + 1, ans);
    }

    return 0;
}






