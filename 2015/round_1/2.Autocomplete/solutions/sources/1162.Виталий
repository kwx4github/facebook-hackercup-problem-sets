import java.util.HashMap;
import java.util.Scanner;
import java.util.TreeSet;

/**
 * Created by Юлия on 18.01.2015.
 */
public class Autocomplete {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = Integer.parseInt(sc.nextLine());

        for(int i = 1; i <= t; i++) {
            int n = Integer.parseInt(sc.nextLine());
            String[] str = new String[n];
            for(int j = 0; j < n; j++)
            {
                str[j] = sc.nextLine();
            }
            System.out.println("Case #"+i+": " + new Autocomplete().getCount(str));
        }
    }

    long getCount(String[] str) {
        TreeSet<String> words = new TreeSet<String>();
        long count = 0L;
        for (String s : str) {
            //System.out.println("s = " + s);
            if (words.isEmpty())
            {
                words.add(s);
                count+=1;
            }
            else
            {

                String l = words.lower(s);
                String h = words.higher(s);

                int lc = findCommon(s, l);
                int hc = findCommon(s, h);

                int val = Math.min(Math.max(lc, hc) + 1, s.length());
                //System.out.println("l = " + l+  ",h = " + h + ", lc =" + lc + ",hc = " + hc + ", val = " + val);

                count += val;
                words.add(s);

            }

        }
        return count;
    }

    int findCommon(String a, String b) {
        if (b == null)
            return 0;
        for(int i = 1; i <=Math.min(a.length(),b.length()); i++)
            if (!a.substring(0, i).equals(b.substring(0, i)))
                return i-1;
        return Math.min(a.length(),b.length());
    }
}
