#include <cstdio>
#include <string>
#include <iostream>
#include <set>
#include <map>
#include <vector>

#define REP(i,n) for(int i = 0; i < n; ++i)

using namespace std;

class Node {
public:
	map<char,int> nxt;
	Node() {}
};

class Trie {
	vector<Node> nodes;
public:
	Trie() {
		nodes.push_back(Node());
	}
	int addString(const string& s) {
		int curr_node = 0;
		int result = 0;
		for (int i = 0; i < s.size(); ++i) {
			if (nodes[curr_node].nxt.find(s[i]) != nodes[curr_node].nxt.end()) {
				curr_node = nodes[curr_node].nxt[s[i]];
			} else {
				if (result == 0) result = i+1;
				nodes.push_back(Node());
				nodes[curr_node].nxt[s[i]] = nodes.size()-1;
				curr_node = nodes.size()-1;
			}
		}
		if (result == 0) result = s.size();
		return result;
	}
};


int main() {

	int tc;
	cin >> tc;

	REP(ic,tc) {

		int n;
		cin >> n;

		int ans = 0;
		Trie t;
		for (int i = 0; i < n; ++i) {
			string s;
			cin >> s;
			ans += t.addString(s);
		}

		cout << "Case #" << ic+1 << ": " << ans << endl;
	}

	return 0;
}
