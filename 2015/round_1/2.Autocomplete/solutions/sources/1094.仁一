#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cctype>

#include <iostream>
#include <string>
#include <vector>
#include <list>
#include <stack>
#include <queue>
#include <map>
#include <algorithm>

using namespace std;

char str[1000001];

typedef struct tree{
   tree *next[26];
   int count;
};

int temp, seted;

void add(tree *t, char *in){
   if(in[0]){
      if(t->count == 0){
         t->next[in[0]-'a'] = (tree*) calloc(1, sizeof(tree));
         t->count += 1;
         if(!seted){ temp = (in-str)+1; seted = 1; }
         add(t->next[in[0]-'a'], in+1);
      }else{
         if(t->next[in[0]-'a']){
            t->count += 1;   
            add(t->next[in[0]-'a'], in+1);
         }else{
            t->next[in[0]-'a'] = (tree*) calloc(1, sizeof(tree));
            if(!seted){ temp = (in-str)+1; seted = 1; }
            t->count += 1;
            add(t->next[in[0]-'a'], in+1);
         }
      }
   }else if(!seted) temp = strlen(str);
}

int main(){
   int tn, ti = 1;
   scanf("%d", &tn);
   
   while(tn--){
      int n;
      scanf("%d", &n);
      
      tree root;      
      memset(root.next, 0, sizeof(tree*)*26);
      root.count = 0;
      
      int ans = 0;
      for(int i = 0; i < n; ++i){
         scanf("%s", str);
         seted = 0;
         add(&root, str);
         //printf("[%d]", temp);
         ans += temp;
         
      }
      printf("Case #%d: %d\n", ti++, ans);
   }

   //system("pause");
   return 0;
}
