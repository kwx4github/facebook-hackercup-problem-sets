#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

const int MAXN = 1000010;

vector< pair<char, int> > trie[MAXN];
int fp[MAXN];
int node;

void init() {
	for(int i = 0; i < MAXN; ++i) trie[i].clear();
	memset(fp, 0, sizeof fp);
	node = 1;
}

int get(int f, char c) {
	for(int i = trie[f].size() - 1; i >= 0; --i)
		if(trie[f][i].first == c)
			return trie[f][i].second;
	return 0;
}

int add(char *s) {
	int len = strlen(s);
	int f = 0;
	int ret = len;
	for(int i = 0; i < len; ++i) {
		int tmp = get(f, s[i]);
		if(tmp == 0) {
			trie[f].push_back(make_pair(s[i], node));
			f = node;
			++node;
		} else {
			f = tmp;
		}
		++fp[f];
		if(fp[f] == 1) ret = min(ret, i + 1);
	}
	return ret;
}
 
int t, n;
char s[MAXN];

int main() {
	ios_base::sync_with_stdio(0);
	#ifndef ONLINE_JUDGE
		freopen("D:/in.txt","r",stdin);
		freopen("D:/out.txt","w",stdout);
		clock_t start = clock();
	#endif
	
	scanf("%d\n", &t);
	for(int tc = 1; tc <= t; ++tc) {
		scanf("%d\n", &n);
		init();
		int ans = 0;
		for(int i = 0; i < n; ++i) {
			scanf("%s", s);
            ans += add(s);
		}
		printf("Case #%d: %d\n", tc, ans);
	}
	
	#ifndef ONLINE_JUDGE
		fprintf(stderr, "\ntime=%.3lfsec\n", 0.001 * (clock() - start));
	#endif
	return 0;
}
