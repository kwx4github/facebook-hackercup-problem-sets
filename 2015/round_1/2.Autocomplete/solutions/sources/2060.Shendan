#include <iostream>
#include <cstring>
#include <cstdio>
#define N 26
#define maxn 10000000
using namespace std;

struct node
{
    int flag;
    int count;
    struct node *next[N];
}tree[maxn];

int t=0;
struct node *creat()
{
    int i;
    struct node *p;
    p=&tree[t++];
    p->count=1;
    p->flag=0;
    for(i=0;i<N;i++)
    {
        p->next[i]=NULL;
    }
    return p;
}

void insert(struct node **root,char *s)
{
  int i,k;
  struct node *p;
  if(!(p=*root))
    {
      p=*root=creat();
    }
  i=0;
  while(s[i])
    {
      k=s[i++]-'a';
      if(p->next[k])
	p->next[k]->count++;
      else
	p->next[k]=creat();
      p=p->next[k];
    }
  p->flag=1;
}

int search(struct node **root,char *s)
{
    int i=0,k;
    struct node *p;
    if(!(p=*root))
    {
        return 1;
    }
    while(s[i])
      {
	k=s[i++]-'a';
	if(!(p->next[k]))
	  return i;
	p=p->next[k];
      }
    return i;
    
}


int main()
{
  int T,tot,tmp;
  cin>>T;
  char s[1000009];
  for(int i=1; i<=T; i++)
    {
      struct node *root=NULL;
      int n; 
      cin>>n;
      tot=0;
      for (int j=1; j<=n; j++)
	{
	  cin>>s;
	  tmp=search(&root,s);
	  //	  cout<<j<<" "<<tmp<<endl;
	  tot=tot+tmp;
	  insert(&root,s);
	}
      //cout<<endl;
      cout<<"Case #"<<i<<": "<<tot<<endl;
    }
    return 0;
}
