//============================================================================
// Name        : code.cpp
// Author      : vlade087
// Version     : 1.0
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================
#include<stdio.h>
#include<iostream>
#include<sstream>
#include<math.h>
#include<ctype.h>
#include<vector>
#include<stack>
#include<queue>
#include<map>
#include<set>
#include<string.h>
#include<algorithm>
#include <complex>
#include <numeric>
#include<list>
#include<deque>
#include <stdlib.h>
#define printnVector(R) cout<<R.size()<<endl;for(int i =0;i<R.size();i++) cout<<R[i]<<" ";
#define mod 1000000007
#define inf 200000000000000000L
#define countbits __builtin_popcount
#define sz sizeof
#define mp make_pair
#define pb push_back
#define ll long long
#define ull unsigned long long
#define mset memset
#define sz sizeof
#define maxn 10000001
#define EPS 1e-9
#define par pair<int,int>
using namespace std;
class trie{
	public:
		trie * A[26];
		trie(){
			for(int i = 0; i < 26;i++)
				A[i] = NULL;
		}
};
int tt;
int calc(){
	int ans = 0;
	int n;
	cin>>n;
	string cad;
	trie * root = new trie();
	for(int i = 0; i < n;i++){
		cin>>cad;
		trie * a = root;
		bool use = false;
		for(int j = 0; j < cad.length();j++){
			if(a->A[cad[j]-'a'] == NULL){
				if(!use){
					ans = ans + j + 1;
					use = 1;
				}
				a->A[cad[j]-'a'] = new trie();	
			}
			a = a->A[cad[j]-'a'];
		}
		if(!use) ans+=cad.length();
	}
	return ans;
}
int main(){
	ios_base::sync_with_stdio(0);
	freopen("autocomplete.txt","r",stdin);
	freopen("t.txt","w",stdout);
	cin>>tt;
	for(int w=1;w<=tt;w++){
			printf("Case #%d: %d\n",w,calc());
	}
	return 0;
}
