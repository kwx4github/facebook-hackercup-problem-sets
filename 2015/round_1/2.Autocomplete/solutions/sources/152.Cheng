#include <bits/stdc++.h>
//typedef unordered_map<int,int> umap
typedef long long int lnt;
typedef double dou;
using namespace std;
//typedef struct{int x,y;}edge;
#define N 1000514

int nx[N][26],spt;
int newnode(){
	for(int i=0;i<26;i++)
		nx[spt][i]=0;
	return spt++;
}

int ans;
void add(char*s,int p){
	int flag=1;
	for(int i=0;s[i];i++){
		int a=s[i]-'a';
		ans+=flag;
		if(nx[p][a]==0){
			nx[p][a]=newnode();
			flag=0;
		}
		p=nx[p][a];
	}
}
char s[N];
int n;
void sol(int uuu){
	scanf("%d",&n);
	spt=1;
	ans=0;
	int root=newnode();
	for(int i=0;i<n;i++){
		scanf("%s",s);
		add(s,root);
	}
	printf("Case #%d: %d\n",uuu,ans);
}
int main(){
	freopen("autocomplete.txt","r",stdin);
	freopen("PBout.txt","w",stdout);
	int t;
	scanf("%d",&t);
	for(int i=0;i<t;i++){
		sol(i+1);
	}
	return 0;
}
