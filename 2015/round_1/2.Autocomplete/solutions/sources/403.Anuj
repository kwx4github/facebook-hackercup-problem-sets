#include<iostream>
#include<cstdio>
#include<set>
#include<string>
#define mp make_pair
#define M 1000100
using namespace std;
set<pair<char,int> > tree[M];
int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int i,j,k,t,n,Case,N,node,ans;
    pair<char,int> ele;
    bool solve;
    cin>>t;
    Case=0;
    string s;
    while(t--)
    {
        Case++;
        scanf("%d",&n);
        ans=0;
        set<pair<char,int> >::iterator it;
        N=1;
        tree[0].insert(mp('{',0));
        for(i=0;i<n;i++)
        {
            cin>>s;
            j=0;
            node=0;
            solve=false;
            while(j<s.length())
            {
                it=tree[node].lower_bound(mp(s[j],-1));
                ele=*it;
                if(ele.first==s[j])
                {
                    node=ele.second;
                }
                else
                {
                    if(!solve)
                    {
                        ans+=j+1;
                        solve=true;
                    }
                    tree[node].insert(mp(s[j],N));
                    tree[N].insert(mp('{',0));
                    node=N;
                    N++;
                }
                j++;
            }
            if(!solve)
            {
                ans+=(int) s.length();
            }
        }
        cout<<"Case #"<<Case<<": "<<ans<<endl;
        for(i=0;i<M;i++) tree[i].clear();
    }
    return 0;
}
