#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <cstring>

using namespace std;

#define pb push_back
#define len length()
#define clr clear()

#define eps 0.0000001
#define PI  3.14159265359
#define inf 1999888777

FILE *fin, *fout;

int br,res;
int sled[3000555][35];
char ps[3000555];
string s;

int napravicvor() {
    br++;
    for(int i='a'; i<='z'; i++) sled[br][i-'a'] = -1;

    return br;
}

void ubaci(string s) {

    int tr,i;
    bool bb;

    tr = 1;

    bb = true;

    for(i=0; i<s.length(); i++) {
        if (bb) res++;
        if (sled[tr][s[i]-'a'] == -1) {
            bb = false;
            sled[tr][s[i]-'a'] = napravicvor();
        }
        tr = sled[tr][s[i]-'a'];
    }
}

int main() {

    int t,n,i,T;

    //fin = stdin;
    //fout = stdout;
    fin = fopen("autocomplete.txt", "r");
    fout = fopen("autocomplete_output.txt", "w");

    fscanf(fin, "%d", &T);
    for(t=1; t<=T; t++) {

        fscanf(fin, "%d", &n);

        br = 0;
        napravicvor();

        res = 0;

        for(i=0; i<n; i++) {
            fscanf(fin, "%s", &ps);
            s = string(ps);
            ubaci(s);
        }

        fprintf(fout, "Case #%d: ", t);
        fprintf(fout, "%d\n", res);
    }

    return 0;
}
