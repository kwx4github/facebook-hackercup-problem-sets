package Round1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;

public class Autocomplete {
	public static void main(String[] args) throws NumberFormatException, IOException {
		File inFile = new File("input.txt");
		BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(inFile)));
		PrintWriter pw = new PrintWriter(new File("output_autocomplete.txt"));
		int num = Integer.parseInt(reader.readLine());
		for(int i=0; i<num; i++){
			int wordCount = Integer.parseInt(reader.readLine());
			TrieNode root = new TrieNode(' ');
			int sum = 0;
			for(int j=0; j<wordCount; j++){
				String str = reader.readLine();
				int tmp = insertWord(root, str);
//				System.out.println((i+1)+": "+ str+" ==> "+tmp);
				sum += tmp;
			}
			pw.println("Case #" + (i+1)+": "+sum);
		}
		pw.flush();
		pw.close();
		reader.close();
		
	}
	public static int insertWord(TrieNode root, String str){//return # letters need to type. 
		char arr[] = str.toCharArray();
		TrieNode current = root;
		for(int i=0; i<arr.length; i++){
			if(current.children[arr[i]-'a'] == null){
				int result = i+1;
				for(;i<arr.length; i++){
					current.children[arr[i]-'a'] = new TrieNode(arr[i]);
					current = current.children[arr[i]-'a'];
				}
				return result;
			}
			else current = current.children[arr[i]-'a'];
		}
		return arr.length;
	}
}
class TrieNode{
	char letter;
	TrieNode []children;
	public TrieNode(char letter){
		this.letter = letter;
		children = new TrieNode[26];
//		for(int i=0; i<26; i++)
//			children[i] = null;
	}
}
