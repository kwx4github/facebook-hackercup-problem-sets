#include <iostream>
#include <sstream>
#include <fstream>
#include <ctime>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <bitset>
#include <queue>
#include <deque>
#include <list>
#include <algorithm>
#include <iomanip>

using namespace std;

typedef pair<int, int> pt;
typedef long long li;
typedef long double ld;

template<typename X> inline X abs(const X& a) { return a < 0 ? -a: a; }
template<typename X> inline X sqr(const X& a) { return a * a; }

#define forn(i,n) for(int i = 0; i < int(n); i++)
#define pb push_back
#define sz(a) int(a.size())
#define mp make_pair
#define all(a) a.begin(), a.end()
#define ford(i,n) for (int i = int(n) - 1; i >= 0; i--)
#define fore(i,l,r) for (int i = int(l); i <= int(r); i++) 
#define ft first
#define sc second
#define x first
#define y second

const int INF = int(1e9);
const li INF64 = li(1e18);
const ld EPS = ld(1e-9);
const ld PI = acos(-1.0);

const int N = 100 * 1000 + 13;
set <li> was;
int n;
const li P = 1000000007;

inline bool read()
{
	cin >> n;	
	return true;
}

 
inline void solve()
{
	int ans = 0;
	was.clear();
	for(int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		bool fl = 1;
		li cur = 0;
		li st = 1;
		for(int j = 0; j < sz(s); j++)
		{
			cur += s[j] * st;
			st *= P;
			if(was.count(cur) == 0)
			{
				ans += j + 1;
				fl = 0;
				break;
			}
		}
		if(fl)
			ans += sz(s);
		cur = 0;
		st = 1;
		for(int j = 0; j < sz(s); j++)
		{
			cur += s[j] * st;
			st *= P;
			was.insert(cur);
		}
	}
	cout << ans << endl;
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    
    /*cout << 1000 << endl;
    for(int i = 0; i < 1000; i++)
   	{
    	for(int k = 0; k < 970; k++)
    		cout << 'a';
    	for(int k = 970; k < 1000; k++)
    		cout << char('a' + rand() % 26);
    	cout << endl;
    }    
    return 0;*/
              

    cerr << setprecision(10) << fixed;
    cout << setprecision(15) << fixed;
    
    srand(time(NULL));

    int tests;
    cin >> tests;
    //tests = 1;
    for(int test = 0; test < tests; test++)
    {
    	cerr << test << endl;
    	printf("Case #%d: ", test + 1);
    	assert(read());
    	solve();
   	}
        
    cerr << "TIME: " << clock() << endl;
   
    return 0;
}