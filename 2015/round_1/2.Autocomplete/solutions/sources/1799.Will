#include <iostream>
#include <string>
using namespace std;

struct Node {
	int wordsBelow;
	Node *children[26];

	Node() {
		wordsBelow = 0;
		for (int i = 0; i < 26; i++) {
			children[i] = 0;
		}
	}
};

class Trie {
public:

	Trie() {
		head = new Node;
	}

	void add(string str)
	{
		Node *current = head;
		for (int i = 0; i < str.size(); i++) {
			int c = str[i] - 'a';

			if (!current->children[c]) {
				current->children[c] = new Node;
			}

			current = current->children[c];
			current->wordsBelow = current->wordsBelow + 1;
		}
	}

	int keyStrokes(string str) {
		Node *current = head;
		for (int i = 0; i < str.size(); i++) {
			int c = str[i] - 'a';
			
			current = current->children[c];
			if (current->wordsBelow == 1) return i + 1;
		}

		return str.size();
	}

private:
	Node *head;
};


int main()
{
	int testCases, words, counter;
	string str;
	cin >> testCases;

	for (int c = 0; c < testCases; c++) {
		cin >> words;
		
		Trie t;
		counter = 0;
		for (int i = 0; i < words; i++) {
			cin >> str;

			t.add(str);
			counter += t.keyStrokes(str);
		}

		cout << "Case #" << c + 1 << ": " << counter << endl;
	}

	return 0;
}
