#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>

using namespace std;

const int V = 1000000 + 10;

int n;
int root, tot;
int ch[V][26];

int newNode()
{
	memset(ch[tot], -1, sizeof ch[tot]);
	return tot ++;
}

char s[V];

int addIt(char *c)
{
	int ret = 0;
	int cur = root;
	int flag = false;
	for( ; *c; c++) {
		if (ch[cur][*c - 'a'] >= 0) {
			++ ret;
		} else {
			ch[cur][*c - 'a'] = newNode();
			flag = true;
		}
		cur = ch[cur][*c - 'a'];
	}
	if (flag)
		return ret + 1;
	return ret;
}

void solve()
{
	cin >> n;
	tot = 0;
	root = newNode();
	int ret = 0;
	for(int i = 0; i < n; ++ i) {
		scanf("%s", s);
		ret += addIt(s);
	}
	cout << ret << endl;
}

int main()
{
	int t;
	cin >> t;
	for(int i = 1; i <= t; ++ i) {
		cout << "Case #" << i << ": ";
		solve();
	}
	return 0;
}
