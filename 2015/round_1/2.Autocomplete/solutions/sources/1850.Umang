#include <iostream>
#include <map>
#include <cstdio>
#include <cstring>
#include <set>
#include <vector>
#include <bitset>
#include <algorithm>

using namespace std;
char str[1000005];
typedef struct trie {
	struct trie *next[26];
	int flag;

	trie()
	{
		for ( int i = 0; i < 26; i++) {
			next[i] = NULL;
		}
		flag = 0;
	}
}nod;

int insert (nod *root, char *str)
{
	int count = 0;
	int flag = 0;
	for ( int i = 0; i < strlen(str); i++) {

		if ( root -> next[str[i]-'a'] == NULL ) {
			root -> next[str[i]-'a'] = new nod;
			root = root -> next[str[i]-'a'];

			if ( flag == 0) {
                count++;
                flag = 1;
			}

		}else if ( root -> next[str[i]-'a'] != NULL ) {
			root = root -> next[str[i]-'a'];
			count++;
		}
	}
	root -> flag = 1;
	return count;
}

int main()
{    
	freopen("autocomplete.txt","r",stdin);
    freopen("out.txt","w",stdout);
	int t;
	int n;
	int ans = 0;


	scanf("%d",&t);
    int cnt=1;
	while (t--)
	{
		scanf("%d",&n);

		nod *head;
		head = new nod;
        ans = 0;
		for ( int i = 0; i < n; i++) {
			scanf("%s",str);
			ans +=  insert ( head, str);
		}
		printf("Case #%d: %d\n",cnt,ans);
		cnt++;
	}
	return 0;
}

