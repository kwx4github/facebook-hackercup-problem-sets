#define _CRT_SECURE_NO_WARNINGS

#pragma comment (linker, "/STACK:1000000000")

#include <cstdio>
#include <queue>
#include <ctime>
#include <set>
#include <algorithm>
#include <string>
#include <vector>
#include <cassert>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <memory>
#include <deque>
#include <stack>
#include <map>
#include <unordered_set>
#include <list>

using namespace std;

#define pb push_back
#define pob pop_back
#define rs resize
#define as assign
#define lwb lower_bound
#define upb upper_bound
#define mp make_pair
#define all(v) v.begin(), v.end()
#define sz(a) (int)a.size()
#define forn(i, n) for (int i = 0; i < n; ++i)
#define ford(i, n) for (int i = n - 1; i >= 0; --i)

typedef long long ll;
typedef short int shi;
typedef unsigned short int ushi;
typedef unsigned int ui;
typedef unsigned long long ull;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <ll> vl;
typedef vector <vl> vvl;
typedef vector <bool> vb;
typedef vector <vb> vvb;
typedef vector <string> vs;
typedef vector <vs> vvs;
typedef vector <char> vc;
typedef vector <vc> vvc;
typedef vector <vvc> vvvc;
typedef vector <vvi> vvvi;
typedef vector <vvvi> vvvvi;
typedef vector <vvl> vvvl;
typedef vector <vvvl> vvvvl;
typedef vector <vvb> vvvb;
typedef double db;
typedef long double ldb;
typedef vector <db> vdb;
typedef vector <vdb> vvdb;
typedef vector <vvdb> vvvdb;
typedef vector <ldb> vldb;
typedef pair <int, int> ii;
typedef pair <int, char> ic;
typedef pair <ll, ll> lll;
typedef pair <int, ll> il;
typedef pair <ll, int> li;
typedef vector <ii> vii;
typedef vector <ic> vic;
typedef vector <vic> vvic;
typedef vector <vii> vvii;
typedef vector <lll> vll;
typedef vector <vll> vvll;
typedef set <int> si;
typedef set <ll> sl;
typedef set <pair <ll, int> > sli;
typedef set <pair <ll, ll> > sll;
typedef set <ii> sii;
typedef set <pair <int, bool> > sib;
typedef vector <si> vsi;
typedef vector <sii> vsii;
typedef map <int, int> mii;
typedef map <string, char> msc;
typedef map <char, int> mci;
typedef queue <int> qi;
typedef deque <int> di;
typedef stack <int> sti;

const ll inf = (ll)1e9 + 9;
const db eps = 1e-10;   
const int M = 1000;
const int N = 1000005;
const ll P = (ll)1e9 + 7;
const int K = 11;

clock_t start = clock();

struct vert
{
	int next[26];
};

vector <vert> bor;

int find(string s)
{
	int v = 0;
	for (int i = 0; i < sz(s); ++i)
	{
		char c = s[i] - 'a';
		if (bor[v].next[c] == -1)
			return i;
		v = bor[v].next[c];
	}
	return sz(s) - 1;
}

void add(string s)
{
	int v = 0;
	for (int i = 0; i < sz(s); ++i)
	{
		char c = s[i] - 'a';
		if (bor[v].next[c] == -1)
		{
			bor[v].next[c] = sz(bor);
			vert t;
			memset(t.next, -1, sizeof t.next);
			bor.pb(t);
		}
		v = bor[v].next[c];
	}
}

int main() 
{ 		 
#ifndef ONLINE_JUDGE
    freopen("autocomplete.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif;
	int T;
	cin >> T;
	for (int t = 1; t <= T; ++t)
	{
		int n;
		cin >> n;
		vert root;
		memset(root.next, -1, sizeof root.next);
		bor.pb(root);
		int ans = 0;
		for (int i = 0; i < n; ++i)
		{
			string s;
			cin >> s;
			int p = find(s);
			ans += p + 1;
			add(s);
		}
		cout << "Case #" << t << ": " << ans << '\n';
		bor.clear();
	}
	return 0;
}