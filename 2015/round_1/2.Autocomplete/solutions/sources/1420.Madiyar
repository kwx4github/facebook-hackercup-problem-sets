#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <ctime> 
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define vi vector<int>
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()
#define forit(it,v) for (__typeof(v.begin()) it = v.begin(); it != v.end(); ++it)
#define f0(a) memset(a, 0, sizeof(a))
#define ll long long
#define next _next
const int maxn = (int)2e6;
char s[maxn];
int n;
int next[maxn][27];
int cnt[maxn];
int size = 0;
string word[maxn];
void Solve() {
	memset(next, -1, sizeof(next));
	memset(cnt, 0, sizeof(cnt));
	size = 1;

	scanf("%d", &n);
	int ans = 0;
	for (int it = 0; it < n; ++it) {
		scanf("\n%s", s);
		word[it] = s;
		int cur = 0, inc = 1;
		for (int i = 0; s[i]; ++i) {
			int c = s[i] - 'a';
			if (next[cur][c] == -1)
				next[cur][c] = size++;
			cur = next[cur][c];
			ans += inc;
			if (cnt[cur] == 0) inc = 0;
			cnt[cur]++;
		} 
	}
	/*
	int ans = 0;
	for (int i = 0; i < n; ++i) {
		int cur = 0;
		for (int j = 0; j < word[i].length(); ++j) {
			int c = word[i][j] - 'a';
			cur = next[cur][c];
			ans++;
			if (cnt[cur] == 1) break;
		}
		cout << ans << endl;
	}*/
	cout << ans << endl;
}
int main() {
	int tests;
	scanf("%d", &tests);
	for (int test = 1; test <= tests; ++test) {
		printf("Case #%d: ", test); 
		Solve();
	}
	return 0;
}

