#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
using namespace std;

char box[1000001]; // store scanf every time
char record[1000001]; // store auto filled
long position[100000]; // store starting position from the record
long length[100000];
long newposition; // store starting position from the record

long temp[1000000];

int main(){
	FILE *fout, *fin;
	fout =fopen("output.txt", "w");
	fin=fopen("input.txt","r");

	int T; fscanf(fin, "%d", &T); for (int t=0; t<T; t++){	
		memset(&box[0], 0, sizeof(box));
		memset(&record[0], 0, sizeof(record));

		printf("%d\n", t);
		newposition=0;
		long long sum=0;long N;
		fscanf(fin, "%ld", &N);


		fscanf(fin, "%s", &box);
		long lenfix=strlen(box); strcat(record, box); position[0]=0;
		newposition+=lenfix; length[0]=lenfix; sum+=1;

		for (long i=1; i<N; i++){ // number
			fscanf(fin, "%s", &box);
			lenfix=strlen(box);
			long lenv=1;
			long head=0, tail=0;
			// 1 st times
			char test=box[lenv-1];
			bool signal=1;
			for (int k=0; k<i; k++){
				if (test==record[position[k]]){
					signal=0;
					temp[tail]=k;
					tail++;
				}
			}
			if (signal==1 || lenv==lenfix){// done
			}
			else{
				lenv++;
				signal=1;
				while (lenv!=lenfix){
					test=box[lenv-1];
					long ctail=tail;
					for (;head<=ctail; head++){
						if (length[temp[head]]>=lenv){ //
							if (test==record[position[temp[head]]+lenv-1]){
								signal=0;
								temp[tail]=temp[head];
								tail++;
							}
						}
					}
					if (signal==1){ // done
						break;
					}
					else{
						lenv++;
						signal=1;
					}
				}
			}
			strcat(record, box);
			position[i]=newposition;
			length[i]=lenfix;
			newposition+=lenfix;
			sum+=lenv;

		}
		fprintf(fout, "Case #%d: %ld\n",t+1, sum);
	}
	fclose(fout);
	fclose(fin);
	return 0;
}