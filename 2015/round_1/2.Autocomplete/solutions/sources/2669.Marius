#include <iostream>
#include <stdio.h>
#include <string>
#include <algorithm>
#include <set>
#include <string.h>

using namespace std;

int maxdif(string a, string b) {
    //if(b == NULL)
      //  return 0;
    for(int i = 0; i < a.size(); ++i) {
        if( i > b.size())
            return i+1;
        if(a[i] != b[i]) return i+1;
    }
    return a.size();
}
set<string> my_words;
int main()
{
    freopen("A.in", "r", stdin);
    freopen("A.out", "w", stdout);
    int T, N;
    cin>>T;


    for( int ii = 1; ii <= T; ++ii) {
        my_words.clear();
        cin>>N;
        int total = 0;
        for(int i = 0; i < N;++i) {
            string word;
            cin>>word;
            set<string>::iterator itlow = my_words.lower_bound(word), itup = my_words.end();


            int optim = 1;
            if(itlow != my_words.end())
                optim = max(optim,maxdif(word,*itlow));
            if(itlow != my_words.begin())
                itup = --itlow;

            if(itup != my_words.end())
                optim = max(optim,maxdif(word,*itup));
            my_words.insert(word);
            total += optim;
        }
        cout<<"Case #"<<ii<<": "<<total<<endl;

    }

    return 0;
}
