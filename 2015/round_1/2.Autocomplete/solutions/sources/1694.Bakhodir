#include <cstdio>
#include <cmath>
#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;

const int MAXN = 2000001;

struct node {
    int next[26];
    bool leaf;
};

node t[MAXN];
int tsz = 0;
char s[MAXN];

int add_string(int v){
    int len = (int) strlen(s);
    int cnt = 1;
    bool end = false;
    
    for (int i = 0; i < len; i++) {
        char c = s[i] - 'a';
        if (!end) {
            cnt = max(cnt, i + 1);
        }
        if (t[v].next[c] == 0) {
            t[v].next[c] = tsz++;
            end = true;
        }
        v = t[v].next[c];
    }
    
    t[v].leaf = true;
    return cnt;
}

void solveTest() {
    for (int i = 0; i < tsz; i++) {
        for (int j = 0; j < 26; j++) {
            t[i].next[j] = 0;
        }
    }
    tsz = 0;
    
    int root = tsz++;
    
    int n;
    scanf("%d", &n);
    
    int res = 0;
    for (int i = 0; i < n; i++) {
        scanf("%s", s);
        int add = add_string(root);
        res += add;
    }
    printf("%d", res);
}

void solve() {
    int T;
    scanf("%d", &T);
    
    for (int i = 1; i <= T; i++) {
        printf("Case #%d: ", i);
        solveTest();
        printf("\n");
    }
}

int main() {
    freopen("autocomplete.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
    
    solve();
}
