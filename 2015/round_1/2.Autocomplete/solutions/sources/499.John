#include <vector>
#include <string>
#include <cstdio>
#include <deque>
#include <cassert>
#include <cstring>
using namespace std;

#define V(x) vector<x >
#define vs V(string)
#define vi V(int)
#define vd V(double)

#define fr(x,y,z) for((x)=(y);(x)<(z);(x)++)
#define fo(x,y) fr(x,0,y)
#define fir(n) fo(i,n)
#define fjr(n) fo(j,n)
#define fkr(n) fo(k,n)
#define fi fir(n)
#define fj fjr(n)

#define pb push_back
#define sz size()
#define cs c_str()

char buf[1000001];

struct T {
  T() : ch(26) {}
  ~T() {
    int i;
    fir(26) delete ch[i];
  }
  V(T*) ch;
};

int pre(T**t, int w) {
  if(!*t) return 0;
  if(!buf[w]) return 0;
  return 1+pre(&(*t)->ch[buf[w]-'a'], w+1);
}

int ins(T**t, int w) {
  if(!*t) *t=new T();
  if(!buf[w]) return 0;
  return 1+ins(&(*t)->ch[buf[w]-'a'], w+1);
}

int main(void) {
  int nc;
  assert(scanf("%d",&nc)==1);
  for(int cas=1;cas<=nc;cas++) {
    int i,n;
    assert(scanf("%d",&n)==1);
    int ans=0;
    T *root=new T();
    fi {
      assert(scanf("%s",buf)==1);
      ans+=pre(&root, 0);
           ins(&root, 0);
    }
    delete root;
    printf("Case #%d: %d\n",cas,ans);
  }
  return 0;
}
