import java.io.*;
import java.util.HashSet;
import java.util.StringTokenizer;

// bydlocode
public class Main {
	private static HashSet<String> prefix = new HashSet<>();
	private static HashSet<String> words = new HashSet<>();

	public static void main(String[] args) throws IOException {
		//Scanner sc = new Scanner(new BufferedReader(new FileReader(new File("input.txt"))));
		//BufferedWriter bw = new BufferedWriter(new FileWriter(new File("output.txt")));
		InputReader in = new InputReader(new FileInputStream(new File("autocomplete.txt")));
		PrintWriter out = new PrintWriter(new FileOutputStream(new File("output.txt")));
		int t = in.nextInt();
		for (int k = 0; k < t; k++) {
			prefix.clear();
			words.clear();
			out.print("Case #" + (k + 1) + ":");
			int n = in.nextInt();
			int count = 0;
			for (int i = 0; i < n; i++) {
				String word = in.next();
				String temp = "";
				for (int j = 0; j < word.length(); j++) {
					temp += word.charAt(j);
					if (!prefix.contains(temp) && !words.contains(temp)) {
						prefix.add(temp);
						count += temp.length();
						break;
					} else if (j == (word.length() - 1)) {
						count += (temp.length() + 1);
					}
				}
				words.add(word);
			}
			out.println(" " + count);
		}
		out.close();
		/*int t = sc.nextInt();
		for (int i = 0; i < t; i++) {
			bw.write("Case #" + (i + 1) + ":");
			bw.newLine();
		}
		bw.close();*/
	}
}

class InputReader {
	public BufferedReader reader;
	public StringTokenizer tokenizer;

	public InputReader(InputStream stream) {
		reader = new BufferedReader(new InputStreamReader(stream), 32768);
		tokenizer = null;
	}

	public String next() {
		while (tokenizer == null || !tokenizer.hasMoreTokens()) {
			try {
				tokenizer = new StringTokenizer(reader.readLine());
			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}
		return tokenizer.nextToken();
	}

	public int nextInt() {
		return Integer.parseInt(next());
	}

	public long nextLong() {
		return Long.parseLong(next());
	}

}