import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;

public class B {

	public static void main(String[] args) throws Exception {
		
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

		class Dictionary {
			private Dictionary[] data = new Dictionary[26];
			private int wordCount = 0;
			
			public Dictionary() {}

			// word must not be in dictionary
			public void addWord(String word) {
				Dictionary d = this;
				d.wordCount++;
				for (int i = 0; i < word.length(); i++) {
					char ch = word.charAt(i);
					if (d.data[ch - 'a'] == null) {
						d.data[ch - 'a'] = new Dictionary();
					}
					d = d.data[ch - 'a'];
					d.wordCount++;
				}
			}
			
			// shortest prefix, word must be in dictionary
			public String getPrefix(String word) {
				StringBuffer p = new StringBuffer();
				Dictionary d = this;
				int i = 0;
				do {
					char ch = word.charAt(i++);
					p.append(ch);
					d = d.data[ch - 'a'];
				}
				while (i < word.length() && d.wordCount != 1);
				return p.toString();
			}
 		}
		
		int T = Integer.parseInt(in.readLine());
        for (int t = 0; t < T; t++) {
			
        	int N = Integer.parseInt(in.readLine());

        	Dictionary dict = new Dictionary();
        
        	int min = 0;
    		for (int i = 0; i < N; i++) {
				String word = in.readLine();
				dict.addWord(word);
				String prefix = dict.getPrefix(word);
				min += prefix.length();
			}
			out.println("Case #" + (t+1) + ": " + min);
		}
        out.close();
	}
}
