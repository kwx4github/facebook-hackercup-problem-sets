#include <iostream>
#include <unordered_set>
#include <cstdio>
#include <ctime>
#define ff(i, n) for(int i = 0; i < n; i++)
#define ff1(i, a, b) for(int i = a; i < b; i++)
#define _ ios::sync_with_stdio(0);
using namespace std;
typedef long long int ll;
typedef unordered_set<ll> llset;

unordered_set<ll> st;
//unordered_set<string> _st;

int main(){ _
	/*clock_t start;
    double duration;
    start = std::clock();*/
	int t; cin >> t;
	llset::hasher fn = st.hash_function();
	ff1(tt, 1, t+1){
		cout << "Case #" << tt << ": ";
		
		st.clear(); //_st.clear();
		int n; cin >> n; ll c = 0;

		while(n--){
			string s; ll hk = 0; cin >> s;
			ff(i, s.size()){ c++; hk = hk*100 + (s[i] - 'a'); if(st.find(fn(hk)) == st.end()) break; } hk = 0;
			ff(i, s.size()){ hk = hk*100 + (s[i] - 'a'); st.insert(fn(hk)); }
		}

		cout << c << endl;
	}
	/*duration = (clock() - start) / (double) CLOCKS_PER_SEC;
	cout << duration << endl;*/

	return 0;
}