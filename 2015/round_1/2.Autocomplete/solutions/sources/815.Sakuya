#include <algorithm>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <sstream>
#include <functional>
#include <map>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <deque>
#include <set>
#include <list>
#include <numeric>
using namespace std;
const double PI = 3.14159265358979323846;
const double EPS = 1e-12;
const int INF = 1<<25;
typedef pair<int,int> P;
typedef long long ll;
typedef unsigned long long ull;
#define N 1000010
set<ull> st[3][N];
ull p[3] = {999999937, 1000000007, 1000000009}, mod[3] ={1196650218,1755250686,1715238676};
int main(){
	int T;
	cin>>T;
	for(int C = 1; C <= T; C++){
		for(int i = 0; i < 3; i++)
			for(int j = 0; j < N; j++)
				st[i][j].clear();
		int n;
		cin>>n;
		ll res = 0;
		for(int i = 0; i < n; i++){
			string s;
			cin>>s;
			int m = s.size();
			vector<ull> h[3];
			for(int j = 0; j < 3; j++){
				h[j].push_back(0);
				for(int k = 0; k < m; k++) h[j].push_back((p[j]*h[j].back()+s[k])%mod[j]);
			}
			ll lb = 0, ub = m; //(lb, ub]
			while(ub-lb>1){
				ll md = (lb+ub+1)/2;
				bool ok = false;
				for(int j = 0; j < 3; j++)
					if(!st[j][md].count(h[j][md])) ok=true;
				if(ok) ub = md;
				else lb = md;
			}
			res += ub;
			for(int j = 0; j < 3; j++)
				for(int k = 0; k <= m; k++)
					st[j][k].insert(h[j][k]);
		}
		printf("Case #%d: %ld\n", C, res);
	}
	return 0;
}
