#include <cstdio>
#include <cstring>
#include <algorithm>
#include <bits/stdc++.h>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define LLD long long
using namespace std;


struct node{
	int p[26], v;
	void init(){memset(this, 0, sizeof(node));}
}   T[1000005];

int n, nd;
char s[1000005];

int add(char s[]){
	int x = 0, c, cnt = 0;
	for (int i=0; s[i]; i++){
 		if (T[x].v != 1) ++cnt;
		c = s[i] - 'a';
		if (!T[x].p[c]) T[x].p[c] = nd, T[nd++].init();
		x = T[x].p[c];
		T[x].v++;
	}
	return cnt;
}


int solve(){
	int ret = 0;
	nd = 1;
	T[0].init();
	scanf("%d", &n);
	FOR(i,0,n){
		scanf("%s", s);
		ret += add(s);
	}
	return ret;
}

int main(){
	int tc;
	scanf("%d", &tc);
	FOR(i,1,tc+1) printf("Case #%d: %d\n", i, solve());
	return 0;
}

