#include <iostream>
#include <string>
#include <queue>
#include <string.h>
using namespace std;

class Node
{
    public:

    Node()
    {
        memset(nodes, 0, sizeof(nodes));
    }

    Node *nodes[26];
};

int addWord(string word, Node *root)
{
    Node *cur = root;
    int res = word.size();

    for (int i = 0; i < word.size(); ++i)
    {
        int nxt = word[i] - 'a';
        if (!cur->nodes[nxt]) {
            res = min(res, i + 1);
            cur->nodes[nxt] = new Node;
        }
        cur = cur->nodes[nxt];
    }

    return res;
}

void solve(int test)
{
    int n, res = 0;
    Node *root = new Node;
    cin >> n;

    while (n--) {
        string s;
        cin >> s;

        res += addWord(s, root);
    }

    cout << "Case #" << test << ": " << res << endl;
}

int main()
{
    cin.sync_with_stdio(false);

    int t;
    cin >> t;

    for (int test = 1; test <= t; ++test) {
        solve(test);
    }

    return 0;
}
