
alphabet = 'abcdefghijklmnopqrxtuvwxyz'

class Trie(object):
	def __init__(self):
		self.data = None
		self.child_count = [0]*len(alphabet)
		self.children = [None]*len(alphabet)

	def insert_word(self, word):
		node = self
		for letter in word:
			index = ord(letter) - ord('a')
			node.child_count[index] += 1
			if node.children[index] == None:
				node.children[index] = Trie()
			node = node.children[index]

	def type_word(self, word):
		node = self
		for i, letter in enumerate(word):
			index = ord(letter) - ord('a')
			if (node.child_count[index] == 1):
				return i+1
			node = node.children[index]
		return len(word)

def trial(w):
	words = Trie()
	typed_letters = 0
	for i in range(w):
		word = raw_input()
		words.insert_word(word)
		typed_letters += words.type_word(word)
	return typed_letters

T = int(raw_input())
for t in range(1, T+1):
	print "Case #%d: %s" % (t, trial(int(raw_input())))

