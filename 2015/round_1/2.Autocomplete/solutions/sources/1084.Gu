package test;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;

public class Autocomplete {

	public static void main(String[] args) {
		BufferedReader br = null;
		BufferedWriter bw = null;
		int T = 0;
		
		try {
			br = new BufferedReader(new FileReader("C:\\users\\guzh\\desktop\\autocomplete.txt"));
			File output = new File("C:\\users\\guzh\\desktop\\autocomplete_output.txt");
			output.createNewFile();
			bw = new BufferedWriter(new FileWriter(output));
			
			String line = br.readLine();
			if (line != null) T = Integer.parseInt(line);
			
			int t = 1;
			while (t <= T) {
				line = br.readLine();
				int N = Integer.parseInt(line);
				int res = 0;
				Node root = new Node();
				for (int n = 0; n < N; n++) {
					line = br.readLine();
					res += root.length(line);
				//	System.out.print(root.length(line) + " ");
					root.add(line);
				}
			//	System.out.println();
				bw.write("Case #" + t + ": " + res +"\n");
				
				t++;
			}
			br.close();
			bw.close();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}

class Node{
	int a[];
	Node []child;
	public Node() {
		a = new int[26];
		child = new Node[26];
	}
	public int length(String str) {
		int count = 0;
		Node cur = this;
		while (cur.a[str.charAt(count) - 'a'] > 0) {
			cur = cur.child[str.charAt(count) - 'a'];
			count++;
			if (count == str.length()) return count;
		}
		return count + 1;
	}
	public void add(String str) {
		Node cur = this;
		for (int i = 0; i < str.length(); i++) {
			int letter = str.charAt(i) - 'a';
			cur.a[letter]++;
			if (cur.a[letter] == 1) cur.child[letter] = new Node();
			cur = cur.child[letter];
		}
	}
}
