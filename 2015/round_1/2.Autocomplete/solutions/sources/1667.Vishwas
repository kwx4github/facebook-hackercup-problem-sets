/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.
 * Created By : Vishwas Tripathi 
 * CSE, MNNIT-ALLAHABAD 
 * vishfrnds@gmail.com
 _._._._._._._._._._._._._._._._._._._._._.*/


#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <assert.h>
using namespace std;

#define MP make_pair
#define pb push_back
#define rep(i,n) for(i=0;i<n;i++)
#define REP(i,a,b) for(i=a;i<=b;i++)
#define PER(i,a,b) for(i=b;i>=a;i--)
#define X first
#define Y second
#define all(c) c.begin(),c.end() //eg sort(all(v));

#define tr(c, itr) for(itr = (c).begin(); itr != (c).end(); itr++)
#define present(container, element) (container.find(element) != container.end()) //for set,map,etc
#define cpresent(container, element) (find(all(container),element) != container.end()) //for vectors

 typedef long long ll;
 typedef vector<int> vi; 
 typedef vector< vi > vvi; 
 typedef pair< int,int > ii; 

#define sz(a) int((a).size())
#define clr(a) memset(a,0,sizeof(a))
#define ini(a) memset(a,-1,sizeof(a))


//i/o
#define inp(n) scanf("%d",&n)
#define inp2(n,m) scanf("%d%d",&n,&m)
#define ins(s) scanf("%s",s);
#define out(n) printf("%d\n",n)
#define out2(n,m) printf("%d %d\n",n,m)
#define inc(n) scanf("%c",&n)

/*
// for Codeforces
#define inll(n) scanf("%I64d",&n)
#define inll2(n,m) scanf("%I64d%I64d",&n,&m)
#define outll(n) printf("%I64d\n",n)
#define outll(n) printf("%I64d\n",n)
#define outll2(n,m) printf("%I64d %I64d\n",n,m)
*/

#define inll(n) scanf("%lld",&n)
#define inll2(n,m) scanf("%lld%lld",&n,&m)
#define outll(n) printf("%lld\n",n)
#define outll(n) printf("%lld\n",n)
#define outll2(n,m) printf("%lld %lld\n",n,m)



//cost
#define MOD 1000000007
#define MOD_INV 1000000006
#define MAX 100009
#define INF 999999999

#define chk(a) cout << endl << #a << " : " << a << endl
#define chk2(a,b) cout << endl << #a << " : " << a << "\t" << #b << " : " << b << endl
#define chk3(a,b,c) cout << endl << #a << " : " << a << "\t" << #b << " : " << b << "\t" << #c << " : " << c << endl
#define chk4(a,b,c,d) cout << endl << #a << " : " << a << "\t" << #b << " : " << b << "\t" << #c << " : " << c << "\t" << #d << " : " << d << endl

#define ALPHABET_SIZE 26
#define CHAR_TO_INDEX(c) (c - 'a')

using namespace std;

int mem = 0;
struct trie_node {
	struct trie_node* next[ALPHABET_SIZE];
};
trie_node * new_node()
{
	trie_node *n = (trie_node *)malloc(sizeof(trie_node));
	for(int i = 0; i < ALPHABET_SIZE; i++)
		n->next[i] = NULL;
	return n;
}

void clean(trie_node *h, int d) {
	queue<trie_node *> q;
	q.push(h);
	while (!q.empty()) {
		trie_node *top = q.front();
		q.pop();
		for(int i = 0; i < ALPHABET_SIZE; i++)
			if (top->next[i] != NULL) {
				q.push(top->next[i]);
		}
		free(top);
	}
}
char str[1000009];

int main()
{
	int t, n, i, j;
	inp(t);
	for (int tc = 1; tc <= t; tc++) {
		inp(n);
		trie_node *head = new_node();
		int ans = 0;
		rep (j, n) {
			int f = 1;
			scanf("%s", str);
			trie_node *temp = head;
			for (i = 0; str[i]; i++) {
				if (temp->next[CHAR_TO_INDEX(str[i])] == NULL) {
					if (f) {
						ans += i + 1;
						f = 0;
					}
					temp->next[CHAR_TO_INDEX(str[i])] = new_node();
				}
				temp = temp->next[CHAR_TO_INDEX(str[i])];
			}
			if (f)
				ans += i;
		}
		printf("Case #%d: %d\n",tc, ans);
		clean(head, 0);
	}
    return 0;
}
