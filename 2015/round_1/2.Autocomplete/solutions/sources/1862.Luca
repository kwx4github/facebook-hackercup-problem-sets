squareNfair = []

def precompute():
  global squareNfair 
  squareNfair = [i*i for i in range(1,10**50) 
    if all(a == b for a,b in zip(str(i), reversed(str(i)))) 
    if all(a == b for a,b in zip(str(i*i), reversed(str(i*i))))]
    
def main():
  testcases = int(input())
  for caseNr in range(1, testcases+1):
    n = int(input())
    words = [input() for i in range(n)]
    print("Case #%i: %i" % (caseNr, solve(words)))
    
def solve(words):
  root = dict()
  tot = 0
  for word in words:
    current_dict = root
    i = 0
    abbr = False
    for letter in word:
      i += 1
      if not abbr and letter not in current_dict:
        abbr = True
        tot += i
      current_dict = current_dict.setdefault(letter, {})
    current_dict = current_dict.setdefault("_", "_")
    if not abbr:
      tot += len(word)
  return tot
  
    
if __name__ == "__main__":
  main()
    