#include <iostream>
#include <stdio.h>
#include <vector>
#include <map>
#include <list>
#include <string>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <queue>

using namespace std;

#define fore(i, l, r) for(int i = l; i < r; i++)
#define forn(i, n) fore(i, 0, n)
#define pb push_back
#define mp make_pair
#define x first
#define y second

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef long long ll;
typedef vector<pii> vpii;
typedef vector<ll> vll;

struct node;

vector<node*> clean;

struct node{
  node* arr[26];
  node(){
    forn(i, 26) arr[i] = 0;
  }
};

int insert(node* root, string s, int l){
  int pos = 0;
  int ans = 0, ind = 0;
  while (pos < l){
    int p = s[pos] - 'a';
    if (root->arr[p] == 0){
      root->arr[p] = new node();
      clean.pb(root->arr[p]);
      root = root->arr[p];
      if (!ind){
	ind = 1;
	ans = pos + 1;
      }
    }
    else root = root->arr[p];
    pos++;
  }
  
  if (!ind) ans = pos;
  return ans;
}

void cleanUp(){
  int l = clean.size();
  forn(i, l) delete clean[i];
  clean.clear();
}


int main(){
  int t;
  scanf("%d", &t);
  forn(cs, t){
    int n;
    scanf("%d", &n);


    node *root;
    root = new node();
    clean.pb(root);
  
    string s;
    int sum = 0;
    forn(i, n){
      cin>>s;
      sum += insert(root, s, s.length());
    }
    cleanUp();
    
    printf("Case #%d: %d\n", cs + 1, sum);
  }
}
