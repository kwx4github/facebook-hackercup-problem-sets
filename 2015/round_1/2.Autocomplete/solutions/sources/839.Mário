#include <cstdio>
#include <iostream>
#include <cmath>
#include <string>
#include <cstring>
#include <cctype>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#define For(i,N) for(int i=0; i<N; i++)
#define Fore(i,C) for(__typeof((C).begin()) i =(C).begin(); i != (C).end(); ++i)
#define FOR(i,j,k) for(int i=j; i<k; i++)
#define Fors(i,s) for(int i=0; s[i]; i++)
#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef long long ll;
typedef long double ld;
using namespace std;

struct pismenko{
	int podstrom;
	int slovo;
	int otec;
	int dalsie[26];
	pismenko(int o){
		podstrom=0;
		slovo=0;
		otec = o;
		For(i,26) dalsie[i] = -1;
	}
};

struct pismenkac{
	vector<pismenko> pismenka;
	pismenkac(){pismenka.pb(pismenko(-1));}
	void vloz(char *s){
		int cur = 0;
		Fors(i,s){
			int znak = s[i]-'a';
			if( pismenka[cur].dalsie[znak] == -1 ){
				pismenka[cur].dalsie[znak] = int(pismenka.size());
				pismenka.pb(pismenko(cur));
			}
			cur = pismenka[cur].dalsie[znak];
		}
		// ulozenie slova
		if( pismenka[cur].slovo == 0){
			pismenka[cur].slovo = 1;
			while(cur != -1){
				pismenka[cur].podstrom++;
				cur = pismenka[cur].otec;
			}
		}
	}
	int najdi(char *s){
		int krok = 0;
		int cur = 0;
		Fors(i,s){
			cur = pismenka[cur].dalsie[s[i]-'a'];
			krok++;
			if(pismenka[cur].podstrom == 1) break;
		}
		return krok;
	}
};

int T,N;
char buf[1000047];

int main(){
  scanf(" %d", &T);
	For(t,T){
		pismenkac P;
		int ans = 0;
		scanf(" %d", &N);
		For(i,N){
			scanf(" %s", buf);
			P.vloz(buf);
			ans += P.najdi(buf);
		}
		printf("Case #%d: %d\n",t+1, ans);
	}
  return 0;
}