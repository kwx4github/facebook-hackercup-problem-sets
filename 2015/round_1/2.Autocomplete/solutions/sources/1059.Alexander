import java.io.*;
import java.util.*;
import java.lang.*;

public class Auto {

    static class Trie {
        public HashMap<Character, Trie> children;
        public int size;

        Trie() {
            children = new HashMap<>();
            size = 0; // number words with this as prefix
        }

        void insert(char[] word, int i) {
            size += 1;
            if (i == word.length) {
                return;
            }
            if (!children.containsKey(word[i])) {
                children.put(word[i], new Trie());
            }
            children.get(word[i]).insert(word, i+1);
        }

        int depth(char[] word, int i) {
            if (i == word.length) {
                return 0;
            }
            if (size == 1) {
                return 0;
            }
            return 1 + children.get(word[i]).depth(word, i+1);
        }
    }

    public static void print(Object o) {
        System.out.println(o);
    }

    // debugging
    public static void printArray(int[] arr) {
        for (int i : arr) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    public static void insert(Trie t, char[] word, int i) {
        Trie curr = t;
        while (i < word.length) {
        t.size += 1;
        if (i == word.length) {
            return;
        }
        if (!t.children.containsKey(word[i])) {
            t.children.put(word[i], new Trie());
        }
        t = t.children.get(word[i]);
        i++;
        }
        t.size += 1;
    }

    public static void main(String args[]) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int cases = Integer.parseInt(br.readLine());
        for (int i = 1; i <= cases; i++) {
            int n = Integer.parseInt(br.readLine());
            Trie base = new Trie();
            insert(base, br.readLine().toCharArray(), 0);
            long ch = 1;

            for (int j = 1; j < n; j++) {
                String word = br.readLine();
                insert(base, word.toCharArray(), 0);
                ch += base.depth(word.toCharArray(), 0);
            }
            print(String.format("Case #%d: %d", i, ch));
        }
    }

    public static int REPLACE() {
        return 0;
    }
}
