#include <bits/stdc++.h>
#define INF 0x3f3f3f3f
#define MAX 1000

using namespace std;

struct Trie
{
    bool end;
    int usando;

    map<char, Trie> next;

    Trie()
    {
        end = false;
        usando = 0;
    }

    bool isEmpty()
    {
        return next.empty() && end == false;
    }
};

char word[1000005];
Trie *dic;

long long insert(char *t, Trie *r)
{
    int digita = 1;
    bool flag = true;
    for (int i = 0; t[i]; ++i)
    {
        char c = t[i];

        if ((r->next[c]).isEmpty())
        {
            r -> next[c] = Trie();
            flag = false;
        }

        if(flag) digita++;

        r = &(r->next[c]);
        r -> usando++;
    }

    r -> end = true;
    if(flag) digita--;
    return digita;
}

int main()
{
    //freopen("autocomplete.txt","r",stdin);
    //freopen("autocomplete_out.txt","w",stdout);
    int t;
    scanf("%d",&t);

    for(int caso=1; caso<=t; caso++)
    {
        dic = new Trie;

        int n;
        long long ans = 0;

        scanf("%d",&n);
        while(n--)
        {
            scanf("%s",&word);
            ans += insert(word, dic);
        }
        printf("Case #%d: %d\n",caso,ans);
    }

    return 0;
}

