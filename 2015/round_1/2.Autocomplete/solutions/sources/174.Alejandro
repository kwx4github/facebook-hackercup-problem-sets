#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

typedef long long LL;
#define rep(it,s) for(__typeof((s).begin()) it=(s).begin();it!=(s).end();it++)

char buf[1000010];
string s;
set<string> dic;
int n;

int get(const string &a, const string &b) {

    int cnt = 0;

    for (int i=0; i<(int)min(a.length(), b.length()); i++) {
        if (a[i]!=b[i]) break;
        cnt++;
    }

    return min((int)a.length(), cnt+1);

}

int main() {

    freopen("autocomplete.txt","r",stdin);
    freopen("output.txt","w",stdout);

    string s1, s2;

    int tt;
    cin>>tt;
    for (int cas=1; cas<=tt; cas++) {

        cin>>n;

        int tot = 0;
        dic.clear();

        for (int i=0; i<n; i++) {
            scanf("%s", buf);
            s = buf;

            set<string>::iterator it = dic.upper_bound(s);

            int a = s.length();
            int b = a;

            if (it != dic.end()) {
                a = get(s, *it);
            }
            else a = 1;

            if (it != dic.begin()) {
                --it;
                b = get(s, *it);
            }
            else b = 1;

            tot += max(a, b);

            dic.insert(s);

        }

        printf("Case #%d: %d\n", cas, tot);
        //if (bf()!=tot) cout<<"ERROR"<<endl;

    }


    return 0;

}
