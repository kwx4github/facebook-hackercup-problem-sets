/* ***********************************************
Author        :kuangbin
Created Time  :2015/1/18 9:53:19
File Name     :hackercup_R1\B.cpp
************************************************ */

#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <math.h>
#include <stdlib.h>
#include <time.h>
using namespace std;
const int MAXN = 1000010;
struct Trie{
	int next[MAXN][26];
	int root,L;
	int newnode(){
		for(int i = 0;i < 26;i++)
			next[L][i] = -1;
		return L++;
	}
	void init(){
		L = 0;
		root = newnode();
	}
	int insert(char buf[]){
		int len = strlen(buf);
		int ans = len;
		int now = root;
		for(int i = 0;i < len;i++){
			int id = buf[i]-'a';
			if(next[now][id] == -1){
				ans = min(ans,i+1);
				next[now][id] = newnode();
			}
			now = next[now][id];
		}
		return ans;
	}
};
Trie tree;
char str[MAXN];

int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("B.txt","w",stdout);
    int T;
	int n;
	scanf("%d",&T);
	int iCase = 0;
	while(T--){
		iCase++;
		scanf("%d",&n);
		tree.init();
		int ans = 0;
		while(n--){
			scanf("%s",str);
			ans += tree.insert(str);
		}
		printf("Case #%d: %d\n",iCase,ans);
	}
    return 0;
}
