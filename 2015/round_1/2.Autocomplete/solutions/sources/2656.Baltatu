#include<bits/stdc++.h>
using namespace std;

struct cell
{
    int val,frecv;
};

const int baza1=73;
const int baza2=37;
const int MODULO1=666013;
const int MODULO2=1000007;

int t,n;
char s[MODULO2];
vector<cell>H[MODULO1];
vector<cell>::iterator it;
long long sol;

inline bool Add(int aux,int paux,bool ok)
{
    for (it=H[aux].begin();it!=H[aux].end();it++)
        if ((*it).val==paux)
            {
                if (ok==1) return 0;
                else {(*it).frecv++;return 0;}
            }
    if (ok==1) return 1;
    cell k;
    k.val=paux;
    k.frecv=1;
    H[aux].push_back(k);
    return 0;
}

int main()
{
    int i,l,j,len,aux,paux;
    bool ok;
    //freopen("date.in","r",stdin);
    //freopen("date.out","w",stdout);
    cin.sync_with_stdio(false);
    cin>>t;
    for (l=1;l<=t;l++)
        {
            cin>>n;sol=0;
            for (i=1;i<=n;i++)
                {
                    cin>>(s+1);
                    len=strlen(s+1);
                    aux=paux=ok=0;
                    for (j=1;j<=len;j++)
                        {
                            aux=(1LL*aux*baza1+s[j]-'a'+1)%MODULO1;
                            paux=(1LL*paux*baza2+s[j]-'a'+1)%MODULO2;
                            if (ok==0 && Add(aux,paux,1)==1) {ok=1;sol+=j;}
                            Add(aux,paux,0);
                        }
                    if (ok==0) sol+=len;
                }
            cout<<"Case #"<<l<<": ";
            cout<<sol<<"\n";

            //golire
            for (i=0;i<MODULO1;i++) H[i].clear();
        }
    return 0;
}
