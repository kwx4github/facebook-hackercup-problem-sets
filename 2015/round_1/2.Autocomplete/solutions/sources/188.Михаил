class Trie:
    class Node:
        def __init__(self):
            self.edges = dict()
            self.unique = True

    def __init__(self):
        self.root = self.Node()

    def add_word(self, word):
        cur_node = self.root
        unique = False
        res = 0
        for c in word:
            if not unique:
                cur_node.unique = False
                res += 1
            if c in cur_node.edges:
                cur_node = cur_node.edges[c]
            else:
                unique = True
                cur_node.edges[c] = self.Node()
                cur_node = cur_node.edges[c]
        return res

t = int(input())
for test in range(1, t + 1):
    n = int(input())
    lines = []
    res = 0
    trie = Trie()
    for i in range(n):
        res += trie.add_word(input())

    print("Case #{}:".format(test), res)