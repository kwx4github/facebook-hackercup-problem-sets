#include <bitset>
#include <fstream>
#include <iostream>
using namespace std;

struct node {
    node *n[26];
    int d;
    node() {
        for (int i = 0; i < 26; i++) {
            n[i] = nullptr;
        }
    }
    ~node() {
        for (int i = 0; i < 26; i++) {
            delete n[i];
        }
    }
};

int main() {
    ifstream fin("autocomplete.txt");
    ofstream fout("autocomplete.out");

    int T;
    fin >> T;
    for (int t = 1; t <= T; t++) {
        int N;
        int k = 0;
        node *n = new node();
        fin >> N;
        for (int i = 0; i < N; i++) {
            string s;
            fin >> s;

            node *cur = n;
            int m = -1;
            for (int j = 0; j < s.size(); j++) {
                int z = s[j] - 'a';
                if (cur->n[z] == nullptr) {
                    //cerr << " new " << s[j] << endl;
                    cur->n[z] = new node();
                    break;
                } else {
                    //cerr << " match " << s[j] << endl;
                    m = j;
                }
                cur = cur->n[z];
            }
            if (m + 2 > s.size()) m = s.size() - 2;
            k += m + 2;
            //cout << s << ": " << m + 2 << endl;
        }
        delete n;
        fout << "Case #" << t << ": " << k << endl;
    }
}
