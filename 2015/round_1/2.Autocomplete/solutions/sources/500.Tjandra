/*
	Filename:		BBB.c
	Language:		C
	Author:			Tjandra Satria Gunawan
	OS:			Windows 8 Pro, 64-bit
	Processor Type:		Intel(R) Core(TM) i7-2670QM CPU @ 2.20GHz
	RAM:			4,0 GB + 2,0 GB DDR3
	Compiler:		gcc (tdm64-2) 4.8.1
	Compile options:	gcc -O2 -o BBB BBB.c
	Method:			Prefix tree
	Complexity:		O(total length of N words) per test case
*/
#include<stdio.h>
#include<stdlib.h>
#define bfr 128
typedef unsigned u;
typedef struct S
{
	char *W;u Wi;
	struct S *nx[26];
}v;
v* alloc()
{
	v *x;u i;
	x=(v*)malloc(sizeof(v));
	for(i=-1;++i<26;)x->nx[i]=NULL;
	x->W=NULL;x->Wi=0;
	return x;
}
char *S[111111],c,*ch;
v *V[1111111],*p,*q,*r,*tmp;
u Si,Vi;
int main()
{
	u t=0,n,T,i,j,k,ans;
	for(scanf("%u",&T);t++<T;)
	{
		V[ans=Si=0]=r=alloc();Vi=1;
		for(scanf("%u",&n);n--;)
		{
			p=r;i=0;q=NULL;
			while((c=getchar())<'a');
			do
			{
				if(i==p->Wi||p->W[i]!=c)
				{
					if(i!=p->Wi)
					{
						V[Vi++]=tmp=alloc();
						q->nx[(*p->W)-'a']=tmp;
						tmp->W=p->W;
						p->W+=i;
						tmp->nx[(*p->W)-'a']=p;
						p->Wi-=i;
						tmp->Wi=i;
						tmp->nx[c-'a']=p=alloc();
						break;
					}
					else if(p->nx[c-'a']==NULL)
					{
						V[Vi++]=tmp=p->nx[c-'a']=alloc();
						p=tmp;break;
					}
					q=p;p=p->nx[c-'a'];
					//printf("+%u\n",i);
					ans+=i;i=0;
				}
				++i;
			}
			while((c=getchar())>='a');
			//printf("+%u\n",i);
			ans+=i;
			if(c>='a')
			{
				i=0;j=bfr;++ans;
				//printf("+1\n");
				ch=(char*)calloc(j,sizeof(char));
				do
				{
					ch[i++]=c;
					if(i==j)
					ch=(char*)realloc(ch,(j+=bfr)*sizeof(char));
				}
				while((c=getchar())>='a');
				S[Si++]=p->W=ch;
				p->Wi=i;
			}
		}
		printf("Case #%u: %u\n",t,ans);
		while(Vi)free(V[--Vi]);
		while(Si)free(S[--Si]);
	}
	return 0;
}
