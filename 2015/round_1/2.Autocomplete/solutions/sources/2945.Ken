package hackercup;

import java.util.Scanner;

public class AutoComplete {
	
	public Trie root = new Trie();
	public int run(String[] words, int N) {
		int count = 0;
		for(int i=0;i<N;i++) {
			String w = words[i];
			Trie tmp = root;
			boolean stop = false;
			for(int j=0;j<w.length();j++) {
				char c = w.charAt(j);
				if(!stop) count++; 
				if(!tmp.hasNext(c)) stop=true;
				tmp = tmp.add(c);
			}
		}
		return count;
	}

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int T = Integer.parseInt(s.nextLine());
		for(int i =0;i<T;i++) {
			int N = Integer.parseInt(s.nextLine());
			String[] words = new String[N];
			for(int j=0;j<N;j++) {
				words[j]=s.nextLine();
			}
			AutoComplete ac = new AutoComplete();
			System.out.println("Case #" + (i+1) + ": " + ac.run(words, N));
		}

	}
	
	static class Trie {
		public char c = '*';//invalid 
		public Trie[] children = new Trie[26];
		public static int count = 0;
		public Trie() { this.c = '*'; }
		public Trie(char c) { this.c = c; }

		
		public boolean hasNext(char next) {
			int idx = next - 'a';
			return null!=children[idx];
		}
		public Trie add(char next) {
			int idx = next - 'a';
			if(null == children[idx]) children[idx]=new Trie(next);
			return children[idx];
		}
		
		public static void print(Trie root) {
			if(null==root) { System.out.print("Null "); return; }
			System.out.println(root.c);
			System.out.println(root.children);
			for(Trie t : root.children) {
				print(t);
			}
		}
	}

}
