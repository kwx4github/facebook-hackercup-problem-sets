#pragma comment(linker, "/STACK:134217728")

#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <stack>
#include <queue>
#include <functional>
#include <numeric>
#include <memory.h>

using namespace std;

typedef long long LL;

int Next[1 << 20][26];
int val[1 << 20];

int N = 0;

char buf[1 << 20];

string s[1 << 17];

int go(int x)
{
	for(int i = 0; i < 26; ++i)
		if (Next[x][i] != -1)
			val[x] = min(val[x], go(Next[x][i]));
	return val[x];
}

int main()
{
#ifndef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int t, n;
	scanf("%d", &t);
	for(int i = 1; i <= t; ++i)
	{
		N = 1;
		for(int j = 0; j < 1 << 20; ++j)
			val[j] = (int)1e9;
		memset(Next[0], -1, sizeof(Next[0]));
		scanf("%d", &n);
		for(int j = 0; j < n; ++j)
		{
			scanf("%s", buf);
			s[j] = string(buf);
			int cur = 0;
			for(int k = 0; buf[k]; ++k)
			{
				if (Next[cur][buf[k] - 'a'] == -1)
				{
					memset(Next[N], -1, sizeof(Next[N]));
					Next[cur][buf[k] - 'a'] = N++;
				}
				cur = Next[cur][buf[k] - 'a'];
			}
			val[cur] = min(val[cur], j);
		}
		go(0);
		int res = 0;
		for(int j = 0; j < n; ++j)
		{
			int add = 1;
			int cur = Next[0][s[j][0] - 'a'];
			for(int k = 1; k < s[j].size(); ++k)
			{
				if (val[cur] == j)
					break;
				add++;
				cur = Next[cur][s[j][k] - 'a'];
			}
			res += add;
		}
		printf("Case #%d: %d\n", i, res);
	}
	return 0;
}