#include <iostream>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <set>
using namespace std;
const int N = 1e6 + 10;
char ss[N];
int lcp(const string& s, const string& t) {
    int i = 0;
    while (i < s.size() && i < t.size() && s[i] == t[i]) ++i;
    if (i == t.size())
        return i;
    return i + 1;
}

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int t;
    cin >> t;
    for (int it = 1; it <= t; ++it) {
        int n, ans = 0;
        set <string> dict;
        cin >> n;
        for (int i = 0; i < n; ++i) {
            scanf("%s", ss);
            string s(ss);
            dict.insert(s);
            set <string>::iterator it = dict.find(s);
            int pr = 0;
            if (it != dict.begin()) {
                pr = lcp(*(--it), s);
                ++it;
            }
            ++it;
            if (it != dict.end())
                pr = max(pr, lcp(*it, s));
            if (pr == 0) pr = 1;
            ans += pr;
        }
        printf("Case #%d: %d\n", it, ans);
    }
    return 0;
}
