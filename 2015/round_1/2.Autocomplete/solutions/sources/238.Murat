#include<bits/stdc++.h>
  
using namespace std;

template<class T> inline T sqr(const T& a) { return a * a; }
  
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
  
constexpr ld EPS = 1e-9;
constexpr ld PI = 2 * acos(0.0);
constexpr int N = 100;

int main() {
  int tests;
  scanf("%d\n", &tests);
  for (int it = 1; it <= tests; ++it) {
    int n;
    scanf("%d\n", &n);
    set<string> dict;
    string s;
    li ans = 0;
    for (int i = 0; i < n; ++i) {
      getline(cin, s);
      dict.insert(s);
      auto iter = dict.find(s);
      int pos = 0;
      if (iter != dict.begin()) {
        --iter;
        string prev = *iter;
        ++iter;
        int m = (int) min(s.size(), prev.size());
        for (int j = 0; j < m; ++j) {
          if (prev[j] == s[j])
            ++pos;
          else
            break;
        }
      }
      ++iter;
      if (iter != dict.end()) {
        string next = *iter;
        int m = (int) min(s.size(), next.size());
        int t = 0;
        for (int j = 0; j < m; ++j) {
          if (s[j] == next[j])
            ++t;
          else
            break;
        }
        pos = max(pos, t);
      }
      if (pos < (int) s.size())
        ++pos;
      ans += pos;
    }
    assert(ans < 1e9);
    printf("Case #%d: %d\n", it, int(ans));
  }

  return 0;
}
