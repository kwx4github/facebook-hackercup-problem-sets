#include <bits/stdc++.h>
using namespace std;

#define rep(i, from, to) for (int i = from; i < int(to); ++i)
#define trav(it, x) for (auto it = x.begin(); it != x.end(); ++it)
#define all(x) x.begin(), x.end()
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;

struct Trie {
	int count;
	Trie* children[26];
	Trie() : count(0) {
		for (int i = 0; i < 26; ++i)
			children[i] = 0;
	}
	~Trie() {
		// for (int i = 0; i < 26; ++i)
			// delete children[i];
	}
	Trie* get(char c) {
		int ind = (c - 'a');
		assert(0 <= ind && ind < 26);
		Trie*& out = children[ind];
		if (out) return out;
		return out = new Trie;
	}
};

void solve() {
	int N;
	cin >> N;
	string str;
	Trie root;
	int res = 0;
	for (int i = 0; i < N; ++i) {
		cin >> str;
		Trie* t = &root;
		bool adding = true;
		for (char c : str) {
			t = t->get(c);
			t->count++;
			if (adding) {
				++res;
				if (t->count <= 1)
					adding = false;
			}
		}
	}
	cout << res << endl;
}

int main() {
	cin.sync_with_stdio(false);
	int T;
	cin >> T;
	rep(i, 0, T) {
		cout << "Case #" << i+1 << ": ";
		solve();
	}
}
