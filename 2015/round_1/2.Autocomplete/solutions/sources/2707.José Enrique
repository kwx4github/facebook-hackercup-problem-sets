#include <iostream>
#include <string>
using namespace std;

struct Node {
	Node() {
		for (int i = 0; i < 26; ++i) {
			children[i] = NULL;
		}
	}
	Node* children[26];
};

int count_prefix(Node* node, const string &word, int idx = 0) {
	if (idx == word.size()) {
		return idx;
	}
	Node* child = node->children[word[idx]-'a'];
	if (!child) {
		return idx + 1;
	} else {
		return count_prefix(child, word, idx+1);
	}
}

void insert_word(Node* node, const string &word) {
	for (int i = 0; i < word.size(); ++i) {
		int idx = word[i]-'a';
		if (!node->children[idx]) {
			node->children[idx] = new Node();
		}
		node = node->children[idx];
	}
}


int T, N;

int main() {
	cin >> T;
	for (int t = 1; t <= T; ++t) {
		cin >> N;
		string word;
		int cont = 0;
		Node* trie = new Node();
		for (int i = 0; i < N; ++i) {
			cin >> word;
			cont += count_prefix(trie, word);
			insert_word(trie, word);
		}
		cout << "Case #" << t << ": " << cont << endl;
	}
	return 0;
}
