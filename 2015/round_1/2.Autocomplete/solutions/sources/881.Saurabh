#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>

#define MAXALPHA 26
#define MAX 1000006
using namespace std;

typedef long long int lli;

typedef struct trie
{
	char c;
	struct trie *alphabet[MAXALPHA];
}trie;

int addString(trie *T, char *s);
trie* initTrie(char c); 

int main()
{
	int n,t,T,i,count;
	char s[MAX];
	scanf("%d",&T);
	for(t=1;t<=T;t++) {
		trie *T = initTrie('\0');
		scanf("%d",&n);
		count = 0;
		for(i=0;i<n;i++) {
			scanf("%s",s);
			count += addString(T, s);
		}
		printf("Case #%d: %d\n",t,count);
	}
	return 0;
}

int addString(trie *T, char *s)
{
	int len = strlen(s),i,count=0;
	for(i=0;i<len;i++) {
		if(T->alphabet[s[i]-'a'] == NULL) T->alphabet[s[i]-'a'] = initTrie(s[i]);
		else count++;
		T = T->alphabet[s[i]-'a'];
	}
	return count==len?len:count+1;
}

trie* initTrie(char c)
{
	int i;
	trie *T = (trie*)malloc(sizeof(trie));
	T->c = c;
	for(i=0;i<MAXALPHA;i++) T->alphabet[i] = NULL;
	return T;
}