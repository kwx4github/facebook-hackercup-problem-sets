#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

using namespace std;

inline int toInt(string s){int i;stringstream (s)>>i;return i;}
inline string toString(int i){string s;stringstream ss;ss<<i;ss>>s;return s;}

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef pair<ULL,ULL> PUU;
typedef vector<int> VI;
typedef vector<long> VL;
typedef vector<string> VS;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORE(i,a,b) for(int i=a;i<=b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define ALL(c) (c).begin(), (c).end()
#define RALL(c) (c).rbegin(), (c).rend()
#define SORT(c) sort(ALL(c))
#define PB push_back
#define MP make_pair

#define INF (long)1e9
#define EPS 1e-9

struct node{
    node *child[26];
    int value;
};

node* alloc(int data){
    node *tmp = new node;
    tmp->value=data;
    REP(i,26)tmp->child[i]=NULL;
    return tmp;
}

void add(node* head,string s){
    int sz=s.size(),c;
    REP(i,sz){
        c=s[i]-'a';
        if(head->child[c]==0)head->child[c]=alloc(1);
        else head->child[c]->value++;
        head=head->child[c];
    }
}

int query(node* head,string s){
    int ans=0,sz=s.size(),c;
    REP(i,sz){
        ans++;
        c=s[i]-'a';
        if(head->child[c]->value!=1)head=head->child[c];
        else break;
    }
    return ans;
}

int main(){_
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int t,n,ans;cin>>t;
    string s;
    FORE(z,1,t){
        ans=0;
        cin>>n;
        node *head=alloc(-1);
        while(n--){
            cin>>s;
            add(head,s);
            ans+=query(head,s);
        }
        cout<<"Case #"<<z<<": "<<ans<<endl;
    }
    return 0;
}
