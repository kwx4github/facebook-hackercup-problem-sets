#include <iostream>
#include <malloc.h>
#include <stdlib.h>

using namespace std;

struct Node {
	char ch;
	struct Node *next[30];
};

typedef struct Node node;

int n, t;

node* new_node(char ch) {
	node *p = (node*)malloc(sizeof(node));
	p->ch = ch;
	for(int i = 0;i < 30;i++) {
		p->next[i] = NULL;
	}
	return p;
}
int main() {
	freopen("autocomplete.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	cin >> t;
	for(int Case = 1;Case <= t;Case++) {
		cin >> n;
		node* head = new_node(0);
		int ans = 0;
		for(int i = 0;i < n;i++) {
			string str;
			cin >> str;
			node *p = head;
			bool found = false;
			for(int j = 0;str[j];j++) {
				if(p->next[str[j]-'a'] != NULL) {
					ans++;
				}else {
					found = true;
					p->next[str[j]-'a'] = new_node(str[j]);
				}
				p = p->next[str[j]-'a'];
			}
			if(found) {
				ans++;
			}
		}
		cout << "Case #" << Case << ": " << ans << endl;
	}
	return 0;
}
