import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;


public class Autocomplete {
	
	public static class Trie {
		public Map<Integer, Trie> content = new HashMap<Integer, Trie>();
	}
	
	public static void main(String[] args) {
		Scanner scanner = null;
		try {
			scanner = new Scanner(new FileInputStream("D:/Desktop/input.txt"));
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		int T = Integer.parseInt(scanner.nextLine());
		PrintStream out = null;
		try {
			out = new PrintStream(new FileOutputStream("D:/Desktop/output_Autocomplete.txt"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		for (int k = 1; k <= T; k++) {
			System.out.println("Doing test case " + k);
			int chars = 0;
			int N = Integer.parseInt(scanner.nextLine());
			Trie root = new Trie();
			for (int n = 0; n < N; n++) {
				char[] w = scanner.nextLine().toCharArray();
				//System.out.println("w="+new String(w));
				int wl = w.length;
				int i = 0;
				Trie current = root;
				while (true) {
					//System.out.println("i="+i);
					if (i == wl) {
						//System.out.println("Breaking because i=wl");
						break;
					}
					int m = w[i] - 'a';
					Trie nev = current.content.get(m);
					if (nev == null) {
						int j = i;
						while (j < wl) {
							m = w[j] - 'a';
							nev = new Trie();
							current.content.put(m, nev);
							current = nev;
							j++;
						}
						//System.out.println("Breaking because nev was null");
						i++;
						break;
					}
					current = nev;
					i++;
				}
				//System.out.println("chars += " + i + " => chars = " + (chars+i));
				chars += i;
			}
			out.println("Case #" + k + ": " + chars);
		}
		scanner.close();
	}
	
}
