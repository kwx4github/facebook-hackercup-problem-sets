import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.NavigableSet;
import java.util.SortedSet;
import java.util.TreeSet;

public class Autocomplete {
  
  
  public static void main(String[] args) throws IOException {
    // TODO Auto-generated method stub
    File file = new File(args[0]);
    BufferedReader reader = new BufferedReader(new FileReader(file));
    String line = reader.readLine();
    int testCases = Integer.parseInt(line);
    File outputFile = new File("C:\\Users\\Justin\\Desktop\\FacebookHackerCup\\autocompleteOutput.txt");
    PrintWriter writer = new PrintWriter(new FileWriter(outputFile));

    line = reader.readLine();
    //System.out.println(line);
    for (int i = 0; i < testCases; i++) {
      
      int wordCount = Integer.parseInt(line);
      String[] words = new String[wordCount];
      String[] wordShortcuts = new String[wordCount];
      int[] letterCount = new int[wordCount];
      TreeSet<String> dictionary = new TreeSet<String>();
      
      line = reader.readLine();
      
      for (int j = 0; j < wordCount; j++) {
                
        words[j] = line;
        dictionary.remove(line);
        String shortcut = "";
        NavigableSet<String> workingSet = dictionary;
        outer: for (int k = 0; k < line.length(); k++) {
          shortcut = shortcut + line.charAt(k);
          String endpoint = shortcut.substring(0,shortcut.length() - 1);
          char lastChar = shortcut.charAt(shortcut.length()-1);
          lastChar ++;
          endpoint += lastChar;
          workingSet = workingSet.subSet(shortcut, true, endpoint, false);
          Iterator<String> iter = workingSet.iterator();
          while (iter.hasNext()) {
            String test = iter.next();
            if (test.startsWith(shortcut)) continue outer;
          }
          break;
        }
        wordShortcuts[j] = shortcut;
        dictionary.add(line);
//        int count = 0;
//        for (String word : wordShortcuts) {
//          System.out.println(word);
//          count += word.length();
//        }
        
        //System.out.println(line);
        line = reader.readLine();
      }
      //System.out.println(line);
      int count = 0;
      for (String word : wordShortcuts) {
        //System.out.println(word);
        count += word.length();
      }
      
      
      System.out.println("Case #" + (i + 1) + ": " + count);
      writer.println("Case #" + (i + 1) + ": " + count);

      //line = reader.readLine();
    }
    
    writer.close();
  }
  
}