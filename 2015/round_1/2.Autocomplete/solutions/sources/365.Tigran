#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <bits/stdc++.h>
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(i,n) for(int i = 0; i < (int)(n); ++ i)
#define for1(i,n) for(int i = 1; i <= (int)(n); ++ i)
#define fore(i,a,b) for(int i = (int)(a); i <= (int)(b); ++ i)
#define ford(i,n) for(int i = (int)(n)-1; i >= 0; -- i)
#define ford1(i,n) for(int i = (int)(n); i >= 1; -- i)
#define fored(i,a,b) for(int i = (int)(b); i >= (int)(a);--i)
#define mp make_pair 
#define pb push_back
#define sz(v) ((int)((v).size()))
#define all(v) (v).begin(), (v).end()
#define FOR(i, n) for (int i = 0; i < (n); ++i)
#define forit(i,s,f) for(vector<int>::iterator it = s;it!=f; ++it) 

//#define fi first
//#define se second

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double LD;
typedef long long i64;
typedef unsigned long long u64;
typedef long double ld;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef pair<LL, LL> pll;
typedef vector<pii> vpi;
typedef vector<ld> vd;
typedef pair<ld, ld> pdd;
typedef vector<pdd> vpd;
typedef pair<pdd, pdd> segment;
///////////////////////////////////////////////////////////
struct node
{
	char c;
	int a[26];
	node()
	{
		c = 'a';
		FOR(i, 26) a[i] = 0;
	}
	void clear()
	{
		FOR(i, 26) a[i] = 0;
	}
};
const int N = 100000 + 900, M = 1000000 + 100000;
node T[M];
int T_s=2;
char S[M];
int S_l;
int get(int v, int i,int xor)
{
	if (i == S_l) return S_l;
	int k = S[i] - 'a';
	if (T[v].a[k] == 0)
	{
		return xor+1;
	}
	return get(T[v].a[k], i + 1, xor + 1);
}

void set1(int v, int i)
{
	if (i == S_l) return;
	int k = S[i] - 'a';
	if (T[v].a[k] == 0)
	{
		T[v].a[k] = T_s;
		T[T_s].clear();
		T[T_s].c = S[i];
		T_s++;
	}
	set1(T[v].a[k], i + 1);
}

void sol()
{
	int n, ans = 0;
	scanf("%d", &n);
	FOR(i, n)
	{
		scanf("%s", S);
		S_l = strlen(S);
		ans += get(1,0,0);
		set1(1,0);
	}
	printf("%d\n", ans);
}
void clear()
{
	T[1].clear();
	T_s = 2;
}
void solve()
{
	int T;
	scanf("%d", &T);
	for1(i, T)
	{
		printf("Case #%d: ", i);
		sol();
		clear();
	}
}

void testgen(){
	FILE * f = fopen("input.txt", "w");
	int n = 500000;
	fprintf(f, "%d\n", n);
	//	srand(time(NULL));
	fclose(f);
}
int main() {
#ifdef HOME
	//	testgen();
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#define task "gold"
	//	freopen("input.txt", "r", stdin);
	//	freopen("output.txt", "w", stdout);
	//	freopen(task".in", "r", stdin);
	//	freopen(task".out", "w", stdout);
#endif

	cout << fixed;
	cout.precision(10);
	cerr << fixed;
	cerr.precision(3);

	solve();

#ifdef HOME
	cerr << "Execution time = " << clock() / 1000.0 << "ms\n";
#endif
	return 0;
}