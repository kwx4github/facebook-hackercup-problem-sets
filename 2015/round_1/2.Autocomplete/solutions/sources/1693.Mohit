#include <iostream>
#include <algorithm>
using namespace std;

class node
{
public:
	node* alpha[26];
	node()
	{
		for (int i=0;i<26;i++) alpha[i]=NULL;
	}
};

int c2i(char a)
{
	return a-'a';
}
void insert(node* root,string a)
{
	int i=0,in;
	node* p=root;
	while (i<a.length())
	{
		in=c2i(a[i]);
		if (p->alpha[in]==NULL)
		{
			p->alpha[in]=new node();
		}
		p=p->alpha[in];
		i+=1;
	}
}

int search(node* root,string a)
{
	int i=0,in;
	node* p=root;
	while (i<a.length())
	{
		in=c2i(a[i]);
		if (p->alpha[in]==NULL)
		{
			return i;
		}
		p=p->alpha[in];
		i+=1;
	}
	return i;
}
int main()
{
	node* root=new node();
	int t,tt,n,ans,i;
	string a[100001];
	cin>>t;
	tt=1;
//	int temp=15;
//	int temp2=temp+5;
	while (tt<=t)
	{
//		if (tt>temp2) break;
//		if (tt<=temp) 
//		{
//			cin>>n;
//			ans=0;
//			for (i=0;i<n;i++)
//			{
//				cin>>a[i];
//			}
//			tt+=1;
//			continue;
//		}
		root=new node();
		cin>>n;
		ans=0;
		for (i=0;i<n;i++)
		{
			cin>>a[i];
			int len=a[i].length();
			ans+=min(search(root,a[i])+1,len);
			insert(root,a[i]);
	//		cout<<ans<<endl;
		}
		cout<<"Case #"<<tt<<": "<<ans<<endl;
		tt+=1;
	}
}