#include<iostream>

#include<cstdio>

#include<queue>

#include<vector>

#include<algorithm>

#include<cstring>

#include<stack>

#include<map>

#include<set>

#define MOD 1000000009

using namespace std;



typedef long long ll;

typedef pair<int, int> ii;

typedef vector<ii > vii;



int ans=0;



struct node

{

	int flag;

	struct node * child[26];

};

typedef struct node trie;



trie * allocate(void)

{

	trie * ptr;

	ptr = (trie*) malloc (sizeof(trie));

	ptr->flag=0;

	for(int i=0;i<26;i++)

		ptr->child[i]=NULL;

	return ptr;

}





void insert(trie * root,char *s,int k,int f)

{

	if(*s == '\0')

	{

		root->flag=1;

		if(f==0)

			ans=k-1;

		return ;

	}

	if(root->child[(*s)-'a']==NULL){

		if(f==0){

			ans=k;

			f=1;

		}

		root->child[(*s)-'a'] = allocate();

	}

	insert(root->child[(*s)-'a'],s+1,k+1,f);

}





void deallocate(trie *root)

{

	if(root==NULL)

		return ;

	for(int i=0;i<26;i++)

		deallocate(root->child[i]);

	trie *temp=root;

	free(root);

	temp=NULL;

	return ;

}



char arr[1000005];



int main(){

	int t;

	scanf("%d",&t);

	int l=0;

	while(l++<t){
		//cout << "YO\n";

		int n;

		scanf("%d",&n);

		trie * root=allocate();

		int tot=0;
		if(n==1){
			tot=1;
			scanf("%s",arr);
		}
		else{

		while(n--){

			scanf("%s",arr);
			//printf("%d\n",strlen(arr));

			ans=0;

			insert(root,arr,1,0);

			tot=tot+ans;

		}
		}

		printf("Case #%d: %d\n",l,tot);

		deallocate(root);

	}

	return 0;

}
