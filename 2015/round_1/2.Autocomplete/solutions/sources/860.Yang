#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<char, int> pii;

vector<pii> graph[1000005]; int val = 1000000; string g;
int vtx = 0; int nvtx = 0; bool found;
void compute() {
    vtx = 0;
    for (int i = 0; i < g.length(); ++i) {
        found = false;
        for (int j = 0; j < graph[vtx].size(); ++j) {
            if (graph[vtx][j].first == g[i]) {
                found = true; vtx = graph[vtx][j].second;
                break;
            }
        }
        if (!found) {
            val = min(val, i+1);
            ++nvtx; graph[vtx].push_back(make_pair(g[i], nvtx));
            vtx = nvtx;
        }
    }
}

int main() {
    freopen("newfile.txt", "r", stdin);
    freopen("newfile.out", "w", stdout);
    int t; cin >> t; for (int i = 0; i < t; ++i) {
        int total = 0; vtx = 0; nvtx = 0;
        int n; scanf("%d", &n);
        for (int j = 0; j < n; ++j) {
            val = 1000000;
            cin >> g;
            compute(); total += min(val, (int)g.length());
        }
        
        cout << "Case #" << i+1 << ": " << total << endl;
        for (int i = 0; i < nvtx+3; ++i)
            graph[i].clear();
    }
}