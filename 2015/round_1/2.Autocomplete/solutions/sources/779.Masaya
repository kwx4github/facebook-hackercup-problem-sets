#include <bits/stdc++.h>

using namespace std;

#define BET(a,b,c) ((a)<=(b)&&(b)<(c))
#define FOR(i,n) for(int i=0,i##_end=(int(n));i<i##_end;i++)
#define SZ(x) (int)(x.size())
#define ALL(x) (x).begin(),(x).end()
#define MP make_pair
typedef long long ll_t;
typedef vector<int> VI;
typedef vector<VI> VVI;

class Node{
public :
    Node* child[30];
    int cnt[30];

    Node(){
        memset(cnt , 0 , sizeof(cnt));
        FOR(i,26) child[i] = nullptr;
    }
};

void AddDictionary(Node* root, const string& s){
    Node* p = root;
    for(auto c : s){
        if(p->child[c-'a'] == nullptr){
            p->child[c-'a'] = new Node();
        }
        p->cnt[c-'a']++;
        p = p->child[c-'a'];
    }
}

long long NeedTypingNum(Node* root, const string& s){
    Node* p = root;
    long long type = 0;
    for(auto c : s){
        type++;
        if(p->cnt[c-'a'] == 1) return type;
        p = p->child[c-'a'];
    }
    return type;
}

int main()
{
    int t;
    cin>>t;
    FOR(caseNo, t){
        int n;
        cin>>n;
        vector<string> words(n);
        FOR(i,n) cin>>words[i];
        Node* root = new Node();
        long long cnt = 0;
        set<string> added;
        for(auto w : words){
            if(!added.count(w)){
                added.insert(w);
                AddDictionary(root, w);
            }else abort();
            cnt += NeedTypingNum(root, w);
        }
        
        printf("Case #%d: %lld\n", caseNo+1, cnt);
    }
    return 0;
}
