#include <bits/stdc++.h>
using namespace std;

struct trie {
	trie *child[26];
};
trie *root = NULL ;

long long cont ;

trie* getNode() {
    trie *root = NULL;
    root = new trie() ;
    for(int i = 0 ; i < 26 ; i++)
        root->child[i] = NULL ;
    return root ;
}

void insert_trie(trie *root , char ch[]) {
    long i = 0 , data , f = 0 ;
    while(ch[i]) {
        if(f == 0) cont ++ ;
        data = ch[i]-'a' ;
        if(!root->child[data]) {
            root->child[data] = getNode();
            if(f == 0)
                f = 1 ;
        }
        root = root->child[data] ; i++ ;
    }
}

trie* empty_trie(trie *root) {
    if(root) {
        int i = 0 ;
        while(i < 26) {
            root->child[i] = empty_trie(root->child[i]) ;
            i++ ;
        }
        free(root) ;
        return NULL ;
    }
    return NULL ;
}

int main() {
    #ifndef ONLINE_JUDGE
        freopen("input2.txt" , "r" , stdin);
        freopen("output2.txt" , "w" , stdout);
    #endif

	long test , n ;
	cin >> test ;
	char ch[1000001] ;

	for(long i = 1 ; i <= test ; i++) {
		cin >> n ;
		cont = 0 ;
		root = getNode();
		while(n--) {
			scanf("%s",ch);
			insert_trie(root , ch) ;
		}
		cout <<"case #" << i << ": " << cont << endl ;
		//root = empty_trie(root);
	}
	return 0;
}
