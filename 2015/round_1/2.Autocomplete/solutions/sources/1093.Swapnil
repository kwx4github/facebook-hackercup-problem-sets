#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
using namespace std;

#define MAX 1000005

struct node {
    char x;
    node* p[27];
};

class trie {
    node *root;
    public:
    trie()
    {
        root = create_new_node('#');
    }

    node* create_new_node(char x)
    {
        node *newnode = (node *) malloc(sizeof(node));
        newnode->x = x;
        for (int i = 0; i < 27; i++) {
            newnode->p[i] = NULL;
        }
        return newnode;
    }

    int insert(char *s)
    {
        node *x = root;
        int length = strlen(s);
        int count = 0;
        bool flag = 1;
        for (int i = 0; i < length; i++) {
            if (flag) count++;
            if (x->p[s[i] - 'a'] == NULL) {
                x->p[s[i] - 'a'] = create_new_node(s[i]);
                flag = 0;
            }
            x = x->p[s[i] - 'a'];
        }
        return count;
    }
};

int main()
{
    freopen("autocomplete.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    int tc;
    scanf("%d", &tc);
    for (int t = 1; t <= tc; t++) {
        printf("Case #%d: ", t);
        int n;
        trie T;
        scanf("%d", &n);
        char s[MAX];
        int count = 0;
        for (int i = 0; i < n; i++) {
            scanf("%s", s);
            int c = T.insert(s);
            count += c;
        }
        printf("%d\n", count);
    }
}
