#include <bits/stdc++.h>
#define out(x) cerr<<#x"="<<(x)<<endl
using namespace std;
#define REP(i,n) for(int i=0; i<int(n); i++)
struct Node;
typedef Node *pNode;
int tot;
struct Node{
	bool word;
	int n;
	int ch[26];
	Node(bool f){
		memset(ch, -1, sizeof ch);
		n = 0;
		word = 0;
	}
	Node(){}
} v[1123456];
void init(){
	tot=1;
	v[0]=Node(true);
}
int insert(char *p){
	int now=0, res=0;
	for(;*p!=0;++p){
		int c=*p-'a';
		if(~v[now].ch[c]){
			res++;
		} else {
			v[now].ch[c]=tot;
			v[tot++]=Node(true);
			v[now].n++;
		}
		now=v[now].ch[c];
	}
	v[now].word=1;
	res+=v[now].n==0;
	return res;
}
char buf[1123456];
int work(){
	int n, ans=0;
	scanf("%d ",&n);
	init();
	while(n--){
		gets(buf);
		ans+=insert(buf);
	}
	return ans;
}
int main(){
	int T;
	scanf("%d",&T);
	REP(tt,T){
		int ans = work();
		printf("Case #%d: %d\n", tt+1, ans);
	}
}
