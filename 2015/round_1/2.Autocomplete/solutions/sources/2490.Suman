#include<stdio.h>
#include<stdlib.h>

struct tr
{

struct tr *next[26];
int term[26];

};
struct tr * head;
struct tr * temp;
long long int flag,count;

void insert(char x)
{	
	struct tr * t1;
	int i;

	if(temp->next[x - 'a'] == NULL)
	{
		if(flag==0)
		{
			count++;
			flag=1;
		}
		t1 = (struct tr*)malloc(sizeof(struct tr));

		for(i=0;i<26;i++)
		{	t1->next[i] = NULL;
			t1->term[i] = 0;
		}
		temp->next[x-'a'] = t1;
		temp = t1;

	}
	else
	{
		count++;
		temp = temp->next[x-'a'];
	}

	return;
}

int find(char x)
{
	int res;
	if(temp->next[x-'a'] != NULL)
	{
		res =1;
		if(temp->term[x-'a'] == 1)
			res = 2;
		temp = temp->next[x-'a'];
		return(res);
	}
	
	temp = temp->next[x-'a'];
	return(0);

}

int end()
{
	int i;

	for(i=0;i<26;i++)
	{
		if(temp->next[i]!= NULL)
			return(0);

	}

	return(1);
}

int main()
{	
	char c,prev;
	int i,words,cnt,t,t1;

	
	scanf("%d",&t);

	for(t1=1;t1<=t;t1++)
	{
	scanf("%d",&words);
	getchar();

	head = (struct tr*)malloc(sizeof(struct tr));
	for(i=0;i<26;i++)
	{	head->next[i] = NULL;
		head->term[i] = 0;
	}

	temp = head;
	flag=0;
	cnt=count=0;

	while(1)
	{
		c = getchar();
		if(c == '\n')	
		{
			temp=head;	
			flag=0;
			cnt++;
			if(cnt==words)
				break;
		}

		else 
		{
			insert(c);
		}

	}

	
	printf("Case #%d: %lld \n",t1,count);
	}

return(0);
}
