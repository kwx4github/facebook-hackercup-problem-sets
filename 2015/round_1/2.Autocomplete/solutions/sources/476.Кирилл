#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

const int N = (int) 1e6 + 5;

int n;
int go[N][26];
int cnt[N];
int tree_size;
char buf[N];

void add_word(char s[])
{
    int len = strlen(s);
    int v = 0;

    for (int i = 0; i < len; i++)
    {
        int c = s[i] - 'a';
        cnt[v]++;

        int & to = go[v][c];
        if (to == -1)
            to = tree_size++;

        v = to;
    }

    cnt[v]++;
}

int get_answer(char s[])
{
    int len = strlen(s);
    int v = 0;

    for (int i = 0; i < len; i++)
    {
        int c = s[i] - 'a';
        v = go[v][c];

        if (cnt[v] == 1)
            return i + 1;
    }

    return len;
}

void solve()
{
    tree_size = 1;
    memset(go, -1, sizeof(go));
    memset(cnt, 0, sizeof(cnt));
    cnt[0] = 1;

    scanf("%d", &n);
    int answer = 0;

    for (int i = 0; i < n; i++)
    {
        scanf("%s", buf);
        add_word(buf);
        answer += get_answer(buf);
    }

    printf("%d\n", answer);
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; i++)
    {
        printf("Case #%d: ", i + 1);
        solve();
    }

    return 0;
}
