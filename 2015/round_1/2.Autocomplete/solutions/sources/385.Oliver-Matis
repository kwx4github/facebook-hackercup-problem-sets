#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;


struct trie {
	trie* next[26];
	bool single;
	
	trie* operator[](int ind){
		return next[ind];
	}
	
	trie() {
		fill(next, next + 26, (trie*)0);
		single = true;
	}
}triedata[1000001];

int nnodes = 1;



int traverse(string &str, int cind, trie& cur) {
	if(cind == str.size())
		return cind;
	
	int dir = str[cind] - 'a';
	
	if(cur[dir] == 0)
		cur.next[dir] = triedata + nnodes, triedata[nnodes++] = trie();
	else
		cur[dir]->single = false;
	
	
	int ret = traverse(str, cind + 1, *cur[dir]);
	
	if(cur.single)
		return cind;
	return ret;
}



string str;
int t, n;

int main() {
	cin.sync_with_stdio(false);
	cin >> t;
	
	for(int TCASE = 1; TCASE <= t; TCASE++) {
		cout << "Case #" << TCASE << ": ";
		
		cin >> n;
		int result = 0;
		triedata[0].single = false;
		
		for(int i=0;i<n;i++) {
			cin >> str;
			
			result += traverse(str, 0, triedata[0]);
		}
		
		cout << result << '\n';
		
		nnodes = 1;
		triedata[0] = trie();
	}
	
	return 0;
}






























