#include <stdio.h>
#include <stdlib.h>
#include <string.h>

const int maxtop = 1010000;

struct Ttree{
	int son[26];
	int ge;
}tree[maxtop+1];

char s[maxtop+1];
int top = 0, result = 0, n;

void init() {	
	scanf("%d",&n);
	top = 1;
	int i;
	for (i=0; i<26; ++i)
		tree[top].son[i]=0;
	tree[top].ge=0;
	result=0;
}

void work() {
	int w,i,j,k,p;
	int len;
	bool added;
	for (w=1; w<=n; ++w) {
		scanf("%s",&s);
		len=strlen(s);
		p=1;
		for (i=0; i<len; ++i) {
			j=s[i]-'a';
			if (!tree[p].son[j]) {
				tree[p].son[j] = (++top);
				for (k=0; k<26; ++k)
					tree[top].son[k]=0;
				tree[top].ge=0;
			}
			p=tree[p].son[j];
		}		
		tree[p].ge=1;

		added=false;
		p=1;
		for (i=0; i<len; ++i) {
			if ((p!=1)&&(!added)&&(tree[p].ge==0))
			{
				added=true;
				result+=i;
			}
			++tree[p].ge;
			j=s[i]-'a';
			p=tree[p].son[j];
		}
		if (!added)
			result+=len;
	}
}

void output() {
	printf("%d\n",result);
}

int main()
{
	int T, i;
	freopen("B.in","r",stdin);
	freopen("B.out","w",stdout);
	scanf("%d",&T);
	for (i=1; i<=T; ++i) {
		printf("Case #%d: ", i);
		init();
		work();
		output();
	}
	return 0;
}