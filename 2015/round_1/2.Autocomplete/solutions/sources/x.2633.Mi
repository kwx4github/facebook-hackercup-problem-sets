#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define rall(x) (x).rbegin(),(x).rend()
#define sz(x) ((int)(x).size())
#define REP(i,b,n) for(int i=(int)(b);i<(int)(n);++i)
#define rep(i,n) REP(i,0,n)
#define repsz(i,v) rep(i,sz(v))
#define eb emplace_back
#define mt make_tuple
#define aur auto&
#define bit(n) (1LL<<(n))
using namespace std;
typedef long long ll;
//#define int long long
static const int INF = 1<<25;
static const double EPS = 1e-5;
template<class T>bool chmin(T&a,const T&b){if(a<=b)return false;a=b;return true;}
template<class T>bool chmax(T&a,const T&b){if(a>=b)return false;a=b;return true;}

template<typename T> string to_s(T t){ //{{{
    stringstream ss;
    ss << t;
    return ss.str();
} //}}}
template<typename T> T s_to(string s){ //{{{
    stringstream ss;
    T res;
    ss << s;
    ss >> res;
    return res;
} //}}}


struct Trie{
    array<Trie *, 26> ch;
    int wt;
    Trie() : wt(0) { fill(all(ch), nullptr); }
    template<typename It>
    void insert(It b, It e){
        ++wt;
        if(b == e)  return;
        if(!ch[*b]) ch[*b] = new Trie();
        ch[*b]->insert(++b, e);
    }
};
vector<Trie> tmp(1100000);

bool solve(){//{{{
    int n; cin >> n;
    vector<vector<int>> in;
    int p = 0;
    rep(i, n){
        string s; cin >> s;
        vector<int> tmp;
        for(auto &c : s) tmp.emplace_back(static_cast<int>(c - 'a'));
        in.emplace_back(tmp);
    }
    Trie t;
    int res = 0;
    rep(i, n){
        {
            Trie *r = &t;
            for(auto &x : in[i]){
                ++r->wt;
                if(!r->ch[x]) r->ch[x] = &tmp[p++];
                r = r->ch[x];
            }
            ++r->wt;
        }

        int cnt = 0;
        Trie *r = &t;
        for(auto &x : in[i]){
            ++cnt;
            r = r->ch[x];
            if(r->wt == 1) break;
        }
        res += cnt;
    }
    cout << res << endl;
    return true;
}//}}}

signed main(){
    //cin.tie(0);
    //ios_base::sync_with_stdio(0);
    cout.setf(ios::fixed); cout.precision(10);
    int T;
    cin >> T;
    cin.ignore();
    for(int i = 1; i <= T; ++i){
        cout << "Case #" << i << ": ";
        solve();
    }
    return 0;
}
// vim:set foldmethod=marker commentstring=//%s:
