#include <iostream>
#include <queue>
#include <vector>
#include <set>
#include <stack>
#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>

#define max_nodes_size 100005
#define ll long long int
#define mod 1000000007
using namespace std;

class node
{
	public:
		char current_character;
		ll level;
		ll case_count;
		node* alphabet[26];

		node(char ch, ll i, ll j)
		{
			current_character = ch;
			level = i;
			case_count = j;

			for(ll i=0; i<26; i++)
				alphabet[i] = NULL;
		}

		node()
		{

		}
};

node *trie = new node('$', 0, 0);

ll insert(string word, ll temp)
{
	ll pos = 0;
	node *cur_node = trie;
	ll ctr=0, ans;

	while(pos<word.length())
	{
		if(cur_node->alphabet[word[pos]-'a']==NULL)
		{
			if(!ctr)
			{
				ans = pos+1;
				ctr = 1;
			}
			cur_node->alphabet[word[pos]-'a'] = new node(word[pos], pos+1, temp);
		}
		else if(cur_node->alphabet[word[pos]-'a']->case_count<temp)
		{
			cur_node->alphabet[word[pos]-'a']->case_count = temp;
			if(!ctr)
			{
				ans = pos+1;
				ctr = 1;
			}
		}

		cur_node = cur_node->alphabet[word[pos]-'a'];
		pos++;
	}

	if(!ctr)
		return word.length();
	return ans;
}

int main()
{
	ll t;
	cin>>t;
	for(ll c=1; c<=t; c++)
	{
		ll n;
		ll ans = 0;
		cin>>n;

		for(ll i=0; i<n; i++)
		{
			string word;
			cin>>word;

			ans += insert(word, c);
		}
		cout<<"Case #"<<c<<": "<<ans<<endl;


	}

	return 0;
}

