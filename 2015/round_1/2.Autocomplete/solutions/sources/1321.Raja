/* problem_link */

#include<bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
#define rep(i,a,n) for(__typeof(n) i = a; i < n; ++i)
#define repe(i,a,n) for(__typeof(n) i = a; i <= n; ++i)
#define mfill(a,b) memset(a, b, sizeof(a))
#define all(a) a.begin(), a.end()
#define pb(a) push_back(a)
#define dbg(x) {cout<<__LINE__ <<"::" << #x << ": " << (x) << endl; }

#define MAX 1000006
int trie[MAX][26], nodes;
char word[MAX];
int answer;

inline void add_to_trie()
{
    bool valid = false;
    int i = 0, current = 0;
    while(word[i] != '\0')
    {
        if(trie[current][word[i] - 'a'] == 0)
        {
            trie[current][word[i] - 'a'] = ++nodes;
            if(!valid)
            {
                ++answer;
                valid = true;
            }
        }
            else
                ++answer;
            current = trie[current][word[i] - 'a' ];

        ++i;
    }

}
int main()
{
    ios_base::sync_with_stdio(false);
  freopen("autocomplete.txt","r",stdin);
    freopen("autocomplete_out.txt","w",stdout);

    int t;
    cin>> t;
    repe(_case,1,t)
    {
        int n;
        mfill(trie,0);
        nodes  = 0;
        answer = 0;
        cin >> n;
       rep(i, 0, n)
        {
            cin >> word;
            add_to_trie();
        }

        cout << "Case #"<<_case<<": " << answer <<"\n";
    }
    return 0;
}
