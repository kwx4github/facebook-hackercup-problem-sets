#include <iostream>
#include <vector>
#include <map>
#include <string>

using namespace std;

struct Trie {
	int hits;
	map<char, Trie> children;

	Trie() {
		hits = 0;
	}

	int add(int depth, const string& word) {
		int ans = depth;
		if (depth != word.size()) {
			ans = children[word[depth]].add(depth + 1, word);
		}
		if (hits == 0) {
			ans = depth;
		}
		hits++;
		return ans;
	}
};

int solve(int tc) {
	int N;
	cin >> N;
	Trie root;
	root.hits++;
	int ans = 0;
	for (int i = 0; i < N; ++i) {
		string word;
		cin >> word;
		int partial = root.add(0, word);
		ans += partial;
	}
	return ans;
}

int main() {
	ios::sync_with_stdio(false);
	int T;
	cin >> T;
	for (int i = 1; i <= T; ++i) {
		cout << "Case #" << i << ": " << solve(i) << endl;
	}
}
