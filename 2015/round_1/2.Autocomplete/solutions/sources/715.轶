#include <bits/stdc++.h>

using namespace std;

const int MAXN = 1000010;
char buf[MAXN];
int ls[MAXN],ll;
struct node
{
	int l[26];
	int end,cnt,dep;
} d[MAXN];
int tt,root;
int T,n,ans;

int newnode(int h)
{
	int x = tt;
	tt++;
	memset(d[x].l,-1,sizeof(d[x].l));
	d[x].end = d[x].cnt = 0;
	d[x].dep = h;
	return x;
}

int add(char* s)
{
	int now = root;
	int ret = 0;
	for(int i  = 0;s[i];i++)
	{
		if (d[now].cnt) ret++;
		d[now].cnt++;
		if (d[now].l[s[i]-'a'] == -1) d[now].l[s[i]-'a'] = newnode(i+1);
		now =  d[now].l[s[i]-'a'];
	}
	d[now].cnt++;
	d[now].end++;
	return ret;
}

int main()
{
	scanf("%d",&T);
	for(int I = 1;I <= T;I++)
	{
		scanf("%d",&n);
		tt = 0;
		ans = 0;
		root = newnode(1);
		d[root].cnt = 1;
		for(int i = 0;i < n;i++)
		{
			scanf("%s",buf);
			ans += add(buf);
		}
		
		/*
		ll = 0;
		ls[ll++] = root;
		for(int i = 0;i < ll;i++)
		{
			int x = ls[i];
			if (d[x].cnt == 1) ans += d[x].dep; else
			{
				if (d[x].end == 1) ans += d[x].dep;
				for(int i = 0;i < 26;i++) if (d[x].l[i] != -1) ls[ll++] = d[x].l[i];
			}
		}*/
		printf("Case #%d: %d\n", I,ans);
	}
	return 0;
}