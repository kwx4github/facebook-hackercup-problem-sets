#include <iostream>
#include <set>
using namespace std;

typedef set<string> ss;

int lcp(const string& s1, const string& s2) {
  unsigned int x = 0;
  while (x < s1.size() && x < s2.size() && s1[x] == s2[x]) ++x;
  return x;
}

int main() {
  ios::sync_with_stdio(false);
  int T; cin >> T;
  for (int cas = 1; cas <= T; ++cas) {
    int N; cin >> N;
    ss st;
    int res = 0;
    for (int i = 0; i < N; ++i) {
      string s; cin >> s;
      int r = 1;
      ss::iterator it = st.insert(s).first;
      if (it != st.begin()) r = max(r, lcp(*prev(it), *it)+1);
      if (next(it) != st.end()) r = max(r, lcp(*next(it), *it)+1);
      res += min(r, (int)s.size());
    }
    cout << "Case #" << cas << ": " << res << endl;
  }
}
