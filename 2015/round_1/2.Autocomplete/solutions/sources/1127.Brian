import std.stdio, std.array, std.range, std.string, std.typecons;
import std.algorithm, std.container, std.math, std.numeric, std.random;
void scan(T...)(ref T args) { foreach (ref arg; args) readf(" %s", &arg); }
void minify(T)(ref T a, in T b) { if (a > b) a = b; }
void maxify(T)(ref T a, in T b) { if (a < b) a = b; }
void ewriteln(T...)(T args) { stderr.writeln("\033[35m", args, "\033[0m"); }

class Trie {
	Trie[char] next;
	bool isEmpty() { return next.length == 0; }
	int put(const char[] s) {
		Trie t = this;
		int ret = 0;
		foreach (i, c; s) {
			if (c in t.next) {
				t = t.next[c];
			} else {
				t.next[c] = new Trie;
				t = t.next[c];
				if (ret == 0) {
					ret = cast(int)(i + 1);
					debug {
						ewriteln("cost = ", ret);
					}
				}
			}
		}
		if (ret == 0) {
			debug { ewriteln("cost = length (", s.length, ")"); }
			ret = cast(int)(s.length);
		}
		return ret;
	}
}
void main() {
	Trie root;
	int tcn;
	scan(tcn);
	foreach (tci; 1..tcn + 1) {
		root = new Trie;
		int n;
		scan(n);
		readln();
		int s = 0;
		foreach (i; 0..n) {
			s += root.put(chomp(readln()));
		}
		writefln("Case #%d: %d", tci, s);
	}
}
