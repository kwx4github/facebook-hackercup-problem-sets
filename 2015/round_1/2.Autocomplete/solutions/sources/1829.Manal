#include <map>
#include <set>
#include <math.h>
#include <deque>
#include <stack>
#include <queue>
#include <vector>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <memory.h>
#include <stdio.h>

using namespace std;

char str[(int) 1e8];

struct node {
	char ch;
	map<char, node *> letters;
	node() {
	}
	node(char letter) {
		this->ch = letter;
	}
};

long long parse(string word, node* root) {
	node* temp = root;
	char ch;
	int i = 0;
	long long typedChars = 0;

	while (i < word.size()) {
		ch = word[i];
		typedChars++;
		if (!temp->letters[ch])
			break;
		i++, temp = temp->letters[ch];
	}
	while (i < word.size()) {
		ch = word[i];
		if (!temp->letters[ch]) {
			temp->letters[ch] = new node(ch);
		}
		i++, temp = temp->letters[ch];

	}
	return typedChars;
}

long long insertWords(vector<string> words) {

	node *root = new node();
	long long cnt = 0;
	for (int i = 0; i < words.size(); ++i) {
		cnt += parse(words[i], root);
	}
	return cnt;
}

int main() {

#ifndef ONLINE_JUDGE
	freopen("input.in", "rt", stdin);
	freopen("output.txt", "wt", stdout);
#endif
	int T, N;
	scanf("%d", &T);
	for (int t = 0; t < T; ++t) {
		scanf("%d", &N);
		vector < string > words(N);
		for (int i = 0; i < N; ++i) {
			scanf("%s", str);
			words[i] = string(str);
		}
		cout<<"Case #"<<t+1<<": "<<insertWords(words)<<endl;
	}

	return 0;
}
