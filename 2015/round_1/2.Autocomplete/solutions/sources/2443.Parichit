#include<iostream>
#include<stdio.h>
#include<string.h>
using namespace std;

char str[1000001];

struct suffixnode
{
    suffixnode *children[26];

};

inline void insert(struct suffixnode *s, int index)
{
    int l = strlen(str);
    struct suffixnode *temp = s;
    for(int i=index;i<l;i++)
    {
        temp->children[str[i]-97] = new suffixnode();
        temp = temp->children[str[i]-97];
    }

}

inline int search(struct suffixnode *s, int index)
{
    struct suffixnode *temp = s;
    int ans=1,j,l=strlen(str);
        for(j=1;j<l;j++)
        {
            ans++;
//            temp = temp->children[s[j]-97];
            if(temp->children[str[j]-97]==NULL)
            {
                insert(temp,j);
                return ans;
            }
            temp = temp->children[str[j]-97];
        }
}


int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("op.txt","w",stdout);
    int t,j;
    scanf("%d",&t);
    for(j=1;j<=t;j++)
        {
        int n,i,e;
        struct suffixnode *par[26];
        for(int k=0;k<26;k++)
            par[k]=NULL;
        int sum=0,num;
        scanf("%d",&n);
        for(i=0; i<n; i++)
        {
            scanf("%s", str);
            e=str[0]-97;
            if(par[e]==NULL)
            {
                par[e] = new suffixnode();
                insert(par[e],1);
                num=1;
            }
            else
                num = search(par[e],1);
            sum+=num;
        }
        printf("Case #%d: %d\n", j,sum);

    }
    return 0;
}
