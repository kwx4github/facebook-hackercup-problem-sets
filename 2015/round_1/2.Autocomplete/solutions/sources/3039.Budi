package hackercup.autocomplete;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

public class Autocomplete {
	private static BufferedWriter bw = null;
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = readFile(new FileReader("homework.txt"));
		FileWriter fw = new FileWriter("output.txt");
		bw = new BufferedWriter(fw);
		
		ArrayList<Integer> primes = new ArrayList<Integer>();
		int p = 2;
		primes.add(p++);
		primes.add(p);
		
		int ncase = Integer.parseInt(br.readLine().trim());
		for (int i=0; i<ncase; i++) {
			String[] split = br.readLine().trim().split(" ", 3);
			
			int a = Integer.parseInt(split[0].trim());
			int b = Integer.parseInt(split[1].trim());
			int k = Integer.parseInt(split[2].trim());
			
			int result = 0;
			
			for (int x=a; x<=b; x++) {
				int firstPrimeIndexChecked = primes.size();
				int count = 0;
				
				while (p <= x) {
					p += 2;
					boolean isPrime = true;
					int sqrtp = (int) Math.sqrt(p);
					for (Integer pp:primes) {
						if (pp > sqrtp) {
							break;
						}
						if (p % pp == 0) {
							isPrime = false;
							break;
						}
					}
					if (isPrime) {
						if (x % p == 0) {
							count++;
						}
						
						if (count > k) {
							break;
						}
						
						primes.add(p);
					}
				}
				
				for (int j=0; j<firstPrimeIndexChecked; j++) {
					Integer pp = primes.get(j);
					
					if (x % pp == 0) {
						count++;
					}
					
					if (count > k) {
						break;
					}
				}
				
				if (count == k) {
					result++;
				}
			}
			
			System.out.println("Case #" + (i+1) + ": " + result);
			writeOutput("Case #" + (i+1) + ": " + result);
		}
		
		bw.close();
		
	}
	
	private static BufferedReader readFile(FileReader in) throws FileNotFoundException {
		return new BufferedReader(in);
	}
	
	private static void writeOutput(String text) throws IOException {
		bw.write(text);
		bw.write("\n");
	}
}
