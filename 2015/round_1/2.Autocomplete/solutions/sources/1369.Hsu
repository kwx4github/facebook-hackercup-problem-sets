#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <vector>
using namespace std;

const int maxl = 26;
const int maxn = 2000100;

struct node {
  node * nxt[maxl];
  inline void clr(){ memset(nxt, 0, sizeof(nxt)); }
} nodes[maxn], *root;

int nodelen;
char input[maxn];

inline node * getnode(){
  nodes[nodelen].clr();
  return nodes + nodelen++;
}

inline int addPat(char pat[]){
  bool match = false;
  int res = 0;
  node * u = root;

  for(int i = 0; pat[i]; i++){
    int nxtidx = pat[i] - 'a';

    if(u->nxt[nxtidx] == NULL){
      if(!match){ match = true; res++; }
      u->nxt[nxtidx] = getnode();
    }
    u = u->nxt[nxtidx];
    if(!match) res++;
  }
  return res;
}

int main(){
  int cas, n;
  scanf("%d", &cas);
  for(int cascnt = 1; cascnt <= cas; cascnt++){
    nodelen = 0;
    root = getnode();

    int ans = 0;
    scanf("%d", &n);
    for(int i = 0; i < n; i++){
      scanf("%s", input);
      ans += addPat(input);
    }

    printf("Case #%d: %d\n", cascnt, ans);
  }
  return 0;
}
