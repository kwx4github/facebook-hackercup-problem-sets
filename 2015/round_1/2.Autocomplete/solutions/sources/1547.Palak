import java.util.*;
import java.util.HashMap;
   
class node {          
    public node(char ch)  {
        value = ch;
        children = new HashMap<>();
        bIsEnd = false;
    }   
    public HashMap<Character,node> getChildren()
    {
       return children;
    }   
    public char getValue() 
    {
       return value;
    }   
    public void setIsEnd(boolean val)
    {
       bIsEnd = val;     
    }   
    public boolean isEnd()
    {
       return bIsEnd;    
    }   
    private char value;   
    private HashMap<Character,node> children;
    private boolean bIsEnd; 
}
   
class t
{       
    public t()  
    {
         root = new node((char)0);       
    }   
    public void insert(String word)
    {
        int length = word.length();       
        node crawl = root;
        for( int l = 0; l < length; l++)
        {
            HashMap<Character,node> child = crawl.getChildren();           
            char ch = word.charAt(l);
            if( child.containsKey(ch))
                crawl = child.get(ch);
            else   
            {             
                node temp = new node(ch);
                child.put( ch, temp );
                crawl = temp;
            }
        }
        crawl.setIsEnd(true);
    }
    public String getMatchingPrefix(String input)  
    {
        String result = ""; 
        int length = input.length(); 
        node crawl = root;  
        int level, prevMatch = 0;
        for( level = 0 ; level < length; level++ )
        {   
            char ch = input.charAt(level);   
            HashMap<Character,node> child = crawl.getChildren();                       
            if( child.containsKey(ch) )
            {
               result += ch;          
               crawl = child.get(ch); 
               if( crawl.isEnd() )
                    prevMatch = level + 1;
            }           
            else
              break;
        }
        return result;
    }
       
    private node root;     
}
   
class Test {
   public static void main(String[] args) 
   {
        int t,ans=0,i,j;
        Scanner sc = new Scanner(System.in);
        t=sc.nextInt();
        int o=0;
        for(i=0;i<t;i++)
        {
            t dict = new t();
            int n;
            ans=0;
            n=sc.nextInt();
            sc.nextLine();
            o++;
            for(j=0;j<n;j++)
            {
                String s = sc.nextLine();
                String r = dict.getMatchingPrefix(s);
                int l = r.length();
                if(l==0)
                    ans++;
                else if(l==s.length())
                    ans=ans+l;
                else 
                    ans=ans+l+1;
                dict.insert(s);
            }
            System.out.println("Case #"+ o+": "+ans);
        }
    }
}