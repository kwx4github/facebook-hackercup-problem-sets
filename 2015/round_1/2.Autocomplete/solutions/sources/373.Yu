#include <iostream>
#include <algorithm>

using namespace std;

class Node {
public:
  Node *next[26];
  void clear() {
    fill(next, next + 26, nullptr);
  }
};

static const int MAX = 1000000;
Node nodes[MAX + 1];

int main(void) {
  int T, N;
  string word;

  cin >> T;
  for (int i = 1; i <= T; ++i) {
    cin >> N;
    int count = 0;
    int res = 0;
    Node *root = nodes + count++;
    root->clear();
    for (int j = 0; j < N; ++j) {
      Node *node = root;
      bool writing = true;
      cin >> word;
      for (int k = 0; k < word.length(); ++k) {
        int c = word[k] - 'a';
        if (node->next[c] == nullptr) {
          if (writing) {
            writing = false;
            res += k + 1;
          }
          node = node->next[c] = nodes + count++;
          node->clear();
        } else {
          node = node->next[c];
        }
      }
      if (writing) {
        res += word.length();
      }
    }
    cout << "Case #" << i << ": " << res << endl;
  }

  return 0;
}
