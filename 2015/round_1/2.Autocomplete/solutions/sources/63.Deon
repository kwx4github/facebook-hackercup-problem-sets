#include <iostream>
#include <ctime>
#include <fstream>
#include <cmath>
#include <cstring>
#include <cassert>
#include <cstdio>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <complex>
#include <utility>
#include <cctype>
#include <list>
#include <bitset>

using namespace std;

#define FORALL(i,a,b) for(int i=(a);i<=(b);++i)
#define FOR(i,n) for(int i=0;i<(n);++i)
#define FORB(i,a,b) for(int i=(a);i>=(b);--i)

typedef long long ll;
typedef long double ld;
typedef complex<ld> vec;

typedef pair<int,int> pii;
typedef map<int,int> mii;

#define pb push_back
#define mp make_pair

struct trie_t {
	int size;
	map<char, trie_t> next;
	
	trie_t(): size(0), next() {}
	void insert(char* s) {
		size++;
		if ((*s) == 0) return;
		next[s[0]].insert(s+1);
	}
	
	int find(char *s) {
		assert(size >= 1);
		if (size == 1 || (*s) == 0) return 0;
		
		assert(next.count(s[0]));
		return 1 + next[s[0]].find(s+1);
	}
	
	void clear() {
		for(map<char,trie_t>::iterator it = next.begin(); it != next.end(); ++ it) {
			it->second.clear();
		}
		next.clear();
		size = 0;
	}
} T;

char word[1000005];
int main() {
	int TEST,N,ans,here;
	scanf("%d",&TEST);
	FOR(test,TEST) {
		T.clear();
		scanf("%d",&N);
		
		ans = 0;
		FOR(i,N) {
			scanf("%s",word);
			T.insert(word);
			here = T.find(word);
			if (here == 0) here = 1;
			ans += here;
		}
		
		printf("Case #%d: %d\n",(test+1),ans);
	}
}












