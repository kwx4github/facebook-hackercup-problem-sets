#include <bits/stdc++.h>

using namespace std;

const int MAXN = (int) 1e7 + 50;

struct trie {
	vector<vector<int> > to;

	trie () {
		to.clear();
		vector<int> v(30, -1);
		to.push_back(v);
	}

    void insertString(string s) {
		int cur = 0;
		for (int i = 0; i < s.size(); i++) {
			int bit = s[i] - 'a';
			if (to[cur][bit] == -1) {
				vector<int> v(30, -1);
				to.push_back(v);
				to[cur][bit] = to.size() - 1;
			}
			cur = to[cur][bit];
		}
	}

    int getMaximumPrefix(string s) {
        int cur = 0;
        for (int i = 0; i < s.size(); i++) {
            int bit = s[i] - 'a';
            if (to[cur][bit] == -1) {
                return i;
            } else {
                cur = to[cur][bit];
            }
        }
        return s.size();
    }
};



int main() {
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    int T, caseNo = 1;
    scanf("%d", &T);
    while (T--) {
        trie tr;

        int n;
        cin >> n;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            string s;
            cin >> s;
            int pref = tr.getMaximumPrefix(s);
            ans += min((int) s.size(), pref + 1);
            tr.insertString(s);
        }

        printf("Case #%d: %d\n", caseNo++, ans);
    }
    return 0;
}
