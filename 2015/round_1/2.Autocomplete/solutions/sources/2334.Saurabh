#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long,long long> pll;
typedef vector<pll> vpll;typedef vector<string> vs; typedef double D; typedef vector<bool> vb;
typedef pair<int,pii> pip;
#define sz(v) int((v).size())
#define all(v) (v).begin(), (v).end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sd(x) scanf("%d", &x)
#define slld(x) scanf("%I64d", &x)
#define present(c,x) ((c).find(x) != (c).end())
#define debug(X) cerr << "	--> " << #X << " = " << X << endl
#define mod 1000000007LL
#define INF 2000000000LL
#define N 11234567
FILE * sf = fopen("autocomplete.txt","r");
FILE * pf = fopen("out.txt","w");
char temp[1000006];
struct node
{
	int ar[26];
	int total;
	node()
	{
		for(int i=0;i<26;++i)	ar[i] = -1;
		total = 0;
	}
	void clear()
	{
		for(int i=0;i<26;++i)	ar[i] = -1;
		total = 0;
	}
};
node nodes[N];
struct trie
{
	int m;
	int root;
	void ins(string s);
	ll steps(string s);
	trie()
	{
		m = 1;
		root = 0;
	}
};
void trie :: ins(string s)
{
	int current = root;
	nodes[current].total ++;
	for(int i=0;i<s.size();++i)
	{
		//cerr<<"inserting "<<current<<" "<<nodes[current].ar[ s[i]-'a' ]<<" "<<nodes[current].total<<" ";
		if(nodes[current].ar[ s[i]-'a' ]>0&&nodes[current].ar[ s[i]-'a' ]<m)
		{
			current = nodes[current].ar[ s[i]-'a' ] ;
		}
		else
		{
			nodes[current].ar[ s[i]-'a' ] = m;
			current = m;
			nodes[m].clear();
			m++;
		}
		//cerr<<current<<endl;
		nodes[current].total ++;
	}
}
ll trie :: steps(string s)
{
	int current = root;
	for(int i=0;i<s.size();++i)
	{
		//cerr<<"calculating "<<current<<" "<<nodes[current].ar[s[i]-'a']<<" "<<nodes[nodes[current].ar[s[i]-'a']].total<<endl;
		if(nodes[current].ar[s[i]-'a']>0&&nodes[nodes[current].ar[s[i]-'a']].total>1)
				current = nodes[current].ar[s[i]-'a'];
		else
		{
			return i+1;
		}
	}
	return s.size();
}
void solve(int qwe)
{
	printf("Case #%d: ",qwe);
	fprintf(pf,"Case #%d: ",qwe);

	trie t;
	for(int i=0;i<26;++i)	nodes[0].ar[i] = -1;
	nodes[0].total = 0;
	ll ans = 0;
	int n;
	//scanf("%d",&n);
	fscanf(sf,"%d",&n);
	string s;
	for(int i=0;i<n;++i)
	{
		fscanf(sf,"%s",temp);
		s = temp;
		t.ins(s);
		ans += t.steps(s);
	}
	printf("%lld\n",ans);
	fprintf(pf,"%lld\n",ans);
}
int main()
{
	int t = 1;
	//sd(t);
	fscanf(sf,"%d",&t);
	for(int T=1;T<=t;++T)		solve(T);
	return 0;
}

