#include <cstdio>
#include <algorithm>
#include<iostream>
#include<vector>
#include<climits>
#include <complex>
#include <iostream>
#include <valarray>
#include<cstring>
#include<queue>
#include<bitset>
#include<map>
#include<set>
#include<sstream>
#include<ctime>
#include <stack>
#include <iomanip>
#include <cassert>
#include<cmath>


using namespace std;


#define PB push_back
#define i64 long long
#define FOR(i,a,b) for(i=(a);i<(b);++i)
#define FORE(i,a,b) for(i=(a);i<=(b);++i)
#define REP(i,n) FOR(i,0,n)
#define REPE(i,n) FORE(i,0,n)
#define SZ(v) ((v).size())
#define LD long double
#define VI vector<int>
#define VS vector<string>
#define VD vector<double>
#define VLD vector<LD>
#define MSET(x,y) memset((x),(y),sizeof(x))
#define SZOF(x) sizeof((x))
#define VVI vector< VI >
#define PII pair< int,int >
#define VPII vector< PII >
#define MP make_pair
#define PIPII pair<int, PII >
#define PIPIPII pair< int, PIPII >
#define u64 unsigned i64
#define Vi64 vector<i64>
#define Vu64 vector<u64>

#define MAXN 1000005
#define MAXL 26
char arr[MAXN];
int lenn;


struct trie
{
    int ct;
    struct trie* nxt[MAXL];
};

trie *root;


void init(trie *&tmp)
{
    tmp=new trie;
    tmp->ct=0;

    for(int i=0;i<MAXL;++i)
    {
        tmp->nxt[i]=NULL;
    }
}

int addd()
{
    int ret=-1;
    trie *prs=root;
    trie *tmp;

    int i;
    int ti;

    for(int i=0;i<lenn;++i)
    {
        ti=arr[i]-'a';
        if(prs->nxt[ti]==NULL)
        {
            init(tmp);
            prs->nxt[ti]=tmp;
        }
        prs=prs->nxt[ti];
        if(prs->ct==0 && ret==-1)
        {
            ret=i+1;
        }
        ++(prs->ct);
    }

    if(ret==-1)
    {
        ret=lenn;
    }

    return ret;
}

void MAIN()
{
    int ans;
    int cases;
    scanf("%d",&cases);
    int n;

    for(int t=1;t<=cases;++t)
    {
        ans=0;
        scanf("%d",&n);
        init(root);

        while(n--)
        {
            scanf("%s",arr);
            lenn=strlen(arr);
            ans+=addd();
        }

        printf("Case #%d: %d\n",t,ans);

    }
}

int main()
{
    freopen("Text/Autocomplete.txt","r",stdin);
    freopen("Text/Autocomplete.out","w",stdout);

    MAIN();
    return 0;
}




