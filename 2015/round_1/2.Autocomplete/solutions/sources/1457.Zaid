#!/usr/bin/env python

import os

def main():
    f = open('autocomplete.txt')

    line = f.readline()
    cases = int(line)

    of = open('autocomplete_output.txt', 'w')
    for i in range(cases):
        res = "Case #%d: %s" % (i+1, test_case(f))
        print(res)
        of.write(res + "\n")
    of.close()
    f.close()

def compare(item1, item2):
    if item1[0] > item2[0]:
        return 1
    elif item1[0] < item2[0]:
        return -1
    else:
        return 0

def compare2(item1, item2):
    l = max(1, min(item1[2], item2[2]))

    if item1[0].startswith(item2[0]) or item2[0].startswith(item1[0]):
        if item1[1] > item2[1]:
            return 1
        elif item1[1] < item2[1]:
            return -1
        else:
            return 0

    s1 = item1[0][:item1[2]]
    s2 = item2[0][:item2[2]]

    if s1 > s2:
        return 1
    elif s1 < s2:
        return -1
    else:
        if item1[1] > item2[1]:
            return 1
        elif item1[1] < item2[1]:
            return -1
        else:
            return 0

def test_case(ff):
    N = int(ff.readline().strip())

    words = []
    for i in range(N):
        w = ff.readline().strip()
        words.append([w, i])

    words.sort(compare)

    for i in range(len(words)):
        c = 0
        if i > 0:
            c = max(c, len(os.path.commonprefix([words[i-1][0], words[i][0]])))

        if i < len(words) - 1:
            c = max(c, len(os.path.commonprefix([words[i+1][0], words[i][0]])))
        words[i].append(c)

    words.sort(compare2)

    res = 1
    for i in range(1, len(words)):
        p = os.path.commonprefix([words[i][0], words[i-1][0]])
        res += min(len(p) + 1, len(words[i][0]))

    return res

main()
