#include <stdio.h>
#include <sstream>
#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <list>
#include <iomanip>
#include <map>
#include <set>
#include <cmath>
#include <queue>
#include <cassert>
#include <string.h>

using namespace std;
#pragma comment(linker, "/STACK:20000000")

typedef vector<int> vi; 
#define sz(a) int((a).size()) 
#define all(c) (c).begin(),(c).end() 

string problem_name = "autocomplete";

void init(){
  freopen((problem_name+".in").c_str(),"rt",stdin);
  freopen((problem_name+".out").c_str(),"wt",stdout);
}

map <pair <long long, long long>, int > hmas;
long long md = (1ll<<50)+1;


string mas[100100];
char st[1000100];

int main()
{
   init();


   int tst;
   scanf("%d\n",&tst);

   	int res = 0;


	for (int cas = 1; cas<=tst; cas++)
	{
		hmas.clear();
		int n;
		scanf("%d\n",&n);
		long long res = 0;
		for (int i=0;i<n;i++)
		{
			gets(st);
			mas[i] =st;
			
			long long hv1=0,hv2=0;
			for (int j=0;j<sz(mas[i]);j++)
			{
				hv1 = hv1*3137+mas[i][j];
				hv2 = (hv2*31+mas[i][j])%md;
				hmas[make_pair(hv1,hv2)]++;
			}

			
			hv1=0,hv2=0;
			for (int j=0;j<sz(mas[i]);j++)
			{				
				hv1 = hv1*3137+mas[i][j];
				hv2 = (hv2*31+mas[i][j])%md;
				//hmas[make_pair(hv1,hv2)]++;
				if (hmas[make_pair(hv1,hv2)] == 1 || j==sz(mas[i])-1) 
				{
					res+=j+1;
					break;
				}
			}
		}

	
		

		printf("Case #%d: %lld\n",cas,res);
	}





	
  return 0;
}

