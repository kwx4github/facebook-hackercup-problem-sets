#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <queue>
#include <map>
#include <string>
#include <stack>
#include <bitset>
#include <vector>

using namespace std;
const int maxn = 1000500;
struct Trie {
    int ch[maxn][30];
    int sz;
    int val[maxn];
    void clear() {
        memset(ch[0], 0, sizeof ch[0]);
        memset(val, 0, sizeof val);
        sz = 1;
    }
    int idx(char c) { return c - 'a'; }
    int insert(char *s) {
        int u = 0, n = strlen(s), ans = n;
        for(int i = 0; i < n; i++) {
            int c = idx(s[i]);
            if(!ch[u][c]) {
                memset(ch[sz], 0, sizeof ch[sz]);
                val[sz]++;
                ch[u][c] = sz++;
                if(ans == n) ans = i + 1;
            }
            else val[ch[u][c]]++;
            u = ch[u][c];
        }
        return ans;
    }
};
Trie trie;
char s[1000010];
int main() {
    #ifdef LOCAL
    freopen("autocomplete.txt", "r", stdin);
    //freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    #endif
    int T, cas = 1;
    scanf("%d", &T);
    while(T--) {
        trie.clear();
        int n, ans = 0;
        scanf("%d", &n);
        for(int i = 0; i < n; i++) {
            scanf("%s", s);
            ans += trie.insert(s);
        }
        printf("Case #%d: %d\n", cas++, ans);
    }
    return 0;
}
