#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <vector>
#include <algorithm>
#include <sstream>
#include <queue>

typedef long long li;
typedef long long int lli;

#define F(i, n) for(i = 0;i < n; ++i)
#define FI(i, st, ft) for(i = st;i <= ft; ++i)
#define pb(a, b) a.push_back(b)
#define inf 10000000007ll
#define MAXN 100005
#define mp make_pair
#define fi first
#define se second
#define mod 1000000007

using namespace std;

struct node
{
	li end;
	struct node *next[30];
};

void insert(struct node *head, string str)
{
	li i, j;
	F(i, str.size()){
		li abc;
		if(head -> next[str[i] - 'a'] == NULL){
			struct node *n;
			n = new struct node;
			F(j, 26) n -> next[j] = NULL;
			n -> end = 0;
			head -> next[str[i] - 'a'] = n;
			head = n;
		}
		else{
			head = head -> next[str[i] - 'a'];
		}
		head -> end += 1;
	}
}

li check(struct node *head, string str)
{
	li i;
	F(i, str.size()){
		if(head -> end == 1) break;
		else head = head -> next[str[i] - 'a'];
	}
	return i;
}

int main()
{
	freopen("autocomplete.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	li n, m, i, t, cnt = 0;

	cin >> t;
	while(t--){
		li cur = 0;
		struct node *head;
		head = new struct node;
		F(i, 26) head -> next[i] = NULL;
		head -> end = 2;

		cin >> n;
		while(n--){
			string str;
			cin >> str;
			insert(head, str);
			cur += check(head, str);
		}
		printf("Case #%lld: %lld\n", ++cnt, cur);
	}
	return 0;
}
