def getMinLetters(word):
    global trie 

    min_letters = 0
    node = trie
    for letter in word:
        if not letter in node:
            node[letter] = {"wc": 0}
        
        node = node[letter]
        node["wc"] += 1

    node = trie
    for index, letter in enumerate(word):
        node = node[letter]
        if node["wc"] == 1:
            return index + 1
    
    return len(word)

if __name__ == "__main__":
    global trie

    with open("autocomplete.txt", "r") as f:
        cases_no = int(f.readline().strip())

        for i in xrange(1, cases_no + 1):
            x = int(f.readline().strip())
            
            min_letters = 0
            trie = {}
            for j in xrange(x):
                word = f.readline().strip()
                min_letters += getMinLetters(word)

            print "Case #{0}: {1}".format(i, min_letters)
