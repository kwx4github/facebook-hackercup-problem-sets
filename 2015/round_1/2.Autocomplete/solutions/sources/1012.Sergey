#include <iostream>
#include <cstdio>
using namespace std;

#define forn(i,n) for(int i = 0; i < (int)n; ++i)

int const maxl = 'z' - 'a' + 1;

struct Item{
    int cnt;
    int next[maxl];
    Item():cnt(0)
    {
        forn(i,maxl)
            next[i] = -1;
    }
};

int const maxn = 10000000;

Item tree[maxn];

int sz = 0;

void init()
{
    tree[0] = Item();
    sz = 1;
}

void add(string const& s)
{
    int n = s.length();
    int cur = 0;
    forn(i,n)
    {
        ++tree[cur].cnt;
        if (tree[cur].next[s[i] - 'a'] < 0)
        {
            tree[sz] = Item();
            tree[cur].next[s[i] - 'a'] = sz;
            cur = sz;
            ++sz;
        }
        else
        {
            cur = tree[cur].next[s[i] - 'a'];
        }
    }
    ++tree[cur].cnt;
}

int get(string const& s)
{
    int n = s.length();
    int ret = 1;
    int cur = tree[0].next[s[0] - 'a'];
    while (ret < n && tree[cur].cnt > 1)
    {
        cur = tree[cur].next[s[ret] - 'a'];
        ++ret;
    }
    return ret;
}



int main()
{
    ios_base::sync_with_stdio(false);
    freopen("B_in.txt", "r", stdin);
    freopen("B_out.txt", "w", stdout);
    int T = 0;
    cin >> T;
    forn(test, T)
    {
        init();
        int n = 0;
        cin >> n;
        int ans = 0;
        forn(i,n)
        {
            string s;
            cin >> s;
            add(s);
            ans += get(s);
        }
        cout << "Case #" << test+1 << ": " << ans << "\n";
        cerr << "ok " << test+1 << "\n";
    }
    return 0;
}
