//#include<bits/stdc++.h>
#include<iostream>
#include<sstream>
#include<string>
#include<cstdlib>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<cctype>
#include<set>
#include<bitset>
#include<algorithm>
#include<list>
#include<utility>
#include<functional>
#include <deque>
#include <numeric>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <assert.h>



#include<cmath>
#include<math.h>

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<ctype.h>

using namespace std;


const int S = 1100100;

struct LF{
    int nxt[26];

    void ini()
    {
        memset(nxt,-1,sizeof nxt);
    }
};

LF lf[S];
int nxt;

char word[S];

int ins()
{
    int l = strlen(word);
    int i,cnt=0,cur,c,f=1;
    cur=0;

    for(i=0;i<l;i++)
    {
        c = word[i]-'a';

        if(lf[cur].nxt[c]==-1)
        {
            if(f){
                cnt++;
                f=0;
            }
            lf[nxt].ini();
            lf[cur].nxt[c] = nxt;
            cur = lf[cur].nxt[c];
            nxt++;
        }
        else
        {
            cur=lf[cur].nxt[c];
            cnt++;
        }
    }
    return cnt;
}



int main()
{

    freopen("autocomplete.txt","r",stdin);
//    freopen("autocomplete_example_input.txt","r",stdin);
    freopen("out.txt","w",stdout);

    int i,j,k,tks=1,ks=1,n,ans;

    scanf("%d",&tks);

    while(tks--)
    {
        lf[0].ini();
        nxt=1;
        ans=0;

        scanf("%d",&n);

        while(n--)
        {
            scanf("%s",word);
            ans+=ins();
        }

        printf("Case #%d: %d\n",ks++,ans);
    }

    return 0;
}




