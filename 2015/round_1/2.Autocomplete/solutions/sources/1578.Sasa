using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Takmicenja.Facebook.HackerCup2015.Round1
{
    class Autocomplete
    {
        public static void oldxxx(string[] varg)
        {
            int T = int.Parse(Console.ReadLine());
            for (int t = 0; t < T; t++)
            {
                //Dictionary<string, int> dic = new Dictionary<string, int>();
                List<Tuple<string, int>> dic = new List<Tuple<string, int>>();
                int N = int.Parse(Console.ReadLine());
                for (int i = 0; i < N; i++)
                {
                    string input = Console.ReadLine();

                    int distance = 1;
                    for (int j = 0; j < dic.Count; j++)
                    {

                        int delta = GetPreklapanje(input, dic[j].Item1)+1;
                      //  if (delta > dic[j].Item2)
                        //    dic[j] = new Tuple<string, int>(dic[j].Item1, delta>dic[j].Item1.Length?dic[j].Item1.Length:delta);
                        if (delta > distance)
                            distance = delta;


                    }
                    dic.Add(new Tuple<string, int>(input, distance>input.Length?input.Length:distance));

                   // if (i % 1000 == 0)
                   //     Console.WriteLine(i);
                }

                int rv = 0;
                for (int i = 0; i < dic.Count; i++)
                {
                    rv += dic[i].Item2;
                }

                Console.WriteLine(String.Format("Case #{0}: {1}", (t + 1), rv));
            }

            
        }

        public static void Main(string[] varg)
        {
            int T = int.Parse(Console.ReadLine());
            for (int t = 0; t < T; t++)
            {
                //Dictionary<string, int> dic = new Dictionary<string, int>();
                List< List<Tuple<string, int>>> DicTotal = new List< List<Tuple<string, int>>>();
                for (int i=0;i<30;i++)
                {
                    DicTotal.Add(new List<Tuple<string,int>>());
                }
                int N = int.Parse(Console.ReadLine());
                for (int i = 0; i < N; i++)
                {
                    string input = Console.ReadLine();
                    var dic = DicTotal[input[0]-'a'];
        
                    int distance = 1;
                    for (int j = 0; j < dic.Count; j++)
                    {

                        int delta = GetPreklapanje(input, dic[j].Item1) + 1;
                        //  if (delta > dic[j].Item2)
                        //    dic[j] = new Tuple<string, int>(dic[j].Item1, delta>dic[j].Item1.Length?dic[j].Item1.Length:delta);
                        if (delta > distance)
                            distance = delta;


                    }
                    dic.Add(new Tuple<string, int>(input, distance > input.Length ? input.Length : distance));

                   // if (i % 1000 == 0)
                   //     Console.WriteLine(i);
                }

                int rv = 0;
                foreach (var dic in DicTotal)
                {
                    for (int i = 0; i < dic.Count; i++)
                    {
                        rv += dic[i].Item2;
                    }
                }

                Console.WriteLine(String.Format("Case #{0}: {1}", (t + 1), rv));
            }


        }

        private static int GetPreklapanje(string a, string b)
        {
            int rv = 0;
            int index = 0;
            while(index<a.Length && index<b.Length)
            {
                if (a[index] == b[index])
                    rv++;
                else
                    break;
                index++;
            }
            return index;
        }
    }
}
