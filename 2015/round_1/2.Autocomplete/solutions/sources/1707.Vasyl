//solution by Wsl_F
#include <bits/stdc++.h>
#include <iostream>
#include <fstream>
#include <sstream>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <algorithm>
#include <functional>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <stdlib.h>
#include <stdio.h>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <bitset>
#include <numeric>
#include <cassert>
#include <time.h>
#include <ctime>
#include <memory.h>
#include <stdint.h>
#include <complex>
#include <utility>
#include <climits>
#include <cctype>
#include <x86intrin.h>



using namespace std;
#pragma comment(linker, "/STACK:1024000000,1024000000")


typedef long long LL;
typedef unsigned long long uLL;
typedef double dbl;
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<LL> vll;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;

#define mp(x,y)  make_pair((x),(y))
#define pb(x)  push_back(x)
#define sqr(x) ((x)*(x))

#pragma comment(linker, "/STACK:66777216")



class Trie
{
private:
    static const int max_number_of_letters= 1000*1000+1000;
    static const int alphavet_size= 30;
    int trie[max_number_of_letters+10][alphavet_size];
    int length;
public:
    Trie()
    {
        clear();
    }

    int add(string & s)
    {
        int n= s.length();
        int current= 0;
        for (int i= 0; i<n; i++)
            if (trie[current][s[i]-'a']>0) current= trie[current][s[i]-'a'];
            else
            {
                for (int j= i; j<n; j++)
                {
                    trie[current][s[j]-'a']= length;
                    current= length++;
                }
                return i+1;
            }
        return n;
    }

    void clear()
    {
        length= 1;
        memset(trie,-1,sizeof(trie));
    }
};

Trie trie;

void solve()
{
 int n;
 cin>>n;
 string s;
 trie.clear();
 LL ans= 0;
 LL t= 0;
 for (int i=0; i<n; i++)
 {
    cin>>s;
    t= trie.add(s);
    ans+= t;
 }
 cout<<ans<<endl;
}

void init()
{
}

int main()
{
 ios_base::sync_with_stdio(0);
 cin.tie(0);
 // LL a[110];
 // memset(a,0,sizeof(a));

 freopen("input.txt","r",stdin);
 freopen("output.txt","w",stdout);
 //cout<<fixed;
 //cout<<setprecision(9);

 srand(__rdtsc());


 init();
 int T;
 cin>>T;
 for (int testCase=1; testCase<=T; testCase++)
 {
     cout<<"Case #"<<testCase<<": ";
     solve();
 }

 return 0;
}


