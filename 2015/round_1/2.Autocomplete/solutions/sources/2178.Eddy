#include<bits/stdc++.h>
using namespace std;
#define ALPH_SIZE 26
#define For(i,a,n) for(int i=a;i<n;i++)
#define Fsz(i,a) For(i,0,int(a.size()))
struct Nodo
   {
   int words,pre;
   vector<Nodo*> next;
   Nodo()
      {
      pre=words=0;
      next.resize(ALPH_SIZE);
      Fsz(i,next)
         next[i]=NULL;
      }
   };
struct Trie
   {
      Nodo* Raiz;

      Trie()
         {
         Raiz = new Nodo();
         }
      void insert(char *s)
         {
         Nodo* cur = Raiz;
         int pos;
         for(int i=0;s[i];i++)
            {
            pos=s[i]-'a';
            if(cur->next[pos]==NULL)
               cur->next[pos]=new Nodo();
            cur = cur->next[pos];
            cur->pre++;
            }
         ++(cur->words);
         }
      int calc(char *s)
         {
         Nodo* cur = Raiz;
         int pos,ans=0;
         for(int i=0;s[i];i++)
            {
            pos=s[i]-'a';
            ans++;
            if(cur->next[pos]==NULL)
               cur->next[pos]=new Nodo();
            cur = cur->next[pos];
            if(cur->pre==1)
               break;
            }
         return ans;
         }
   };

int main()
   {
   freopen("autocomplete.txt","r",stdin);
   freopen("autocomplete.out","w",stdout);
   int t,n,ans;
   char a[1000010];
   scanf("%d",&t);
   For(nc,0,t)
      {
      scanf("%d",&n);
      Trie T;
      ans=0;
      For(i,0,n)
         {
         scanf("%s",a);
         T.insert(a);
         ans+=T.calc(a);
         }
      printf("Case #%d: %d\n",nc+1,ans);
      }
   return 0;
   }
