#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>
#include <unordered_set>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
#define next NEXT
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const int N = 2000000;

int n;
int m;
map<char, int> next[N];
int o;

int main () {
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
		cin >> n;
		int ans = 0;
		o = 1;
		for (int i = 0; i < n; i++) {
			string s;
			cin >> s;
			{
				int x = 0, len = 0;
				while (len < sz (s)) {
					if (next[x].find (s[len]) == next[x].end ()) {
						len++;
						break;
					}	
					x = next[x][s[len]];
					len++;
				}
				ans += len;
			}
			{
				int x = 0, len = 0;
				while (len < sz (s)) {
					if (next[x].find (s[len]) == next[x].end ())
						next[x][s[len]] = o++;
					x = next[x][s[len]];
					len++;
				}
			}
		}
		for (int i = 0; i < o; i++) next[i].clear ();
		cout << "Case #" << it << ": " << ans;
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
	}
	return 0;
}