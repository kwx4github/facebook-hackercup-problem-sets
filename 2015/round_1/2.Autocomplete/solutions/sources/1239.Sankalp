#include<bits/stdc++.h>
#define intMAX 1123456789LL
#define MAX intMAX * intMAX
#define F first
#define S second
#define mp make_pair
#define mq make_quadriple
#define ll long long
#define pb push_back
#define all(c) c.begin(),c.end()
#define sf(a) scanf("%d",&a);
#define sl(a) scanf("%lld",&a);
#define SIZE 26
#define GETINDEX(c) ((int)c-(int)'a')
using namespace std;
typedef struct node_ node; 
struct node_
{
	node_ *children[SIZE];	
};
typedef struct trie_ trie;
struct trie_
{
	node *root;
};
node *getnode()
{
	node *retnode;
	retnode=NULL;
	retnode=new node;
	if(retnode)
	{
		for(int i=0;i<SIZE;i++)
		{
			retnode->children[i]=NULL;
		}
	}
	return retnode;
}
void initialize(trie *trie1)
{
	trie1->root=getnode();
}
int insert(trie *trie1,string str)
{
	int i;
	int level;
	int index;
	int len=str.length();
	int cnt=0;
	int flag=0;
	node *pCrawl=trie1->root;
	for(i=0;i<len;i++)
	{
		index=GETINDEX(str[i]);
		if(!pCrawl->children[index])
		{
			flag=1;
			pCrawl->children[index]=getnode();
		}
		else
			cnt++;
		pCrawl=pCrawl->children[index];
	}
	return cnt+flag;
}
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int t,z,n,y,cnt;
	string s;
	sf(t)
	for(z=1;z<=t;z++)
	{
		trie trie1;
		initialize(&trie1);
		sf(n)
		cnt=0;
		for(y=1;y<=n;y++)
		{
			cin>>s;
			cnt+=insert(&trie1,s);
		}
		printf("Case #%d: %d\n",z,cnt);
	}
	return 0;
}
