#include <cstdio>
#include <cassert>
#include <cstring>
#include <algorithm>
using namespace std;

#ifdef DEBUG
#define D(x...) fprintf(stderr,x)
#else
#define D(x...)
#endif

typedef long long ll;

const int MAX_S = (1e6)+10;
const int MAX_L = 26;

int S;
int tree[MAX_S][MAX_L];

int N;
char buffer[MAX_S];

void reset(void) {
    for(int i=0;i<S;i++) {
        for(int j=0;j<MAX_L;j++) {
            tree[i][j] = -1;
        }
    }
    S = 0;
}

int main() {
    for(int i=0;i<MAX_S;i++) {
        for(int j=0;j<MAX_L;j++) {
            tree[i][j] = -1;
        }
    }

    int T;
    scanf("%d",&T);

    for(int z=1;z<=T;z++) {
        reset();
        S = 1;

        ll tot = 0ll;

        scanf("%d",&N);
        for(int i=0;i<N;i++) {
            scanf(" %s ",buffer);

            int L = strlen(buffer);
            int cur = 0;
            int firstBranch = L;
            for(int j=0;j<L;j++) {
                int nek = buffer[j]-'a';
                if(tree[cur][nek] == -1) {
                    firstBranch = min(firstBranch, j+1);
                    tree[cur][nek] = S;
                    S++;
                }
                cur = tree[cur][nek];
            }

            tot += (ll)firstBranch;
        }

        printf("Case #%d: %lld\n",z,tot);
    }
    return 0;
}
