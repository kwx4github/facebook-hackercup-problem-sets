#include <iostream>
#include <vector>
#include <string>
#include <cstdio>

using namespace std;

vector<int> primes;
int primacity[10000001];

struct Node{
	Node *a[40];
	char c;
	~Node(){
		for (char i = 'a'; i <= 'z'; i++){
			if (a[i-'a']) delete a[i-'a'];
		}
		//cout << 1;
	}
	Node(){
		for (char i = 'a'; i <= 'z'; i++){
			a[i-'a'] = 0;
		}
	}	
};

Node start;

int main(){
	freopen("Autocomplete.txt", "r", stdin); freopen("Autocomplete_o.txt", "w", stdout);
	int T;
	cin >> T;
	for (int t = 1; t <= T; t++){
		int n;
		cin >> n;
		int ans = 0;
		
		for(int i = 0; i < n; i++){
			string w;
			cin >> w;
			Node* c = &start;
			int j = 0;
			int d = 0;
			bool write = false;
			for (;;){
				/*cout << j << "-st letter" << endl;
				cout << "depth: " << d << endl;
				cout << "Next node: " << c->a[w[j]-'a'] << endl;*/
				if (c->a[w[j]-'a'] == 0){
					c->a[w[j]-'a'] = new Node();
					if (!write) d++;
					write = true;
				}
				c = c->a[w[j]-'a'];
				j++;
				if (!write) d++;
				if (j == w.size()){
					break;
				}
			}
			//cout << d << endl;
			ans += d;
		}
		cout << "Case #" << t << ": " << ans << endl;
		start = Node();
	}
	//system("pause");
	return 0;
}
