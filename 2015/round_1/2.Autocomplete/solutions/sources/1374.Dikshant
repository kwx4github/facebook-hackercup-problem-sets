#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char a[10000001];

struct node {
    char val;
    struct node *next[26];
};

struct node * init(struct node *head, char x)
{
    head->val = x;
    int i;
    for (i = 0; i < 26; i++) {
        head->next[i] = NULL;
    }
    return head;
}

struct node * sch(struct node *head, char a[], int *c)
{
    int i = 0;
    int l = 0;
    struct node *x = head;
    int n = strlen(a);
    while (i < n && x->next[a[i]-97] != NULL) {
        x = x->next[a[i]-97];
        i++;
        l++;
    }
    if (i < n) {
        l++;
        while (i < n) {
            x->next[a[i]-97] = (struct node *) malloc(sizeof(struct node));
            x->next[a[i]-97] = init(x->next[a[i]-97], a[i]);
            x = x->next[a[i]-97];
            i++;
        }
    }
    *c = l;
    return head;
}

int main()
{
    int t;
    int n;
    int k = 0;
    freopen("autocomplete.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    scanf("%d", &t);
    for (k = 0; k < t; k++) {
        printf("Case #%d: ", k+1);
        scanf("%d", &n);
        struct node *head = (struct node *)malloc(sizeof(struct node));
        head = init(head, '0');
        int i;
        long long c = 0;
        for (i = 0; i < n; i++) {
            scanf("%s", a);
            int l = 0;
            head = sch(head, a, &l);
            c = c + l;
        }
        printf("%lld\n", c);
    }

    return 0;
}
