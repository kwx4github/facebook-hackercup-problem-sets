#include <bits/stdc++.h>

using namespace std;

struct node {
    int x;
    node* c[26];
    node() {
        x = 0;
        for(int i = 0; i < 26; i++) c[i] = NULL;
    }
};

node* root;

void add(string s) {
    node* tmp = root;
    for(int i = 0; i < s.length(); i++) {
        int j = s[i] - 'a';
        tmp->x++;
        if (tmp->c[j] == NULL) tmp->c[j] = new node();
        tmp = tmp->c[j];
    }
    tmp->x++;
}

int calc(string s) {
    node* tmp = root;
    for(int i = 0; i < s.length(); i++) {
        tmp = tmp->c[s[i] - 'a'];
        if (tmp->x == 1) return(i + 1);
    }
    return s.length();
}

int main()
{
    freopen("autocomplete.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    int test;
    cin >> test;
    for(int tc = 1; tc <= test; tc++) {
        int n;
        cin >> n;
        root = new node();
        long long res = 0;
        for(int i = 1; i <= n; i++) {
            string s;
            cin >> s;
            add(s);
            res += calc(s);
        }
        printf("Case #%d: %lld\n", tc, res);
        delete root;
    }
}
