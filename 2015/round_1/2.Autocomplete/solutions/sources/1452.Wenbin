#include <iostream>
#include <sstream>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <string>
#include <ctime>
#include <cmath>
#include <vector>
#include <deque>
#include <map>
#include <string>
#include <cctype>
using namespace std;

#define REP(i,n) for(int i=0;i<(n);++i)
#define FOR(i,a,b) for(int i=(a);i<=(b);++i)
#define RFOR(i,a,b) for(int i=(a);i>=(b);--i)

typedef long long LL;

struct TreeNode {
    char ch;
    int num;
    vector<TreeNode *> children;
    TreeNode(char x) : ch(x), num(1) {}
};

void run() {
    int n;
    cin >> n;
    LL res = 0;
    TreeNode *root = new TreeNode('#');
    while (n--) {
        string str;
        cin >> str;
        TreeNode *now = root;
        bool found = false;
        REP(i,str.length()) {
            char cur = str[i];
            int idx = -1;
            REP(j,now->children.size()) {
                if (now->children[j]->ch == cur) {
                    idx = j;
                    break;
                }
            }
            if (idx != -1) {
                now->children[idx]->num++;
                now = now->children[idx];
            } else {
                TreeNode *t = new TreeNode(cur);
                now->children.push_back(t);
                now = t;
                if (!found) {
                    res += i + 1;
                    found = true;
                }
            }
        }
        if (!found) res += str.length();
    }
    cout << res << endl;
}

int main() {
    int T;
    cin >> T;
    FOR(t,1,T) {
        cout << "Case #" << t << ": ";
        run();
    }
    return 0;
}

