#include<bits/stdc++.h>
using namespace std;

struct child
{
	child *c[30];
};
struct parent
{
	child *p;
};
void insert(parent *root, char *str, long &ans)
{
	long i, len=strlen(str);
	child *traverse;
	traverse=(root->p);
	for(i=0; i<len; i++)
	{	
		if(traverse->c[str[i]-'a'] == NULL)			
		{
			if(!ans)
				ans+=(i+1);	
			traverse->c[str[i]-'a']=(child*)malloc(sizeof(child));
			for(int j=0; j<30; j++)
			traverse->c[str[i]-'a']->c[j]=NULL;
		}	
		traverse=traverse->c[str[i]-'a'];
	}
	if(!ans)
		ans+=(i);
}

int main()
{
	long c, t;
	cin>>t;
	for(c=1; c<=t; c++)
	{
		long cur, i, n;
		cin>>n;
		//cout<<n<<endl;
		parent trie;
		trie.p=NULL;
		trie.p=(child*)malloc(sizeof(child));
		for(i=0; i<30; i++)
			trie.p->c[i]=NULL;
		long ans=0;
		char str[1000010]="";
		for(i=0; i<n; i++)
		{
			cur=0;
			scanf("%s", str);
			//cout<<strlen(str)<<endl;
			insert(&trie, str, cur);
			ans+=cur;
		}
	//	cout<<"Case #"<<c<<": "<<ans<<endl;
		printf("Case #%ld: %ld\n", c, ans);
	}
	return 0;
}