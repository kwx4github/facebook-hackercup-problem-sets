#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <ctime>
#include <climits>
#include <cassert>
#include <vector>
#include <queue>
#include <stack>
#include <deque>
#include <set>
#include <map>
#include <bitset>
#include <utility>
#include <algorithm>

#define forn(i, n) for (int i = 0; i < int(n); i++)

typedef long long   li;
typedef long double ld;

const int N = 1000000000;
const int INF = 1000000000;
const ld EPS = 1E-10;

using namespace std;

typedef unsigned long long hh_t;

pair<hh_t,hh_t> hh(pair<hh_t,hh_t> h, char c)
{
    h.first = (h.first * 31769 + c) % 13091204281ULL;
    h.second = (h.second * 929 + c) % 6620830889ULL;
    return h;
}

int main(int argc, char* argv[])
{
    freopen("input.txt", "rt", stdin);

    int testCases;
    cin >> testCases;

    forn(testCase, testCases)
    {
        set<pair<hh_t,hh_t>> u;
        int n;
        assert(cin >> n);
        int result = 0;
        forn(i, n)
        {
            string s;
            assert(cin >> s);
            assert(s.length() > 0);
            pair<hh_t,hh_t> h(0ULL, 0ULL);
            for (int j = 0; j < s.length(); j++)
            {
                h = hh(h, s[j]);
                if (j + 1 == s.length() || !u.count(h))
                {
                    result += j + 1;
                    while (j < s.length())
                    {
                        u.insert(h);
                        h = hh(h, s[++j]);
                    }
                }                
            }
        }
        cout << "Case #" << testCase + 1 << ": " << result << endl;
    }

    return 0;
}
