# include <string>
# include <cstring>
# include <iostream>
# include <cstdio>
# include <algorithm>
# include <set>
using namespace std;

char s[1000006];

int GetUniquePrefix(const string& a, const string& b)
{
    for(int i=0;i<a.size();i++)
    {
        if (a[i] != b[i] )
            return i+1;
    }
    return a.size();
}

set<string> dic;
string str;

int main() {
    int T;
    cin >> T;
    for(int cas=1; cas<=T; cas++)
    {
        dic.clear();

        int N;
        set<string>::iterator n,p;

        cin >> N;
        int tot = 0;

        for(int i=0;i<N;i++) {
            cin>>str;
            n = p = dic.insert(str).first;
            n++;
            if ( n!=dic.end() && p!=dic.begin()) {
                p--;
                tot += max(GetUniquePrefix(str, *n), GetUniquePrefix(str, *p));
            }
            else if ( n!=dic.end() ) {
                tot += GetUniquePrefix(str, *n);
            }
            else if ( p!=dic.begin()) {
                p--;
                tot += GetUniquePrefix(str, *p);
            }
            else
                tot += 1;
        }
        cout << "Case #" << cas << ": " << tot << endl;
    }
    return 0;
}

