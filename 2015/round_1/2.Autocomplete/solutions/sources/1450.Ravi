#include <bits/stdc++.h>
using namespace std;
#define repeat(x) for(int fl = 0;fl <x; fl ++)
#define repeat2(x) for(int fl2=0;fl2<x;fl2++)
#define repeat3(x) for (int fl3 = 0;fl3<x ;fl3 ++)
#define rep(a, b) for (int r = int(a); r <= int(b); r++)
#define pb push_back
typedef long long ll;
typedef unsigned int ui;
typedef vector<int> vi;
typedef pair<int, int> ii;
#define inf 2147483647
#define minf -2147483648
#define mil 1000000
class n{
	public :
		//~ int c[26];
		n* p[26];
	n(){
		//~ repeat(26)c[fl]=0;
		repeat(26)p[fl]=0;
	}
	int add(string s){
		if(s.length()==0)return 0;
		bool flag = 0;
		if(p[s[0]-'a'] == 0){
			p[s[0]-'a'] = new n();
			flag = 1;
			//~ cout<<s[0]<<endl;
		}
		if(flag==0){
			//~ cout<<s<<endl;
			int x=(p[s[0]-'a']->add(s.substr(1,s.length()-1)));
			//~ cout<<x<<endl;
			return 1 + x;
		}
		else {
			//~ cout<<s<<endl;
			p[s[0]-'a']->add(s.substr(1,s.length()-1));
			//~ cout<<'h'<<endl;
			return 1;
		}
	}
	//~ int findtrace(string s){
		//~ if(s.size()==0)return 0;
		//~ if(s.size()==1)return 1;
		//~ assert(c[s[0]-'a'] >=1);
		//~ if(c[s[0]-'a'] > 1)return 1+(p[s[0]-'a']->findtrace(s.substr(1,s.size()-1)));
		//~ else return 1;
	//~ }
	~n(){
		repeat(26){
			if(p[fl]!=0)delete p[fl];
		}
	}
};
vector<string> v;

int main(){ios_base::sync_with_stdio(false);
int t;cin>>t;int ca=0;
while(t--){ca++;
	cout<<"Case #"<<ca<<": ";
	n head;
	int no;cin>>no;v.resize(no);
	repeat(no){
		cin>>v[fl];
	}
	if(no==1){
		cout<<1<<endl;continue;
	}
	long long int ret = 0;
	repeat(no){
		ret = ret + (long long int)head.add(v[fl]);
		//~ cout<<ret<<endl;
	}
	cout<<ret<<endl;
}



return 0;
}
