#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cstring>

using namespace std;

struct A{
    int nx[30];
    int cnt;
}a[1005000];
string s;
int sz = 1;
int res = 0;
void init(){
    sz = 1;
    memset(a[0].nx, -1, sizeof(a[0].nx));
}

void dfs (int v, int lvl = 0) {
    if (a[v].cnt == 1) {res += lvl, cout << lvl << ", "; return;}
    for (int i = 0; i < 26; i++) {
        if (a[v].nx[i] != -1){
            dfs(a[v].nx[i],lvl+1);
        }
    }
}
void solve()
{
    init();
    int n;
    cin >> n;
    a[0].cnt = n;
    res = 0;
    for (int i = 0; i < n; i++) {
        cin >> s;
        bool done = 0;
        int v = 0;
        for (int j = 0; j < s.length(); j++){
            int to = s[j] - 'a';
            if (a[v].nx[to] == -1){
                a[v].nx[to] = sz;
                a[sz].cnt = 0;
                memset(a[sz].nx, -1, sizeof(a[sz].nx));
                if (!done) res += j+1, done = 1;
                sz++;
            }
            v = a[v].nx[to];
            a[v].cnt++;
        }
        if (!done) res += s.length();
    }
    //dfs(0);
    cout << res << endl;
}

int main()
{      
    int t;
    cin >> t;
    for (int tt = 1; tt <= t; tt++) {
        cout << "Case #" << tt << ": ";
        solve();
    }


    return 0;
}
