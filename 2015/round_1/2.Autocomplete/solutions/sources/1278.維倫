#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

#define LAN

using namespace std;
const int MAXN = 1005000;

int N;

char present[MAXN];
int cnt[MAXN];
vector<int> G[MAXN];
int nowtotal;

//string ss;
//int len_to_do;

void input(void)
{
	cin >> N;
	for(int i=0;i<MAXN;i++)
		G[i].clear();
	memset(cnt,0,sizeof(cnt));
	nowtotal = 1;
}

int add_edge(int u,char c)
{
	G[u].push_back(nowtotal);
	present[nowtotal] = c;
	nowtotal++;
	return nowtotal-1;
}

void add_word(string &ss)
{
	int len_to_do = ss.size();
	int now=0, next;
	int now_to_add = 0;
	while(true)
	{
		cnt[now]++;
		if(now_to_add>=len_to_do)
			return;
		int len = G[now].size();
		next = -1;
		for(int i=0;i<len;i++)
			if(present[G[now][i]]==ss[now_to_add])
				next = G[now][i];
		if(next==-1)
			next = add_edge(now,ss[now_to_add]);
		now = next;
		now_to_add++;
	}
}
/*
long long int find_word(int u,int now_to_find)
{
	if(cnt[u]==1 && u!=0)
		return 0;
	if(now_to_find==len_to_do)
		return 0;
	int len = G[u].size();
	for(int i=0;i<len;i++)
		if(present[G[u][i]]==ss[now_to_find])
			return find_word(G[u][i],now_to_find+1) + 1;
	cout << "Word to find : " << ss << " find : " << ss[now_to_find] << endl;
	for(int i=0;i<len;i++)
		printf("%d : %c\n",i,present[G[u][i]]);
	puts("ERROR");
	return -1;
}
*/
long long int find_word(string &ss)
{
	int len_to_do = ss.size();
	long long int ans = 0;
	int now=0, next;
	int now_to_find=0;
	while(true)
	{
		if(cnt[now]==1 && now!=0)
			return ans;
		if(now_to_find>=len_to_do)
			return ans;
		int len = G[now].size();
		for(int i=0;i<len;i++)
			if(present[G[now][i]]==ss[now_to_find])
				next = G[now][i];
		ans++;
		now_to_find++;
		now = next;
	}
	cout << "Word to find : " << ss << " find : " << ss[now_to_find] << endl;
	for(int i=0;i<G[now].size();i++)
		printf("%d : %c\n",i,present[G[now][i]]);
	puts("ERROR");
	return -1;
}

void solve(void)
{
	long long int ans = 0;
	for(int i=0;i<N;i++)
	{
		string ss;
		cin >> ss;
		//len_to_do = ss.size();
		add_word(ss);
		ans += find_word(ss);
	}
	printf("%lld\n",ans);
}

int main(void)
{
#ifdef LAN
	//freopen("autocomplete_example_input.txt","r",stdin);
	freopen("autocomplete.txt","r",stdin);
	freopen("autocomplete_self_output.txt","w",stdout);
#endif
	int T;
	cin >> T;
	for(int i=1;i<=T;i++)
	{
		input();
		printf("Case #%d: ",i);
		solve();
	}
	return 0;
}
