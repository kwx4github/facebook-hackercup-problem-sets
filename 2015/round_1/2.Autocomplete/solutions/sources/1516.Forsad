#include<iostream>
#include<cstdio>
#include<string>
#include<vector>
#define SZ 100005
using namespace std;
struct trie_node
{
    trie_node *child[26];
};
int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("Bout.txt","w",stdout);
    ios_base::sync_with_stdio(false);
    int t,T,n;
    cin>>T;
    string s;
    for(int t=1;t<=T;t++)
    {
        int total=0;
        cin>>n;
        trie_node *root=new trie_node();
        vector<trie_node *> v;
        v.push_back(root);
        trie_node *cur;
        for(int j=0;j<n;j++)
        {
            cin>>s;
            cur=root;
            bool first=true;
            for(int i=0;i<s.size();i++)
            {
                if(cur->child[s[i]-'a']==NULL)
                {
                    if(first)
                    {
                        total++;
                        first=false;
                    }
                    cur->child[s[i]-'a']=new trie_node();
                    cur=cur->child[s[i]-'a'];
                    v.push_back(cur);
                }
                else
                {
                    total++;
                    cur=cur->child[s[i]-'a'];
                }
            }
        }
        for(int i=0;i<v.size();i++)
            delete v[i];
        cout<<"Case #"<<t<<": "<<total<<endl;
    }
    return 0;
}
