#include <iostream>
#include <string>
#include <cstdio>
#include <ctime>
#include <cassert>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <algorithm>
#include <utility>
#include <cstdlib>
#include <cstring>

using namespace std;

#ifdef WIN32
	#define lld "%I64d"
#else
	#define lld "%lld"
#endif

#define mp make_pair
#define pb push_back

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int M = 1e6 + 10;
const ld Q = 1e9 + 15.;
char s[M];
int g[M][30];

int main(){
	srand(time(NULL));
	freopen("autocomplete.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int t, tq, root, i, j, U = 0, ALP = 30, cur, ans, n1, n;
	scanf("%d", &t);
	root = 0;
	U = M;
	for (tq = 0; tq < t; tq++){
		for (i = 0; i < U; i++){
			for (j = 0; j < ALP; j++)
				g[i][j] = -1;
		}
		U = 1;
		ans = 0;
		scanf("%d", &n);
		for (i = 0; i < n; i++){
			scanf("%s", s);
			cur = root;
			n1 = strlen(s);
			for (j = 0; j < n1; j++){              
				if (g[cur][s[j] - 'a'] == -1)
					break;
				cur = g[cur][s[j] - 'a'];
			} 
			if (j == n1){
				ans += j;
				continue;
			}
			ans += j + 1;
			for (; j < n1; j++){
				g[cur][s[j] - 'a'] = U++;
				cur = U - 1;
			}
		}
		printf("Case #%d: %d\n", tq + 1, ans);
	}
	return 0;       
}                                              	