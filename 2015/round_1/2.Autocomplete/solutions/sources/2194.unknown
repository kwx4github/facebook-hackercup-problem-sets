#include <iostream>
#include <string>
#include <fstream>
using namespace std;

struct node
{
bool ispresent;
node *child[26];
node()
{
ispresent=true;
for(int i=0;i<26;i++)
child[i]=NULL;
}
};

class trie
{
private:
node *root;

public:

void init_trie()
{
root=new node();
}

int insert(string s)
{
int c=1;node *temp=root;
for(int i=0;i<s.length();i++)
{
if(temp->child[s[i]-'a']!=NULL)
c++;
else
temp->child[s[i]-'a']=new node();
temp=temp->child[s[i]-'a'];
}
if(c==s.length()+1)
return c-1;
return c;
}
};

int main() {
	ifstream in("autocomplete.txt");
	ofstream out("autocomplete_output.txt");
	int t;
	in>>t;
	for(int y=1;y<=t;y++)
	{
	int n;
	in>>n;
	trie tr;
	tr.init_trie();
	int res=0;
	for(int i=0;i<n;i++)
	{
	string s;
	in>>s;
	res+=tr.insert(s);
	}
	out<<"Case #"<<y<<": ";
	out<<res<<"\n";
	}
	return 0;
}
