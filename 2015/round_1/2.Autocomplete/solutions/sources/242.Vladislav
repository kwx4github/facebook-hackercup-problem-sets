#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
#define MAXL 1000010
struct node{
  int fo[26];
  void clean(){
   memset(fo , -1 , sizeof fo);
              }
  node(){clean();}
};
char buf[MAXL];
node T[2*MAXL];
int SZ = 0;
int add(const string& w){
  int ret = -1;
  int pos = 0;
  for(int i=0;i<sz(w);++i){
   char c = w[i] - 'a';
   if(T[pos].fo[c] == -1){
    if(ret == -1) ret = i+1;
    T[pos].fo[c] = SZ++;
                         }
   pos = T[pos].fo[c];
                          }
  return ret == -1 ? sz(w) : ret;
}
void doit(int CASE){
  SZ = 1;
  int N , ans = 0;
  scanf("%d" , &N);
  for(int i=0;i<N;++i)
   scanf("%s" , &buf),
   ans += add(string(buf));
  printf("Case #%d: %d\n" , CASE , ans);
  for(int i=0;i<=SZ;++i)
   T[i].clean();
  SZ = 0;
}
int main(){
  int Q;
  scanf("%d" , &Q);
  for(int i=1;i<=Q;++i)
   doit(i);
  return 0;
}
