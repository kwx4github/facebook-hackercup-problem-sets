package fb_hackercup.year_2015.round1;

import java.io.*;

/**
 * Created by eryu on 1/18/15.
 */
public class Autocomplete {
	private static BufferedReader in;
	private static BufferedWriter out;

	static class Node {
		char letter;
		Node[] children = new Node[26];
		Node(char c) {
			letter = c;
		}

		void setChild(char c) {
			if (children[c - 'a'] == null) children[c - 'a'] = new Node(c);
		}

		Node getChildAt(char c) {
			return children[c - 'a'];
		}
	}

	static class Trie {
		Node root;
		int numLetters;

		Trie() {
			numLetters = 1;
			root = new Node('0');
		}

		void addWord(String s) {
			Node curr = root;
			for (int i = 0; i < s.length(); i++) {
				char c = s.charAt(i);
				curr.setChild(c);
				curr = curr.getChildAt(c);
			}
		}

		void count(String s) {
			char first = s.charAt(0);
			if (s.length() > 0 && first >= 'a') count(root.getChildAt(first), s, 1);
			numLetters++;
		}

		void count(Node curr, String s, int i) {
			if (curr != null && i < s.length()) {
				numLetters++;
				count(curr.getChildAt(s.charAt(i)), s, i + 1);
			}
		}
	}

	public static void main(String[] args) throws IOException {
//		in = new BufferedReader(new InputStreamReader(System.in));
		in = new BufferedReader(new FileReader("autocomplete_input.txt"));
		out = new BufferedWriter(new FileWriter(new File("autocomplete_output.txt")));

		int T = Integer.parseInt(in.readLine());
		for (int t = 1; t <= T; t++) {
			int N = parseInt(in.readLine());
			Trie trie = new Trie();
			trie.addWord(in.readLine());
			for (int i = 2; i <= N; i++) {
				String s = in.readLine();
				trie.count(s);
				trie.addWord(s);
			}
			out.write("Case #" + t + ": " + trie.numLetters);
			out.newLine();
		}
		out.close();
	}

	static String[] parseArray(String s, String pattern) {
		return s.split(pattern);
	}

	static int parseInt(String s) {
			return Integer.parseInt(s);
		}

}
