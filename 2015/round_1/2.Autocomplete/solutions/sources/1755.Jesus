#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <bitset>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <set>
#include <iterator>
#include <sstream>
#include <stdlib.h>
#include <cmath>
#define FOR(i,A) for(typeof (A).begin() i = (A).begin() ; i != (A).end() ; i++)
#define f(i,a,b) for(int i = a ; i < b ; i++)
#define fd(i,a,b) for(int i = a ; i >= b ; i--)
#define debug( x ) cout << #x << " = " << x << endl
#define clr(v,x) memset( v, x , sizeof v )
#define all(x) (x).begin() , (x).end()
#define mp make_pair
#define pb push_back
#define rall(x) (x).rbegin() , (x).rend()
#define PI acos( -1.0 )
#define EPS 1E-9
#define MOD 1000000007
#define INF 2000000000
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;

using namespace std;

const int TAM_ALFABETO = 26;

struct node{
    bool esFinal;
    int cuentaPrefijo;
    node* hijo[TAM_ALFABETO];
}*head;

void init(){
    head = new node();
    head->cuentaPrefijo = 0;
    head->esFinal = false;
}

void insertar(string word){
    node *current = head;
    current->cuentaPrefijo++;
    for(int i = 0;i < word.size();i++){
        int letra = int(word[i]-'a');
        if(current->hijo[letra] == NULL){
            current->hijo[letra] = new node();
        }
        current->hijo[letra]->cuentaPrefijo++;
        current = current->hijo[letra];
    }
    current->esFinal = true;

}

int buscar(string word){
    int res = 0;
    node *current = head;
    for(int i=0; i < word.size();i++){
        int letra = int(word[i] - 'a');
        current = current->hijo[letra];
        res++;
        if(current->cuentaPrefijo == 1){
            break;
        }
    }
    return res;
}

int main(){
    int T; cin >> T;
    f(t,0,T){
        init();
        int n; cin >> n;
        ll res = 0;
        f(i,0,n){
            string s; cin >> s;
            insertar(s);
            int val = buscar(s);
            //debug(val);
            res+= val;
        }


        cout<<"Case #"<<t+1<<": "<< res<<endl;
    }

    return 0;
}
