#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
using namespace std;
int in(){int r=0,c;for(c=getchar_unlocked();c<=32;c=getchar_unlocked());if(c=='-') return -in();for(;c>32;r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());return r;}

struct Trie{
  map<char,Trie*> nxt;
  bool w;
};

Trie* root;

char buff[1001001];

int insert(){
  Trie* cur = root;
  
  int ans = 0;
  int i = 0;
  bool f = true;
  
  while(buff[i]!=0){
    
    if((!cur->w) && (cur->nxt.size()==0)) f= false;
    
    if(f) ans++;
    
    
    
    
    if(cur->nxt[buff[i]] == 0) cur->nxt[buff[i]]=new Trie();
    
    cur = cur->nxt[buff[i]];
    i++;
  }
  cur->w = true;
  
  
  return ans;
  
}

int fun(){
  scanf("%s",buff);
  
  return insert();
}

void solve(){
  int N = in();
  
  int i;
  
  int ans = 1;
  root = new Trie();
  
  for(i=0;i<N;i++) ans+=fun();
  
  cout << ans << endl;
}

int main(){
  for(int i=0,T=in();i<T;i++){
      cout <<"Case #"<<i+1<<": ";
      solve();
    }
}
