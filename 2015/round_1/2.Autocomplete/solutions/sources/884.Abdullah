#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
#include<math.h>
#include<queue>
#include<stack>
#include<sstream>
#include<stdio.h>
#include<map>
#include<set>
#include<memory.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
ll gcd(ll a, ll b){
	if (!b)
		return a;
	return gcd(b, a%b);
}
ll lcm(ll a, ll b){
	return b / gcd(a, b)*a;
}
#define FOR(I,N) for(int(i)=0;i<int(N);++i)
#define FORK(I,N,K) for(int(i)=0;i<int(N);i+=int(K))
int t , n;
const int N = 1000005;
char g[N];
vector<int>freq;
vector<vector<int> >v;
int push(int m){
	int cur = 0;
	int match = 0;
	for (int i = 0; i < m; ++i){
		int nxt = g[i] - 'a';
		if (v[cur][nxt] == -1){
			v[cur][nxt] = v.size();
			v.push_back(vector<int>(26, -1));
			freq.push_back(0);
		}
		else ++match;
		cur = v[cur][nxt];
		++freq[cur];
	}
	if (!match)
		return 1;
	if (match == m)
		return m;
	return match + 1;
}
int main(){
	freopen("autocomplete.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	scanf("%d", &t);
	for (int r = 1; r <= t; ++r){
		v.clear(); freq.clear();
		v.push_back(vector<int>(26, -1));
		freq.push_back(0);
		scanf("%d", &n);
		ll res = 0;
		FOR(0, n){
			scanf("%s", g);
			int Z = push(strlen(g));
			res += Z;
		}
		printf("Case #%d: %lld\n", r , res);
	}
	cin >> t;
}