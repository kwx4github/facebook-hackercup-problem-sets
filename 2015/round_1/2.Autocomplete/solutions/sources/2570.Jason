#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

struct N {
	N* child[26];
	N() {
		memset(child, 0, sizeof child);
	}
};

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int nc; cin >> nc;
	for (int cs = 1; cs <= nc; cs++) {
		int n; cin >> n;
		int ans = 0;

		N* trie = new N();
		for (int i = 0; i < n; i++) {
			string s; cin >> s;

			N* curr = trie;
			int prefixlen = 0;
			for (int j = 0; j < s.length(); j++) {
				int c = (int)(s[j] - 'a');
				if (curr->child[c] == NULL) {
					curr->child[c] = new N();
				} else {
					prefixlen++;
				}
				curr = curr->child[c];
			}
			if (prefixlen < s.length()) prefixlen++;
			ans += prefixlen;
		}

		cout << "Case #" << cs << ": " << ans << endl;
	}
}
