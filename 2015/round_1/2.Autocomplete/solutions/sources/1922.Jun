#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <cstdlib>
#include <map>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int N = 1000010;
const int mod = 1e9 + 7;    

struct Node{
    int next[26];
}pool[N];
int tot, n, root;
char str[N];

inline int new_node(){
    memset(pool[tot].next, -1, sizeof(pool[tot].next));
    return tot++;
}
int insert(char *s){
    int x = root, ret = 0;
    for(int i = 0; s[i]; ++i){
        int c = s[i] - 'a';
        if(pool[x].next[c] == -1){
            pool[x].next[c] = new_node();
        }
        else{
            ret++;
        }
        x = pool[x].next[c];
    }
    return min((int)strlen(s), ret + 1);
}
int main(){
    int _, cas = 1;
    for(scanf("%d", &_); _--; ){
        printf("Case #%d: ", cas++);
        tot = 0;
        root = new_node();
        scanf("%d", &n);
        int ans = 0;
        for(int i = 0; i < n; ++i){
            scanf("%s", str);
            ans += insert(str);
        }
        cout << ans << endl;
    }   
    return 0;
}