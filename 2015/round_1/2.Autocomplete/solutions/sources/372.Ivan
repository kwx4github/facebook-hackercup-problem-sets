#pragma comment(linker, "/STACK:500000000") 
#include <functional>
#include <algorithm> 
#include <iostream> 
#include <string.h> 
#include <stdlib.h>
#include <limits.h>
#include <numeric>
#include <sstream> 
#include <fstream>
#include <ctype.h> 
#include <stdio.h> 
#include <bitset>
#include <vector> 
#include <string> 
#include <math.h> 
#include <time.h> 
#include <queue> 
#include <stack> 
#include <list>
#include <map> 
#include <set> 
#define Int long long 
#define INF 0x3F3F3F3F 
#define eps 1e-9
using namespace std;
typedef pair<int, int> pii;

#define N 1000009

char buf[N];
vector<string> words;

struct Node
{
	map<char, int> next;
	int cnt;

	void clear()
	{
		cnt = 0;
		next.clear();
	}
} t[N];

int size;

void add(const string &s)
{
	int cur = 0;
	for (char c : s)
	{
		if (!t[cur].next.count(c))
		{
			t[cur].next[c] = size;
			t[size].clear();
			size++;
		}
		cur = t[cur].next[c];
		t[cur].cnt++;
	}
}

int findPrefix(const string &s)
{
	int cur = 0, res = 0;
	for (auto c : s)
	{
		if (t[cur].cnt == 1)
			return res;
		cur = t[cur].next[c];
		res++;
	}
	return res;
}

int main()
{
	int tests, n, i, j;
	scanf("%d", &tests);
	for (int test = 1; test <= tests; test++)
	{
		words.clear();
		size = 1;
		t[0].clear();

		scanf("%d", &n);
		int res = 0;
		for (i = 0; i < n; i++)
		{
			scanf("%s", buf);
			words.push_back(buf);
			add(words[i]);
			res += findPrefix(words[i]);
		}
		printf("Case #%d: %d\n", test, res);
	}
}