#include <iostream>
#include <string>

using namespace std;

struct trie{
    trie* child[26];

    trie(){
        for(int i = 0; i < 26; ++i) child[i] = 0;
    }
    ~trie(){
        for(int i = 0; i < 26; ++i) if( child[i] ) delete child[i];
    }
};

trie* root = 0;

int main()
{
    int runs;
    cin >> runs;
    for(int run = 1; run <= runs; ++run)
    {
        root = new trie;

        int N;
        cin >> N;

        int total = 0;
        string word;
        for(int i = 0; i < N; ++i)
        {
            cin >> word;
            bool foundPrefix = false;
            trie* curNode = root;
            for(int j = 0; j < (int)word.size(); ++j)
            {
                //Go to that node
                int index = word[j]-'a';
                if( curNode->child[index] == 0 ){
                    curNode->child[index] = new trie;
                    if(!foundPrefix){
                        foundPrefix = true;
                        total += j+1;
                    }
                }
                curNode = curNode->child[index];
            }
            if(!foundPrefix){
                total += word.size();
            }
        }
        cerr << "Case #" << run << " done" << endl;
        cout << "Case #" << run << ": " << total << endl;
        //delete root;
    }
    return 0;
}
