#include <iostream>
#include <string>

using namespace std;

#define charN 26

struct node {
  node* child[charN];
  
  node() {
    for (int i=0; i<charN; i++) child[i] = NULL;
    //cout << "hi" << endl;
  }
};

int insertword (node * root, string& word) {
  node * n = root;
  int depth = 0;
  int answer = -1;
  for (int i=0; i<word.length(); i++) {
    char child = word[i]-'a';
    depth++;
    if (n->child[child]==NULL) {
      n->child[child] = new node();
      if (answer==-1) answer = depth;
    }
    n = n->child[child];
  }
  if (answer==-1) answer = depth;
  return answer;
}

void deletenode(node * n) {
  for (int i=0; i<charN; i++) {
    if (n->child[i]!=NULL) deletenode(n->child[i]);
  }
  delete n;
}

int main () {
  int T;
  cin >> T;
  for (int t=0; t<T; t++) {
    node * root = new node();
    int N;
    cin >> N;
    long long answer = 0;
    for (int i=0; i<N; i++) {
      string S;
      cin >> S;
      int insertion = insertword(root, S);
      //cout << insertion << endl;
      answer+=insertion;
    }
    cout << "Case #" << t+1 << ": " << answer << endl;
    
    //deletenode(root);
  }
}