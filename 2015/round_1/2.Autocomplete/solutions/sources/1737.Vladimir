#! /usr/bin/python

# By Vladimir Svoboda

import sys
from argparse import ArgumentParser, FileType
from collections import OrderedDict

class ProblemInstance(object):
    def __init__(self, nbWords):
        self.nbWords = nbWords
        self.wList = list()

    def addWord(self, word):
        self.wList.append(word)


def parseInput(inFile):
    nbOfProblems = int(inFile.readline().strip())
    pList = list()

    for i in range(nbOfProblems):
        nbWords = int(inFile.readline().strip())
        p = ProblemInstance(nbWords)

        for j in range(nbWords):
            p.addWord(inFile.readline().strip())

        pList.append(p)

    return pList


class Solver(object):
    def __init__(self, pb):
        self.pb = pb

    def solve(self):
        wList = self.pb.wList

        abrevDict = OrderedDict()
        res = 0

        for w in wList:
            abrev = w[0]
            l = len(w)
            foundAbrev = False
            idx = 1

            while not foundAbrev:
                if not abrev in abrevDict:
                    abrevDict[abrev] = w
                    abrevDict[w] = w
                    res += len(abrev)
                    foundAbrev = True
                elif idx < l:
                    otherWord = abrevDict[abrev]
                    abrev += w[idx]
                    idx += 1
                    n = min(l, len(otherWord))

                    while idx < n and abrev == otherWord[0:len(abrev)]:
                        abrev += w[idx]
                        idx += 1

                else:
                    res += l
                    foundAbrev = True

        return res


def getCommandLineParser():
    parser = ArgumentParser(description='Autocomplete solver.')
    parser.add_argument('inFile', nargs=1, type=FileType('r'),
                        help='Input file')

    return parser


def main(args):
    pbList = parseInput(args.inFile[0])

    for i, pb in enumerate(pbList[0:20]):
        solver = Solver(pb)

        print("Case #{i}: {answer}"
              "".format(i=i+1, answer=solver.solve()))


if __name__ == "__main__":
    parser = getCommandLineParser()

    main(parser.parse_args())

