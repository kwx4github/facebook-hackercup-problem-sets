#include <bits/stdc++.h>
using namespace std;

#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define decl(v, c) typeof(c) v = c
#define forall(i, c) for(decl(i, c.begin());i!=c.end();i++)
#define si(a) ((int)(a).size())

struct trie {   
    map <char, trie*> hijos;
    bool final;

    trie () {
        final=false;
    }

    int insert (const string &s) {
        int first=-1;
        trie *now=this;
        forn(i, si(s)) {
            if (!now->hijos.count(s[i])) {
                now->hijos[s[i]] = new trie();
                if (first==-1) first=i;
            }
            now = now->hijos[s[i]];
        }
        if (first==-1) first=si(s)-1;
        now->final=true;
        return first+1;
    }
};
    
int main() {
    freopen("autocomplete.txt", "r", stdin);
    freopen("autocomplete.out", "w", stdout);

    int nc;
    cin >> nc;
    forn(c, nc) {
        trie t;
        int n, res=0;
        cin >> n;
        forn(i, n) {
            string s;
            cin >> s;
            res += t.insert(s);
        }
        cout << "Case #" << c+1 << ": " << res << endl;
    }

    return 0;
}
