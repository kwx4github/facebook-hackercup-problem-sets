#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;

const int KIND = 26;
const int M = 1111111;
char str[M];

struct TrieNode {
    int child[KIND];
    int cnt;
    void init() {
        memset(child, 0, sizeof(child));
        cnt = 0;
    }
} node[M];

struct Trie {
    int alloc;
    int root;
    void init() {
        root = alloc = 0;
        node[root].init();
    }
    void insert(const char *str) {
        int p = root;
        while (*str) {
            int idx = *str - 'a';
            if (!node[p].child[idx]) {
                node[p].child[idx] = ++alloc;
                node[alloc].init();
            }
            p = node[p].child[idx];
            node[p].cnt++;
            str++;
        }
    }
    int query(const char *str) {
        int p = root;
        int res = 0;
        while (*str) {
            res++;
            p = node[p].child[*str - 'a'];
            if (node[p].cnt == 1) break;
            str++;
        }
        return res;
    }
} trie;

int main() {
    int T, Case = 1;
    scanf("%d", &T);
    while (T--) {
        int ans = 0, n;
        trie.init();
        scanf("%d", &n);
        for (int i = 0; i < n; i++) {
            scanf("%s", str);
            trie.insert(str);
            ans += trie.query(str);
        }
        cout << "Case #" << Case++ << " :" << ans << endl;
    }
    return 0;
}
