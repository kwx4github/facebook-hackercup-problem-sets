import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class B {

	static class Node {
		Node[] arr;

		Node() {
			arr = new Node[26];
		}
	}

	static Node root;

	static void add(String s) {
		Node tmp = root;
		for (int i = 0; i < s.length(); i++) {
			if (tmp.arr[s.charAt(i) - 'a'] == null)
				tmp.arr[s.charAt(i) - 'a'] = new Node();
			tmp = tmp.arr[s.charAt(i) - 'a'];
		}
	}

	static int check(String s) {
		Node tmp = root;
		for (int i = 0; i < s.length(); i++) {
			if (tmp.arr[s.charAt(i) - 'a'] == null)
				return i + 1;
			else
				tmp = tmp.arr[s.charAt(i) - 'a'];
		}
		return s.length();
	}

	public static void main(String[] args) throws IOException {
		br = new BufferedReader(new FileReader("B.in"));
		out = new PrintWriter("B.out");
		sc = new StringTokenizer("");
		int tc = nxtInt();
		for (int i = 1; i <= tc; i++) {
			root = new Node();
			int n = nxtInt();
			int res = 0;
			for (int j = 0; j < n; j++) {
				String s = nxtTok();
				res += check(s);
				add(s);
			}
			out.println("Case #" + i + ": " + res);
		}
		br.close();
		out.close();
	}

	static BufferedReader br;
	static StringTokenizer sc;
	static PrintWriter out;

	static String nxtTok() throws IOException {
		while (!sc.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			sc = new StringTokenizer(s.trim());
		}
		return sc.nextToken();
	}

	static int nxtInt() throws IOException {
		return Integer.parseInt(nxtTok());
	}

	static long nxtLng() throws IOException {
		return Long.parseLong(nxtTok());
	}

	static double nxtDbl() throws IOException {
		return Double.parseDouble(nxtTok());
	}

	static int[] nxtIntArr(int n) throws IOException {
		int[] a = new int[n];
		for (int i = 0; i < n; i++)
			a[i] = nxtInt();
		return a;
	}

	static long[] nxtLngArr(int n) throws IOException {
		long[] a = new long[n];
		for (int i = 0; i < n; i++)
			a[i] = nxtLng();
		return a;
	}

	static char[] nxtCharArr() throws IOException {
		return nxtTok().toCharArray();
	}
}