#include <stdio.h>
#include <set>
#include <iostream>
#include <string>
#include <fstream>

#pragma warning(disable : 4996)

using namespace std;

set<string> Prefixes;
set<string> Words;

bool Correct(string pref)
{
	if (Words.find(pref) != Words.end())
		return false;
	Words.insert(pref);
	set<string>::iterator it = Words.find(pref);
	set<string>::iterator last = Words.end();
	last.operator--();
	bool res = false;
	if (it != last)
	{
		it.operator++();
		string tmp = *it;
		for (int i = 0; i<tmp.length() && i < pref.length() && !res; i++)
		{
			if (tmp[i] != pref[i])
				res = true;
		}
		it.operator--();
	}
	else
		res =  true;
	Words.erase(it);
	return res;
}

int main()
{
	ifstream In("autocomplete.txt");
	ofstream Out("autocomplete_out.txt");
	int T;
	In >> T;
	for (int test = 0; test < T; test++)
	{
		Prefixes.clear();
		Words.clear();
		int N;
		In >> N;
		int res = 0;
		string str, cur;
		for (int i = 0; i < N; i++)
		{
			In >> str;
			cur = str.substr(0, 1);
			int j = 1;
			while (j < str.length() && !Correct(cur))
				cur += str[j++];
			res += cur.length();
			Words.insert(str);
		}
		Out << "Case #" << test + 1 << ": " << res << endl;
	}
	return 0;
}