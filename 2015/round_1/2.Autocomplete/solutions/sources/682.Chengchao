#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

struct trie {
  trie *next[26];
  int cnt;
  trie(): cnt(0) { memset(next, 0, sizeof next); }
};

char buf[2000010];
int ans;

void insert(trie *t, char *s) {
  t->cnt++;
  if (s[0] == '\0') return;
  //if (*s < 'a' || *s > 'z') throw true;
  if (t->next[s[0] - 'a'] == NULL)
    t->next[s[0] - 'a'] = new trie;
  insert(t->next[s[0] - 'a'], s + 1);
}

int cc_char(trie *t, char *s, int dep) {
  if (dep != 0 && (t->cnt == 1 || s[0] == '\0'))
    return dep;
  return cc_char(t->next[s[0] - 'a'], s + 1, dep + 1);
}

void del(trie *t) {
  for (int i = 0; i < 26; ++i)
    if (t->next[i])
      del(t->next[i]);
  delete t;
}

int main() {
  int test; scanf("%d", &test);
  for (int cas = 1; cas <= test; ++cas) {
    int n; scanf("%d", &n);
    trie *root = new trie;
    int ans = 0;
    for (int i = 0; i < n; ++i) {
      scanf("%s", buf);
      insert(root, buf);
      ans += cc_char(root, buf, 0);
    }
    printf("Case #%d: %d\n", cas, ans);
    //del(root);
  }
  return 0;
}
