#include <cassert>
#include <cstdio>
#include <cstring>

const int limit = 2000000;

struct Node {
  Node *next[26];
};
int k = 0;
struct Node memory[limit];

Node * node () {
  assert (k < limit);
  Node *x = &memory[k++];
  memset (x->next, 0, sizeof (x->next));
  return x;
}

char s[limit + 1];

int main() {
  int tn;
  assert (scanf ("%d ", &tn) == 1);
  for (int t = 1; t <= tn; t++) {
    k = 0;
    Node *root = node ();
    int n, ans = 0;
    assert (scanf ("%d ", &n) == 1);
    for (int i = 0; i < n; i++) {
      assert (fgets (s, limit, stdin));
      int l = strlen (s);
      while (l && s[l - 1] == '\n')
        l--;
      Node *x = root;
      bool ok = false;
      for (int j = 0; j < l; j++) {
        if (!ok)
          ans++;
        if (x->next[s[j] - 'a'] == 0) {
          ok = true;
          x->next[s[j] - 'a'] = node ();
        }
        x = x->next[s[j] - 'a'];
      }
    }
    printf ("Case #%d: %d\n", t, ans);
  }
  return 0;
}

