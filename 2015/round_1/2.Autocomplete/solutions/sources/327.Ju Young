#include<stdio.h>
#include<string.h>
#include<vector>
#include<string>
#include<map>
#include<set>
using namespace std;
set<string> s;
char input[1000100];
int main(){
	freopen("autocomplete.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int T;
	scanf("%d", &T);
	for(int tc = 1; tc <= T; tc++){
		printf("Case #%d: ", tc);
		int N, ans = 0;
		s.clear();
		scanf("%d", &N);
		for(int i = 1; i <= N; i++){
			scanf("%s", input);
			int len = strlen(input);
			string str = input;
			set<string>::iterator it = s.lower_bound(str);
			int before=0, after=0;
			if(i == 1){
				ans++;
			}
			else if(it == s.begin()){
				string afterStr = (*it);
				for(int j = 0; j < std::min<int>(afterStr.size(), len); j++){
					if(afterStr[j] == str[j]) after++;
					else break;
				}
				ans += min(len, after+1);
			}
			else if(it == s.end()){
				it--;
				string beforeStr = (*it);
				for(int j = 0; j < std::min<int>(beforeStr.size(), len); j++){
					if(beforeStr[j] == str[j]) before++;
					else break;
				}
				ans += min(before+1, len);
			}
			else{
				string afterStr = (*it);
				for(int j = 0; j < std::min<int>(afterStr.size(), len); j++){
					if(afterStr[j] == str[j]) after++;
					else break;
				}
				it--;
				string beforeStr = (*it);
				for(int j = 0; j < std::min<int>(beforeStr.size(), len); j++){
					if(beforeStr[j] == str[j]) before++;
					else break;
				}
				ans += min(len, max(after, before)+1);
			}
			s.insert(str);
			for(int j = 0; j < len; j++) input[j] = 0;
		}
		printf("%d\n", ans);
	}
	return 0;
}