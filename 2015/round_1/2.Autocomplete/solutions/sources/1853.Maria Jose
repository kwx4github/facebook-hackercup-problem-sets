#include <iostream>
#include <fstream>
using namespace std;

int r;

struct Trie {
    Trie() {
    is_word = false;
    for (int i = 0; i < 27; ++i)
        children[i] = NULL;
    }
    bool is_word;
    Trie* children[27];
};

void add(Trie* node, const string &word) {
    bool flag = false;
    for (int i=0; i < word.size(); ++i) {
        if (!node->children[word[i] - 'a']){
            node->children[word[i] - 'a'] = new Trie;
            if(!flag){
                r += (i+1);
                flag = true;
            }
        }
        node = node->children[word[i] - 'a'];
    }
    node->is_word = true;
    if(!flag) r += word.size();
}

int main()
{
    ofstream cout("autocomplete_out.txt");
    ifstream cin("autocomplete_in.txt");
    int T, N;
    string word;
    cin >> T;
    for(int i=1; i<=T; i++){
        Trie* root = new Trie;
        r=0;
        cin >> N;
        for(int j=1; j<=N; j++){
            cin >> word;
            add(root, word);
        }
        cout << "Case #" << i << ": " << r << "\n";
    }
}
