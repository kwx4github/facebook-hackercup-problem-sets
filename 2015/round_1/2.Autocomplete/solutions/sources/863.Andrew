#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <fstream>
#include <map>
#include <set>
#include <memory.h>
#include <string.h>
#include <sstream>
#include <queue>
#include <bitset>

#pragma comment(linker,"/STACK:16777216")
using namespace std;

//Loops
#define FOR(i,a,b) for(int (i) = (a); (i) <= (b); ++(i))
#define ROF(i,a,b) for(int (i) = (a); (i) >= (b); --(i))
#define rep(i,n) for (int (i) = 0; (i) < (n); ++(i))
#define fe(i,a) for (int (i) = 0; (i) < int((a).size()); ++(i))
#define MEM(a,b) memset((a),(b),sizeof(a))

//Constants
#define inf 1000000000
#define pi 2*acos(0.0)
#define eps 1e-12
#define N 1000010
#define M 2010

//Functions
#define pb push_back
#define ppb pop_back
#define all(c) (c).begin(), (c).end()

//Pairs
#define mp(a,b) make_pair((a), (b))
#define X first
#define Y second

//Input-Output
#define FREOPEN(a,b) freopen(a,"r",stdin); freopen(b,"w",stdout);

typedef vector<int> vint;
typedef long long ll;
typedef pair<int, int> pii;

const int mod = int(1e7) + 7;

struct node{
	int next[26];
};

node t[N];
int sz;

void init(){
	MEM(t[0].next, -1);
	sz = 1;
}

int add(const string & s){
	int v = 0;
	int ans = 0;
	for (int i = 0; i < s.size(); i++){
		int ch = s[i] - 'a';
		if (t[v].next[ch] == -1){
			MEM(t[sz].next, -1);
			t[v].next[ch] = sz++;
		}
		else ans++;
		v = t[v].next[ch];
	}
	return ans;
}

int main()
{
	FREOPEN("input.txt", "output.txt");
	int test, ans = 0, n;
	string s;
	cin >> test;
	for (int t = 0; t < test; t++){
		init();
		ans = 0;

		cin >> n;
		for (int i = 0; i < n; i++){
			cin >> s;
			int cur = add(s);
			if (cur < s.size())ans += cur + 1; else ans += cur;
		}

		cout << "Case #" << t + 1 << ": ";
		cout << ans << endl;
	}
	return 0;
}