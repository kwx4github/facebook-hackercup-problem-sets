package com.company;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {
    static BufferedReader in;
    static PrintWriter out = new PrintWriter(System.out, true);
    static StringTokenizer st;

    static Node root = new Node();

    public static void main(String[] args) throws Exception {
        in = new BufferedReader(new InputStreamReader(new FileInputStream("in.txt")));
        out = new PrintWriter("out.txt");
        int t = nextInt();

        for (int i = 0; i < t; i++) {
            out.print("Case #" + (i + 1) + ": ");
            int n = nextInt();
            root = new Node();
            long result = 0;
            for (int j = 0; j < n; j++) {
                String s = nextToken();
                Node r = root;
                long add = 0;
                for(int k = 0; k < s.length(); k++) {
                    int to = s.charAt(k) - 'a';
                    if(r.next[to] == null) {
                        r.next[to] = new Node();
                    } else {
                        add++;
                    }
                    r = r.next[to];
                }
                result += Math.min(add + 1, s.length());
            }
            out.println(result);

            out.flush();
        }
        in.close();
        out.flush();
        out.close();
    }


    public static class Node {
        Node[] next;

        public Node() {
            this.next = new Node[26];
        }
    }

    public static int nextInt() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Integer.parseInt(st.nextToken());
    }

    public static long nextLong() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Long.parseLong(st.nextToken());
    }

    public static double nextDouble() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine(), " ");
        return Double.parseDouble(st.nextToken());
    }

    public static String nextToken() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine(), " ");
        return st.nextToken();
    }
}
