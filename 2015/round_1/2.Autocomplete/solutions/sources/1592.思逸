#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <ctime>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <cassert>
#include <bitset>
#include <numeric>

using namespace std;

struct node {
	node* ch[26];
	node() {
		memset(ch, 0, sizeof ch);
	}
};

const int MAXN = 1111111;

char buf[MAXN];

int insert(node* p, char *s) {
	int n = strlen(s);
	int ret = n;
	for (int i = 0; i < n; ++i) {
		int v = s[i] - 'a';
		if (p->ch[v] == NULL) {
			ret = min(ret, i + 1);
			p->ch[v] = new node;
		}
		p = p->ch[v];
	}
	return ret;
}

int main() {
	int task;
	scanf("%d", &task);
	for (int task_id = 1; task_id <= task; ++task_id) {
		int n;
		scanf("%d", &n);
		node* root = new node;
		assert(root->ch[0] == NULL);
		assert(root->ch[25] == NULL);
		int ret = 0;
		for (int i = 0; i < n; ++i) {
			scanf("%s", buf);
			ret += insert(root, buf);
		}
		printf("Case #%d: %d\n", task_id, ret);
	}
	return 0;
}

