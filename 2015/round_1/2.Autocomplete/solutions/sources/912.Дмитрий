#include <string>
#include <vector>
#include <set>
#include <map>
#include <iostream>
#include <algorithm>
#include <sstream>
#include <cmath>
#include <string.h>
#include <queue>
#include <cstdio>
#include <cassert>
#include <deque>
#include <stack>
#include <utility>
#include <numeric>
#include <ctime>

using namespace std;

#define forn(i, n) for (int i = 0; i < (int)(n); i++)
#define fore(i, l, r) for (int i = (int)(l); i < (int)(r); i++)
#define forv(i, v) forn(i, v.size())

#define mp make_pair
#define pb push_back
#define all(v) v.begin(), v.end()

#define next _next

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

const int MAX_LEN = 1e6 + 100;

int next[MAX_LEN][26];

void solveCase(int tc) {
    cerr << tc << endl;
    printf("Case #%d: ", tc);
    int n;
    scanf("%d\n", &n);
    memset(next, 255, sizeof(next));
    int kv = 1;
    int ans = 0;
    forn(it, n) {
        string s;
        getline(cin, s);
        int v = 0;
        bool f = true;
        forv(j, s) {
            int c = s[j] - 'a';
            if (next[v][c] == -1) {
                if (f) {
                    ans += j + 1;
                }
                f = false;
                next[v][c] = kv++;
            }
            v = next[v][c];
        }
        if (f) ans += s.size();
    }
    cout << ans << endl;
}

int main() {
#ifdef NEREVAR_PROJECT
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int tc;
    cin >> tc;
    forn(it, tc) solveCase(it + 1);
    return 0;
}
