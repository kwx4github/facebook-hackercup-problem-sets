#include <iostream>
#include <vector>
#include <string>
#include <set>

std::vector<int> cache;

int matchingChars (std::string s1, std::string s2) {
	for (size_t i = 0; i < s1.size() && i < s2.size(); i++) {
		if (s1[i] != s2[i])
			return i;
	}
	return std::min(s1.size(), s2.size());
}

int main() {
    std::ios::sync_with_stdio(false);
    int testCases;
	std::cin >> testCases;

	for (int i = 0; i < testCases; i++) {
		int n;
		std::cin >> n;

		std::set<std::string> dictionary;

		int sum = 0;
		for (int j = 0; j < n; j++) {
			std::string s;
			std::cin >> s;
			dictionary.insert(s);

			int charsNeeded = 0;
			std::set<std::string>::iterator frontIter = dictionary.find(s);
			std::set<std::string>::iterator backIter = dictionary.find(s);
			frontIter++;

			if (frontIter != dictionary.end()) {
				int charsMatching = matchingChars(s, *frontIter);
				if (charsMatching > charsNeeded)
					charsNeeded = charsMatching;
			}
			if (backIter != dictionary.begin()) {
				backIter--;
				int charsMatching = matchingChars(s, *backIter);
				if (charsMatching > charsNeeded)
					charsNeeded = charsMatching;
			}
			sum += charsNeeded;
			if (charsNeeded != s.size())
				sum += 1;
		}
		std::cout << "Case #" << (i+1) << ": " << sum << std::endl;
	}

	return 0;
}

