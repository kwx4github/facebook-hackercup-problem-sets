#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cassert>

using namespace std;

#define ri(X) scanf("%d", &(X))
#define pi(X) printf("%d", (X))
#define mp(X,Y) make_pair(X,Y)
#define pb(X) push_back(X)
#define lint long long
#define pii pair<int,int>
#define inf 1e9
#define linf 1e18
#define X first
#define Y second
#define all(X) (X).begin(),(X).end()
#define uni(X) X.erase(unique(X.begin(), X.end()), X.end());


int T;
int n;
const int ms = 2e6+9;

int trie[ms][30];
int ns;
void init(){
  memset(trie,-1,sizeof(trie));
  ns = 1;
}
int insert(string s){
  int st = 0;
  int p;
  int res = -1;
  for(int k = 0; k < s.size(); k++){
    
    p = s[k]-'a';
    //printf("%d %d %d %d\n", k, p, st, res);
    if(trie[st][p] == -1){
      trie[st][p] = ns++;
      if(res == -1){
        res = k+1;
      }
    }
    st = trie[st][p];
  }
  
  if( res == -1) res= s.size();
  //cout << res << endl;
  return res;
}

int main(){
  string s;
  ri(T);
  for(int t = 0; t < T ; t++){
    ri(n);
    init();
    int res = 0;
    for(int i = 0; i < n; i++){
      cin >> s;
      res+=insert(s);
    }
    printf("Case #%d: %d\n", t+1, res);
    
  }
  return 0;
}

