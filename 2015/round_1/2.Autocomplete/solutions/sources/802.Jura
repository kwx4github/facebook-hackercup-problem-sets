#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <vector>

using namespace std;

#define FOR(prom, a, b) for(int prom = (a); prom < (b); prom++)
#define FORD(prom, a, b) for(int prom = (a); prom > (b); prom--)
#define FORDE(prom, a, b) for(int prom = (a); prom >= (b); prom--)

#define DRI(a) int a; scanf("%d ", &a);
#define DRII(a, b) int a, b; scanf("%d %d ", &a, &b);
#define DRIII(a, b, c) int a, b, c; scanf("%d %d %d ", &a, &b, &c);
#define DRIIII(a, b, c, d) int a, b, c, d; scanf("%d %d %d %d ", &a, &b, &c, &d);
#define RI(a) scanf("%d ", &a);
#define RII(a, b) scanf("%d %d ", &a, &b);
#define RIII(a, b, c) scanf("%d %d %d ", &a, &b, &c);
#define RIIII(a, b, c, d) scanf("%d %d %d %d ", &a, &b, &c, &d);

#define PB push_back
#define MP make_pair

#define ll long long
#define ull unsigned long long

#define MM(co, cim) memset((co), (cim), sizeof((co)))

#define DEB(x) cerr << ">>> " << #x << " : " << x << endl;

int g[1000007][27];

int main ()
{
  DRI(T);
  FOR(t,0,T) {
    int nG = 2;
    //MM(g,0);
    FOR(i,0,1000007) FOR(j,0,27) g[i][j] = 0;
    DRI(N);
    string s;
    int gcnt = 0;
    while(N--) {
      cin >> s;
      int pos = 1;
      int cnt = 0;
      bool stop = false;
      FOR(i,0,s.size()) {
        if(!g[pos][s[i]-'a']) {
          if(!stop) cnt++;
          stop = true;
          g[pos][s[i]-'a'] = nG++;
        } else {
          cnt++;
        }
        pos = g[pos][s[i]-'a'];
      }
      //cout << cnt << endl;
      gcnt += cnt;
    }
    printf("Case #%d: %d\n", t+1, gcnt);
  }
  return 0;
}











