#!/usr/bin/env pypy3

class Trie:
    def __init__(self):
        self.root = [None] * 26

    def insert(self,s):
        # insert and return length of longest existing prefix
        node = self.root
        result = None
        for place, c in enumerate(s):
            index = ord(c) - ord('a')
            assert 0 <= index < 26
            if node[index] is None:
                node[index] = [None] * 26
                if result is None:
                    result = place
            node = node[index]

        return result

T = int(input())
for Case in range(T):
    trie = Trie()
    answer = 0

    N = int(input())
    for i in range(N):
        s = input()
        l = trie.insert(s)
        answer += l+1 if l is not None else len(s)

    print('Case #%d: %d'%(Case+1,answer))
