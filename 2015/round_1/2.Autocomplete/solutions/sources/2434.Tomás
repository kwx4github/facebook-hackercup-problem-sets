#include "bits/stdc++.h"
using namespace std;

struct Node
{
	char value;
  bool end;
  struct Node* child[26];
 
  Node( char value )
  {
  	this -> value = value;
    for( int i = 0; i < 26; i++ )
      child[i] = NULL;
  }
	
	~Node(){}
};

struct Trie
{
  Node* root;
         
	Trie()
  {
  	root = new Node( ' ' );
    root -> end = true;
  }
 
  ~Trie(){}
 
  Node* getRoot()
  {
  	return root;
  }
 
  long long add( string word )
  {
  	Node* node = root;
  	root -> end = false;
  	long long ret = -1;
    for( int i = 0; i < word.size(); i++ )
    {
    	char c = tolower( word[i] );
      int ind = c - 'a';
     	if( node -> child[ ind ] == NULL ){
        if( ret == -1 )
          ret = i + 1LL;
      	Node* tnode = new Node( c );
        node -> child[ ind ] = tnode;
      }
      node = node -> child[ind];
    }
    node -> end = true;
    if( ret == -1 )
      ret = word.size();
    return ret;
  }
 
};

char s[ 1000005 ];

int main()
{
  int test;
  cin >> test;
  
  for( int t = 1; t <= test; t++ )
  {
    Trie *T = new Trie();
    
    int n;
    scanf( "%d\n", &n );
    
    long long ans = 0LL;
    while( n-- )
    {
      scanf( "%s", s );
      ans += T -> add( string( s ) );
    }
    
    printf( "Case #%d: %lld\n", t, ans );
  }
  
  return 0;
}
