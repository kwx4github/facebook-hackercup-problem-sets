import java.io.InputStreamReader;
import java.io.IOException;
import java.util.InputMismatchException;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Task solver = new Task();
		int testCount = Integer.parseInt(in.next());
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}
}

class Task {
    class Trie {
        Trie[] next = new Trie[26];
        int count = 0;

        public Trie next(int ch) {
            return next[ch - 'a'];
        }

        public int count() {
            return count;
        }

        void add(String s, int at) {
            ++count;
            if (at == s.length()) {
                return;
            }
            int ch = s.charAt(at);
            if (next(ch) == null) {
                next[ch - 'a'] = new Trie();
            }
            next(ch).add(s, at + 1);
        }

        public void add(String s) {
            add(s, 0);
        }
    }
    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int n = in.nextInt();
        int res = 0;
        Trie trie = new Trie();
        for (int i = 0; i < n; ++i) {
            String s = in.next();
            trie.add(s);
            Trie v = trie;
            for (char ch : s.toCharArray()) {
                v = v.next(ch);
                ++res;
                if (v.count() == 1) {
                    break;
                }
            }
        }
        out.printf("Case #%d: %d\n", testNumber, res);
    }
}

class InputReader {
    BufferedReader bufReader;
    StringTokenizer stringTokenizer;
    boolean isEof = false;

    public InputReader(InputStream stream) {
        bufReader = new BufferedReader(new InputStreamReader(stream));
    }

    public String next() {
        while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {
            try {
                String line = bufReader.readLine();
                if (line == null) {
                    isEof = true;
                    return null;
                }
                stringTokenizer = new StringTokenizer(line);
            } catch (IOException e) {
                throw new InputMismatchException();
            }
        }
        return stringTokenizer.nextToken();
    }

    public int nextInt() {
        String s = next();
        if (s == null) {
            return 0;
        }
        return Integer.parseInt(s);
    }

}

