import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;


public class Autocomplete {
	public static void main(String[] args) throws NumberFormatException, IOException {
		  BufferedReader reader = new BufferedReader(new FileReader(new File("/Users/prathik.puthran/autocomplete.txt")));
		  PrintWriter writer = new PrintWriter(new File("res_autocomplete"));
		  int t = Integer.parseInt(reader.readLine());
		  for(int i=0; i<t; i++) {
			  int n = Integer.parseInt(reader.readLine());
			  int c = 0;
			  Node head = new Node();
			  for(int j=0; j<n; j++) {
				  String word = reader.readLine();
				  c += insAndCount(head, word);
			  }
			  writer.write("Case #"+(i+1)+": "+c+"\n");
		  }
		  reader.close();
		  writer.close();
	}
	
	public static int insAndCount(Node head, String word) {
		int prefixCount = 0;
		int len = word.length();
		Node curNode = head;
		boolean prefixFound = false;
		for(int i=0; i<len; i++) {
			char c = word.charAt(i);
			int index = c - 'a';
			if(curNode.edg[index] == null) {
				curNode.edg[index] = new Node();
				if(!prefixFound) {
					prefixCount ++;
				}
				prefixFound = true;
			} 
			if(!prefixFound) {
				prefixCount++;
			}
			curNode = curNode.edg[index];
			if(i == len -1) {
				curNode.isW = true;
			}
		}
		return prefixCount;
	}
	
	public static class Node {
		public boolean isW = false;
		Node[] edg = new Node[26];
	}
}
