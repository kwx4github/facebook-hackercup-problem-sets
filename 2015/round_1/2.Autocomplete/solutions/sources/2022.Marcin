#include <iostream>
#include <cstring>
#include <algorithm>
#include <set>
using namespace std;

const int MAX_N = 1e5;

int t, m, res, prev, next;
string s;
set<string> words;
set<string>::iterator w, p, n;

int main() {
	ios_base::sync_with_stdio(0);
	cin >> t;
	for(int c = 1; c <= t; c++) {
		words.clear();
		res = 0;
		cin >> m;
		for(int i = 0; i < m; i++) {
			cin >> s;
			words.insert(s);
			w = words.find(s);
			if(w==words.begin())
				prev = 1;
			else {
				p = w;
				p--;
				for(prev = 0; prev < min(p->size(), w->size()); prev++) {
					if(p->at(prev)!=w->at(prev))
						break;
				}
				prev = max(min((int)w->size(), prev+1), 1);
			}
			n = w;
			n++;
			if(n==words.end())
				next = 1;
			else {
				for(next = 0; next < min(w->size(), n->size()); next++) {
					if(w->at(next)!=n->at(next))
						break;
				}
				next = max(min((int)w->size(), next+1), 1);
			}
			res+=max(prev, next);
		}
		cout << "Case #" << c << ": " << res << "\n";
	}
	return 0;
}
