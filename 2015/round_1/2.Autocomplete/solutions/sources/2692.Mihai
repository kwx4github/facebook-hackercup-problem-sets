#include <stdio.h>
#include <string.h>

const int sigma = 27;

struct node
{
    int x;
    node *f[sigma];

    node ()
    {
        x = 0;
        memset(f, 0, sizeof(f));
    }
};

int sol;
node *rad;
char s[1000005];

void add()
{
    int i, next, n = strlen (s + 1);
    node *stare = rad;

    for (i=1; i <= n; i++)
    {
        next = s[i] - 'a';

        if (stare -> f[next] == NULL) stare -> f[next] = new node;

        stare = stare -> f[next];
        stare -> x++;
    }

}

void find()
{
    int i, next, n = strlen (s + 1);
    node *stare = rad;

    for (i=1; i <= n; i++)
    {
        next = s[i] - 'a';
        if (stare -> x == 1)
        {
            sol += i - 1;
            return;
        }
        stare = stare -> f[next];
    }

    sol += n;
}

int main ()
{
    freopen ("autocomplete.in", "r", stdin);
    freopen ("autocomplete.out", "w", stdout);

    int t, tt, n, i;

    scanf ("%d", &t);

    for (tt = 1; tt <= t; tt ++)
    {
        printf ("Case #%d: ", tt);

        scanf ("%d\n", &n);

        rad = new node;
        sol = 0;
        for (i = 1; i <= n; i ++)
        {
            gets (s + 1);
            add ();
            find ();
            sol += 0;
        }
        printf ("%d\n", sol);
    }
    return 0;
}
