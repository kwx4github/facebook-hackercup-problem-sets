#include <stdint.h>
#include <stdio.h>
#include <string.h>

#include <algorithm>
#include <vector>

using namespace std;

const int N = 1000001;

typedef struct Node {
    vector<Node *> child;
} Node;

Node A[40 * N];
Node *root;
char S[N];
int nidx;
int n;

int AddWord() {
    Node *p = root;
    int ans = 0;
    int i = 0;
    for (; S[i]; i++) {
        if (p->child[S[i] - 'a'] == NULL) {
            p->child[S[i] - 'a'] = &A[nidx];
            for (int j = 0; j < A[nidx].child.size(); j++) {
                A[nidx].child[j] = NULL;
            }
            nidx++;
            if (ans == 0) {
                ans = i + 1;
            }
        }
        p = p->child[S[i] - 'a'];
    }
    if (ans == 0) {
        ans = i;
    }
    return ans;
}
int main() {
    for (int i = 0; i < 26 * N; i++) {
        A[i].child.resize(26, NULL);
    }
    int cas;
    scanf("%d", &cas);
    root = &A[0];
    for (int ic = 1; ic <= cas; ic++) {
        scanf("%d", &n);
        for (int i = 0; i < A[0].child.size(); i++) {
            A[0].child[i] = NULL;
        }
        nidx = 1;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            scanf("%s", S);
            ans += AddWord();
        }
        printf("Case #%d: %d\n", ic, ans);
    }
    return 0;
}
