#include <iostream>
#include <cstdio>
#include <algorithm>
#include <sstream>
#include <cstring>
#include <string>
#include <math.h>
#include<map>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <list>
#define MOD 1000000007
using namespace std;
int n;
struct node{
    
    node* child[26];
    
    node(){
        for(int i =0;i<26;i++){
            child[i]=NULL;
        }
    }
};

class Trie{
    public:
    node* root;
    Trie();
    ~Trie();
    void del(node* n_node);
};
Trie::Trie(){
    root = new node();
}
void Trie::del(node* cur){
    for (int i =0; i<26; i++) {
        if (cur->child[i]!=NULL) {
            del(cur->child[i]);
        }
    }
    delete cur;
}
Trie::~Trie(){
    delete root;
}
int t;

int main (){
    freopen("/Users/Masoud/Desktop/in.txt", "r", stdin);
    freopen("/Users/Masoud/Desktop/out.txt", "w", stdout);
    
    int ca=1;
    scanf("%d",&t);
    Trie* trie ;
    while (t--) {
        trie= new Trie();
        scanf("%d",&n);
        int res =0;
        for (int i =0; i<n; i++) {
            char ar[1000010];
            scanf("%s",ar);
            node* cur =trie->root;
            int l =0;
            bool first=true;
            for (int j =0; j<strlen(ar); j++) {
                if (cur->child[ar[j]-'a']==NULL) {
                    cur->child[ar[j]-'a']= new node();
                    cur = cur->child[ar[j]-'a'];
                    l++;
                    if (first) {
                        res+=l;
                        first=!first;
                    }
                }else{
                    cur = cur->child[ar[j]-'a'];
                    l++;
                }
            }
            if (first) {
                res+=l;
            }
        }
        printf("Case #%d: %d\n",ca++,res);
        trie->~Trie();
    }

    return 0;
}