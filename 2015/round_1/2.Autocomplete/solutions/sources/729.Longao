#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

const int MAXSIZE = 2000005;

class Trie{
public:
	int cnt;
	vector< pair<int, char> > node[MAXSIZE];

	void clear(){
		for(int i = 0; i < MAXSIZE; ++i) node[i].clear();
		cnt = 0;
	}

	void insert(string v){
		int now = 0;
		int zz = 0;
		while(zz < v.length()){
			bool find = false;
			for(int i = 0; i < node[now].size(); ++i)
				if(node[now][i].second == v[zz]){
					++zz;
					now = node[now][i].first;
					find = true;
					break;
				}
			if(!find) break;
		}
		for(int i = zz; i < v.length(); ++i){
			node[now].push_back(make_pair(cnt + 1, v[i]));
			++cnt;
			now = cnt;
		}
	}

	int find(string v){
		int now = 0;
		int zz = 0;
		while(zz < v.length()){
			bool find = false;
			for(int i = 0; i < node[now].size(); ++i)
				if(node[now][i].second == v[zz]){
					++zz;
					now = node[now][i].first;
					find = true;
					break;
				}
			if(!find) break;
		}
		return zz + (zz != v.length());
	}
}tr;

int cases, N;
char buf[MAXSIZE];

int main(){
	scanf("%d", &cases);
	for(int xx = 1; xx <= cases; ++xx){
		scanf("%d", &N);
		int ans = 0;
		tr.clear();
		for(int i = 0; i < N; ++i){
			scanf("%s", buf);
			string gao(buf);
			ans += tr.find(gao);
			//printf("%d\n", ans);
			tr.insert(gao);
		}
		printf("Case #%d: %d\n", xx, ans);
	}
}
