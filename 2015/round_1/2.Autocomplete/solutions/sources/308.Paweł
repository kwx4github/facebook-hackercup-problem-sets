#include <string>
#include <vector>
#include <set>
#include <iostream>
#include <algorithm>
#include <utility>
#include <map>
#include <cstdio>
#include <sstream>
#include <cmath>

using namespace std;

#define REP(a, b) for (int a = 0; a<(b); ++a)
#define FOR(a, b, c) for (int a = (b); a<=(c); ++a)
#define FORD(a, b, c) for (int a = (b); a>=(c); --a)
#define FOREACH(a, v) for (INIT(a, (v).begin()); a!=(v).end(); ++a)
 
template<class T>
inline int size(const T&t){return t.size();}
 
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef long long LL;

#define INF 1000000000
#define PB push_back
#define MP make_pair

////////////////////////////////

int drzewo[1001000][26], zaj;

int wyn;

inline void czysc(int nr) {
    REP(a, 26)
        drzewo[nr][a] = -1; 
}

void wstaw(char *sl) {
    int nr = 0;
    while (*sl) {
        if (drzewo[nr][*sl-'a']<0)
            break;
        nr = drzewo[nr][*sl-'a'];
        ++wyn;
        ++sl;
    }
    if (*sl)
        ++wyn;
    while (*sl) {
        nr = drzewo[nr][*sl-'a'] = zaj++;
        czysc(nr);
        ++sl;
    }
}

void licz() {
    int N;
    scanf("%d", &N);
    wyn = 0;
    zaj = 1;
    czysc(0);
    char buf[1001000];
    REP(a, N) {
        scanf("%s", buf);
        wstaw(buf);
    }
    printf("%d\n", wyn);
}

int main() {
    int TT;
    scanf("%d", &TT);
    REP(tt, TT) {
        printf("Case #%d: ", (tt+1));
        licz();
    }
}
