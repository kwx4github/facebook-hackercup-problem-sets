#include <stdio.h>
#include <string.h>
#include <iostream>
#include <string>
#include <map>
using namespace std;
const int CN = 26; //字符集大小
const int TRIEN = 1000005; //节点最大数

struct NODE {
	int idx, c[CN], ord;
	void init() {
		memset(this, -1, sizeof(*this));
	}
};
NODE mem[TRIEN];
int posn, cnt;
void init() {
	posn = 1;
	mem[0].init();
	cnt = 0;
}
int get_idx(char &e) {
	return e - 'a';
}
int insert(char *s, int i = 0) {
	for (int r; *s; ++s, i = mem[i].c[r])
		if (mem[i].c[r = get_idx(*s)] == -1)
			mem[(mem[i].c[r] = posn++)].init();
	if (mem[i].ord == -1)
		mem[i].ord = cnt++;
	return mem[i].ord;
}
//返回出现的序号，未出现返回-1
int search(char *s, int i = 0) {
	int k = 0;
	for (int r; *s; ++s, i = mem[i].c[r]) {
		k++;
		if (mem[i].c[r = get_idx(*s)] == -1)
			return k;
	}
	return k;
}

char s[1000005], s2[1000005];
int main() {
	int t, cas = 0;
	int n, i, j, k;
	scanf("%d", &t);
	while (t--) {
		cas++;
		scanf("%d", &n);
		int ans = 0;
		init();
		for (i = 0; i < n; ++i) {
			scanf("%s", s);
			ans += max(search(s), 1);
			insert(s);
		}
		printf("Case #%d: %d\n", cas, ans);
	}
}
