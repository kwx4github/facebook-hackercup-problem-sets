#include <bits/stdc++.h>

using namespace std;

int N;

const int MaxTotal = 1000005;
const int MaxLen = 1000005;

char str[MaxLen];


struct TrieNode {
	map<char,int> next;
};

TrieNode nodes[MaxTotal];
int numNodes;

void add_str(char* str){
	int current = 0;
	while(*str){
		if(!nodes[current].next.count(*str)){
			nodes[current].next[*str] = numNodes;
			current = (numNodes++);
		} else {
			current = nodes[current].next[*str];
		}
		str++;
	}
}

int find_prefix(char* str){
	int current = 0, result = 0;
	while(*str){
		if(nodes[current].next.count(*str)){
			current = nodes[current].next[*str];
			result++;
		} else {
			break;
		}
		str++;
	}
	return result;
} // += min(length, find_prefix)


void cleanup(){
	for(int i = 0; i <= numNodes; i++) nodes[i].next.clear();
	numNodes = 0;
}


void input(){
	scanf("%d", &N);
}

void test(){
	cleanup();
	input();
	numNodes = 1;

	int result = 0;
	for(int i = 0; i < N; i++){
		scanf("%s", str);
		result += min((int)strlen(str), 1+find_prefix(str));
		add_str(str);
	}

	printf("%d\n", result);
}

int main(){

	int T;
	scanf("%d", &T);

	for(int i = 1; i <= T; i++){
		printf("Case #%d: ", i);
		test();
	}
}
