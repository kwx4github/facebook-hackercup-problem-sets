//Anirudh Bhargava
#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cmath>
#include <ctype.h>
#include <stack>
#include <queue>
#include <limits.h>
#include <fstream>
#include <map>
#include <set>

#define rep(i, a) for(long long int i = 0; i < a; i++)
#define rep1(i, a) for(long long int i = 1; i <= a; i++)
#define fo(i, a, b) for(long long int i = a; i < b; i++)
#define defo(i, a, b) for(long long int i = a; i >= b; i--)
#define ll long long
#define Int long long int
#define pr(i) printf("Case #%lld: ",i)
#define pb push_back
#define sz(a) ((long long int)(a.size()))
//#define x first
#define y second
#define SET(x, a) memset(x, a, sizeof(x));
#define pi  3.1415926535897
//#define mod 1000000007
using namespace std;
struct node{
    struct node *next[27];
};
int k = -1;
struct node *tinsert(struct node *root,string str){
    struct node *p;
    p = root;
    int i,j;
    for(i=0;i<str.size();i++){
        if(p->next[str[i]-'a']==NULL){
            if(k==-1){
                k = i+1;
            }
            struct node *temp;
            temp = (struct node *)malloc(sizeof(struct node));
            p->next[str[i]-'a'] = temp;
            for(j=0;j<27;j++){
                temp->next[j] = NULL;
            }
        }
        p = p->next[str[i]-'a'];
    }
    return root;
}
int main(){
    freopen("autocomplete.txt","r",stdin);
    freopen("output.txt","w",stdout);
    Int test,l=0;
    cin>>test;
    while(test--){
        l++;
        struct node *root;
        root = (struct node *)malloc(sizeof(struct node));
        int n;
        scanf("%d",&n);
        string str;
        int i,j,ans=0;
        for(i=0;i<27;i++){
            root->next[i] = NULL;
        }
        for(i=0;i<n;i++){
            k = -1;
            cin>>str;
            root = tinsert(root,str);
            if(k!=-1){
                ans+=k;
            }
            else{
                ans+=str.size();
                //cout<<str.size()<<"\n";
            }
        }
        pr(l);
        cout<<ans<<"\n";
    }
    return 0;
}
