#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <string>
#include <sstream>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <ctime>

#define inf 0x3f3f3f3f
#define Inf 0x3FFFFFFFFFFFFFFFLL
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define Rep(i, n) for (int i = 1; i <= (n); ++i)
#define clr(x, a) memset(x, (a), sizeof x)
using namespace std;
typedef long long ll;
int const N = 1000100;
int const M = 32;
struct Trie_Node {
    int id;
    Trie_Node *next[26];
    void init() {
         id = -1;
         memset(next, NULL, sizeof next);
    }
} trie[1000100], root;
int tidx, cnt;
int insert(char* s) {
    int i, j;
    Trie_Node *p = &root;
		int t = 0, ret = -1;
		
    for (i = 0; s[i]; ++i) {
        j = s[i] - 'a';
				t += 1;
        if (p -> next[j] == NULL) {
					  if (ret == -1) {
							ret = t;
						}
            trie[tidx].init();
            p -> next[j] = &trie[tidx++];
        }
        p = p -> next[j];
    }
    if (p -> id == -1) {
			 p -> id = cnt++;
		}
		if (ret == -1) ret = t;
    return ret;
}
void init() {
    root.init();
    tidx = cnt = 0;
}
char s[1000100];

int main() {
		freopen("autocomplete.txt", "r", stdin);
	freopen("b-ans", "w", stdout);
	
	int T, ca = 1; scanf("%d", &T);
	int n;
	while (T--) {
		init();
		scanf("%d", &n);
		int ret = 0;
		for (int i = 0; i < n; ++i) {
			scanf(" %s", s);
			ret += insert(s);
		}
		printf("Case #%d: %d\n", ca++, ret);
	}
	return 0;
}

