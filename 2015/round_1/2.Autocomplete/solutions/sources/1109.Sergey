var fs = require('fs'),
    sys = require("sys"),
    bigint = require('../../../node_modules/bigint');

fs.readdir('.', function (err, data) {
    if (err) throw err;
    for (var i = 0, len = data.length; i < len; i++) {

        if (data[i].indexOf('input') !== -1) {
            fs.readFile('./'+data[i], {encoding: 'utf-8'}, function (err, data) {
                if (err) throw err;
                start(data.split("\n"));
            });            
        }
    }
});

function start(data) {

    var res = ''; var k = 1;
    for (var j = 1; j <= 1*data[0]; j++) {

        var N = 1*data[k];

        var items = [];

        for (var o = k+1; o < k+1+N; o++) {
            items.push(data[o]);//.split('')
        }

        k += N+1;

        tmp = 'Case #' + j + ': ' + solve(items);

        console.log(tmp);

        res += tmp + "\n";
    }
    fs.writeFileSync('./out.txt', res);
}

function solve(items) {

    var GRAPHY = {};

    var res = 0;

    var len = items.length;
    for (var i = 0; i < len; i++) {
        var word = items[i];

        //console.log(word);

        var k;
        for (k = 0; k < word.length; k++) {
            res++;
            if (!GRAPHY[word.substring(0, k+1)]) {
                //console.log(res + ' >>> ' + k + ' >>> ' + word.substring(0, k+1));
                break;
            }

        }
        while (k++ < word.length) {
            //console.log('filling more ' + word.substring(0, k));
            GRAPHY[word.substring(0, k)] = 1;
        }
        //console.log(GRAPHY);

    }
    console.log(items.length + ' words = ' + Object.keys(GRAPHY).length + ' keys total');
    return res;
}

function iter(word, graph) {
    if (graph[word.charAt(0)]) {
        return 1 + iter(word.substring(1), graph[word.charAt(0)]);
    } else {
        return 1;
    }
}
