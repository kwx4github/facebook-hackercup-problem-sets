#include <cstdio>
#include <cstring>
#include <algorithm>
#include <string>
using namespace std;

FILE *in = fopen("autocomplete.txt", "r");
FILE *out = fopen("f.out", "w");

#define MAXN 1000010

int tree[MAXN][26], ntree;

char inp[1000100];

int getnext(int cur, char ch){
	int l = ch - 'a';
	if(tree[cur][l] == -1){
		tree[cur][l] = ntree ++;
	}

	return tree[cur][l];
}

int doit(){
	int result = 0;
	int cur = 0;
	int e = strlen(inp);

	for(int q = 0; q < e; q++){
		int l = inp[q] - 'a';
		result ++;
		if(tree[cur][l] == -1){
			break;
		}
		else{
			cur = getnext(cur, inp[q]);
		}
	}

	cur = 0;
	for(int q = 0; q < e; q++){
		cur = getnext(cur, inp[q]);
	}

	return result;
}

int main(){
	int ntest;
	fscanf(in, "%d", &ntest);
	for(int test = 1; test <= ntest; test++){
		int N;
		fscanf(in, "%d\n", &N);

		int result = 0;
		memset(tree, -1, sizeof tree);
		ntree = 1;
		for(int q = 0; q < N; q++){
			fscanf(in, "%s", inp);
			result += doit();
		}

		fprintf(out, "Case #%d: %d\n", test, result);
	}
	return 0;
}