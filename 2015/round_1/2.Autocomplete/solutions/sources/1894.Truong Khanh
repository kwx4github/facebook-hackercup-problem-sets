package tkn.challenge.hackercup2015;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Autocomplete {
	
	private static char A = 'a';
	private static int SIZE = 26;
	
	
	public static void main(String[] args) throws FileNotFoundException{
		Scanner in = new Scanner(new File("/Users/truongkhanh/Documents/Code/HackerRank/HackerRank/src/tkn/B.txt"));
		
		int T = in.nextInt();
		for(int i = 1; i <= T; i++){
			int N = in.nextInt();
			
			Node root = new Node();
			
			int count = 0;
			for(int j = 0; j < N; j++){
				String s = in.next();
				count += shortestPrefix(s, root);
			}
			
			System.out.println("Case #" + i + ": " + count); 
			
		}
		
		in.close();
	}
	
	private static int shortestPrefix(String s, Node root){
		int length = s.length();
		int result = length;
		
		
		Node currentNode = root;
		for(int i = 0; i < length; i++){
			char c = s.charAt(i);
			int index = c - A;
			
			if(currentNode.child[index] == null){
				currentNode.child[index] = new Node();
				if(result == length){
					result = i + 1;
				}
			}
			
			currentNode = currentNode.child[index];
		}
		
		return result;
	}
	
	public static class Node{
		public Node[] child = new Node[SIZE];
	}
}
