#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

int main(){
   int t;
   cin >> t;
   for(int i = 0; i < t; i++){
      int n;
      cin >> n;
      //cout << "Case #" << i+1 << ": ";
      int letters = 0;
      set<string> str;
      
      for(int j = 0; j < n; j++){
	 string temp;
	 cin >> temp;
	 //cout << temp << " - ";
	 bool check = false;
	 set<string>::iterator above;
	 set<string>::iterator below;
	 pair<set<string>::iterator,bool> ret;
	 string comp;
	 bool same;
	 int len;
	 ret = str.insert(temp);
	 above = ret.first;
	 below = above;
	 above++;
	 if(below==str.begin() && above==str.end()){
	    letters+=1;
	 }
	 else if(below==str.begin()){
	    comp = *above;
	    len = min(temp.length(), comp.length());
	    same = true;
	    for(int k = 0; k < len; k++){
	       if(comp[k]!=temp[k]){
		  same = false;
		  letters+=k+1;
		  break;
	       }
	    }
	    if(same)
	       letters+=temp.length();
	    
	 }
	 else if(above==str.end()){
	    below--;
	    comp = *below;
	    for(int k = 0; k < temp.length(); k++){
	       if(comp[k]!=temp[k]){
		  letters+=k+1;
		  break;
	       }
	    }
	 }
	 else{
	    below--;
	    comp = *above;
	    len = min(comp.length(), temp.length());
	    int minn = 0;
	    same = true;
	    for(int k = 0; k < len; k++){
	       //cout << comp[k] << "/" << temp[k] << " + ";
	       if(comp[k]!=temp[k]){
		  
		  same = false;
		  minn=k+1;
		  break;
	       }
	    }
	    if(same)
		  letters+=temp.length();
	    else{
	       comp = *below;
	       for(int k = 0; k < temp.length(); k++){
		  if(comp[k]!=temp[k]){
		     //cout << minn << " : " << k + 1 << " = ";
		     letters+=max(k+1,minn);
		     break;
		  }
	       }
	    }
	 }


	 //cout << letters << endl;
      }
      cout << "Case #" << i+1 << ": " << letters << endl;
   }

   return 0;
}
