#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <algorithm>

using namespace std ;
#define rep( i, j, k ) for( i = j ; i <= k ; ++i )
#define drep( i, j, k ) for( i = j ; i >= k ; --i )
#define MaxT 1000015

struct Tree {
	int L, R ;
	char V ;
	#define lc(p) Tr[p].L
	#define rc(p) Tr[p].R
	#define v(p) Tr[p].V 
}Tr[MaxT] ;
int T, Case, n, ans, C ;
char s[MaxT] ;

int main()
{
	int i, p, l, j ;
	bool flag ;
	
	freopen("input.txt","r",stdin) ;
	freopen("output.txt","w",stdout) ;
	
	for(scanf("%d", &T); T-- ; ) {
		ans = 0 ;
		C = 0 ;
		memset( Tr, 0, sizeof( Tr ) ) ;
		
		scanf("%d\n", &n) ;
		rep( j, 1, n ) {
			flag = false ;
			scanf("%s", &s) ;
			for(l = strlen(s), p = 0, i = 0 ; i < l ; ++i ) {
				if(!lc(p)) {
					if(!flag){
						ans += i+1 ;
						flag = true ;	
					}	
					lc(p) = ++C ;
					v(p = C) = s[i] ;
				} else {
					for(p = lc(p) ; (s[i] != v(p)) && (rc(p)); p = rc(p)) ;
					if(s[i] != v(p)) {
						if(!flag) {
							ans += i+1 ;
							flag = true ;	
						}	
						rc(p) = ++C ;
						v(p = C) = s[i] ;
					}	
				}
			}
			if(!flag) ans += l ;
		}
		
		printf("Case #%d: %d\n", ++Case, ans );
	}
	return 0 ;
}

