#include<iostream>
#include<map>
#include<cstring>
#include<string>
#include<fstream>

using namespace std;

#define fin cin
#define fout cout

struct node{
    node *alpha[26];
    node(){
        for(int i=0;i<26;i++)
            alpha[i]=NULL;
    }
}*root;

bool serch(string s){
    node *curr=root;
    int idx,i;
    for(i=0;i<s.length();i++){
        idx = s[i]-97;
        if(curr->alpha[idx]==NULL)
            return 0;
    }
    return 1;
}

void addstring(string s,int &l){
    node *curr=root;
    l=1;
    int idx,i;
    for(i=0;i<s.length();i++){
        idx = s[i]-97;
        if(curr->alpha[idx]!=NULL)
            l++;
        else
            curr->alpha[idx]=new node();
        curr = curr->alpha[idx];
    }
    for(i=0;i<26;i++){
        if(curr->alpha[i]!=NULL){
            l--;
            break;
        }
    }
}

int main(){
    ifstream fin ("autocomplete.txt");
    ofstream fout ("output");
    int T,t,n,l;
    long long cnt=0;
    string s;
    cin>>t;
    for(T=1;T<=t;T++){
            root=new node();
        cin>>n;
        cnt=0;
        while(n--){
            cin>>s;
            addstring(s,l);
            cnt+=l;
        }
        cout<<"Case #"<<T<<": "<<cnt<<endl;
    }
    return 0;
}

