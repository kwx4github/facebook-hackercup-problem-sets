#include <cstdio>
#include <cstring>
using namespace std;

#define D(x) 

const int MAX_N = (int)1e5 + 10;
const int MAX_LEN = (int)1e6 + 10;

const int MAX_CHAR_NUM = 30;
const int MAX_NODE_NUM = MAX_LEN;

int trie[MAX_NODE_NUM][MAX_CHAR_NUM];
int node_num;

void trie_init()
{
	memset(trie, -1, sizeof(trie));
	D(printf("##%d\n", trie[0][0]));
	node_num = 1;
}

int convert(char ch)
{
	return ch - 'a';
}

int add(char* st)
{
	int u = 0;
	int ret = -1;
	for (int i = 0; st[i]; i++)
	{
		int index = convert(st[i]);
		D(printf("	%d\n", trie[u][index]));
		if (trie[u][index] == -1)
		{
			trie[u][index] = node_num++;
			if (ret == -1)
			{
				ret = i + 1;
			}
		}
		u = trie[u][index];
	}
	return ret;
}

int n;
char st[MAX_LEN];

int work(char* st)
{
	int ret = add(st);
	D(printf("%d\n", ret));
	if (ret == -1)
	{
		return strlen(st);
	}
	return ret;
}

int main()
{
	int t;
	scanf("%d", &t);
	for (int i = 0; i < t; i++)
	{
		int ans = 0;
		printf("Case #%d: ", i + 1);
		scanf("%d", &n);
		trie_init();
		for (int j = 0; j < n; j++)
		{
			scanf("%s", st);
			ans += work(st);
		}
		printf("%d\n", ans);
	}
	return 0;
}
