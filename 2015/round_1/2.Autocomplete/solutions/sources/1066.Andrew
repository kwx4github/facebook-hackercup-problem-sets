#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct node_t{
	int isend;
	int nchild;
	int child[26];
}node;

node trie[1000005];
int chead;
char buf[1000005];


void insert(char* str){
	int j;
	int x;
	int cnode = 0;
	int i = strlen(str);
	for( j = 0; j < i; j++){
		trie[cnode].nchild++;
		x = str[j] - 'a';
		if(trie[cnode].child[x]){
			cnode = trie[cnode].child[x];
		}
		else{
			trie[cnode].child[x] = chead;
			cnode = chead;
			chead++;
		}
		if(j == i-1) trie[cnode].isend = 1;
	}
}

int search(char* str){
	int x,i,j,cnt,cnode;
	cnode = 0;
	i = strlen(str);
	cnt = 0;
	for( j = 0; j < i; j++){
		x = str[j] - 'a';
                cnode = trie[cnode].child[x];
		cnt++;
//		printf("%c",str[j]);
		if((trie[cnode].nchild == 1 || trie[cnode].nchild == 0)&&(trie[cnode].isend == 0)){
//		 	printf("\n");
			return cnt;
		}
	}
//	printf("\n");
	return cnt;
}

int main(){
	int s,t,n,m,cnt;
	scanf("%d",&t);
	for( s = 1; s <= t; s++){
		cnt = 0;
		chead = 1;
		memset(trie,0,sizeof(trie));
		scanf("%d",&n);
		for( m = 0; m < n; m++){
			scanf("%s",buf);
			insert(buf);
			cnt += search(buf);
		}
		printf("Case #%d: %d\n",s,cnt);
	}
	return 0;
}
