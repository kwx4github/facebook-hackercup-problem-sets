input_file = open('autocomplete.txt','r')
output_file = open('autocomplete_output.txt','w')

class Node():
    def __init__(self,value):
        self.value = value
        self.children = dict()
    def get_val(self,value):
        if(self.children.has_key(value)):
            return self.children[value]
        return None
    def put_val(self,value):
        self.children[value] = Node(value)

T = int(input_file.readline())
word = ''
root = None

for test_case in xrange(T):
    total_chars = 0
    root = Node('')
    N = int(input_file.readline())
    for i in xrange(N):
        x = total_chars
        word = input_file.readline().strip("\n")
        new = False
        node = root
        for char in word:
            if(not new):
                total_chars += 1
            if(node.get_val(char) == None):
                new = True
                node.put_val(char)
            node = node.get_val(char)
                

    
    output_file.write("Case #{}: {}\n".format(str(test_case+1),total_chars))
    #print "Case #{}: {} {}".format(str(test_case+1),str(minimum),str(maximum))

input_file.close()
output_file.close()
