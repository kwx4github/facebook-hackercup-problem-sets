/*
 * Bidhan Roy
 * University of Dhaka
 */

using namespace std;
#include <bits/stdc++.h>

#define rep(i,n) for(auto i=0; i<(n); i++)
#define mem(x,val) memset((x),(val),sizeof(x));
#define rite(x) freopen(x,"w",stdout);
#define read(x) freopen(x,"r",stdin);
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define sqr(x) ((x)*(x))
#define pb push_back
#define clr clear()
#define inf (1<<30)
#define ins insert
#define xx first
#define yy second
#define eps 1e-9

typedef long long i64;
typedef unsigned long long ui64;
typedef string st;
typedef vector<int> vi;
typedef vector<st> vs;
typedef map<int,int> mii;
typedef map<st,int> msi;
typedef set<int> si;
typedef set<st> ss;
typedef pair<int,int> pii;
typedef vector<pii> vpii;

#define mx 0

int trie[2000000][26], Next;

void init( ) {
    Next = 0;
    mem( trie[Next], -1 );
}

int assign( ) {
    Next++;
    mem( trie[Next], -1 );
    return Next;
}

int insert( st &inp ) {
    int curr = 0;
    int ret = -1, cnt = 0;
    for( char &ch : inp ) {
        int id = ch - 'a';
        cnt++;
        if( trie[curr][id] == -1 ) {
            trie[curr][id] = assign();
            if( ret == -1 ) ret = cnt;
        }
        curr = trie[curr][id];
    }
    if( ret == -1 ) ret = cnt;
    return ret;
}

int main() {
    read("autocomplete.txt");
    rite("autocomplete.output");
    ios_base::sync_with_stdio(0);
    int test, kas = 0;
    cin >> test;
    while( test-- ) {
        int n;
        cin >> n;
        st inp;
        init();
        int ans = 0;
        while( n-- ) {
            cin >> inp;
            ans += insert( inp );
        }
        cout << "Case #" << ++kas << ": " << ans << endl;
    }
    return 0;
}
