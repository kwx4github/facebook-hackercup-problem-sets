#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

using namespace std;
typedef long long ll;
const double eps = 1e-9;

struct tree{
	char ch;
	vector<int> ind;
	tree(){
		ch = 0;
		ind.resize(26, -1);
	}
};

vector<tree> arr;
int cnt = 1;

void print(int t, int res){
	cout<<"Case #"<<t<<": "<<res<<"\n";
}

int main(){
	freopen("autocomplete.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int test_count;
	cin>>test_count;
	for(int test=0; test<test_count; test++){
		cnt = 1;
		arr.clear();
		arr.resize(1e6+10);
		int n, res = 0;
		cin>>n;
		for(int i=0; i<n; i++){
			string str;
			cin>>str;
			int ptr = 0;
			bool fl = false;
			for(int j=0; j<str.size(); j++){
				char c = str[j];
				int v = c - 'a';
				if(!fl)
					res++;
				if(arr[ptr].ind[v] == -1){
					fl = true;
					arr[ptr].ind[v] = cnt;
					arr[cnt].ch = c;
					ptr = cnt;
					cnt++;
				}
				else{
					ptr = arr[ptr].ind[v];
				}
			}
		}
		print(test + 1, res);
	}
	return 0;
}