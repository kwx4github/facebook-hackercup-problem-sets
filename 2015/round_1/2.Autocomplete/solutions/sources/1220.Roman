#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <time.h>
using namespace std;

#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,value) memset(A,value,sizeof(A))

#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define Pi 3.14159265358979

typedef long long Int;
typedef unsigned long long UINT;
typedef vector <int> VI;
typedef pair <int, int> PII;

const int INF = 1000100000;
const int MAX = 1000007;
const int MAX2 = 10007;
const int BASE = 1000000000;
const int MOD = 1000000007;

struct state
{
    map<char, int> nx;
};
state A[MAX];
int sz;
int add(string s)
{
    int res = s.size();
    int v = 0;
    FOR(i,0,s.size())
    {
        if (!A[v].nx.count(s[i] - 'a'))
        {
            res = min(res , i + 1);
            A[v].nx[s[i] - 'a'] = sz++;
        }
        v = A[v].nx[s[i] - 'a'];
    }
    return res;
}
char buf[MAX];
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("autocomplete.txt", "r", stdin);
        freopen("out.txt" , "w" , stdout);
    #endif
    int t;
    cin >> t;
    FOR(tt,0,t)
    {
        printf("Case #%d: " , tt + 1);
        int n;
        cin >> n;
        int res = 0;
        sz = 1;
        FOR(i,0,n)
        {
            scanf("%s" , buf);
            string s = buf;
            res += add(s);
        }
        FOR(i,0,sz)
        {
            A[i].nx.clear();
        }
        cout << res << endl;
    }

    return 0;
}
