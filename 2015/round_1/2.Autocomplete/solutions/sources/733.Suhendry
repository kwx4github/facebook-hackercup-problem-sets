#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,arr) for (__typeof((arr).begin()) it=(arr).begin(); it!=(arr).end(); it++)

struct tdata {
	tdata *next[128];
	tdata() { REP(i,128) next[i] = 0; }
};

char s[1000005];
tdata *root;

int add(tdata *curr, char *t) {
	if ( *t == 0 ) return 0;
	if ( curr->next[*t] == 0 ) {
		while ( *t ) {
			curr->next[*t] = new tdata;
			curr = curr->next[*t];
			t++;
		}
		return 1;
	}
	return add(curr->next[*t],t+1) + 1;
}

void clean(tdata *curr) {
	REP(i,128) if ( curr->next[i] != 0 ) clean(curr->next[i]);
	delete curr;
}

int main()
{
	int T;
	scanf( "%d\n", &T );
	
	FOR(tc,1,T) {
		root = new tdata;

		int N;
		scanf( "%d%*c", &N );

		int ans = 0;
		REP(_,N) {
			gets(s);
			ans += add(root,s);
		}

		printf( "Case #%d: %d\n", tc, ans );
		fprintf( stderr, "Case #%d: %d\n", tc, ans );
		clean(root);
	}


	return 0;
}
