#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#define eps 1e-9
#define FOR(x, s, e) for(int x = (s); x < (e); ++x)
#define FORc(x, s, e, c) for(int x = (s); x < (e) && (c); ++x)
#define STEP(x, s, e, d) for(int x = (s); x < (e); x+=(d))
#define ROF(x, s, e) for(int x = (s); x >= (e); --x)
#define ROFc(x, s, e, c) for(int x = (s); x >= (e) && (c); --x)
#define FOREACH(container, it) \
   for(typeof(container.begin()) it=container.begin(); it!=container.end(); it++)
#define EXP(i, s) for (int i = (s); i; i = qn[i])
#define vb vector<bool>
#define vi vector<int>
#define vii vector<pair<int, int> >
#define vs vector<string>
#define pb push_back
#define mp make_pair
#define ALL(X) X.begin(), X.end()
#define LL long long
#define pii pair<int, int>
#define x first
#define y second
#define gcd(x, y) __gcd((x), (y))
#define countbit(x) __builtin_popcount(x)

using namespace std;

#define MAXN 2000000

int nxt[MAXN][26];
int sz;
string s;

int insert(int u, int pos) {
  if (pos == s.length()) return pos;
  int ch = s[pos] - 'a';
  int res = -1;
  if (nxt[u][ch] == -1) {
    nxt[u][ch] = ++sz;
    res = pos + 1;
  }
  int v = nxt[u][ch];
  int ires = insert(v, pos + 1);
  if (res != -1) return res;
  return ires;
}

int main(int argc, char **argv){
  int T;
  cin >> T;
  FOR(ca, 1, T+1) {
    memset(nxt, -1, sizeof(nxt));
    int N;
    cin >> N;
    LL res = 0;
    sz = 0;
    FOR(i, 0, N) {
      cin >> s;
      res += insert(0, 0);
    }
    printf("Case #%d: %lld\n", ca, res);
  }
  return 0;
}
