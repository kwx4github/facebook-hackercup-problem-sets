#include <cstdio>
#include <algorithm>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <string>
#include <string.h>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <cctype>
#define fi first
#define se second
#define rep(i,n) for(int i = 0; i < n; ++i)
#define rrep(i,n) for(int i = 1; i <= n; ++i)
#define drep(i,n) for(int i = n-1; i >= 0; --i)
#define gep(i,g,j) for(int i = g.head[j]; i != -1; i = g.e[i].next)
#define each(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define rng(a) a.begin(),a.end()
#define maxs(x,y) x = max(x,y)
#define mins(x,y) x = min(x,y)
#define pb push_back
#define sz(x) (int)(x).size()
#define pcnt __builtin_popcount
#define snuke srand((unsigned)clock()+(unsigned)time(NULL))
using namespace std;
typedef long long int ll;
typedef pair<int,int> P;
typedef vector<int> vi;

const int MX = 100005, INF = 1000010000;
const ll LINF = 1000000000000000000ll;
const double eps = 1e-10;
const int di[] = {-1,0,1,0}, dj[] = {0,-1,0,1}; //^<v>

vector<vi> d;

int add(string s) {
  int res = 1, i = 0;
  for (char c : s) {
    int j = c-'a';
    if (d[i][j] == -1) {
      d[i][j] = d.size();
      d.pb(vi(26,-1));
    } else {
      res++;
    }
    i = d[i][j];
  }
  return min((int)s.size(),res);
}

int main(){
  int ts;
  cin >> ts;
  rrep(ti,ts) {
    int n, ans = 0;
    d.clear();
    d.pb(vi(26,-1));
    cin >> n;
    string s;
    rep(i,n) {
      cin >> s;
      ans += add(s);
    }
    printf("Case #%d: %d\n",ti,ans);
  }
  return 0;
}





