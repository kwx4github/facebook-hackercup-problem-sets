#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cfloat>
#include <climits>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v, w; };

ll MOD = 1000000007;
ll _MOD = 1000000009;
double EPS = 1e-10;

int f(string& s, int i, vector<map<char, int> >& a, int u) {
	if (i == s.length()) return 0;
	char c = s[i];
	if (!a[u].count(c)) {
		a[u][c] = a.size();
		map<char, int> m;
		a.push_back(m);
	}
	int x = f(s, i + 1, a, a[u][c]);
	if (x) return x + 1;
	return a[u].size() == 1 ? 0 : 1;
}

int main() {
	int T; cin >> T;
	for (int t = 1; t <= T; t++) {
		vector<map<char, int> > a;
		map<char, int> root;
		root['#'] = -1;
		a.push_back(root);
		int sum = 0;
		int N; cin >> N;
		while (N--) {
			string s; cin >> s;
			s += '#';
			int x = f(s, 0, a, 0);
			sum += min(x, (int)s.length() - 1);
		}
		printf("Case #%d: %d\n", t, sum);
	}
}