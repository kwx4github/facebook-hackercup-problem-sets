#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <climits>
#include <vector>
#include <sstream>
using namespace std;

#define pb push_back
#define mp make_pair
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long lint;

#define PI 3.1415926535897932385



struct anuj
{
    anuj * a[26];
    int caseno;
};
typedef struct anuj n;

void del(n *root) {
//    if (root) {
//        for (int x=0;x<26;x++)del(root->a[x]);
//        delete root;
//    }
}

int main()
{
    freopen("a.txt","r",stdin);
    freopen("out","w",stdout);
    int cas;
    cin>>cas;
    for(int x=0;x<cas;x++)
    {
        n *root = new anuj();
        for (int x = 0; x < 26; x++) {
            root->a[x] = NULL;
        }
        int nos;
        cin >> nos;
        int cnt = 0;
        for (int xx = 0; xx < nos; xx++)
        {
            string str;
            cin >> str;
            n *p = root;
            int ffflag=0; // check to see if you made a new node
            int pp = 0;//for moving in the input string
            char ch = str[pp];
            int len = str.size();
            while (pp < len)
            {
                //make new node
                if (p->a[ch - 'a'] == NULL)
                {
                    if (!ffflag)
                        cnt+=(pp+1);
                    ffflag=1;

                    p->a[ch - 'a'] = new anuj();
                    p = p->a[ch - 'a'];
                    for (int x = 0; x < 26; x++)
                        p->a[x] = NULL;
                }
                //just traverse
                else
                    p = p->a[ch - 'a'];
                pp++;
                ch = str[pp];
            }
            // u never made a new node
            if(ffflag!=1)
                cnt+=str.size();
//            cout<<str<<" "<<cnt<<"\n";

        }
        del(root);
        cout<<"Case #"<<x+1<<": "<<cnt<<"\n";
    }
    return (0);
}



