#include <fstream>
#include <cstring>
#include <string>

using namespace std;

ifstream input;
ofstream output;

const int MAXN = 1000000 + 100;

struct TrieNode
{
	int ch[30];
}Trie[MAXN];

int top;
int total;

void Add(int node, const string & str, int pos, bool newBranch)
{
	if (pos == str.length())
	{
		if (newBranch == false) 
		{
			total += pos;
			//output << " + " << pos;
		}
		return;
	}

	int next = str[pos] - 'a';
	if (Trie[node].ch[next])
		Add(Trie[node].ch[next], str, pos + 1, newBranch);
	else
	{
		Trie[node].ch[next] = ++top;
		if (newBranch == false)
		{
			total += pos + 1;
			//output << " + " << pos + 1;
		}
		Add(Trie[node].ch[next], str, pos + 1, true);
	}
}

void singleCase(int case_num)
{
	memset(Trie, 0, sizeof(Trie));
	top = 1;
	total = 0;
	int N;
	input >> N;
	string str;
	for (int i=0; i<N; i++)
	{
		input >> str;
		Add(1, str, 0, false);
	}
	//output << endl;
	output << "Case #" << case_num << ": " << total << endl;
}

int main()
{
	input.open("auto.txt");
	output.open("trie.out");

	int T;
	input >> T;
	for (int i=0; i<T; i++)
		singleCase(i + 1);

	return 0;
}