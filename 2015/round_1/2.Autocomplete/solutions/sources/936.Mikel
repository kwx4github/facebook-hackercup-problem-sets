
import java.io.*;


public class Main {
    
    private static class Node {
        private final Node children[] = new Node['z'-'a'+1];
        public Node getChild(char c) {return children[c-'a'];}
        public void setChild(char c, Node node) {children[c-'a'] = node;}
    }
    
    private static Node root;
    
    private static int insert(String s) {
        //final int ans = insert(root, s.toCharArray(), 0);
        //return ans+1;
        return insert(root, s.toCharArray(), 0);
    }
    
    private static int insert(Node node, char s[], int pos) {
        if (pos == s.length) return 0;
        Node child = node.getChild(s[pos]);
        if (child == null) {
            child = new Node();
            node.setChild(s[pos], child);
            insert(child, s, pos+1);
            return 1;
        } else {
            return 1 + insert(child, s, pos+1);
        }
    }

    public static void main(String[] args) throws IOException {
        final BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int TC = Integer.parseInt(in.readLine());
        for (int tc = 1; tc <= TC; tc++) {
            root = new Node();
            int N = Integer.parseInt(in.readLine());
            int ans = 0;
            for (int i = 0; i < N; i++) ans += insert(in.readLine());
            System.out.println("Case #" + tc + ": " + ans);
        }
    }
    
}
