#include <stdio.h>
#include <string.h>

const int ALPHABETS=26;
int T, n;
char str[1000010];

int toNumber(char ch)
{
	return ch-'a';
}

struct TrieNode {
	TrieNode* children[ALPHABETS];
	bool terminal;
	TrieNode() : terminal(false) {
		memset(children, 0, sizeof(children));
	}
	~TrieNode() {
		for(int i=0 ; i<ALPHABETS ; i++)
			if(children[i]) delete children[i];
	}

	void insert(const char* key, bool discovery, int& cnt) {
		if(*key==0) {
			terminal=true;
			return;
		}
		else {
			if(!discovery) cnt++;
			int next=toNumber(*key);
			if(children[next]==NULL) {
				discovery=true;
				children[next]=new TrieNode();
			}
			children[next]->insert(key+1, discovery, cnt);
		}
	}
};

int main(void)
{
#ifdef _CONSOLE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w+", stdout);
#endif
	scanf("%d", &T);
	for(int t=1 ; t<=T ; t++) {
		TrieNode trie;
		scanf("%d", &n);
		int sol=0;
		while(n--)
		{
			scanf("%s", str);
			int temp=0;
			trie.insert(str, false, temp);
			sol+=temp;
		}
		printf("Case #%d: %d\n", t, sol);
	}
}