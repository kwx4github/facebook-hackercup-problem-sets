#include <stdio.h>
#include<string.h>
#include <algorithm>
using namespace std;
struct node {
	node* p[27];
}*root,*now;
int nub,n,now_c,x;
char in[1000005];
void go(node* pp) {
	for(int i=0;i<26;i++)
	{
		if(pp->p[i]!=NULL)
		{
			go(pp->p[i]);
			free(pp->p[i]);
		}
	}
}
int main(int argc, char *argv[])
{
	int t;
	scanf("%d",&t);
	for(int r=1;r<=t;r++)
	{
		root = (node*) calloc (1,sizeof(node));
		scanf("%d",&n);
		for(int i=0;i<n;i++)
		{
			//printf("new %d\n",i);
			scanf("%s",in);
			x = strlen(in);
			now_c=0;
			now = root;
			bool done=0;
			while(now_c<x)
			{
				//printf("%d\n",now_c);
				if(!done)
				nub++;
				if(now->p[in[now_c]-'a']==NULL)
				{
					now->p[in[now_c]-'a'] = (node*) calloc (1,sizeof(node));
					done=1;
				}
				now = now->p[in[now_c]-'a'];
				now_c++;
			}
			//printf("CO %d\n",nub);
		}
		printf("Case #%d: %d\n",r,nub);
		nub=0;
		go(root);
		free(root);
	}
	
	return 0;
}
