#include<bits/stdc++.h>
using namespace std;

struct node{
    node *child[26];
};

node *getNode(){
    node *n=NULL;
    n=(node *)malloc(sizeof(node));
    for(int i=0;i<26;++i)
        n->child[i]=NULL;
    return n;
}

int ans;

int func(node *root,string s){
    int L=s.size();
    node *cur=root;
    int i,fl=0;
    for(i=0;i<L;++i){
        int idx=s[i]-'a';
        if(!(cur->child[idx])){
            if(!fl){
                ans=ans+i+1;
                fl=1;
            }
            cur->child[idx]=getNode();
        }
        cur=cur->child[idx];
    }
    if(!fl)
        ans=ans+i;
    return 0;
}

int main(){
    freopen("autocomplete.txt","r",stdin);
    freopen("autofin.txt","w",stdout);
    int T;
    scanf("%d",&T);
    for(int t=1;t<=T;++t){
        node *root=getNode();
        int N;
        scanf("%d",&N);
        string s;
        ans=0;
        while(N--){
            cin>>s;
            func(root,s);
        }
        printf("Case #%d: %d\n",t,ans);
    }
}
