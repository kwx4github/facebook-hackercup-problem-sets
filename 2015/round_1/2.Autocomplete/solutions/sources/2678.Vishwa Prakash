#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<string>
#include<cstring>
#include<vector>
#include<queue>
#include<cstdlib>
#include<map>
#define gc getchar_unlocked
using namespace std;
typedef long long int int64;
typedef vector <int> vi;
typedef vector < vector <int> > vvi; 
int64 tans,ans,tset;
struct node
{
int end;
int prf;
struct node *a[26];
};
struct node *p,*p1,*pr;
void addWord(string s){
	int64 i,vl,j;
	p = pr;p->prf++;
	for(i=0;i<s.length();i++){
	   vl = (int)s[i]-97;
	   if(p->a[vl]==NULL){
	   	if(tset==0){tans=i+1;tset=1;}
	   	p1 = (struct node *)malloc(sizeof(struct node));
	   	p1->end = p1->prf = 0;
	   	for(j=0;j<26;j++)p1->a[j]=NULL;
	   }
	   else p1 = p->a[vl];
	   p->a[vl] = p1;
	   p = p1;
	   p->prf++;
	}
	p->end++;
}
int findWord(string s){
	int64 i,j,vl,fl=1;p = pr;
	for(i=0;i<s.length();i++){
		   vl = (int)s[i]-97; 
		   if(p->a[vl]==NULL){fl=0;break;}
		   p = p->a[vl];
	   } 
	if(p->end==0)fl=0;
	return fl;
}
void init(){
	int i;
	pr = (struct node *)malloc(sizeof(struct node)); 
	pr->end = pr->prf = 0;
	for(i=0;i<26;i++)pr->a[i] = NULL;
}

int main(){
freopen("in.txt","r",stdin);
freopen("out.txt","w",stdout);
int64 i,j,k,n,t,cn=1,vl,dv,m,a,b;
string s;
cin>>t;
while(t--){
	ans=tans=0;
	init();
	scanf("%lld",&n);	
	for(i=0;i<n;i++){
		cin>>s;
		tans=s.length();tset=0;
		addWord(s);
		ans+=tans;
	}
	printf("Case #%lld: %lld\n",cn,ans);
	cn++;
}
return 0;
}
