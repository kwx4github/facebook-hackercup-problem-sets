import java.io.*;
import java.util.*;
import static java.lang.Math.*;
public class Sample

{
     BufferedReader read;
     BufferedWriter write;
    public static void main(String args[]) throws Exception
    {
        new Sample().init("autocomplete");
    }
     void init(String name) throws Exception
    {
        read= rf(name+".txt");
        write=wf(name+"_output.txt");
 /*
        write.write(100+"\n");
        for(int cnt=0;cnt<100;cnt++)
        {
             write.write(10+"\n");
         
             for(int i=0;i<10;i++)
             {
                 for(int j=0;j<100000;j++)
                 {
                     int t=(int)(random()*763);
                     t%=26;
                     write.write((char)(t+'a'));
                 }
                 write.write("\n");
             }
        }
         */
            
      int n = i(read.readLine());       for(int i=0;i<n;i++) result( i);
        write.flush(); write.close();read.close();
   }

void result(int p1) throws Exception
{
    int n=i(read.readLine());
    Trie root=new Trie();
    long ans=0;
    for(int i=0;i<n;i++)
    {
        String s=read.readLine();
        ans+=root.add(s);
     //   root.add(s);
     // root.print();
   //     System.out.println(i+"  "+ans);
      
    }
    String s1=""+ans;
    System.out.println("Case #"+(p1+1)+": "+s1);
    write.write("Case #"+(p1+1)+": "+s1+"\n");
}

int i(String s){return Integer.parseInt(s.trim());}
long l(String s){return Long.parseLong(s.trim());}
double d(String s){return Double.parseDouble(s.trim());}
 int[] ia(String s1){String s[]=s1.trim().split(" ");int p[]=new int[s.length];for(int i=0;i<s.length;i++)p[i]=Integer.parseInt(s[i]);return p;}
 
static BufferedWriter wf(String s) throws Exception{return new BufferedWriter(new FileWriter(new File(s)));}
static BufferedReader rf(String s) throws Exception{return new BufferedReader(new FileReader(new File(s)));}
static BufferedReader ri() throws Exception{return new BufferedReader(new InputStreamReader(System.in));}
}
class Trie
{
    HashMap<Character, Trie>map;
    Trie()
    {
      map=new HashMap<Character,Trie>();
    }
    
    void print()
    {
        LinkedList<Trie>ls=new LinkedList<>();
        ls.addLast(this);
        int level=0;
        while(!ls.isEmpty())
        {
            LinkedList<Trie>nw=new LinkedList<Trie>();
               System.out.println("\n\n level = "+level);
            while(!ls.isEmpty())
            {
            Trie t=ls.removeFirst();
           for(char c='a';c<='z';c++)if(t.map.containsKey(c))
            {
                System.out.print("  "+c);
                nw.addLast(t.map.get(c));
            }
            }
            ls=nw;
            level++;
        }
        System.out.println("\n----------------------------------------");
    }
    int add(String s)
    {
        Trie t=this;
        int sl=s.length(),ans=1;
        for(int i=0;i<sl;i++)
        {
            char c=s.charAt(i);
        //      System.out.print(s.charAt(i)+"   "+t.map.containsKey(c)+"   ");
            if(t.map.containsKey(c))ans++;
            else t.map.put(c, new Trie());
            t=t.map.get(c);
            
       //   System.out.println("   ans= "+ans+"\n");
        }
        ans=min(ans,sl);
  //      System.out.println(s+"  "+ans);
        return ans;
    }
}