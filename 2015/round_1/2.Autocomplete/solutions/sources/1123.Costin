#include <cstdio>
#include <fstream>
#include <string>
#include <algorithm>
using namespace std;
#define sz first
#define ind second
ifstream f("autocomplete.txt");
ofstream g("output.txt");

string a;
pair <int,int> v[100100];

struct Nod
{
    Nod *nxt[26];
    Nod()
    {
        int i;
        for (i=0;i<26;i++) nxt[i] = 0;
    }
};

int T,q,ans,n;


int ins(Nod *R,int ind)
{
     int i=0,cn=1;
     Nod *T = R;

     while ( i<a.size() && R->nxt[a[i]-'a'] != 0)
     {
        R = R->nxt[a[i]-'a'];
        cn++;
        i++;
     }



     if (i == a.size())
     {
         return a.size();
     }


    for (i=0,R=T;i<a.size();i++)
    {
        if (R->nxt[a[i]-'a'] == 0)
            R->nxt[a[i]-'a'] =  new Nod();
        R = R->nxt[a[i]-'a'];
    }

    return cn;
}

void solve()
{
    int i,j;
    Nod *rad =new Nod();

    f>>n;
    ans = 0;
    for (i=1;i<=n;i++)
    {
        f>>a;
        ans  += ins(rad,i);
    }

    g<<"Case #"<<q<<": "<<ans<<"\n";
}

int main()
{


    f>>T;

    for (q=1;q<=T;q++)
    {
        ans = 0;
        solve();

    }



    return 0;
}
