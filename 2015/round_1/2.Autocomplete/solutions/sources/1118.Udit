//Trie Data Structure :-
#include<stdio.h>
#include<malloc.h>
#include<string.h>
char str[1000005];
int cnt=0,sum=0,flag;
struct trie
{	int val;
	struct trie *child[30];
}*root;
void initialize()
{	struct trie *temp;
	int i;
	temp=(struct trie *)malloc(sizeof(struct trie));
	temp->val=0;
	for(i=1;i<=26;i++)
		temp->child[i]=NULL;
	root=temp;
}
void insert(struct trie *ptr,char word[])
{	int level;
	int len=strlen(word);
	//printf("len%d\n",len);
	int idx,i;
	struct trie *temp;
	ptr=root;
	cnt++;
	for(level=0;level<len;level++)
	{	idx=word[level]-'a'+1;
		if(!ptr->child[idx])
		{	//printf("idx %d",idx);
			if(!flag)
			{	sum++;
				flag=1;
			}
			temp=(struct trie *)malloc(sizeof(struct trie));
			temp->val=0;
			for(i=1;i<=26;i++)
				temp->child[i]=NULL;
			ptr->child[idx]=temp;	
		}
		else sum++;
		ptr=ptr->child[idx];
	}
	ptr->val=cnt;
	
}
int main()
{	freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
	int test,t,i,n;
	initialize();
	scanf("%d",&t);
	for(test=1;test<=t;test++)
	{	sum=0;
		cnt=0;
		initialize();
		scanf("%d",&n);
		for(i=0;i<n;i++)
		{	scanf("\n");
			gets(str);
			flag=0;
			insert(root,str);
		}
		//printf("sum");
		printf("Case #%d: %d\n",test,sum);
	}
}
