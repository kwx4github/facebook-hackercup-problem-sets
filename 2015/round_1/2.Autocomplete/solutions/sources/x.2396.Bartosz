#include <iostream>
#include <vector>
#include <cstdio>
#include <cstring>
using namespace std;

#define PB push_back

const int MAXN=1e6+5;

char slowo[MAXN], mapa[MAXN];
int d, ile, wynik, gl[MAXN];
vector<int> pol[MAXN];
bool dodany;

int dfs (int k, char l)
{
  for (vector<int>::iterator it=pol[k].begin(); it!=pol[k].end(); it++)
    if (mapa[*it]==l) return *it;

  if (!dodany) wynik+=gl[k]+1, dodany=true;
  
  ile++;
  gl[ile]=gl[k]+1;
  mapa[ile]=l;
  pol[k].PB (ile);
  return ile;
}

void dodaj ()
{
  int akt=0;
  for (int i=1; i<=d; i++)
    akt=dfs (akt, slowo[i]);
  if (!dodany) wynik+=d;
}

int main ()
{
  int t;
  scanf ("%d", &t);
  
  for (int i=1; i<=t; i++)
  {
    int n;
    scanf ("%d", &n);

    for (int j=1; j<=n; j++)
    {
      scanf ("%s", slowo+1);
      d=strlen (slowo+1);
      dodany=false;
      dodaj ();
    }
    printf ("Case #%d: %d\n", i, wynik);
    
    wynik=0, ile=0;
    for (int j=0; j<=ile; j++) pol[j].clear();
  }
  
  return 0;
}