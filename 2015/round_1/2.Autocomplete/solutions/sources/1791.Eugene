#!/usr/bin/python
import sys

def addWord(trie, w):
    current_dict = trie
    for l in w:
        current_dict = current_dict.setdefault(l, {})
    current_dict = current_dict.setdefault('E', 'E')

# find the number of letters to type    
def retrieveWord(trie, w):
    cur = trie
    m = 1
    # find the last branch
    m = None
    length = len(w)
    for i in range(length):
        l = w[i]
        cur = cur[l]
        branching = len(cur.keys())>1
        if i < length-1 and branching:
            m = i+1
        elif i == length-1 and branching:
            m = i
    if m is None: return 1        
    else: return m+1
    
def solve(words):
    n = 0
    trie = dict()
    for w in words:
        addWord(trie, w)
        n += retrieveWord(trie, w)
    return n

if __name__ == '__main__':
    n = int(sys.stdin.readline())
    for i in range(n):
        N = int(sys.stdin.readline())
        words = []
        for j in range(N):
            words.append(sys.stdin.readline().strip())
        print 'Case #%d: %d'%(i+1, solve(words))


        
