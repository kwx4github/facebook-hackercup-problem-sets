#include <cstdio>
#include <cstring>
using namespace std;

struct Trie{
    int ne[26];
    int sum;
};

Trie tr[1000010];

int Cnt;

int getNode() {
    memset(tr[Cnt].ne, -1, sizeof(tr[Cnt].ne));
    tr[Cnt].sum = 0;
    Cnt ++;
    return Cnt - 1;
}

void insert(int root, char *s) {
    int p = root;
    for (int i = 0; s[i]; i ++) {
        if (tr[p].ne[s[i] - 'a'] == -1) {
            tr[p].ne[s[i] - 'a'] = getNode();
        }
        p = tr[p].ne[s[i] - 'a'];
        tr[p].sum ++;
        //printf("Add %d %d\n", p, tr[p].sum);
    }
}

char s[1000010];

int main() {
    freopen("autocomplete.txt", "r", stdin);
    freopen("autocomplete.out", "w", stdout);
    int T;
    scanf("%d", &T);
    for (int cas = 1; cas <= T; cas ++) {
        int ans = 0;
        Cnt = 0;
        int root = getNode();
        int n;
        scanf("%d", &n);
        for (int i = 0; i < n; i ++) {
            scanf("%s", s);
            insert(root, s);
            int p = tr[root].ne[s[0] - 'a'], cnt = 1;
            while (tr[p].sum > 1 && s[cnt] != 0) {
                p = tr[p].ne[s[cnt] - 'a'];
                //printf("now p = %d\n", p);
                cnt ++;
            }
            ans += cnt;
        }
        printf("Case #%d: %d\n", cas, ans);
        fprintf(stderr, "%d\n", ans);
    }
    return 0;
}