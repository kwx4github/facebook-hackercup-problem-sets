#include <cstdio>
#include <iostream>
#include <map>
#include <cstring>

using namespace std;

struct Trie {
	Trie * b[30];
	int count;
	bool hasWord;

	Trie() {
		memset(b, 0, sizeof b);
		count = 0;
		hasWord = false;
	}

	void insert(const char* word) {
		if (word[0] == '\0') {
			hasWord = true;
			return;
		}
		count++;
		if (b[*word - 'a'] == NULL) b[*word - 'a'] = new Trie();
		b[*word - 'a']->insert(word + 1);
	}

	int prefix(const char *word) {
		if (*word == '\0') return 0;
		if (count > 1) return 1 + b[*word - 'a']->prefix(word + 1);
		return hasWord ? 1 : 0;
	}
};

int main (void) {

	int C;
	cin >> C;
	for (int c = 1; c <= C; ++c) {
		int N; cin >> N;
		string s;
		Trie t;
		t.hasWord = 1;
		int res = 0;
		for (int i = 0; i < N; ++i) {
			cin >> s;
			t.insert(s.c_str());
			int inc = t.prefix(s.c_str());
			res += inc;
		}
		printf("Case #%d: %d\n", c, res);
	}
	return 0;
}
