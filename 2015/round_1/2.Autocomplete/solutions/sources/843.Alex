#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <cstring>
#include <algorithm>
#include <cctype>
#include <ctime>
#include <cmath>
#include <complex>

using namespace std;

#define forab(i, a, b) for(int i = int(a); i < int(b); ++i)
#define forba(i, b, a) for(int i = int(b) - 1; i >= int(a); --i)
#define forn(i, n) forab(i, 0, n)
	
typedef long long ll;
typedef long double ldb;

const int MAXLEN = int(1e6) + 10;

struct trie {
	int sz;
	trie *to[26];

	trie(): sz() {
		forn(i, 26)
			to[i] = NULL;
	}

	void add(int n, char *s) {
		sz++;

		if (n == 0)
			return;

		int a = s[0] - 'a';
		if (!to[a])
			to[a] = new trie();

		to[a]->add(n - 1, s + 1);
	}

	int cnt(int n, char *s) {
		if (n == 0 || sz == 1)
			return 0;

		return 1 + to[s[0] - 'a']->cnt(n - 1, s + 1);
	}
};

int n;
char s[MAXLEN];
int slen;

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int T;
	scanf("%d", &T);
	forn(testNum, T) {
		cerr <<testNum << '\n';

		scanf(" %d ", &n);

		cerr << n << '\n';

		trie *root = new trie();

		int ans = 0;

		forn(i, n) {
			scanf(" %s ", s);
			slen = strlen(s);
			root->add(slen, s);
			ans += max(1, root->cnt(slen, s));
		}

		cout << "Case #" << testNum + 1 << ": ";
		cout << ans;
		cout << "\n";
	}


	return 0;
}
