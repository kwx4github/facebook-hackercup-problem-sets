#include <iostream>
#include <string>
#include <vector>
#include <cstdlib>
#include <cmath>
#include <memory>

using namespace std;

//共通接頭辞をカウントする
class Trie{  
 public:
  std::unique_ptr<Trie> next[26];
  int data;
  int depth;
  
  Trie(int depth_):data(0),depth(depth_)
      { std::fill(next, next+26, nullptr); }

  Trie():data(0),depth(0)
      { std::fill(next, next+26, nullptr); }  
  
  void insert(string::iterator r,string::iterator l){
  	++data;
    if(r==l) return;
    if(this->next[*r-'a'] == nullptr){
      this->next[*r-'a'].reset(new Trie(depth+1));
    }
    this->next[*r-'a']->insert(r+1,l);  
  }

  int count_common_prefix(string::iterator r,string::iterator l){
    if (r==l) return depth;
  	if (this->data == 1) return depth;
    if (this->next[*r-'a'] == nullptr)
      return depth;
    return this->next[*r-'a']->count_common_prefix(r+1,l);
  }
};

int main(int , char** ){

	vector<int> results(101,1); //1つ目の単語は0文字で決定できるが1文字入力させる
	int T,N;
	int N_i_size;
	long long int minN[101],maxN[101];

	cin >> T;

	for(int i = 0; i < T; ++i){
		cin >> N;
		Trie st;
		string buf;
		for(int j = 0; j < N; ++j){
			cin >> buf;
			st.insert(buf.begin(),buf.end());
			results[i] += st.count_common_prefix(buf.begin(),buf.end());
		}
	}

	for(int i = 0; i < T; ++i){	cout << "Case #" << i+1 << ": " << results[i] << endl; }

	return 0;
}