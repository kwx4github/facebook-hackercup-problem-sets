#include <iostream>
#include <cstring>
#include <vector>
#include <string>
#include <cstdio>

using namespace std;

#define ALPHABET_SIZE 26

class node
{
	public:
		char data;
		vector< node* > child;
		
		node(char c){
			data = c;
			for(int i=0;i<ALPHABET_SIZE;i++)
				child.push_back(NULL);
		}
};


class trie
{
	public:
		node root;
		int insert(const string &s);

		trie():root('\0'){};
};

int trie::insert(const string &s)
{
	int ans=0,flag=1;
	node* tmp = &root;
	int n = s.size();

	for(int i=0;i<=n-1;i++)
	{
		if(flag)
			ans++;
		if(tmp->child[s[i] - 'a']==NULL)
		{
			flag=0;
			tmp->child[s[i] - 'a'] = new node(s[i]);
		}
		tmp = tmp->child[s[i] - 'a'];
	}
	return ans;
}

int main()
{
	int T;
	scanf("%d",&T);
	for(int i=1;i<=T;i++){
		trie T;
		int N;
		string s;
		int ans=0;
		scanf("%d",&N);
		for(int j=0;j<N;j++){
			cin>>s;
			ans += T.insert(s);
		}
		printf("Case #%d: %d\n",i,ans);
	}
	return 0;
}