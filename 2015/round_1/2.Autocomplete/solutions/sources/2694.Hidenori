
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int nextNode[1001001][26];
int z = 0;
void add(string s)
{
  int node = 1;
  for (int i = 0; i < sz(s); i++)
  {
    int which = nextNode[node][s[i]-'a'];
    if (which == 0)
    {
      z++;
      nextNode[node][s[i]-'a']=z;
      which = z;
    }
    node = which;
  }
}
int T;
int N;

int init()
{
  z = 1;
  clr(nextNode);
}
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0);
  cin >> T;
  rep1(test,T)
  {
    init();
    cin >> N;
    int ans = 0;
    rep1(i,N)
    {
      string s;
      cin >> s;
//      if (test == 4)
//      db(s);
      int len = sz(s);
      int node = 1;
//      db(nextNode[1]['o'-'a']);
//      db(s);
      rep(i,sz(s))
      {
        int which = nextNode[node][s[i]-'a'];
        if (which == 0)
        {
          len = i + 1;
          break;
        }
        node = which;
      }
      ans += len;
//      if (test==4) db(len);
      add(s);
    }
    cout << "Case #" << test << ": " << ans << endl;
  }
}
