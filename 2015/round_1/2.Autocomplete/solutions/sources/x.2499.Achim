package de.ateda.hackercup2015;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashSet;
import java.util.Set;
import java.util.StringTokenizer;

public class Autocomplete {

	private static BufferedReader br;
	private static StringTokenizer st;
	private static PrintWriter pw;

	public static void main(String[] args) throws IOException {
		br = new BufferedReader(new FileReader("src/de/ateda/hackercup2015/Autocomplete.in"));
		pw = new PrintWriter(new FileWriter("src/de/ateda/hackercup2015/Autocomplete.out"));
		final int T = readInt();
		for (int t = 1; t <= T; t++) {
			System.out.println("starting case " + t);
			pw.print("Case #" + t + ": ");
			int n = readInt();
			int keys = 0;
			Set<String> prefixesTaken = new HashSet<>();
			for (int i = 0; i < n; i++) {
				String word = nextToken();
				String wordX = word + " ";
				String prefix = null;
				for (int j = 1; j <= wordX.length(); j++) {
					prefix = wordX.substring(0, j);
					if (!prefixesTaken.contains(prefix)) {
						break;
					}
				}
				// System.out.println(prefix + "=" + word);
				prefixesTaken.add(prefix);
				prefixesTaken.add(word);
				keys += prefix.length();
			}
			System.out.println(keys);
			pw.println(keys);
		}
		pw.close();
	}

	private static int readInt() throws IOException {
		return Integer.parseInt(nextToken());
	}

	private static String nextToken() throws IOException {
		while (st == null || !st.hasMoreTokens()) {
			if (!br.ready()) {
				pw.close();
				System.exit(0);
			}
			st = new StringTokenizer(br.readLine().trim());
		}
		return st.nextToken();
	}

}
