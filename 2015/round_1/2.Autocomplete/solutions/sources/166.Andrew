import java.io.*;
import java.util.StringTokenizer;

public class B {
    final int MAX = 1_000_000;

    public void run() throws IOException {
        in = new FastScanner(new FileInputStream("autocomplete.txt"));
        out = new PrintWriter(new FileOutputStream("autocomplete.out"));

        int testNo = in.nextInt();
        for (int test = 1; test <= testNo; test++) {
            int[][] next = new int[MAX + 2][26];
            int[] cnt = new int[MAX + 2];
            int np = 1;

            int n = in.nextInt();
            int res = 0;
            for (int i = 0; i < n; i++) {
                String s = in.next();
                int cur = 0;
                for (int j = 0; j < s.length(); j++) {
                    cnt[cur]++;
                    int c = s.charAt(j) - 'a';
                    if (next[cur][c] == 0) {
                        next[cur][c] = np;
                        np++;
                    }
                    cur = next[cur][c];
                }
                cnt[cur]++;
                cur = 0;
                int j = 0;
                while ((cur == 0 || cnt[cur] > 1) && j < s.length()) {
                    int c = s.charAt(j) - 'a';
                    j++;
                    cur = next[cur][c];
                    res++;
                }
            }

            out.printf("Case #%d: %d\n", test, res);
        }

        out.close();
    }

    FastScanner in;
    PrintWriter out;

    public static void main(String[] args) throws IOException {
        new B().run();
    }

    static class FastScanner {
        BufferedReader br;
        StringTokenizer st;

        FastScanner(InputStream in) throws IOException {
            br = new BufferedReader(new InputStreamReader(in));
        }

        String next() {
            try {
                while (st == null || !st.hasMoreTokens()) {
                    st = new StringTokenizer(br.readLine());
                }
            } catch (IOException e) {
                System.err.println(e);
                System.exit(1);
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }
    }
}