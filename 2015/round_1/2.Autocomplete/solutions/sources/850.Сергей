#!/usr/bin/pypy3

class Bor:
    def __init__(self):
        self.cnt = 0
        self.nexts = {}
    def get(self, c):
        if c not in self.nexts:
            self.nexts[c] = Bor()
        return self.nexts[c]

def solve():
    n = int(input())
    words = [input().strip() for _ in range(n)]
    b = Bor()
    res = 0
    for word in words:
        b2 = b
        best_cnt = len(word)
        for i, c in enumerate(word):
            b2 = b2.get(c)
            if b2.cnt == 0:
                best_cnt = min(best_cnt, i+1)
            b2.cnt += 1
        res += best_cnt
    return res

def main():
    T = int(input())
    for t in range(T):
        print ("Case #%d: %s" % (t+1, solve()))

if __name__ == "__main__":
    main()
