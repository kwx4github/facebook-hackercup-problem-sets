#include<bits/stdc++.h>

using namespace std;

typedef struct trie
{
	char c;
	struct trie *alp[26];
}trie;

trie* INIT(char c)
{
	int i;
	trie *T = (trie*)malloc(sizeof(trie));
	T->c = c;
	for(i=0;i<26;i++) 
	{
	    T->alp[i] = NULL;
	}
	return T;
}

int ADD(trie *T, char *s)
{
	int len = strlen(s),i,count=0;
	for(i=0;i<len;i++) 
	{
		if(T->alp[s[i]-'a'] == NULL) 
		{
		    T->alp[s[i]-'a'] = INIT(s[i]);
		    T = T->alp[s[i]-'a'];
		}
		else 
		{
		    count++;
		    T = T->alp[s[i]-'a'];
		}
	}
	return count==len?len:count+1;
}


int main()
{
	int n,t,T,i,count;
	char s[1000006];
	cin>>T;
	for(t=1;t<=T;t++) 
	{
		trie *T = INIT('\0');
		scanf("%d",&n);
		count = 0;
		for(i=0;i<n;i++) 
		{
			scanf("%s",s);
			count += ADD(T, s);
		}
		printf("Case #%d: %d\n",t,count);
	}
	return 0;
}


