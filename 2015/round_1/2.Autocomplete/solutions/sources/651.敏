#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
const int N = 1000001;
struct Trie{
    int ch[N][28];
    int sz;
    void init(){sz = 1;memset(ch[0],0,sizeof(ch[0]));}
    int idx(char c){
        return c - 'a';
    }
}trie;

int ins(char *s){
    int u = 0, n = strlen(s);
    int f = 0;
    for(int i = 0;i<n;i++){
        int c = trie.idx(s[i]);
        if(!trie.ch[u][c]){
            memset(trie.ch[trie.sz],0,sizeof(trie.ch[trie.sz]));
            trie.ch[u][c] = trie.sz++;
            if(!f)
                f = i + 1;
        }
        u = trie.ch[u][c];
    }
    if(!f)
        f = n;
    return f;
}
char ch[1000010];
int main(){
    int T;
    freopen("autocomplete.txt","r",stdin);
    freopen("out.txt","w",stdout);
    cin>>T;
    int cas = 1;
    while(T--){
        printf("Case #%d: ",cas++);
        int n,ans = 0;
        cin>>n;
        trie.init();
        for(int i = 0;i<n;i++){
            cin>>ch;
            ans += ins(ch);
        }
        cout<<ans<<endl;
    }
}
