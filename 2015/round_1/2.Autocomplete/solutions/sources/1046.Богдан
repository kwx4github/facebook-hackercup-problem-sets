import java.io.*;
import java.util.*;

public class Main {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(System.out, true);
    static StringTokenizer st;

    public static void main(String[] args) throws Exception {
        int T = nextInt();
        for(int t = 1;t <= T;t++) {
            int n = nextInt();
            Trie trie = new Trie();
            long res = 0;
            for(int i = 0;i < n;i++) {
                String s = nextToken();
                res += trie.add(s);
            }
            out.println("Case #" + t + ": " + res);
        }
    }

    public static int nextInt() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Integer.parseInt(st.nextToken());
    }

    public static long nextLong() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Long.parseLong(st.nextToken());
    }

    public static double nextDouble() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Double.parseDouble(st.nextToken());
    }

    public static String nextToken() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return st.nextToken();
    }

    public static class Trie {
        TrieVertex root = new TrieVertex();

        public int add(String s) {
            TrieVertex curr = root;
            int minPref = s.length();
            for(int i = 0;i < s.length();i++) {
                if(curr.next[s.charAt(i)-'a'] == null) {
                    minPref = Math.min(minPref, i + 1);
                    curr.next[s.charAt(i)-'a'] = new TrieVertex();
                }
                curr = curr.next[s.charAt(i)-'a'];
            }
            return minPref;
        }

        static class TrieVertex {
            TrieVertex[] next = new TrieVertex[26];
        }

    }

}