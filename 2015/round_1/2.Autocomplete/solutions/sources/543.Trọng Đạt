uses math;
const
  fi='autocomplete.txt';
  fo='out.txt';
  maxn=trunc(1e5)+10;
  maxl=trunc(1e6)+100;

var
  f,g:text;
  test,time,size,n:longint;
  a:array[0..maxn] of ansistring;
  trie:array[0..maxl,'a'..'z'] of longint;
  value:array[0..maxl] of longint;

procedure nhap;
var
  i,j:longint;
begin
  readln(f,n);
  for i:=1 to n do
    readln(f,a[i]);
end;

procedure them(s:ansistring);
var
  i,j,temp:longint;
begin
  temp:=0;
  for i:=1 to length(s) do
    begin
    if trie[temp][ s[i] ]=0 then
      begin
        inc(size);
        trie[temp][ s[i] ]:=size;
        temp:=size;
      end else temp:=trie[temp][ s[i] ];
    inc(value[temp]);
    end;
end;
function find(s:ansistring):longint;
var
  i,j,temp:longint;
begin
  temp:=0;
  for i:=1 to length(s) do
    begin
      temp:=trie[temp][ s[i] ];
      if value[temp]=1 then exit(i);
    end;
  exit(length(s));
end;



procedure solve;
var
  i,j,res:longint;
begin
  size:=0;
  fillchar(trie,sizeof(trie),0);
  fillchar(value,sizeof(value),0);
  res:=0;
  for i:=1 to n do
    begin
      them(a[i]);
      res:=res+find(a[i]);
    end;
  writeln(g,'Case # ',time,': ',res);
end;


begin
  assign(f,fi);reset(f);
  assign(g,fo);rewrite(g);
  readln(f,test);
  for time:=1 to test do
    begin
      nhap;
      solve;
    end;
  close(f);close(g);
end.
