#include "stdafx.h"

#include <stdio.h>
#include <string.h>
#include <set>
#include <string>

using namespace std;

static int min_typed(const string &neighbor, const string &inserted)
{
    int len = min(neighbor.size(), inserted.size());
    for (int i = 0; i < len; ++i)
        if (neighbor[i] != inserted[i])
            return i + 1;
    return inserted.size() < neighbor.size() ? inserted.size() : neighbor.size() + 1;
}

void autocomplete()
{
    int T, N;
    static char in_buffer[1000010];
    string empty;
    scanf("%d", &T);
    for (int t = 1; t <= T; ++t)
    {
        set<string> dictionary;
        scanf("%d\n", &N);
        int S = 0;
        for (int n = 0; n < N; ++n)
        {
            gets(in_buffer);
            string word = in_buffer;
            auto inserted = dictionary.insert(word).first;
            auto prev = inserted, next = inserted;
            if (prev == dictionary.begin())
                prev = dictionary.end();
            else
                --prev;
            ++next;
            const string &prev_word = prev != dictionary.end() ? *prev : empty;
            const string &next_word = next != dictionary.end() ? *next : empty;
            S += max(min_typed(prev_word, word), min_typed(next_word, word));
        }
        printf("Case #%d: %d\n", t, S);
    }
}

#ifndef DEV_MODE
int main(int argc, char* argv[])
{
    autocomplete();
    return 0;
}
#endif
