#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<cstring>
#include<map>
#include<cmath>
#include<string>
#include <cstdlib>
#include <iomanip>
#include <ctime>
#include <set>

using namespace std;

string s;
struct node{
    char c;
    struct node *next[26];
};

struct node* head;
node * create(char c){
    node * ret = new node();
    ret->c=c;
    for(int i=0;i<26;i++){
        ret->next[i] = NULL;
    }
    return ret;
}
int insert(string s){
    int l = s.length();
    int ret=1;
    node * cur = head;
    for(int i=0;i<l;i++){
        char c = s[i];
        int indx = c-'a';
        if(cur->next[indx]){
            cur = cur->next[indx];
            ret++;
        }
        else{
            cur = cur->next[indx] = create(c);
        }
    }
    return min(ret,l);
}
void cleanup(node * cur){
    for(int i=0;i<26;i++){
        if(cur->next[i])
            cleanup(cur->next[i]);
    }
    delete cur;
}
int main()
{
//    freopen ("autocomplete.txt","r",stdin);
//    freopen ("output.txt","w",stdout);
    int t,T,n;
    cin>>T;
    for(t=1; t<=T; t++){
        head = create(0);
        int ans=0;
        cin>>n;
        for(int i=0;i<n;i++){
            cin>>s;
            ans += insert(s);
        }
        cout<<"Case #"<<t<<": "<<ans<<endl;
//        cleanup(head);
    }

    return 0;
}
