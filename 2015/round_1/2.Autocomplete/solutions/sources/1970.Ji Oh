package fhc2015.r1;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Scanner;

public class B {

	public static void main(String[] args) throws Exception {
		String DIR = "src/fhc2015/r1/";
		String READ_FILE = null;
		String WRITE_FILE = null;

		      READ_FILE = "b.in";
		      WRITE_FILE = "b.out";

		if(READ_FILE != null){
			System.setIn(new BufferedInputStream(new FileInputStream(new File(DIR+READ_FILE))));
		}
		if(WRITE_FILE != null){
			System.setOut(new PrintStream(new File(DIR+WRITE_FILE)));
		}
		precalc();
		new B().run();
	}

	boolean DEBUG = false;
	Scanner sc;
	static void precalc(){}

	void run(){
		sc = new Scanner(System.in);
		int caseCnt = sc.nextInt();
		for (int caseNum = 1; caseNum <= caseCnt; caseNum++) {
			System.out.print("Case #" + caseNum + ": ");
			solve();
			System.out.flush();
		}
	}
	void debug(Object... o){
		if (DEBUG) System.out.println(Arrays.deepToString(o));
	}

	public static class Trie {
		TrieNode root = new TrieNode();
		
		public void add(String str) {
			TrieNode node = root;
			
			for (int i = 0 ; i < str.length() ; i++) {
				int c = str.charAt(i) - 'a';
				if (node.children == null) {
					node.children = new TrieNode[26];
				}
				if (node.children[c] == null) {
					node.children[c] = new TrieNode();
				}
				node = node.children[c];
				node.cnt++;
//				System.out.println(node.cnt);
			}
		}
		
		public int get(String str) {
			TrieNode node = root;
			for (int i = 0 ; i < str.length() ; i++) {
				int c = str.charAt(i) - 'a';
				node = node.children[c];
				if (node.cnt == 1) {
					return i + 1;
				}
			}
			return str.length();
		}
	}
	
	public static class TrieNode {
		TrieNode[] children;
		int cnt;
		public TrieNode() {
			children = null;
			cnt = 0;
		}
	}
	
	void solve(){
		Trie trie = new Trie();
		int n = sc.nextInt();
		int total = 0;
		for (int i = 0 ; i < n ; i++) {
			String str = sc.next();
			trie.add(str);
			total += trie.get(str);
		}
		System.out.println(total);
	}
	

}
/**
5
5
hi
hello
lol
hills
hill
5
a
aa
aaa
aaaa
aaaaa
5
aaaaa
aaaa
aaa
aa
a
6
to
be
or
not
two
bee
3
having
fun
yet
Case #1: 11
Case #2: 15
Case #3: 11
Case #4: 9
Case #5: 3
 */
