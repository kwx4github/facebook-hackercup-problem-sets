/////////////////////////////////////////
//  Author : Akshay Jaggi             //
///////////////////////////////////////

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<utility>
#include<queue>
#include<stack>
#include<string>
#include<cstring>
#include<map>
#define rep(i,N) for(int (i)=0;(i)<(N);(i)++)
#define repi(i,j,N) for(int (i)=(j);(i)<(N);(i)++)
#define repg(i,j,N) for((i)=(j);(i)<(N);(i)++)
#define si(i) scanf("%d",&(i))
#define sl(i) scanf("%lld",&(i))
#define pi(i) printf("%d",(i))
#define pl(i) printf("%lld",(i))
#define pin(i) printf("%d\n",(i))
#define pln(i) printf("%lld\n",(i))
#define pw    printf(" ");
#define pn    printf("\n");

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii; 
#define sz(a) int((a).size()) 
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 

int cnt;

class SUF
{
	public:
		SUF *cont[27];
		string my_part;
		SUF(string part)
		{
			my_part=part;
			for(int i=0;i<27;i++)
			{
				cont[i]=nullptr;
			}
		}
		void del()
		{
			for(int i=0;i<27;i++)
			{
				if(cont[i]!=nullptr)
				{
					cont[i]->del();
					delete cont[i];
					cont[i]=nullptr;
				}
			}
			my_part="";
		}
		int insert(string p)
		{
			int i=0;
			while(i<p.length() && i<my_part.length() && p[i]==my_part[i]) i++;
			if(i==p.length() && i==my_part.length())
				return 1;
			if(i==my_part.length())
			{
				if(cont[p[i]-'a']!=nullptr)
					return i + cont[p[i]-'a']->insert(p.substr(i));
				else
				{
					cont[p[i]-'a'] = new SUF(p.substr(i));
					return i + 1;
				}
			}
			SUF *tmp = new SUF(my_part.substr(i));
			for(int i=0;i<27;i++)
			{
				tmp->cont[i]=cont[i];
				cont[i]=nullptr;
			}
			cont[my_part[i]-'a'] = tmp;
			my_part = my_part.substr(0,i);
			if(i!=p.length())
			{
				cont[p[i]-'a']= new SUF(p.substr(i));
				return i + 1;
			}
			return i;
		}
};

SUF aks("");

int main()
{
	ios_base::sync_with_stdio(false);
	int T;
	cin>>T;
	rep(t,T)
	{
		int N;
		cin>>N;
		cnt=0;
		aks.del();
		rep(i,N)
		{
			string tmp;
			cin>>tmp;
			cnt+=aks.insert(tmp);
		}
		cout<<"Case #"<<t+1<<": "<<cnt<<endl;
	}
  return 0;
}

