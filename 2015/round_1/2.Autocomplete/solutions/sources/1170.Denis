#include <stdlib.h>
#include <stdio.h>
#include <string>
#include <math.h>
#include <fstream>
#include <iostream>
#include <vector>
#include <deque>
#include <map>
#include <set>
#include <list>
#include <cstdlib>
#include <time.h>
#include <algorithm>
using namespace std;

//2015 Hacker Cup Round 1, Autocomplete
//facebook.com/hackercup/problems.php?round=1437956993099239
//Disable warning messages C4996.
#pragma warning(disable:4996)

#define INPUT_FROM 0
#if INPUT_FROM
#define fromc from
#else
#define fromc cin
#endif


const int qmax=26;

typedef struct item * pitem;
struct item{
	pitem next[qmax];
};

/*const int MAXN = 25;

typedef struct item * pitem;
struct item{
	int k, h, t;
	char buf[MAXN];
};

bool pr(pitem p0, pitem p1){
        if(p0->k == p1->k) return p0->h > p1->h;
        return p0->k > p1->k;
}

bool pr0(pitem p0, pitem p1){
        if(p0->t == p1->t) return pr(p0, p1);
        return p0->t < p1->t;
}*/

//bool pr1(pitem p0, pitem p1){
//        if(p0->t == p1->t) return pr(p1, p0);
//        return p0->t > p1->t;
//}
//long long fr(vector<long long>&, long long);

int main(int argc, char **argv)
{
	//ifstream from;
	const int nmin = 1, nmax = 1000000, kmax = 1000000;
	int cases, n, m, mt, res, rt, i, j, k, t, ax, bx;
	int i0, i1, j0, j1, q, r, a, c;
	int x;
	//char ch, ch0;
	//string sres[2]={"NO", "YES"};
	string s, st, s0, s1;
	//long double dt;

	//if(INPUT_FROM) from.open("test.txt");
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);

	//static int v[nmax];
	//vector<int> v, v0, v1;
	//vector<string> vs;
	//deque<vector<long long> > dq;
	//typedef map<string, long long>::const_iterator CI;
	pitem root, p0, p1, p2, pt0, pt1, pt, pMemory;
	//vector<pitem> vp, vp0, vp1;

	/*cout << 1 << endl;
	cout << 1413 << endl;
	for(int i=0;i<1413;++i){
		for(int j=0;j<=i;++j) cout << 'a';
		cout << endl;
	}
	return 0;*/

	pMemory = pt = (pitem)calloc(nmax + 2, sizeof(item));

	//fromc>>cases;
	scanf("%d\n", &cases);
	//ch = fgetc(stdin);
	for(int test=1;test<=cases;++test){
		//fromc>>n>>m>>p;
		scanf("%d\n", &n);

		pt = pMemory;
		++pt;
		r = 0;
		for(int i=0;i<n;++i){
			cin >> s;
			int mt = s.size();
			p0 = pMemory;
			int ax = 1;
			for(int j=0;j<mt;++j){
				int q = s[j] - 'a';
				if(ax == 1){
					++r;
					if(!p0->next[q]) p0->next[q] = pt++, ax = 0;
				}else p0->next[q] = pt++;
				p0 = p0->next[q];
			}
			s.clear();
		}
		
		cout<<"Case #"<<test<<": "<<r<<endl;

		//set to 0 pMemory
		p0 = pMemory;
		while(p0 != pt){
			memset(p0, 0, sizeof(item));
			++p0;
		}
	}

	free(pMemory);

	return 0;
}