#pragma comment(linker, "/stack:32000000")
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <cmath>
#include <sstream>
#include <stack>
#include <cassert>
#include <string.h>
#include <ctime>

#define pb push_back
#define mp make_pair
#define PI 3.1415926535897932384626433832795
#define sqr(x) (x)*(x)
#define forn(i, n) for(int i = 0; i < n; ++i)
#define ALL(x) x.begin(), x.end()
#define sz(x) int((x).size())
#define X first
#define Y second
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
using namespace std;
typedef pair<int,int> pii;
const int INF = 2147483647;
const ll LLINF = 9223372036854775807LL;

struct node {
	int to[30];
	node() {
		memset(to,-1,sizeof(to));
	}
};

vector<node> t;

int addstring(const string& s) {
	int cur = 0;
	int ans = 0;
	forn(i, sz(s)) {
		int ch = s[i]-'a';
		if (t[cur].to[ch] == -1) {
			t[cur].to[ch] = sz(t);
			t.pb(node());
		} else ans++;
		cur = t[cur].to[ch];
	}
	if (ans != sz(s)) ++ans;
	return ans;
}

void solve() {
	t.clear();
	t.pb(node());
	int n; scanf("%d", &n);
	int ans = 0;
	forn(i, n) {
		string cur; cin >> cur;
		ans += addstring(cur);
	}
	printf("%d\n", ans);
}

int main()
{
//#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
//#endif
	int T; scanf("%d", &T); for (int tn = 1; tn <= T; ++tn) {
		cerr << tn << "\n";
		printf("Case #%d: ", tn);
		solve();
	}
	return 0;
}