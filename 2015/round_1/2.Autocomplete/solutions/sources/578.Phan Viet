//============================================================================
// Author	   : LAM PHAN VIET - lamphanviet@gmail.com
//============================================================================
#include <bits/stdc++.h>
using namespace std;

#define fr(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define rep(i,n) for (int i = 0, _n = (n); i < _n; i++)
#define repr(i,n) for (int i = (n) - 1; i >= 0; i--)
#define foreach(it, ar) for ( typeof(ar.begin()) it = ar.begin(); it != ar.end(); it++ )
#define fill(ar, val) memset(ar, val, sizeof(ar))

#define uint64 unsigned long long
#define int64 long long
#define all(ar) ar.begin(), ar.end()
#define pb push_back
#define mp make_pair
#define ff first
#define ss second

#define BIT(n) (1<<(n))
#define sqr(x) ((x) * (x))

typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<ii> vii;
typedef vector<int> vi;

#define PI	3.1415926535897932385
#define EPS	1e-7
#define MOD	1000000007
#define INF	2000111222
#define MAX	1000111

struct Node {
	int next[26];
	Node() { fill(next, -1); }
};
char s[MAX];
vector<Node> nodes;

int process() {
	bool ok = false;
	int n = strlen(s), id = 0, res = 0;
	rep(i, n) {
		int c = s[i] - 'a';
		if (!ok) res++;
		if (nodes[id].next[c] < 0) {
			nodes.pb(Node());
			int nextId = nodes.size() - 1;
			nodes[id].next[c] = nextId;
			ok = true;
		}
		id = nodes[id].next[c];
	}
	return res;
}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("autocomplete.txt", "r", stdin);
		freopen("test.out", "w", stdout);
	#endif
	int cases, caseNo = 0, n;
	for (scanf("%d", &cases); cases--; ) {
		scanf("%d", &n);
		nodes.clear();
		nodes.pb(Node());
		int res = 0;
		rep(i, n) {
			scanf(" %s ", s);
			res += process();
		}
		printf("Case #%d: %d\n", ++caseNo, res);
	}
	return 0;
}
