#include <algorithm>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <vector>
using namespace std;

int tree[1000050][26];
int T,N,cnt,ans;
char str[1000050];

int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("out.txt","w",stdout);
    cin>>T;
    for(int ca=1;ca<=T;ca++)
    {
        memset(tree,0,sizeof(tree));
        cnt=0;
        ans=0;
        cin>>N;
        for(int i=0;i<N;i++)
        {
            scanf("%s",str);
            int l=strlen(str);
            int pos=0;
            bool flag=false;
            for(int j=0;j<l;j++)
            {
                int t=str[j]-'a';
                if(!flag)
                {
                    if(tree[pos][t]==0)
                    {
                        flag=true;
                        ans+=(j+1);
                        cnt++;
                        tree[pos][t]=cnt;
                        pos=cnt;
                    }
                    else
                    {
                        pos=tree[pos][t];
                    }
                }
                else
                {
                    cnt++;
                    tree[pos][t]=cnt;
                    pos=cnt;
                }
            }
            if(!flag) ans+=l;
        }
        cout<<"Case #"<<ca<<": "<<ans<<endl;
    }
    return 0;
}
