#include <cstdio>
#include <iostream>
#include <string>
#define index(c) ((c)-'a')

using namespace std;
const int size = 26;
int t,n,ans;
string s;
class trie
{


    struct node
    {
        bool isleaf;
        node *children[size];
        node(): isleaf(0)
        {
            for (int i = 0;i<size;i++)
                children[i] = 0;
        }
    }*root;

    bool free(node *n)
    {
        for (int i = 0;i<size;i++)
            if (n->children[i]!=0) return true;
        return false;
    }

    bool del(const string& s, node *n, int level)
    {
        if (n!=0)
        {
            if (level == s.size())
            {
                if (n->isleaf)
                {
                    n->isleaf = 0;
                    return free(n);
                }
            }
        }
        else
        {
            int idx = index(s[level]);
            if (del(s,n->children[idx],level+1))
            {
                delete n->children[idx];
                return !n->isleaf && free(n);
            }
        }
        return false;
    }

public:
    trie() {root = new node();}
    void insert(const string& s)
    {
        node *n = root;
        for (int level = 0;level<s.size();level++)
        {
            int idx = index(s[level]);
            if (n->children[idx] != 0)
            {
                n = n->children[idx];
            }
            else
            {
                n -> children[idx] = new node();
                n = n->children[idx];
            }
        }
        n->isleaf = 1;
    }
    int exists(const string& s)
    {
        node *n = root;
        for (int level = 0;level<s.size();level++)
        {
            int idx = index(s[level]);
            if (n->children[idx] == 0) return level;
            n = n->children[idx];
        }
        return -1;
    }
    bool remove(const string& s)
    {
        return del(s,root,0);
    }
};

int main()
{
    freopen("/Users/Way/Documents/facebook\ tests.txt","r",stdin);
    freopen("/Users/Way/Documents/facebook\ out.txt","w",stdout);
    scanf("%d",&t);
    for (int zz = 1;zz<=t;zz++)
    {
        trie T;
        ans = 0;
        scanf("%d",&n);
        for (int i = 0;i<n;i++)
        {
            cin>>s;
            int cool = T.exists(s)+1;
            //cout<<cool<<endl;
            if (!cool) cool = s.size();
            ans+=cool;
            
            T.insert(s);
        }
        printf("Case #%d: %d\n",zz,ans);
    }
}
