#include <iostream>
#include <cstdio>
#include <cstring>
#include <set>
#include <algorithm>
using namespace std ;

const int MAXN = 1000009 ;

int N , tot , ans ;
int A[MAXN][26] , Cnt[MAXN] ;
string suf ;

set<string> SetS ;

void CLEAR(int i) {
    Cnt[i] = 0 ;
    for ( int j = 0 ; j < 26 ; j ++ ) A[i][j] = -1 ;
}

void INSERT(string s) {
    Cnt[1] ++ ;
    int x = 1 ;
    for ( int i = 0 ; i < s.size() ; i ++ ) {
        if ( A[x][s[i]-'a'] == -1 ) {
            A[x][s[i]-'a'] = ++ tot ;
            CLEAR(tot) ;
        }
        x = A[x][s[i]-'a'] ;
        Cnt[x] ++ ;
    }
}

int Gao(string s) {
    int x = 1 , ret = 0 ;
    for ( int i = 0 ; i < s.size() ; i ++ ) {
        x = A[x][s[i]-'a'] ;
        ret ++ ;
        if ( Cnt[x] == 1 ) return ret ;
    }
    return ret ;
}

int Init() {
    tot = 1 ; CLEAR(1) ; SetS.clear() ;
    cin >> N ;
    ans = 0 ;
    for ( int i = 1 ; i <= N ; i ++ ) {
        cin >> suf ;
        if ( SetS.find(suf) == SetS.end() ) {
            SetS.insert(suf) ;
            INSERT(suf) ;
        }
        ans += Gao(suf) ;
    }
    return ans ;
}

int main() {
    freopen("B.in" , "r" , stdin) ;
    freopen("B.out", "w" ,stdout) ;
    
    int Test ; cin >> Test ;
    for ( int i = 1 ; i <= Test ; i ++ )
        cout << "Case #" << i << ": " << Init() << "\n" ;
}
