#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>

#include<iomanip>
#include<cstring>
#include<sstream>

#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;

#define PB push_back
#define MP make_pair
#define FF first
#define SS second
struct node{
	struct node *ptr[26];
	node()
		{
		for(int i=0;i<26;i++)
			ptr[i]=0;
		}
};
void garbage(node *x)
	{
	queue<node *> q;
	q.push(x);
	while(q.empty())
		{
		x=q.front();
		for(int i=0;i<26;i++)
			{
			if(x->ptr[i])
				q.push(x->ptr[i]);
			}
		free(x);
		}
	return;
	}
int main()
{
freopen("auto.in","r",stdin);
freopen("auto.out","w",stdout);
int T;
int i,j,k;
string x;
//scanf("%d",&T);
cin>>T;
int N;
for(int t=0;t<T;t++)
	{
	printf("Case #%d: ",t+1);
	node *head=new node;
	node *cur;
	cin>>N;
	int ans=0;
	while(N--)
		{
		cin>>x;
		cur=head;
		ans++;
		int f=1;
		for(i=0;x[i];i++)
			{
			if(cur->ptr[x[i]-'a']==0)
				{
				cur->ptr[x[i]-'a']=new node;
				f=0;
				}
			else
				ans++;
			cur=cur->ptr[x[i]-'a'];
			}
		ans-=f;
		}
	garbage(head);
	printf("%d\n",ans);
	}
return 0;
}
