#include <bits/stdc++.h>
using namespace std;

#define INF 2000000000
#define MOD 1000000007

typedef long long LL;
typedef pair<int, int> ii;

const int N = 100005;
string str[N];

struct trie {
  trie* child[26];
  int sz;
  trie() {
    memset(child, 0, sizeof child);
    sz = 0;
  }
  void insert(const string& s) {
    int p;
    trie* tr = this;
    for(int i = 0; i < s.size(); i++) {
      p = s[i] - 'a';
      tr->sz++;
      if(tr->child[p] == NULL) tr->child[p] = new trie();
      tr = tr->child[p];
    }
    tr->sz++;
  }
  int cnt(const string& s) {
    int p, ans = 0;
    trie* tr = this;
    for(int i = 0; i < s.size() && tr->sz > 1; i++) {
      p = s[i] - 'a';
      if(tr->child[p] == NULL) return -1;
      ans++;
      tr = tr->child[p];
    }
    if(!ans) ans++;     // prefix to be typed must be non empty
    return ans;
  }
};

int main() {
  ios_base::sync_with_stdio(0); cin.tie(NULL);
  int T; cin >> T;
  for(int qq = 1; qq <= T; qq++) {
    cout << "Case #" << qq << ": ";
    int n, ans = 0, t;  
    cin >> n;
    trie tr;
    for(int i = 0; i < n; i++) {
      cin >> str[i];
      tr.insert(str[i]);
      t = tr.cnt(str[i]);
      ans += t;
    }
    cout << ans << "\n";
  }

  return 0;
}
