#include <string.h>
#include <string>
#include <stdio.h>
#include <iostream>
#include <map>
#include <set>
#include <bitset>
#include <vector>
#include <algorithm>
#include <math.h>
 
#define N 1000005

using namespace std;

char s[N];
 
struct dict {
    int cnt, nch;
    dict *child[26];
 
    dict() {
        cnt = nch = 0;
        memset( child, 0, sizeof( child ) );
    }
};
 
dict *T = new dict;
 
void insert( dict *nod, char *s ) {
	int c = *s;
	
    if (*s == '\0') {
        nod->cnt ++; return;
    }
 
    if (nod->child[c - 'a'] == 0) {
        nod->child[c - 'a'] = new dict;
        nod->nch ++;
    }
    insert( nod->child[c - 'a'], s+1 );
}
  
int prefix( dict *nod, char *s, int k ) {
	int c = *s;
	
    if (*s == '\0' || nod->child[c - 'a'] == 0 )
        return k;
   // printf("%c", *s);
    return prefix( nod->child[c - 'a'], s+1, k+1 );
}
 
int main() {
    
	int i, n, t, tst, ma, mi, x, f, a, b, j, k, p;
	
   	scanf("%d", &tst);
	
	for (t = 0; t < tst; t++) {
		scanf("%d", &n);
		x = 0;
		dict *T = new dict;
			
		for (i = 0; i < n; i++) {
			scanf("%s", s);
			ma = strlen(s);
			//printf("orig %d\n", ma);
			p = prefix(T, s, 0);
			
			x += min(p + 1, ma);
			//printf("\n%d\n",p);
			insert(T, s);
			
		}
		
		printf("Case #%d: %d\n",t+1, x);
		
	}	
	return 0;
	
}
