//
//  round1_2.cpp
//  FHC
//
//  Created by jie zheng on 15/1/18.
//  Copyright (c) 2015å¹´ jie zheng. All rights reserved.
//

#include <stdio.h>
#include <iostream>
#include <queue>
#include <set>
#include <vector>
#include <math.h>

using namespace std;

struct Trie{
    int c[26];
};

Trie tarr[1000005];
int main()
{
    freopen("/Users/jiezheng/Downloads/autocomplete.txt", "r", stdin);
    freopen("/Users/jiezheng/Dev/poj/autocompleteres.txt", "w", stdout);
    int T, N;
    cin>>T;
    for(int caseid = 1; caseid <= T; ++caseid)
    {
        cin>>N;
        long long ans = 0;
        memset(tarr, 0, sizeof(tarr));
        string word;
        int curmaxidx = 0;
        for(int i = 0; i < N; ++i)
        {
            cin>>word;
            int cidx = 0;
            bool flag = true;
            for(int j = 0; j < word.size(); ++j)
            {
                if(flag)
                    ans++;
                int idx = word[j] - 'a';
                if(tarr[cidx].c[idx] == 0)
                {
                    tarr[cidx].c[idx] = curmaxidx+1;
                    curmaxidx++;
                    flag = false;
                }
        
                cidx = tarr[cidx].c[idx];
    
            }
        }
        cout<<"Case #"<<caseid<<": "<<ans<<endl;
    }
    return 0;
}