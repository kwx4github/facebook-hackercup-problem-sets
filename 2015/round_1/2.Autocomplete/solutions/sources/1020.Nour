#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define pb push_back
#define mp make_pair


typedef long long ll;
using namespace std;

struct node {
	char l;
	node* child[30];
	node() {
		memset(child, 0, sizeof child);
	}
};

node* root;

int add(string s) {
	node* curr = root;
	int ret = s.size();
	for(int i = 0; i < s.size(); i++) {
		if(curr->child[s[i] - 'a'] == 0) {
			ret = min(ret, i + 1);
			curr->child[s[i] - 'a'] = new node();
		}
		curr = curr->child[s[i] - 'a'];
	}

	return ret;
}

void destroy(node* curr) {
	for(int i = 0; i < 30; i++) if(curr->child[i] != 0) destroy(curr->child[i]);
	delete curr;
}

int main() {
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);

	int t;
	cin >> t;
	for(int tc = 1; tc <= t; tc++) {
		root = new node();
		int n;
		cin >> n;
		int res = 0;
		while(n--) {
			string s;
			cin >> s;
			res += add(s);
		}

		cout << "Case #" << tc << ": " << res << endl;
		//destroy(root);
	}
	return 0;
}
