#include <bits/stdc++.h>
using namespace std;

vector< vector<char> > child;
vector< vector<int> > nodes;
vector<bool> isword ;

int addnode(){
    child.push_back(vector<char>());
    nodes.push_back(vector<int>(26,-1));
    isword.push_back(0);
    return isword.size() - 1;
}

void init(){
    child.clear();
    nodes.clear();
    isword.clear();
    addnode();
}
char s[1000009];
int z ;
int insert(){
    int cur = 0 ;
    int x = 0 ;
    int f = 1 ;
    for(int i = 0 ; i < z  ;i++){
        if(nodes[cur][s[i]-'a'] == -1){
            if(f)
                x++;
            f = 0 ;
            int t = addnode();
            nodes[cur][ s[i]-'a' ] = t ;
            child[cur].push_back(s[i]);
        }else {
            x++;
        }
        cur = nodes[cur][s[i]-'a'];
    }
    isword[cur] = 1 ;
    return x;
}
int main(){
    freopen("autocomplete.txt", "rt", stdin);
    freopen("Autocompleteout.txt", "wt", stdout);
    int n , k ;
    int t , cas =  0 ;
    scanf("%d",&t);
    while(t--){
        init();
        scanf("%d",&n);
        int sum = 0;
        for(int i = 0 ; i < n ; i++){
            scanf("%s",s);
            z = strlen(s);
            sum+= insert();
        }
        printf("Case #%d: %d\n",++cas,sum);
    }
}
