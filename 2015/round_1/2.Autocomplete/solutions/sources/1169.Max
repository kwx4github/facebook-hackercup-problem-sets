package roundone2015;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;

public class Autocomplete {
	static boolean reverse = false;
	public static void main(String[] args) throws NumberFormatException, IOException {
		FileWriter writer = new FileWriter(
				"C:\\Users\\mchang\\workspace\\Facebook Hacker Cup\\src\\output.txt");
		String filename = "C:\\Users\\mchang\\workspace\\Facebook Hacker Cup\\src\\autocomplete.txt";
		long startTime = System.currentTimeMillis();
		try {
			BufferedReader br = new BufferedReader(new FileReader(filename));
			int numCases = Integer.parseInt(br.readLine());
			for (int caseNum = 1; caseNum <= numCases; caseNum++) {
				System.out.println("Processing Case: " + caseNum);
				long answer = 0;
				int numWords = Integer.parseInt(br.readLine());		
				ArrayList<String> ordered = new ArrayList<String>();
				for(int wordNumber = 0; wordNumber < numWords; wordNumber++){
					String word = br.readLine();
					if(ordered.isEmpty()){
						ordered.add(word);
						answer++;
					} else {
						int minIndex = 0;
						int maxIndex = ordered.size();
						while(maxIndex > minIndex){
							int midIndex = (maxIndex + minIndex)/2;
							if(ordered.get(midIndex).compareTo(word) < 0){
								minIndex = midIndex + 1;
							} else {
								maxIndex = midIndex;
							}
						}
						String left = "";
						String right = "";
						if(minIndex != 0){
							left = ordered.get(minIndex - 1);
						}
						if(minIndex != ordered.size()){
							right = ordered.get(minIndex);
						}
						boolean differLeft = false;
						boolean differRight = false;
						for(int i = 0; i < word.length(); i++){
							if(!differLeft){
								differLeft = (i >= left.length() || left.charAt(i) != word.charAt(i));
							}
							if(!differRight){
								differRight = (i >= right.length() || right.charAt(i) != word.charAt(i));
							}
							answer++;
							if(differLeft && differRight){
								break;
							}
						}
						ordered.add(minIndex, word);
					}
				}			
				printAnswer("" + answer, caseNum, writer);
			}
			br.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		writer.close();
		System.out.println(System.currentTimeMillis() - startTime);
	}

	public static void printAnswer(String answer, int caseNumber,
			FileWriter writer) throws IOException {
		writer.write("Case #" + caseNumber + ": " + answer + "\n");
	}

}
