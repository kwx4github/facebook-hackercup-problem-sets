import java.io.*;
import java.util.*;

class TrieNode {
	char content;
	int count;
	boolean isEnd;
	LinkedList<TrieNode> childList;
	public TrieNode(char c)
    {
        childList = new LinkedList<TrieNode>();
        content = c;
        count = 0;
        isEnd = false;
    }
    public TrieNode subNode(char c)
    {
        if (childList != null)
            for (TrieNode eachChild : childList)
                if (eachChild.content == c)
                    return eachChild;
        return null;
    }
}

class Trie {
	private TrieNode root;
	public Trie()
    {
        root = new TrieNode(' '); 
    }
    public int insert(String word)
    {
        if (search(word) == true) 
            return word.length();      
        TrieNode current = root;
        int count = 0;
        boolean valid = false;
        for (char ch : word.toCharArray() )
        {
            TrieNode child = current.subNode(ch);
            if (child != null) {
                current = child;
                count++;
			}
            else 
            {
				 valid = true;
                 current.childList.add(new TrieNode(ch));
                 current = current.subNode(ch);
            }
            current.count++;
        }
        if(valid) count++;
        current.isEnd = true;
        return count;
    }
    public boolean search(String word)
    {
        TrieNode current = root;  
        for (char ch : word.toCharArray() )
        {
            if (current.subNode(ch) == null)
                return false;
            else
                current = current.subNode(ch);
        }      
        return true;
    }
}
public class Solution {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int T = in.nextInt();
		int done = 1;
		while(done <=T) {
			int n = in.nextInt();
			Trie t = new Trie(); 
			long ans = 0;
			for(int i=0;i<n;i++) {
				String str = in.next();
				ans += t.insert(str);
			}
			System.out.println("Case #"+done+": "+ans);
			done++;
		}
	}
}
