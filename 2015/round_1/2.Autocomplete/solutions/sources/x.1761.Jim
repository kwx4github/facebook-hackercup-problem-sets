#include <cstdio>
#include <map>
#include <list>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <iostream>
#include <queue>

using namespace std;

int T, N;
int trie[10000005][28], top = 1, len;
bool use[10000005];
char in[10000005];
int s;

void add(int pos, int ind){
	if (trie[ind][in[pos] - 'a'] == -1) trie[ind][in[pos] - 'a'] = top++;
	if (len != pos) add(pos + 1, trie[ind][in[pos] - 'a']);
}

void cal(int pos, int ind){
	if (use[ind] == 0 || pos == len) {
		s = pos;
		if (use[ind]) s++;
		use[ind] = 1;
	}
	else cal(pos + 1, trie[ind][in[pos] - 'a']);
}

void mark(int pos, int ind){
	if (len == pos) use[ind] = 1;
	else mark(pos + 1, trie[ind][in[pos] - 'a']);
}

int main(){
	scanf("%d", &T);
	for (int t = 1; t <= T; t++){
		top = 1;
		int ans = 0;
		memset(trie, -1, sizeof(trie));
		memset(use, 0, sizeof(use));
		use[0] = 1;
		scanf("%d", &N);
		if (N == 1){
			scanf("%s", in);
			printf("Case #%d: %d\n", t, 1);
		}else{
		for (int i = 0; i < N; i++){
			scanf("%s", in);
			len = strlen(in);
			add(0, 0);
			cal(0, 0);
			mark(0, 0);
			ans += s;
		}
		printf("Case #%d: %d\n", t, ans);
		}
	}
	return 0;
}
