#include <algorithm>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <deque>
#include <vector>
#include <queue>
#include <stack>
#include <map>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("autocomplete.txt","r",stdin)
#define OUTPUT freopen("b.out","w",stdout)
#define FOR(i,l,r) for(int i=l;i<=r;i++)
#define REP(i,l,r) for(int i=l;i<r;i++)
#define FORD(i,l,r) for(int i=l;i>=r;i--)
#define REPD(i,l,r) for(int i=l;i>r;i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=2e9;
const int MOD=1e9+7;
const int M=1e6+10;

struct TNode{
    TNode *h[26];
    TNode(){
        FOR(i,0,25) h[i]=NULL;
    }
};
void DEL(TNode *x){
    REP(i,0,26) if (x->h[i]!=NULL) DEL(x->h[i]);
    delete(x);
}
int test,n;
char s[M];
int main(){
    INPUT;OUTPUT;
    scanf("%d",&test);
    FOR(t,1,test){
        TNode *root=new TNode;
        scanf("%d",&n);
        int ans=0;
        REP(j,0,n){
            scanf("\n%s",s);
            int m=strlen(s);
            TNode *cur=root;
            bool all=true;
            REP(i,0,m){
                int x=s[i]-'a';
                ans+=(cur->h[x]!=NULL);
                if (cur->h[x]==NULL) {
                    cur->h[x]=new TNode;
                    all=false;
                }
                cur=cur->h[x];
            }
            if (!all) ans++;
        }
        //DEL(root);
        printf("Case #%d: %d\n",t,ans);
    }
}
