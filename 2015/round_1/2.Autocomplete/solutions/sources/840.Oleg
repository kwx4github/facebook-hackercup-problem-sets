#include <assert.h> 
#include <ctype.h> 
#include <float.h> 
#include <math.h> 
#include <stdio.h> 
#include <string> 
#include <stdlib.h> 
#include <time.h> 
#include <algorithm> 
#include <numeric> 
#include <functional> 
#include <utility> 
#include <vector> 
#include <list> 
#include <set> 
#include <map> 
#include <queue> 
#include <stack> 
#include <sstream> 
#include <iostream> 
#include <memory.h>

using namespace std; 

int N;
vector<string> words;

void read() {
	cin >> N;
	words.resize(N);
	for (int  i = 0; i < N; i++) {
		cin >> words[i];
	}
}

struct Node {
	Node() {memset(next, 0, sizeof(next));}
	Node* next[30];
};

void solve() {
	Node* root = new Node();

	int res = 0;
	for (int i = 0; i < words.size(); i++) {
		string w = words[i];
		Node* node = root;
		bool found = false;
		for (int j = 0; j < w.size(); j++) {
			int p = w[j] - 'a';
			if (node->next[p] == 0) {
				node->next[p] = new Node();

				if (!found) {
					found = true;
					res += j + 1;
				}
			}
			node = node->next[p];
		}
		if (!found) {
			res += w.size();
		}
	}
	printf("%d\n", res);
}

int main(int argc, char* argv[]) {
#ifdef LAPTOP
	freopen("test.in", "r", stdin);
	freopen("test.out", "w", stdout); 
#endif
	
	int T;
	cin >> T;
	for (int t = 1; t <= T; t++) {
		read();
		printf("Case #%d: ", t);
		solve();
	}

	return 0;
}

