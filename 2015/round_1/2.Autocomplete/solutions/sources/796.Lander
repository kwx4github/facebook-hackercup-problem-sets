#include <iostream>
#include <vector>
#include <string>
#include <cmath>
#include <queue>
#include <set>

#define fii(x,y) for(int i=x;i<y;i++)
#define fjj(x,y) for(int j=x;j<y;j++)
#define fkk(x,y) for(int k=x;k<y;k++)
#define fi(x) fii(0,x)
#define fj(x) fjj(0,x)
#define fk(x) fkk(0,x)
#define eps 0.0000000001
#define inf 1<<28

using namespace std;

typedef long long ll;
typedef vector <int> VI;
typedef vector <VI> VVI;
typedef vector <VVI> VVVI;
typedef vector <ll> VL;
typedef vector <VL> VVL;
typedef vector <double> VD;
typedef vector <VD> VVD;
typedef vector <bool> VB;
typedef vector <VB> VVB;
typedef queue <int> QI;
typedef pair<int,int> PI;
typedef pair<int,PI> PT;
typedef queue<PI> QPI;
typedef priority_queue<PT> QPT;
typedef pair<double,double> PD;
typedef set<string> SS;

int pref (string& a, string& b)
{
  int ii = 0;
  while (ii < a.size() and ii < b.size() and (a[ii] == b[ii])) ii++;
  return ii;
}

int main ()
{
  int T;
  cin >> T;
  for (int caso = 1; caso <= T; caso++)
  {
    int n;
    cin >> n;
    SS td;
    td.insert(string(1,' '));
    td.insert(string(1,'~'));
    int sm = 0;
    fi (n)
    {
      string s;
      cin >> s;
      td.insert(s);
      string ant = *(--td.find(s));
      string sig = *(++td.find(s));
      sm += min (int(s.size()), 1 + max(pref(s,ant), pref(s,sig)));
    }
    cout << "Case #" << caso << ": " << sm << endl;
  }
}