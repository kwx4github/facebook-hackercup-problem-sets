//RandomUsername (Nikola Jovanovic)
//Facebook Hacker Cup 2015 Round 1
//B

#include <bits/stdc++.h>
#define MAXN 100005
#define MAXLEN 1000005
#define lld long long
using namespace std;

struct node
{
    int cc;
    node* ch[26];
    node()
    {
        for(int i=0; i<=25; i++)
            ch[i] = NULL;
        cc = 0;
    }
};


char pom[MAXLEN];
node* root;
int t, n;

int glob;

void Insert(node* curr, char* s, int lvl, int slen)
{
    if(lvl == slen)
        {
            if(glob == -1)
                glob = lvl;
            return;
        }
    if( curr -> ch[ s[lvl] - 'a' ] == NULL )
    {
        if(glob == -1)
            glob = lvl+1;
        node* nw = new node();
        curr -> ch[ s[lvl] - 'a' ] = nw;
    }
    (curr -> cc) ++;
    Insert(curr -> ch[ s[lvl] - 'a' ], s, lvl+1, slen);
}

int ret;

int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("autocomplete_sol.txt","w",stdout);
    scanf("%d", &t);
    for(int tt=1; tt<=t; tt++)
    {
        scanf("%d",&n);
        ret = 0;
        root = new node();
        for(int i=1; i<=n; i++)
        {
            scanf("%s",pom);
            glob = -1;
            Insert(root, pom, 0, strlen(pom));
            ret += glob;
            //cout<<ret<<"!"<<endl;
        }
        printf("Case #%d: %d\n", tt, ret);
    }
    return 0;
}
