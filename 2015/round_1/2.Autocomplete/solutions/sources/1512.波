#include <bits/stdc++.h>

using namespace std;
const int MAXN = 1000005;
const int N = 26;

struct Node {
    Node* ch[N];
    int fg;
    Node() {
        for (int i = 0; i < N; i++) {
            ch[i] = NULL;
        }
        fg = 0;
    }
};
char str[MAXN];
int n;

void work(int cas) {
    scanf("%d", &n);
    Node* root = new Node();
    Node* p;
    int cnt = 0;
    for (int i = 0; i < n; i++) {
        scanf("%s", str);
        int len = strlen(str);
        p = root;
        int ok = 0;
        for (int j = 0; j < len; j++) {
            int d = str[j] - 'a';
            if (!ok && !p->ch[d]) {
                cnt += j + 1;
                p->ch[d] = new Node();
                ok = 1;
            }else if (!p->ch[d]) {
                p->ch[d] = new Node();
            }
            p = p->ch[d]; p->fg = 1;
        }
        if (!ok) cnt += len;
    }
    printf("Case #%d: %d\n", cas, cnt);
    return ;
}

int main() {
    freopen("autocomplete.txt", "r", stdin);
    freopen("B.out", "w", stdout);
    int T;
    scanf("%d", &T);
    for (int cas = 1; cas <= T; cas++) work(cas);
    return 0;
}
