#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct tnode {
	char * word;
	tnode * nodes[26];
}tnode;

tnode * g_head;

int insertword(char * word, int len) {
	tnode ** nodeptr = &g_head;
	tnode * node = NULL;
	int typed = 0;
	bool stop = false;
	for(int i = 0; i <= len; i++) {
		if(*nodeptr == NULL) {
			*nodeptr = (tnode*)calloc(1, sizeof(tnode));
		}
		if(!stop)
			node = *nodeptr;
		if(i == len)
			stop = true;
		if(i && !node->word)
			stop = true;
		nodeptr = &(*nodeptr)->nodes[word[i] - 'a'];
		if(!stop)
			typed++;
	}
	int x = typed;
	while(node) {
		node->word = word;
		if(!word[x])
			break;
		node = node->nodes[word[x] - 'a'];
		x++;
	}
	return typed;
}

char g_buffer[1000000];

int scase() {
	g_head = NULL;
	int numwords, sum = 0;
	scanf("%d", &numwords);
	for(int i = 0; i < numwords; i++) {
		scanf("%s", g_buffer);
		int len = strlen(g_buffer);
		char * word = (char*)malloc(len + 1);
		strcpy(word, g_buffer);
		sum += insertword(word, len);
	}
	return sum;
}

int main(int argc, char ** argv) {
	int numcases = 0;
	scanf("%d", &numcases);
	for(int i = 1; i <= numcases; i++) {
		printf("Case #%d: %d\n", i, scase());
	}
	return 0;
}
