#include <cstdio>
#include <algorithm>
#include <set>
#include <string>

int check_len(const std::string &str1, const std::string &str2)
{
	int len = (int)std::min(str1.size(), str2.size());
	for (int i = 0; i < len; ++i)
	{
		if (str1[i] != str2[i]) return i + 1;
	}
	if (str1.size() <= str2.size()) return (int)str1.size(); else return (int)(str2.size() + 1);
}

int gao()
{
	int n;
	scanf("%d", &n);
	static char word[1 << 20];
	std::set<std::string> words;
	int ans = 0;
	for (int i = 0; i < n; ++i)
	{
		scanf("%s", word);
		auto ret = words.insert(std::string(word));
		auto curr = ret.first;
		int len = 1;
		if (curr != words.begin())
		{
			auto prev = curr;
			--prev;
			len = std::max(len, check_len(*curr, *prev));
		}
		auto next = curr;
		++next;
		if (next != words.end())
		{
			len = std::max(len, check_len(*curr, *next));
		}
		ans += len;
		//printf("%s: %d\n", word, len);
	}
	return ans;
}

int main()
{
	int t;
	scanf("%d", &t);
	for (int cs = 1; cs <= t; ++cs)
	{
		int ans = gao();
		printf("Case #%d: %d\n", cs, ans);
	}
	return 0;
}
