#include <iostream>
#include <vector>
#include <list>
#include <map>

using namespace std;

#define REP(i, n) for(int i=0; i < n;i++)


struct Node {
    Node * children['z'-'a'+1];

    int insert(const string & w) {
        int ret = w.size();
        bool retset = false;

        Node * cur = this;

        for(int i = 0; i < w.size(); i++) {
            if(cur->children[w[i]-'a'] == NULL) {
                if(!retset) {
                ret = i+1;
                retset = true;
                }
                cur->children[w[i]-'a'] = new Node();
            }
            cur = cur->children[w[i]-'a'];
        }

        return ret;
    }
};

void process(int caseNum) {
    int n;
    cin >> n;
    cin.ignore();

    Node * root = new Node();

    int cnt = 0;

    REP(i, n) {
        string w;
        getline(cin, w);
        int f = root->insert(w);

        cnt += f;
    }
    cout << "Case #"<<caseNum<<": " << cnt << endl;
}

int main() {

    int n;
    cin >> n;
    REP(i,n) process(i+1);
    return 0;
}