#include <bits/stdc++.h>

using namespace std;

class Trie {
  vector <Trie*> branches;
  vector <int> keep;
public:
  Trie() {
    for (int i = 'a'; i <= 'z'; ++i) {
      branches.push_back(NULL);
      keep.push_back(0);
    }
  }
  void pushWord(string word) {

    Trie* here = this;

    int n = (int)word.size();

    for (int i = 0; i < n; ++i) {
      int x = word[i] - 'a';
      if (here -> branches[x] == NULL) {
        here -> branches[x] = new Trie();
      }
      here -> keep[x] += 1;
      here = here -> branches[x];
    }

  }

  int count(string word) {
    // if (word == "") {
    //   return 0;
    // }

    // int x = word[0] - 'a';

    // if (keep[x] == 1) {
    //   return 1;
    // }

    // return 1 + this -> branches[x] -> count(word.substr(1, (int)(word.size() - 1)));

    Trie* here = this;

    int n = (int)word.size();

    int typed = 0;

    for (int i = 0; i < n; ++i) {
      typed += 1;
      int x = word[i] - 'a';
      if (here -> keep[x] == 1) {
        break;
      }
      here = here -> branches[x];
    }

    return typed;
  }
};

int main() {

  int T = 0;
  cin >> T;

  for (int test = 0; test < T; ++test) {
    Trie* t = new Trie();
    int words = 0;
    cin >> words;

    int total = 0;

    for (int i = 0; i < words; ++i) {
      string word;
      cin >> word;
      t -> pushWord(word);
      total += t -> count(word);
    }

    cout << "Case #" << test + 1 << ": " << total << "\n";
  }


  return 0;
}