#include<bits/stdc++.h>
using namespace std;

ifstream fin("autocomplete.txt");
ofstream fout("output.txt");

#define MAX_NODES 1000000
#define MAX_EDGES 26

int nodes;
int trie[MAX_NODES][MAX_EDGES];
int frequency[MAX_NODES];

void insert(string s) {
  int node = 0;
  for (auto c : s) {
    if (trie[node][c - 'a']) {
      node = trie[node][c - 'a'];
    } else {
      trie[node][c - 'a'] = ++nodes;
      node = nodes;
    }

    ++frequency[node];
  }
}

int query(string s) {
  int node = 0, answer = 0;

  for (auto c : s) {
    node = trie[node][c - 'a'];
    ++answer;

    if (frequency[node] == 1)
      return answer;
  }

  return answer;
}

int main() {
  int t;
  fin >> t;

  for (int T = 1; T <= t; ++T) {
    int n;
    fin >> n;

    int answer = 0;
    for (int i = 0; i < n; ++i) {
      string s;
      fin >> s;

      insert(s);
      answer += query(s);
    }

    fout << "Case #" << T << ": " << answer << "\n";
    
    nodes = 0;
    memset(trie, 0, sizeof(trie));
    memset(frequency, 0, sizeof(frequency));
  }
}

