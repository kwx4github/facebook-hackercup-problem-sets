#include <algorithm>
#include <array>
#include <complex>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <memory>
#include <queue>
#include <set>
#include <string>
#include <tuple>
#include <vector>

using namespace std;


set<string> dat;

int calc(string & s, set<string>::iterator& it) {
  const auto& t = *it;
  int size_s = s.size();
  int size_t = t.size();
  for(int i = 0; ; ++i) {
    if(i == size_s) {
      return i;
    }
    if(i == size_t) {
      return i + 1;
    }
    if(s[i] != t[i]) {
      return i + 1;
    }
  }
}

int solve(string&& s) {
  auto b = dat.upper_bound(s);
  auto a = b;
  --a;
  int res = max(calc(s, a), calc(s, b));
  dat.insert(move(s));
  return res;
}

int main() {
  int T;
  cin >> T;
  for(int t = 1; t <= T; ++t) {
    dat.clear();
    int N;
    cin >> N;
    dat.insert("A");
    dat.insert("{");
    int ans = 0;
    for(int i = 0; i < N; ++i) {
      string s;
      cin >> s;
      ans += solve(move(s));
    }
    cout << "Case #" << t << ": " << ans << endl;
  }
  return 0;
}
