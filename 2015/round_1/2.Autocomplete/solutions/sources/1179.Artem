import java.io.*;
import java.util.*;

public class Autocomplete {

	FastScanner in;
	PrintWriter out;

	void solve() {
		int n = in.nextInt();
		String[] s = new String[n];
		int ans = 0;
		int sumL = 0;
		for (int i = 0; i < n; i++) {
			s[i] = in.nextToken();
			sumL += s[i].length();
		}

		int[][] next = new int[26][sumL + 1];
		int states = 1;
		for (int[] i : next) {
			Arrays.fill(i, -1);
		}
		
		for (int i = 0; i < n; i++) {
			int cur = 0;
			int len = s[i].length();
			for (int j = 0; j < s[i].length(); j++) {
				int c = s[i].charAt(j) - 'a';
				if (next[c][cur] == -1) {
					len = Math.min(len, j + 1);
					next[c][cur] = states++;
				}
				cur = next[c][cur];
			}
			ans += len;
		}
		
		out.println(ans);
	}

	void run() {
		try {
			in = new FastScanner("autocomplete.txt");
			out = new PrintWriter("output.txt");
			int T = in.nextInt();
			for (int test = 1; test <= T; test++) {
				out.print(String.format("Case #%d: ", test));
				solve();
			}
			out.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	class FastScanner {
		BufferedReader br;
		StringTokenizer st;

		public FastScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		public FastScanner(String s) {
			try {
				br = new BufferedReader(new FileReader(s));
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}

		String nextToken() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(nextToken());
		}

		long nextLong() {
			return Long.parseLong(nextToken());
		}

		double nextDouble() {
			return Double.parseDouble(nextToken());
		}
	}

	public static void main(String[] args) {
		new Autocomplete().run();
	}
}
