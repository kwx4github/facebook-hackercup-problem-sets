#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<queue>
using namespace std;
char str[1000100];
struct trie
{
    int arr[26];
    trie* next[26];
};
trie* newTrie()
{
    trie* x=new trie;
    for(int i=0;i<26;i++)
    {
        x->arr[i]=0;
        x->next[i]=NULL;
    }
    return x;
}
void freeTrie(trie* t)
{
    queue<trie*> q;
    int res=0;
    trie* x;
    q.push(t);
    while(!q.empty())
    {
        x=q.front();
        q.pop();
        for(int i=0;i<26;i++)
        {
            if(x->next[i]!=NULL)
            {
                q.push(x->next[i]);
            }
        }
        res++;
        delete x;
    }
}
int main()
{
    int n,i,counter,t,j,res,idx;
    trie* tr=NULL;
    trie* x;
    scanf("%d",&t);
    for(counter=1;counter<=t;counter++)
    {
        scanf("%d",&n);
        res=0;
        tr=newTrie();
        for(i=0;i<n;i++)
        {
            scanf("%s",str);
            x=tr;
            for(j=0;str[j]!='\0';j++)
            {
                //printf("%d %d\n",str[j]-'a',x->arr[str[j]-'a']);
                idx=str[j]-'a';
                if(x->arr[idx]==0)
                {
                    x->arr[idx]=1;
                    x->next[idx]=newTrie();
                }
                else
                {
                    x->arr[idx]++;
                }
                x=x->next[idx];
            }
            x=tr;
            for(j=0;str[j]!='\0';j++)
            {
                res++;
                idx=str[j]-'a';
                if(x->arr[idx]==1)
                {
                    break;
                }
                x=x->next[idx];
            }
        }
        printf("Case #%d: %d\n",counter,res);
        freeTrie(tr);
    }
    return 0;
}
