#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define SMAX 1000005

int lcp(const string &a, const string &b) {
  int i;
  int len = min(a.size(), b.size());
  for (i = 0; i < len; i++) {
    if (a[i] != b[i])
      break;
  }
  return i;
}

int main() {
  int t;
  scanf("%d", &t);
  for (int ctest = 1; ctest <= t; ctest++) {
    int n;
    scanf("%d", &n);
    set<string> words;
    ll tot = 0;
    for (int i = 0; i < n; i++) {
      char s[SMAX];
      scanf(" %s", s);
      const string s1 = string(s);
      words.insert(s1);

      set<string>::iterator it = words.find(s1);
      int tmp = 1;
      if (it != words.begin()) {
        set<string>::iterator it1 = --it;
        int tmp1 = lcp(s1, *it1);
        //printf("::%s\n", (*it1).c_str());
        //printf("tmp1: %d %d\n", i, tmp1);
        tmp = max(tmp, tmp1 + 1);
        ++it;
      }

      set<string>::iterator it2 = ++it;
      if (it2 != words.end()) {
        int tmp2 = lcp(s1, *it2);
        //printf("::%s\n", (*it2).c_str());
        //printf("tmp2: %d %d\n", i, tmp2);
        tmp = max(tmp, tmp2 + 1);
      }

      tmp = min(tmp, (int)s1.size());
      tot += tmp;
    }

    printf("Case #%d: %lld\n", ctest, tot);
  }
  return 0;
}
