#include <iostream>
#include <cstring>
#include <cmath>
#include <vector>
#include <cstdio>
#include <algorithm>

using namespace std;

#define rep(i,x,n) for(int i =(x); i < (int)(n);++i)
#define PB push_back

bool fl = 0;
int cnt = 0;
int res = 0;

struct node {
  node* ch[26];
  bool isleaf;
  node() {
    memset(ch,0,sizeof(ch));
    isleaf=0;
  }
  void insert(const char* str) {
    if (!*str) {
      if (!fl) res+=cnt;
      return;
    }
    cnt++;
    if (!ch[*str-'a']) {
      ch[*str-'a'] = new node();
      if(!fl) res+=cnt,fl=true;
    }
    ch[*str-'a']->insert(str+1);
  }
  ~node() {
   rep(i,0,26) delete ch[i];
  }
};

int main() {
  FILE* xx = freopen("r1_p2.in","rt",stdin);
  xx = freopen("r1_p2.out","wt",stdout);
  int t,n;
  vector<string> ss;
  string s;
  cin>>t;
  rep(tt,0,t) {
    ss.clear();
    cin>>n;
    res = 0;
    node* root= new node();
    rep(i,0,n) {
      cin>>s;
      ss.PB(s);
    }
    rep(i,0,n) {
      fl = cnt = 0;
      root->insert(ss[i].c_str());
    }
//    delete root;
    cout<<"Case #"<<tt+1<<": "<<res<<endl; 
  }
  return 0;
}

