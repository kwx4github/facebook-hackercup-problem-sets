//Bismillahir Rahmanir Rahmeem

#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<math.h>
#include<string.h>
#include<map>
#include<queue>
#include<stack>
#include<utility>
#include<stdlib.h>
#include<string>
#include<set>
#include<iomanip>
#define INF 1e9
#define lld long long int
#define clr(a) memset(a,0,sizeof(a))
#define reset(a) memset(a,-1,sizeof(a))
#define act(a) memset(a,1,sizeof(a))
#define setinf(a) memset(a,0b01111111,sizeof(a));
#define FRO freopen("input.txt","r",stdin);
#define FROut freopen("output.txt","w",stdout);
#define ui unsigned int
#define came "came"
#define pii pair<int,int>
#define plii pair<long long int, int>
#define pll pair<long long,long long>
#define pic pair<int,char>
#define ninf (-1e9)-2
#define inf (1e9)+2
#include<fstream>
#include <assert.h>

#define foreach(x) for(__typeof(x.begin()) it=x.begin(); it!=x.end();it++)

using namespace std;
#define pid pair<int,double>
#define pdi pair<double,int>

#define pb push_back
#define mp make_pair
#define pri(x) printf("%d\n",x)
#define pi 3.14159265359
#define X first
#define Y second

struct TrieNode
{
    char value;
    TrieNode *child[26];
    TrieNode(char x)
    {
        value=x;
        int i;
        for(i=0;i<26;i++)
        {
            child[i]=NULL;
        }
    }
};

class Trie
{
    TrieNode *root;
public:
    Trie()
    {
        //adding dummy node
        root=new TrieNode(0);
    }
    int addWord(const char *key)
    {
        //print();
        int len=strlen(key);
        int i;
        int ret=0,add=1;
        TrieNode *ptr=root;
        for(i=0;i<len;i++)
        {
            ret+=add;
            if(ptr->child[key[i]-'a']==NULL)
            {
                add=0;
                ptr=ptr->child[key[i]-'a']=new TrieNode(key[i]);
            }
            else
            {
                ptr=ptr->child[key[i]-'a'];
            }
        }
        return ret;
    }
    /*
    void df(TrieNode *root)
    {
        if(root==NULL)
        {
            return;
        }
        else
        {
            cout<<root->value<<endl;
            int i;
            for(i=0;i<26;i++)
            {
                if(root->child[i]!=NULL)
                {
                    cout<<i<<endl;
                    df(root->child[i]);
                }
            }
        }
    }

    void print()
    {
        cout<<"---"<<endl;
        df(root);
        cout<<"---"<<endl;
    }
    */
};

char val[1000005];

int n;

int main()
{
    FRO
    FROut
    int t,ca;
    scanf("%d",&t);
    for(ca=1;ca<=t;ca++)
    {
        scanf("%d",&n);
        Trie x;
        int i,j;
        int ans=0;
        for(i=0;i<n;i++)
        {
            scanf("%s",val);
            ans+=x.addWord(val);
        }
        printf("Case #%d: %d\n",ca,ans);
    }
    return 0;
}
