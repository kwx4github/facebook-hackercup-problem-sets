#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;
struct TrieNode {
    int n;
    int link[27];
    int branch;
} Node[1048576<<2];
int TrieSize;
int rename(char c) {
    if ('a' <= c && c <= 'z')
        return c - 'a';
    return 26;
}
int insertTrie(const char* str, int root) {
    static int i, idx, c;
    int ret = 0, flag = 0;
    for(i = 0, idx = root; str[i]; i++) {
        c = rename(str[i]);
        if (Node[idx].branch == 0 && flag == 0) {
            ret = i + 1;
            flag = 1;
        }
        if(Node[idx].link[c] == 0) {
            TrieSize++;
            memset(&Node[TrieSize], 0, sizeof(Node[0]));
            Node[idx].link[c] = TrieSize;
            Node[idx].branch = 1;
            if (flag == 0) {
                ret = i + 1;
                flag = 1;
            }
        }
        idx = Node[idx].link[c];
    }
    if (flag == 0)  ret = i;
    return ret;
}
char s[1048576];
int main() {
    int testcase, cases = 0;
    int n;
    scanf("%d", &testcase);
    while (testcase--) {
        scanf("%d", &n);
        TrieSize = 1;
        int root = 0;
        memset(&Node[root], 0, sizeof(Node[root]));
        
        int ret = 0;
        for (int i = 0; i < n; i++) {
            scanf("%s", s);
            int t = insertTrie(s, root);
//            printf("%s key %d\n", s, t);
            ret += t;
        }
        printf("Case #%d: %d\n", ++cases, ret);
    }
    return 0;
}
/*
 5
 5
 hi
 hello
 lol
 hills
 hill
 5
 a
 aa
 aaa
 aaaa
 aaaaa
 5
 aaaaa
 aaaa
 aaa
 aa
 a
 6
 to
 be
 or
 not
 two
 bee
 3
 having
 fun
 yet
*/