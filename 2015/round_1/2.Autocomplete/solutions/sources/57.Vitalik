import java.util.*;
import java.io.*;

public class B {
    public static void main(String[] args) {
        new B().run();
    }

    BufferedReader br;
    StringTokenizer in;
    PrintWriter out;

    public String nextToken() throws IOException {
        while (in == null || !in.hasMoreTokens())
            in = new StringTokenizer(br.readLine());
        return in.nextToken();
    }

    public int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }

    public double nextDouble() throws IOException {
        return Double.parseDouble(nextToken());
    }

    public class Node {
        HashMap<Character, Node> next = new HashMap<Character, Node>();
        int h;
        boolean end;
        boolean filled;

        public int build(String s, int i) {
            int ans = Integer.MAX_VALUE;
            if (!filled) {
                ans = i;
            }
            h = i;
            filled = true;
            if (i == s.length()) {
                ans = i;
                end = true;
            } else {
                char c = s.charAt(i);
                Node node = next.getOrDefault(c, new Node());
                next.put(c, node);
                ans = Math.min(ans, node.build(s, i + 1));
            }
            return ans;
        }
    }

    public int get(Node node) {
        int sum = 0;
        for (Node next : node.next.values()) {
            int val = get(next);
            sum += val + node.h + 1;
        }
        if (node.end) {
            return Math.max(sum - 1, 0);
        } else {
            return sum - node.h - 1;
        }
    }

    public void solve() throws IOException {
        int n = nextInt();
        String[] s = new String[n];
        for (int i = 0; i < n; i++) {
            s[i] = nextToken();
        }

        Node node = new Node();
        node.filled = true;

        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans += node.build(s[i], 0);
        }

        out.println(ans);
    }

    public void run() {
        try {
            br = new BufferedReader(new FileReader("input.txt"));
            out = new PrintWriter("output.txt");

            int t = nextInt();
            for (int i = 0; i < t; i++) {
                System.err.println("Test case " + (i + 1));
                out.print("Case #" + (i + 1) + ": ");
                solve();
            }

            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
    }
}