#include <iostream>
#include <utility>
#include <algorithm>
#include <memory.h>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <stdlib.h>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <list>

using namespace std;

struct trieNode {
  trieNode *next[26];
  trieNode() {
    for(int i = 0;i < 26;++i) {
      next[i] = NULL;
    }
  }
};

void insert(string s,trieNode *root) {
  int n = (int)s.size();
  for(int j = 0;j < n;++j) {
    int i = s[j] - 'a';
    if(!root->next[i]) {
      root->next[i] = new trieNode();
    }
    root = root->next[i];
  }
}

int searchTrie(string s,trieNode *root) {
  int n = (int)s.size();
  int count = 0;
  for(int j = 0;j < n;++j) {
    ++count;
    int i = s[j] - 'a';
    if(!root->next[i]) {
      return count;
    }
    root = root->next[i];
  }
  return count;
}

int main()
{
  freopen("/Users/shalinisah/Desktop/autocomplete.txt", "r", stdin);
  freopen("/Users/shalinisah/Desktop/autocompleteout.txt", "w", stdout);
  int t;
  cin>>t;
  for (int i = 1;i <= t;++i) {
    trieNode *root=new trieNode();
    int n;
    cin>>n;
    int count = 0;
    for(int j = 0;j < n;++j) {
      string s;
      cin>>s;
      count += min(searchTrie(s,root),(int)s.size());
      insert(s,root);
    }
    cout<<"Case #"<<i<<": "<<count<<"\n";
  }
  return 0;
}