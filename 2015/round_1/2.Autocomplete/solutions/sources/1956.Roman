import java.io.InputStreamReader;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.io.FileInputStream;
import java.util.StringTokenizer;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 * @author Rubanenko
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream;
		try {
			inputStream = new FileInputStream("fbhc.in");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("fbhc.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		fbhc solver = new fbhc();
		solver.solve(1, in, out);
		out.close();
	}
}

class fbhc {
    int[][] trie = new int[1000005][26];
    int cnt;

    int add(String s) {
        int res = -1;
        int v = 1;
        for (int i = 0; i < s.length(); i++) {
            int q = s.charAt(i) - 'a';
            if (trie[v][q] == 0) {
                cnt++;
                trie[v][q] = cnt;
                if (res == -1) {
                    res = i + 1;
                }
            }
            v = trie[v][q];
        }
        if (res == -1) {
            res = s.length();
        }
        return res;
    }

    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int testCases = in.nextInt();
        for (int test = 1; test <= testCases; test++) {
            out.printf("Case #%d: ", test);
            int n = in.nextInt();
            cnt = 1;
            long ans = 0;
            for (int i = 0; i < n; i++) {
                String s = in.next();
                ans += add(s);
            }
            out.println(ans);
            for (int i = 0; i <= cnt; i++) {
                for (int j = 0; j < 26; j++) {
                    trie[i][j] = 0;
                }
            }
        }
    }
}

class InputReader {
    private BufferedReader reader;
    private StringTokenizer tokenizer;

    public InputReader(InputStream inputStream) {
        reader = new BufferedReader(new InputStreamReader(inputStream));
    }

    public String nextLine() {
        String line = null;
        try {
            line = reader.readLine();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return line;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens())
            tokenizer = new StringTokenizer(nextLine());
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }
}

