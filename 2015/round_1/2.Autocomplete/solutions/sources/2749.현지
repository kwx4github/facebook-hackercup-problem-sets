#include <stdio.h>
#include <math.h>
#include <string.h>
#include <algorithm>
#include <utility>
using namespace std;
struct word
{
	word * next[30];
};
void init(word * dict)
{
	memset(dict->next, NULL, sizeof(word*) * 30);
}


int n, m, k, i, j, t, a, ans, cnt;
char arr[1000005];
int main()
{
	freopen("autocomplete.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	word * root, * ch;
	root = ch = NULL;
	scanf("%d", &t);
	
	for (a = 0; a < t; a++)
	{
		scanf("%d", &n);
		ans = 0;
		root = (word*)malloc(sizeof(word)); 
		init(root);
		for (i = 0; i < n; i++)
		{
			cnt = 1;
			ch = root;
			scanf("%s", arr);
			m = strlen(arr);
			for (j = 0; j < m; j++)
			{
				if (ch->next[arr[j] - 'a'] != NULL)
				{
					cnt++;
					ch = ch->next[arr[j] - 'a'];
				}
				else
				{
					ch->next[arr[j] - 'a'] = (word*)malloc(sizeof(word));
					init(ch->next[arr[j] - 'a']);
					ch = ch->next[arr[j] - 'a'];
				}
			}
			if (cnt>m) cnt = m;
			ans += cnt;

		}
		printf("Case #%d: %d\n", a+1, ans);

	}



	return 0;
}