#include<stdio.h>
#include<stdlib.h>
#include <bits/stdc++.h>
using namespace std;

struct node{
    vector<pair<char,int> > nxt;
    bool hasNxt(char k ){
        return -1 != getNxt(k);
    }
    int getNxt(char k ){
        if(nxt.size() == 0 ) return -1;
        for ( auto it : nxt ){
            if(it.first == k )return it.second;
        }
        return -1;
    }
    int insertNxt(char k,int idx){
        nxt.push_back( {k,idx});
    }
};

void solve(){
    int n;
    scanf("%d",&n);

    vector<node> v;
    v.push_back(node());
    int ans = 0 ;
    for(int i = 0 ; i < n ; ++ i ){
        string s;
        cin >> s;
        int cur = 0 ;
        for(int j = 0 ; j < s.size() ; ++ j ){
            //printf("%d\n",j);
            if(!v[cur].hasNxt(s[j])){
                ans++;
                // add all remaining
                for( ; j < s.size() ; ++ j ){
                    v[cur].insertNxt(s[j],v.size());
                    cur=v.size();
                    v.push_back(node());
                }
                break;
            }
            else{
                ans++;
                cur=v[cur].getNxt(s[j]);
            }
        }
    }
    printf("%d\n",ans);
}

int main(){
    freopen("autocomplete"".txt","r",stdin);
    freopen("autocomplete"".out","w",stdout);
    int t;
    scanf("%d",&t);
    for(int i = 1 ; i <= t ; ++ i ){
        printf("Case #%d: ",i);
        solve();
    }
}
