#include <cstdio>
using namespace std;

struct trie {
    int nxt[26];
    int last;
    int cnt;
};

char s[1000001];
trie T[10000001];
int z;
int cnt;
bool ins (int node,char *str) {
    if (!*str) {
        if (T[node].last<z) T[node].cnt=1,T[node].last=z;
        else ++T[node].cnt;
        return 1;
    }
    if (T[node].nxt[*str-'a']==0 || T[T[node].nxt[*str-'a']].last<z) {
        T[node].nxt[*str-'a'] = cnt++;
        if (T[node].last<z) T[node].cnt=1;
        else T[node].cnt += 1;
        T[node].last = z;
        ins(cnt-1,str+1);
        return 1;
    }
    int p = ins(T[node].nxt[*str-'a'],str+1);
    T[node].cnt += p;
    return p;
}

int ans (int node,char *str) {
    if (!*str) return 0;
    if (T[node].cnt==1) return node==0;
    return 1 + ans(T[node].nxt[*str-'a'],str+1);
}

int main () {
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int TT;
    scanf("%d",&TT);
    for (z=1;z<=TT;++z) {
    int N;
    scanf("%d",&N);
    cnt = 1;
    int sum=0;
    for (int i=0;i<26;++i) T[0].nxt[i]=0;
    T[0].last=z;
    T[0].cnt=0;
    for (int i=1;i<=N;++i) {
        scanf("%s",s);
        ins(0,s);
        sum += ans(0,s);
    }
    printf("Case #%d: %d\n",z,sum);
    }
    return 0;
}
