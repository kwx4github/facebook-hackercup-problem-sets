#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <iostream>
#include <cmath>
#include <algorithm>

#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>

using namespace std;

typedef long long ll;

class Trie{
public:
  Trie* next[26];
  Trie(){
    for(int i = 0; i < 26; i++)
      next[i] = 0;
  }
  ~Trie(){
  }
  int count(char* s, int cur, int len){
    Trie* t = this;
    int ret = 0;
    while(cur < len){
      int index = s[cur] - 'a';
      if(t->next[index] == 0){
        ret++;
        break;
      }
      //return next[index]->count(s, cur+1, len) + 1;
      t = t->next[index];
      ret++;
      cur++;
    }
    return ret;
  }
  void add(char* s, int cur, int len){
    Trie* t = this;
    while(cur < len){
      int index = s[cur] - 'a';
      if(t->next[index] == 0)
        t->next[index] = new Trie();
      t = t->next[index];
      //next[index]->add(s, cur+1, len);
      cur++;
    }
  }
  void del(){
    for(int i = 0; i < 26; i++)
      if(next[i] != 0){
        next[i]->del();
        delete next[i];
      }
  }
};
Trie* head;
char buf[1<<20];

int main(){
  int T;
  scanf("%d", &T);
  for(int o = 1; o <= T; o++){
    int n;
    scanf("%d", &n);
    int ans = 0;
    head = new Trie();
    for(int i = 0; i < n; i++){
      scanf("%s", buf);
      int len = strlen(buf);
      int type = head->count(buf, 0, len);
      //printf("%s: %d\n", buf, type);
      ans += type;
      head->add(buf, 0, len);
    }
    printf("Case #%d: %d\n", o, ans);
    delete head;
  }

  return 0;
}
