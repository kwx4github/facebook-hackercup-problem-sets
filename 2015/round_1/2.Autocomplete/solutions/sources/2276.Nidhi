#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

typedef struct node{
    node *children[26];
}node;

class trie{
    node *head;
    public:
    trie();
    int insert(string s);
};

trie::trie()
{
    head = new node;
    for (int i=0;i<26;i++)
        head->children[i] = NULL;
}

int trie::insert(string s)
{
    int ans;
    bool flag = true;
    int n = s.size();
    int i=0;
    node *curr=head;

    for (;i<n;i++)
    {
        if (curr->children[s[i]-'a']==NULL)
        {
		
            node *newnode=new node;

            for (int i=0;i<26;i++)
                newnode->children[i] = NULL;

            curr->children[s[i]-'a']=newnode;
            curr = curr->children[s[i]-'a'];
	if (flag)            
		 {ans = i+1;
	    flag = false;}
        }
        else
            curr = curr->children[s[i]-'a'];
    }

    if (flag)
        ans = n;

    return ans;

}

int main()
{
	int t;
    cin >> t;
    for (int z=1;z<=t;z++)
    {
	int n;
    cin >> n;
    int ans  = 0;
    trie t;
    while(n--)
    {
        string s;
        cin >> s;
        ans+=t.insert(s);
    }


	cout << "Case #" << z << ": " <<  ans  << endl;  
    }

    return 0;


}
