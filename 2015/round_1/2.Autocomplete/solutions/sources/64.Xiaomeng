#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

constexpr int MAX = 2000100;
constexpr int MAXC = 27;

inline int chidx(char ch) {
	return ch == '$' ? 26 : ch - 'A';
}

struct Trie {
	int nxt[MAX][MAXC], cnt[MAX], tot;

	void clear() {
		memset(nxt, -1, sizeof(nxt));
		memset(cnt, 0, sizeof(cnt));
		tot = 1;
	}

	void insert(const char* str) {
		int x = 0;
		for (++cnt[x]; *str; ++str) {
			int idx = chidx(*str);
			if (nxt[x][idx] == -1) nxt[x][idx] = tot++;
			x = nxt[x][idx]; ++cnt[x];
		}
	}

	int query(const char *str) const {
		int x = 0, ret = 0;
		for ( ; *str && *str != '$'; ++str) {
			int idx = chidx(*str);
			x = nxt[x][idx]; ++ret;
			if (cnt[x] == 1) return ret;
		}
		return ret;
	}
} trie;

char str[MAX];

int main() {
	int t, ct;

	scanf("%d", &t);
	for (ct = 1; ct <= t; ++ct) {
		trie.clear();
		int n, ans = 0;
		scanf("%d", &n);
		for (int i = 0; i < n; ++i) {
			scanf("%s", str);
			strcat(str, "$");
			trie.insert(str);
			ans += trie.query(str);
		}
		printf("Case #%d: %d\n", ct, ans);
	}

	return 0;
}

