//by david942j
#include <cstdio>
#include <cstring>
#include <set>
#include <map>
#include <ctime>
#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <cassert>
#include <queue>
#include <stack>
#include <cstdlib>
#define openfile(s) freopen(s".in","r",stdin);freopen(s".out","w",stdout)
#define mpr std::make_pair
#define lg(x) (31-__builtin_clz(x))
#define __count __builtin_popcount
#define X first
#define Y second
#define mst(x) memset(x,0,sizeof(x))
#define mst1(x) memset(x,-1,sizeof(x))
#define ALL(c) (c).begin(),(c).end()
#define FOR(i,n) for(int i=0;i<n;i++)
#define FOR1(i,n) for(int i=1;i<=n;i++)
#define FORit(it,c) for(__typeof(c.begin()) it=c.begin();it!=c.end();++it)
#define pb push_back
#define RID(x) int x;RI(x)
using namespace std;
typedef long long LL;
typedef double LD;
typedef vector<int> VI;
typedef std::pair<int,int> PII;
template<class T>inline void maz(T &a,T b){if(a<b)a=b;}
template<class T>inline void miz(T &a,T b){if(a>b)a=b;}
template<class T>inline T abs(T a){return a>0?a:-a;}
inline int max(int a,int  b){return a>b?a:b;}
void RI() {}
template<typename... T>
void RI( int& head, T&... tail ) {
    scanf("%d",&head);
    RI(tail...);
}
const int N=10000001,INF=1<<26;
const LD EPS=1e-9;
struct Node {
    Node *next[26];
    Node(){mst(next);}
}*root;
char s[2000000];
int trie() {
    Node *now = root;
    int ans=0;
    bool flag=false;
    for(int i=0;s[i];i++) {
        s[i]-='a';
        if(now->next[s[i]]==NULL) {
            now->next[s[i]]=new Node();
            flag=true;
        }
        now=now->next[s[i]];
        if(!flag)ans++;
    }
    return ans+flag;
}
int main() {
    RID(T);
    int w=1;
    while(T--) {
        int n;
        scanf("%d",&n);
        int ans=0;
        root = new Node();
        while(n--) {
            scanf("%s",s);
            ans+=trie();
        }
        printf("Case #%d: %d\n",w++,ans);
    }
}
/*
6 10 12 14 15

*/