#include <cstring>
#include <queue>
#include <cstdio>
#include <algorithm>
using namespace std;

typedef struct node *trie;

const int SIGMA = 26;
const int ELEMENT_MAX = 1000100;

int tot;

struct node {
	trie child[SIGMA];
} T[ELEMENT_MAX];

void trie_init() {
	tot = 1;
	memset(T, 0, sizeof(T));
}

int insert(char *s) {
	trie t = T;
	int n = 0;
	int cnt = 0;
	for (int i = 0; s[i]; ++i) {
		int c = s[i] - 'a';
		n++;
		if (!t->child[c]) {
			cnt++;
			t->child[c] = &T[tot++];
		}
		t = t->child[c];
	}
	return cnt == 0 ? n : n - cnt + 1;
}

char s[ELEMENT_MAX];

int main() {
	int W;
	scanf("%d", &W);
	for (int cas = 1; cas <= W; cas++) {
		int n;
		scanf("%d", &n);
		int ans = 0;
		trie_init();
		for (int i = 0; i < n; i++) {
			scanf("%s", s);
			int val = insert(s);
			ans += val;
		}
		printf("Case #%d: %d\n", cas, ans);
	}
}