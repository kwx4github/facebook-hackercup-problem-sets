import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class AutoComplete {
	public static void main(String args[]) throws IOException{
		int Test = 0, Kase = 1;
		Scanner scanner = new Scanner(System.in);
		Tries tries;
		String str;
		Test = scanner.nextInt();
		while((Test--) > 0){
			int ans = 0;
			tries = new Tries();
			int n = scanner.nextInt();
			String tests[] = new String[n];
			for(int i = 0;i < n;i++){
				tests[i] = scanner.next();
			}
			for(int i = 0;i < n;i++){
				int j = tries.add(tests[i]);
				ans += j;
			}
			System.out.printf("Case #%d: %d\n", Kase++,ans);
		}
	}
}

class Tries{
	Tries tries[] = new Tries[26];
	String strings[] = new String[26];
	int add(String key){
		if(key.isEmpty()){
			return 1;
		}
		if( tries[key.charAt(0)-((int)'a')] == null) {
			strings[key.charAt(0)-((int)'a')] = key ;
			tries[key.charAt(0)-((int)'a')] = new Tries();
		}
		else {
			int length = 0;
			
			int sl = strings[key.charAt(0)-((int)'a')].length();
			int kl = key.length();
			int l;
			
			if(kl < sl) {
				l = kl;
			}
			else {
				l = sl;
			}
			
			for(int i=0;i < l;i++){
				if(key.charAt(i)!=strings[key.charAt(0)-((int)'a')].charAt(i))
					break;
				else
					length++;
			}
			if(length == key.length()){
				return length;
			}
			if(length == 0)
				return tries[key.charAt(0)-((int)'a')].add(key.substring(1, key.length() )) + 1;
			else
				return tries[key.charAt(0)-((int)'a')].add(key.substring(length, key.length() )) + length;
		}
		return 1;
	}
}
