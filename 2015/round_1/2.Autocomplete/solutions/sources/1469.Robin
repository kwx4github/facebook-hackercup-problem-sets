#include <iostream>
#include <string>
#include <algorithm>
#include <set>
#include <stdio.h>

using namespace std;

int main(){
	int T;
	cin>>T;
	for(int i=1; i<=T; i++){
		int N;
		cin>>N;
		string words[N];
		for(int j=0; j<N; j++){
			cin>>words[j];
		}
		set<string> dict;
		set<string>::iterator it, prev, next;
		dict.insert(words[0]);
		long long sum=1;
		int pre[N];
		for(int j=1; j<N; j++){	//compute minimal prefix
			it=dict.insert(words[j]).first;
			string now=words[j];
			string small, big;
			//cout<<now<<" ";
			int cs=0;	//number of common characters with next smaller element
			if(it!=dict.begin()){
				prev=it;
				prev--;
				small=*prev;
				while((cs<small.length()) && (cs<now.length()) && (small[cs]==now[cs]))
					cs++;
				//cout<<cs;
				pre[j]=min(pre[j],cs+1);
			}
			//cout<<" ";
			int cb=0;	//number of common characters with next bigger element
			next=it;
			next++;
			if(next!=dict.end()){
				big=*next;
				//cout<<big<<" ";
				while((cb<big.length()) && (cb<now.length()) && (big[cb]==now[cb]))
					cb++;
				//if(cb==now.length())
				//	dict.erase(it);
				//cout<<cb;
				pre[j]=min(pre[j],cb+1);
			}
			pre[j]=now.length();
			int c=max(cs,cb);
			pre[j]=min(pre[j],c+1);
			sum = sum + pre[j];
		}
		/*
		cout<<words[0]<<" "<<1<<"\n";
		for(int j=1; j<N; j++){
			cout<<words[j]<<" "<<pre[j]<<"\n";
		}
		*/
		cout<<"Case #"<<i<<": "<<sum;
		if(i!=T)
			cout<<"\n";
	}
}