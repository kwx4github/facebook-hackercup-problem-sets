import java.util.*;
import java.io.*;

class Node {
    int value;
    Node[] num;
    public Node() {
        this.num = new Node[26];
        this.value = -1;
        for (int ii=0; ii<26; ii++) {
            this.num[ii] = null;
        }
    }
}

public class B {
    static Scanner scan = new Scanner(System.in);
    static BufferedReader brscan = new BufferedReader(new InputStreamReader(System.in));
    static Node root = new Node();
    private static void insert(char[] str) {
        Node p = root;
        int i;
        int len = str.length;
        for(i=0; i<len; i++){
            if(p.num[str[i]-'a'] == null) {
                p.num[str[i]-'a'] = new Node();
                p = p.num[str[i]-'a'];
            } else { 
                p = p.num[str[i]-'a'];
            }
            p.value++;
        }
    }

    private static int check(char[] word) {
        Node p = root;
        int i;
        //char[] result = new char[word.length];
        int last = 0;
        for(i=0; i<word.length; i++) {
            if(p.value == 0) {
                //System.out.println(new String(result));
                break;
            }
            p = p.num[word[i]-'a'];
            // result[i] = word[i];
            last=i+1;
        }
        return last;
    }
    public static void main(String[] args) throws IOException {
        int T = Integer.parseInt(brscan.readLine());
        for (int tt=0; tt<T; tt++) {
            root = new Node();
            int N = Integer.parseInt(brscan.readLine());
            int ans = 0;
            for (int nn=0; nn<N; nn++) {
                char[] now = brscan.readLine().toCharArray();
                insert(now);
                ans += check(now);
            }
            System.out.printf("Case #%d: %d\n", tt+1, ans);
        }
    }
}
