#include <bits/stdc++.h>

using namespace std;

struct node {
    node* c[26];
    node() { memset(c, NULL, sizeof c); }
    int insert(int i, const string& s) {
        if (i == s.size()) return s.size();
        int res = -1;
        if (c[s[i]-'a'] == NULL) {
            res = i+1;
            c[s[i]-'a'] = new node;
            c[s[i]-'a']->insert(i+1, s);
        } else {
            res = c[s[i]-'a']->insert(i+1, s);
        }
        return res;
    }
    ~node() {
        for (int i = 0; i < 26; i++) {
            if (c[i]) delete c[i];
        }
    }
};

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t; cin >> t;
    for (int ca = 1; ca <= t; ca++) {
        node* root = new node;
        int n; cin >> n;
        int res = 0;
        for (int i = 0; i < n; i++) {
            string s; cin >> s;
            res += root->insert(0, s);
        }
        cout << "Case #" << ca << ": " << res << '\n';
        delete root;
    }
	return 0;
}