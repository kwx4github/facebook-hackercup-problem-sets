#include <bits/stdc++.h>
#define iof(in, out) freopen(in, "r", stdin); freopen(out, "w", stdout);
#define f1(i, x) for(int i=0; i<x; i++)
#define L 26

int d[30000000], x;

void clear() {
	x = 0;
	f1(i, 30000000)
		d[i] = 0;
}

bool find(int v, int &root) {
	if (d[root+v] == 0) {
		d[root+v] = x+L;
		x += L;
		root = x;
		return true;
	} else {
		root = d[root+v];
		return false;
	}
}

int calc(char * s) {
	int root = 0, c = 0, l = strlen(s);
	f1(i, l)
		if(find(s[i]-'a', root) && c==0)
			c = i+1;
	return (c==0) ? l : c;
}

int analyze(int N) {
	clear();
	int r = 0;
	char s[1000010];
	f1(i, N) {
		scanf("%s", s);
		r += calc(s);
	}
	return r;
}

int main() {
	//iof("r1.p2.test.in.txt", "r1.p2.test.out.txt")
	iof("r1.p2.in.txt", "r1.p2.out.txt")
	int T = 0, N;
	scanf("%d", &T);
	f1(t, T) {
		scanf("%d", &N);
		printf("Case #%d: %d\n", t+1, analyze(N));
	}
	return 0;
}
