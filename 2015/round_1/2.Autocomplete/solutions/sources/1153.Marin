#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <ctime>
#include <iostream>
using namespace std;

const int MAXN = 1000010;
struct slovo {
	char letter;
	int ispod,end;
	
	vector <slovo*> v;
	slovo(){
		ispod = end = 0;
	}
	slovo(char a) {
		letter = a;
		ispod = end = 0;
	}
};

char s[MAXN];
int n,l;

int get(slovo *cvor,int poz) {
	//printf("%d %c %d",cvor -> v.size(),cvor -> letter, cvor -> ispod);
	if (poz == l) return 0;
	if (cvor -> ispod == 0) return 1;
	
	for (int i = 0;i < (int)cvor -> v.size(); i++) {
		char nl = cvor -> v[i] -> letter;
		//sprintf("%c novo %c trebam %d len\n",nl,s[poz],l);
		if (nl == s[poz]) 
			return 1 + get(cvor -> v[i],poz + 1);
	}
	return 1;
}

void add(slovo *cvor,int poz) {
	//printf("%c",cvor -> letter);
	if (poz == l) {
		cvor -> end = cvor -> ispod = 1;
		return;
	}
	
	bool nasao = 0;
	
	for (int i = 0;i < (int)cvor -> v.size(); i++) {
		char nl = cvor -> v[i] -> letter;
		if (nl == s[poz]) {
			nasao = 1;
			add(cvor -> v[i],poz + 1);
			cvor -> ispod += cvor -> v[i] -> ispod;
		}
	}
	
	if (nasao) return;
	//printf("stvaram novo\n");
	cvor -> v.push_back(new slovo(s[poz]));
	add(cvor -> v.back(),poz + 1);
	cvor -> ispod += cvor -> v.back() -> ispod;
}


void solve(int in) {
	slovo *root = new slovo;
	printf("Case #%d: ",in);
	scanf("%d",&n);
	int sol = 0;
	for (int i = 0;i < n; i++) {
		scanf("%s",s);
		l = strlen(s);
		sol += get(root,0);
		//printf("%d ",sol);
		//printf("\n");
		add(root,0);
		//printf(" ovo\n");
	}
	delete root;
	printf("%d\n",sol);
}



int main() {
	//double start = clock();
	int t;
	scanf("%d",&t);
	for (int i = 0;i < t; i++)
		solve(i + 1);
	//printf("%lf\n",(clock() - start)/(CLOCKS_PER_SEC));
	return 0;
}
