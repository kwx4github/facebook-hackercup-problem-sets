#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <string>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <set>
#include <utility>
#include <vector>
#include <algorithm>
#include <map>
#include <deque>
#include <iomanip>
#include <queue>
#include <iostream>
#include <ctime>
#include <fstream>
#include <functional>
#include <cstdlib>
#include <iterator>
#include <stack>

#define ll long long
#define pb push_back
#define mp make_pair
#define D  double
#define pi pair<ll,ll>
#define si set <pi>
#define F first
#define S second
#define forn(i,n) for (int(i)=0;(i)<(n);i++)
#define forr(i,x,y) for (int(i)=(x);(i)<=(y);i++)
#define ford(i,x,y) for (int(i)=(x);(i)>=(y);i--)
#define rev reverse
#define in insert
#define er erase
#define all(n) (n).begin(),(n).end()
#define graf vector<vector<pi> >
#define graf1 vector<vector<ll> >
#define sqr(a) (a)*(a)
#define file freopen("qwe.txt","r",stdin);freopen("QQ.txt","w",stdout);

const ll INF=1000000007;
const D cp=2*asin(1.0);
const D eps=1e-9;
const ll mod=1000000007;

using namespace std;

struct vertex {
	int next[100];
	bool leaf;
};

vertex t[1100000];
int sz;

void init_BOR()
{
    memset (t[0].next, 255, sizeof t[0].next);
    sz = 1;
}

ll add(string s)
{
    int cnt=0;
    bool ok=false;
    int v = 0;
	for (size_t i=0; i<s.length(); ++i) {
		char c = s[i]-'a';
		if (t[v].next[c] == -1)
		{
            if (!ok) {ok=true;cnt++;}
			memset (t[sz].next, 255, sizeof t[sz].next);
			t[v].next[c] = sz++;
		}
		v = t[v].next[c];
		if (!ok) cnt++;
	}
	t[v].leaf = true;
	return cnt;
}

int main()
{
    //file;
    cin.tie(NULL);
    ios_base::sync_with_stdio(false);
    int T;
    cin>>T;
    forn(Q,T)
    {
        int res=0;
        init_BOR();
        int n;
        cin>>n;
        forn(i,n)
        {
            string s;
            cin>>s;
            res+=add(s);
        }
        cout<<"Case #"<<Q+1<<": "<<res<<endl;
    }
    /*ifstream f("QQ.txt");
    vector<string> a,b;
    string s;
    while(getline(f,s))
    {
        a.pb(s);
    }
    f.close();
    ifstream w("output.txt");
    while(getline(w,s))
    {
        b.pb(s);
    }
    w.close();
    if (a.size()!=b.size()) cout<<"WA";
    else
    {
        bool ok=true;
        forn(i,a.size()) if (a[i]!=b[i]) cout<<a[i],ok=false;
        if (ok) cout<<"OK";
    }*/
    return 0;
}
