
#include <iostream>
#include <string>
#include <vector>
#define MAXC 1000000

using namespace std;

char c[MAXC];
vector <int> adj[MAXC];
int at;

void reset() {
    for (int i = 0; i < MAXC; i++)
        adj[i].clear();

    at = 1;
}

int update(const string &s) {
    int cur = 0;
    int added = 0;
    bool ambiguous = true;
    for (int i = 0; i < s.size(); i++) {
        if (ambiguous) {
            added++;

            bool found = false;
            for (int j : adj[cur]) {
                if (c[j] == s[i]) {
                    found = true;
                    cur = j;
                    break;
                }
            }
            if (!found)
                ambiguous = false;
        }

        if (!ambiguous) {
            adj[cur].push_back(at);
            c[at] = s[i];
            cur = at++;
        }
    }
    return added;
}

int solve() {
    reset();

    int N;
    cin >> N;
    int total = 0;
    for (int i = 0; i < N; i++) {
        string s;
        cin >> s;
        total += update(s);
    }
    return total;
}

int main() {
    int T;
    cin >> T;
    for (int t = 1; t <= T; t++) {
        cout << "Case #" << t << ": " << solve() << endl;
    }
}