#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int to[26][1001000];
string s;
int t, n;
int sz = 1;

int add(string &s) {
    int cur = 0;
    int ans = -1;
    for(int i = 0; i < sz(s); i++) {
        int c = s[i] - 'a';
        if(to[c][cur] == -1 && ans == -1) {
            ans = i + 1;
        }
        if(to[c][cur] == -1) to[c][cur] = sz++;
        cur = to[c][cur];
    }
    if(ans == -1) ans = sz(s);
    return ans;
}

void solve() {
    memset(to, -1, sizeof to);
    sz = 1;
    
    scanf("%d\n", &n);
    int ans = 0;
    for(int i = 0; i < n; i++) {
        getline(cin, s);
        ans += add(s);
    }
    
    printf("%d\n", ans);
}

int main(){
    
    scanf("%d", &t);
    
    for(int i= 1; i <= t; i++) {
        printf("Case #%d: ", i);
        solve();
    }
        
    return 0;
}
