#include <iostream>
#include <string>
#include <map>

using namespace std;

struct node {
  map<char, node*> M;
  node() : M() {}
  ~node() {
    for (map<char, node*>::iterator it = M.begin(); it != M.end(); ++it) delete it->second;
  }
};

int add(node* t, string& s) {
  int m = s.size();
  int r = 0;
  for (int i = 0; i < m; ++i) {
    if (t->M.find(s[i]) != t->M.end()) {
      ++r;
      t = t->M[s[i]];
    }
    else {
      node* p = new node;
      t->M[s[i]] = p;
      t = p;
    }
  }
  if (r != m) ++r;
  return r;
}

int main () {
  ios_base::sync_with_stdio(false);
  int c;
  cin >> c;
  for (int t = 1; t <= c; ++t) {
    int n;
    cin >> n;
    int r = 0;
    node* root = new node;
    for (int i = 0; i < n; ++i) {
      string s;
      cin >> s;
      r += add(root, s);
    }
    cout << "Case #" << t << ": " << r << endl;
    delete root;
  }
}