#include <iostream>
#include <cstring>

using namespace std;

#define MAXN ((int)(1e6+10))
#define MAXL 27

uint32_t tree[MAXN][MAXL];
int nodeCount;

int insertWord(char *word) {
    int pos = 0, atNode = 1, depth = 0, output = 0, chr;
    while (word[pos] != '\0') {
        chr = word[pos] - 'a';
        if (!tree[atNode][chr]) {
            nodeCount++;
            tree[atNode][chr] = nodeCount;
            output = output ? output : depth + 1;
        }

        atNode = tree[atNode][chr];
        depth++;
        pos++;
    }

    if (output == 0) {
        output = pos;
    }

    return output;
}

int main() {
    ios::sync_with_stdio(false);

    int t;
    cin >> t;
    char nextWord[MAXN];
    for (int i = 1; i <= t; i++) {
        memset(tree, 0, sizeof(tree));
        nodeCount = 1;

        int n, answer = 0;
        cin >> n;
        for (int j = 0; j < n; j++) {
            cin.ignore(10, '\n');
            cin >> nextWord;
            answer += insertWord(nextWord);
        }

        cout << "Case #" << i << ": " << answer << endl;
    }

    return 0;
}
