package Round1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Autocomplete {
    public static void main(String[] args) throws NumberFormatException,
            IOException {
        BufferedReader in = new BufferedReader(new FileReader(new File(
                "autocomplete.txt")));
        int t = Integer.parseInt(in.readLine());
        for (int _ = 1; _ <= t; _++) {
            int n = Integer.parseInt(in.readLine());
            Trie T = new Trie();
            int res = 0;
            for (int i = 0; i < n; i++) {
                String s = in.readLine();
                T.addWord(s);
                res += T.search(s);
            }
            System.out.println("Case #" + _ + ": " + res);
        }
    }
}

class Trie {
    int wordCount;
    Trie[] next;
    static final int INF = (int) 1e9;

    public Trie() {
        wordCount = 0;
        next = new Trie[26];
    }

    public void addWord(String s) {
      //  System.out.println(s.length());
        addWord(s, 0);
    }

    private void addWord(String s, int index) {
        Trie current = this;
        while (index != s.length()) {
            int edge = s.charAt(index) - 'a';
            if (current.next[edge] == null)
                current.next[edge] = new Trie();
            current = current.next[edge];
            current.wordCount++;
            index++;
        }
    }

    public int search(String s) {
        return search(s, 0);
    }

    private int search(String s, int index) {
        if (index == s.length())
            return 0;
        else {
            int edge = s.charAt(index) - 'a';
            if (wordCount == 1)
                return 0;
            else
                return 1 + next[edge].search(s, index + 1);
        }
    }
}