#include <bits/stdc++.h>

using namespace std;

#define sz(x) ((int) (x).size())

typedef long long ll;
typedef long double ld;

const int INF = 1000001000;
const ll INFL = 2000000000000001000;
int solve();


int main()
{
	srand(2317);
	cout.precision(10);
	cout.setf(ios::fixed);
	#ifdef LOCAL
	freopen("b.in", "r", stdin);
	#else
	#endif
	int tn = 1;
    cin >> tn;
	for (int i = 0; i < tn; ++i)
		solve();
	#ifdef LOCAL
	cerr << "Time: " << double(clock()) / CLOCKS_PER_SEC << '\n';
	#endif
}

const int maxc = 2000001;
int to[maxc][26];
int nodes;

int new_node()
{
    for (int i = 0; i < 26; ++i)
        to[nodes][i] = 0;
    return nodes++;
}

int test = 1;

int solve()
{
	nodes = 1;
    int root = new_node();
    int n;
    cin >> n;
    int res = 0;
    for (int i = 0; i < n; ++i)
    {
        string s;
        cin >> s;
        int cur = root;
        int old = nodes;
        for (auto c: s)
        {
            if (!to[cur][c - 'a'])
                to[cur][c - 'a'] = new_node();
            else
                ++res;
            cur = to[cur][c - 'a'];
        }
        res += (nodes != old);
    }
    cout << "Case " << test++ << ": " << res << '\n';
	return 0;
}
