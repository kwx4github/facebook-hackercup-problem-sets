#include <cassert>
#include <iostream>
using namespace std;

struct Trie {
  Trie* next[26];
  Trie() {
    for (int j = 0; j < 26; j++) {
      next[j] = NULL;
    }
  }
};

int insert(const string &s, Trie *node) {
  int prefixLength = 0;
  for (int i = 0; i < (int)s.size(); i++) {
    int k = s[i] - 'a';
    assert(k >= 0 && k < 26);
    if (!node->next[k]) {
      node->next[k] = new Trie;
    } else {
      prefixLength++;
    }
    node = node->next[k];
  }
  return prefixLength;
}

int main() {
  int tc;
  cin >> tc;
  for (int t = 0; t < tc; t++) {
    Trie root;
    int n;
    cin >> n;
    int result = 0;
    for (int i = 0; i < n; i++) {
      string s;
      cin >> s;
      result += min(insert(s, &root) + 1, (int) s.size());
    }
    cout << "Case #" << t + 1 << ": " << result << endl;
  }
  return 0;
}
