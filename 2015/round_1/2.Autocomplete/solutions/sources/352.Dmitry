#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <map>
#include <set>
#include <list>
#include <algorithm>
#include <cctype>
#include <queue>
#include <complex>
#include <functional>
#include <sstream>
#include <tuple>

using namespace std;

struct node
{
	vector<int> nxt;
};

node a[1000100];
int m, result;

int crnode()
{
	a[m].nxt = vector<int>(26, -1);
	return m++;
}

void solve(string s)
{
	int cur = 0;
	int any = 0;
	for (char c : s)
	{
		if (a[cur].nxt[c - 'a'] == -1)
		{
			a[cur].nxt[c - 'a'] = crnode();
			if (!any)
				result++;
			any = 1;
		}
		else
			result++;
		cur = a[cur].nxt[c - 'a'];
	}
}

void gen()
{
    cout << "100" << endl;
    for (int k = 0; k < 100; k++)
    {
        cout << "1410" << endl;
        for (int i = 1; i <= 1410; i++)
        {
            for (int j = 0; j < i; j++)
                cout << "a";
            cout << endl;
        }
    }
}

int main()
{
    /*freopen("input.txt", "w", stdout);
    gen();
    return 0;*/

    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int tn;
    cin >> tn;
    for (int tc = 0; tc < tn; tc++)
    {
    	int n;
    	cin >> n;
    	m = 0;
    	result = 0;
    	crnode();
    	for (int i = 0; i < n; i++)
    	{
    		string s;
    		cin >> s;
    		solve(s);
    	}
    	cout << "Case #" << tc + 1 << ": " << result << endl;
    }
    return 0;
}