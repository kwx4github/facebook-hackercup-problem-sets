#include <cstdio>
#include <iostream>
#include <string>
using namespace std;

#define ull unsigned long long int
#define idx(c) ((int)c - (int)'a')


string word;

struct node {
	// char val;
	node* children[26];
};
node* root;

node* newNode(void)
{
	node* temp = (node*) malloc(sizeof(node));
	for (int i = 0; i < 26; ++i)
		temp->children[i] = NULL;
	return temp;
}

ull insert(void)
{
	int sz = word.size(), i = 0;
	ull ans = 0;
	node* it = root;
	while (it->children[idx(word[i])] != NULL && i < sz)
	{
		ans++;
		it = it->children[idx(word[i])];
		i++;
	}
	if (i < sz)
		ans++;
	while (i < sz)
	{
		it->children[idx(word[i])] = newNode();
		it = it->children[idx(word[i])];
		i++;
	}
	return ans;
}

void clear(node* root)
{
	if (root == NULL)
		return;
	for (int i = 0; i < 26; ++i)
	{
		if (root->children[i] != NULL)
			clear(root->children[i]);
	}
	free(root);
}

int main(void)
{
	int t, n, i;
	ull ans;
	scanf("%d\n", &t);
	for (int tn = 1; tn <= t; ++tn)
	{
		ans = 0;
		root = newNode();
		scanf("%d\n", &n);
		for (i = 0; i < n; ++i)
		{
			getline(cin, word);
			ans += insert();
		}
		printf("Case #%d: %lld\n", tn, ans);
		// clear(root);
	}
	return 0;
}