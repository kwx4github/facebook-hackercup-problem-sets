#include<bits/stdc++.h>

using namespace std;


struct T_{
	
	struct T_ *Cl[27];
	int cnt;
};

struct T_ *Rt;

struct T_ * mk_node(void)
{
	struct T_ *temp = new struct T_;
	int i;
	
	for(i=0;i<27;i++)
		temp->Cl[i] = NULL;
	temp->cnt = 0;
	
	return temp;
}

void add_wrd(string S)
{
	int L = S.length();
	int i;
	struct T_ *temp;
	temp = Rt;
	for(i=0;i<L;i++)
	{
	
		int curlet = S[i] - 'a';
		temp->cnt = temp->cnt+1;
		if(temp->Cl[curlet] == NULL)
		{
			temp->Cl[curlet] = mk_node();
		}
		temp = temp->Cl[curlet];
	}
	temp->cnt++;
}

int srh_wrd(string S)
{
	int L = S.length();
	int i;
	struct T_ *temp = Rt;
	for(i=0;i<L;i++)
	{
		int curlet = S[i] -'a';
	
		if(temp->cnt == 1)
		{
			if(i)
			return i;
			else
			return 1;
		}
		else
		temp = temp->Cl[curlet];
	}
	return i;
}

void solve()
{
	Rt = mk_node();
	string S;
	int N;
	cin>>N;
	int ans = 0;
	for(int i=0;i<N;i++)
	{
		cin>>S;
		add_wrd(S);
		ans += srh_wrd(S);
	}
	cout<<ans<<endl;
	
}




int main()
{
	int T;
	ios::sync_with_stdio(false);
	cin>>T;
	for(int i=1;i<=T;i++)
	{
		cout<<"Case #"<<i<<": ";
		solve();
		
	}
	return 0;
}
