#include<stdio.h>
#include<string.h>
char words[1000005];
struct node
{
	int value,end;
	struct node *children[26];
	
};
struct trie
{
	int count;
	struct node *root;
	
};
struct node* newnode()
{
	node *n=new node;
	for(int i=0;i<26;++i)
	{
		n->children[i]=NULL;
	}
	
	
	return n;
}
void initialize(struct trie *t)
{
	t->root=newnode();
	t->count=0;
}

void insert( struct trie *t, char val[])
{
	struct node *crawl=new node;
	crawl=t->root;
	int len=strlen(val);
	
	int flag=0;
	for(int i=0;i<len;++i)
	{
		//int index=(int)val[i]-(int)
		if(!crawl->children[val[i]-'a'])
		{
			crawl->children[val[i]-'a']=newnode();
			if(flag==0)
			{
				//crawl->children[val[i]-'a']->end=1;
				t->count++;
				flag=1;
				}
			
			
			
		}
		if(flag==0)
		t->count++;
		
		crawl=crawl->children[val[i]-'a'];
	}
	
	
}\
int main()
{
	
	int t,n;
	
	freopen("autocomplete.txt","r",stdin);
	freopen("c.out","w",stdout);
	int a,b,k,cnt1,cnt=1;
	scanf("%d",&t);
	int i;
	while(cnt<=t)
	{
		struct trie t1;
		initialize(&t1);
		cnt1=0;
		scanf("%d",&n);
		for(i=0;i<n;++i)
		{
			scanf("%s",&words);
			insert(&t1,words);
		}
		printf("Case #%d: %d\n",cnt,t1.count);
		cnt++;
		
	}
	return 0;
}
