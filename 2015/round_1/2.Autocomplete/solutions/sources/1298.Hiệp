#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long

#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define sz(a) ((int)(a).size())
#define ms(a,x) memset(a, x, sizeof(a))
#define ld long double
#define Repd(i, n) for(int i = (n) - 1; i >= 0; --i)

using namespace std;

struct node {
	node* a[26];
	node() {
		for (int i = 0; i < 26; ++i)
			a[i] = 0;
	}
};

node* root;

int them(string s) {
	node* p = root;
	int kq = 0, l = s.length();
	bool asdf = 0;
	for (int i = 0; i < l; ++i) {
		if (p->a[s[i] - 97]) {
			p = p->a[s[i] - 97];
			kq++;
		} else {
			p->a[s[i] - 97] = new node;
			p = p->a[s[i] - 97];
			if (!asdf) {
				kq++;
				asdf = 1;
			}
		}
	}
	return kq;
}

void solve(int test) {
	cout << "Case #" << test << ": ";
	root = new node;
	int n, kq;
	string s;
	cin >> n;
	kq = 0;
	for (int i = 1; i <= n; ++i) {
		cin >> s;
		int tmp = them(s);
//		cout << tmp << "\n";
		kq += tmp;
	}
	cout << kq << "\n";
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("autocomplete.txt", "r", stdin);
	freopen("output2.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	for (int i = 1; i <= t; ++i)
		solve(i);
}
