#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <cstdlib>
using namespace std;
#define CHARSET 26

const int MAX_NODE = 10000000;

struct trieNode{
    int ch[CHARSET];
};
trieNode trie[MAX_NODE];
int ptr;
int ans;

int T,N;
char str[MAX_NODE];


void init(){
    ptr = ans = 0;
    for(int i=0;i<CHARSET;i++){
        trie[0].ch[i] = -1;
    }
}

int newNode(){
    ptr++;
    for(int i=0;i<CHARSET;i++){
        trie[ptr].ch[i] = -1;
    }
    return ptr;
}

void insert(const char* str){
    bool hasAdded = false;
    int len = strlen(str);
    int rt = 0;
    for(int i=0;i<len;i++){
        int id = str[i] - 'a';
        if( trie[rt].ch[id]==-1 ){
            trie[rt].ch[id] = newNode();
            if( !hasAdded ){
                ans = ans + i + 1;
                hasAdded = true;
//                printf("+%d\n",i+1);
            }
        }
        rt = trie[rt].ch[id];
    }
    if(!hasAdded){
        ans = ans + len;
//        printf("+%d\n",len);
    }
}

int main(){
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);
    scanf("%d",&T);
    for(int cases = 1;cases <= T ; cases++){
        scanf("%d",&N);
        init();
        for(int i=0;i<N;i++){
            scanf("%s",str);
            insert(str);
        }
        printf("Case #%d: %d\n",cases,ans);
    }
    return 0;
}
