#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdio>
#include<vector>
#include<cassert>
#include<cstring>
#include<cstdlib>
#include<utility>
#include<iostream>
#include<algorithm>
#include<functional>
#define REP(x,y,z) for(int x=y;x<=z;x++)
#define FORD(x,y,z) for(int x=y;x>=z;x--)
#define MSET(x,y) memset(x,y,sizeof(x))
#define FOR(x,y) for(__typeof(y.begin()) x=y.begin();x!=y.end();x++)
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define SZ size()
#define M 1000005
using namespace std;
typedef long long LL;
int t,n,len,ans,id,nxt[M][26],root;
char buf[M];
int new_node()
{
	MSET(nxt[id], -1);
	return id++;
}
int main()
{
	int cur;
	bool flg;
	scanf("%d",&t);
	REP(tt,1,t)
	{
		id = 0;
		ans = 0;
		root = new_node();
		scanf("%d",&n);
		
		REP(i,1,n)
		{
			flg = false;
			cur = root;
			scanf("%s",buf);
			len = strlen(buf);

			REP(j,0,len-1)
			{
				if( nxt[cur][buf[j]-'a'] == -1 )
				{
					cur = nxt[cur][buf[j]-'a'] = new_node();
					if(!flg)
					{
						flg = true;
						ans++;
					}
				}
				else
				{
					ans++;
					cur = nxt[cur][buf[j]-'a'];
				}
			}
		}
		printf("Case #%d: %d\n",tt,ans);
	}
	return 0;
}

