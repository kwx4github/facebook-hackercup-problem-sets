#include<bits/stdc++.h>
#define ll long long
using namespace std; 
struct node
{ 
    char data; 
    node *child[26];
    node()
    {
        for (ll i = 0; i < 26; i++)
        {
            child[i] = NULL;
        }
    }
};
struct trie
{ 
        node *root;
        node *new_node(ll data) 
        {   
            node *Q = new node; 
            Q->data = data; 
            return Q; 
        }
        void add(string S) 
        { 
            node *cur = root; 
            for (ll i = 0; i < S.length(); i++)
            {
                if (!cur->child[S[i] - 'a']) 
                    cur->child[S[i] - 'a'] = new_node(S[i]);
                cur = cur->child[S[i] - 'a']; 
            }
        }
        string check(node *cur, string S, ll i) 
        { 
            if (cur) 
            {  
                if (i < S.length()) 
                {
                    return S[i] + check(cur->child[S[i] - 'a'], S, i + 1); 
                }
                else
                {
                	return "";
                }
            }
            else
            {
            	return "";
            }
        }
        string checkroot(string S) 
        { 
            if (root && S.length() > 0) 
                return S[0] + check(root->child[S[0] - 'a'],S,1); 
            else 
                return "";
        }
        
        trie() 
        { 
            root = new_node(0);
        }
        
};
 
int main() 
{ 
	freopen("autocomplete.txt","r",stdin);
	freopen("op.txt","w",stdout);

	ll t,n,ans,sz,temp,cnt;
	string v;
	cin>>t;
	string s;
	cnt = 1;
	
	while(t--)
	{
		trie m;
		cin>>n;
		ans = 0;
		while(n--)
		{
			cin>>s;
			v = m.checkroot(s);
			temp = (v.length()<s.length())?v.length():s.length();
			ans+=temp;
			m.add(s);
		}
		cout<<"Case #"<<cnt++<<": "<<ans<<"\n";
	}
	
	
    return 0;
}
