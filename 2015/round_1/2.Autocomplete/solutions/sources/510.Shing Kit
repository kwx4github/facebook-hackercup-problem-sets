#include <cstdio>
#include <cstring>
#include <cctype>

#define N 1000005

struct TrieNode {
	TrieNode* l[26];
	bool is_word;

	TrieNode() {
		memset(l, NULL, sizeof l);
		is_word = 0;
	}
} *root;

const int offset = 97;

TrieNode* dict[N];
char s[N];

void free(TrieNode* p) {
	for (int i = 0; i < 26; i++)
		if (p->l[i])
			free(p->l[i]);
	delete p;
}

int add(const char* s) {
	TrieNode* p;
	int i, ret;

	for (p = root, i = ret = 0; *s; s++, i++) {
		if (!p->l[*s-offset]) {
			p->l[*s-offset] = new TrieNode();
			if (!ret)
				ret = i + 1;
		}
		p = p->l[*s-offset];
	}

	p->is_word = true;
	if (!ret)
		ret = i;

	return ret;
}

void run(int case_no) {
	int n, ans = 0;

	root = new TrieNode();

	scanf("%d", &n);
	getchar();
	while (n--) {
		gets(s);
		ans += add(s);
	}

	free(root);

	printf("Case #%d: %d\n", case_no, ans);
}

int main() {
	int t;

	scanf("%d", &t);
	for (int case_no = 1; case_no <= t; case_no++)
		run(case_no);

	return 0;
}
