#include <bits/stdc++.h>

using namespace std;

#define M 1000100

struct Node {
	map<char, Node*> to;
} trie[M];

int trieSize;
Node *root;

Node *nextNode() {
	trie[trieSize] = Node();
	return trie + trieSize++;
}

void iniTrie() {
	trieSize = 0;
	root = nextNode();
}

int add(const string &s) {
	Node *cur = root;
	int ans = 0;
	bool branched = false;
	for (char c : s) {
		if (!branched)
			++ans;

		if (cur->to[c] == nullptr) {
			if (!branched) {
				branched = true;
			}
			cur->to[c] = nextNode();
		}

		cur = cur->to[c];
	}
	return ans;
}

void kill() {
	int n, ans = 0;
	iniTrie();
	cin >> n;
	for (int i = 0; i < n; ++i) {
		string s;
		cin >> s;
		ans += add(s);
	}
	cout << ans << "\n";
}

int main() {
	int t;
	cin >> t;
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		kill();
	}
	return 0;
}