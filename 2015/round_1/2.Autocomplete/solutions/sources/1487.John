#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<iostream>
#include<algorithm>
#include<queue>
#include<stack>
#include<vector>
#include<map>
#include<set>
#include<deque>
#include<bitset>
#include<time.h>
#define ll __int64
#define inf 0x7FFFFFFF
#pragma comment(linker, "/STACK:102400000,102400000")
using namespace std;
struct node
{
    int num;
    int next[26];
}p[1000005];
char ch[1000005];
int now;
void init()
{
    memset(p,-1,sizeof(p));
    p[now].num=0;
    now++;
}
void add()
{
    int nowHere=0;
    int len=strlen(ch);
    p[0].num++;
    for (int i=0; i<len; i++)
    {
        if (p[nowHere].next[ch[i]-'a']!=-1)
        {
            nowHere=p[nowHere].next[ch[i]-'a'];
            p[nowHere].num++;
            continue;
        }
        p[nowHere].next[ch[i]-'a']=now;
        nowHere=p[nowHere].next[ch[i]-'a'];
        p[nowHere].num=1;
        now++;
    }
}
int find()
{
    int nowHere=0;
    int len=strlen(ch);
    for (int i=0; i<len; i++)
    {
        nowHere=p[nowHere].next[ch[i]-'a'];
        if (p[nowHere].num==1)
            return i+1;
    }
    return len;
}
int main()
{
    int i,j,k;
    int n,m,t;
    //srand((unsigned)time(NULL));//int data=rand()%10000+1;
    freopen("autocomplete.txt","r",stdin);freopen("B-output.txt","w",stdout);
    scanf("%d",&t);for(int tcase=1;tcase<=t;tcase++)
    //while(scanf("%d",&n)!=EOF)
    {
        scanf("%d",&n);
        int ans=0;
        now=0;//[0,now)
        init();
        while (n--)
        {
            scanf("%s",ch);
            add();
            ans+=find();
        }
        printf("Case #%d: %d\n",tcase,ans);
    }
}
