#include <iostream>
#include <map>
#include <string>
// #include <cstdlib>
using namespace std;

typedef long long ll;

const int smax = 1E6;
struct node: map<char, node *> {};
node m[smax];
int nm;

int insert(node *p, string w) {
	int i, r = 0;

	for (i = 0; i < w.size(); i++) {
		node *&p1 = (*p)[w[i]];

		if (p1) {
			r++;
			if (i + 1 == w.size()) return r;
		} else {
			p1 = m + nm++;
		}
		p = p1;
	}

	return r + 1;
}

int main() {
	int nt, it;

	cin >> nt;
	for (it = 1; it <= nt; it++) {
		int n, i;
		node root;
		ll r = 0;

		cin >> n;

		for (i = 0; i < n; i++) {
			string w;
			int t;

			// if (n == 100000) {
			// 	// for (int j = 0; j < 10; j++) w += 'a' + rand() % 26;
			// 	w = string(9, 'a') + char('a' + i % 2);
			// } else {
				cin >> w;
			// }
			t = insert(&root, w);
			// if (i < 10) cout << w << ' ' << t << endl;
			r += t;
		}

		cout << "Case #" << it << ": ";
		cout << r << '\n';
		// cout << nm << endl;

		for (i = 0; i < nm; i++) m[i].clear();
		nm = 0;
	}
}
