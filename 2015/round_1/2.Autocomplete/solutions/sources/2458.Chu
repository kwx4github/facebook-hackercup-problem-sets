package autocomplete;

import java.io.*;
import java.math.*;
import java.lang.*;
import java.util.*;
import java.util.Arrays.*;
import java.io.BufferedReader;

public class Happy {

    public static void main(String[] args) {
        new Happy().haha();
    }

    public void haha() {
        BufferedReader in = null;
        BufferedWriter out = null;

        try{
            in = new BufferedReader(new FileReader("autocomplete.txt"));
            out = new BufferedWriter(new FileWriter("out.txt"));

            int T = Integer.parseInt(in.readLine());
            System.out.println("T="+T);
            for(int i=0;i<T;i++){
                System.out.print("Case #"+(i+1)+":");
                out.write("Case #"+(i+1)+":");
                long ok = 0;

                //String[] line = in.readLine().split(" ");
                int N = Integer.parseInt(in.readLine());
                Node root = new Node('a');
                for(int a=0;a<N;a++){
                    String word = in.readLine();
                    Node node = root;
                    for(int b=0;b<word.length();b++){
                        char c = word.charAt(b);
                        ok++;
                        int index = indexOfNode(node,c);
                        if(index==-1){
                            break;
                        } else {
                            node = node.ns.get(index);
                        }
                    }
                    addWord(root,word);
                }
                System.out.print(" "+ok+"\n");
                out.write(" "+ok+"\n");
            }

            in.close();
            out.close();
        }catch(Exception e){
            e.printStackTrace();
            try{
                in.close();
                out.close();
            }catch(Exception ee){
                ee.printStackTrace();
            }
        }
        System.out.print("Ha Ha :D\n");
    }

    class Node{
        public Node(char c){
            this.c = c;
            ns = new ArrayList<Node>();
        }
        char c;
        ArrayList<Node> ns;
    }

    int indexOfNode(Node n, char c){
        int ok = -1;
        for(int i=0;i<n.ns.size();i++){
            Node tmp = n.ns.get(i);
            if(tmp.c==c){
                ok = i;
                break;
            }
        }
        return ok;
    }

    void addWord(Node root, String word){
        Node node = root;
        for(int i=0;i<word.length();i++){
            char c = word.charAt(i);
            int inx = indexOfNode(node,c);
            if(inx==-1){
                Node tmp = new Node(c);
                node.ns.add(tmp);
                node = tmp;
            } else {
                node = node.ns.get(inx);
            }
        }
    }
}
