#include<fstream>
#include<string>

using namespace std;

struct node
{
	int len;
	node* list[26];
	node()
	{
		len=0;
		for(int i=0;i<26;i++)
		{
			list[i]=NULL;
		}
	}	
};

struct trie
{
	node *root;
	trie()
	{
		root=new node();
	}	
};

int insert(string s,trie* tries)
{
	node* current=tries->root;
	int val=0;
	for(int i=0;i<s.length();i++)
	{
		if(!current->list[s[i]-'a'])
		{
			node* newNode=new node();
			//newNode->list[i]=s[i];
			
			current->list[s[i]-'a']=newNode;
			newNode->len=current->len+1;
			if(val==0)
			val=newNode->len;	
		}
		current=current->list[s[i]-'a'];
	}
	if(val!=0)
	return val;
	else return s.length();
}

int main()
{
	ofstream cout;
	ifstream cin;
	cin.open("autocomplete.txt");
	cout.open("autocomplete_output.txt");
	int t;
 	cin>>t;
 	int n;
 	string s;
 	int count;
 	for(int i=1;i<=t;i++)
 	{
 		count=0;
 		cin>>n;
 		trie *tries=new trie();
 		for(int j=0;j<n;j++)
 		{
 			cin>>s;
 			int l=0;
		    // Construct trie
		    l=insert(s,tries);
		    count=count+l;
 		}
 		cout<<"Case #"<<i<<": "<<count<<endl;
 	}
    return 0;
}
