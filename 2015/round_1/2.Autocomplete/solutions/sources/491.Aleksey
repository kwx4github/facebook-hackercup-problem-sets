#include <iostream>
#include <cstdio>
#include <set>
#include <string>

using namespace std;

const int nn = 1 << 24;
int d[nn];

int pref(const string& s, const string& with) {
    int res = min(s.length(), with.length() + 1);
    for (int i = 0; i < min(s.length(), with.length()); ++i)
        if (s[i] != with[i])
            res = min(res, i + 1);
    return res;
}

void solve() {
    int n;
    cin >> n;
    
    set<string> ss;
    long long res = 0;
    
    for (int i = 0; i < n; ++i) {
        string s; cin >> s;
        set<string>::iterator it = ss.lower_bound(s);
        
        string next = ""; if (it != ss.end()) next = *it;
        if (it != ss.begin()) --it;
        string prev = ""; if (it != ss.end()) prev = *it;
        
        res += max(pref(s, prev), pref(s, next));
        ss.insert(s);
    }
    
    static int test_id;
    cout << "Case #" << ++test_id << ": " << res << endl;
    cerr << "Case #" << test_id << ": " << res << endl;
}

int main() {
    for (int x = 2; x < nn; ++x) if (d[x] == 0) {
        for (int j = x; j < nn; j += x) d[j] = x;
    }
    int t;
    cin >> t;
    while (t --> 0) solve();
    return 0;
}