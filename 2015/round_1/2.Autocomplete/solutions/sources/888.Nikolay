#include <cstdio>
#include <iostream>
#include <ctime>
#include <cassert>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <vector>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <bitset>
#include <stack>
#define puba push_back
#define mapa make_pair
#define ff first
#define ss second
#define bend(_x) (_x).begin(), (_x).end()
#define szof(_x) ((int) (_x).size())

using namespace std;
typedef long long LL;

struct vertex {
    int to[26];
    vertex () {
        memset(to, -1, sizeof to);
    }
};

vector <vertex> bor;
vertex empty_v;

int main() {    
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);

    int t;
    cin >> t;
    for (int i = 0; i < t; ++i) {
        bor.clear();
        bor.puba(empty_v);
        int ans = 0;
        int n;
        cin >> n;
        for (int j = 0; j < n; ++j) {
            string s;
            cin >> s;
            int now_pos = 0;
            bool flag = false;
            for (int k = 0; k < szof(s); ++k) {
                if (bor[now_pos].to[s[k] - 'a'] == -1) {
                    if (!flag) {
                        flag = true;
                        ans += k + 1;
                    }
                    bor[now_pos].to[s[k] - 'a'] = szof(bor);
                    bor.puba(empty_v);
                }
                now_pos = bor[now_pos].to[s[k] - 'a'];
            }
            if (!flag) {
                ans += szof(s);
            }
        }
        cout << "Case #" << i + 1 << ": " << ans << endl;
    }

    return 0;
}