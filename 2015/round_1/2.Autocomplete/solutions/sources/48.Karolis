#include <cstdio>
#include <vector>
#include <algorithm>
#include <string>

using namespace std;

struct elem {
	bool end;
	int next[26];
	elem() {
		end = false;
		fill(next, next + 26, -1);
	}
};

class trie {
	private:
		vector <elem> e;
	public:
		trie() {
			e.push_back(elem());
		}
		int add(string word) {
			int now_on = 0, ans = 0;
			
			for (int i = 0; i < (int)word.size(); i++) {
				if (e[now_on].next[word[i] - 'a'] != -1) {
					ans++;
				} else {
					e.push_back(elem());
					e[now_on].next[word[i] - 'a'] = e.size() - 1;
				}
				now_on = e[now_on].next[word[i] - 'a'];
			}
			
			return min(ans + 1, (int)word.size());
		}
		void clear() {
			e.clear();
			e.push_back(elem());
		}
};

char str[1100000];

int main() {
	trie t;
	int T, n, ans; 
	scanf("%d", &T);
	for (int i = 1; i <= T; i++) {
		scanf("%d", &n);
		for (int j = 0; j < n; j++) {
			scanf(" %s", str);
			ans += t.add(str);
		}
		printf("Case #%d: %d\n", i, ans);
		t.clear();
		ans = 0;
	}
}
