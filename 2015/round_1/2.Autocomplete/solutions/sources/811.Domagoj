#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int MAX = 1<<20;

struct node {
  node *p[26];
  node () { memset(p, 0, sizeof p); };
} *root;

char s[MAX];
int rje;

void Pocisti(node *a)
{
  for (int i=0; i<26; i++)
    if (a->p[i]) {
  //    printf("NE\n");
      Pocisti(a->p[i]);
//      printf("AHA\n");
    }

  delete a;
}

void Stavi(char s[MAX])
{
  int l = (int) strlen(s);

  node *x = root;
  for (int i=0, da=0; i<l; i++) {
    int tmp = s[i] - 'a';
    if (!(x->p[tmp])) {
      x->p[tmp] = new node;
      x = x->p[tmp];
      if (!da) {
        rje++;
        da = 1;
      }
    }
    else {
      x = x->p[tmp];
      rje++;
    }
  }
}

int main()
{
  int brt;

  scanf("%d", &brt);

  for (int t=1; t<=brt; t++) {
    int n;

    scanf("%d", &n);
  
    root = new node;
    rje = 0;

    for (int i=0; i<n; i++) {
      scanf("%s", s);
      Stavi(s);
    }

    printf("Case #%d: %d\n", t, rje);
    Pocisti(root);
    //printf("DONE\n");
  }


  return 0;
}
