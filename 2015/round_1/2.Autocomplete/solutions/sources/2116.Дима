#include <stdio.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <math.h>
#include <set>
#pragma warning(disable:4996)
using namespace std;
#define sf(x) scanf("%d", &x)
#define pf(x) printf("%d", x)
#define sf2(x, y) scanf("%d%d", &x, &y)
#define sf3(x, y, z) scanf("%d%d%d", &x, &y, &z)
#define pf2(x, y) printf("%d %d\n", x ,y)
#define sfl(x) scanf("%lf", &x)
#define pfl(x) printf("%lf", x)
#define pb(x) push_back(x)
#define INF 1000000000
typedef long long ll;
typedef pair<int, int> pii;

#define max 10000001


/**/
int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	
	int T;
	sf(T);
	for (int h = 1; h <= T; h++) {
		set<string> str;
		int res = 0;
		int n;
		sf(n);
		for (int k = 0; k < n; k++) {
			string s;
			
			cin >> s;
			if (str.empty()) {
				res++;
				str.insert(s);
				continue;
			}
			set<string>::iterator it;
			it = str.lower_bound(s);
			if (it == str.end()) {
				it--;
			}
			if (str.size() == 1 || it == str.begin()) {
				int i;
				for (i = 0; i < min(it->length(), s.length()); i++) {
					if ((*it)[i] != s[i]) break;
				}
				//if (i == it->length()) i++;
				if (i == s.length()) i--;
				res += i+1;
				str.insert(s);
				continue;
			}
			string s1 = *it;
			it--;
			int i;
			for (i = 0; i < min(it->length(), s.length()); i++) {
				if ((*it)[i] != s[i]) break;
			}
			int j;
			for (j = 0; j < min(s1.length(), s.length()); j++) {
				if (s1[j] != s[j]) break;
			}
			if (i == s.length()) i--;
			if (j == s.length()) j--;
			if (i>j) {
				//if (i == it->length()) i++;
				res += i+1;
			}
			else if (i < j) {
				//if (j == s1.length()) j++;
				res += j+1;
			}
			else {
				//if (i == it->length() || j == s1.length()) i++;
				res += i+1;
			}
			str.insert(s);
		}
		printf("Case #%d: %d\n", h, res);
	}
}