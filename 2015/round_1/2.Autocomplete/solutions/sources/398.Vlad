import java.io.*;
import java.util.Locale;
import java.util.StringTokenizer;

public class ProblemB {

    public static void main(String[] args) throws Exception {
        Locale.setDefault(Locale.UK);
        new ProblemB();
    }

    private BufferedReader in = null;
    private PrintWriter out = null;
    private StringTokenizer tok = new StringTokenizer("");
    private String fileName = "#IOtxt";

    public ProblemB() throws Exception {
        init();
        solve();
        in.close();
        out.close();
    }

    private void solve() throws Exception {
        int T = nextInt();
        for (int ii = 1; ii <= T; ii++) {
            out.print("Case #" + ii + ": ");
            Node head = new Node();
            int ans = 0;
            int n = nextInt();
            for (int i = 0; i < n; i++) {
                boolean ok = false;
                char[] a = nextToken().toCharArray();
                Node node = head;
                int len = 0;
                for (char c : a) {
                    if (!ok && (node.next == null || node.next[c - 'a'] == null)) {
                        ok = true;
                        ans += len + 1;
                    }
                    if (node.next == null) {
                        node.next = new Node[26];
                    }
                    if (node.next[c - 'a'] == null) {
                        node.next[c - 'a'] = new Node();
                    }
                    node = node.next[c - 'a'];
                    len++;
                }
                if (!ok) {
                    ans += a.length;
                }
            }
            out.println(ans);
        }
    }

    class Node {
        Node[] next;
    }

    private void init() throws FileNotFoundException {
        if (fileName.equals("#Console")) {
            in = new BufferedReader(new InputStreamReader(System.in));
            out = new PrintWriter(System.out);
        } else if (fileName.equals("#IOtxt")) {
            in = new BufferedReader(new FileReader("input.txt"));
            out = new PrintWriter("output.txt");
        } else {
            in = new BufferedReader(new FileReader(fileName + ".in"));
            out = new PrintWriter(fileName + ".out");
        }
    }


    private int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }

    private long nextLong() throws IOException {
        return Long.parseLong(nextToken());
    }


    private String nextToken() throws IOException {
        while (!tok.hasMoreTokens()) {
            String s = in.readLine();
            if (s == null) {
                return null;
            }
            tok = new StringTokenizer(s);
        }
        return tok.nextToken();
    }

}
            