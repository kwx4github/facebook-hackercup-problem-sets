#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <bits/stdc++.h>
//#include <unordered_set>
//#include <unordered_map>
//#include "windows.h"
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(i,n) for(int i = 0; i < (int)(n); ++ i)
#define for1(i,n) for(int i = 1; i <= (int)(n); ++ i)
#define fore(i,a,b) for(int i = (int)(a); i <= (int)(b); ++ i)
#define ford(i,n) for(int i = (int)(n)-1; i >= 0; -- i)
#define ford1(i,n) for(int i = (int)(n); i >= 1; -- i)
#define fored(i,a,b) for(int i = (int)(b); i >= (int)(a);--i)
#define mp make_pair 
#define pb push_back
#define sz(v) ((int)((v).size()))
#define all(v) (v).begin(), (v).end()
#define FOR(i, n) for (int i = 0; i < (n); ++i)
//#define FORE(it,c) for(__typeof(c).begin() it = (c).begin(); it!=(c).end(); ++it)
//#define fi first
//#define se second

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double LD;
typedef long long i64;
typedef unsigned long long u64;
typedef long double ld;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;
typedef vector<pii> vpi;
typedef vector<ld> vd;
typedef pair<ld,ld> pdd;
typedef vector<pdd> vpd;

const int N = 1000000+5;
int a[ N ][ 26 ];
char s[ N ];
int top;
int adding(){
	int p = strlen(s);
	int r = 0;
	int re = 0;
	forn(i,p){
		char c = s[i]-'a';
		if(!a[r][c]){
			if(!re)
				re = i+1;
			a[r][c] = ++top;
		}
		r = a[r][c];
	}
	if(!re)
		re = p;
	return re;
}
void solve(){
	int T;
	scanf("%d", &T);
	for1(tnum, T){
		memset(a, 0, sizeof a);
		top = 0;
		int n;
		scanf("%d", &n);
		LL res = 0;
//		printf("%d\n", n);
		forn(i,n){
			scanf("%s", s);
//			printf("%s\n", s);
			res+=adding();
		}
		printf("Case #%d: %lld\n", tnum, res);
	}
}

void testgen(){
	FILE * f = fopen("input.txt", "w");
	int T = 10;
	fprintf(f, "%d\n", T);
	forn(te,T){
		srand(time(NULL));	
		int n = 50000;
		fprintf(f, "%d\n", n);
		forn(j,n){
			forn(i,20)
				fprintf(f, "%c", rand()%2+'a');
			fprintf(f, "\n");
		}
//		Sleep(3000);
	}
//	fprintf(f, "%d\n", n);

	fclose(f);
}
int main() {
#ifdef LOCAL
//	testgen();
	freopen("autocomplete.txt", "r", stdin);
//	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#define task ""
//	freopen(task".in", "r", stdin);
//	freopen(task".out", "w", stdout);
#endif

	cout<<fixed;
	cout.precision(15);
	cerr<<fixed;
	cerr.precision(12);

	solve();

#ifdef LOCAL
	cerr<<"Execution time = "<<clock()/1000.0<<"ms\n";
#endif
	return 0;
}