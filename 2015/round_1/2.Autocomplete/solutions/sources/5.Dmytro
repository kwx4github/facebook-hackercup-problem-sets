#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <queue>
#include <set>
#include <map>
#include <bitset>
#include <cmath>
#include <ctime>
#pragma comment (linker, "/STACK:256000000")

using namespace std;

struct Node {
	Node *a[26];
	int cnt;
	Node() {
		cnt = 0;
		for (int i = 0; i < 26; ++i) {
			a[i] = NULL;
		}
	}
};

void add(const string &s, Node *root) {
	Node *current = root;
	for (int i = 0; i < s.size(); ++i) {
		if (current->a[s[i] - 'a'] == NULL) {
			current->a[s[i] - 'a'] = new Node();
		}
		++current->cnt;
		current = current->a[s[i] - 'a'];
	}
	++current->cnt;
}

void cleanUp(Node *root) {
	for (int i = 0; i < 26; ++i) {
		if (root->a[i] != NULL) {
			cleanUp(root->a[i]);
		}
	}
	delete root;
}

int calc(const string &s, Node *root) {
	Node *current = root;
	for (int i = 0; i < s.size(); ++i) {
		if (current->cnt == 1) {
			return max(1, i);
		}
		current = current->a[s[i] - 'a'];
	}
	return s.size();
}

void solve(int test) {
	int n;
	cin >> n;
	int total = 0;
	Node *root = new Node();
	for (int i = 0; i < n; ++i) {
		string s;
		cin >> s;
		add(s, root);
		total += calc(s, root);
	}
	printf("Case #%d: %d\n", test, total);
	cleanUp(root);
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int t;
	cin >> t;
	for (int i = 1; i <= t; ++i) {
		solve(i);
		cerr << i << ": " << clock() << endl;
	}

	return 0;
}