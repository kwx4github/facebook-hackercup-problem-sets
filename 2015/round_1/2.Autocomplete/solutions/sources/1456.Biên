#include <bits/stdc++.h>

using namespace std;

struct Trie
{
    Trie()
    {
        memset(ch, 0, sizeof(ch));
    }

    Trie *ch[26];
} tr;

int n, ans;
string s;
vector< pair<Trie *, int> > q;

void reset()
{
    Trie *p = &tr;
    while (!q.empty()) q.pop_back();
    q.push_back(make_pair(p, 0));
    int i;
    while (!q.empty())
    {
        p = q.back().first, i = q.back().second;
        q.pop_back();
        if (i < 26)
        {
            q.push_back(make_pair(p, i+1));
            if (p->ch[i] != NULL) q.push_back(make_pair(p->ch[i], 0));
        }
        else if (p != &tr) delete p;
    }
    memset(tr.ch, 0, sizeof(tr.ch));
}

void insert(string &st)
{
    Trie *p = &tr;
    int t = 0;
    for (int i = 0; i < st.size(); ++i)
    {
        if (p->ch[st[i]-'a'] == NULL)
        {
            p->ch[st[i]-'a'] = new Trie;
            if (!t) t = i+1;
        }
        p = p->ch[st[i]-'a'];
    }
    if (!t) ans += st.size();
    else ans += t;
}

int main()
{
    ios_base::sync_with_stdio(0);
    //freopen("inp.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    int t;
    cin >> t;
    for (int z = 1; z <= t; ++z)
    {
        reset();
        cin >> n;
        ans = 0;
        for (int i = 1; i <= n; ++i)
        {
            cin >> s;
            insert(s);
        }
        cout << "Case #" << z << ": " << ans << '\n';
    }
}
