#include <string>
#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;

const int maxL = 26;
const int maxS = 1000000;
int B[maxS][maxL + 1];
int maxV, n;

int add(const string &s) {
	int cur = 0, R = s.length();
	for (int i = 0; i < s.length(); ++i)
	{
		if (!B[cur][s[i] - 'a']) B[cur][s[i] - 'a'] = maxV++;
		cur = B[cur][s[i] - 'a'];
		if (!B[cur][maxL]) R = min(R, i + 1);
		++B[cur][maxL];
	}
	return R;
}

void solve() {
	maxV = 1;
	memset(B, 0, sizeof(B));
	
	cin >> n;
	string s;
	long long S = 0;
	for (int i = 0; i < n; ++i)
	{
		cin >> s;
		S += add(s);
	}
	cout << S << endl;
}

int main() {
	ios_base::sync_with_stdio(0);
	int t;
	cin >> t;
	for (int it = 1; it <= t; ++it) {
		cout << "Case #" << it << ": ";
		solve();
	}
	return 0;
}
