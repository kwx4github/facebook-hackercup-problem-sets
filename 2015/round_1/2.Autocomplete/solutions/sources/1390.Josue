#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <climits>
#include <cctype>
#define SZ(x) ( (int) (x).size() )
#define me(x,a) memset(x,a,sizeof(x))
#define FN(a,n) for(int a=0;a<n;a++)
#define FOR(a,ini,fin) for(int a=(ini);a<(fin);a++)
#define ull unsigned long long
#define sc1(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d %d",&x,&y)
#define sc3(x,y,z) scanf("%d %d %d",&x,&y,&z)
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define endl "\n"
#define MOD 1000000007
using namespace std;
char s[1000006];
int trie[1000006][26];

int main(){
    int ntc,n;
    sc1(ntc);
    FN(itc,ntc){
        sc1(n);
        int sum = 0;
        me( trie, -1);
        int cont = 1;
        FN(i,n) {
            scanf("%s",s);
            int len = strlen(s);
            int p = 0;
            bool first = 1;
            int write = len;
            FN(j,len){                
                if( trie[p][ s[j]-'a' ] == -1 ){
                    trie[p][ s[j]-'a' ] = cont++;
                    p = cont-1;
                    if( first) {
                        first = 0;
                        write = j+1;
                    }
                }else{
                    p = trie[p][ s[j]-'a' ];
                }
            }
            sum += write;
        }
        printf("Case #%d: %d\n",(itc+1),sum);
    }
    
}

