#include <algorithm>
#include <iostream>
#include <sstream>
using namespace std;

typedef struct Node{
  int child[26];
  
  Node(){
    for(int i = 0; i < 26; i++)
      {
	child[i] = -1;
      }
  }
}Node;

//Node v[1000000*100000 + 1];
//Node v[1000];

int solve()
{
  int n;
  string s[100003];
  Node *v = new Node[1000000 + 100];
  int v_num = 0;
  int pos;
  long long int cnt;
  long long int ans = 0;

  cin >> n;
  for(int i = 0; i < n; i++)
    {
      cin >> s[i];
    }

  for(int i = 0; i < n; i++)
    {
      cnt = 1;
      pos = 0;
      for(int j = 0; j < s[i].length(); j++)
	{
	  int key = s[i][j] - 'a';
	  if(v[pos].child[key] == -1)
	    {
	      v[pos].child[key] = v_num + 1;
	      v_num++;
	      for(int k = j + 1; k < s[i].length(); k++)
		{
		  v[v_num].child[s[i][k] - 'a'] = v_num + 1;
		  v_num++;
		}
	      break;
	    }else{
	    if(j != s[i].length() - 1)
	      {
		cnt++;
	      }
	    pos = v[pos].child[key];
	    continue;
	  }
	}
      //      cout << cnt << endl;
      ans += cnt;
    }
  cout << ans << endl;

  delete [] v;
  
  return 0;
}

int main()
{
  cout.setf(ios::fixed); cout.precision(10);//小数点以下10桁まで表示
  int t;

  cin >> t;
  for(int i = 0; i < t; i++)
    {
      cout << "Case #" << (i + 1) << ": ";
      solve();
    }
  
  return 0;
}
