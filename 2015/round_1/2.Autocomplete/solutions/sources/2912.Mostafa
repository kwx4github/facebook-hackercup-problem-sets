import java.util.*;
import java.io.*;
public class A {

	/**
	 * @param args
	 * @throws IOException 
	 */
	static class Node{
		Node[] array ;
		int[] count ;
		
		public Node(){
			array = new Node[26];
			count = new int[26];
		}
		
		
		
	}
	static Node x ;

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		//BufferedReader k=new BufferedReader(new InputStreamReader(System.in));
		BufferedReader k=new BufferedReader(new FileReader("A.txt"));
		PrintWriter out = new PrintWriter(new FileWriter("A.out"));
		int test = Integer.parseInt(k.readLine());
		
		for (int i = 1; i <= test; i++) {
			
			
			x = new Node();
			int words = Integer.parseInt(k.readLine());
			int count = 0;
			for (int j = 0; j < words; j++) {
				
				String word = k.readLine();
				
				add_word(word);
				Node temp = x;
				for (int l = 0; l < word.length(); l++) {
					count++;
					if (temp.count[word.charAt(l)-'a']==1) {
						break;
					}
					temp = temp.array[word.charAt(l)-'a'];
					
				}
				
				
				
				
			}
			
			out.println("Case #"+i+": "+count);
			
			
		}
		
		out.close();
		
		
	}
	
	
	public static void add_word(String word){
		
		if (x.array[word.charAt(0)-'a'] == null) {
			
			x.array[word.charAt(0)-'a'] = new Node();
			x.count[word.charAt(0)-'a']++;
			Node temp = x.array[word.charAt(0)-'a'];
			for (int i = 1; i < word.length(); i++) {
				temp.array[word.charAt(i)-'a'] = new Node();
				temp.count[word.charAt(i)-'a']++;
				temp = temp.array[word.charAt(i)-'a'];
			}
			
		}
		
		else{
			x.count[word.charAt(0)-'a']++;
			Node temp = x.array[word.charAt(0)-'a'];
			for (int i = 1; i < word.length(); i++) {
				
				
				if (temp.array[word.charAt(i)-'a'] == null) {
					temp.array[word.charAt(i)-'a'] = new Node();
				}
				temp.count[word.charAt(i)-'a']++;
				
				temp = temp.array[word.charAt(i)-'a'];
				
			}
			
		}
		
		
	}
	
	
	

}
