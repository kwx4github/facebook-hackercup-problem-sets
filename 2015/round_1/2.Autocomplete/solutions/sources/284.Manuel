#include "cstdio"
#include "memory.h"
#include "algorithm"

using namespace std;

typedef long long Long;

const int maxn = (int) (1e6 + 6);

char buff[ maxn ];
int tree[ maxn ][ 26 ];

int main() {
  int ntc;

  sscanf(gets(buff), "%d", &ntc);
  for (int tc = 1; tc <= ntc; tc++) {
    int n;
    sscanf(gets(buff), "%d", &n);

    Long ans = 0LL;
    int next = 1;
    memset( tree[0], -1, 26 << 2 );
    for (int i = 0; i < n; i++) {
      gets( buff );

      int add = strlen( buff );
      int h = 0;
      int root = 0;
      for (char *ch = buff; *ch; ch++) {
        h++;

        int a = *ch - 'a';
        if (tree[ root ][ a ] == -1) {
          memset( tree[next], -1, 26 << 2 );
          tree[ root ][ a ] = next++;
          add = min(add, h);
        }

        root = tree[ root ][ a ];
      }

      ans += add;
    }

    printf("Case #%d: %lld\n", tc, ans);
  }

  return 0;
}
