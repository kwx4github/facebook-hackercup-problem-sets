//darkstallion's template

#include<bits/stdc++.h>
#define __INIT__ ios::sync_with_stdio(false);\
	cin.tie(0);
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define popb pop_back
#define del erase
#define sz size
#define ins insert
#define FOR(a,b,c) for(int a = b; a < c; a++)
#define FORS(a,b,c) for(int a = b; a <= c; a++)
#define FORN(a,b) for(int a = 0; a < b; a++)
#define FORD(a,b,c) for (int a = b; a >= c; a--)
#define RES(a,b) memset(a,b,sizeof(a))
#define LL long long
#define PII pair<int,int>
#define PLL pair<long long,long long>
#define PDD pair<double,double>
#define PCC pair<char,char>
#define PSS pair<string,string>
#define PI acos(-1)
#define eps 1e-9
using namespace std;

int count(string a, string b)
{
	int x = 0;
	while ((x < a.sz()) && (x < b.sz()))
	{
		if (a[x] != b[x])
			return x+1;
		x++;
	}
	if (x < a.sz())
		return x+1;
	return x;
}

int main()
{
	int t;
	scanf("%d",&t);
	FORN(i,t)
	{
		int ans = 0;
		int root = -1;
		int n;
		scanf("%d",&n);
		pair<string,PII> arr[n];
		FORN(j,n)
		{
			cin >> arr[j].fi;
			arr[j].se = mp(-1,-1);
			if (root == -1)
			{
				ans++;
				root = j;
			}
			else
			{
				int maks = 0;
				int x = root;
				while (1)
				{
					maks = max(maks, count(arr[j].fi,arr[x].fi));
					if (arr[x].fi < arr[j].fi)
					{
						if (arr[x].se.fi == -1)
						{
							arr[x].se.fi = j;
							break;
						}
						else
							x = arr[x].se.fi;
					}
					else if (arr[x].fi > arr[j].fi)
					{
						if (arr[x].se.se == -1)
						{
							arr[x].se.se = j;
							break;
						}
						else
							x = arr[x].se.se;
					}
				}
				ans += maks;
			}
		}
		printf("Case #%d: %d\n",i+1,ans);
	}
}
