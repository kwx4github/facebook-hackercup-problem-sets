import sys

inputfile = open(__file__.replace('.py', '.txt'), 'r')
outputfile = open(__file__.replace('.py', '_result.txt'), 'w')

# program
def readline():
  global inputfile
  return inputfile.readline().strip()

arr = [0] * 100000000

case_length = int(readline())
for case_num in xrange(case_length):
  my_dict = dict()
  N = int(readline())
  words = []
  total = 0

  #if N <= 100:
  i = 1
  max_len = 0
  while max_len < 100000:
    max_len = pow(26, i)
    if max_len > N:
      break
    else:
      i += 1
  max_char = i

  for n in xrange(N):
      cur_word = readline()
      words.append(cur_word)

  len_distinct_words = 0
  len_unique_words = -1
  while N != len_unique_words:
    distinct_words = []
    for word in words:
      distinct_words.append(word[0:max_char])
    unique_words = dict((v,k) for k,v in enumerate(distinct_words))
    len_unique_words = len(unique_words)
    max_char += 1
  max_char -= 1

  new_words = dict()
  sum_min_typing = 0
  for word in distinct_words:
    # print '=' * 20
    # print word
    # print '=' * 20
    first_in_word = True
    for x in xrange(len(word)):
      new_word = word[:x+1]
      # print '-' * 20
      # print new_word
      # print '-' * 20
      #is_not_in = new_word not in new_words
      is_not_in = not new_words.has_key(new_word)
      if first_in_word == True and is_not_in:
        sum_min_typing += x + 1
        first_in_word = False
      if is_not_in:
        new_words[new_word] = True
    if first_in_word == True:
      sum_min_typing += len(word)

  #print new_words
  print_string = "Case #%d: %d" % ((case_num+1), sum_min_typing)
  print print_string
  outputfile.write(print_string + "\n")