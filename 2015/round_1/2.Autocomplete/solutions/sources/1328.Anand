#include<iostream>
#include<vector>

using namespace std;

struct node
{
  char ch;
  node* child[26];
};

node* initializeNode(char ch)
{
  node* temp = (node*)calloc(1, sizeof(node));
  temp->ch = ch;
  return temp;
};

std::size_t getChars(node* root, const std::string& s)
{
  std::size_t ret = 0;
  for(std::size_t i=0;i<s.length();i++)
  {
    if(!root->child[s[i]-'a'])
    {
      node* newNode = initializeNode(s[i]);
      root->child[s[i]-'a'] = newNode;
      if(ret == 0) ret = i+1;
    }
    root = root->child[s[i]-'a'];
   }

  return ret == 0 ? s.length() : ret;
}

int main()
{
  int t;
  cin>>t;

  int count = 0;
  while(t-->0)
  {
    int n;
    cin>>n;

    node* dummy = initializeNode(0);

    std::size_t ans = 0;
    for(int i=0;i<n;i++)
    {
      string s;
      cin>>s;
      ans += getChars(dummy, s);
    }

    std::cout<<"Case #"<<++count<<": "<<ans<<std::endl;
   }
 }

