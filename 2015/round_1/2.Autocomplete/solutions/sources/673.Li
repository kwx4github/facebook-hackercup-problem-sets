//
//  main.cpp
//  HackerCup
//
//  Created by liruqi on 1/18/15.
//  Copyright (c) 2015 liruqi. All rights reserved.
//

#include <iostream>
#include <string>
#include "string.h"

using namespace std;

struct TrieNode {
    TrieNode* next[26];
    int cnt;
};

TrieNode root;
TrieNode data[1000000];
int dataTop;

void reset() {
    memset(& root, 0, sizeof(root));
    memset(data, 0, sizeof(data));
    dataTop = 0;
}

TrieNode* newTrieNode() {
    return data + (dataTop++);
}

int addTrieNode(string s) {
    int sp = 0;
    char ch = s[sp];
    int ret = 0;
    TrieNode* p = & root;
    TrieNode** paddr = & p;
    for (; (sp<s.size()) && p; p=p->next[ch - 'a']) {
        ch = s[sp];
        sp += 1;
        ret += 1;
        paddr = & (p->next[ch - 'a']);
        p->cnt += 1;
    }
    
    for (; sp<=s.size(); sp++) {
        TrieNode* node = newTrieNode();
        node->cnt = 1;
        *paddr = node;
        if (sp >= s.size()) {
            break;
        }
        ch = s[sp];
        paddr = & node->next[ch - 'a'];
    }
    // cout<<"## "<<s<<" -> "<<ret<<endl;
    return ret;
}

int main () {
    int kase;
    freopen ("/Users/liruqi/Documents/iOS/HackerCup/HackerCup/25.in","r",stdin);

    cin >> kase;
    for (int k=1; k<=kase; k++) {
        int N;
        int cnt = 0;
        reset();
        cin >> N;
        for (int i=0; i<N; i++) {
            string s;
            cin >> s;
            cnt += addTrieNode(s);
        }
        cout<<"Case #"<<k<<": "<<cnt<<endl;
    }
}
