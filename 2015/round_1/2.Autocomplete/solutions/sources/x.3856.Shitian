#include<stdio.h>
#include<math.h>
#include<cstdio>
#include<iostream>
#include<string>
using namespace std;

#define N 26
#define B 'a'
int ans=0;
struct Trie{
    int num;
    Trie* child[N];
};
Trie* NewTrie(){
    Trie* tmp=new Trie();
    tmp->num=1;
    long long i;
    for(i=0;i<N;i++){
        tmp->child[i]=NULL;
    }
    return tmp;
}

void Insert(Trie* tr,char* c,long long l){
    long long i;
    Trie* tmp=tr;
    for(i=0;i<l;i++){
        if(tmp->child[c[i]-B]==NULL){
            tmp->child[c[i]-B]=NewTrie();
        }
        else{
            tmp->child[c[i]-B]->num++;
        }
        tmp=tmp->child[c[i]-B];
    }
}
void Delete(Trie* tr){
    long long i;
    for(i=0;i<N;i++){
        if(tr->child[i]) Delete(tr->child[i]);
    }
    delete tr;
    tr=0;
}
void Find(Trie* tr,char* c,long long l){
    long long i;
    Trie* tmp=tr;
    for(i=0;i<l;i++){
        ans++;
        if(tmp->child[c[i]-B]->num==1)
            break;
        tmp=tmp->child[c[i]-B];
    }
}
Trie* t;
char s[1000001][1000001];
int main(){
    freopen("/Users/saintni/Desktop/fb/autocomplete.txt","r",stdin);
    freopen("/Users/saintni/Desktop/fb/o.txt","w",stdout);
    
    int ii,tt;
    cin>>ii;
    for(tt=1;tt<=ii;tt++)
    {
        ans=0;
        int in;
        t=NewTrie();
        long long i=0;
        cin>>in;
        while(in-->0){
            if(s[i][0]=='0')break;
            scanf("%s",s[i]);
            Insert(t,s[i],strlen(s[i]));
            Find(t,s[i],strlen(s[i]));
            i++;
        }
        cout<<"Case #"<<tt<<": "<<ans<<endl;
        Delete(t);
    }
    return 0;
}

