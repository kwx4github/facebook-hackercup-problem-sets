#include <iostream>
#include <set>

using namespace std;

int necessary_redun(string s1, string s2)
{
  int ret = 0;
  for(int i = 0; i < min(s1.size(), s2.size()) && s1[i] == s2[i]; ++i) {
    ++ret;
  }
  return ret;
}

int main()
{
  int t;
  cin >> t;
  for(int i = 0; i < t; ++i) {
    int n;
    cin >> n;
    set<string> dict;
    int ans = 0;
    for(int i = 0; i < n; ++i) {
      string word;
      cin >> word;
      set<string>::iterator pos = dict.insert(word).first;


      string last, next;
      // cout << *pos << endl;

      if(pos == dict.begin()) {
        last = string("");
      } else {
        last = *(--pos);
        ++pos;
      }
      // cout << "last:" << last << endl;
      // cout << *pos << endl;
      ++pos;
      if(pos == dict.end()) {
        next = string("");
      } else {
        next = *(pos);
      }
      // cout << "next: " << next << endl;
      // cout << max(necessary_redun(word, last), necessary_redun(word, next)) << endl;
      int redun = max(necessary_redun(word, last), necessary_redun(word, next));
      if(redun == word.size()) {
        ans += word.size();
      } else {
        ans += (redun + 1);
      }
      // ans += max(necessary_redun(word, last), necessary_redun(word, next)) + 1;
    }
    cout << "Case #" << i+1 << ": " << ans << endl;
  }
  return 0;
}