#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define esp 1e-8
#define lson   l, m, rt<<1
#define rson   m+1, r, rt<<1|1
#define sz(x) ((int)((x).size()))
#define pf(x) ((x)*(x))
#define pb push_back
#define pi acos(-1.0)
#define in freopen("solve_in.txt", "r", stdin);
#define out freopen("solve_out.txt", "w", stdout);
#define bug(x) cerr << "Line : " << (x) <<  " >>>>>>\n";
#define TL cerr << "Time elapsed: " << (double)clock() / CLOCKS_PER_SEC * 1000 << " ms" << endl;
#define inf 0x0f0f0f0f

using namespace std;
typedef long long LL;
typedef unsigned long long ULL;
typedef map<LL, int> MPS;
typedef pair<int, int> PII;
typedef MPS::iterator IT;

const int maxnode = (int)1e6 + 5;
const int sigma_size = 26;

struct Trie {
    int sz;
    int ch[maxnode][sigma_size];
    bool vis[maxnode];
    int idx(char ch) {
        return ch - 'a';
    }
    void init() {
        sz = 0;
        memset(ch[0], 0, sizeof (ch[0]));
        vis[0] = false;
    }
    int insert(char *s) {
        int len = strlen(s), u = 0;
        int ans = len;
        for(int i = 0; i < len; i++) {
            int c = idx(s[i]);
            if(ch[u][c] == 0) {
                ch[u][c] = ++sz;
                memset(ch[sz], 0, sizeof (ch[sz]));
                vis[sz] = false;
            }
            if(vis[sz] == false)
                ans = min(ans, i+1);
            u = ch[u][c];
            vis[u] = true;
        }
        return ans;
    }
} solver;
char s[maxnode];

int main() {
//    in
//    out
    int T;
    for(int t = scanf("%d", &T); t <= T; t++) {
        int n;
        scanf("%d", &n);
        solver.init();
        int ans = 0;
        for(int i = 0; i < n; i++) {
            scanf("%s", s);
            ans += solver.insert(s);
        }
        printf("Case #%d: %d\n", t, ans);
    }
    return 0;
}
