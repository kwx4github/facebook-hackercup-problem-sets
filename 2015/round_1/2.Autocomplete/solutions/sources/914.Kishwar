#include<iostream>
#include<vector>
#include<stack>
#include<string>
#include<queue>
#include<map>
#include<algorithm>
#include<sstream>
using namespace std;
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#define MAX 100
#define INF pow(2,31)-1
#define in(a) freopen(a,"r",stdin)
#define out(a) freopen(a,"w",stdout)

#define SIZE 1000010

int N;
char str[SIZE];

class trie{
public:
    int ref[30];
    int prefixes;
    void makeNode()
    {
        prefixes=1;
        for(int i=0;i<=29;i++)
            ref[i]=0;
    }
};
trie tri[1000011];
int val(char ch)
{
    return ch-'a';
}

int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int t,caseno=1,i,j;
	int parent,current,goingNode;
	int len;
	scanf("%d",&t);
//	cout<<t<<endl;
	while (t--)
	{
		scanf("%d",&N);
		tri[0].makeNode();
		goingNode=1;
		int mx=-1;
		int cnt=0;
		for(j=0;j<N;j++)
		{
			scanf("%s",str);
			len=strlen(str);
			parent=0;
			int cnt2=0;
			for(i=0;i<len;i++)
			{
				current=val(str[i]);
				int &v=tri[parent].ref[current];
				if(v==0){
                    v=goingNode;
                    goingNode++;
                    parent=v;
                    tri[parent].makeNode();
				}
				else if(v>0){
					parent=v;
					tri[parent].prefixes++;
					cnt2++;
				}
			}
			if(cnt2==len)cnt+=cnt2;
			else cnt+=(cnt2+1);
		}
		printf("Case #%d: ",caseno++);
        printf("%d\n",cnt);
	}
	return 0;
}
