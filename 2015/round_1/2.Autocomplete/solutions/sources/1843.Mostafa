package com.meg7.training.facebook.hackerCup15.round1;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class Problem_2 {

    public static void main(String[] args) {
//        // Generate large test file.
//        try {
//            Random randomGenerator = new Random();
//
//            File file = new File("input.txt");
//            PrintWriter out = new PrintWriter(file);
//
//            int numberOfTests = 20;
//            out.println(numberOfTests);
//            for (int t = 0; t < numberOfTests; t++) {
//                int linesCount = randomGenerator.nextInt(10001) + 1;// I know misses up with random!
//                out.println(linesCount);
//
//                for (int i = 0; i < linesCount; i++) {
//                    int lineSize = randomGenerator.nextInt(1001) + 1;// I know misses up with random!
//                    for (int j = 0; j < lineSize; j++) {
//                        out.print((char) ('a' + randomGenerator.nextInt(26)));
//                    }
//
//                    out.println();
//                }
//            }
//
//            out.close();
//        } catch (FileNotFoundException e) {
//            e.printStackTrace();
//        }

//        try {
//            File file = new File("input.txt");
//            Scanner scanner = new Scanner(file);

            Scanner scanner = new Scanner(System.in);

            int numberOfTests = scanner.nextInt();
            for (int i = 0; i < numberOfTests; i++) {
                int linesCount = scanner.nextInt();
                scanner.nextLine();// Skip Line!

                String[] lines = new String[linesCount];
                for (int j = 0; j < linesCount; j++) {
                    lines[j] = scanner.nextLine();
                }

                solveAndPrint(i + 1, lines, linesCount);
            }

//            scanner.close();
//        } catch (FileNotFoundException e) {
//            // Do nothing!
//        }
    }

    private static void solveAndPrint(int caseNumber, String[] lines, int linesCount) {
        Trie trie = new Trie();

        int chars = 0;
        for (String line : lines) {
            chars += Math.min(trie.insert(line) + 1, line.length());
        }

        System.out.println("Case #" + caseNumber + ": " + chars);
    }

    private static class Trie {

        private Node mRoot;

        public Trie() {
            mRoot = new Node(' ');
        }

        public int insert(String s) {
            if (s == null) { return 0; }

            Node current = mRoot;
            int length = s.length();

            if (length == 0) {
                current.marker = true;
            }

            int collisions = 0;
            char c;
            for (int i = 0; i < length; i++) {
                c = s.charAt(i);

                Node node = current.getNode(c);
                if (node != null) {
                    current = node;
                    collisions++;
                } else {
                    current.children.add(new Node(c));
                    current = current.getNode(c);
                }
            }

            current.marker = true;

            return collisions;
        }

        public static class Node {

            char data;
            boolean marker;
            List<Node> children = new ArrayList<Node>();

            public Node (char c) {
                data = c;
            }

            public Node getNode(char c) {
                for (Node node : children) {
                    if (node.data == c) {
                        return node;
                    }
                }

                return null;
            }

        }

    }

}
