#include <bits/stdc++.h>

using namespace std;

#define ll long long

struct node {
	char me;
	vector <node*> children;
};
string s;
int a;

void dest(node* me) {
	for (int i = 0; i < me->children.size(); i++) {
		dest(me->children[i]);
	}
	free(me);
}

int main() {
	ios::sync_with_stdio(0);
	freopen("in.in","r",stdin);
	freopen("out.out","w",stdout);
	ll t;
	cin >> t;
	ll cnt = 0;
	while (t--) {
		cout << "Case #" << ++cnt << ": ";
		cin >> a;
		cin >> s;
		node* root = new node;
		node* cur = root;
		for (int i = 0; i < s.size(); i++) {
			cur->children.push_back(new node);
			cur = cur->children[root->children.size()-1];
			cur->me = s[i];
		}
		ll res = 1;
		while(--a) {
			cin >> s;
			int sz = s.size();
			node* cur = root;
			bool still_searching = true;
			for (int i = 0; i < sz; i++) {
				bool found = false;
				for (int k = 0; k < cur->children.size(); k++) {
					if (cur->children[k]->me == s[i]) {
						cur = cur->children[k];
						res++;
						found = true;
						break;
					}
				}
				if (!found) {
					if (still_searching)
						res++;
					still_searching = false;
					cur->children.push_back(new node);
					cur = cur->children[cur->children.size()-1];
					cur->me = s[i];
				}
			}
		}
		//dest(root);
		cout << res;
		cout << endl;
	}
	return 0;
}
