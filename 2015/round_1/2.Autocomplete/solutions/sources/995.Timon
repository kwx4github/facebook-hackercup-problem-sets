using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Program
{
    static void Main(string[] args)
    {
        int T = int.Parse(Console.ReadLine());
        for (int t = 1; t <= T; t++)
        {
            int wordsize = int.Parse(Console.ReadLine());
            List<int>[] words = new List<int>[wordsize];
            Node tree = new Node();
            tree.past = 0;
            int total = 0;

            for (int i = 0; i < wordsize; i++)
            {
                List<int> val = toList(Console.ReadLine());

                Node n = tree;
                int indx = 0, v = 0;
                bool inc = true;
                while (true)
                {
                    if (indx == val.Count) break;
                    n.past++;

                    if (inc) v++;

                    if (n.ch[val[indx]] == null)
                    {
                        n.ch[val[indx]] = new Node();
                        inc = false;
                    }
                    n = n.ch[val[indx]];
                    indx++;
                }

                total += v;
            }

            Console.WriteLine("Case #{0}: {1}", t, total);
        }
    }

    static List<int> toList(string x)
    {
        char[] arr = x.ToCharArray();
        List<int> ret = new List<int>(arr.Length);
        for (int i = 0; i < arr.Length; i++)
        {
            ret.Add(arr[i] - 'a');
        }
        return ret;
    }
}

class Node
{
    public Node[] ch = new Node[26];
    public int past = 0;
}