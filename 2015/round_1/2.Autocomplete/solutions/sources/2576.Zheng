#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>
#include <vector>
#include <set>
using namespace std;

int CAS, n;
struct NODE
{
    int next[50];
};
NODE tree[10000000+100];
int tree_cnt = 1;
int add_string(string &str)
{
    int str_idx = 0;
    int root = 0;
    int max_len = 0;
    while(str_idx < str.length())
    {
        int num = str[str_idx] - 'a';
        if(tree[root].next[num] == 0)
        {
            tree[root].next[num] = tree_cnt++;
            if(max_len == 0)
                max_len = str_idx+1;
        }
        str_idx++;
        root = tree[root].next[num];
    }
    if(max_len == 0)
        return (int)str.length();
    else
        return max_len;
}
int main()
{
    freopen("/Users/zhangzheng/Programming/hacker cup/25/25/autocomplete_example_input.txt","r",stdin);
    freopen("/Users/zhangzheng/Programming/hacker cup/25/25/output2.txt","w",stdout);
    cin >> CAS;
    for(int cas = 1; cas <= CAS; cas++)
    {
        tree_cnt = 1;
        int ans = 0;
        memset(tree, 0,sizeof tree);
        string str;
        cin >> n;
        while(n--)
        {
            cin >> str;
            ans += add_string(str);
        }
        cout << "Case #"<<cas<<": "<<ans<<endl;
    }
    fclose(stdout);
    fclose(stdin);
}