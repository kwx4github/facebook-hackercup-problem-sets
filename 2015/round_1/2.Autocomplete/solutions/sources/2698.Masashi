#include <algorithm>
#include <cassert>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <sstream>
#include <vector>


#define INF 1000000000
#define MOD 1000000007
#define ALL(x) std::begin(x), std::end(x)


struct node_t {
  int next[26];
};


node_t nodes[1111111];


int main(int argc, char** argv)
{
  std::cin.tie(0);
  std::ios_base::sync_with_stdio(0);

  int T, N;

  std::cin >> T;

  for (int t = 1; t <= T; t ++) {
    std::cin >> N;
      
    int c = 0, nsize = 1;

    memset(nodes[0].next, 0, sizeof(nodes[0].next));

    for (int n = 0; n < N; n ++) {
      std::string s;

      std::cin >> s;

      int ind = 0, nind, i, size;

      for (i = 0, size = s.size(); i < size; i ++) {
        if ((nind = nodes[ind].next[s[i] - 'a']) == 0)
          break;

        ind = nind;
      }

      if (i == size) {
        c += size;
      }
      else {
        c += i + 1;

        for ( ; i < size; i ++) {
          memset(nodes[nsize].next, 0, sizeof(nodes[nsize].next));

          nodes[ind].next[s[i] - 'a'] = nsize;

          ind = nsize;

          nsize ++;
        }
      }
    }

    std::cout << "Case #" << t << ": " << c << std::endl;
  }

  return 0;
}
