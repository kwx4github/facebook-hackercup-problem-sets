object Solution {
  def main(args: Array[String]): Unit = {
    class Trie{
      val c = Array.ofDim[Trie](26)

      def add(s: String): Int = {
        var t = this
        var l = 0
        var n = 0
        for(i <- 0 until s.length){
          val idx = s(i)-'a'
          if(t.c(idx) == null){
            t.c(idx) = new Trie
            n = 1
          }else{
            l += 1
          }
          t = t.c(idx)
        }
        return l+n
      }
    }

    def solve = {
      val lines = io.Source.stdin.getLines()
      val t = lines.next.toInt
      for(ts <- 1 to t) {
        val n = lines.next.toInt
        val trie = new Trie
        var total = 0;
        for(i <- 1 to n){
          val s = lines.next
          val step = trie.add(s)
          total += step
        }
        println("Case #"+ts+": "+total)
      }
    }
    solve
  }
}
