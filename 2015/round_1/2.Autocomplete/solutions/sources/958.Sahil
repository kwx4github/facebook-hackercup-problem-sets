#include<bits/stdc++.h>
using namespace std;
#define LL long long
char ar[1000005];

struct node{
	char c;
	int end;
	vector<int> v;
}	A[1000500];
LL global,root;
LL insert(char C[]){
	if(root==-1){
		root=global++;
		A[root].v.clear();
	}
		LL in=root,count=0;
		int f=0,j=0;
		while(C[j]!='\0'){
			LL k=A[in].v.size();
			f=0;
			//printf("k=%lld %c\n",k,C[j]);
			for(LL i=0;i<k;i++){
				//printf("%c %c\n",A[A[in].v[i]].c,C[j]);
				if(A[A[in].v[i]].c==C[j]){	in=A[in].v[i];count++;f=1;break;}
			}
			if(f==1){	j++;}
			else{
				LL m=global;
				A[in].v.push_back(global++);
				A[m].c=C[j];
			//	printf("x=%lld %c\n",m,C[j]);
				A[m].v.clear();
				in=m;
				j++;
			}
		}
		A[in].end=1;
		
		if(count<strlen(C))	count++;
		//printf("%lld\n",count);
		return count;		
}
int main(){
	int t,t1;
	scanf("%d",&t);

	t1=t;
	while(t--){
		LL n,ans=0;
		scanf("%lld",&n);
		
		root=-1;
		global=0;
		for(LL i=0;i<n;i++){
			scanf("%s",ar);
			ans+=insert(ar);
		}
		printf("Case #%d: %lld\n",t1-t,ans);
	}
	return 0;
}
