#pragma comment(linker, "/STACK:16777216")
#include <bits/stdc++.h>
using namespace std;

#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define pb push_back
#define SZ(a) ((int)a.size())
#define ALL(a) a.begin(),a.end()
#define FOREACH(i, c) for( __typeof( (c).begin() ) i = (c).begin(); i != (c).end(); ++i )
#define AREA2(x1,y1,x2,y2,x3,y3) ( x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) )
#define SQR(x) ((x)*(x))
#define STR string
#define IT iterator
#define ff first
#define ss second
#define MP make_pair
#define EPS 1e-9
#define INF 2e9

#define chk(a,k) ((bool)(a&(1<<(k))))
#define set0(a,k) (a&(~(1<<(k))))
#define set1(a,k) (a|(1<<(k)))

typedef long long Long;

#define MAX 1000007
#define MAX_ALPH 26

struct NODE{
    long Child[MAX_ALPH];   // Child node for coreesponding char
    NODE( void ){
        memset( Child,-1,sizeof(Child));
    }
};
vector<NODE> Node;
long N;
char str[MAX+7];
long ans;

void AddString( char *s )
{
    long i,n = 0, d = 0;
    bool first = true;
    for( i=0;s[i];i++){
        char Ch = s[i]-'a';
        d++;
        if( Node[n].Child[Ch]==-1 ){
            Node.push_back( NODE() );
            Node[n].Child[Ch] = Node.size()-1;
            if( first ){
                ans += d;//cout<<d<<endl;
                first = false;
            }
        }
        n = Node[n].Child[Ch];
    }
    if( first ) ans += d;
}
int main( void )
{
    int i,j,Icase,k=0;

    //freopen("text1.txt","r",stdin );
    freopen("b.in","r",stdin );
    freopen("b.out","w",stdout );

    cin>>Icase;
    while( Icase-- ){
        cin>>N;
        ans = 0;
        Node.clear();
        Node.resize( 1 );
        for( i=1;i<=N;i++ ){
            scanf("%s",str );//puts( str );
            AddString( str );
        }
        printf("Case #%ld: %ld\n",++k,ans );
    }

    return 0;
}
