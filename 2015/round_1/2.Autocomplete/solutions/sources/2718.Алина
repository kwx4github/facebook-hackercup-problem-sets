#include <iostream>
#include <vector>
#include <cstdlib>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <map>

using namespace std;

struct node {
	void add(const string & word, int i = 0) {
		if(i == word.size())
			return;

		if(m.count(word[i]) == 0) 
			m[word[i]] = new node;

		m[word[i]]->add(word, i+1);		
	}

	int maxL(const string & word, int i = 0) {
		if(i == word.size())
			return i;

		if(m.count(word[i]) == 0) 
			return i+1;

		return m[word[i]]->maxL(word, i+1);		
	}

	map<char, node *> m;
};

int main() {

	int t;
	cin >> t;
	for(int i = 0; i < t; ++i) {
		unsigned int res = 0;
		int n;
		cin >> n;
		node * bor = new node;
		for(int j = 0; j < n; ++j) {
			string w;
			cin >> w;
			res += bor->maxL(w);
			bor->add(w);
		}

		cout << "Case #" << i+1 << ": " << res << endl;
	}

	return 0;
}

