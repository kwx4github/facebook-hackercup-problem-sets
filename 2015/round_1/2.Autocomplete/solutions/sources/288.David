#include <bits/stdc++.h>

#define For(i, a, b) for(int i=(a); i < (b); i++)
#define MP make_pair
#define INF 1000000000

using namespace std;

typedef pair<int, int> ii;
typedef long long ll;

int ans = 0, last = 0;
map <char, int> edges[1000005];

void add(char* w, int act)
{
    int typed = 1, aux = 0;
    while (*w)
    {
        aux++;
       // printf("%d\n", aux);
        int c = (*w) - 'a';
        if (edges[act].find(c) == edges[act].end())
        {
            ans += typed;
            typed = 0;
            edges[act].insert(MP(c, ++last));
        }
        else
            typed++;

        w++;
        act = edges[act][c];
    }

    if (typed != 0)
        ans += typed - 1;
}

int main()
{
    freopen("autocomplete.txt", "r", stdin);
    freopen("autocomplete.out", "w", stdout);

    int tt, caso = 1;
    scanf("%d", &tt);

    while (tt--)
    {
        ans = last = 0;

        int n;
        scanf("%d", &n);

        char w[1000005];
        For(i, 0, n)
        {
            scanf("%s", w);
            add(w, 0);
        }

        printf("Case #%d: %d\n", caso++, ans);
        For(i, 0, last+1)
            edges[i].clear();
    }

    return 0;
}
