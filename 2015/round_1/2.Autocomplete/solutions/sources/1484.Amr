#include <sstream>
#include <string>
#include<iostream>
#include<stdio.h>
#include<vector>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<math.h>
using namespace std;

#define FOR(p,star,end) for(int p = star ; p<end ; p++)
#define FORR(p,star,end) for(int p = star ; p>=end ; p--)
#define INF 1000000000
#define MOD 9
#define MAX 1000002
#define pii pair<int ,int >
#define vi vector<int>
#define vii vector< pair<int ,int> >
#define pb push_back
#define mp make_pair
#define ll long long
#define REF 97
// 0 >> 48
// a >> 97
// A >> 65
// . >> 45
using namespace std;
char line[MAX+1];
int res;
class Trie
{
public:

    Trie* children[26];
    int word,prefix;

    Trie()
    {
        memset(children , 0 , sizeof children);
        word=prefix=0;
    }
    void add(char* str,int lev)
    {

        if(*str == '\0'){

            if(res==-1)
                res= lev-1;
            return ;

        }

        if(children[*str-REF]==0){
            children[*str-REF] = new Trie();

            if(res==-1)
                res = lev;
        }


        children[*str-REF]->add(str+1,lev+1);
    }
    void clear()
    {
        for(int i = 0 ; i < 26;i++)
        if(children[i]!=0)
        {
            children[i]->clear();
            delete children[i];
        }

    }





};


int main()
{
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int T;
    scanf("%d",&T);
    int ans=0;
    FOR(tc,1,T+1)
    {
        ans=0;
        Trie tree;
        int n ;
        scanf("%d",&n);
        FOR(i,0,n)
        {
            res=-1;
            scanf("%s",line);
            tree.add(line,1);
            ans+=res;
        }
        printf("Case #%d: %d\n",tc,ans);


      // tree.clear();
    }

    return 0;

}
