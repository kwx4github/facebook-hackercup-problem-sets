import java.io.IOException;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Scanner;

public class Autocomplete {

    class Node {
        Map<Character, Node> children;
        Node() {
            children = new HashMap<Character, Node>();
        }
    }

    private void processInput() throws IOException {
        Scanner in = new Scanner(System.in);
        int T = in.nextInt();

        for (int testCase = 1; testCase <= T; testCase++) {
            int n = in.nextInt();
            String[] words = new String[n];
            for (int i = 0; i < n; i++) {
                words[i] = in.next();
            }

            go(testCase, n, words);
        }

        in.close();
    }

    void go(int t, int n, String[] words) {
        long res = 0;
        Node root = new Node();

        for (int i = 0; i < n; i++) {
            Node curr = root;
            for (int j = 0; j < words[i].length(); j++) {
                char c = words[i].charAt(j);
                res++;
                if (curr.children.containsKey(c)) {
                    curr = curr.children.get(c);
                } else {
                    while (j < words[i].length()) {
                        c = words[i].charAt(j);
                        Node toAdd = new Node();
                        curr.children.put(c, toAdd);
                        curr = toAdd;
                        j++;
                    }
                    break;
                }
            }
        }

        System.out.printf(Locale.ENGLISH, "Case #%d: %d\n", t, res);
    }

    public static void main(String[] args) throws Exception {
        Autocomplete a = new Autocomplete();
        a.processInput();
    }
}
