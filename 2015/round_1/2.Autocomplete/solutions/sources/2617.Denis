#include<iostream>
#include<vector>
#include<set>

using namespace std;

long long Solve()
{
    long long ans = 0;
    set <string> Words;
    string word;
    int n, i;
    cin >> n;
    for (i = 0; i < n; ++i)
    {
        cin >> word;
        auto ins_res = Words.insert(word);
        auto it = ins_res.first;
        int p1 = 0, p2 = 0;
        if (it != Words.begin())
        {
            it--;
            while (p1 < it -> size() && p1 < word.size() && (*it)[p1] == word[p1])
                ++p1;
        }
        it = ins_res.first;
        it++;
        if (it != Words.end())
        {
            while (p2 < it -> size() && p2 < word.size() && (*it)[p2] == word[p2])
                ++p2;
        }
        ans += min((int)word.size(), 1 + max(p1, p2));
    }
    return ans;
}

int main()
{
    int T, t;
    cin >> T;
    for (t = 1; t <= T; ++t)
    {
        long long ans = Solve();
        cout << "Case #" << t << ": " << ans << endl;
    }
    return 0;
}

