#include <iostream>
#include <algorithm>
#include <set>
#include <string>

using namespace std;

int cp(string s1, string s2)
{
  int ans = 0;
  int n1 = s1.length(), n2 = s2.length();
  for (int i = 0; i < n1 && i < n2 && s1[i] == s2[i]; i++) {
    ans++;
  }
  return ans;
}

int solve()
{
  int N;
  cin >> N;

  set<string> dict;
  int ans = 0;
  for (int i = 0; i < N; i++) {
    string word;
    cin >> word;

    dict.insert(word);
    auto it = dict.find(word);

    auto itb = it, ita = it;
    itb--; ita++;
    string before, after;
    if (it != dict.begin()) {
      before = *itb;
    }
    if (ita != dict.end()) {
      after = *ita;
    }

    int num = max(cp(before, word), cp(after, word)) + 1;
    ans += min(num, (int)word.length());
  }
  
  return ans;
}

int main()
{
  int T;
  cin >> T;
  for (int c = 1; c <= T; c++) {
    cout << "Case #" << c << ": " << solve() << endl;
  }
  return 0;
}
