/*
    Guts Over Fear
*/
#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;
#define FOR(i,a)    for(int i = 0;i < a;i++)
#define REP(i,a,b)  for(int i = a;i < b;i++)

int main()
{
    ios_base::sync_with_stdio(false);
    freopen("autocomplete.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int t;
    cin>>t;
    REP(x,1,t+1)
    {
        set<string>s;
        s.insert("Z");
        s.insert("{");
        int n,ans=0;
        cin>>n;
        FOR(i,n)
        {
            string temp;
            cin>>temp;
            s.insert(temp);
            set<string>::iterator it1=s.find(temp);
            set<string>::iterator it2=it1;
            set<string>::iterator it3=it1;
            it2++;
            it3--;
            string c1=*it2;
            string c2=*it3;
            int sz1=temp.size(),sz2=c1.size(),sz3=c2.size();
            int cmp1=0;
            int cmp2=0;
            for(int j=0;j<min(sz1,sz2);j++)
            {
                if(temp[j]==c1[j])
                {
                    cmp1++;
                }
                else
                {
                    break;
                }
            }
            for(int j=0;j<min(sz1,sz3);j++)
            {
                if(temp[j]==c2[j])
                {
                    cmp2++;
                }
                else
                {
                    break;
                }
            }
            ans+=min(sz1,max(cmp1+1,cmp2+1));
        }
        cout<<"Case #"<<x<<": "<<ans<<endl;
    }
    return 0;
}
