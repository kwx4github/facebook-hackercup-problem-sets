#include <iostream>
#include <string>
using namespace std;

const int MAXSIZE = 10000000;

class Node {
public:
	int next[26];
};

Node node[MAXSIZE];
int counts;
long long res;

int get_node() {
	if (counts >= MAXSIZE) {
		cerr << "ERROR" << endl;
	}
	memset(node[counts].next, -1, sizeof(node[counts].next));
	return counts++;
}

void insert(int index, const string& s, int sindex, bool add) {
	if (sindex == s.size()) return;
	if (node[index].next[s[sindex] - 'a'] == -1) {
		node[index].next[s[sindex] - 'a'] = get_node();
		if(add) res++;
		insert(node[index].next[s[sindex] - 'a'], s, sindex + 1, false);
	}
	else {
		res++;
		insert(node[index].next[s[sindex] - 'a'], s, sindex + 1, true);
	}
}

int main() {
	int T;
	cin.sync_with_stdio(false);
	cin >> T;
	for (int cas = 1; cas <= T; cas++) {
		counts = 0;
		get_node();
		int N;
		cin >> N;
		res = 0;
		for (int i = 0; i < N; i++) {
			string s;
			cin >> s;
			insert(0, s, 0, true);
			//cout << res << endl;
		}
		cout << "Case #" << cas << ": " << res << endl;
		cerr << "Case #" << cas << ": " << counts << " / " << MAXSIZE << endl;
	}
}