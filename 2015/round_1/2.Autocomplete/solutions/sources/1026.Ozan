#include<stdio.h>
typedef struct node{
    struct node *children[30];
}node;
node *arr[30];
int n;
char inp[1000001];
int process(){
    int count = 1;
    int c,res;
    node *x;
    x = arr[inp[0]-'a'];
    if(!x){
        x = arr[inp[0]-'a'] = (node*)malloc(sizeof(node));
        res = 1;
    }else{
    while(1){
        if(count==strlen(inp))
            return count;
        c = inp[count]-'a';
        if(!x->children[c])break;
        x = x->children[c];
        count++;
    }
    res = count+1;
    }
    while(1){
        if(count==strlen(inp))
            return res;
        c = inp[count]-'a';
        x->children[c] = (node*)malloc(sizeof(node));
        x = x->children[c];
        count++;
    }

}
void readInp(){
    int t,c=1,r,total,i;
    scanf("%d ",&t);
    while(t--){
        total = 0;
        scanf("%d ",&n);
        for(i=0;i<n;i++){
            scanf("%s ",inp);
            total+=process();
        }
        printf("Case #%d: %d\n",c++,total);
        for(i=0;i<30;i++)arr[i]=NULL;
    }
}
int main(){
    readInp();
    return 0;
}
