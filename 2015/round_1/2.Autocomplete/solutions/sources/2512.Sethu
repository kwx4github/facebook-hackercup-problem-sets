#include<bits/stdc++.h>
using namespace std;
string str[100005];
struct node
{
    struct node* child[26];
    int value;
    int cnt;
};
void emp(struct node* trie)
{
    if(trie==NULL)
        return ;
    for(int i=0;i<26;i++)
    {
        emp(trie->child[i]);
    }
    free(trie);
}
struct node* getnode(void)
{
 struct node* newnode=(struct node*)malloc(sizeof(struct node));
 for(int i=0;i<26;i++)
 {
     newnode->child[i]=NULL;
 }
 newnode->value=0;
 newnode->cnt=0;
 return newnode;
}
void add(struct node* trie,string str)
{
    int l=str.length();
    for(int i=0;i<l;i++)
    {
        int temp=str[i]-97;
        if(trie->child[temp]==NULL)
        {
            trie->child[temp]=getnode();
        }
        trie->child[temp]->cnt++;
        trie=trie->child[temp];
    }
    trie->value=1;
}
int check(struct node* trie,string str)
{
    int l=str.length();
    int val=0;
    for(int i=0;i<l;i++)
    {
        val++;
        int temp=str[i]-97;
        if(trie->child[temp]->cnt==1)
            return val;
        trie=trie->child[temp];
    }
    return val;
}
int main()
{
   freopen("input.txt","r",stdin);
   freopen("output.txt","w",stdout);
    int t;
    cin>>t;
    for(int k=1;k<=t;k++)
    {
        int n;
        cin>>n;

        struct node* trie=getnode();
         int ans=0;
        for(int i=1;i<=n;i++)
        {
            str[i].clear();
            cin>>str[i];
            add(trie,str[i]);
            ans+=check(trie,str[i]);
        }
        //emp(trie);
        cout<<"Case #"<<k<<": "<<ans<<endl;
    }
}
