import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Date;

class Autocomplete {
	static String[] words = new String[100010];
	static int wordLength = 0;
	static int[] wordsLength = new int[100010];

	public int uniquePrefix(String prefix, int preLen, int startPos, int cur) {
		for (int x = startPos; x < cur; x++) {
			if (wordsLength[x] >= preLen) {
				//if(words[x].startsWith(prefix)) {
				if (words[x].regionMatches(0, prefix, 0, preLen)) {
					return x;
				}
			}
		}
		return -1;
	}
	public static void main(String[] args) throws IOException {
		System.out.println(new Date());
		BufferedReader in = new BufferedReader(new FileReader("autocomplete.txt"));
		PrintWriter out = new PrintWriter(new FileWriter("autocomplete_out.txt"));
		Autocomplete  aut = new Autocomplete();
		int T = Integer.parseInt(in.readLine());
		int found = 0;
		for (int t = 0; t < T; t++) {
			int tot = 0; // Total number of charactesr to type the message.
			wordLength = Integer.valueOf(in.readLine());
			
			for (int x = 0; x < wordLength; x++) {
				words[x] = in.readLine();
				wordsLength[x] = words[x].length();
				for (int y = 1; true; y++) {
					if ((found=aut.uniquePrefix(words[x], y, found < 0 ? 0 : found,x)) < 0) {
						tot += y;
						break;
					}
					if (y == words[x].length()) {
						tot += y;
						break;
					}
				}
			}
			out.println("Case #" + (t + 1) + ": " + tot);
			System.out.println(new Date() + " - Case #" + (t + 1) + ": " + tot);

		}
		out.close();
		System.out.println(new Date());
	}
}
