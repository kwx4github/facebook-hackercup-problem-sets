#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cassert>

using namespace std;

struct node {
	int nxt[26];
	int cnt;
};

node a[1000010];
string s;
int tt,n,m;
int ans;

int gen(const string &s) {
	int cur=0;
	int l=s.size();
	for (int i=0;i<l;++i) {
		if (a[cur].nxt[s[i]-'a']==0) {
			a[cur].nxt[s[i]-'a']=m;
			memset(a[m].nxt,0,sizeof(a[m].nxt));
			a[m].cnt=0;
			++m;
		}
		cur=a[cur].nxt[s[i]-'a'];
		a[cur].cnt++;
	}
	cur=0;
	for (int i=0;i<l;++i) {
		cur=a[cur].nxt[s[i]-'a'];
		if (a[cur].cnt==1) return i+1;
	}
	return l;
}

int main() {
	freopen("b.in","r",stdin);
	freopen("b.out","w",stdout);

	scanf("%d",&tt);

	memset(a,0,sizeof(a));
	for (int ii=1;ii<=tt;++ii) {
		printf("Case #%d: ",ii);
		scanf("%d",&n);
		m=1;
		memset(a[0].nxt,0,sizeof(a[0].nxt));
		a[0].cnt=0; ans=0;
		for (int i=0;i<n;++i) {
			cin >> s;
			ans+=gen(s);
		}

		printf("%d\n",ans);
	}
}
