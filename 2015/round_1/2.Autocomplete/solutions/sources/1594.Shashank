/*
*************************************************************************
* $ Author : honeyslawyer   $
* $ Name   : shashank gupta $
*************************************************************************
*
* Copyright 2014 @ honeyslawyer and shashank gupta
*
************************************************************************/
#include<cstdio>
#include<iostream>
#include<cmath>
#include<conio.h>
#include<cstring>
#include<ctype.h>
#include<algorithm>
#include<vector>
#include<stdlib.h>
#include<map>
#include<queue>
#include<stack>
#include<set>
#include<string>
#include<fstream>
#include<climits>

#define mod 1000000007
#define ll long long

using namespace std;
ll gcd(ll a,ll b) {if(b==0) return a; return gcd(b,a%b);}

ll power(ll b,ll exp,ll m)
 {ll ans=1;
  b%=m;
  while(exp)
   {if(exp&1)
     ans=(ans*b)%m;
    exp>>=1;
	b=(b*b)%m;
   }
  return ans;
 }
struct node
{
    int a[30];
    struct node *arr[30];
};
int free(struct node *root)
{
    stack<pair<struct node*,int> > st;
    st.push(make_pair(root,-1));
    
    while(!st.empty())
    {
        struct node *n=st.top().first;
        int s=st.top().second;
        st.pop();
        int flag=0;
        for(int i=s+1;i<30;i++)
        {
            if((n->arr)[i]!=NULL)
            {
                st.push(make_pair(n,i));
                st.push(make_pair((n->arr)[i],-1));
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            delete(n);
        }
    }
}

int main()
{
    std::ifstream in("input.txt");
    std::streambuf *cinbuf = std::cin.rdbuf(); //save old buf
    std::cin.rdbuf(in.rdbuf()); //redirect std::cin to in.txt!

    std::ofstream out("out.txt");
    std::streambuf *coutbuf = std::cout.rdbuf(); //save old buf
    std::cout.rdbuf(out.rdbuf());
    int t;
    cin>>t;
    for(int z=1;z<=t;z++)
    {
        struct node *root=(struct node *)malloc(sizeof(node));
        for(int i=0;i<30;i++)
        {
            (root->arr)[i]=NULL;
        }
        int n;
        cin>>n;
        ll ans=0;
        for(int i=0;i<n;i++)
        {
            string a;
            cin>>a;
            struct node *next=root;
            for(int i=0;i<a.size();i++)
            {
                if((next->arr)[a[i]-'a']!=NULL)
                {
                    (next->a)[a[i]-'a']++;
                    next=(next->arr)[a[i]-'a'];
                }
                else
                {
                    (next->a)[a[i]-'a']=1;
                    (next->arr)[a[i]-'a']=(struct node *)malloc(sizeof(node));
                    for(int j=0;j<30;j++)
                    {
                        ((next->arr)[a[i]-'a']->arr)[j]=NULL;
                    }
                    next=(next->arr)[a[i]-'a'];
                }
            }
            next=root;
            ll c=0;
            for(int i=0;i<a.size();i++)
            {
                if((next->a)[a[i]-'a']==1)
                {
                    c++;
                    break;
                }
                else
                c++;
                
                next=(next->arr)[a[i]-'a'];
            }
            ans+=c;
        }
        free(root);
        cout<<"Case #"<<z<<": "<<ans<<endl;
    }
    printf("done");






getch();
return 0;
/*checklist
1)getch() and conio.h removed.*/
}
