#include <iostream>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <climits>
#include <cassert>
#include <cstring>
#include <string>
using namespace std;
typedef long long ll;
#define FILE_IN "autocomplete.txt"
#define FILE_OUT "output.txt"
const int MAXN = 1e6 + 111;

struct node {
	int nxt[26], num;
} tr[MAXN];
int N, T, last;

int insert(string &s) {
	int len = s.length();
	int cnt = 0, pr, cur = 0;
	tr[cur].num++;
	for (int i = 0; i < len; i++) {
		pr = cur;
		if(tr[cur].nxt[s[i] - 'a']) 
			cur = tr[cur].nxt[s[i] - 'a'];
		else {
			tr[cur].nxt[s[i] - 'a'] = ++last;
			cur = last;
		}
		tr[cur].num++;
		if(tr[cur].num == 1 && tr[pr].num == 1) continue;
		else cnt++;
	}
	return cnt;
}
int solve() {
	last = 0;
	int ans = 0;
	string s;
	memset(tr, 0, sizeof tr);
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> s;
		ans += insert(s);
	}
	return ans + 1;
}


int main()
{
	freopen(FILE_IN, "r", stdin);
	freopen(FILE_OUT, "w", stdout);
    
	cin >> T;
	for (int tc = 1; tc <= T; tc++) 
		printf("Case #%d: %d\n", tc, solve());

	return 0;
}