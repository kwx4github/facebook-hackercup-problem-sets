// spnauT
//
#include <bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(int _b=(b),i=(a); i<_b; ++i)
#define ROF(i,b,a) for(int _a=(a),i=(b); i>_a; --i)
#define _1 first
#define _2 second
#define PB(x) push_back(x)
#define MSET(m,v) memset(m,v,sizeof(m))
#define MAX_PQ(T) priority_queue <T>
#define MIN_PQ(T) priority_queue <T,vector<T>,greater<T>>
typedef long long LL; typedef long double LD; typedef unsigned int uint;
typedef pair<int,int> PII; typedef pair<LL,LL> PLL;
typedef vector<int> VI; typedef vector<LL> VL; typedef vector<PII> VP;
template<typename A, typename B> inline bool mina(A &x, B y) { return (x > y)? (x=y,1):0; }
template<typename A, typename B> inline bool maxa(A &x, B y) { return (x < y)? (x=y,1):0; }

#define MAXN (100005)
#define MAXS (1000005)

int T, N;

struct TN
{
	int total;
	int next[52];
} A[MAXS];

int M;
char S[MAXS];

inline int f(char c)
{
	if(c >= 'a') return c - 'a';
	else return c - 'A' + 26;
}

int main()
{
	cin >> T;
	FOR(tt,1,T+1)
	{
		A[0].total = 0;
		MSET(A[0].next, -1);
		M = 1;

		cin >> N;
		int res = 0;
		FOR(j,0,N)
		{
			int a = 0, b, n;
			scanf("%s", S);
			n = strlen(S);
			FOR(i,0,n)
			{
				b = f(S[i]);
				if(A[a].next[b] == -1)
				{
					A[M].total = 0;
					MSET(A[M].next, -1);
					A[a].next[b] = M++;
				}
				a = A[a].next[b];
				++A[a].total;
			}
			a = 0;
			FOR(i,0,n)
			{
				b = f(S[i]);
				a = A[a].next[b];
				++res;
				if(A[a].total == 1) break;
			}
//			printf("%d\n", res);
		}

		printf("Case #%d: %d\n", tt, res);
	}

	return 0;
}
