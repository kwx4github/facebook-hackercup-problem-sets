#include <bits/stdc++.h>
using namespace std;

struct node
{
    node* des[26];
    //bool init[26];
    node()
    {
        for (int i=0;i<26;i++){ des[i] = NULL;}
    }
    void add(string s)
    {
        //cout << s.size() << endl;
        if (s.size()==0) return;
        if (des[s[s.size()-1]-'a']==NULL) des[s[s.size()-1]-'a'] = new node();
        des[s[s.size()-1]-'a']->add(s.substr(0,s.size()-1));
    }
    int query(string s)
    {
        if (s.size()==0) return 0;
        if (des[s[s.size()-1]-'a'] == NULL) return 1;
        return des[s[s.size()-1]-'a']->query(s.substr(0,s.size()-1))+1;
    }
};

int main()
{
    freopen("autocomplete.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int Q;
    cin >> Q;
    for (int qq=0;qq<Q;qq++){
    int N;
    scanf("%d",&N);
    node* root = new node();
    int ans = 0;
    for (int i=0;i<N;i++)
    {
        string s;
        cin >> s;
        reverse(s.begin(),s.end());
        ans += max(1,root->query(s));
        root->add(s);
    }
    printf("Case #%d: %d\n",qq+1,ans);
    }
}
