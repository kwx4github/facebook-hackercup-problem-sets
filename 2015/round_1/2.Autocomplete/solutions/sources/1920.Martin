#include <bits/stdc++.h>
using namespace std;

const int MAXK = 30;

struct TNode {
	TNode *ch[MAXK];
	int c = 0;
	bool leaf = false;
};

int insert(TNode *root, string s){
	TNode *v = root;
	int i, r = 1;
	for(i = 0; i < s.size(); i++){
		if(!v->ch[s[i] - 'a']){
			v->c++;
			v->ch[s[i] - 'a'] = new TNode();
			v = v->ch[s[i] - 'a'];
		} else {
			r++;
			v = v->ch[s[i] - 'a'];
		}
	}
	if(v->c) r--;
	v->leaf = true;
	return r;
}

void print(TNode *node, string s){
	TNode *child;
	for(int i = 0; i < MAXK; i++){
		child = node->ch[i];
		if(child){ 
			s.push_back(i + 'a');
			print(child, s);
			s.erase(s.size() - 1);
		}
	}
	if(node->leaf) cout << s << "\n";
}

int main(){
	ios_base::sync_with_stdio(0);
	string s;
	int n, t, T, R;
	cin >> T;
	for(t = 1; t <= T; t++){
		TNode *root = new TNode();
		cin >> n;
		R = 0;
		while(n--){
			cin >> s;
			R += insert(root, s);
		}
		printf("Case #%d: %d\n", t, R);
	}
}
