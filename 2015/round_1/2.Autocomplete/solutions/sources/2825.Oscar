#include <iostream>
#include <string>

using namespace std;

typedef struct Node {
    Node* child[26];
} Node;

void init(Node* ptr) {
    for (int i = 0; i < 26; ++i) {
        ptr->child[i] = NULL;
    }
}

int main() {
    int t, n;
    string str;

    cin >> t;
    for (int i = 0; i < t; ++i) {
        int caseCost = 0;
        Node* root = new Node();
        init(root);

        cin >> n;
        for (int j = 0; j < n; ++j) {
            int lineCost = 0;
            Node* node = root;

            cin >> str;
            for (int k = 0; k < str.length(); ++k) {
                if (node->child[str[k] - 'a'] != NULL) {
                    node = node->child[str[k] - 'a'];
                    ++lineCost;
                } else {
                    node->child[str[k] - 'a'] = new Node();
                    node = node->child[str[k] - 'a'];
                    init(node);
                }
            }

            ++lineCost;
            if (lineCost > str.length()) {
                lineCost = str.length();
            }

            caseCost += lineCost;
        } 
       
       cout << "Case #" << i+1 << ": " << caseCost << endl; 
    }

    return 0;
}
