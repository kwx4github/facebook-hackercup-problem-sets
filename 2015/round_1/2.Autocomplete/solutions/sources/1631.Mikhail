#include<cstdio>
#include<vector>
#include<cstring>
using namespace std;
const int alphaSize = 26;
const int maxLength = 1e6 + 1;
int main()
{
  const vector<int> emptyLeaf(alphaSize, -1);
  int testN;
  scanf("%d", &testN);
  for (int testId = 1; testId <= testN; ++testId)
  {
    printf("Case #%d: ", testId);
    vector<vector<int> > treap(1, emptyLeaf);
    int n;
    int ans = 0;
    scanf("%d ", &n);
    for (int i = 0; i < n; ++i)
    {
      static char str[maxLength];
      gets(str);
      int length = strlen(str);
      int v = 0;
      bool newBranch = false;
      for (int j = 0; j < length; ++j)
      {
        int nextChar = str[j] - 'a';
        if (treap[v][nextChar] == -1)
        { 
          treap[v][nextChar] = treap.size();
          v = treap.size();
          treap.push_back(emptyLeaf);
          if (!newBranch)
          {
            newBranch = true;
            ans += (j + 1);
          }
        }
        else
        {
          v = treap[v][nextChar];
        }
      }
      if (!newBranch)
        ans += length;
    }
    printf("%d\n", ans);
  }
}