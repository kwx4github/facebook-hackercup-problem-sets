package com.facebook;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Autocomplete {
    public static void main(String[] args) throws FileNotFoundException {
        Scanner in = new Scanner(System.in);
        //Scanner in = new Scanner(new FileInputStream("/Users/rajashekhar.c/Documents/InterviewFeedbackReview/hackerrank"));
        int t = in.nextInt();
        for (int i = 0; i < t; i++) {
            int n = in.nextInt();
            addToTrie(i, n, in);
        }
        
        //calculateAutocomplete(n, k, inputStr);
        in.close();
    }
    
    private static void addToTrie(int caseno, int n, Scanner in){
        long total = 0;
        Trie[] head = new Trie[26];
        for (int i = 0; i < n; i++) {
            String inputStr = in.next();
            long returnValue = Trie.insertIntoTrie(head, inputStr);
            total = total + returnValue;
        }
        String temp = "Case #" + (caseno+1) + ": " + total;
        System.out.println(temp);
    }
    

}
class Trie{
    Trie[] childNodes;
    char ch;
    
    public Trie(char ch){
        childNodes = new Trie[26];
        this.ch = ch;
    }
    
    public static int insertIntoTrie(Trie[] head, String str){
        int returnValue = -1;
        char ch = str.charAt(0);
        int index = ch - 97;
        if(head[index] == null){
            returnValue = 1;
            head[index] = new Trie(ch);
        }
        return head[index].insertIntoTrie(str, 1, returnValue);
    }
    
    private int insertIntoTrie(String str, int index, int returnValue){
        Trie trie = this;
        for (int i = 1; i < str.length(); i++) {
            char ch = str.charAt(index);
            int newIndex = ch - 97;
            if(trie.childNodes[newIndex] == null){
                if(returnValue == -1){
                    returnValue = index + 1;    
                }
                trie.childNodes[newIndex] = new Trie(ch);
            }
            index = index + 1;
            trie = trie.childNodes[newIndex];
        }
        
        if(returnValue == -1){
            return str.length();    
        }
        return returnValue;

   }
}