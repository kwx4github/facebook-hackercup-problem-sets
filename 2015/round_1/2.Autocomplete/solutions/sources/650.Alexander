#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
#include <set>

using namespace std;

struct node {
  node() {
    for (int i = 0; i < 26; i++) edges[i] = NULL;
  }
  // ~node() {
  //   for (int i = 0; i < 26; i++) if (edges[i] != NULL) delete edges[i];
  // }
  node* edges[26];
};

node* root = NULL;

int place(const string& word) {
  node* cur = root;
  int cnt = -1;
  for (int i = 0; i < word.length(); i++) {
    const int index = word[i] - 'a';
    if (cur->edges[index] == NULL) {
      node* next = new node;
      cur->edges[index] = next;
      if (cnt == -1) cnt = i+1;
    }
    cur = cur->edges[index];
  }
  if (cnt == -1) cnt = word.length();
  return cnt;
}

int main() {
  int t;
  cin >> t;
  for (int tt = 1; tt <= t; tt++) {
    if (root) delete root;
    root = new node;
    int n;
    cin >> n;
    long long res = 0;
    for (int i = 0; i < n; i++) {
      string word;
      cin >> word;
      res += place(word);
    }
    printf("Case #%d: %lld\n", tt, res);
  }



  return 0;
}
