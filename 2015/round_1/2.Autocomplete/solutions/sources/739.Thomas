#include <cstddef>
#include <iostream>
#include <set>
#include <string>

int main()
{
    unsigned int t, n;
    std::string word;
    if (!(std::cin >> t)) { std::abort(); }

    for (unsigned int c = 0; c != t; ++c)
    {
        if (!(std::cin >> n)) { std::abort(); }

        unsigned int result = 0;
        std::set<std::string> dict;

        for (unsigned int i = 0; i != n; ++i)
        {
            if (!(std::cin >> word)) { std::abort(); }
            dict.insert(word);

            std::string prefix = { word[0] };
            for (unsigned int len = 1; ; ++len)
            {
                // Had to type the entire word (which may still be a prefix of some other, longer word)
                if (len == word.length()) { result += len; break; }

                auto it = dict.lower_bound(prefix);
                if (*it == word)
                {
                    ++it;
                    if (it == dict.end() || it->substr(0, len) != prefix) { result += len; break; }
                }
                prefix += word[len];
            }
        }

        std::cout << "Case #" << c + 1 << ": " << result << '\n';
    }
}
