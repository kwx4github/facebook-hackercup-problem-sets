using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Facebook
{
    class Autocomplete
    {
        public static void Solve()
        {
            FileInfo fin = new FileInfo("autocomplete.txt");
            FileInfo fout = new FileInfo("out.txt");
            using (StreamReader sr = fin.OpenText())
            {
                using (StreamWriter sw = fout.CreateText())
                {
                    int t = int.Parse(sr.ReadLine());
                    for (int i = 1; i <= t; i++)
                    {
                        Trie trie = new Trie();
                        int n = int.Parse(sr.ReadLine());
                        int length = 0;
                        for (int j = 0; j < n; j++)
                        {
                            String s = sr.ReadLine();
                            length += trie.GetDepth(s);
                            trie.Add(s);
                        }
                        sw.WriteLine("Case #" + i + ": " + length);
                    }
                }
            }
        }


    }

    class Trie
    {
        private Dictionary<char, Trie> data = new Dictionary<char, Trie>();

        public Dictionary<char, Trie> Data
        {
            get { return data; }
        }

        public void Add(String s)
        {
            IDictionary<char, Trie> d = data;
            foreach (char c in s)
            {
                if (!d.ContainsKey(c))
                {
                    d.Add(c, new Trie());
                }
                d = d[c].Data;
            }
        }

        public int GetDepth(String s)
        {
            int depth = 1;
            IDictionary<char, Trie> d = data;
            foreach (char c in s)
            {
                if (!d.ContainsKey(c))
                {
                    return depth;
                }
                d = d[c].Data;
                depth++;
            }
            return depth < s.Length ? depth : s.Length;
        }
    }
}
