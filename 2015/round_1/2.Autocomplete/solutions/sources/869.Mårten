#include <bits/stdc++.h>

using namespace std;

#define rep(i, a, b) for(int i = (a); i < int(b); ++i)
#define rrep(i, a, b) for(int i = (a) - 1; i >= int(b); --i)
#define trav(it, v) for(typeof((v).begin()) it = (v).begin(); it != (v).end(); ++it)
#define all(v) (v).begin(), (v).end()

typedef double fl;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<pii> vpi;

struct Node{
	int child[256];
	bool hasChild[256];

	void init(){
		for(int i=0; i < 256; ++i)
			hasChild[i]=0;
	}
};

vector<Node> nodes;

void solve(int t){
	int n;
	cin >> n;
	int ans=0;
	Node root;
	root.init();
	nodes.clear();
	nodes.push_back(root);
	rep(i,0,n){
		int curNode=0;
		string w;
		cin >> w;
		bool unique=0;
		for(int i=0; i < w.size(); ++i){
			if(nodes[curNode].hasChild[w[i]]){
				++ans;
				curNode=nodes[curNode].child[w[i]];
			}
			else{
				if(!unique){
					++ans;
					unique=1;
				}
				Node newnode;
				newnode.init();
				nodes.push_back(newnode);
				nodes[curNode].hasChild[w[i]]=1;
				nodes[curNode].child[w[i]]=nodes.size()-1;
				curNode=nodes.size()-1;
			}
		}
	}
	cout << "Case #" << t << ": " << ans;
	cout << endl;
}

int main(){
	int T;
	cin >> T;
	for(int t=1; t <= T; ++t){
		solve(t);
	}
}
