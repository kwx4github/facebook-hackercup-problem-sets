package gcjpractice;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;

public class Autocomplete {
    BufferedReader sc;

    void read () throws NumberFormatException, IOException {
        n = Integer.valueOf(sc.readLine());
    }

    int n;

    static class Tree {
        char c;
        int level;
        HashMap<Integer, Tree> children = new HashMap<Integer, Tree>();

        public Tree() {
            c = 0;
            level = 0;
        }

        public Tree(char c, int level) {
            this.c = c;
            this.level = level;
        }

        public int add (String s, int idx) {
            Tree curLevel = this;
            int ret = 0;
            boolean isFirst = true;
            for (int i = 0; i < s.length(); i++) {
                Tree child = curLevel.children.get(s.charAt(i) - 'a');
                if (child == null) {
                    if (isFirst) {
                        ret = i + 1;
                        isFirst = false;
                    }
                    child = new Tree(s.charAt(i), i + 1);
                    curLevel.children.put(s.charAt(i) - 'a', child);
                    curLevel = child;
                } else {
                    curLevel = child;
                    ret = i + 1;
                }
            }
            return ret;
        }
    }

    void solve () throws IOException {
        final Tree tree = new Tree();
        int count = 0;
        for (int i = 0; i < n; i++) {
            final String s = sc.readLine();
            final int len = tree.add(s, 0);
            // System.out.println(s.substring(0, len));
            count += len;
        }
        System.out.println(count);
    }

    void run () throws NumberFormatException, IOException {
        sc =
                new BufferedReader(new FileReader(
                        "C:\\Users\\sunx2013\\Downloads\\in.txt"));
        final int cn = Integer.valueOf(sc.readLine());
        for (int ci = 1; ci <= cn; ci++) {
            read();
            System.out.printf("Case #%d: ", ci);
            solve();
        }
    }

    public static void main (String[] args) throws NumberFormatException,
            IOException {
        new Autocomplete().run();
    }
}
