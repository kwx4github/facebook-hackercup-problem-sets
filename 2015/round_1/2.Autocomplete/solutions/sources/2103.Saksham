
#include <bits/stdc++.h>

using namespace std;
typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef vector<LL> VLL;
typedef pair<int, int> PI;

#define SI(x) scanf("%d", &x)
#define SLL(x) scanf("%lld", &x)
#define SORTV(v) sort(v.begin(), v.end())
#define EACH(it, v) for(__typeof(v.begin()) it(v.begin()); it != v.end(); it++)
#define pb(x) push_back(x)
#define mp(x, y) make_pair(x, y)
#define f first
#define s second

template<class T> void print_array(T a[], int size) { for(int i=0; i<size; i++) cout<<a[i]<<" "; cout<<endl; }

template<class T> void print_array_v(T &a) { int size = a.size(); for(int i=0; i<size; i++) cout<<a[i]<<" "; cout<<endl; }

struct node
{
	node *next[26];
};

int add(node *root, char *str)
{
	int ret = 0, i=0;
	for(i=0; str[i]; i++)
		if(root->next[str[i]-'a'] != NULL)
		{
			ret++;
			root = root->next[str[i]-'a'];
		}
		else
		{
			root->next[str[i]-'a'] = new node;
			root = root->next[str[i]-'a'];
//			for(int i=0; i<26; i++)
//				root->next[i] = NULL;
		}
	return min(i, ret+1);
}

char s[1000100];

int main()
{
	int T;
	scanf("%d", &T);
	for(int t=1; t<=T; t++)
	{
		node *root = new node;
		for(int i=0; i<26; i++)
			root->next[i] = NULL;

		int n;

		SI(n);
		LL ans = 0;
		for(int i=0; i<n; i++)
		{
			scanf("%s", s);
			ans += add(root, s);
		}
		printf("Case #%d: %lld\n", t, ans);
	}
	return 0;
}
