#include <iostream>
#include <string>
#include <vector>

using namespace std;

const int CHARS = 'z' - 'a' + 1;

struct bor_t {
  int counter;
  bor_t* ref[CHARS];

  bor_t() noexcept :
      counter(0) {
    fill_n(ref, CHARS, nullptr);
  }
};

int main() {
  ios_base::sync_with_stdio(false);
  int t;
  cin >> t;
  for (int c = 1; c <= t; ++c) {
    bor_t *root = new bor_t();
    int n;
    cin >> n;
    int answer = 0;
    for (int i = 0; i < n; ++i) {
      string s;
      cin >> s;
      bor_t *current = root;
      for (char c : s) {
        c -= 'a';
        if (!current->ref[c])
          current->ref[c] = new bor_t();
        current = current->ref[c];
        ++current->counter;
      }
      current = root;
      for (char c : s) {
        c -= 'a';
        current = current->ref[c];
        ++answer;
        if (current->counter == 1) {
          break;
        }
      }
    }
    cout << "Case #" << c << ": " << answer << endl;
  }
  return 0;
}
