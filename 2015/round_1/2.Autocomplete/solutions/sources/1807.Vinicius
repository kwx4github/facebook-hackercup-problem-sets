#include <cstdio>
#include <cstring>
using namespace std;

typedef struct node_ {
  bool fim;
  node_ *v[26];
  int cnt;
} node;

int T,n,res;
char str[2000100];

int p;
node nodes[2000100];
node *root;

node *my_malloc(){
  nodes[p].cnt=0;
  nodes[p].fim=false;
  for(int i=0;i<26;i++)
    nodes[p].v[i] = NULL;
  return &(nodes[p++]);
}

node *insert(node *t, char *s){
  if(*s==0){
    t->fim = true;
    t->cnt++;
    return t;
  }
  if(t==NULL) t = my_malloc();

  int num = s[0]-'a';
  if(t->v[num]==NULL) t->v[num] = my_malloc();
  insert(t->v[num],s+1);
  t->cnt++;
  return t;
}

int search(node *t, char *s){
  if(*s==0) return 0;
  int num = s[0]-'a';
  if (t!=root and t->cnt==1) return 0;
  return 1 + search(t->v[num],s+1);
}

int main(){

  int C=1;
  scanf("%d",&T);
  while(T--){
    scanf("%d",&n);

    root = NULL;
    p = 0;
    res = 0;
    for(int i=0;i<n;i++){
      scanf("%s",str);
      root = insert(root,str);
      res += search(root,str);
    }

    printf("Case #%d: %d\n",C++,res);
  }

  return 0;
}
