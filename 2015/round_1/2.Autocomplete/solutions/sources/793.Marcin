#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> PI;
typedef long long LL;
typedef double D;
#define FI first
#define SE second
#define MP make_pair
#define PB push_back
#define R(I,N) for(int I=0;I<N;I++)
#define F(I,A,B) for(int I=A;I<B;I++)
#define FD(I,N) for(int I=N-1;I>=0;I--)
#define make(A) scanf("%d",&A)
#define make2(A,B) scanf("%d%d",&A,&B)
#define ALL(x) (x).begin(), (x).end()
#define db if(1)printf
template<typename C> void ma(C& a,C b){if(a<b)a=b;}
template<typename C> void mi(C& a,C b){if(a>b)a=b;}
const int ALFA = 'z'-'a'+1;
struct node{
  node* d[ALFA];
  node(){R(i,ALFA)d[i] = 0;}
  ~node(){
    R(i,ALFA)if(d[i])delete d[i];
  }
}* korz;
int n;
#define MAX 10010000
char z[MAX];
int wyn;
void add(){
  scanf("%s",z);
  node *ak = korz;
  int i = 0;
  bool cz = 1;
  while(z[i]){
    z[i] -= 'a';
    if(ak->d[z[i]] == 0){
      if(cz)wyn+=i+1;
      cz = 0;
      ak->d[z[i]] = new node();
    }
    ak = ak->d[z[i]];
    i++;
  }
  if(cz)wyn+=i;
}
void test(){
  static int cas = 0; cas++;
  printf("Case #%d: ",cas);
  korz = new node();
  wyn = 0;
  make(n);
  if(n == 1){
    scanf("%*s");
    printf("%d\n",1);
  }
  R(i,n)add();
  printf("%d\n",wyn);
  delete korz;
}
main(){
  int _;make(_);while(_--)test();
}