
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.Vector;

public class Autocomplete {

	public static void main(String[] args) {
		Tree t = null;
		Scanner s = null;
		try {
			s = new Scanner(new File(args[0]));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int cases = s.nextInt();
		for(int i = 0; i < cases; ++i) {
			t = new Tree();
			int words = s.nextInt();
			int sum = 0;
			for(int j = 0; j < words; ++j) {
				sum += t.Add(s.next());
			}
			System.out.println("Case #" + (i + 1) + ": " + sum);
		}
	}
	
	static class Node {
		Node[] nodes;
		
		public Node() {
			nodes = new Node[26];
			for(int i = 0; i < 26; ++i) {
				nodes[i] = null;
			}
		}
	}
	
	static class Tree {
		Node root;
		
		public Tree() {
			root = new Node();
		}
		
		public int Add(String s) {
			Node current = root;
			Node prev = root;
			int result = s.length();
			boolean resultFound = false;
			for(int i = 0; i < s.length(); ++i) {
				int index = (int)s.charAt(i) - (int)'a';
				if(current.nodes[index] == null) {
					current.nodes[index] = new Node();
					if(!resultFound) {
						resultFound = true;
						result = i + 1;
					}
				}
				current = current.nodes[index];
				
			}
			return result;
		}
	}

}
