/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(1000005);

char a[MAXN];

struct node
{
    int children[26];
    node(){
        REP(i,26)
            children[i] = -1;
    }
}t[MAXN];

void solve(int test){

    int n;
    S("%d",&n);

    REP(i,MAXN+1)
        t[i] = node();

    t[0] = node();

    int num = 1, ans = 0;

    REP(i,n)
    {
        S("%s",a);

        int now = 0, l = strlen(a);

        bool chk = false;

        REP(j,l)
        {
            if(t[now].children[a[j]-'a'] != -1)
            {
                ans++;
                now = t[now].children[a[j]-'a'];
            }

            else
            {
                if(!chk)
                {
                    ans++;
                    chk = true;
                }

                t[num] = node();
                t[now].children[a[j]-'a'] = num;
                num++;

                now = t[now].children[a[j]-'a'];
            }
        }
    }

    P("Case #%d: %d\n",test,ans);
}

int main(){

    freopen("1input.txt","r",stdin);
    freopen("1output.txt","w",stdout);

    int t;
    S("%d",&t);
    FOR(i,1,t)
        solve(i);

}
