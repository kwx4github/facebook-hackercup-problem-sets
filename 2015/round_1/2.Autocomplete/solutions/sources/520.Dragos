#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<cstring>
using namespace std;
#define SIGMA 26
struct trie
{
int nod,nrfii;
trie *next[SIGMA];
    trie()
    {
    nod=nrfii=0;
    memset(next,0,sizeof( next ) );
    }
};
trie *T = new trie;
char sir[1101010];
int N,a;
int adauga(trie *anod,char *s)
{
    int k =0;

    while(true){
        if(*s=='\n')
        {
            anod->nod ++;
            return 0;
        }
        if(anod->next[*s-'a'] == 0)
        {
            anod->next[*s-'a']=new trie;
            anod->nrfii++;
        }
        anod = anod->next[ *s-'a' ];
        s = s+1;
    }
}
int sterge(trie *anod,char *s)
{
    if(*s=='\n')
        anod->nod--;
    else if( sterge( anod->next[ *s-'a' ],s+1))
    {
        anod->next[ *s-'a' ] = 0;
        anod->nrfii--;
    }
    if(anod->nod == 0&&anod->nrfii==0&& anod!= T )
    {
        delete anod;
        return 1;
    }
return 0;
}
int afis(trie *anod, char *s)
{
    while(true){
    if(*s=='\n')
        return anod->nod;
    if(anod -> next  [*s - 'a']) {
        anod = anod->next[*s-'a'];
        s=s+1;
        }
        else return 0;
    }
}
int ver(trie *anod,char *s,int k)
{
    while(true){
    if(*s=='\n' || !anod->next[*s-'a'])
        return k;
    anod=anod->next[*s-'a'];
    s=s+1;
    k=k+1;
    }
}
int x=0,Tx;
long long S;
int main()
{
freopen("test2.in","r",stdin);
freopen("test2.out","w",stdout);
    scanf("%d\n",&Tx);
    for(int tt=1;tt<=Tx;++tt){
    T = new trie;
    S=0;
    scanf("%d\n",&N);
    for(int i=1;i<=N;++i){
    x=0;
    fgets(sir,1100000,stdin);
    int cost = min(ver(T,sir,0)+1,(int)strlen(sir)-1);
    //printf("%d\n",cost);
    S+=cost;
    adauga(T,sir);
    }
    printf("Case #%d: %lld\n",tt,S);
    }
}
