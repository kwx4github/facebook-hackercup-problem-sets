#include <bits/stdc++.h>
using namespace std;

typedef long long lli;

int N;
vector<string> S;

struct Node {
  bool hasEnd;
  vector<int> next;
  Node() {
    hasEnd = false;
    next = vector<int>(26, -1);
  }
};

int makeTree() {
  vector<Node> tree;
  tree = vector<Node>(1, Node());
  tree[0].hasEnd = true;
  int res = 0;
  for(int i = 0; i < N; ++i) {
    const string &s = S[i];
    int d = 1;
    for(int j = 0, now = 0; j < s.size(); ++j) {
      int k = s[j] - 'a';
      if(tree[now].next[k] == -1) {
        tree[now].next[k] = tree.size();
        tree.push_back(Node());
      }
      now = tree[now].next[k];
      res += d;
      if(!tree[now].hasEnd) d = 0;
      tree[now].hasEnd = true;
    }
  }
  return res;
}

int main() {
  int T;
  cin >> T;
  for(int tc = 1; tc <= T; ++tc) {
    cout << "Case #" << tc << ": ";
    cin >> N;
    S.resize(N);
    for(int i = 0; i < N; ++i) cin >> S[i];
    cout << makeTree() << endl;
  }
  return 0;
}
