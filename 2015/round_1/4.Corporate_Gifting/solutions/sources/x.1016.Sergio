#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <list>
#include <climits>
#define MAX 200010
#define LIM 40
using namespace std;

int v[MAX];
long long int dp[MAX][LIM+1];
list<int> hijos[MAX];

long long int calcula(int n, int prohibido){
	long long int suma = 0;
	for(list<int>::iterator it = hijos[n].begin(); it != hijos[n].end(); it++){
		long long int mejor = LLONG_MAX;
		for(int j = 1; j <= LIM; j++)
			if(j != prohibido)
				mejor = min(dp[*it][j], mejor);
		suma += mejor;
	}
	return dp[n][prohibido] = suma+prohibido;
}

long long int solve(int n){
	for(int i = n; i > 0; i--){
		if(hijos[i].size() == 0){
			for(int j = 1; j <= LIM; j++)
				dp[i][j] = j;
		}
		else{
			for(int j = 1; j <= LIM; j++)
				calcula(i, j);
		}
	}
	long long int resp = LLONG_MAX;
	for(int i = 1; i <= LIM; i++)
		resp = min(resp, dp[1][i]);
	return resp;
}

int main(){
	int n, casos;
	scanf("%d", &casos);
	for(int i = 1; i <= casos; i++){
		scanf("%d", &n);
		for(int i = 1; i <= n; i++){
			scanf("%d", &v[i]);
			hijos[v[i]].push_back(i);
		}
		printf("Case #%d: %lld\n", i, solve(n));
		for(int i = 0; i <= n; i++)
			hijos[i].clear();
	}
	return 0;
}
