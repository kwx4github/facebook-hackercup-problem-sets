// {{{ template
#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef vector<string> vs;
typedef vector<long long> vll;
typedef vector<pii> vpii;
// }}}

const int N = 200001;

vi adj[N];
int buy[N];
int par[N];
int out[N];

int main() {
  cin.sync_with_stdio(0); cin.tie(0);
  int T;
  cin >> T;
  for (int t = 1; t <= T; t++) {
    int n;
    cin >> n;
    for (int i = 0; i < n; i++) {
      adj[i].clear();
      out[i] = 0;
    }
    for (int i = 0; i < n; i++) {
      int m;
      cin >> m;
      m--;
      if (m >= 0) {
        adj[m].push_back(i);
        out[m]++;
        par[i] = m;
      }
    }
    queue<int> q;
    for (int i = 0; i < n; i++) {
      if (out[i] == 0) {
        q.push(i);
      }
    }
    set<int> s;
    for (int i = 1; i <= n; i++) {
      s.insert(i);
    }
    while (!q.empty()) {
      int u = q.front();
      q.pop();
      for (int v : adj[u]) {
        s.erase(buy[v]);
      }
      assert(!s.empty());
      buy[u] = *s.begin();
      for (int v : adj[u]) {
        s.insert(buy[v]);
      }
      if (par[u] != -1) {
        out[par[u]]--;
        if (out[par[u]] == 0) {
          q.push(par[u]);
        }
      }
    }
    long long ans = 0;
    for (int i = 0; i < n; i++) {
      ans += buy[i];
    }
    cout << "Case #" << t << ": " << ans << endl;
  }
  return 0;
}

