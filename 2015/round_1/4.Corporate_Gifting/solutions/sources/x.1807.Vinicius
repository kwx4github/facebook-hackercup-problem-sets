#include <cstdio>
#include <cstring>
#include <vector>
#include <set>
using namespace std;

int T,n,p;
vector<int> adj[200010];
bool visited[200010];
int cost[200010];

int dfs(int v){
  visited[v]=true;
  set<int> s;
  int res = 0;
  for(int i=0;i<(int)adj[v].size();i++){
    if(!visited[adj[v][i]]){
      res += dfs(adj[v][i]);
      s.insert(cost[adj[v][i]]);
    }
  }
  int ans = 1;
  for(set<int>::iterator it=s.begin();it!=s.end();it++){
    if(*it<ans) break;
    if(*it==ans){
      ans++;
    }
  }
  cost[v]=ans;
  return cost[v]+res;
}

int main(){

  int C=1;
  scanf("%d",&T);
  while(T--){
    scanf("%d",&n);
    for(int i=0;i<=n;i++) adj[i].clear();
    for(int i=0;i<n;i++){
      scanf("%d",&p);
      if(p==0) continue;
      p--;
      adj[i].push_back(p);
      adj[p].push_back(i);
    }
    memset(visited,false,sizeof(visited));
    printf("Case #%d: %d\n",C++,dfs(0));
  }

  return 0;
}
