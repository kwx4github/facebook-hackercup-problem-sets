#include <iostream>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <climits>
#include <cassert>
#include <cstring>
#include <string>
using namespace std;
const int MAXN = 2e5 + 1;
int N, T;
#define FILE_IN "corporate_gifting.txt"
#define FILE_OUT "output.txt"
int par[MAXN], deg[MAXN];
short colour[MAXN];

void read() {
	scanf("%d", &N);
	int p;
	scanf("%d", &p);
	par[1] = p;
	for (int i = 2; i <= N; i++) {
	 	scanf("%d", &p);
	 	deg[i]++, deg[p]++;
	 	par[i] = p;
	}                     
}
int solve() {
	if(N == 1)	return 1;
	for (int i = 2, v, dist; i <= N; i++) {
		if(deg[i] != 1)	continue;
		v = i;
		colour[v] = 1;
		dist = 0;
		while(true) {
			if(par[v] == 0)	break;
			if(colour[par[v]] == colour[v]) {
				colour[par[v]] = 3;
				break;
			}
			if(colour[par[v]])	break;
			if(dist & 1)	colour[par[v]] = 1;
			else colour[par[v]] = 2;
			dist++;
			v = par[v];
		}
	}
	int ans = 0;	
	for (int i = 1; i <= N; i++)
		ans += colour[i];
	return ans;
}

void init() {
 	memset(colour, 0, sizeof colour);
 	memset(par, 0, sizeof par);
 	memset(deg, 0, sizeof deg);
}
int main()
{
	freopen(FILE_IN, "r", stdin);
	freopen(FILE_OUT, "w", stdout);
	scanf("%d", &T);
	for (int tc = 1; tc <= T; tc++) {
		init();
	 	read();
	 	printf("Case #%d: %d\n", tc, solve());
	}                                         	
		
	return 0;
}