import string

testIndex=1

problemRoot="d:/prog/versenyek/hackercup"
problemDir="2015/round1"
problemName="corporate_gifting"
inputFiles= ["_example_input.txt",  ".txt"]
outputFiles=["_test_output.txt",    "_output.txt"]

fileName=string.strip(problemRoot)+"/"+problemDir+"/"+problemName+inputFiles[testIndex]
inp=open(fileName,'r')
fileOut=string.strip(problemRoot)+"/"+problemDir+"/"+problemName+outputFiles[testIndex]
fileToWrite=open(fileOut,'wb')
iLineIdx=1
for iCase in range(int(inp.readline())):
  print "#",iCase+1
  num=int(inp.readline())
  boss=map(int,inp.readline().strip().split())
  emps={}
  # fa elkeszitese
  for i in range(1,num):
    if boss[i] not in emps:
      emps[boss[i]]=set([i+1])
    else:
      emps[boss[i]].add(i+1)
  bestSum=[1]*(num+1) # ezt a manager nelkulieknel nem szamoljuk mar
  bestVal=[1]*(num+1) # a manager nelkulieknel az a minimalis szumma, ha ok 1-et adnak
  nextBest=[2]*(num+1) # ha nem adhat 1-et, akkor a minimuma 2
  todo=set(emps.keys())
  while len(todo)>0:
    for i in todo.copy():
      if len(emps[i]&todo)==0:
        # minden beosztottnak megvan mar a minimumszamitasa
        specVals=set([bestVal[emp] for emp in emps[i]]) # mely szamok eseten nem optimalis a reszfa
        specVals-=set([0]) # a 0 csak azt jelzi, hogy nincs ilyen (2 minimum volt, a masik mindig alkalmazhato)
        mins=[]
        for value in range(1, len(specVals)+3): # a seconds-ben levokon kivul legyen 2 benne
          mins.append((value+sum(bestSum[emp] if bestVal[emp]!=value else nextBest[emp] for emp in emps[i]),value))
        mins=sorted(mins)
        bestSum[i],bestVal[i]=mins[0]
        nextBest[i],_=mins[1]
        if bestSum[i]==nextBest[i]:
          bestVal[i]=0 # feleslegesen ne izmozzon majd rajta
        todo.remove(i)
  fileToWrite.write("Case #"+str(iCase+1)+": "+str(bestSum[1])+"\n")
inp.close()
fileToWrite.close()
