import java.util.*;
import java.io.*;
public class d {
	static int n;
	static ArrayList<Integer>[] g;
	static int[][] memo;
public static void main(String[] args) throws IOException
{
	//Scanner input = new Scanner(System.in);
	Scanner input = new Scanner(new File("corporate.txt"));
	int T = input.nextInt();
	for(int t = 0; t<T; t++)
	{
		n = input.nextInt();
		g = new ArrayList[n];
		for(int i = 0; i<n; i++) g[i] = new ArrayList<Integer>();
		for(int i = 0; i<n; i++)
		{
			int p = input.nextInt()-1;
			if(p != -1) g[p].add(i);
		}
		memo = new int[n][20];
		for(int[] A: memo) Arrays.fill(A, -1);
		int[] degs = new int[n];
		for(int i = 0; i<n; i++)
			for(int x : g[i])
				degs[x]++;
		Queue<Integer> q = new LinkedList<Integer>();
		for(int i = 0; i<n; i++) if(degs[i] == 0) q.add(i);
		Stack<Integer> stk = new Stack<Integer>();
		while(!q.isEmpty())
		{
			int at = q.poll();
			stk.add(at);
			for(int x : g[at])
			{
				degs[x]--;
				if(degs[x] == 0) q.add(x);
			}
		}
		while(!stk.isEmpty())
		{
			int at = stk.pop();
			for(int i = 0; i<20; i++) go(at, i);
		}
		System.out.println("Case #" + (t+1)+": "+Math.min(go(0, 0), go(0, 1)));
	}
}
static int go(int at, int last)
{
	int res = 987654321;
	if(memo[at][last] != -1) return memo[at][last];
	for(int i = 1; i<=20; i++)
	{
		if(i-1 == last) continue;
		int cur = i;
		for(int x : g[at]) cur += go(x, i-1);
		res = Math.min(res, cur);
	}
	return memo[at][last] = res;
}
}
