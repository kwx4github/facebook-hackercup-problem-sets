#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main()
{
	int T;
	cin>>T;

	for (int t=1; t<=T; t++)
	{
		int N;
		cin>>N;
		vector<vector<int>> E(N);
		for (int i=0; i<N; i++)
		{
			int m;
			cin>>m;
			if (i>0)
				E[m-1].push_back(i);
		}

		vector<vector<long long>> A(N);
		for (int i=N-1; i>=0; i--)
		{
			int m = min(1024, (int)E[i].size()+2);
			A[i] = vector<long long>(m);
			for (int j=0; j<m; j++)
			{
				long long a = 0;
				for (int k=0; k<(int)E[i].size(); k++)
				{
					long long b = 1LL*N*N;
					for (int l=0; l<(int)A[E[i][k]].size(); l++)
					if (l!=j)
						b = min(b, A[E[i][k]][l]);
					a += b;
				}
				A[i][j] = a + j;
			}
		}
		
		long long ans = *min_element(A[0].begin(), A[0].end()) + N;
		printf("Case #%d: %lld\n", t, ans);
	}
}

