#include <stdio.h>
#include <string.h>
#include <vector>
using namespace std;
const int max_price = 18;

int n;
vector<int> adj[200010];
int dp[200010][20];

int funcao(int node, int forbidden);

int main() {
	int t, aux, test_count = 1;
	scanf("%d", &t);
	while(t--) {
		scanf("%d", &n);
		for(int i=0; i<=n; i++) {
			adj[i].clear();
		}
		
		scanf("%d", &aux);
		for(int i=1; i<n; i++) {
			scanf("%d", &aux);
			aux--;
			
			adj[aux].push_back(i);
		}
		
		memset(dp, 0, sizeof(dp));
		printf("Case #%d: %d\n", test_count++, funcao(0, 19));
	}
}

int funcao(int node, int forbidden) {
	if(dp[node][forbidden]) return dp[node][forbidden];
	
	int ans = 1000000000, aux;
	int size = (int)adj[node].size();
	for(int i=1; i<forbidden; i++) {
		aux = i;
		for(int j=0; j<size; j++) {
			aux += funcao(adj[node][j], i);
		}
		
		ans = (aux < ans ? aux : ans);
	}
	for(int i=forbidden+1; i<=max_price; i++) {
		aux = i;
		for(int j=0; j<size; j++) {
			aux += funcao(adj[node][j], i);
		}
		
		ans = (aux < ans ? aux : ans);
	}
	
	return dp[node][forbidden] = ans;
}
