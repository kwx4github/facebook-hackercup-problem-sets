//TC

#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(a,b,c) for(int (a)=(b);(a)<=(c);(a)++)
#define forr(a,b,c) for(int (a)=(b);(a)>=(c);(a)--)
#define foreach(a,b) for( typeof( (b).begin() ) a=(b).begin(); (a)!=(b).end() ; (a)++ )
#define foreachr(a,b) for( typeof( (b).rbegin() ) a=(b).rbegin(); (a)!=(b).rend() ; (a)++ )
#define dg(x)  cerr <<#x<<':'<<x<<" "
#define dbg(x)  cerr <<#x<<':'<<x<<endl
#define SET(A,b) memset(A,b,sizeof (A) )
#define SIZE(A) ((int)(A).size())
#define ALL(A) (A).begin(),(A).end()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define num(a) (1LL<<(a))
using namespace std;

typedef double dbl;
typedef long long Lint;
typedef pair<int,int> ii;
typedef pair<Lint,Lint> Lii;

const Lint mod = 1e9;

const int MAXN = 200010;

int dn[MAXN][26];

vector<int> G[MAXN];

int f(int k,int t){
	
	//~ printf("%d %d\n",k,t);
	
	int &rev=dn[k][t];
	
	if(rev!=-1)	return rev;
	
	rev=t;
	
	forn( i,0,SIZE( G[k] )-1 )
	{
		int tmp=1e9;
		forn(j,1,20)
			if( j!=t ){
				//~ printf("%d %d -> %d %d\n",k,t,G[k][i],j);
				tmp=min( f( G[k][i] , j ) ,tmp );
			}
		rev+=tmp;
	}
	
	//~ printf("%d %d -> %d\n",k,t,rev);
	
	return rev;
	
}

int main(){
	
	int n,a,res,T;
	
	scanf(" %d",&T);
	
	forn(Case,1,T){
		
		scanf(" %d",&n);
		
		forn(i,1,n)
			G[i].clear();
		
		forn(i,1,n)
		{
			scanf(" %d",&a);
			if(a!=0)
				G[a].pb(i);
		}
		
		res=1e9;
		
		SET(dn,-1);
		
		forn(i,1,20)
			res=min(res,f(1,i));
		printf("Case #%d: %d\n",Case,res);
		
	}
	return 0;
	
}
