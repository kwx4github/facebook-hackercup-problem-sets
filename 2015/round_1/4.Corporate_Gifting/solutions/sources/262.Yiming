#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <cctype> 
#include <string> 
#include <cstring> 
#include <ctime> 

using namespace std;

#define _int64 long long
#define lim 51

vector<int> a[300000];
int p[300000];
int d[300000][lim];
int mini[lim];

int main()
{
  vector<int> q;
  int i,j,k,l,t,o,x,y,ans,n;
  scanf("%d",&t);
  for (l=0;l<t;l++)
  {
    scanf("%d",&n);
    for (i=0;i<n;i++)
      a[i].clear();
    for (i=0;i<n;i++)
    {
      scanf("%d",&p[i]);
      p[i]--;
      if (p[i]>=0) a[p[i]].push_back(i);
    }
    q.clear();
    q.push_back(0);
    for (i=0;i<q.size();i++)
      for (j=0;j<a[q[i]].size();j++)
        q.push_back(a[q[i]][j]);
    for (i=q.size()-1;i>=0;i--)
    {
      x=q[i];
      for (j=0;j<lim;j++)
        d[x][j]=j;
      for (j=0;j<a[x].size();j++)
      {
        y=a[x][j];
        for (k=0;k<lim;k++)
          mini[k]=2000000000;
        for (k=0;k<lim;k++)
          for (o=0;o<lim;o++)
            if ((k!=o)&&(d[y][k]<mini[o]))
              mini[o]=d[y][k];
        for (k=0;k<lim;k++)
          d[x][k]+=mini[k];
      }
    }
    ans=2000000000;
    for (i=0;i<lim;i++)
      if (d[0][i]<ans) ans=d[0][i];
    ans+=n;
    printf("Case #%d: %d\n",l+1,ans);
  }
  return 0;
}
