#include <cstdio>
#include <cstring>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <vector>
using namespace std;

FILE *in = fopen("corporate_gifting.txt", "r");
FILE *out = fopen("f.out", "w");

#define MAXN 200200
#define MAXK 15
#define INF 1000000000

vector<int> child[MAXN];
int N, parent[MAXN];
int dp[MAXN][MAXK + 2];

int f(int i, int l){
	int &ret = dp[i][l];
	if(ret != -1){
		return ret;
	}
	ret = INF;
	int e = child[i].size();

	for(int q = 1; q < MAXK; q++){
		if(q == l){
			continue;
		}
		int tmp = q;
		for(int w = 0; w < e; w++){
			int nxt = child[i][w];
			tmp += f(nxt, q);
		}
		ret = min(ret, tmp);
	}

	return ret;
}

int main(){
	int ntest;
	fscanf(in, "%d", &ntest);
	for(int test = 1; test <= ntest; test++){
		fscanf(in, "%d", &N);
		
		for(int q = 0; q < MAXN; q++){
			child[q].clear();
		}

		for(int q = 0; q < N; q++){
			fscanf(in, "%d", &parent[q]);
		}

		for(int q = 0; q < N; q++){
			if(q == 0){
				continue;
			}
			parent[q] --;
			child[parent[q]].push_back(q);
		}

		memset(dp, -1, sizeof dp);
		int result = f(0, MAXK);

		fprintf(out, "Case #%d: %d\n", test, result);
	}
	return 0;
}