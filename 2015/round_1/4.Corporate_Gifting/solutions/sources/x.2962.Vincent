package r1;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class Q4 {
	
	Map< Integer, Integer > m = new HashMap< Integer, Integer >();
	Map< Integer, Set< Integer > > t = new HashMap< Integer, Set< Integer > >();
	int[] parents = new int[ 300000 ];
	char[] leaves = new char[ 300000 ];
	
	public void test() {
		Scanner scanner = new Scanner( System.in );
		int ntc = scanner.nextInt();
		for( int i = 1; i <= ntc; i++ ) {
			m.clear();
			t.clear();
			
			int n = scanner.nextInt();
			for( int j = 1; j <= n; j++ ) {
				int id = scanner.nextInt();
				parents[ j ] = id;
				leaves[ j ] = 'T';
				if( id >= 1 ) {
					leaves[ id ] = 'F';
				}
			}
			
			int c = 0;
			for( int j = n; j >= 1; j-- ) {
				if( leaves[ j ] == 'T' ) {
					c += 1;
					add( parents[ j ], 1 );
				} else {
					for( int k = 1; k <= n; k++ ) {
						if( ! t.get( j ).contains( k ) ) {
							c += k;
							add( parents[ j ], k );
							break;
						}
					}
				}
			}
			System.out.println( String.format( "Case #%d: %d", i, c ) );
		}
		scanner.close();
	}
	
	public void add( int pid, int k) {
		if( ! t.containsKey( pid ) ) {
			t.put( pid, new HashSet< Integer >() );
		}
		t.get( pid ).add( k );
	}
	
	public static void main( String[] args ) {
		new Q4().test();
	}

}
