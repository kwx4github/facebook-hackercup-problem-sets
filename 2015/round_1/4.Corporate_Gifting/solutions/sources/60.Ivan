import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class CorporateGifting {
	
	static class Node {
		int min1, min2;
		int g1, g2;
		List<Node> children = new ArrayList<Node>();
	}
	
	static void process(Node node) {
		for (Node child : node.children)
			process(child);
		int max = 0;
		for (Node child : node.children)
			max = Math.max(max, Math.max(child.g1, child.g2));
		max += 2;
		for (int g = 1; g <= max; g++) {
			int sum = g;
			for (Node child : node.children) {
				if (g == child.g1)
					sum += child.min2;
				else 
					sum += child.min1;
			}
			if (node.g2 == 0 | sum < node.min2) {
				if (node.g1 == 0 | sum < node.min1) {
					node.g2 = node.g1;
					node.min2 = node.min1;
					node.g1 = g;
					node.min1 = sum;
				}
				else {
					node.g2 = g;
					node.min2 = sum;
				}
			}
		}
	}
	
	public static void main(String[] args) {
		try {
			Scanner in = new Scanner(new BufferedReader(new FileReader(new File("corporate_gifting.txt")), 256 << 10));
			BufferedWriter out = new BufferedWriter(new FileWriter(new File("output.txt")), 256 << 10);

			int testsNumber = in.nextInt();
			for (int testId = 1; testId <= testsNumber; testId++) {
				int n = in.nextInt();
				int[] parents = new int[n+1];
				Node[] nodes = new Node[n+1];
				for (int i = 1; i <= n; i++) {
					parents[i] = in.nextInt();
					nodes[i] = new Node();
				}
				for (int i = 2; i <= n; i++) {
					nodes[parents[i]].children.add(nodes[i]);
				}
				process(nodes[1]);
				out.append("Case #" + testId + ": ");
				out.append(nodes[1].min1 + "\n");
			}
			in.close();
			out.close();
		}
		catch (RuntimeException rte) {
			throw rte;
		}
		catch (Exception e) {
			System.err.println("Error:" + e.getMessage());
		}
	}
}
