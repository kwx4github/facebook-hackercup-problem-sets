INF = 1000000000
K = 20
t = int(input())
for test in range(1, t + 1):
    n = int(input())
    A = [int(x) - 1 for x in input().split()]
    G = [[] for _ in range(n)]
    for i in range(n):
        if A[i] != -1:
            G[A[i]].append(i)

    DP = [[-1 for _ in range(K)] for __ in range(n)]

    maxdollar = 0
    topsort = []

    used = [False for _ in range(n)]
    stack = []
    stack.append(0)
    while len(stack) > 0:
        v = stack[-1]
        for to in G[v]:
            if not used[to]:
                stack.append(to)
                used[to] = True
        if v == stack[-1]:
            topsort.append(v)
            stack.pop()

    for cur in topsort:
        for j in range(1, K):
            DP[cur][j] = j
            for child in G[cur]:
                minval = INF
                for v in range(1, K):
                    if v == j:
                        continue
                    if minval > DP[child][v]:
                        minval = DP[child][v]
                        maxdollar = max(maxdollar, v)
                DP[cur][j] += minval

    ans = INF
    for i in range(1, K):
        if ans > DP[0][i]:
            ans = DP[0][i]
            maxdollar = max(maxdollar, i)

    print("Case #{}:".format(test), ans, maxdollar)