#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<vector>
#include<map>
#include<cmath>
#include<queue>
#include<set>
#define PII pair<int,int>
#define f first
#define s second
#define VI vector<int>
#define LL long long
#define MP make_pair
#define LD long double
#define PB push_back
#define ALL(V) V.begin(),V.end()
#define abs(x) max((x),-(x))
#define PDD pair<LD,LD> 
#define VPII vector< PII > 
#define siz(V) ((int)V.size())
#define FOR(x, b, e)  for(int x=b;x<=(e);x++)
#define FORD(x, b, e) for(int x=b;x>=(e);x--)
#define REP(x, n)     for(int x=0;x<(n);x++)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
using namespace std;
int n,a,b,c,d,k,m,q,z;
const int XXX=20;
const int MXN=2e5+4;
int dp[MXN][XXX];
VPII X[MXN];
VI V[MXN];
void dfs(int a)
  {
  REP(i,XXX)dp[a][i]=i+1;
  X[a].clear();
  REP(i,V[a].size())
    {
    int pod=V[a][i];
    dfs(pod);
    REP(j,XXX)
      {
      if(X[pod][0].s==j)dp[a][j]+=X[pod][1].f;
      else dp[a][j]+=X[pod][0].f;
      }
    }
  
  REP(i,XXX)
    {
    X[a].PB(MP(dp[a][i],i));
    }
  sort(ALL(X[a]));
  }
void solve()
  {
  scanf("%d 0",&n);
  FOR(i,1,n)V[i].clear();
  FOR(i,2,n)
    {
    scanf("%d",&a);
    V[a].PB(i);
    }
  dfs(1);
  int res=1e9;
  printf("%d\n",X[1][0].f);
  }
main()
{
scanf("%d",&z);
FOR(i,1,z)
  {
  printf("Case #%d: ",i);
  solve();
  }
}
