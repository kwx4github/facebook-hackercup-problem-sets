{$M 100000000}
{$Q-, R-, S-, I-}
uses math;
const fi='input.inp';
      fo='output.out';
type  ptr=^node;
      node=record
         u:longint;
         next:ptr;
         end;

var f:array[0..202000,0..20] of longint;
    q:array[0..202000] of ptr;
    inq:array[0..202000] of boolean;
    n:longint;
    s, t: array[0..100] of longint;
procedure   docfile;
   begin
      assign(input,fi);  reset(input);
      assign(output,fo); rewrite(output);
   end;
procedure   dongfile;
   begin
      close(input);  close(output);
   end;

procedure   DFS(u:longint);
   var i, v:longint; p:ptr;
   begin
      p:=q[u];
      while (p<>nil) do
         begin
            v:=p^.u;  p:=p^.next;
            if inq[v]=false then continue;
            inq[v] := false;
            DFS(v);
            s[0] := maxlongint;
            for i:=1 to 20 do s[i] := min(s[i-1], f[v][i]);
            t[21] := maxlongint;
            for i:=20 downto 1 do t[i] := min(t[i+1], f[v][i]);
            for i:=1 to 20 do
               f[u][i] := f[u][i] + min(s[i-1], t[i+1]);
         end;
      for i:=1 to 20 do f[u][i] := f[u][i] + i;
   end;
procedure   solve;
   var i, res, x:longint;   p:ptr;
   begin
      readln(n);
      for i:=1 to n do q[i] := nil;
      fillchar(f, sizeof(f),0);
      for i:=1 to n do
         begin
            read(x);
            if (x<>0) then
               begin
                  new(p);
                  p^.u := i; p^.next := q[x];   q[x] := p;
               end;
         end;
      fillchar(inq,sizeof(inq),true);
      inq[1] := false;   DFS(1);
      res := maxlongint;
      for i:=1 to 20 do
         res := min(res, f[1][i]);
      writeln(res);
   end;
procedure   xuli;
   var t, test:longint;
   begin
      readln(test);
      for t:=1 to test do
         begin
            write('Case #',t,': ');
            solve;
         end;
   end;
BEGIN
   docfile;
   xuli;
   dongfile;
END.
