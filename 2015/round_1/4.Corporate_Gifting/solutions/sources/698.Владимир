#include <bits/stdc++.h>
using namespace std;
vector<int> G[200010];
int n;
int dp[200010][31];
const int MAXC=30;
int iter;
void DFS(int u, int f)
{
    ++iter;
    //printf("%d %d\n",u,f);
    if (G[u].size()>0)
    {
        for (int i = 1; i <= MAXC; i++)
        {
            dp[u][i] = i;
        }
        for (int i = 0; i < G[u].size(); i++)
        {
            int y = G[u][i];
            if (y == f) continue;
            DFS(y, u);
            for (int j = 1; j <= MAXC; j++)
            {
                int temp = 2000000010;
                for (int k = 1; k <= MAXC; k++)
                {
                    if (k == j) continue;
                    temp = min(temp, dp[y][k]);
                }
                dp[u][j] += temp;
            }
        }
    }
    else
    {
        for (int i = 1; i <= MAXC; i++)
        {
            dp[u][i] = i;
        }
    }
}
int main()
{
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int T;
    scanf("%d",&T);
    for(int tt=1;tt<=T;tt++)
    {
        iter=0;
        scanf("%d",&n);
        for (int i = 0; i < n; i++)
        {
            G[i].clear();
        }
        int b;
        scanf("%d",&b);
        for (int i = 0; i < n-1; i++)
        {
            int a;
            scanf("%d",&a);
            G[a-1].push_back(i+1);
            G[i+1].push_back(a-1);
        }
        DFS(0, -1);
        int ans = 2000000010;
        for (int i = 1; i <= MAXC; i++)
        {
            ans = min(ans, dp[0][i]);
        }
        printf("Case #%d: %d\n",tt, ans);
    }
    return 0;
}
