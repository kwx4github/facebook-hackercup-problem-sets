#include<bits/stdc++.h>
#define INF 100000000
using namespace std;
const int maxn=200000+10 ;
const int maxd=50 ;
int dp[maxn][maxd] ;
vector<int> v[maxn] ;
int deg[maxn] ;
int fir[maxn],id[maxn],sec[maxn] ;
int fa[maxn] ;
queue<int> q ;
main()
{
    freopen("corporate_gifting.txt","r",stdin) ;
    freopen("corporate_gifting_output.txt","w",stdout) ;
    int T ; scanf("%d",&T) ;
    int tc=0 ;
    while(T--)
    {
        int n ; scanf("%d",&n) ;
        for(int i=1;i<=n;i++) v[i].clear() ;
        for(int i=1;i<=n;i++)
        {
            int x ; scanf("%d",&x) ;
            if(i>1) v[x].push_back(i) , fa[i]=x , deg[x]++ ;
        }

        while(!q.empty()) q.pop() ;
        for(int i=1;i<=n;i++) if(!deg[i]) q.push(i) ;
        while(!q.empty())
        {
            int x=q.front() ; q.pop() ;
            if(v[x].empty())
            {
                for(int i=1;i<maxd;i++) dp[x][i]=i ;
                fir[x]=id[x]=1 ;
                sec[x]=2 ;
                if(!(--deg[fa[x]])) q.push(fa[x]) ;
                continue ;
            }
            fir[x]=sec[x]=INF ;
            for(int i=1;i<maxd;i++)
            {
                dp[x][i]=i ;
                for(int j=0;j<v[x].size();j++)
                {
                    if(i==id[v[x][j]]) dp[x][i]+=sec[v[x][j]] ;
                    else dp[x][i]+=fir[v[x][j]] ;
                }
                if(dp[x][i]<=fir[x])
                {
                    sec[x]=fir[x] ;
                    fir[x]=dp[x][i] ;
                    id[x]=i ;
                }
                else if(dp[x][i]<=sec[x]) sec[x]=dp[x][i] ;
            }

            if(!(--deg[fa[x]])) q.push(fa[x]) ;
        }

        int ans=INF ;
        for(int i=1;i<maxd;i++) ans=min(ans,dp[1][i]) ;
        printf("Case #%d: %d\n",++tc,ans) ;
    }
}
