#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int maxdeg = 100;
vector<int> tree[200005];
ll memo[200005][maxdeg], lim = 100000000000LL;
ll dp(int v, int nc) {
    if (memo[v][nc] != -1) return memo[v][nc];
    
    ll ans = lim;
    int nd = tree[v].size() + 2;
    for (int c = 1; c <= min(maxdeg-1, nd); c++) {
        if (c == nc) continue;
        ll tans = c;
        for (int u : tree[v]) tans += dp(u, c);
        ans = min(ans, tans);
    }
    return memo[v][nc] = ans;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t; cin >> t;
    for (int ca = 1; ca <= t; ca++) {
        int n; cin >> n;
        for (int i = 1; i <= n; i++) tree[i].clear();
        
        for (int i = 0; i < n; i++) {
            int x; cin >> x;
            if (x > 0) {
                tree[x].push_back(i+1);
            }
        }
        memset(memo, -1, sizeof memo);
        
        ll ans = dp(1, 0);
        cout << "Case #" << ca << ": " << ans << endl;
    }
	return 0;
}