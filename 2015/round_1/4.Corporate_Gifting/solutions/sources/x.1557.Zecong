#include <set>
#include <map>
#include <ctime>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>

#define MaxN 200010

using namespace std;

int T, N;
int head[MaxN], prep[MaxN], v[MaxN], m0, f[MaxN][21];
int Minw[2], tw[2];

void AddEdge(int a, int b) {
	++m0; v[m0] = b; prep[m0] = head[a]; head[a] = m0;
}

int Min(int a, int b) {
	return a < b ? a : b;
}

void Dfs(int now) {
	int i;
	for(i = 1; i < 20; ++i)
		f[now][i] = i;
	for(i = head[now]; i; i = prep[i]) {
		Dfs(v[i]);
		tw[0] = tw[1] = -1;
		for(int j = 1; j < 20; ++j) {
			if(tw[0] == -1 || f[v[i]][j] <= f[v[i]][tw[0]]) {
				tw[0] = j;
				continue;
			}
			if(tw[1] == -1 || f[v[i]][j] <= f[v[i]][tw[1]]) {
				tw[1] = j;
				continue;
			}
		}
		for(int j = 1; j < 20; ++j) {
			if(tw[0] == j)
				f[now][j] += f[v[i]][tw[1]];
			else {
				f[now][j] += f[v[i]][tw[0]];
			}
		}
	}
}

int main() {
	freopen("corporate_gifting.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int i, j, T0 = 0;
	scanf("%d", &T);
	for( ; T; --T) {
		scanf("%d", &N);
		memset(head, 0, sizeof(head));
		m0 = 0;
		memset(f, 0, sizeof(f));
		for(i = 1; i <= N; ++i) {
			int a;
			scanf("%d", &a);
			if(a == 0) continue; 
			AddEdge(a, i);
		}
		Dfs(1);
		int res = ~0U >> 1;
		for(i = 1; i < 20; ++i)
			res = Min(res, f[1][i]);
		printf("Case #%d: %d\n", ++T0, res);
	}
	return 0;
}
