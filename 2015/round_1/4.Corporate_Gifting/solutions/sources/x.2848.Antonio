#include <cstdio>
#include <vector>
#include <stack>
#include <queue>
#include <set>
using namespace std;

#define MAXN 200000

int n;
int gift[MAXN];
vector<int> child[MAXN];
stack<int> S;

void bfs(void){
  queue<int> queue;
  queue.push(0);

  while(!queue.empty()){
    int x = queue.front(); queue.pop();
    S.push(x);

    int d = child[x].size();
    for (int i=0; i<d; i++)
      queue.push(child[x][i]);
  }
}

void calc_gifts(void){
  while(!S.empty()){
    int x = S.top(); S.pop();
    vector<int> v;

    int d = child[x].size();
    for (int i=0; i<d; i++)
      v.push_back(gift[child[x][i]]);

    set<int> s(v.begin(), v.end());
    v.assign(s.begin(), s.end());

    int k, l = v.size();
    for (k=0; k<l; k++)
      if (v[k] != k+1) break;
    gift[x] = k + 1;
    //gift[x] = *minimum.begin();
  }
}

int main(void){
  int test; scanf ("%d", &test);
  for (int _test=0; _test<test; _test++){
    scanf ("%d", &n);
    int bla; scanf ("%d", &bla);

    gift[0] = 1;
    for (int i=1; i<n; i++){
      int a; scanf ("%d", &a); a--;
      child[a].push_back(i);
      gift[i] = 1;
    }

    bfs();
    calc_gifts();

    int sol = 0;
    for (int i=0; i<n; i++){
      sol += gift[i];
      //printf ("%d\n", gift[i]);
    }
    printf ("Case #%d: %d\n", _test+1, sol);

    for (int i=0; i<n; i++) child[i].clear();
  }

  return 0;
}
