#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
using namespace std;

const int sz = 200010;

vector<int> nt[sz];

int min_val[sz];
int min_index[sz];
int other_add[sz];
int son_count[sz];
int fa[sz];

void deal(int who)
{
    //printf("%d ",who);
    map<int,int> lst;
    int ret = 0;
    for(int i=0; i < nt[who].size(); i ++)
    {
        int to = nt[who][i];
//        int a, b;
//        ret += dfs(to, a, b);
//        lst[a] += b;
        ret += min_val[to];
        lst[ min_index[to] ] += other_add[to];
    }

    int m = 0;
    int v1 = 0x3f3f3f3f, v2 = 0x3f3f3f3f;
    for(int i = 1; v2 >= i; i ++)
    {
        int tmp = lst[i] + i;
        if(tmp < v1)
        {
            v2 = v1;
            v1 = tmp;
            m = i;
        }
        else if(tmp < v2)
        {
            v2 = tmp;
        }
    }
    min_index[who] = v1;
    other_add[who] = v2 - v1;
    min_val[who] = ret + v1;
}

int main()
{
    int ti;scanf("%d",&ti);
    for(int ca=1; ca<=ti; ca++)
    {
        int n;scanf("%d",&n);
        for(int i=1;i<=n;i++)nt[i].clear();
        for(int i=0;i<n;i++)
        {
            int tmp;scanf("%d",&tmp);
            nt[tmp].push_back(i + 1);
            fa[i+1] = tmp;
        }
        son_count[0] = 15;
        for(int i=1;i<=n;i++)
        {
            son_count[i] = nt[i].size();
        }

        for(int i=1; i<=n; i++)
        {
            int who = i;
            while(son_count[who] == 0)
            {
                deal(who);
                who = fa[ who ];
                son_count[ who ] --;
            }
        }
        printf("Case #%d: %d\n",ca, min_val[1]);
    }

}
