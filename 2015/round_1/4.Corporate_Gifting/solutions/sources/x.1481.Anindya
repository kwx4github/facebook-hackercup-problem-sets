#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>

using namespace std;

#define inf (1<<29)
#define Min(a,b) ((a)<(b)?(a):(b))
#define SZ 200005
#pragma comment(linker, "/STACK:500000000")

vector<int> adj[SZ];
int dp[SZ][3];
int make(int now,char prev)		// prev -> 0-indexed
{
	if(dp[now][prev]!=inf)
		return dp[now][prev];
	dp[now][prev] = inf + 1;
	int i,sum;
	char col;	
	for(col = 0; col < 3; col++)
	{
		if(col == prev)
			continue;
		for(i = sum = 0; i < adj[now].size(); i++)
			sum += make(adj[now][i],col);
		sum += (col+1);
		if(sum < dp[now][prev])
			dp[now][prev] = sum;
	}
	return dp[now][prev];
}

int main()
{
	freopen("corporate_gifting.txt","r",stdin);
	freopen("corporate_gifting.out","w",stdout);
	int n, cs, t, i, u;
	scanf("%d",&t);
	for(cs = 0; cs < t; cs++)
	{
		scanf("%d",&n);
		for(i=1;i<=n;i++)
		{
			adj[i].clear();
			dp[i][0] = dp[i][1] = dp[i][2] = inf;
		}
		for(i=1;i<=n;i++)
		{
			scanf("%d",&u);
			if(u==0) continue;
			adj[u].push_back(i);
		}		
		int a = make(1,0);
		int b = make(1,1);
		int c = make(1,2);
		printf("Case #%d: %d\n",cs+1,Min(a,Min(b,c)));
	}
	return 0;
}



/*
long long fact(int n)
{
	if(n==1) return 1;
	long long ans = (n*fact(n-1))%1000000007;
	int fans = ans %1000000007;
	return fans;
}*/
