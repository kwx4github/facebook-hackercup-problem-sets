#include <iostream>
#include <vector>

using namespace std;

typedef struct
{
    long id;
    long jefe;
    long regalo;
    vector<long> indios;
    long nind;
} empleado;

empleado w[200002];

bool setgift(long id)
{
    if (w[id].nind==0)
    {
        w[id].regalo=1;
        return true;
    }
    else
    {
        for (vector<long>::iterator it=w[id].indios.begin(); it!=w[id].indios.end(); ++it)
            if (w[*it].regalo==0)
                return false;
        long regalo=0;
        vector<long>::iterator it=w[id].indios.begin();
        while (it!=w[id].indios.end())
        {
            regalo++;
            for (it=w[id].indios.begin(); it!=w[id].indios.end(); ++it)
                if (w[*it].regalo==regalo)
                    break;
        }
        w[id].regalo=regalo;
        return true;
    }
}

int main(int argc, char** argv)
{
    int T;
    long N;
    
    cin >> T;
    for (int t=1; t<=T; t++)
    {
        cin >> N;
        for (long id=1; id<=N; id++)
        {
            w[id].id=id;
            w[id].regalo=0;
            cin >> w[id].jefe;
            w[id].indios.clear();
            w[id].nind=0;
        }
        for (long id=2; id<=N; id++)
        {
            long jefe=w[id].jefe;
            w[jefe].indios.push_back(id);
            w[jefe].nind++;
        }
        bool vale=false;
        while (!vale)
        {
            vale=true;
            for (long id=N; id>0; id--)
                if (w[id].regalo==0)
                    if (!setgift(id))
                        vale=false;
                if (vale) break;
                vale=false;
            for (long id=1; id<=N; id++)
                if (w[id].regalo==0)
                if (!setgift(id))
                    vale=false;
        }
        long money=0;
        for (long id=1; id<=N; id++)
            money+=w[id].regalo;
        cout << "Case #" << t << ": " << money << endl;
    }

    return 0;
}

