#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

#define PB push_back
#define MP make_pair

typedef double DB;
typedef long long LL;
typedef pair <int, int> PI;


const DB eps = 1e-8;
const int N = 2e5 + 7;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;

int dp[N][105], t1[105], t2[105];
vector <int> e[N];
void Dfs(int x){
    for (int i = 0; i < e[x].size(); i++)
        Dfs(e[x][i]);
    for (int i = 1; i <= 100; i++){
        dp[x][i] = i;
        for (int j = 0; j < e[x].size(); j++)
            dp[x][i] += dp[e[x][j]][i];
    }
    t1[1] = dp[x][1];
    for (int i = 2; i <= 100; i++) t1[i] = min(t1[i - 1], dp[x][i]);
    t2[100] = dp[x][100];
    for (int i = 99; i >= 1; i--) t2[i] = min(t2[i + 1], dp[x][i]);
    for (int i = 1; i <= 100; i++){
        if (i == 1) dp[x][i] = t2[i + 1];
        else if (i == 100) dp[x][i] = t1[i - 1];
        else dp[x][i] = min(t1[i - 1], t2[i + 1]);
    }
}

int main(){
    int size = 256 << 20; // 256MB
    char *p = (char*)malloc(size) + size;
    __asm__("movl %0, %%esp\n" :: "r"(p));
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);

    int CAS, n, x;
    scanf("%d", &CAS);
    for (int cas = 1; cas <= CAS; cas++){
        scanf("%d", &n);
        //cout << n << endl;
        for (int i = 1; i <= n; i++){
            scanf("%d", &x);
            if (x) e[x].PB(i);
        }
        memset(dp, -1, sizeof(dp));
        Dfs(1);
        int ans = min(dp[1][1], dp[1][2]);
        printf("Case #%d: %d\n", cas, ans);
        for (int i = 1; i <= n; i++) e[i].clear();
    }
}



