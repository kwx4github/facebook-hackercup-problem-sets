from collections import defaultdict

INF = 200000*200000

_T = int(raw_input())
for _t in range(1, _T+1):
  N = int(raw_input())
  M = map(int, raw_input().split())

  C = [[] for i in range(N)]
  for i in range(1, N):
    C[M[i]-1].append(i)
  Q = [0]
  k = 0
  while k < len(Q):
    i = Q[k]
    k += 1
    for c in C[i]:
      Q.append(c)
  Q.reverse()

  base = [0]*N
  change = [defaultdict(int) for i in range(N)]

  for i in Q:
    best1 = INF
    best1_k = 0
    best2 = INF
    for k in change[i]:
      tmp = base[i] + change[i][k] + k
      if tmp <= best1:
        best2 = best1
        best1 = tmp
        best1_k = k
      elif tmp < best2:
        best2 = tmp
    for k in range(1, len(C[i])+2):
      if change[i][k] > 0 : continue
      tmp = base[i] + k
      if tmp <= best1:
        best2 = best1
        best1 = tmp
        best1_k = k
      elif tmp < best2:
        best2 = tmp
      break
    
    if i == 0:
      res = best1
    else:
      base[M[i]-1] += best1
      change[M[i]-1][best1_k] = best2 - best1

  print 'Case #{}: {}'.format(_t, res)
