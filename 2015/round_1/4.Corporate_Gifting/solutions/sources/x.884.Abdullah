#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
#include<math.h>
#include<queue>
#include<stack>
#include<sstream>
#include<stdio.h>
#include<map>
#include<set>
#include<memory.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
ll gcd(ll a, ll b){
	if (!b)
		return a;
	return gcd(b, a%b);
}
ll lcm(ll a, ll b){
	return b / gcd(a, b)*a;
}
#define FOR(I,N) for(int(i)=0;i<int(N);++i)
#define FORK(I,N,K) for(int(i)=0;i<int(N);i+=int(K))
const int N = 200005;
int t, n, x, lim;
ll dp[N][11];
vector<int>v[N];
ll calc(int i, int l){
	if (dp[i][l] != -1)
		return dp[i][l];
	ll ret = 1ll << 60;
	for (int j = 1; j <= lim; ++j){
		if (j != l){
			ll cur = j;
			for (int k = 0; k < v[i].size(); ++k)
				cur += calc(v[i][k], j);
			ret = min(ret, cur);
		}
	}
	return dp[i][l] = ret;
}
int main(){
	freopen("corporate_gifting.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	scanf("%d", &t);
	for (int r = 1; r <= t; ++r){
		scanf("%d", &n);
		for (int i = 0; i <= n; ++i)
			v[i].clear();
		for (int i = 1; i <= n; ++i){
			scanf("%d", &x);
			if (x)
				v[x].push_back(i);
		}
		lim = min(n, 8);
		memset(dp, -1, sizeof(dp));
		for (int i = n; i > 0; i-=1000)
			calc(i, 0);
		printf("Case #%d: %lld\n", r, calc(1, 0));
	}
}