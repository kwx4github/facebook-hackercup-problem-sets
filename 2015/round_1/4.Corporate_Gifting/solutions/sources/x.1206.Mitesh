#include<iostream>
#include<stack>
#include<string>
#include<vector>
#include<set>
#include<queue>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include <stdlib.h>

using namespace std;

#define gc getchar
#define MOD 1000000007
#define pc(x) putchar(x)
#define pi(n) printf("%d",n)
#define pis(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define pll(n) printf("%lld",n)
#define ps printf(" ")
#define pn printf("\n")
#define rep(i,n) for(i=0;i<n;i++)
#define fu(i,a,n) for(i=a;i<=n;i++)
#define fd(i,n,a) for(i=n;i>=a;i--)
#define INV 333333336
#define ll long long
#define ull unsigned long long
#define EPS 1e-9
#define infi 2000000000
#define linfi 2000000000000000000
#define ARRAY_SIZE(a) sizeof(a)/sizeof(	[0])
#define CHAR_TO_INDEX(c) ((int)c - (int)'a')
 
inline int sn()
{
	int n=0;
	int ch=gc();
	while( ch <48 )ch=gc();
	while( ch >47 )
	n = (n<<3)+(n<<1) + ch-'0', ch=gc();
	    return n;
}

inline void wi(int n)
{
	int N = n, rev, count = 0;
	rev = N;
	if (N == 0) { pc('0');  return ;}
	while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
	rev = 0;
	while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
	while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
	while (count--) pc('0');
}

int result=0;
int func(vector< vector<int> > &x,int exa)
{
	if(x[exa].size()==0)
	{
		result+=1;
		return 1;
	}
	else
	{
		set<int> s;
		for(int i=0;i<x[exa].size();i++)
		{
			s.insert(func(x,x[exa][i]));
		}
		int mini = 1;
		for(set<int>::iterator it = s.begin();it!=s.end();++it)
		{
			if(*it==mini)
			{
				mini+=1;
			}
		}
		result+=mini;
		return mini;
	}
}
int main()
{
	int n,it,test,q,i,ana;
	test=sn();
	fu(q,1,test)
	{
		result = 0;
		n=sn();
		if(n==1)
		{
			it=sn();
			printf("Case #%d: 1\n",q);
			continue;
		}
		vector< vector<int> > x(n+2);
		it=sn();
		fu(i,1,n-1)
		{
			it=sn();
			x[it].push_back(i+1);
		}
		ana = func(x,1);
		printf("Case #%d: %d\n",q,result);		
	}
	return 0;
}
