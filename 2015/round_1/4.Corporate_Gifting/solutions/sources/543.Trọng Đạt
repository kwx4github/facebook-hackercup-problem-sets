uses math;
const
  fi='gifting.txt';
  fo='out.txt';
  maxn=200000+100;
  maxv=60;

var
  f,g:text;
  test,time,n:longint;
  a,cha,h:array[0..maxn] of longint;
  dp:array[0..maxn,0..maxv] of longint;
  best:array[0..maxn,1..2] of longint;


procedure nhap;
var
  i,j:longint;
begin
  read(f,n);
  for i:=1 to n do
    read(f,cha[i]);

  fillchar(h,sizeof(h),0);
  fillchar(dp,sizeof(dp),0);
  fillchar(best,sizeof(best),0);

  for i:=2 to n do
    inc(h[ cha[i] ]);
  for i:=1 to n+1 do
    h[i]:=h[i-1]+h[i];
  for i:=2 to n do
    begin
      a[ h[ cha[i] ] ]:=i;
      dec(h[ cha[i] ]);
    end;
end;

procedure dfs(u:longint);
var
  i,j,temp,cur,min1,min2,v:longint;
begin
  for i:=h[u]+1 to h[u+1] do
    begin
      v:=a[i];
      dfs(v);
    end;

  for i:=1 to maxv do
    begin
      cur:=i;
      for j:=h[u]+1 to h[u+1] do
        begin
          v:=a[j];
          temp:=best[v][1];
          if best[v][1]=i then temp:=best[v][2];
          cur:=cur+dp[v][ temp ];
        end;
      dp[u][i]:=cur;
    end;

  min1:=maxlongint;min2:=maxlongint;

  for i:=1 to maxv do
    begin
      if dp[u][i]<min1 then
        begin
          min2:=min1;
          min1:=dp[u][i];
          best[u][2]:=best[u][1];
          best[u][1]:=i;
        end else
          if dp[u][i]<min2 then
            begin
              min2:=dp[u][i];
              best[u][2]:=i;
            end;
    end;
end;




procedure solve;
var
  i,j,res:longint;
begin
  dfs(1);
  res:=maxlongint;
  for i:=1 to maxv do
    res:=min(res,dp[1][i]);

  writeln(g,'Case #',time,': ',res);
end;


begin
  assign(f,fi);reset(f);
  assign(g,fo);rewrite(g);
  readln(f,test);
  for time:=1 to test do
    begin
      nhap;
      solve;
    end;
  close(f);close(g);
end.
