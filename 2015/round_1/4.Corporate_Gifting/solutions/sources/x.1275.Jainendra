#include <bits/stdc++.h>

using namespace std;

typedef  vector<vector<int> > vvi;

int calculate(vvi &child, int i, int cost, vvi &dp, int d){//cout<<"stack "<<i<<" "<<cost<<endl;
    if (dp[i][cost]) return dp[i][cost];
    int ans = INT_MAX;
    for (int j = 1; j < d; j++){
        if (j != cost){
            int total = j;
            for (auto k: child[i]){
                total += dp[k][j];//calculate(child, k, j, dp, d );
            }
            ans = min(ans,total);
        }
    }
    dp[i][cost] = ans;
    return ans;
}

int main(){
    freopen("corporate_gifting_input.txt","r",stdin);
    freopen("corporate_gifting_output.txt","w",stdout);

    int T, N, a;
    cin>>T;


    for (int t = 1; t <= T; t++){
        cin>>N;
        vector<int> p;
        vector<vector<int> > child(N);

        for (int i = 0; i < N; i++){
            scanf("%d",&a);
            p.push_back(--a);
        }

        for (int i = 1; i <N; i++){
            child[p[i]].push_back(i);
        }

        int d = 4;
        vector<vector<int> > dp(N, vector<int>(d,0));

        for (int i = N-1; i >= 0; i--){
            for (int j = 1; j <d; j++){//cout<<"Main "<<i<<" "<<j<<endl<<endl;
                dp[i][j] = calculate(child,i,j, dp,d);
            }
        }

        /*int res = calculate(child,0,1,dp,d);
        for (int j = 2; j <d; j++){
            res = min(res,calculate(child,0,j,dp,d));
        }*/

        int res = dp[0][1];
        for (int i = 2; i <d; i++)res = min(res,dp[0][i]);

        cout<<"Case #"<<t<<": "<<res<<endl;

        dp.clear();
        for (int i = 0; i <N; i++){
            child[i].clear();
        }
        child.clear();
        p.clear();
    }

    return 0;
}
