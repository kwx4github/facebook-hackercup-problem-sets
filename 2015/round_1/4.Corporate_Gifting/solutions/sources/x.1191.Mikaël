#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

#define debug cout

int N;
int c[200001];
vector<int> m;

int sum(int s, int e)
{
    int total = 0;
    for (int i = s; i <= e; i++)
    {
        total += c[i];
    }
    return total;
}

void setMC(int start, int end)
{
    int ma = m[start];
    
    int i, j;
    
    for (i = 1; i <= N; i++)
    {
        // cout << i << endl;
        for (j = start; j >= end; --j)
        {
            // cout << i << " " << c[j] << endl;
            if(i == c[j]) break;
        }
        
        if (j == end-1) break;
    }
    
    c[ma] = i;
    
    for (int k = 1; k <= i; k++)
    {
        int sum = 0;
        for (int h = start; h >= end; --h)
        {
            if(k == c[h]) sum++;
        }
        
        if ((i - k) > sum)
        {                       
            for (int h = start; h >= end; --h)
            {
                if(k == c[h]) c[h]++;
            }
            
            c[ma] = k;
        }
    }    
}

int compute()
{
    int start = N;
    for (int i = N-1; i >= 0; i--)
    {   
        if (m[start] != m[i])
        {
            setMC(start, i+1);
            start = i;
        }
    }
    return sum(1, N);
}

void RunInstance()
{
    cin >> N;
    
    int tmp;
    
    m.clear();
    m.push_back(-1);
    for (int i = 1; i <= N; i++)
    {
        cin >> tmp;
        
        m.push_back(tmp);
        c[i] = 1;
    }
    
    sort(m.begin(), m.end()); 
    
    cout << compute();
}

// ============================ Nothing to change here ============================ //

int main() 
{
    int num_of_instances = 0;
    cin >> num_of_instances;
    
    for (int i = 1; i <= num_of_instances; ++i) 
    {
        cout << "Case #" << i << ": ";
        RunInstance();
        cout << endl;
    }
}