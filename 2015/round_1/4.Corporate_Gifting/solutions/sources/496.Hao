#pragma comment(linker, "/STACK:102400000,102400000")
#include<iostream>
#include<vector>
using namespace std;

const int MAXN = 200002;
const int MAXCOST = 20;
bool v[MAXN+1][MAXCOST+1],vi[MAXN+1][MAXCOST+1];
int cost[MAXN+1][MAXCOST+1],icost[MAXN+1][MAXCOST+1];
vector<int> succ[MAXN+1];

int get_icost(int,int);
int get_cost(int index,int c){
	if (v[index][c]){
		return cost[index][c];
	} else {
		v[index][c] = true;
		int ans = c;
		for (int i = 0; i<succ[index].size(); i++) ans += get_icost(succ[index][i],c);
		cost[index][c] = ans;
	//	cout<<"cost of "<<index<<','<<c<<" is "<<ans<<endl;
		return ans;
	}
}

int get_icost(int index, int c){
	if (vi[index][c]) return icost[index][c];
	int mini = -1;
	for (int i=1; i<=MAXCOST; i++) {
		int ct = get_cost(index,i);
		if (c!= i &&  ( ct<mini || mini == -1)) mini = ct;
	}
	vi[index][c] = true;
	icost[index][c] = mini;
	//cout<<"icost of "<<index<<','<<c<<" is "<<mini<<'\n';
	return mini;
}


int main() {
	int T;
	int n;
	freopen("corporate_gifting.txt","r",stdin);

	cin>>T;
	for (int t=0; t<T; t++) {
		cin>>n;
		for (int i=0;i<=n;i++) succ[i].clear(); 
		for (int i=1;i<=n;i++) {
			int m;
			cin>>m;
			succ[m].push_back(i);
		}
		for (int i=1;i<=n;i++) for (int j=1;j<=MAXCOST; j++) {
			v[i][j] = false;	
			vi[i][j] = false;
		}
	
		int mini = -1;
		for (int i = 1; i<=MAXCOST; i++) {
			int ct = get_cost(1,i);
			if (ct<mini || mini == -1) mini = ct;
		}
/*
		cout<<"cost"<<endl;
		for (int i=1;i<=n;i++)
			for (int j=1;j<=MAXCOST;j++)
				cout<<i<<','<<j<<' '<<cost[i][j]<<endl;
		cout<<"icost"<<endl;
		for (int i=1;i<=n;i++)
			for (int j=1;j<=MAXCOST;j++)
				cout<<i<<','<<j<<' '<<icost[i][j]<<endl;
*/
		cout<<"Case #"<<t+1<<": "<<mini<<'\n';
	}

	
	
	
}
