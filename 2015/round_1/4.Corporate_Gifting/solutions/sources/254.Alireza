#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker,"/STACK:10000000000")
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;
#define FR(i,n) for(int (i)=0;(i)<(n);(i)++)
#define FOR(i,c,n) for(int (i)=(c);(i)<(n);(i)++)
#define REP(it,v,cont) for(cont::iterator (it)=(v).begin();(it)!=(v).end();++(it)) 
#define CLR(a,c) memset((a),(c),sizeof (a))
#define ALL(v) (v).begin(),(v).end()
#define INF (1LL<<60)
#define EPS 1e-8
#define MOD 1000000007
#define SQR(a) ((a)*(a))
typedef long long  ll;
typedef unsigned long long  ull;
//typedef long double lld;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

vector<int> v[210000];
int memo[210000][21];
int f(int node,int parentColor){
	int res=1e9;
	int &ret=memo[node][parentColor];
	if(ret!=-1) return ret;
	FOR(i,1,21){
		if(i==parentColor) continue;
		int sum=i;
		FR(j,v[node].size()){
			sum+=f(v[node][j],i);
		}
		res=min(res,sum);
	}
	return ret=res;
}
int main(){
	freopen("aa.txt", "r", stdin);
	freopen("a.out","w",stdout);
	int t;cin>>t;
	FOR(cas,1,t+1){
		printf("Case #%d: ",cas);
		int n;scanf("%d",&n);
		FR(i,n+10) v[i].clear();
		FR(i,n){
			int k;scanf("%d",&k);
			v[k].push_back(i+1);
		}
		CLR(memo,-1);
		printf("%d\n",f(1,20));
	}
}