#include <iostream>
#include <cstdio>
#include <queue>
#include <cstdlib>
using namespace std;


pair<int,int> calculate(const vector<vector<int> >& data, int who) {
    int sum = 0;
    int payment = 1;
    priority_queue<int, vector<int> > queue;
    pair<int,int> subordinate;
    for (int i=0; i<data[who].size(); i++) {
        // printf("%d calculate:%d\n", who, data[who][i]);
        subordinate = calculate(data, data[who][i]);
        sum += subordinate.second;
        queue.push(-subordinate.first);
    }
    while (!queue.empty() && (-payment == queue.top())) {
        while (!queue.empty() && (-payment == queue.top())) {
            queue.pop();
        }
        payment++;
    }
    // printf("%d pays %d\n", who, payment);
    if (who != 0) {
        sum += payment; 
    }  
    return make_pair(payment, sum);
}

void execute(int tc) {
    int N;
    scanf("%d", &N);
    vector<vector<int> > member(N+1, vector<int>(0));
    int tmp;
    for (int i=0; i<N; i++) {
        scanf("%d", &tmp);
        member[tmp].push_back(i+1);
    }
    pair<int, int> result = calculate(member, 0);
    printf("Case #%d: %d\n", tc, result.second);
}

int main() {
    int TC;
    scanf("%d", &TC);
    for (int i=1; i<=TC; i++) {
        execute(i);
    }
    return 0;
}