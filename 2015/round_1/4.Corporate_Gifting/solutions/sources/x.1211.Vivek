
// Author : Vivek Hamirwasia (viv001)
#include<bits/stdc++.h>
using namespace std;

#define CLR(a,x) memset(a,x,sizeof(a))
#define PB push_back
#define INF 1000000000
#define MOD 1000000007
#define LET(x,a) __typeof(a) x(a)
#define MP make_pair
#define tr(container , it) for(LET(it,container.begin) ; it!=container.end() ; it++)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) FOR(i,0,a)
#define LLD long long
#define VI vector < int >
#define PII pair < int , int >
#define MAX 1000000000LL

//_____starts____here_______
vector<int> V[200003];
LLD bst[200003];
LLD sbst[200003];
LLD bstnum[200003];
map<int, vector<int> > mp;
void dfs(int idx)
{
	int sz = V[idx].size();
	if(sz==0)
	{
		bst[idx] = 1;
		bstnum[idx] = 1;
		sbst[idx] = 2;
		return;
	}
	bst[idx] = MAX*MAX;
	sbst[idx] = MAX*MAX;
	set<LLD> lol;
	LLD ans = 0;
	for(int i=0;i<sz;i++)
	{
		int nidx = V[idx][i];
		dfs(nidx);
		ans += bst[nidx];
		lol.insert(bstnum[nidx]);
	}
	int zz;
	for(int j=1;j<=sz+1;j++)
	{
		if(lol.find(j)==lol.end())
		{
			zz = j;
			break;
		}
	}

	bst[idx] = zz + ans;
	bstnum[idx] = zz;
 
	mp.clear();
	for(int i=0;i<sz;i++)
	{
		int nidx = V[idx][i];
		mp[bstnum[nidx]].PB(nidx);
	}
	for(map<int, vector<int> >::iterator it = mp.begin(); it!=mp.end(); ++it)
	{
		int sz2 = it->second.size();
		LLD val = it->first + ans;
		for(int i=0;i<sz2;i++)
		{
		  int nidx = it->second[i];
		  val -= bst[nidx];
		  val += sbst[nidx];
		}

		if(val<bst[idx])
		{
			sbst[idx] = bst[idx];
			bst[idx] = val;
			bstnum[idx] = it->first;
		}
		else
			if(val<sbst[idx])
				sbst[idx] = val;
	}

}

int main()
{
	int t;
	scanf("%d",&t);
	for(int kase=1;kase<=t;kase++)
	{
		int n;
		scanf("%d",&n);
		for(int i=0;i<=n;i++)
			V[i].clear();

		for(int i=1;i<=n;i++)
		{
			int x;
			scanf("%d",&x);
			if(x!=0)
			{
				V[x].PB(i);
			}
		}
		dfs(1);
		cout<<"Case #"<<kase<<": "<<bst[1]<<endl;
	}

	return 0;
}
