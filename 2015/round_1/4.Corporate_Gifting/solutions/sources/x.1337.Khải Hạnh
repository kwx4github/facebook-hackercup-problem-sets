const fi = 'd:\corporate_gifting.txt';
        fo = 'd:\myoutput.txt';
        maxn = 300100;
        vc = 1000000000;
var
        f, f1 : text;
        oo,o : longint;
        rr,n,i,min : longint;
        ke : array[1..maxn * 2] of longint;
        star,a1,a2,trace : array[1..maxn] of longint;
        res : array[1..maxn,1..3] of longint;
        v : array[1..maxn] of boolean;
        procedure search(n1 : longint);
        var
                i1,j1,h1,k1 : longint;
        begin
                v[n1] := true;
                for i1 := 1 to 3 do
                        res[n1,i1] := i1;
                for j1 := star[n1]+1 to star[n1+1] do
                begin
                        h1 := ke[j1];
                        if v[h1] = false then
                        begin
                                search(h1);
                                for i1 := 1 to 3 do
                                begin
                                        rr := vc;
                                        for k1 := 1 to 3 do
                                                if (k1 <> i1) and (res[n1,i1] + res[h1,k1] < rr) then
                                                        rr := res[n1,i1] + res[h1,k1];
                                        res[n1,i1] := rr;
                                end;
                        end;
                end;
        end;
        procedure findtrace(n1,k1 : integer);
        var
                min1,i1,h1,j1 : integer;
        begin
                v[n1] := true;
                trace[n1] := k1;
                for i1 := star[n1] + 1 to star[n1+1] do
                begin
                        h1 := ke[i1];
                        if v[h1] = false then
                        begin
                                min1 := 0;
                                for j1 := 1 to 3 do
                                        if j1 <> k1 then
                                                if (min1 = 0) or (res[h1,min1] > res[h1,j1]) then
                                                        min1 := j1;
                                findtrace(h1,min1);
                        end;
                end;
        end;
begin

        assign(f,fi);
        reset(f);
        assign(f1, fo);
        rewrite(f1);
        readln(f, oo);
        for o := 1 to oo do
        begin
                readln(f,n);
                fillchar(v, sizeof(v), false);
                fillchar(res, sizeof(res), 0);
                fillchar(star, sizeof(star), 0);
                fillchar(trace, sizeof(trace), 0);
                read(f, a1[1]);
                for i := 1 to n-1 do
                begin
                        read(f, a1[i]);
                        a2[i] := i + 1;
                        inc(star[a1[i]]);
                        inc(star[a2[i]]);
                end;
                for i := 2 to n do
                        star[i] := star[i-1] + star[i];
                star[n+1] := star[n];
                for i := 1 to n-1 do
                begin
                        ke[star[a1[i]]] := a2[i];
                        dec(star[a1[i]]);
                        ke[star[a2[i]]] := a1[i];
                        dec(star[a2[i]]);
                end;
                search(1);
                min := 0;
                for i := 1 to 3 do
                        if (min = 0) or (res[1,min] > res[1,i]) then
                                min := i;

                fillchar(v,sizeof(v),false);
                writeln(f1,'Case #', o, ': ', res[1, min]);

        end;
        Close(f);
        close(f1);
        readln;
end.
