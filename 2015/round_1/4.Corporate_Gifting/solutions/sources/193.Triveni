/*
user  : triveni
date  : 18/01/2015
time  : 17:34:55
*/
#include <bits/stdc++.h>

using namespace std;

#define      pii               std::pair<int,int>
#define      vi                std::vector<int>
#define      mp(a,b)           std::make_pair(a,b)
#define      pb(a)             std::push_back(a)
#define      each(it,s)        for(auto it = s.begin(); it != s.end(); ++it)
#define      rep(i, n)         for(int i = 0; i < (n); ++i)
#define      sortA(v)          sort(v.begin(), v.end())
#define      sortD(v)          sort(v.begin(), v.end(), greater<auto>())
#define      X                 first
#define      Y                 second

typedef long long LL;
LL MOD = 2000000007;

vector<int> List[200001];
int N, M = 20;
int t1[200001], t2[200001];
int par[200001];
vector<int> Val[200001];	// Set vector size to M

void dfs(int r){
	if(List[r].size() == 0){
		for(int i=1;i<=M;++i) Val[r][i] = (i == 1 ? 2 : 1);
		return ;
	}
	rep(i, List[r].size())  dfs(List[r][i]);
	for(int i = 1; i <= M; ++i){
		int x = i;
		rep(j, List[r].size()) x += Val[List[r][j]][i];
		Val[r][i] = x;
	}
	t1[0] = MOD; t2[M+1] = MOD;
	for(int i = 1; i <= M; ++i){
		t1[i] = min(t1[i-1], Val[r][i]);
		t2[M - i + 1] = min(t2[M - i + 2], Val[r][M - i + 1]);
	}
	for(int i = 1; i <= M; ++i){
		Val[r][i] = min(t1[i-1], t2[i+1]);
	}
	return ;
}

int main()
{
	int T, x;
	cin >> T;
	for(int tc = 1; tc <= T; ++tc){
		scanf("%d",&N);
		M = min(100, N);
		for(int i = 0; i < N; ++i){
			scanf("%d",&x);
			par[i+1] = x;
			if(x > 0) List[x].push_back(i+1);
			Val[i+1].resize(M+1);
		}
		dfs(1);
		int ans = min(Val[1][2], Val[1][1]);
		printf("Case #%d: %d\n", tc, ans);
		for(int i = 1; i <= N; ++i){
			List[i].clear();
			Val[i].clear();
		}
	}
	return 0;
}
