#include<stdio.h>
#include<vector>
#include<sys/resource.h>

using namespace std;

const int max_n = 2 * 100000 + 5;

vector<int> adj_list[max_n];

int dp[max_n][100+5];
int nondp[max_n][100+5];

int small, smalless;

void dfs(int i)
{
    for(int j=0; j<adj_list[i].size(); ++j)
    {
        dfs(adj_list[i][j]);
    }
    for(int k=1; k<=100; ++k)
    {
        dp[i][k] = k;
        for(int j=0; j<adj_list[i].size(); ++j)
        {
            dp[i][k] += nondp[adj_list[i][j]][k];
        }
    }

    small = 1000000000, smalless = 1000000000;
    for(int k=1; k<=100; ++k)
    {
        if(dp[i][k] < small)
        {
            smalless = small;
            small = dp[i][k];
        }
        else if(dp[i][k] < smalless)
        {
            smalless = dp[i][k];
        }
    }
    for(int k=1; k<=100; ++k)
    {
        if(dp[i][k] == small) nondp[i][k] = smalless;
        else nondp[i][k] = small;
    }
}

int main()
{
    // Increase Stack Size
    struct rlimit rl;
    int result = getrlimit(RLIMIT_STACK, &rl);
    if(result == 0)
    {
        rl.rlim_cur = 64L * 1024L * 1024L;
        result = setrlimit(RLIMIT_STACK, &rl);
        if(result != 0) printf("Error: %d\n",result);
    }

    //freopen("corporate_gifting.txt", "r", stdin);
    //freopen("corporate_gifting_output.txt", "w", stdout);

    int T;
    scanf("%d", &T);
    for(int c=1; c<=T; ++c)
    {
        int N;
        scanf("%d", &N);
        int u;
        for(int i=1; i<=N; ++i)
        {
            scanf("%d", &u);
            adj_list[u].push_back(i);
        }
        dfs(1);
        int minn = 1000000000;
        for(int j=1; j<=100; ++j) if(dp[1][j] < minn) minn = dp[1][j];
        printf("Case #%d: %d\n", c, minn);
        for(int i=0; i<N; ++i) adj_list[i].clear();
    }
    return 0;
}
