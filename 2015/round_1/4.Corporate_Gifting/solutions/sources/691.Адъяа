#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>  
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>
#include <string>

#define mp make_pair
#define pb push_back

#define mod 1000000007

using namespace std;

vector <int> v[200005];
int X[200005][21], Y[200005][21], mn;
bool vis[200005] = {false};

void dfs(int p)
{
    vis[p] = true;
    int cnt = v[p].size();
    bool tmp = false;
    for(int i=0; i<cnt; i++)
    {
        if(vis[v[p][i]] == false)
        {
            dfs(v[p][i]);
            tmp = true;
            for(int j=1; j<=20; j++)
                X[p][j] += Y[v[p][i]][j]; 
        }        
    }
    for(int i=1; i<=20; i++)
        X[p][i] += i;
    for(int j=1; j<=20; j++)
    {
        bool kk = true;
        for(int k=1; k<=20; k++)
        {
            if(j == k) continue;
            if(kk == true){ mn = X[p][k]; kk = false; } 
            else mn = min(mn,X[p][k]);
        }
        Y[p][j] = mn;
    }
    return ;
}
int main()
{
    
    
  //freopen("input.txt","r",stdin);
  //freopen("output.txt","w",stdout);

    
    int n, x, y, T, lvl = 0;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d",&n); 
        for(int i=0; i<=n; i++)
            v[i].clear(); 
        memset(vis,false,sizeof(vis));
        memset(X,0,sizeof(X));
        memset(Y,0,sizeof(Y));
        for(int i=1; i<=n; i++)
        {
            scanf("%d",&x);
            if(x == 0) continue; 
            v[i].pb(x);
            v[x].pb(i);
        }
        dfs(1);
        int ans = X[1][1];
        for(int i=2; i<=20; i++)
           ans = min(ans,X[1][i]);
        printf("Case #%d: %d\n",++lvl,ans);   
    }
    return 0;
}
