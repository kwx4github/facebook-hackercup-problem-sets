let _ =
  let min (x : int) y =
    if x <= y
    then x
    else y
  in
  let sb = Scanf.Scanning.stdib in
  let cases = Scanf.bscanf sb "%d " (fun s -> s) in
    for ca = 1 to cases do
      let n = Scanf.bscanf sb "%d " (fun s -> s) in
      let es = Array.make n [] in
      let p = Array.make n (-1) in
      let _ =
	for i = 0 to n - 1 do
	  let k = Scanf.bscanf sb "%d " (fun s -> s) in
	  let k = k - 1 in
	    if k >= 0 then (
	      p.(i) <- k;
	      es.(k) <- i :: es.(k);
	    )
	done
      in
      let es = Array.map Array.of_list es in
      let m = 20 in
      let a = Array.make_matrix n (m + 1) 1000000000 in
      let rec dfs u =
	for i = 0 to Array.length es.(u) - 1 do
	  let v = es.(u).(i) in
	    dfs v
	done;
	for c = 1 to m do
	  a.(u).(c) <- c;
	  for i = 0 to Array.length es.(u) - 1 do
	    let v = es.(u).(i) in
	    let b = ref 1000000000 in
	      for j = 1 to m do
		if j <> c then (
		  b := min !b a.(v).(j);
		)
	      done;
	      a.(u).(c) <- a.(u).(c) + !b;
	  done
	done
      in
      let () = dfs 0 in
      let res = Array.fold_left min 1000000000 a.(0) in
	Printf.printf "Case #%d: %d\n" ca res
    done
