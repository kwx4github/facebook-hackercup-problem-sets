#pragma comment(linker, "/STACK:500000000") 
#include <functional>
#include <algorithm> 
#include <iostream> 
#include <string.h> 
#include <stdlib.h>
#include <limits.h>
#include <numeric>
#include <sstream> 
#include <fstream>
#include <ctype.h> 
#include <stdio.h> 
#include <bitset>
#include <vector> 
#include <string> 
#include <math.h> 
#include <time.h> 
#include <queue> 
#include <stack> 
#include <list>
#include <map> 
#include <set> 
#define Int long long 
#define INF 0x3F3F3F3F 
#define eps 1e-9
using namespace std;
typedef pair<int, int> pii;

#define K 50
#define N 200009
const Int LINF = 1ll << 61ll;

vector<int> g[N];
Int dp[N][K];
int n;

Int dfs(int v, int k)
{
	auto &res = dp[v][k];
	if (res == -1)
	{
		res = k;
		for (auto to : g[v])
		{
			Int minVal = LINF;
			for (int p = 0; p < K; p++)
			{
				if (p != k)
					minVal = min(minVal, dfs(to, p));
			}
			res += minVal;
		}
	}
	return res;
}

int main()
{
	int tests, i, par;
	scanf("%d", &tests);
	for (int test = 1; test <= tests; test++)
	{
		scanf("%d", &n);
		for (i = 0; i < n; i++)
		{
			g[i].clear();
			fill_n(dp[i], K, -1);
		}
		for (i = 0; i < n; i++)
		{
			scanf("%d", &par);
			if (par)
				g[par - 1].push_back(i);
		}
		Int res = LINF;
		for (int k = 0; k < K; k++)
			res = min(res, dfs(0, k));
		printf("Case #%d: %lld\n", test, n + res);
	}
}