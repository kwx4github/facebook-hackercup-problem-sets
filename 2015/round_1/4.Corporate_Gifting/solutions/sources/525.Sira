/*
TASK: q4
LANG: C++
*/
#include <bits/stdc++.h>
using namespace std;
#define X first
#define Y second
#define EPS 1e-9
#define ALL(x) (x).begin(),(x).end()
#define mp(x,y) make_pair((x),(y))
#define pb(x) push_back((x))
#define FOR(i,st,ed) for(int (i)=(st);(i)<(ed);(i)++)
typedef pair<int,int> PII;
typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long LL;

int N,M,T;
int color=12;
int tb[200005][22];
int P[200005];
vi v[200005];
int tt=0;
int chk[200005];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    freopen("corporate_gifting.txt","r",stdin);
    freopen("q4.out","w",stdout);
    int i,j,k;
    cin >> T;
    while(T--)
    {
        tt++;
        cin >> N;
        for(i=1;i<=N;i++)
        {
            cin >> k;
            P[i]=k;
            v[k].pb(i);
        }
        int Mc,temp;
        //for(i=1;i<=color;i++)
        {
            queue<int> Q;
            for(j=1;j<=N;j++)
            {
                chk[j]=v[j].size();
                if(chk[j]==0)
                    Q.push(j);
            }
            while(!Q.empty())
            {
                k=Q.front();
                Q.pop();
                if(v[k].size()==0)
                {
                    for(int a=1;a<=color;a++)
                        tb[k][a]=a;
                    chk[P[k]]--;
                    if(chk[P[k]]==0)
                        Q.push(P[k]);
                    continue;
                }
                else
                {
                    for(int c=1;c<=color;c++)
                    {
                        int sum=0,cc=2000000000;
                        for(int a=0;a<v[k].size();a++)
                        {
                            cc=2000000000;
                            for(int b=1;b<=color;b++)
                            {
                                if(b==c)    continue;
                                cc=min(cc,tb[v[k][a]][b]);
                            }
                            sum+=cc;
                        }
                        tb[k][c]=sum+c;
                    }
                    chk[P[k]]--;
                    if(chk[P[k]]==0)
                        Q.push(P[k]);
                }
            }
        }
        for(i=1;i<=color;i++)
        {
            if(i==1)
                Mc=tb[1][i];
            Mc=min(Mc,tb[1][i]);
        }

        printf("Case #%d: %d\n",tt,Mc);
        //cout << Mc << endl;
        // reset
        memset(P,0,sizeof P);
        memset(tb,0,sizeof tb);

        for(i=1;i<=N;i++)
            v[i].clear();
    }
}
