#include <cstdio>
#include <cstring>

const int MAXN = 210000;
const int MAXT = 20;
const int INF = 0x7F7F7F7F;

int n;
int f[MAXN];
int d[MAXN];
int q[MAXN];
int dp[MAXN][MAXT];

void init()
{
   scanf("%d", &n);
   memset(d, 0, sizeof(d));
   for (int i = 1; i <= n; ++i)
   {
      scanf("%d", &f[i]);
      ++d[f[i]];
   }
   int open = 0;
   int closed = 0;
   for (int i = 1; i <= n; ++i)
   if (d[i] == 0) q[++closed] = i;
   while (open < closed)
   {
      int k = q[++open];
      if ((--d[f[k]]) == 0) q[++closed] = f[k];
   }
}

void solve()
{
   memset(dp, 0, sizeof(dp));
   for (int ii = 1; ii <= n; ++ii)
   {
      int v = q[ii];
      for (int i = 1; i < MAXT; ++i)
         dp[v][i] += i;
      int first = dp[v][1], fpos = 1;
      for (int i = 2; i < MAXT; ++i)
      if (first > dp[v][i])
      {
         fpos = i;
         first = dp[v][i];
      }
      int second = INF;
      for (int i = 1; i < MAXT; ++i)
      if (second > dp[v][i] && i != fpos)
         second = dp[v][i];
      for (int i = 1; i < MAXT; ++i)
      if (i != fpos)
         dp[f[v]][i] += first;
      else
         dp[f[v]][i] += second;
   }
   int ans = dp[1][1];
   for (int i = 2; i < MAXT; ++i)
   if (dp[1][i] < ans)
      ans = dp[1][i];
   printf("%d\n", ans);
}

int main()
{
   int tt;
   scanf("%d\n", &tt);
   for (int ii = 1; ii <= tt; ++ii)
   {
      printf("Case #%d: ", ii);
      init();
      solve();
   }
}
