#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<ll> vl;

int main(){
  int T;
  scanf("%d",&T);
  for(int caseID = 1; caseID <= T; caseID++){
    int n;
    scanf("%d",&n);
    vector<vl> g(n);
    for(int i=0;i<n;i++){
      int p;
      scanf("%d",&p);
      p--;
      if(p>=0)g[p].push_back(i);
    }

    vl order, use(n,0);
    queue<int> q;
    q.push(0);
    order.push_back(0);
    use[0] = 1;

    while(q.size()){
      int cur = q.front(); q.pop();
      for(ll nxt : g[cur]){
	if(use[nxt])continue;
	use[nxt] = 1;
	q.push(nxt);
	order.push_back(nxt);
      }
    }

    reverse(order.begin(),order.end());

    vector< vl > dp(n, vl(30,1e18));

    for(int i=0;i<n;i++){
      for(int j=0;j<30;j++){
	ll sum = j+1;
	for(ll nxt : g[order[i]]){
	  ll minv = 1e18;
	  for(int k=0;k<30;k++){
	    if(k==j)continue;
	    minv = min(minv, dp[nxt][k]);
	  }
	  sum += minv;
	}
	dp[order[i]][j] = sum;
      }
    }

    ll ans = 1e18;
    for(int i=0;i<30;i++)ans = min(ans, dp[0][i]);
    printf("Case #%d: %lld\n", caseID, ans);
  }
}
