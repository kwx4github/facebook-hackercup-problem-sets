#include <bits/stdc++.h>
#define MAX 200005
#define INF 0x3f3f3f3f

using namespace std;

vector<int> graph[MAX];
int pred[MAX], grau[MAX], n;

int pd[MAX][20];
int frente[MAX][20];
int tras[MAX][20];

int main()
{
    //freopen("corporate_gifting.txt","r",stdin);
    //freopen("corporate_gifting_out.txt","w",stdout);
    int t;
    scanf("%d",&t);
    for(int caso=1; caso<=t; caso++)
    {
        int n;
        scanf("%d",&n);

        for(int i=0; i<n; i++) graph[i].clear();
        memset(grau, 0, sizeof(grau));

        int v;
        scanf("%d",&v);
        for(int i=1; i<n; i++)
        {
            scanf("%d",&v);
            v--;
            graph[v].push_back(i);
            pred[i] = v;
            grau[v]++;
        }

        queue<int> fila;
        vector<int> folhas;
        for(int i=0; i<n; i++) if(grau[i] == 0) folhas.push_back(i);

        for(int i=0; i<folhas.size(); i++)
        {
            v = folhas[i];

            for(int i=1; i<20; i++) pd[v][i] = i;

            int minimo = INF;
            frente[v][0] = INF;
            frente[v][19] = INF;
            for(int i=1; i<19; i++)
            {
                minimo = min(minimo, pd[v][i]);
                frente[v][i] = minimo;
            }

            minimo = INF;
            tras[v][0] = INF;
            tras[v][19] = INF;
            for(int i=18; i>=0; i--)
            {
                minimo = min(minimo, pd[v][i]);
                tras[v][i] = minimo;
            }

            grau[pred[v]]--;
            if(grau[pred[v]] == 0) fila.push(pred[v]);
        }

        while(!fila.empty())
        {
            v = fila.front();
            fila.pop();

            for(int i=1; i<19; i++)
            {
                pd[v][i] = i;
                for(int j=0; j<graph[v].size(); j++)
                {
                    int son = graph[v][j];
                    pd[v][i] += min(frente[son][i-1], tras[son][i+1]);
                }
            }

            int minimo = INF;
            frente[v][0] = INF;
            frente[v][19] = INF;
            for(int i=1; i<19; i++)
            {
                minimo = min(minimo, pd[v][i]);
                frente[v][i] = minimo;
            }

            minimo = INF;
            tras[v][0] = INF;
            tras[v][19] = INF;
            for(int i=18; i>=0; i--)
            {
                minimo = min(minimo, pd[v][i]);
                tras[v][i] = minimo;
            }

            grau[pred[v]]--;
            if(grau[pred[v]] == 0) fila.push(pred[v]);
        }

        int ans = INF;
        for(int i=1; i<19; i++) ans = min(ans, pd[0][i]);
        printf("Case #%d: %d\n",caso,ans);
    }
    return 0;
}
