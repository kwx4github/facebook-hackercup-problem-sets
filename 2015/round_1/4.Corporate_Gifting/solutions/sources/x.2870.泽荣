#include <iostream>
#include <cstdlib>
#include <cstdio>
#include<algorithm>
#include <memory.h>
using namespace std;

const int N = 200100;

int n,cases;
int head[N],e[N],a[N],ne[N],b[N],val[N];
int vis[N];
int tot;

int cal(int u)
{
	memset(vis,0,sizeof(vis));
	int j = head[u];
	while (j)
	{
		int v = e[j];
		vis[val[v]] = 1;
		j = ne[j];
	}
	for (int i = 1; i <= N; i++)
		if (!vis[i])
		{
			val[u] = i;
			return i;
		}
}
void addedge(int u, int v)
{
	tot ++;
	e[tot] = v; ne[tot] = head[u]; head[u] = tot;
}

int solve()
{
	int sum = 1;
	b[0] = 1; 
	for (int i = 0; i < sum; i++)
	{
		int u = b[i];
		int j = head[u];
		while (j)
		{
			b[sum++] = e[j];
			j  = ne[j];
		}
	}
	int ans = 0;
	for(int i = sum-1;  i >= 0; i--)
		ans += cal(b[i]);
	return ans;
}
int main()
{
	freopen("d.in","r",stdin);
	freopen("d.out","w",stdout);
	scanf("%d",&cases);
	for (int i = 1; i <= cases; i++)
	{
		memset(head,0,sizeof(head));
		tot = 0;
		scanf("%d\n",&n);
		for (int j = 1; j <= n; j++)
		{
			scanf("%d",a+j);
			if (j > 1)
			addedge(a[j],j);
		}

		printf("Case #%d: %d\n",i,solve());
	}
	return 0;
}