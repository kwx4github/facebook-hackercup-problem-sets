#include <iostream>
#include <fstream>
#include <cstdio>
#include <sstream>
#include <string>
#include <cmath>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <numeric>
#include <utility>
#include <functional>
#include <iomanip>
#include <cstring>
#include <ctime>
#include <cassert>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
#define FOR(i, a, b) for(int i = (a); i < (b); i++)
#define TR(i, a) for(typeof(a.begin()) i = a.begin(); i != a.end(); i++)

#define MAXN 200005

int n, parent[MAXN];
vector<int> children[MAXN];

pair<ll, int> rec(int ind)
{
    ll tot = 0;
    vector<int> vals(0);
    vals.push_back(0);
    vals.push_back(n + 1);
    FOR(i, 0, children[ind].size())
    {
        pair<int, int> ch = rec(children[ind][i]);
        tot += ch.first;
        vals.push_back(ch.second);
    }
    sort(vals.begin(), vals.end());
    int mn = -1;
    FOR(i, 0, vals.size()) if(vals[i] + 1 < vals[i + 1])
    {
        mn = vals[i] + 1;
        break;
    }
    //cout << "!" << ind << " " << tot << " " << mn << endl;
    return make_pair(tot + mn, mn);
}

ll solve()
{
    /*FOR(i, 0, n + 1)
    {
        cout << i << ":" << endl;
        FOR(j, 0, children[i].size()) cout << " " << children[i][j];
        cout << endl;
    }*/
    return rec(1).first;
}

int main()
{
    freopen("d2.in", "r", stdin);
    freopen("d.out", "w", stdout);
    int test_cnt;
    cin >> test_cnt;
    FOR(i, 0, test_cnt)
    {
        cin >> n;
        FOR(i, 1, n + 1) children[i].clear();
        FOR(i, 1, n + 1)
        {
            scanf("%d", &parent[i]);
            children[parent[i]].push_back(i);
        }
        printf("Case #%d: ", i + 1);
        cout << solve() << endl;
        //break;
    }
}









