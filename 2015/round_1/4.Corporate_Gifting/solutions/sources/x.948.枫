#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:102400000,102400000")

#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>

const int maxn = 200100;

using namespace std;

vector<int> v[maxn];
int val[maxn];
bool st[maxn];

void dfs(int u)
{
	for (int i = 0; i < v[u].size(); ++i)
		dfs(v[u][i]);

	for (int i = 0; i < v[u].size(); ++i)
		st[val[v[u][i]]] = 1;
	for (int i = 1; i < maxn; ++i)	if (!st[i])
	{
		val[u] = i;
		break;
	}
	for (int i = 0; i < v[u].size(); ++i)
		st[val[v[u][i]]] = 0;
}

int main()
{
	freopen("G:\\code\\HackerCup\\HackerCup\\corporate_gifting.txt", "r", stdin);
	freopen("G:\\code\\HackerCup\\HackerCup\\corporate_gifting.out", "w", stdout);

	int T, cases = 1, N;

	scanf("%d", &T);
	while (T--)
	{
		memset(st, 0, sizeof(st));

		scanf("%d", &N);
		
		for (int i = 1; i <= N; ++i)
		{
			v[i].clear();
			val[i] = 0;
		}

		int k;
		for (int i = 1; i <= N; ++i)
		{
			scanf("%d", &k);
			v[k].push_back(i);
		}

		dfs(1);

		int ans = 0;
		for (int i = 1; i <= N; ++i)
		{
			ans += val[i];
			if (val[i] == 0)
				puts("error!");
		}

		printf("Case #%d: %d\n", cases++, ans);
	}

	return 0;
}