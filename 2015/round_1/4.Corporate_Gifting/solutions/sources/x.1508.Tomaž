#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <iostream>
#include <sstream>
#include <vector>
#include <string>
#include <math.h>
#include <queue>
#include <list>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <ctime>
using namespace std;

#define ALL(c) (c).begin(),(c).end()
#define IN(x,c) (find(c.begin(),c.end(),x) != (c).end())
#define REP(i,n) for (int i=0;i<(int)(n);i++)
#define FOR(i,a,b) for (int i=(a);i<=(b);i++)
#define INIT(a,v) memset(a,v,sizeof(a))
#define SORT_UNIQUE(c) (sort(c.begin(),c.end()), c.resize(distance(c.begin(),unique(c.begin(),c.end()))))
template<class A, class B> A cvt(B x) { stringstream ss; ss<<x; A y; ss>>y; return y; }

typedef pair<int,int> PII;
typedef long long int64;

#define MOD 1000000007
#define N 200000

int tests;
int n;
int p[N+1];
vector<int> ch[N+1];

int dp[N+1][4];

int solve(int x, int pc) {
	int &r=dp[x][pc];
	if (r!=-1) return r;
	r=0;
	if (ch[x].empty()) return r;
	for (int y : ch[x]) {
		int ry=1e9;
		FOR (c,1,3) if (c!=pc) {
			ry=min(ry, c+solve(y,c));
		}
		r+=ry;
	}
	return r;
}

int main() {
	freopen("corporate_gifting.txt","r",stdin);
	freopen("corporate_gifting.out","wb",stdout);
	scanf("%d",&tests);
	FOR (test,1,tests) {
		cerr << test << endl;
		scanf("%d",&n);
		FOR (i,1,n) ch[i].clear();
		INIT(dp,-1);
		FOR (i,1,n) {
			scanf("%d",&p[i]);
			ch[p[i]].push_back(i);
		}
		int r=1e9;
		FOR (c,1,3) r=min(r,c+solve(1,c));
		printf("Case #%d: %d\n",test,r);
	}
	return 0;
}
