#include<stdio.h>
#include<vector>
#include<algorithm>
std::vector<int> adj[1000001];
int dp[2][1000001];
int p[1000001];
void dfs(int p){
	int i,j,k;
	dp[0][p]=0;
	dp[1][p]=1;
	for(i=0;i<adj[p].size();i++){
		k=adj[p][i];
		dfs(k);
		dp[1][p]+=std::min(dp[0][k],dp[1][k]);
		dp[0][p]+=dp[1][k];
	}
}
int main(){
	int i,j,k;
	int T,TN;
	scanf("%d",&TN);
	for(T=1;T<=TN;T++){
		int N;
		scanf("%d",&N);
		for(i=0;i<N;i++){
			scanf("%d",&p[i]);
			p[i]--;
			adj[i].clear();
		}
		for(i=1;i<N;i++){
			adj[p[i]].push_back(i);
		}
		dfs(0);
		printf("Case #%d: %d\n",T,std::min(dp[0][0],dp[1][0]));
	}
}
