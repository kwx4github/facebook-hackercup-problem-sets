import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Arrays;


public class Fb1_4 {
	static int[] ups = null;
	static int[][] dp = null;
	static int[] nrChildren = null;
	static int[] nrProcessedChildren = null;
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new FileReader("corporate_gifting.txt"));
		PrintWriter pw = new PrintWriter(new FileWriter("output4.txt"));
		
		int nrT = Integer.parseInt(br.readLine());
		for(int t = 1; t <= nrT; t++) {
			int n = Integer.parseInt(br.readLine());
			String[] strs = br.readLine().split(" ");
			ups = new int[strs.length];
			nrChildren = new int[strs.length];
			nrProcessedChildren = new int[strs.length];

			for(int i = 0; i < strs.length; i++) {
	      ups[i] = Integer.parseInt(strs[i]) - 1;
	      if(ups[i] >= 0) {
	      	nrChildren[ups[i]]++;
	      }
      }
			dp = new int[strs.length][18];
			
			for(int i = 0; i < strs.length; i++) {
				if(nrChildren[i] == 0) {
					for(int j = 0; j < dp[i].length; j++) {
						dp[i][j] = j + 1;
					}
					if(ups[i] >= 0) {
						int newNode = ups[i], prevNode = i;
						while(newNode >= 0 && nrProcessedChildren[prevNode] == nrChildren[prevNode]) {
							// for each color from newNode, set the possible best
							for(int newCol = 0; newCol < dp[newNode].length; newCol++) {
								int colMin = Integer.MAX_VALUE;
								for(int prevCol = 0; prevCol < dp[prevNode].length; prevCol++) {
									if(prevCol == newCol) {
										continue;
									}
									colMin = Math.min(colMin, dp[prevNode][prevCol]);
								}
								dp[newNode][newCol] += colMin;
							}
							nrProcessedChildren[newNode]++;
							if(nrChildren[newNode] == nrProcessedChildren[newNode]) {
								for(int j = 0; j < dp[newNode].length; j++) {
									dp[newNode][j] += j + 1;
								}
							}
							prevNode = newNode;
							newNode = ups[newNode];
						}
					}
				}
			}
			
			int res = dp[0][0];
			for(int col = 0; col < dp[0].length; col++) {
				res = Math.min(res, dp[0][col]);
			}
			pw.println("Case #" + t + ": " + res);
			pw.flush();
		}
		
		br.close();
		pw.close();
		System.out.println("done!");
	}
}
