/* ***********************************************
Author        :kuangbin
Created Time  :2015/1/18 11:10:24
File Name     :hackercup_R1\D.cpp
************************************************ */

#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <math.h>
#include <stdlib.h>
#include <time.h>
using namespace std;
const int MAXN = 200010;
const int INF = 0x3f3f3f3f;
struct Edge{
	int to,next;
}edge[MAXN];
int head[MAXN],tot;
void init(){
	tot = 0;
	memset(head,-1,sizeof(head));
}
inline void addedge(int u,int v){
	edge[tot].to = v;
	edge[tot].next = head[u];
	head[u] = tot++;
}
const int MAX = 20;
int dp[MAXN][MAX+1];
int q[MAXN];

int main()
{
    freopen("corporate_gifting.txt","r",stdin);
    freopen("D20.txt","w",stdout);
    int T;
	int iCase = 0;
	scanf("%d",&T);
	while(T--){
		iCase++;
		init();
		int n;
		scanf("%d",&n);
		int fa;
		for(int i = 1;i <= n;i++){
			scanf("%d",&fa);
			if(i > 1)
				addedge(fa,i);
		}
		int l,r;
		l = r = 0;
		q[++r] = 1;
		while(l < r){
			int u = q[++l];
			for(int i = head[u];i != -1;i = edge[i].next)
				q[++r] = edge[i].to;
		}
		for(int i = n;i >= 1;i--){
			int u = q[i];
			//printf("u %d\n",u);
			for(int j = 1;j <= MAX;j++){
				dp[u][j] = j;
				for(int x = head[u];x != -1;x = edge[x].next){
					int v = edge[x].to;
					int Min = INF;
					for(int y = 1;y <= MAX;y++)
						if(y != j)
							Min = min(Min,dp[v][y]);
					dp[u][j] += Min;
				}
				//printf("j %d %d\n",j,dp[u][j]);
			}
		}
		int ans = INF;
		for(int i = 1;i <= MAX;i++)
			ans = min(ans,dp[1][i]);
		printf("Case #%d: %d\n",iCase,ans);
	}
    return 0;
}
