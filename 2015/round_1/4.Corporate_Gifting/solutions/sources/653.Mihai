#include <fstream>
#include <vector>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <iostream>

#define maxn 200010
#define maxcol 500

using namespace std;

ifstream fin ("test2.txt");
ofstream fout ("test.out");

int test;
vector<int> T[maxn];
int dp[maxn][maxcol+1];
int n;
int sum[maxcol+1];

void dfs (int x)
{
    for (int i = 0; i < T[x].size(); ++i)
    {
        dfs (T[x][i]);
    }

    for (int j = 1; j <= maxcol; ++j)
    {
        sum[j] = j;
    }

    for (int i = 0; i < T[x].size(); ++i)
    {
        for (int j = 1; j <= maxcol; ++j)
        {
            sum[j] += dp[T[x][i]][j];
        }
    }

    int minj1,minj2;
    minj1 = 0;
    minj2 = 0;

    for (int j = 1; j <= maxcol; ++j)
    {
        if (minj1 == 0 || sum[j] <= sum[minj1])
        {
            minj2 = minj1;
            minj1 = j;
        }
        else
        {
            if (minj2 == 0 || sum[j] < sum[minj2])
            {
                minj2 = j;
            }
        }
    }

    for (int j = 1; j <= maxcol; ++j)
    {
        if (j == minj1)
            dp[x][j] = sum[minj2];
        else dp[x][j] = sum[minj1];
    }
}

void solve (int test)
{
    fin>>n;

    int x;

    fin>>x;

    for (int i = 2; i <= n; ++i)
    {
        fin>>x;
        T[x].push_back (i);
    }

    dfs (1);

    int ans = dp[1][1];

    for (int j=1; j <= maxcol; ++j)
    {
        ans = min (ans,dp[1][j]);
    }

    fout<<"Case #"<<test<<": "<<ans<<"\n";
}

int main()
{

    fin>>test;

    for (int k = 1; k <= test; ++k)
    {
        solve (k);
        for (int i = 1; i <= n; ++i)
            T[i].clear();
    }

    /*srand(time (NULL));

    for (int i = 1; i <= 100; ++i)
    {
    n = 200000;
    fout<<n<<"\n";

    fout<<0<<" ";

    for (int i = 2; i <= n; ++i)
    {
        fout<<rand(i-1)<<" ";
    }

    fout<<"\n";

    }*/
}
