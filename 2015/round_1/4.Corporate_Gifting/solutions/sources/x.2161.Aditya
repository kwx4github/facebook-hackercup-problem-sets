#include <iostream>
#include <cstdlib>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <stack>
#include <iomanip>

#define FOR(i,x,y) for(int i =(int)(x); i<(int)(y); i++)
#define REP(i, N) FOR(i, 0, N)
#define SZ(x) (int)x.size()

using namespace std;

typedef vector<int> vin;
typedef pair<int, int> pii;
typedef vector<pair<int, int>> vpii;
typedef vector<vector<int>> vvin;
vin graph[200001];
const int NUMS = 3;
long long dp[200001][NUMS];

class S {
    void run(int n) {
        for (int i = n; i >= 1; i--) {
            if (graph[i].empty()) {
                dp[i][0] = 3; dp[i][1] = 1; dp[i][2] = 2;
            } else {
                 REP (j, NUMS) {
                    int p = (j == 0 ? NUMS : j);
                    dp[i][j] = p;
                    REP (k, SZ(graph[i])) {
                        int z = graph[i][k];
                        dp[i][j] += min (
                            dp[z][(j+1)%NUMS],
                            dp[z][(j+2)%NUMS]
                        );
                    }
                }
            }
        }
    }

    public:
        long long solve () {
            long long N; cin >> N;
            REP (i, N) {
                int n; cin >> n;
                graph[n].push_back(i+1);
            }

            run(N);
            long long mmin = (1<<30);
            REP (i, NUMS) {
                mmin = min(mmin, dp[1][i]);
            }
            return mmin;
        }
};

void clear () {
    for (int i = 0; i < 200001; i++) graph[i].clear();
    memset(dp, 0, sizeof(long long)*200001*3);
}

int main () {
    freopen("input.in", "r", stdin);
    freopen("output.out", "w", stdout);
    int n; cin >> n;

    FOR (i, 1, n+1) {
        S s;
        clear();
        long long ans = s.solve();
        cout << "Case #" << i << ": " << ans << endl;
    }
    return 0;
}
