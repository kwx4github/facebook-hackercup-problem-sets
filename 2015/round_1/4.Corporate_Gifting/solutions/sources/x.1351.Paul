//by tzupengwangâ„¢
#include <bits/stdc++.h>
using namespace std;
#define mod9 1000000009
#define mod7 1000000007
#define N 200010
int n , p[ N ] , son[ N ];
int dp[ N ][ 10 ];
int ans;
vector<int> v[ N ];

queue<int> q;

void init() {
	scanf( "%d" , &n ) ;
	for ( int i = 1 ; i <= n ; i ++ ) {
		v[ i ].clear() , son[ i ] = 0;
		for ( int j = 1 ; j < 10 ; j ++ )
			dp[ i ][ j ] = 0;
	}
	for ( int i = 1 ; i <= n ; i ++ ) {
		scanf( "%d" , &p[ i ] ) ;
		v[ p[ i ] ].push_back( i );
		son[ p[ i ] ] ++;
	}
	for ( int i = 1 ; i <= n ; i ++ ) {
		if ( son[ i ] == 0 ) q.push( i );
	}
}

void DP() {
	while( q.size() ) {
		int now = q.front() ; q.pop() ;
		for ( int k = 1 ; k < 10 ; k ++ ) {
			int tmp = 0 ;
			for ( int i = 0 ; i < (int)v[ now ].size() ; i ++ ) {
				int ta = -1 ;
				for ( int j = 1 ; j < 10 ; j ++ ) if ( j != k ) {
					int tb = dp[ v[ now ][ i ] ][ j ] ;
					if ( ta == -1 || tb < ta ) ta = tb ;
				}
				tmp += ta;
			}
			dp[ now ][ k ] = k + tmp ;
		}
		son[ p[ now ] ] --;
		if ( son[ p[ now ] ] == 0 ) q.push( p[ now ] );
	}
}

void solve() {
	DP() ;
	ans = dp[ 1 ][ 1 ] ;
	for ( int i = 2 ; i < 10 ; i ++ ) ans = min( ans , dp[ 1 ][ i ] ) ;
	printf( "%d\n" , ans ) ;
}

int main() {
/*
#ifdef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
*/
	int Cases;
	scanf( "%d" , &Cases ) ;
	for ( int cases = 1 ; cases <= Cases ; cases ++ ) {
		init() ;
		printf( "Case #%d: " , cases ) ;
		solve() ;
	}
	return 0 ;
}

