#include <vector>
#include<cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <string>
#include <map>
#include <deque>
#include <set>
#ifdef __GXX_EXPERIMENTAL_CXX0X__
#include <unordered_map>
#include <unordered_set>
#include <cassert>
#endif
#include <ctime>
#include <queue>
#include <stack>
#include<iomanip>
#include <sstream>
#include <cmath>
#include <list>

using namespace std;

typedef long long ll;
typedef pair<int, int> PII;
typedef pair<int, double> PID;
typedef pair<string, int> PSI;
typedef pair<string, string> PSS;
typedef pair<PII, int> PIP;
const ll mod = 1000000007;
vector<vector<int>> tree;
vector<vector<int>> dp;
const int C = 15;
void dfs(int r) {
    //cerr <<"dfs " << r << endl;
    for(auto u : tree[r]) {
        dfs(u);
    }
    for(int i = 1; i <= C; i ++) {
        dp[r][i] += i;
        for(auto u : tree[r]) {
            int tmp = INT_MAX;
            for(int j = 1; j <= C; j ++) {
                if (i != j) tmp = min(tmp, dp[u][j]);
            }
            dp[r][i] += tmp;
        }
    }
}
void solve(int ncase) {
    int n;
    cin >> n;
    tree.assign(n + 1, {});
    dp.assign(n + 1, vector<int>(C + 1));
    for(int i = 1; i <= n; i ++) {
        int r;
        cin >> r;
        if (r == 0) continue;
        tree[r].push_back(i);
    }
    dfs(1);
    int ret = INT_MAX;
    for(int i = 1; i <= C; i ++) {
        ret = min(ret, dp[1][i]);
    }
    cout << "Case #" << ncase << ": " << ret << endl;
}

int main() {
    //ios::sync_with_stdio(false);
    //cout << std::fixed;
    //cout << setprecision(16) << endl;
#ifdef _zzz_
     freopen("corporate_gifting.txt", "r", stdin);
     freopen("out.txt", "w", stdout);
#endif
    //init();
    int T = 1;
    cin >> T;
    //scanf("%d", &T);
    int ncase = 0;
    while(T --) {
        solve(++ ncase);
    }
}
