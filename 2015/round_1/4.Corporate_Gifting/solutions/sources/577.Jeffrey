#include <iostream>
#include <vector>
#include <map>
using namespace std;

vector<int> e[200200];
int b1[200200], p1[200200], b2[200200], p2[200200];

void compute(int x) {
  if (e[x].size() == 0) {
    b1[x] = 1; p1[x] = 1;
    b2[x] = 2; p2[x] = 2;
    return;
  }

  int c1 = 0, save = 0;
  for (int i = 0; i < e[x].size(); i++) {
    int y = e[x][i];
    if (p1[y] != 1) c1 += b1[y];
    else { c1 += b2[y]; save += b2[y] - b1[y]; }
  }

  map<int, int> delta;
  int maxp = 1;
  for (int i = 0; i < e[x].size(); i++) {
    int y = e[x][i];
    delta[p1[y]] += b2[y] - b1[y];
    maxp = max(maxp, p1[y]);
  }

  b1[x] = b2[x] = 1000000000;
  for (int i = 1; i <= maxp + 2; i++) {
    int c = c1 - save + delta[i] + i;
    if (c <= b1[x]) {
      b2[x] = b1[x]; p2[x] = p1[x];
      b1[x] = c; p1[x] = i;
    } else if (c <= b2[x]) {
      b2[x] = c; p2[x] = i;
    }
  }
}

int main() {
  int t; cin >> t;
  for (int c = 1; c <= t; c++) {
    int n; cin >> n;
    for (int i = 0; i < n; i++) e[i].clear();
    for (int i = 0; i < n; i++) {
      int p; cin >> p;
      if (p > 0) e[p-1].push_back(i);
    }

    vector<pair<int, int> > stk;
    stk.push_back(make_pair(0, 0));
    while (stk.size() > 0) {
      pair<int, int> cur = stk[stk.size()-1];
      stk.pop_back();

      int x = cur.first;
      if (cur.second == 0) {
        stk.push_back(make_pair(x, 1));
        for (int i = 0; i < e[x].size(); i++) stk.push_back(make_pair(e[x][i], 0));
      } else if (cur.second == 1) {
        compute(x);
      }
    }

    cout << "Case #" << c << ": " << b1[0] << endl;
  }
  return 0;
}
