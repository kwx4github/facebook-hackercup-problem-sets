#include <algorithm>
#include <string.h>
#include <stdio.h>
using namespace std;
const int MAX = 200000 + 10;

vector<int> adj[MAX];
int n;
int color[MAX], k1[MAX], k2[MAX];

int Dfs(int v) {
  if (!adj[v].size()) {
    k1[v] = 1;
    color[v] = 1;
    k2[v] = 2;
  } else {
    for (int w : adj[v])
      Dfs(w);
    int d = adj[v].size();
    int c, i, k = 0;
    for (int w : adj[v])
      k += k1[w];
    vector<int> deltac(d+2, k);
    for (int w : adj[v]) {
      if (color[w] <= d+1) 
        deltac[color[w]] += k2[w] - k1[w];
    }
    k1[v] = k2[v] = 1 << 30;
    for (c = 1; c <= d+1; c++) {
      i = c + deltac[c];
//      printf("v: %d  cor %d  deltac %d  kc %d\n", v, c, deltac[c], i);
      if (i < k1[v]) {
        k2[v] = k1[v];
        k1[v] = i;
        color[v] = c;
      } else if (i < k2[v])
        k2[v] = i;
    }
  }
  //printf("%d k1 %d  color %d  k2 %d\n", v, k1[v], color[v], k2[v]);
  return k1[v];
}

int main() {
  int nt, t, i, j;
  scanf("%d", &nt);
  for (t = 1; t <= nt; t++) {
    scanf("%d", &n);
    for (i = 0; i <= n; i++)
      adj[i].clear();
    for (i = 1; i <= n; i++) {
      scanf("%d", &j);
      adj[j].push_back(i);
    }
    int cost = Dfs(1);
    printf("Case #%d: %d\n", t, cost);
  }
  return 0;
}
