// karanaggarwal
#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define repi(i,n) for(int i=0; i<(int)n;i++)
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
#define DRT()  int t; cin>>t; while(t--)
#define TRACE
using namespace std;

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);


#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif


typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;

int P[200001];

set<int> MX[200001];
int C[200001];
int main()
{
    int t; si(t); int cs = 0; while(t--)
    {
        int n;si(n);
        LL ans = 0;
        cs++;
        for(int i=1; i<=n; i++)
        {
            si(P[i]); 
            MX[i].clear();
            C[i] = 0;  
        }
        for(int i=1; i<=n; i++)
            C[P[i]]++;
        queue<int> Q;
        for(int i=1; i<=n; i++)
        {
            if(C[i]==0)
                Q.push(i);
        }
        while(!Q.empty())
        {
            int x = Q.front();
            Q.pop();
            int td;
            for(td=1; ; td++)
                if(MX[x].find(td)==MX[x].end())
                {
                    ans += td; 
                    MX[P[x]].insert(td);
                    break;
                }
            C[P[x]]--; 
            if(C[P[x]]==0 and P[x]>0)Q.push(P[x]);
        }
        cout<<"Case #"<<cs<<": "<<ans<<endl;
    }
    return 0;
}

