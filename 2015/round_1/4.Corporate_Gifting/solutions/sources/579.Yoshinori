package com.yehara.fbhc.fbhc2015.r1;

import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class CorporateGifting {

	static PrintWriter out;

	public static void main(String[] args) throws IOException {
		File dir = new File("file/fbhc2015/r1/");
		String name = "D";
		Scanner s = new Scanner(new File(dir, name + ".in"));
		int count = s.nextInt();
		s.nextLine();
		out = new PrintWriter(new BufferedWriter(new FileWriter(new File(dir,
				name + depth + ".out"))));
		// out = new PrintWriter(System.out);
		for (int cn = 1; cn <= count; cn++) {
			out.print("Case #" + cn + ": ");
			int n = s.nextInt();
			int res = new CorporateGifting().solve(n, s);
			out.print(res);
			out.println();
			out.flush();
			System.out.println("Case #" + cn + ": " + res);
		}
		out.close();
		s.close();
	}

	private static int depth = 300;
	private N[] nodes;
	private int solve(int n, Scanner s) {
		nodes = new N[n+1];
		for(int i=1; i<=n; i++) {
			nodes[i] = new N(i);
		}
		for(int i=1; i<=n; i++) {
			int pid = s.nextInt();
			if(pid != 0) {
				nodes[i].p = nodes[pid];
				nodes[pid].c.add(nodes[i]);
			}
		}
		nodes[1].calc();
		int min = Math.min(nodes[1].exceptMin[1], nodes[1].exceptMin[2]);
		return min;
	}


	private static class N {
		public N p;
		public int id;
		public List<N> c = new ArrayList<N>();
		public int[] exceptMin = new int[depth+1];
		public int[] min = new int[depth+1];
		public N(int id) {
			this.id = id;
		}
		public void calc() {
			for(N cc : c) {
				cc.calc();
			}
			int[] mm = new int[depth];
			for(int i=1; i<=depth; i++) {
				min[i] = i;
				for(N cc : c) {
					min[i] += cc.exceptMin[i];
				}
				mm[i-1] = min[i];
			}
			Arrays.sort(mm);
			for(int i=1; i<=depth; i++) {
				if(min[i] == mm[0]) {
					exceptMin[i] = mm[1];
				} else {
					exceptMin[i] = mm[0];
				}
			}
		}
	}

}
