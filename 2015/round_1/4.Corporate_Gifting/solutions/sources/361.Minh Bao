#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;
typedef long long ll;

int nTest;
int n;
int par[200020];
vector<int> adj[200020];

ll f[200020][55];
pii best[200020];
void dp(int u) {
	for (auto v = adj[u].begin(); v != adj[u].end(); v++)
		dp(*v);

	best[u] = {-1, -1};	
	for (int i = 1; i <= 50; i++) {
		f[u][i] = i;
		for (auto v = adj[u].begin(); v != adj[u].end(); v++) {
			int choice = best[*v].first;
			if (choice == i) choice = best[*v].second;
			f[u][i] += f[*v][choice];
		}

		if (best[u].first == -1 || f[u][i] < f[u][best[u].first])
			best[u] = {i, best[u].first};
		else if (best[u].second == -1 || f[u][i] < f[u][best[u].second]) 
			best[u].second = i;
	}
}

int main() {

	freopen("corporate_gifting_input.txt", "r", stdin);
	freopen("corporate_gifting_output.txt", "w", stdout);

	scanf("%d", &nTest);
	int maxDeg = 0;
	for (int test = 1; test <= nTest; test++) {
		scanf("%d", &n);
		for (int i = 0; i <= n; i++) {
			adj[i].clear();
			memset(f[i], -1, sizeof f[i]);
		}
		for (int u = 1; u <= n; u++) {
			scanf("%d", &par[u]);
			if (!par[u]) continue;

			adj[par[u]].push_back(u);
			maxDeg = max(maxDeg, (int)adj[par[u]].size());
		}
		dp(1);
		ll ans = 1e18;
		for (int i = 1; i <= 50; i++)
			ans = min(ans, f[1][i]);
		printf("Case #%d: %lld\n", test, ans);
	}
	// cerr << maxDeg << endl;
	return 0;
}