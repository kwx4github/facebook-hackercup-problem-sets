#include <iostream>
#include <vector>

using namespace std;

#define MAXN 200020
#define INF MAXN*2

vector<int> E[MAXN];
vector<int> DP[MAXN];
vector<int> memo[MAXN];

int solve(int u, int c) {
  c = min(c, (int)E[u].size() + 1);
  int& ref = memo[u][c];
  if (ref != -1) {
    return ref;
  }

  ref = INF;
  for (int nc = 0; nc <= E[u].size() + 1; nc++) {
    if (nc == c) {
      continue;
    }
    int res = nc;
    for (int i = 0; i < E[u].size(); i++) {
      res += solve(E[u][i], nc);
    }
    ref = min(ref, res);
  }

  return ref;
}

int main() {
  int T; cin >> T;
  for (int t = 1; t <= T; t++) {
    int N; cin >> N;
    for (int i = 0; i < MAXN; i++) {
      E[i].clear();
      memo[i].clear();
    }
    for (int i = 0; i < N; i++) {
      int p; cin >> p; p--;
      if (p >= 0) {
        E[p].push_back(i);
      }
    }
    for (int u = N - 1; u >= 0; u--) {
      int mxc = E[u].size() + 1;

      vector<int> C(mxc + 1);
      vector<int> S(mxc + 1);
      for (int i = 0; i < E[u].size(); i++) {
        int v = E[u][i];
        for (int j = 0; j < DP[v].size() && j <= mxc; j++) {
          S[j] += DP[v][j];
        }
        if (DP[v].size() <= mxc) {
          C[DP[v].size()] += DP[v].back();
        }
      }

      int cr = 0;
      for (int i = 0; i <= mxc; i++) {
        cr += C[i];
        S[i] += cr + i;
      }
      C = S;

      for (int i = 1; i < C.size(); i++) {
        C[i] = min(C[i], C[i - 1]);
      }
      for (int i = S.size() - 2; i >= 0; i--) {
        S[i] = min(S[i], S[i + 1]);
      }

      DP[u].resize(mxc + 1);
      for (int i = 0; i <= mxc; i++) {
        DP[u][i] = min(i ? C[i - 1] : INF,
                       i + 1 < S.size() ? S[i + 1] : INF);
      }
    }
    cout << "Case #" << t << ": " << DP[0][E[0].size() + 1] + N << '\n';

/*
    for (int i = 0; i < N; i++) {
      memo[i] = vector<int>(E[i].size() + 2, -1);
    }
*/
    // cout << "Case #" << t << ": " << solve(0, E[0].size() + 1) + N << '\n';

/*
    int r1 = DP[0][E[0].size() + 1] + N;
    int r2 = solve(0, E[0].size() + 1) + N;
    if (r1 != r2) cout << "PROBLEM: " << t << endl;
    else cout << "OK: " << t << endl;
*/
  }
  return 0;
}
