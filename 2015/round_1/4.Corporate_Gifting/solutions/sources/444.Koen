#include <iostream>
#include <vector>
#include <queue>
#include <climits>
#include <cstdio>

#define MAX 200005 
#define MAX2 1800

int sm[MAX][MAX2+1];
int in[MAX];

int main(){
	int T;
	std::cin >> T;
	for(int t=1; t<=T; ++t){
		std::vector<int> v;
		for(int i=0; i<MAX; ++i){
			in[i] = 0;
			for(int j=0; j<MAX2; ++j) sm[i][j] = 0;
		}
		int N;
		std::cin >> N;
		for(int i=0; i<N; ++i){
			int k;
			std::cin >> k;
			k-=1;
			v.push_back(k);
			if(k>=0) in[k]++;
		}
		
		std::queue<int> q;
		std::vector<int> tp;
		for(int i=0; i<N; ++i){
			if(in[i] == 0) q.push(i);
		}
		while(!q.empty()){
			int p = q.front();
			q.pop();
			tp.push_back(p);
			--in[v[p]];
			if(in[v[p]] == 0) q.push(v[p]);
		}
		int ans = INT_MAX;
		for(size_t i=0; i<tp.size(); ++i){
			int j = tp[i];
			int k = v[j];
			if(j == 0){
				//handle result
				for(int z=0; z<MAX2; ++z){
					ans = std::min(ans, sm[j][z]+z+1);
				}
			}else{
				int mn1 = INT_MAX, mni = -1;
				int mn2 = INT_MAX;
				for(int z=0; z<MAX2; ++z){
					if(z+1+sm[j][z] < mn1){
						mn2 = mn1;
						mn1 = z+sm[j][z]+1;
						mni = z;
					}else if(z+1+sm[j][z] < mn2){
						mn2 = z+sm[j][z]+1;
					}
				}
				for(int z=0; z<MAX2; ++z){
					if(z == mni) sm[k][z] += mn2;
					else sm[k][z] += mn1;
				}
			}
		}
		std::cout << "Case #" << t << ": " << ans << std::endl;
	}
}