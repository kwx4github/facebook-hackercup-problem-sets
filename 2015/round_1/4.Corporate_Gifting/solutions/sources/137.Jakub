#include <bits/stdc++.h>
#include <sys/time.h>

using namespace std;

#define FI first
#define SE second
#define X first
#define Y second
#define ST first
#define ND second
#define MP make_pair
#define PB push_back

typedef long long LL;
typedef vector<int> VI;
typedef long double LD;
typedef pair<int,int> PII;

#define REP(i,n) for(int i=0;i<(n);++i)
#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORE(a,b) for(VAR(a,(b).begin());a!=(b).end();++a)
#define VAR(a,b) __typeof(b) a=(b)
#define ALL(x) (x).begin(),(x).end()
#define CLR(x,a) memset(x,a,sizeof(x))

double getTime() {
	timeval tv;
	gettimeofday(&tv, NULL);
	return tv.tv_sec + tv.tv_usec * 1e-6;
}

const int MX = 20;
const int N = 200000;

int dp[N + 5][MX + 1];

int ch[N + 5];
int p[N + 5];

int alg() {
    int n;
    cin >> n;
    FOR (i, 1, n + 1) {
        cin >> p[i];
        if (p[i] != 0) {
            ++ch[p[i]];
        }
    }
    queue<int> q;
    FOR (i, 1, n + 1) {
        FOR (j, 1, MX + 1) {
            dp[i][j] = j;
        }
        if (ch[i] == 0) {
            q.push(i);
        }
    }
    while (!q.empty()) {
        int c = q.front();
        q.pop();
        if (p[c] == 0) {
            break;
        }
        FOR (i, 1, MX + 1) {
            int r = (int) 1e9;
            FOR (j, 1, MX + 1) {
                if (i != j) {
                    r = min(r, dp[c][j]);
                }
            }
            dp[p[c]][i] += r;
        }
        if (!--ch[p[c]]) {
            q.push(p[c]);
        }
    }
    int r = (int) 1e9;
    FOR (i, 1, MX + 1) {
         r = min(r, dp[1][i]);
    }
    return r;
}

int main() {
    int n_cases;
    cin >> n_cases;
    FOR (i, 1, n_cases + 1) {
        cout << "Case #" << i << ": " << alg() << endl;
    }
}
