#include <iostream>
#include <set>
#include <map>
#include <vector>
#include <cstring>
using namespace std;

int parent[200001];
int gift[200001];
int remain[200001];
set<int> recv[200001];
int main(int argc, char** argv)
{
    int T;
    scanf("%d", &T);
    for(int tcase=1; tcase <= T; ++tcase){
        int n;
        scanf("%d", &n);
        memset(parent, 0, sizeof(parent));
        memset(remain, 0, sizeof(remain));
        for(int i=0; i < n; ++i){
            recv[i].clear();
            scanf("%d", &parent[i]);
            remain[i] = n;
        }
        memset(gift, -1, sizeof(gift));
        for(int i=n - 1; i >= 0; --i){
            int p = parent[i] - 1;
            int c = 0;
            if(p < 0){
                p = 0;
            }
            while(gift[p] == c || remain[c] == 0 || recv[i].find(c) != recv[i].end())
                c += 1;
            gift[i] = c;
            remain[c] -= 1;
            recv[p].insert(c);
        }
        int ans = 0;
        for(int i=0; i < n; ++i){
            ans += (gift[i] + 1);
        }
        printf("Case #%d: %d\n", tcase, ans);
    }
    return 0;
}
