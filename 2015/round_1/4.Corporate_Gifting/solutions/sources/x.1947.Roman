#include <cstdio>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include <algorithm>
#include <cstring>
#include <string>
#include <iostream>
#include <cassert>
#include <memory.h>
using namespace std;

#define forn(i, n) for (int i = 0; i < (int)(n); i++)
#define foreach(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
#define pb push_back
typedef long long ll;
typedef pair<int, int> pii;
typedef long double ld;

int f[200010][4], n;
vector<int> g[200010];

void calc(int i) {
	forn(j, g[i].size()) calc(g[i][j]);
	for (int q = 1; q <= 3; q++) {
		int cur = q;
		forn(j, g[i].size()) {
			int y = g[i][j];
			int z = int(1e9);
			for (int w = 1; w <= 3; w++)
				if (w != q)
					z = min(z, f[y][w]);
			cur += z;
		}
		f[i][q] = cur;
		// printf("f[%d][%d] <- %d\n", i, q, cur);
	}
}

void solve() {
	scanf("%d", &n);
	int x;
	forn(i, n + 1) g[i].clear();
	for (int i = 1; i <= n; i++) {
		scanf("%d", &x);
		g[x].pb(i);
	}
	calc(1);
	printf("%d\n", min(f[1][1], min(f[1][2], f[1][3])));
}

int main() {
	int tc;
	scanf("%d", &tc);
	for (int q = 1; q <= tc; q++) {
		printf("Case #%d: ", q);
		solve();
	}
	return 0;
}
