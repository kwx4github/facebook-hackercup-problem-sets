/******************************************************************************\
*                         Author:  Dumbear                                     *
*                         Email:   dumbear[#at]163.com                         *
*                         Website: http://dumbear.com                          *
\******************************************************************************/
#include <algorithm>
#include <bitset>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <typeinfo>
#include <utility>
#include <vector>

using namespace std;

#define output(x) cout << #x << ": " << (x) << endl;

typedef long long LL;
typedef vector<int> VI;
typedef vector<long long> VL;
typedef vector<double> VD;
typedef vector<string> VS;

const int max_n = 200000 + 10;

int t, n, cost[max_n][3];
vector<int> g[max_n];

int get_min_cost(int v) {
    cost[v][0] = 1;
    cost[v][1] = 2;
    cost[v][2] = 3;
    for (vector<int>::iterator i = g[v].begin(); i != g[v].end(); ++i) {
        get_min_cost(*i);
        cost[v][0] += min(cost[*i][1], cost[*i][2]);
        cost[v][1] += min(cost[*i][0], cost[*i][2]);
        cost[v][2] += min(cost[*i][0], cost[*i][1]);
    }
    return min(min(cost[v][0], cost[v][1]), cost[v][2]);
}

void solve() {
    scanf("%d", &n);
    for (int i = 0; i < n; ++i)
        g[i].clear();
    for (int i = 0; i < n; ++i) {
        int p;
        scanf("%d", &p);
        if (p > 0) {
            g[p - 1].push_back(i);
        }
    }
    printf("Case #%d: %d\n", ++t, get_min_cost(0));
}

int main() {
    freopen("out.txt", "w", stdout);
    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; ++i)
        solve();
    return 0;
}
