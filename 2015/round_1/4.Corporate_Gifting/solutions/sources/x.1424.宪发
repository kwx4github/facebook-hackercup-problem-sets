//#pragma comment(linker,"/STACK:102400000,102400000")
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <climits>
#include <ctime>
#include <numeric>
#include <vector>
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstring>
#include <iomanip>
#include <complex>
#include <deque>
#include <functional>
#include <list>
#include <map>
#include <string>
#include <sstream>
#include <set>
#include <stack>
#include <queue>
using namespace std;
template<class T> inline T sqr(T x) { return x * x; }
typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef pair<int, int> PII;
typedef pair<PII, int> PIII;
typedef pair<LL, LL> PLL;
typedef pair<LL, int> PLI;
typedef pair<LD, LD> PDD;
#define MP make_pair
#define PB push_back
#define sz(x) ((int)(x).size())
#define clr(ar,val) memset(ar, val, sizeof(ar))
#define istr stringstream
#define FOR(i,n) for(int i=0;i<(n);++i)
#define forIt(mp,it) for(__typeof(mp.begin()) it = mp.begin();it!=mp.end();it++)
const int INF = 0x3fffffff;
const double PI = acos(-1.0);

#define lson l,mid,rt<<1
#define rson mid+1,r,rt<<1|1
#define lowbit(u) (u&(-u))

using namespace std;

#define MAXN 200005

vector<int> g[MAXN];
PII dp[MAXN][2];

int deg[MAXN];

void solve(int u,int fa){
	int sz = g[u].size();
	int mx = 0;
	bool leaf = true;
	for(int i = 0;i<sz;i++){
		int v = g[u][i];
		if(v==fa) continue;
		mx = max(dp[v][0].second,mx);
		mx = max(dp[v][1].second,mx);
		leaf = false;
	}
	if(leaf){
		dp[u][0] = MP(1,1);
		dp[u][1] = MP(2,2);
		return;
	}
	dp[u][0] = MP(INF,1);
	dp[u][1] = MP(INF,2);
	for(int i = 1;i<=mx+1;i++){
		int ret = i;
		for(int j = 0;j<sz;j++){
			int v = g[u][j];
			if(v==fa) continue;
			if(dp[v][0].second==i) ret+=dp[v][1].first;
			else ret+=dp[v][0].first;
		}
		if(ret<dp[u][0].first){
			dp[u][1] = dp[u][0];
			dp[u][0] = MP(ret,i);
		}else if(ret<dp[u][1].first){
			dp[u][1] = MP(ret,i);
		}
	}
}

int f[MAXN];

int main(void){
#ifndef ONLINE_JUDGE
	freopen("/Users/mac/Desktop/data.in","r",stdin);
	freopen("/Users/mac/Desktop/data.out","w",stdout);
#endif
	int t;
	scanf("%d",&t);
	while(t--){
		int n;
		scanf("%d",&n);
		memset(deg,0,sizeof(deg));
		FOR(i,n+1) g[i].clear();
		for(int i = 1;i<=n;i++){
			scanf("%d",&f[i]);
			if(i==1) continue;
			g[f[i]].PB(i);
			g[i].PB(f[i]);
		}
		for(int i = n;i>=1;i--) solve(i,f[i]);
		static int ca = 1;
		printf("Case #%d: %d\n",ca++,dp[1][0].first);
	}
	return 0;
}

