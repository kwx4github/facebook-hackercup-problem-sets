//Bismillahir Rahmanir Rahmeem

#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<math.h>
#include<string.h>
#include<map>
#include<queue>
#include<stack>
#include<utility>
#include<stdlib.h>
#include<string>
#include<set>
#include<iomanip>
#define INF 1e9
#define lld long long int
#define clr(a) memset(a,0,sizeof(a))
#define reset(a) memset(a,-1,sizeof(a))
#define act(a) memset(a,1,sizeof(a))
#define setinf(a) memset(a,0b01111111,sizeof(a));
#define FRO freopen("input.txt","r",stdin);
#define FROut freopen("output.txt","w",stdout);
#define ui unsigned int
#define came "came"
#define pii pair<int,int>
#define plii pair<long long int, int>
#define pll pair<long long,long long>
#define pic pair<int,char>
#define ninf (-1e9)-2
#define inf (1e9)+2
#include<fstream>
#include <assert.h>

#define foreach(x) for(__typeof(x.begin()) it=x.begin(); it!=x.end();it++)

using namespace std;
#define pid pair<int,double>
#define pdi pair<double,int>

#define pb push_back
#define mp make_pair
#define pri(x) printf("%d\n",x)
#define pi 3.14159265359
#define X first
#define Y second

vector<int> v[200005];

int memo[200005][8];
int a[200005];

int n;

int dp(int indx, int mask)
{
    if(memo[indx][mask]!=-1)
    {
        return memo[indx][mask];
    }
    else
    {
        int i,j;
        int ms[3]={0},cs[3]={0},l=0;
        for(i=0;i<3;i++)
        {
            if(!(mask & 1<<i))
            {
                cs[l]=i+1;
                ms[l++]=1<<i;
            }
        }

        int ret=1e9;
        int tmp;
        for(j=0;j<l;j++)
        {
            tmp=cs[j];
            for(i=0;i<v[indx].size();i++)
            {
                tmp+=dp(v[indx][i],ms[j]);
            }
            ret=min(tmp,ret);
        }
        return memo[indx][mask]=ret;
    }
}


int main()
{
    FRO
    FROut
    int t,ca;
    scanf("%d",&t);
    int i,j;
    for(ca=1;ca<=t;ca++)
    {
        for(i=1;i<=n;i++)
        {
            v[i].clear();
        }
        scanf("%d",&n);
        for(i=1;i<=n;i++)
        {
            scanf("%d",&a[i]);
            v[a[i]].pb(i);
        }
        //int ans=0;
        reset(memo);
        int ans=dp(1,0);
        printf("Case #%d: %d\n",ca,ans);
    }
    return 0;
}
