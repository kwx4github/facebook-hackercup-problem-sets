//RandomUsername (Nikola Jovanovic)
//Facebook Hacker Cup 2015 Round 1
//D

#include <bits/stdc++.h>
#define MAXN 200005
#define MAXC 65
#define lld long long
using namespace std;

struct node
{
    int parent;
    vector<int> adj;
    int dp[MAXC];
};

int t, n;
node g[MAXN];
int cc = 60;
int ret;
int tp;
int minj;
int k, j;

void DFS(int curr)
{
    //go do kids
    for(j=1; j<=cc; j++)
        g[curr].dp[j] = j;
    for(int i=0; i<g[curr].adj.size(); i++)
    {
        DFS(g[curr].adj[i]);
        for(j=1; j<=cc; j++) //g[curr].dp[j]
        {
            minj = -1;
            for(k=1; k<=cc; k++) //g[nxt].dp[k]
            {
                if(j==k) continue;
                if(minj==-1 || g[ g[curr].adj[i] ].dp[k] < minj)
                    minj = g[ g[curr].adj[i] ].dp[k];
            }
            g[curr].dp[j] += minj;
        }
    }
}

int main()
{
    freopen("corporate_gifting.txt","r",stdin);
    freopen("sol2.txt","w",stdout);
    scanf("%d", &t);
    for(int tt=1; tt<=t; tt++)
    {
        tp = tt;
        scanf("%d",&n);
        for(int i=1; i<=n; i++)
            g[i].adj.clear();
        for(int i=1; i<=n; i++)
        {
            scanf("%d",&g[i].parent);
            g[ g[i].parent ].adj.push_back(i);
        }
        DFS(1);
        ret = -1;
        for(int i=1; i<=cc; i++)
        {
            if(ret==-1 || g[1].dp[i] < ret)
                ret = g[1].dp[i];
        }
        printf("Case #%d: %d\n", tt, ret);
    }
    return 0;
}
