#include <cstdio>
#include <ctime>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <queue>
#include <set>
using namespace std;
#define MP make_pair
#define PB push_back
#define FI first
#define SE second
int tt,t,n,ma;
const int SIZE=2e5+2;
vector<int> dz[SIZE];
int oj[SIZE];
int roz[SIZE];
int opt[SIZE];
int zm[SIZE];
int pom[SIZE];
int k1,k2,p1,p2;
int wyn,prze;
int main(){
	ios_base::sync_with_stdio(false);
	cin>>tt;
	for(t=1;t<=tt;t++){
		cin>>n;
		wyn=0;
		for(int i=0;i<=n;i++)
			dz[i].clear();
		for(int i=1;i<=n;i++){
			roz[i]=0;
			cin>>prze;
			dz[prze].push_back(i);
			oj[i]=prze;
		}
		for(int k=1;k<=n;k++){
			int i=k;
			while(dz[i].size()==roz[i]&&i!=0){
				ma=0;
				for(int j=0;j<dz[i].size();j++){
					int dzie=dz[i][j];
					pom[opt[dzie]]+=zm[dzie];
					ma=max(ma,opt[dzie]);
				}
				k1=k2=SIZE-1;
				p1=p2=0;
				int zera=0;
				int pre=1;
				while(zera<2){
					if(k2>pom[pre]+pre){
						if(k1>pom[pre]+pre){
							p2=p1;
							p1=pre;
							k2=k1;
							k1=pom[pre]+pre;
						}else{
							p2=pre;
							k2=pom[pre]+pre;
						}
					}
					if(pom[pre]==0)
						zera++;
					pre++;
				}
				wyn+=k1;
				opt[i]=p1;
				zm[i]=k2-k1;
				//cout<<"pracownik: "<<i<<" kosztuje: "<<k1<<" daje: "<<p1<<" koszt zmiany: "<<zm[i]<<endl;
				for(int j=0;j<=ma;j++)
					pom[j]=0;
				roz[oj[i]]++;
				roz[i]=-1;
				i=oj[i];
			}
		}
		cout<<"Case #"<<t<<": "<<wyn<<"\n";
	}
	
	
}
