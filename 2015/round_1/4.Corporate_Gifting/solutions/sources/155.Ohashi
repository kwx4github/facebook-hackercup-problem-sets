#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <cstdlib>

using namespace std;
typedef int li;
#define rep(i, n) for(li i = 0; i < (li)(n); ++i)

const int max_n = 2e5;
const int k = 40;
const int inf = 1 << 30;
vector<int> cs[max_n];

int memo[max_n][k];
int rec(int pos, int v) {
    int& ans = memo[pos][v];
    if (ans != -1) return ans;
    ans = v + 1;
    rep(i, cs[pos].size()) {
        int cost = inf;
        rep(nv, k) if (nv != v) {
            cost = min(cost, rec(cs[pos][i], nv));
        }
        ans += cost;
    }
    return ans;
}

void solve() {
    rep(i, max_n) cs[i].clear();
    int n; cin >> n;

    rep(i, n) {
        int p;
        cin >> p;
        p--;
        if (p != -1) {
            cs[p].push_back(i);
        }
    }
    memset(memo, -1, sizeof(memo));
    int ans = inf;
    rep(i, k) ans = min(ans, rec(0, i));
    cout << ans << endl;
}

int main () {
    int t; cin >> t;
    rep(i, t) {
        cout << "Case #" << i + 1 << ": ";
        solve();

    }
    return 0;
}
