#include <cstdio>
#include <vector>
#include <tuple>
#include <map>

using namespace std;

#define MAX_NODES 200009

vector<int>children[MAX_NODES];

typedef long long int lli;

tuple<lli,int,lli> dfs(int n){
	//return value is (cheapest, cheapest_for, second_cheapest)
	map<int,lli>mp;
	lli sum=0;
	int mx=0;
	for(int i=0;i<children[n].size();i++){
		auto res=dfs(children[n][i]);
		sum+=get<0>(res);
		mp[get<1>(res)]+=get<2>(res);
		mx=max(mx,get<1>(res));
	}
	mx++;
	lli mn=5e12;
	lli mn2=5e12;
	int what=-1;
	for(int i=1;i<=mx;i++){
		if(mn>=sum+i+mp[i]){
			mn2=mn;
			mn=sum+i+mp[i];
			what=i;
		}
	}
	return make_tuple(mn,what,mn2);
}

int main(){
	int t;
	scanf("%d",&t);
	for(int tc=1;tc<=t;tc++){
		printf("Case #%d: ",tc);
		int n;
		scanf("%d",&n);
		for(int i=0;i<n;i++){
			children[i].clear();
		}
		int trash;
		scanf("%d",&trash);
		for(int i=0;i<n-1;i++){
			int mngr;
			scanf("%d",&mngr);
			children[mngr-1].push_back(i+1);
		}
		auto res=dfs(0);
		printf("%lld\n",get<0>(res));
	}
}
