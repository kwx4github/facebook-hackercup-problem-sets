//Fruit of Light
//FoL CC
//Apple Strawberry

#include<cstdio>
#include<algorithm>
#include<vector>
#include<cstring>
#include<set>
#include<iostream>
#include<queue>

using namespace std;

#define For(i, n) for(int i = 0; i<(n); ++i)
#define ForEach(it, i) for(typeof i.begin() it = i.begin(); it!=i.end(); ++it)
#define eps 1e-9
#define MAGIC 23
#define INF 1023456789

typedef long long ll;
typedef pair<int, int> pii;

int n;
vector<int> E[200047];
int S[25][200047];

int solve(int v, int m) {
    if (S[m][v] >= 0) return S[m][v];
    int s = m+1;
    for(auto x : E[v]) {
        int best = INF;
        For(i, MAGIC) if (i!=m) best = min(best, solve(x,i));
        s += best;
    }
    return S[m][v] = s;
}


int extra(){
    scanf("%d",&n);
    For(i, MAGIC) For(j, n) S[i][j] = -1;
    For(i, n) E[i].clear();

    For(i, n) {
        int a;
        scanf("%d", &a); a--;
        if (i>0) E[a].push_back(i);
    }
    int best = INF;
    For(i, MAGIC) 
        best = min(best, solve(0, i));
    printf("%d\n", best);
}

int main(){
    int T;
    scanf("%d",&T);
    For(i,T){
        printf("Case #%d: ",i+1);
        extra();
    }
}
