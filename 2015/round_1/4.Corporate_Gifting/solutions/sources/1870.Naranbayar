#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<sstream>
#include<string>
#include<cstring>
#include<queue>
#include<set>
#include<map>
#include<vector>
#include<cmath>

using namespace std;

vector<int> G[200005];
int n;
int a[200005][12];
int mx;

int Rec(int parent, int val_parent, int v)
{
    int p=n*20;
    for(int i=1; i<=20; i++)
    {
        if(i==val_parent) continue;
        int s=0;
        for(int j=0; j<G[v].size(); j++)
        {
            int u=G[v][j];
            if(u!=parent)
            {
              if(a[u][i]==-1) a[u][i]=Rec(v,i,u);
              s+=a[u][i];
            }
        }
        if(s+i<p) { p=s+i; mx=max(mx,i); }
    }
    return p;
}

int main()
{
    freopen("corporate_gifting.txt","r",stdin);
    freopen("exam9.txt","w",stdout);

    int T;
    scanf("%d",&T);
    for(int t=1; t<=T; t++)
    {
        int x,y;
        scanf("%d",&n);
        for(int i=1; i<=n; i++)
            G[i].clear();
        memset(a,-1,sizeof(a));
        for(int i=1; i<=n; i++)
        {
            scanf("%d",&x);
            if(x==0) continue;
            G[i].push_back(x);
            G[x].push_back(i);
        }

        mx=0;
        int ans=Rec(-1,-1,1);
        printf("Case #%d: %d\n",t,ans);
    }
    return 0;
}
