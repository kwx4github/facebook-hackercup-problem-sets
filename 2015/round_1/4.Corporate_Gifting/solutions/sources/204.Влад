#if 1
#include <functional>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <sstream>
#include <numeric>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <list>
 
using namespace std;
 
typedef long long LL;
typedef long double LD;
typedef pair<int, int> pii;
 
const LD eps = 1e-9;
const LD pi = acos(-1.0);
const LL inf = 1e+9;
 
#define mp make_pair
#define pb push_back
#define X first
#define Y second
 
#define dbg(x) { cerr << #x << " = " << x << endl; }
 
// extended template
#pragma comment(linker, "/STACK:36777216")
typedef vector<int> vi;
typedef vector<vi> vvi;
 
#define forn(i, n) for (int i = 0; i < n; ++i)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
 
template<typename T> istream & operator >> (istream &, vector<T> &);
template<typename T> ostream & operator << (ostream &, const vector<T> &);
 
#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;
 
#define NAME "task"
typedef pair<pair<LL, int>, LL> twoMin;

void updMin(twoMin & cur, const pair<LL, int> & a)
{	
	if (cur.X.X > a.X)
	{
		cur.Y = cur.X.X;
		cur.X = a;
	}
	else
	{
		if (cur.Y > a.X)
			cur.Y = a.X;
	}
}

#include <unordered_map>
vector <vector<int> > g;

twoMin dfs(int v)
{	
	vector <twoMin> tmp;
	unordered_map<int, LL> sp;
	LL sum = 0;
	for (int i = 0; i < g[v].size(); i++)
	{
		int to = g[v][i];
		twoMin val = dfs(to);
		tmp.pb(val);
		int u = val.X.Y;
		sp[u] += val.Y - val.X.X;
		sum += val.X.X;
	}
	twoMin res = mp(mp(LL(inf) * inf, inf), LL(inf) * inf);
	int cnt = 0;
	for (int i = 1; cnt < 2; i++)
	{
		if (!sp.count(i))
		{
			cnt++;
			updMin(res, mp(sum + i, i));
		}
	}
	for (unordered_map<int, LL>::const_iterator i = sp.begin(); i != sp.end(); i++)
		updMin(res, mp(sum + i->Y + i->X, i->X));

	return res;
}

void gen()
{
	srand(67);
	freopen("input.txt", "w", stdout);
	cout << 1 << endl;
	int n = 10;
	cout << n << endl;
	for (int i = 0; i < n; i++)
	{
		int v = rand() % (i + 1);
		if (v == 0 && i != 0)
			v++;
		cout << v << " ";
	}
	cout << endl;
}
void solve()
{
	//gen();return;
	int t;
	scanf("%d", &t);
	for (int q = 0; q < t; q++)
	{
		cerr << q << endl;
		int n;
		scanf("%d", &n);

		g.clear();
		g.resize(n);
		for (int i = 0; i < n; i++)
		{
			int p;
			scanf("%d", &p);
			if (i == 0)
				continue;
			p--;
			g[p].pb(i);
		}

		twoMin ans = dfs(0);

		cout << "Case #" << q + 1 << ": " << ans.X.X << endl;
	}

}
 
int main()
{
    START
    //freopen(NAME ".in", "r", stdin); freopen(NAME ".out", "w", stdout);
    freopen("input.txt", "r", stdin);  freopen("output.txt", "w", stdout);
    solve();
 
    END
    return 0;
}
/*******************************************
*******************************************/
 
template<typename T> istream & operator >> (istream &is, vector<T> &v)
{
    forn(i, v.size())
        is >> v[i];
    return is;
}
template<typename T> ostream & operator << (ostream &os, const vector<T> &v)
{
    forn(i, v.size())
        os << v[i] << " ";
    return os;
}
#endif