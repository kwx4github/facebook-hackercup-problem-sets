#include<cstdio>
#include<string.h>
#include<iostream>
#include<vector>
#include<iostream>
#include<set>
#include<map>
#include<string>
#include<stdio.h>
#include<sstream>
#include<algorithm>
#include<queue>
#include<cmath>
#include<string.h>
using namespace std ;
#define INF (int)1e9
#define MAXN 200002
vector<int> c[MAXN] ;
int memo[MAXN][22] ;
int solve(int k, int pgift) {
  int ret = 0 ;
  if (memo[k][pgift] != -1) return memo[k][pgift] ;
  for (int i = 0;i < c[k].size();i++) {
    int mn = INF ;
    for (int j = 1;j <= 20;j++) if (j != pgift)
     mn = min(mn, j + solve(c[k][i], j)) ;
    ret += mn ;
  }
  return memo[k][pgift] = ret ;
}

int main() {
 int runs ;
 cin >> runs ;
 for (int t = 1;t <= runs;t++) {
   for (int i = 0;i < MAXN;i++) c[i].clear() ;
   int n ;
   cin >> n ;
   for (int i = 0;i < n;i++) {
     int p ;
     cin >> p ;
     c[p].push_back(i + 1) ;
   }
  memset(memo, 255, sizeof memo) ;
  for (int i = 0;i < 50;i++)
   for (int j = 0;j < 20;j++)
    solve(rand() % n, j) ;
  int ret = INF ;
  for (int i = 1;i <= 20;i++) ret = min(ret, i + solve(1, i)) ;
  printf("Case #%d: %d\n", t, ret) ;
 }
 return 0 ;
}
