/*krypto..............................jagsxii... !! */
#include<bits/stdc++.h>

using namespace std;
vector<vector<int> > g;
int build[200100][110],t,n,res;
vector<int> L, R;
stack<int> st;
map<int,int> mp;
void dfs(int );

int main()
{

freopen("corporate_gifting.txt", "r", stdin);freopen("out_corp.txt", "w", stdout);
    scanf("%d", &t);
    for (int i = 1; i <= t; ++i)
    {
        res = 1000000007;
        scanf("%d", &n);
        g.clear();
        g.resize(n + 5);
        mp.clear();
        for (int i = 1; i <= n; ++i) {
            int x; 
            
            scanf("%d", &x);
            g[x].push_back(i);
        }
        dfs(1);
        for (int i = 1; i < 102; ++i) {
            res = min(res, build[1][i]);
        }
        printf("Case #%d: %d\n", i, res);
    }
    return 0;
}
void dfs(int W)
{
    st.push(W);
    while(!st.empty())
    {
        int v=st.top();
        if (mp[v])
        {
            for (int i = 0; i < g[v].size(); ++i)
        {
            int to = g[v][i];
            L.assign(110, 1000000007);
            R.assign(110, 1000000007);
            for (int j = 1; j < 102; ++j)
            {
                L[j] = min(L[j - 1], build[to][j]);
            }
            for (int j = 101; j >= 1; --j)
            {
                R[j] = min(R[j + 1], build[to][j]);
            }
            for (int j = 1; j < 102; ++j)
            {
                int mn = min(L[j - 1], R[j + 1]);
                build[v][j] += mn;
            }
        }
st.pop();

continue;
}

        for (int i = 1; i < 102; ++i)
        {
            build[v][i] = i;
        }
        stack<int> y;
        for (int i = 0; i < g[v].size(); ++i)
        {
            int to = g[v][i];
            y.push(to);
        }
        while(!y.empty()) st.push(y.top()),y.pop();
        mp[v]=1;
    }
}

