#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <map>
#include <queue>
#include <tuple>
#include <algorithm>
#include <cstdint>
#include <cstdio>
using namespace std;

const int maxn = 30;

int solve(int cur, int pv, int par,
		  const vector<vector<int>> &g,
		  vector<vector<int>> &tbl) {
	int &ret = tbl[pv][cur];
	if (ret >= 0) return ret;

	ret = 0x7fffffff;
	for (int i = 1; i <= maxn; i++) {
		if (i == pv) continue;
		int val = i;
		for (auto& c : g[cur]) {
			val += solve(c, i, cur, g, tbl);
		}
		ret = min(ret, val);
	}
	return ret;
}

int main() {
	int cases; cin >> cases;
	for (int cn = 1; cn <= cases; cn++) {
		int n; cin >> n;
		vector<vector<int>> tbl(maxn + 1, vector<int>(n, -1));
		vector<vector<int>> g(n);
		for (int i = 0; i < n; i++) {
			int t; cin >> t;
			t--;
			if (t >= 0) {
				g[t].push_back(i);
			}
		}

		int ans = solve(0, 0, -1, g, tbl);

		cout << "Case #" << cn << ": " << ans << endl;
		cout << flush;
	}

	return 0;
}
