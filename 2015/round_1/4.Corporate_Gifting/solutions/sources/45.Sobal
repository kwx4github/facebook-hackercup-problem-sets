#pragma comment(linker, "/STACK:999777216")


#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <cstdlib>
#include <string>
#include <string.h>
#include <vector>
#include <fstream>
#include <time.h>
#include <bitset>

using namespace std;

#define ll long long
#define ld long double
#define mp make_pair
#define pb push_back
#define y0 askjdfghjksdf
#define y1 askldjfahsd
#define fst first
#define snd second

const int maxn = 200003;

vector < int > g[maxn];
int f[2][maxn], num[maxn];
int tmp[maxn];

void dfs(int v)
{
	int maxnum = 0;
	int all = 0;
	for (int i = 0; i < g[v].size(); i++)
	{
		int to = g[v][i];
		dfs(g[v][i]);
		maxnum = max(maxnum, num[to]);
		all += f[0][to];
	}
	maxnum += 2;
	for (int i = 1; i <= maxnum; i++)
		tmp[i] = 0;
	for (int i = 0; i < g[v].size(); i++)
	{
		int to = g[v][i];
		tmp[num[to]] += f[1][to] - f[0][to];
	}
	num[v] = f[0][v] = f[1][v] = -1;
	for (int i = 1; i <= maxnum; i++)
	{
		int nvalue = i + all + tmp[i];
		if (num[v] == -1 || f[0][v] > nvalue)
		{
			f[1][v] = f[0][v];
			f[0][v] = nvalue;
			num[v] = i;
		}
		else if (f[1][v] == -1 || f[1][v] > nvalue)
		{
			f[1][v] = nvalue;
		}
	}
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int T;
	scanf("%d", &T);
	for (int test = 1; test <= T; test++)
	{
		int n;
		scanf("%d", &n);
		for (int i = 1; i <= n; i++)
			g[i].clear();
		for (int i = 1; i <= n; i++)
		{
			int x;
			scanf("%d", &x);
			g[x].pb(i);
		}
		dfs(1);
		printf("Case #%d: %d\n", test, f[0][1]);
	}
	return 0;
}