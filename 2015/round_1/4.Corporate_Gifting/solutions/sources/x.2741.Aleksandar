#include <bits/stdc++.h>

using namespace std;

typedef long long int lld;

const int SIZE = 1 << 18;
vector < int > E[1 << 18];
set < int > S[1 << 18];

lld Sol = 0LL;

void DFS ( int curr, int parent )
{
    if ( E[curr].empty ( ) )
    {
        Sol++;
        if ( parent != -1 )
        {
            S[parent].insert ( 1 );
        }
        return;
    }
    for ( auto it: E[curr] )
    {
        if ( it != parent )
        {
            DFS ( it, curr );
        }
    }
    int add = 1;
    for ( auto it: S[curr] )
    {
        if ( it != add ) break;
        add++;
    }
    Sol += add;
    if ( parent != -1 )
    {
        S[parent].insert ( add );
    }
}

int main()
{
	freopen("D:\corporate_gifting.txt", "r", stdin);
	freopen("D:\corporate_gifting_output.txt", "w", stdout);
	int T, N;
	cin >> T;
	for (int i = 0; i < T; i++)
	{
		cin >> N;

	    for ( int i = 0; i < N; i++ ) E[i].clear ( );
        for ( int i = 0; i < N; i++ ) S[i].clear ( );

		for ( int i = 0; i < N; i++ )
        {
            int id;
            cin >> id;
            id--;
            if ( id >= 0 )
            {
                E[id].emplace_back ( i );
            }
        }

        Sol = 0LL;
        DFS ( 0, -1 );
		cout << "Case #" << i + 1 << ": " << Sol << endl;
	}

	return 0;
}
