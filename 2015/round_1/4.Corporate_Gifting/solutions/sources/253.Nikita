
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

const int maxn = 200000 + 1000;
const int maxk = 20;

int n;
int d[maxn][maxk];
int best[maxn][2];

bool vis[maxn];

vector < vector<int> > g;

void dfs(int v)
{
	vis[v] = true;

	int sz = g[v].size();
	for (int i = 0; i < sz; ++i)
	{
		int to = g[v][i];
		dfs(to);
	}

	for (int k = 0; k < maxk; ++k)
	{
		d[v][k] = k + 1;
		for (int i = 0; i < sz; ++i)
		{
			int to = g[v][i];
			if (best[to][0] == d[to][k])
				d[v][k] += best[to][1];
			else
				d[v][k] += best[to][0];
		}
	}


	best[v][0] = best[v][1] = -1;
	for (int k = 0; k < maxk; ++k)
	{
		if (best[v][0] == -1 || d[v][k] < best[v][0])
		{
			best[v][1] = best[v][0];
			best[v][0] = d[v][k];
		}
		else if (best[v][1] == -1 || d[v][k] < best[v][1])
		{
			best[v][1] = d[v][k];
		}
	}
}


void solve()
{
	memset(vis, false, sizeof(vis));
	g.clear();

	cin >> n;
	g.resize(n);

	for (int i = 0; i < n; ++i)
	{
		int p;
		cin >> p;
		if (p == 0)
			continue;
		--p;
		g[p].push_back(i);
	}

	dfs(0);

	int ans = d[0][0];
	for (int i = 1; i < maxk; ++i)
		if (d[0][i] < ans)
			ans = d[0][i];

	cout << ans << "\n";
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	ios::sync_with_stdio(false);

	int T;
	cin >> T;
	for (int test = 0; test < T; ++test)
	{
		cout << "Case #" << test + 1 << ": ";
		solve();
	}


	return 0;
}