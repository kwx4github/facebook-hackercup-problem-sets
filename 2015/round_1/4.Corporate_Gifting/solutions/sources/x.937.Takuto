#include <bits/stdc++.h>
#include <iostream>
#include <vector>
#include <queue>
#include <string>
#include <cstring>
#include <sstream>
#include <set>
#include <map>
#include <algorithm>
#include <cstdio>
#include <cstdlib>

#define rep(i,n) for(int i=0;i<(int)(n);++i)
#define iter(a) __typeof(a.begin())
#define FOR(it,a) for(iter(a)it=a.begin();it!=a.end();++it)
#define F first
#define S second
#define SZ(a) (int)((a).size())
#define sz(a) SZ(a)
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define ALL(a) (a).begin(),(a).end()
using namespace std;

typedef long long ll;
typedef pair<int,int> PI;
typedef unsigned long long ull;

#define PR(...) do{cerr << "line : " << __LINE__ << endl; pr(#__VA_ARGS__, __VA_ARGS__);}while(0);
template<class T>
void pr(const string& name, T t){
  cerr << name << ": " << t << endl;
}

template<typename T, typename ... Types>
void pr(const string& names, T t, Types ... rest) {
  auto comma_pos = names.find(',');
  cerr << names.substr(0, comma_pos) << ": " << t << ", ";
  auto next_name_pos = names.find_first_not_of(" \t\n", comma_pos + 1);
  pr(string(names, next_name_pos), rest ...);
}

template<class T,class U> ostream& operator<< (ostream& o, const pair<T,U>& v){return o << "(" << v.F << ", " << v.S << ")";}
template<class T> ostream& operator<< (ostream& o, const vector<T>& v){o << "{";rep(i,SZ(v)) o << (i?", ":"") << v[i];return o << "}";}
template<class T> string to_s(const T& v){ostringstream is;is << v;return is.str();}
//                 <  ^  >  V
const int dx[] = { 0,-1, 0, 1};
const int dy[] = {-1, 0, 1, 0};
#define endl '\n'

const int MAX_N = 2e5 + 100;
const int GIFT = 10;
int dp[MAX_N][GIFT];
vector<int> G[MAX_N];

int rec(int d,int pv){
  if(dp[d][pv] >= 0)
    return dp[d][pv];
  int& ret = dp[d][pv] = 1e8;
  rep(i, GIFT){
    if(i == pv) continue;
    int tret = i + 1;
    for(auto e : G[d]) tret += rec(e, i);
    ret = min(ret, tret);
  }
  return ret;
}

int main(int argc, char *argv[])
{
  int t;
  cin >> t;
  rep(ttt,t){
    int n;
    cin >> n;
    rep(i,MAX_N) G[i].clear();
    rep(i,n){
      int a;
      cin >> a;
      if(i){
        --a;
        G[a].pb(i);
      }
    }
    int ans = 1e9;
    memset(dp, -1, sizeof(dp));
    rep(i,GIFT) ans = min(ans, rec(0,i));
    printf("Case #%d: %d\n", ttt+1, ans);
  }
  return 0;
}

