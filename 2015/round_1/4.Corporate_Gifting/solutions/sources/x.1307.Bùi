#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cstring>
#include <fstream>
#include <ctime>
#include <iomanip>
#define LL long long
#define ULL unsigned long long
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define FO(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define FOD(i,a,b) for(int i=a;i>b;i--)
#define FORV(i,a) for(typeof(a.begin()) i = a.begin(); i != a.end(); i++)
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define debug cout << "YES" << endl

using namespace std;

typedef pair<int,int>II;
typedef pair<int,II>PII;
template<class T> T gcd(T a, T b) {T r; while(b!=0) {r=a%b;a=b;b=r;} return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }

const double PI = 2*acos(0.0);
const long double eps = 1e-12;
const int infi = 1e9;
const LL Linfi = (LL) 9e18;
const LL MOD = 1000000007;
#define maxn 200005


int n, u, v;
vector<int> adj[maxn], V[maxn];
int F[5][maxn], xet[maxn], isLeave[maxn], parent[maxn];
int height[maxn];

void DFS(int u){
    xet[u] = 1;
    FO(i,0,adj[u].size()){
        int v = adj[u][i];
        if(xet[v] == 0) DFS(v);
    }

    if(adj[u].size() == 0){
        FOR(k,1,3) F[k][u] = k;
    }
    else{
        FOR(k,1,3){
            FO(i,0,adj[u].size()){
                int v = adj[u][i];
                int tmp = infi;
                FOR(h,1,3) if(h != k) tmp = min(tmp, F[h][v]);
                F[k][u] += tmp;
            }
            F[k][u] += k;
        }
    }
}

void dequy(){
    stack<int> S;
    S.push(1); height[1] = 1;
    V[1].pb(1);
    while(!S.empty()){
        int u = S.top(); S.pop(); //cout << u << " " << height[u] << endl;
        xet[u] = 1;
        FO(i,0,adj[u].size()){
            int v = adj[u][i];
            if(xet[v] == 0) {
                height[v] = height[u] + 1;
                V[height[v]].pb(v);
                isLeave[u] = 0;
                parent[v] = u;
                S.push(v);
            }
        }
    }
}

void solve(){
    memset(F, 0, sizeof(F));
    memset(xet,0,sizeof(xet));
    memset(height, 0, sizeof(height));
    memset(parent, -1, sizeof(parent));
    memset(isLeave, -1, sizeof(isLeave));
    FOR(i,1,n) V[i].clear();

    dequy();
    FORD(i,n,1){
        FO(j,0,V[i].size()){
            int u = V[i][j];
            if(isLeave[u] == -1) { //cout << u << endl;
                FOR(k,1,3) F[k][u] += k;
            }
            else{
                FO(x, 0, adj[u].size()){
                    int v = adj[u][x];
                    F[1][u] += min(F[2][v], F[3][v]);
                    F[2][u] += min(F[3][v], F[1][v]);
                    F[3][u] += min(F[1][v], F[2][v]);
                }
                FOR(k,1,3) F[k][u] += k;
            }
        }
    }
//
    int ans = infi;
    FOR(k,1,3) ans = min(ans, F[k][1]);
    cout << ans << endl;
//    FOR(i,1,3){
//        FOR(j,1,n) cout << F[i][j] <<  " "; cout << endl;
//    }
}

int main(){
    ios::sync_with_stdio(false);
    #ifndef ONLINE_JUDGE
    freopen("test.inp","r",stdin);
    freopen("test.out","w",stdout);
    #endif
    int sotest, x;
    cin >> sotest;
    FOR(test, 1, sotest){
        cin >> n;
        FOR(i,1,n) adj[i].clear();
        FOR(i,1,n){
            cin >> x;
            if(x > 0){ //cout << i << " " << x << endl;
                adj[x].pb(i);
                //adj[i].pb(x);
            }
        }

        cout << "Case #" << test << ": ";
        solve();
    }


    return 0;
}
