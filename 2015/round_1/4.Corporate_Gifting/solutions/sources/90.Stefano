#include <bits/stdc++.h>

using namespace std;

typedef long long     LL;
typedef pair<int,int> pii;

double PI  = acos(-1);
double EPS = 1e-7;
int INF    = 1000000000;
LL INFLL   = 1000000000000000000LL;

#define fi            first
#define se            second
#define mp            make_pair
#define pb            push_back

#define input(in)     freopen(in,"r",stdin)
#define output(out)   freopen(out,"w",stdout)

#define MIN(a, b)     (a) = min((a), (b))
#define MAX(a, b)     (a) = max((a), (b))

#define RESET(a, b)   memset(a,b,sizeof(a))
#define ALL(a)        (a).begin(), (a).end()
#define SIZE(a)       (int)a.size()
#define SORT(a)       sort(ALL(a))
#define UNIQUE(a)     (a).erase( unique( ALL(a) ), (a).end() )
#define FOR(a, b, c)  for (int (a)=(b); (a)<=(c); (a)++)
#define FORD(a, b, c) for (int (a)=(b); (a)>=(c); (a)--)
#define FORIT(a, b)   for (__typeof((b).begin()) a=(b).begin(); a!=(b).end(); a++)

int mx[8] = {-1,1,0,0,-1,-1,1,1};
int my[8] = {0,0,-1,1,-1,1,-1,1};

// ----- //

int x[200005];
vector<int> adj[200005];
int n;
pair<int,long long> best1[200005];
pair<int,long long> best2[200005];
// fi -> position
// se -> value

void dfs(int u)
{
	vector<pair<int,long long> > lol;
	long long current = 0;
	FOR(a,0,SIZE(adj[u])-1)
	{
		int v = adj[u][a];
		dfs(v);
		current += best1[v].se;
		lol.pb(mp(best1[v].fi,best2[v].se-best1[v].se));
	}
	sort(ALL(lol));
	FORD(a,2*SIZE(adj[u])+2,1)
	{
		long long best = current+a; 
		while(!lol.empty() && a < lol.back().fi) lol.pop_back();
		while(!lol.empty() && a == lol.back().fi) {
			best += lol.back().se;
			lol.pop_back();
		}
		if (best1[u].se > best)
		{
			best2[u] = best1[u];
			best1[u] = mp(a,best);
		}
		else if (best2[u].se > best)
		{
			best2[u] = mp(a,best);
		}
	}
}

int main()
{
	int tc,T=0;
	scanf("%d",&tc);
	while(tc--)
	{	
		scanf("%d",&n);
		FOR(a,1,n)
		{
			adj[a].clear();
			best1[a] = mp(0,INFLL);
			best2[a] = mp(0,INFLL);
		}
		FOR(a,1,n)
		{
			scanf("%d",&x[a]);
			adj[x[a]].pb(a);
		}
		dfs(1);
		T++;
		printf("Case #%d: %lld\n",T,best1[1].se);
	}
}
