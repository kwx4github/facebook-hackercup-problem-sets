#include<iostream>
#include<cmath>
#include<string.h>
#include<stdio.h>
#pragma comment(linker, "/STACK:1024000000,1024000000")
using namespace std;

struct node{
       int next;
       int num;
       };

node e[400001];
int taile;
int edge[400001];

long long INF=1ll<<60ll;
long long dp[400001][22];

long long mi1[400001][22];
long long mi2[400001][22];
long long ans;
int n,t;


void add_edge(int from,int to)
{
    e[taile].num=to;
    e[taile].next=edge[from];
    edge[from]=taile;
    taile++;
    return ;
}


void DFS(int now)
{
    int i,j;
    long long temp;
    
    for(i=edge[now];i!=-1;i=e[i].next)
    {
        DFS(e[i].num);
    }
    
    for(i=1;i<=20;i++)
    {
        temp=i;
        for(j=edge[now];j!=-1;j=e[j].next)
        {
            temp+=min(mi1[e[j].num][i-1],mi2[e[j].num][i+1]);
        }
        
        dp[now][i]=temp;
    }
    
    mi1[now][0]=INF;
    for(i=1;i<=20;i++)
    {
       mi1[now][i]=min(mi1[now][i-1],dp[now][i]);
    }
    
    mi2[now][21]=INF;
    
    for(i=20;i>=1;i--)
    {
       mi2[now][i]=min(mi2[now][i+1],dp[now][i]);
    }
    
    return ;
}



int main()
{
    int i,j,k,times;
    int xx;
    
    freopen("corporate_gifting.txt","r",stdin);
    freopen("ans.out","w",stdout);
    
    
    scanf("%d",&t);
    for(times=1;times<=t;times++)
    {
        scanf("%d",&n);
        taile=1;
        memset(edge,-1,sizeof(edge));
        for(i=1;i<=n;i++)
        {
            scanf("%d",&xx);
            if(xx!=0)
            {
                add_edge(xx,i);
            }
        }
        
        
        DFS(1);
        
        ans=INF;
        for(i=1;i<=20;i++)
        {
            ans=min(ans,dp[1][i]);
        }
        
        printf("Case #%d: %I64d\n",times,ans);
    }
    
    
    return 0;
}
