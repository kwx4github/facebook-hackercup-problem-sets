#include<cstdio>
#include<iostream>
#include<sstream>
#include<cmath>
#include<algorithm>
#include<map>
#include<set>
#include<list>
#include<vector>
#include<stack>
#include<queue>
#include<string>
#include<iomanip>
#include<fstream>
#include<ctime>
using namespace std;
typedef vector<int> VI;
typedef pair <int,int> ii;
typedef long long LL;
#define pb push_back
const int INF = 2147483647;
const int N = 200005;

int z,n,r[N], o[N],d,k,i,res,q,dz[N];
set<int> zb2;
VI graf[N];
queue<int> kol;

int main() {
scanf("%d",&z);
for (q=1;q<=z;q++) {
	scanf("%d",&n);
	for (i=0;i<=n;i++) {
		r[i] = -1;
		graf[i].resize(0);
		dz[i] = 0;
	}
	o[0] = -1;
	for (i=1;i<=n;i++) {
		scanf("%d",&o[i]);
		graf[o[i]].pb(i);
		dz[o[i]]++;
	}
	while (!kol.empty()) kol.pop();
	for (i=1;i<=n;i++) if (graf[i].size() == 0) {
		kol.push(i);
	}
	while (kol.size() > 0) {
		d = kol.front();
		kol.pop();
		if (d == 0) continue;
		zb2.clear();
		for (i=0;i<graf[d].size();i++) {
			zb2.insert(r[graf[d][i]]);
		}
		for (k=1;zb2.find(k) != zb2.end();k++);
		r[d] = k;
		//printf("%d %d\n",d,k);
		dz[o[d]]--;
		if (dz[o[d]] == 0) {
			kol.push(o[d]);
		}
	}
	res = 0;
	for (i=1;i<=n;i++) res+=r[i];
	printf("Case #%d: %d\n", q, res);
}
return 0;
}

