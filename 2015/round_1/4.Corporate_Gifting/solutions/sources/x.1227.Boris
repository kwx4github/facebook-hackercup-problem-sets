import java.io.*;
import java.util.*;
import java.math.*;


public class Main implements Runnable {
	static BufferedReader in;
	static PrintWriter out;
	static StringTokenizer tok;

	static ArrayList<Integer>[] a;
	static int[][] dp;
	static int k;
	
	static void solve() throws Exception {
		int t = nextInt();
		for (int tt = 1; tt <= t; ++tt) {
			int n = nextInt();
			a = new ArrayList[n + 1];
			for (int i = 0; i <= n; ++i) {
				a[i] = new ArrayList<Integer>();
			}
			for (int i = 1; i <= n; ++i) {
				a[nextInt()].add(i);
			}
			k = Math.min(5, n);
			dp = new int[n + 1][k + 1];
			dfs(1);
			int res = Integer.MAX_VALUE;
			for (int j = 1; j <= k; ++j) {
				res = Math.min(dp[1][j], res);
			}
			out.println("Case #" + tt + ": "+ res);
		}
	}
	
	static void dfs(int x) {
		for (int i = 0; i < a[x].size(); ++i) {
			dfs(a[x].get(i));
		}
		for (int j = 1; j <= k; ++j) {
			dp[x][j] = j;
			for	(int i = 0; i < a[x].size(); ++i) {
				int minV = Integer.MAX_VALUE;
				for (int j2 = 1; j2 <= k; ++j2) {
					if (j != j2) {
						minV = Math.min(dp[a[x].get(i)][j2], minV);
					}
				}
				dp[x][j] += minV;
			}			
		}
	}
	
	static int nextInt() throws IOException {
		return Integer.parseInt(next());
	}

	static long nextLong() throws IOException {
		return Long.parseLong(next());
	}

	static double nextDouble() throws IOException {
		return Double.parseDouble(next());
	}

	static BigInteger nextBigInteger() throws IOException {
		return new BigInteger(next());
	}
	
	static String next() throws IOException {
		while (tok == null || !tok.hasMoreTokens()) {
			tok = new StringTokenizer(in.readLine());
		}
		return tok.nextToken();
	}
	
	static String nextLine() throws IOException {
		tok = new StringTokenizer("");
		return in.readLine();
	}

	static boolean hasNext() throws IOException {
		while (tok == null || !tok.hasMoreTokens()) {
			String s = in.readLine();
			if (s == null) {
				return false;
			}
			tok = new StringTokenizer(s);
		}
		return true;
	}
	
	public static void main(String args[]) {
		new Thread(null, new Main(), "Main", 1 << 28).start();
	}
	
	public void run() {
		try {
			//in = new BufferedReader(new InputStreamReader(System.in));
			//out = new PrintWriter(new OutputStreamWriter(System.out));
			in = new BufferedReader(new FileReader("input.in"));
			out = new PrintWriter(new FileWriter("output.out"));
			solve();
			in.close();
			out.close();
		} catch (Throwable e) {
			e.printStackTrace();
			java.lang.System.exit(1);
		}
	}
}