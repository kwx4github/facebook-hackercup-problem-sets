// Author: Harhro94 [Harutyunyan Hrayr]
#pragma comment(linker, "/STACK:666777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define FOR(i, n) for (int i = 0; i < (n); ++i)
typedef pair<int, int> pii;
typedef long long LL;
typedef long double LD;
#define pb push_back
#define mp make_pair
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

const int N = 200007;
int n, par[N], dp[4][N];
vector<int> G[N];

void dfs(int u) {

   for (int to : G[u]) {
      dfs(to);
   }

   for (int c = 1; c <= 3; ++c) {
      
      int a = 1, b = 2;
      if (a == c) a = 3;
      if (b == c) b = 3;

      for (int to : G[u]) {
         dp[c][u] += min(dp[a][to], dp[b][to]);
      }

      dp[c][u] += c;
   }
}

void solve() {

   int T;
   scanf("%d", &T);
   for (int test = 1; test <= T; ++test) {

      scanf("%d", &n);

      for (int i = 1; i <= n; ++i) G[i].clear();
      for (int i = 1; i <= n; ++i) dp[1][i] = dp[2][i] = dp[3][i] = 0;

      for (int i = 1; i <= n; ++i) {
         scanf("%d", &par[i]);
         G[par[i]].pb(i);
      }

      dfs(1);
      int ans = min(dp[1][1], min(dp[2][1], dp[3][1]));

      printf("Case #%d: %d\n", test, ans);
   }
}

void testGen() {
   FILE *f = fopen("input.txt", "w");
   fclose(f);
}

int main() {
#ifdef harhro94
   //testGen();
   freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);
#else
#define task "game"
   //freopen(task".in", "r", stdin);
   //freopen(task".out", "w", stdout);
#endif

   cerr << fixed;
   cerr.precision(5);

   solve();

#ifdef harhro94
   cerr << fixed << setprecision(3) << "\nExecution time = " << clock() / 1000.0 << "s\n";
#endif
   return 0;
}