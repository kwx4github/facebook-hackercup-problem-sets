#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<vector<int> >graph;
vector<vector<int> >graph2;
int node[200000+10];
int cont[200000+10];
int Min[200000+10];
int n ;
int Id =  0;
ll BFS(){
    Id++;
    ll S1 = 0 ;
    queue<int>Q;
    for(int i  = 0 ; i < n+1 ; i++){
        if(node[i]==0){
            Q.push(i);
        }
        cont[i] = 1 ;
    }
    while(!Q.empty()){
        for(int j = 0 ; j < Q.size() ; j++){
            int I = Q.front();
            if(I==0)
                return S1 ;
            int C = 1;
            int z = 0;
            for(int i = 0 ; i < graph2[I].size(); i++){
                Min[z++] = cont[graph2[I][i]];
            }
            sort(Min,Min+z);
            for(int i = 0 ; i < z ; ){
                if(C < Min[i])
                   break;
                while( i<z && C==Min[i] )
                    i++;
                C++;
            }
            S1+=C;
            cont[I] = C ;
            Q.pop();
            for(int i = 0 ; i < graph[I].size() ; i++){
                int II = graph[I][i];
                node[II]--;
                if(node[II]==0){
                    Q.push(II);
                }
            }
        }
    }
    return -1;
}
int main(){
    freopen("corporate_gifting.txt", "rt", stdin);
    freopen("Corporateout.txt", "wt", stdout);
    int t ;
    scanf("%d",&t);
    int a , b , cas =  0 ;
    while(t--){
        memset(node,0,sizeof(node));
        scanf("%d",&n);
        graph2.clear();
        graph.clear();
        graph = vector<vector<int> >(n+1);
        graph2 = vector<vector<int> >(n+1);
        for(int i = 0 ; i < n ; i++){
            scanf("%d",&a);
            b = i+1 ;
            graph[b].push_back(a);
            graph2[a].push_back(b);
            node[a]++;
        }
        printf("Case #%d: %lld\n" ,++cas,BFS());
    }
}
