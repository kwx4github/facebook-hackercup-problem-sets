#include <bits/stdc++.h>

using namespace std;

#define FI "corporate_gifting.txt"
#define FO "out.txt"
const int MAXN = 2e5 + 5;
const int MAXC = 30;
const int INF = 0x3f3f3f3f;

int T, N;
vector<int> child[MAXN];
int dp[MAXN][MAXC];
int res;

void dfs(int);

int main() {
	freopen(FI, "r", stdin);
	freopen(FO, "w", stdout);
	cin >> T;
	int x;
	for (int t = 1; t <= T; ++t) {
		cout << "Case #" << t << ": ";
		cin >> N;
		for (int i = 0; i < N; ++i) child[i].clear();
		for (int i = 0; i < N; ++i) {
			cin >> x;
			if (x) {
				child[x - 1].push_back(i);
			}
		}
		dfs(0);
		res = INF;
		for (int i = 1; i < MAXC; ++i) {
			res = min(res, dp[0][i]);
		}
		cout << res << endl;
	}
	return 0;
}

void dfs(int u) {
	int temp;
	if (child[u].size()) {
		for (int i = 1; i < MAXC; ++i) dp[u][i] = i;
		for (int i = 0; i < child[u].size(); ++i) {
			int v = child[u][i];
			dfs(v);
			for (int c = 1; c < MAXC; ++c) {
				temp = INF;
				for (int k = 1; k < MAXC; ++k) {
					if (k == c) continue;
					temp = min(temp, dp[v][k]);
				}
				dp[u][c] += temp;
			}
		}
	} else {
		for (int i = 1; i < MAXC; ++i) dp[u][i] = i;
	}
}
