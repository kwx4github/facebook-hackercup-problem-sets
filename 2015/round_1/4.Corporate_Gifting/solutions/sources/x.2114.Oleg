#include <string>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <cstdio>
#include <cmath>
#include <iomanip>
#include <deque>
#include <ctime>
#include <cstring>

//#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sd second
#define pb push_back
#define mp make_pair

#define endl '\n'

#define forr(i, n) for(ll (i) = 0LL; (i) < (n); (i)++)
#define mp3(a, b, c) mp(a, mp(b, c))

typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> plll;
typedef vector < vector < double > > vvd;
typedef vector < double > vd;
typedef vector < pair < double, double> > vdd;
typedef vector < vector < long long > > vvl;
typedef vector < long long > vl;
typedef vector < pll > vll;

int INT_MAX_VAL = (int) 1e20;
int INT_MIN_VAL = (int) -1e20;
ll LONG_MAX_VAL = (ll) 1e20;
ll LONG_MIN_VAL = (ll) -1e20;

#define MAXN 10000005

vvl graph;
vl pres;
ll dfs(ll v)
{
	vl cur(graph[v].size());
	forr(i, graph[v].size()) {
		ll w = graph[v][i];
		cur[i] = dfs(w);
	}
	sort(cur.begin(), cur.end());
	
	ll mn = 1;
	forr(i, cur.size()) {
		if(cur[i] > mn) {
			break;
		} else if(cur[i] == mn) {
			mn++;
		}
	}
	pres[v] = mn;
	return mn;
}

int main()
{
	ll T; cin >> T;
	forr(t, T) {
		ll n; cin >> n;
		graph.clear();
		graph.resize(n);
		pres.clear();
		pres.resize(n);
		forr(i, n) {
			ll a; cin >> a;
			if(a != 0) {
				a--;
				graph[a].push_back(i);
			}
		}
		dfs(0);
		ll cnt = 0;
		forr(i, n) {
			cnt += pres[i];
		}	
		cout << "Case #" << t + 1 << ": " << cnt << endl;
	}

	return 0;
}
