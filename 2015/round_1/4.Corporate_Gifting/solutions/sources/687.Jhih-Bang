#include<cstdio>
#include<cstring>
#include<vector>
#include<utility>
using namespace std;
const int MAX = 200000 + 10;
const int HAH = 2000;
const int INF = 3000000;
int dp[MAX][HAH+10];
vector<int> v[MAX];
pair<int,int> dodp(int x){
	for(int i = 1 ; i <= HAH ; i++)
		dp[x][i] = i;
	if(v[x].size() == 0){
		return make_pair(1,2);
	}
	int siz = v[x].size();
	for(int i = 0 ; i < siz ; i++){
		pair<int, int> tmp = dodp(v[x][i]);
		for(int j = 1 ; j <= HAH ; j++){
			if(j == tmp.first)
				dp[x][j] += dp[v[x][i]][tmp.second];
			else
				dp[x][j] += dp[v[x][i]][tmp.first];
		}
	}
	int f = 1, s = 2;
	if(dp[x][1] > dp[x][2]) swap(f,s);
	for(int i = 3 ; i <= HAH ; i++){
		if(dp[x][i] < dp[x][f])
			s = f, f = i;
		else if(dp[x][i] < dp[x][s])
			s = i;
	}
	return make_pair(f,s);
}
int main(){
	freopen("d.in", "r", stdin);
	freopen("d.out", "w", stdout);
	int TN;
	scanf("%d", &TN);
	for(int casen = 1 ; casen <= TN ; casen++){
		int n;
		scanf("%d", &n);
		for(int i = 1 ; i <= n ; i++)
			for(int j = 1 ; j <= HAH ; j++)
				dp[i][j] = INF;
		for(int i = 1 ; i <= n ; i++){
			int t;
			scanf("%d", &t);
			if(i > 1)
				v[t].push_back(i);
		}
		printf("Case #%d: %d\n", casen, dp[1][dodp(1).first]);
		for(int i = 1 ; i <= n ; i++)
			v[i].clear();
	}
	return 0;
}
