#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
#include <numeric>
#include <ctime>
#include <fstream>
#include <iomanip>
#include <stdexcept>
#include <functional>
#include <math.h>
#include <utility>

#pragma comment(linker, "/STACK:133217728")

using namespace std;
vector <int> g[200200];
int dp[200200][7];

void dfs(int v) {
	int one = 0, two = 0, three = 0;
	for(int i=0; i<g[v].size(); i++) {
		dfs(g[v][i]);
		one += min(dp[g[v][i]][2], dp[g[v][i]][3]);
		two += min(dp[g[v][i]][1], dp[g[v][i]][3]);
		three += min(dp[g[v][i]][1], dp[g[v][i]][2]);
	}

	dp[v][1] = 1 + one;
	dp[v][2] = 2 + two;
	dp[v][3] = 3 + three;
}
int main() {  
    freopen("corporate_gifting.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	
	int T;
	cin >> T;
	for(int t=1; t<=T; t++) {
		cout << "Case #" << t << ": ";
		int n;
		cin >> n;
		for(int i=1; i<=n; i++)
			g[i].clear();

		for(int i=1; i<=n; i++) {
			int v;
			cin >> v;
			if(!v) continue;
			g[v].push_back(i);
		}

		dfs(1);

		cout << min(min(dp[1][1], dp[1][2]), dp[1][3]) << endl;
	}
    return 0;
}