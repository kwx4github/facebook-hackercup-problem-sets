#include <vector>
#include <iostream>
#include <string>
#include <cstring>
using namespace std;

struct node
{
	int min, minInd, min2;
};

long long f[200005][15];
int d[200005];
int fa[200005];
node ns[200005];
vector<int> s[200005];

int main()
{
	int t;
	cin >> t;
	
	for (int tt = 1; tt <= t; ++tt)
	{
		int n;
		cin >> n;

		for (int i = 1; i <= n; ++i)
		{
			d[i] = 0;
			s[i].clear();
		}
		for (int i = 1; i <= n; ++i)
		{
			cin >> fa[i];
			d[fa[i]]++;
			s[fa[i]].push_back(i);
		}
		vector<int> q;
		for (int i = 2; i <= n; ++i)
			if (d[i] == 0)
			{
				d[fa[i]]--;
				if (d[fa[i]] == 0)
					q.push_back(fa[i]);
				for (int j = 1; j < 15; ++j)
					f[i][j] = j;
				ns[i].min = 1;
				ns[i].minInd = 1;
				ns[i].min2 = 2;
			}
		d[0] = 0;
		int qid = 0;
		while (qid < q.size())
		{
			int id = q[qid];
			d[fa[id]]--;
			if (d[fa[id]] == 0)
				q.push_back(fa[id]);
			int tot;
			ns[id].min = 0;
			ns[id].min2 = 0;
			for (int i = 1; i < 15; ++i)
			{
				tot = i;
				for (int j = 0; j < s[id].size(); ++j)
					if (ns[s[id][j]].minInd != i)
						tot += ns[s[id][j]].min;
					else
						tot += ns[s[id][j]].min2;
				if ((tot < ns[id].min) || (ns[id].min == 0))
				{
					ns[id].min = tot;
					ns[id].minInd = i;
				}
				else if ((tot < ns[id].min2) || (ns[id].min2 == 0))
					ns[id].min2 = tot;
			}
//			cout << id << " " << ns[id].min << " " << ns[id].minInd << endl;
			++qid;
		}
		
		cout << "Case #" << tt << ": " << ns[1].min << endl;
	}
}
