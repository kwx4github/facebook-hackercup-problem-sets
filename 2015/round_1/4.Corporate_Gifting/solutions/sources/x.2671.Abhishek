import java.util.*;
import java.io.*;
public class Main {
static ArrayList<Integer>array[];
static int dp[][];	
static int getAns(int a,int node){
 	int ans=0;
 	for(int temp:array[node]){
 		int min=Integer.MAX_VALUE;
 		for(int i=1;i<4;i++){
 			if(i==a)continue;
 			min=Math.min(min,dp[temp][i]);
 	}
 	ans+=min;
 }
    return ans;
 }
public static void main(String [] args) throws Exception{
BufferedReader bf=new BufferedReader(new FileReader("C:/users/abhishek/Desktop/input.txt"));
FileWriter f=new FileWriter("C:/users/abhishek/Desktop/output.txt");
String newLine=System.getProperty("line.separator");
	int t=Integer.parseInt(bf.readLine());
	for(int i=1;i<=t;i++){
	 int n=Integer.parseInt(bf.readLine());
	 array=new ArrayList[n+1];
	 StringTokenizer st=new StringTokenizer(bf.readLine());
	 int parent[]=new int[n+1];
	 int child[]=new int[n+1];
	 dp=new int [n+1][4];
	 for(int j=0;j<=n;j++)
	 	array[j]=new ArrayList();
	 	Stack<Integer>stack=new Stack<Integer>();
	 for(int j=1;j<=n;j++){
	 	int temp=Integer.parseInt(st.nextToken());
	 	array[temp].add(j);
	 	child[temp]++;parent[j]=temp;
	 }
	 for(int j=1;j<=n;j++)
	 	if(child[j]==0)stack.push(j);
	 while(!stack.isEmpty()){
	 	int node=stack.pop();
	 	if(array[node].size()==0){
	 		for(int j=1;j<4;j++)dp[node][j]=j;
	 	}
	 	else{
	 		for(int j=1;j<4;j++)
	 			dp[node][j]=getAns(j,node) + j;
	 	}
	 	child[parent[node]]--;
	 	if(child[parent[node]]==0)stack.push(parent[node]);
	 }
	 int min=Integer.MAX_VALUE;
	 for(int j=1;j<4;j++){
	 	min=Math.min(min,dp[1][j]);
	 }
	 f.write("Case #" + i + ": " + min + newLine);
	}
	f.close();
	 }
}
	
	
