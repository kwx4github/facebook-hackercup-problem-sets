//#pragma comment(linker, "/STACK:86777216")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
using namespace std;

const int INF = (int)5e8;
const int N = 300100;
const int M = 700;
vector<int> g[N];
int n;

struct Item
{
	int m1, m2, col;

	Item() : m1(), m2(), col() {}
	Item (int _m1, int _m2, int _col) : m1(_m1), m2(_m2), col(_col) {}

	void clear()
	{
		m1 = m2 = col = INF;
	}
};
Item a[N];

void clear()
{
	for (int i = 0; i < n; i++)
	{
		g[i].clear();
		a[i].clear();
	}
	return;
}

void trySet(int v, int val, int c)
{
	if (val < a[v].m1)
	{
		a[v].m2 = a[v].m1;
		a[v].m1 = val;
		a[v].col = c;
	}
	else if (val < a[v].m2)
		a[v].m2 = val;
	return;
}

void dfs(int v)
{
//	cerr << v << endl;
	if ((int)g[v].size() == 0)
	{
		a[v] = Item(1, 2, 1);
		return;
	}
	int sz = (int)g[v].size();
//	for (int i = 0; i < sz; i++)
//		dfs(g[v][i]);
	for (int x = 1; x < M; x++)
	{
		int val = x;
		for (int i = 0; i < sz; i++)
		{
			int to = g[v][i];
			val += (a[to].col == x ? a[to].m2 : a[to].m1);
		}
		trySet(v, val, x);
	}
	return;
}

int solve()
{
	scanf("%d", &n);
	clear();
	for (int i = 0; i < n; i++)
	{
		int x;
		scanf("%d", &x);
		x--;
		if (x != -1)
			g[x].push_back(i);
	}
	for (int i = n - 1; i >= 0; i--)
		dfs(i);
	return a[0].m1;
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int t;
	scanf("%d", &t);
	for (int i = 1; i <= t; i++)
	{
//		cerr << i << endl;
		printf("Case #%d: %d\n", i, solve());
	}

	return 0;
}
