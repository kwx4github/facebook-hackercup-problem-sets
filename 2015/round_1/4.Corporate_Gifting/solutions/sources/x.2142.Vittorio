import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Stack;
import java.util.TreeSet;


public class Esercizio4 {
	public static void main(String[] args) throws Exception{
		Scanner input = new Scanner(new File("input"));
		BufferedWriter output = new BufferedWriter(new FileWriter(new File("output")));
		employee[] employees = new employee[200000];
		int T = input.nextInt();
		long time = System.currentTimeMillis();
		for ( int i = 0; i<T ; i++)
		{
			int N = input.nextInt();
			for ( int j = 0; j < N; j++)
			{
				employees[j] = new employee();
			}
			for ( int j = 0; j < N; j++)
			{
				int app = input.nextInt() - 1;
				if ( app > -1 )
					employees[app].subs.add(employees[j]);
			}
			Stack<employee> dfs = new Stack<employee>();
			dfs.push(employees[0]);
			Dfs(dfs);
			output.write("Case #"+(i+1)+": "+employees[0].verymin);
			output.newLine();
		}
		System.out.println("time: "+(System.currentTimeMillis() - time));
		
		output.flush();
		input.close();
		output.close();
	}
	static class employee{
		public List<employee> subs;
		public boolean done;
		public long verymin;
		public int quandoverymin;
		public long seno;
		public employee()
		{
			subs = new ArrayList<employee>();
			done = false;
		}
	}
	static void Dfs(Stack<employee> stack)
	{
		while ( ! stack.isEmpty())
		{
			employee e = stack.pop();
			if ( e.done )
			{
				calcola(e);
			}
			else
			{
				e.done = true;
				stack.push(e);
				for ( employee ee : e.subs)
				{
					stack.push(ee);
				}
			}
		}
	}
	static void calcola(employee e)
	{
		int figli = e.subs.size();
		if ( figli == 0)
		{
			e.verymin = 1;
			e.quandoverymin = 1;
			e.seno = 2;
		}
		else
		{
			e.verymin = Long.MAX_VALUE;
			e.seno = Long.MAX_VALUE;
			TreeSet<Integer> set = new TreeSet<Integer>();
			for (employee ee : e.subs)
			{
				set.add(Integer.valueOf(ee.quandoverymin));
			}
			int mancato = 1;
			for ( Integer j : set)
			{
				if ( mancato == j)
					mancato++;
				else break;
			}
			set.add(mancato);
			for ( Integer j : set)
			{
				long ifj = j;
				for (employee ee : e.subs)
				{
					if ( ee.quandoverymin == j)
					{
						ifj+=ee.seno;
					}
					else ifj += ee.verymin;
				}
				if ( ifj < e.verymin)
				{
					e.seno = e.verymin;
					e.verymin = ifj;
					e.quandoverymin = j;
				}
				else if ( ifj < e.seno)
				{
					e.seno = ifj;
				}
			}
		}
	}
}
