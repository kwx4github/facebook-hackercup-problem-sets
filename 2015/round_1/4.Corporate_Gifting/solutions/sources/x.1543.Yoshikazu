#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <climits>
#include <cfloat>
#include <map>
#include <utility>
#include <set>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <sstream>
#include <complex>
#include <stack>
#include <queue>
#include <cstring>

using namespace std;

int memo[4][200001];
vector<int> edge[2000001];
int rec(int cur, int prohibit){
  if( memo[prohibit][cur] != -1 ) return memo[prohibit][cur];
  int ret = INT_MAX;
  for( int i = 1 ; i <=3; i++ ){
    if(i==prohibit) continue;
    int ans = i;
    for( int j = 0 ; j < (int)edge[cur].size(); j++ ){
      ans += rec(edge[cur][j],i);
    }
    ret =min(ret,ans);
  }
  return memo[prohibit][cur]=ret;
}
int main(){
  int T;
  cin >> T;
  for( int n_case = 1 ; n_case <= T ;n_case++){
    int N;
    cin >> N;
    for( int i = 0; i < N; i++ ){
      edge[i].clear();
      int parent;
      cin >> parent;
      parent--;
      if( parent >= 0 ){
        edge[parent].push_back(i);
      }
    }
    memset(memo,-1,sizeof(memo));
    int ans = rec(0,0);
    cout << "Case #"<<n_case << ": "<< ans<<endl;
  }
  return 0;
}
