#include <iostream>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <string>
#include <string.h>
#include <queue>


using namespace std;


vector <vector<int> > g;
int kk = 30;

/*long long solve(int v, int p){
    int x = p;
    for (int i=0;i<g[v].size();i++){
        int to = g[v][i];
        long long s = 1000000000000;
        for (int j=1;j<=kk;j++)
            if (j != p)
                s = min(s, solve(to, j));
        x += s;
    }
    return x;
}*/

int main(){
    freopen("/Users/Arseniy/All/A/A/corporate_gifting.txt", "r", stdin);
    freopen("/Users/Arseniy/All/A/A/output.txt", "w",stdout);
    
    int t;
    cin >> t;
    vector <long long> pp(kk,0);
    for (int o=0;o<t;o++){
        cout << "Case #" << o+1 << ": ";
        int n;
        cin >> n;
        vector<int> a, b;
        a.clear();
        g.assign(n, a);
        a.assign(n, 0);
        b.assign(n, 0);
        for (int i=0;i<n;i++){
            cin >> a[i];
            if (i != 0){
                g[a[i]-1].push_back(i);
                b[a[i]-1]++;
            }
        }
       /* long long ans = 1000000000000;
        for (int i=1;i<=kk;i++)
            ans = min(ans, solve(0, i, ans));
        */
        
        long long ans = 1000000000000000000;
        queue <int> q;
        for (int i=0;i<n;i++){
            if (g[i].size()==0)
                q.push(i);
        }
        
        vector <vector <long long> > d;
        d.assign(n, pp);
        while (!q.empty()){
            int v = q.front();
            q.pop();
            for (int i=0;i<kk;i++){
                d[v][i] += i+1;
                for (int j=0;j<g[v].size();j++){
                    long long x = 1000000000000000000;
                    for (int k=0;k<kk;k++){
                        if ((k != i) && (d[g[v][j]][k] < x))
                            x = d[g[v][j]][k];
                    }
                    d[v][i] += x;
                }
            }
            b[a[v]-1]--;
            if (b[a[v]-1] == 0)
                q.push(a[v]-1);
        }
        for (int i=0;i<kk;i++)
            ans = min(ans, d[0][i]);
        
        cout << ans << endl;
    }
    
    return 0;
}




