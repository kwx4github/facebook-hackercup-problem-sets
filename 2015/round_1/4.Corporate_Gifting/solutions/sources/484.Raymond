#include <bits/stdc++.h>
using namespace std;
const int MAXN = 200005;
const int MAXK = 25;
const int INF = 1000000000;
int F[MAXN][MAXK], minf[MAXN], minf2[MAXN];
vector<int> child[MAXN];
void go(int x) {
	for (auto y : child[x]) go(y);
	minf[x] = minf2[x] = INF;
	for (int k = 1; k <= 20; ++k) {
		F[x][k] = k;
		for (auto y : child[x]) {
			int v = minf[y];
			if (F[y][k] == v) v = minf2[y];
			F[x][k] = min(INF, F[x][k] + v);
		}
		if (F[x][k] <= minf[x]) {
			minf2[x] = minf[x];
			minf[x] = F[x][k];
		} else if (F[x][k] < minf2[x]) {
			minf2[x] = F[x][k];
		}
	}
}
int main() {
	int T;
	scanf("%d", &T);
	for (int cn = 1; cn <= T; ++cn) {
		int N;
		scanf("%d", &N);
		for (int i = 1; i <= N; ++i) child[i].clear();
		for (int i = 1; i <= N; ++i) {
			int a;
			scanf("%d", &a);
			if (a) child[a].push_back(i);
		}
		go(1);
		int ans = INF;
		for (int i = 1; i <= 20; ++i)
			ans = min(ans, F[1][i]);
		printf("Case #%d: %d\n", cn, ans);
	}
}

