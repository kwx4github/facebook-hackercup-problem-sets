#include <bits/stdc++.h>
//typedef unordered_map<int,int> umap
typedef long long int lnt;
typedef double dou;
using namespace std;
typedef struct{int x,y;}ele;
#define N 200514

vector<int>e[N];
int n;
int q[N],qs,qe;
int cor[N];
ele dp[N][2];
void update(int w,ele t){
	if(dp[w][0].y>t.y){
		dp[w][1]=dp[w][0];
		dp[w][0]=t;
	}
	else if(dp[w][1].y>t.y){
		dp[w][1]=t;
	}
}
int cmp(int a,int b){
	return dp[a][0].x<dp[b][0].x;
}

void sol(int uuu){
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		//e[i-1].push_back(i);
		//continue;
		int x;
		scanf("%d",&x);
		e[x].push_back(i);
	}
	qs=qe=0;
	q[qe++]=1;
	cor[1]=1;
	int cnt=0;
	for(;qs<qe;){
		int w=q[qs++];
		if(cor[w]==3)cnt++;
		for(int i=0;i<(int)e[w].size();i++){
			int t=e[w][i];
			cor[t]=cor[w]^2;
			q[qe++]=t;
		}
	}
	int tans=min(cnt+(n-cnt)*2,cnt*2+(n-cnt));
	for(;qe;){
		int w=q[--qe];
		sort(e[w].begin(),e[w].end(),cmp);
		int sz=(int)e[w].size();
		if(sz==0){
			dp[w][0]=(ele){1,1};
			dp[w][1]=(ele){2,2};
			continue;
		}
		else{
			dp[w][0]=dp[w][1]=(ele){7122,1<<30};
		}
		
		
		int s=0;
		for(int i=0;i<sz;i++){
			int t=e[w][i];
			s+=dp[t][0].y;
		}
		for(int i=1,j=0,c=0;;i++){
			int flag=0;
			for(;j<sz && i==dp[e[w][j]][0].x;j++){
				flag=1;
			}
			if(flag==0){
				update(w,(ele){i,s+i});
				if(++c==2)break;
			}
		}
		for(int i=0;i<sz;){
			int j=i;
			int jx=dp[e[w][j]][0].x;
			int ts=0;
			for(;i<sz&&dp[e[w][i]][0].x==jx;i++){
				ts+=dp[e[w][i]][1].y-dp[e[w][i]][0].y;
			}
			update(w,(ele){jx,s+ts+jx});
		}
	}
	//printf("%d\n",dp[1][0].y);
	printf("Case #%d: %d\n",uuu,min(tans,dp[1][0].y));
	for(int i=0;i<=n;i++)e[i].clear();
}
int main(){
	freopen("corporate_gifting.txt","r",stdin);
	freopen("PDout.txt","w",stdout);
	int t;
	scanf("%d",&t);
	for(int i=0;i<t;i++){
		sol(i+1);
	}
	return 0;
}
