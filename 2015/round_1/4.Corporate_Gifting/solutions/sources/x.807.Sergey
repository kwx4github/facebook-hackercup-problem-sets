import java.io.*;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 * Author: Sergey Paramonov
 * Date: 17.01.15
 * Time: 21:55
 */
public class FHC_R120150117_D {

    StreamTokenizer input;

    static PrintWriter output;

    int nextInt() throws Exception {
        input.nextToken();
        return (int) input.nval;
    }

    static void flushAndClose() {
        output.flush();
        System.out.flush();
        output.close();
    }

    static class Result {
        final long min;
        final int value;
        final long otherwise;

        public Result(long min, int value, long otherwise) {
            this.min = min;
            this.value = value;
            this.otherwise = otherwise;
        }
    }

    HashMap<Integer, Long> map = new HashMap<>();

    Result ghghgh(int v, ArrayList<Integer>[] c) {
        int n = c[v].size();
        if (n == 0) {
            return new Result(1, 0, 2);
        }

        Result[] a = new Result[n];
        long sum = 0;
        for (int i = 0; i < n; i++) {
            a[i] = ghghgh(c[v].get(i), c);
            sum += a[i].min;
        }

        boolean[] b = new boolean[n+1];
        map.clear();
        for (int i = 0; i < n; i++) {
            if (map.containsKey(a[i].value)) {
                long m = map.get(a[i].value);
                map.put(a[i].value, m + (a[i].otherwise - a[i].min));
            } else {
                map.put(a[i].value, sum + (a[i].value + 1) + (a[i].otherwise - a[i].min));
            }

            if (a[i].value <= n) {
                b[a[i].value] = true;
            }
        }

        long m1 = Long.MAX_VALUE;
        int p1 = -1;
        long m2 = Long.MAX_VALUE;

        for (int i = 0; i <= n; i++) {
            if (!b[i]) {
                m1 = sum + (i+1);
                p1 = i;
                break;
            }
        }

        for (Map.Entry<Integer, Long> d : map.entrySet()) {
            if (d.getValue() < m1) {
                m2 = m1;
                m1 = d.getValue();
                p1 = d.getKey();
            } else if (d.getValue() < m2) {
                m2 = d.getValue();
            }
        }

        return new Result(m1, p1, m2);
    }

    SimpleDateFormat dateFormat = new SimpleDateFormat("hh:mm:ss.ms");

    Object solve(int nt) throws Exception {
        System.out.println(dateFormat.format(new Date()) + " start: " + nt);
        int n = nextInt();
        ArrayList<Integer>[] c = new ArrayList[n];
        for (int i = 0; i < n; i++) {
            c[i] = new ArrayList<>();
        }
        int root = -1;
        for (int i = 0; i < n; i++) {
            int p = nextInt();
            if (p == 0) {
                root = i;
            } else {
                c[p-1].add(i);
            }
        }
        Result res = ghghgh(root, c);
        System.out.println(dateFormat.format(new Date()) + " finished: " + nt);
        return res.min;
    }

    void main() throws Exception {
        input = new StreamTokenizer(new BufferedReader(new FileReader(new File("/home/cepera/root/spam/corporate_gifting.txt"))));
        output = new PrintWriter("/home/cepera/root/spam/FHC_D.txt");
        int kt = nextInt();
        for (int nt = 1; nt <= kt; nt++) {
            output.println("Case #" + nt + ": " + solve(nt));
        }
    }

    public static void main(String[] args) throws Exception {
        new FHC_R120150117_D().main();
        flushAndClose();
    }

}
