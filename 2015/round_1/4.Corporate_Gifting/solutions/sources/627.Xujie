
#include <vector>
#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;

#define PB(x) push_back(x)
typedef vector<int> VI;
typedef long long LL;

const LL Mod = 1000000007LL;
const int N = 200010;
const int M = 30;

VI v[N];

LL dp[N][M];
bool vis[N][M];

LL solve(int rt, int k)
{
  if( vis[rt][k] ) return dp[rt][k];

  LL res = k;
  for(auto x : v[rt]){
    LL tmp = 1LL<<60;
    for(int i=1;i<M;++i){
      if(i == k) continue;
      LL t2 = solve(x, i);
      if(t2 < tmp) tmp = t2;
    }
    res += tmp;
  }

  dp[rt][k] = res;
  vis[rt][k] = true;
  return res;

}

int main()
{
  int T;
  scanf("%d",&T);
  int cs = 0;
  while(cs++ < T){

    memset(vis,0,sizeof(vis));

    int n;
    scanf("%d",&n);

    for(int i=0;i<=n;++i) v[i].clear();

    for(int i=1;i<=n;++i){
      int t;
      scanf("%d",&t);
      v[t].PB(i);
    }

    for(int i=1;i<M;++i) solve(1,i);

    LL ans = 1LL << 60;
    for(int i=1;i<M;++i){
      LL t = solve(1,i);
      if(ans > t) ans = t;
    }

    printf("Case #%d: %lld\n",cs,ans);
  }

  return 0;
}
