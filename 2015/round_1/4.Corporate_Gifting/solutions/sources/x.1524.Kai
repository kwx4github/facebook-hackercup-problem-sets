#include <iostream>
#include <string>
#include <set>
#include <deque>
using namespace std;
#pragma warning(disable : 4996)

const int MAXN = 200010;

int parent[MAXN];
int leafCount[MAXN];
int dp[MAXN][4];

int run() {
	int n;
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%d", &parent[i]);
		parent[i]--;
	}

	memset(leafCount, 0, sizeof(leafCount));

	deque<int> que;

	for (int i = 1; i < n; i++) {
		leafCount[parent[i]]++;
	}

	memset(dp, 0, sizeof(dp));

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 4; j++) {
			dp[i][j] = j + 1;
		}

		if (leafCount[i] == 0) {
			que.push_back(i);
		}
	}

	while (!que.empty()) {
		int current = que.front();
		que.pop_front();

		int father = parent[current];
		if (father == -1) continue;
		for (int i = 0; i < 4; i++) {
			int minChild = INT_MAX;
			for (int j = 0; j < 4; j++) {
				if (i != j) {
					minChild = min(minChild, dp[current][j]);
				}
			}

			dp[father][i] += minChild;
		}

		leafCount[father]--;

		if (leafCount[father] == 0) {
			que.push_back(father);
		}
	}

	int minV = INT_MAX;

	for (int i = 0; i < 4; i++) {
		minV = min(minV, dp[0][i]);
	}

	return minV;
}

int main() {
	int T;

	scanf("%d", &T);
	for (int i = 0; i < T; i++) {
		
		cout << "Case #" << i + 1 << ": " << run() << endl;
	}
}

