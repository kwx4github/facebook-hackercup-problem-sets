#pragma	comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <sstream>
#include <queue>
#include <algorithm>
#include <iostream>
using namespace std;

typedef long long ll;
#define mod 1000000007
#define pi acos(-1.0)
#define eps 1e-9
#define MAX_COLOR 50

int dp[200005][MAX_COLOR+5];
vector <vector <int> > v(200005);

int solve(int i, int bannedColor)
{
	if(v[i].size() == 0)
	{
		if(bannedColor == 1)
		{
			return 2;
		}
		else
		{
			return 1;
		}
	}
	if(dp[i][bannedColor] == -1)
	{
		dp[i][bannedColor] = mod;
		for(int color = 1; color <= MAX_COLOR; color++)
		{
			if(color == bannedColor)
				continue;
			int sum = 0;
			for(int j = 0; j < v[i].size(); j++)
				sum += solve(v[i][j], color);
			if(dp[i][bannedColor] > color + sum)
				dp[i][bannedColor] = color + sum;
		}
	}
	return dp[i][bannedColor];
}

int main()
{
	freopen("corporate_gifting.txt", "r", stdin);
	freopen("corporate_gifting.out", "w", stdout);
	int T;
	scanf("%d", &T);
	for(int t = 1; t <= T; t++)
	{
		for(int i = 0; i <= 200000; i++)
			v[i].clear();
		int n;
		scanf("%d", &n);
		for(int i = 1; i <= n; i++)
		{
			int p;
			scanf("%d", &p);
			if(i > 1)
			{
				v[p].push_back(i);
			}
		}
		memset(dp, -1, sizeof(dp));
		printf("Case #%d: %d\n", t, solve(1, 0));
		cerr << t << endl;
	}
	return 0;
}