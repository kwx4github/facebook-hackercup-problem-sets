#include <bits/stdc++.h>
#define ll long long
#define eps 1e-9
#define PI 2 * acos (0.0)
#define mod 1000000007
using namespace std;

vector<int>v[2000005];
int cnt[2000005];
int val[2000005];
queue<int>Q;
int N;
bool bi[2000005];
bool is[2000005];
bool isone[2000005];

void dfs(int i)
{
    bi[i]=true;
    int a,b,c;
    c=0;
    for(a=0;a<v[i].size();a++)
    {
        b=v[i][a];
        if(bi[b]) continue;
        c++;
        dfs(b);
    }
    if(!c)
    {
        //cout<<"inserting "<<i<<endl;
        if(i)
        {
            Q.push(i);
            val[i]=1;
            is[i]=true;
        }
    }
}

void bfs()
{
    int a,b,c,d,e,x,y,z,n;


    while(!Q.empty())
    {
        b=Q.front(); Q.pop();

        //cout<<"Now at "<<b<<endl;

        for(a=0;a<v[b].size();a++)
        {
            c=v[b][a];
            if(is[c]) continue;
            cnt[c]++;
            if(val[b]==1) isone[c]=true;
        }
        for(a=0;a<v[b].size();a++)
        {
            c=v[b][a];
            if(is[c]) continue;
            if(cnt[c]==v[c].size()-1)
            {
                if(!isone[c]) val[c]=1;
                else
                {
                    for(d=0;d<v[c].size();d++)
                    {
                        e=v[c][d];
                        val[c]=max(val[c],val[e]+1);
                    }
                }
                Q.push(c);
                is[c]=true;
                //cout<<"Pushed back "<<c<<" with value "<<val[c]<<endl;
            }
        }
    }
}

int main()
{

    freopen("0.in","r",stdin);
    freopen("0.out","w",stdout);

    /*
    cout << fixed << setprecision(4);
    std::ios::sync_with_stdio(false);

	*/

	int a,b,c,d,e,x,y,z,t;

	scanf("%d",&z);

	for(t=1;t<=z;t++)
	{
	    scanf("%d",&N);
	    for(a=0;a<=N;a++)
	    {
	        bi[a]=false;
	        cnt[a]=0;
	        val[a]=0;
	        is[a]=false;
	        v[a].clear();
	        isone[a]=false;
	    }
	    for(a=1;a<=N;a++)
	    {
	        scanf("%d",&b);
	        v[a].push_back(b);
	        v[b].push_back(a);
	    }
	    while(!Q.empty()) Q.pop();
	    //dfs(0);
	    for(a=1;a<=N;a++)
	    {
	        if(v[a].size()==1)
	        {
	            Q.push(a);
                val[a]=1;
                is[a]=true;
	        }
	    }
	    bfs();
	    x=0;
	    for(a=1;a<=N;a++) x=x+val[a];
	    printf("Case #%d: %d\n",t,x);
	}

    return 0;
}
