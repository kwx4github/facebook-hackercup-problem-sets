#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <climits>
#include <vector>
#include <sstream>
using namespace std;

#define pb push_back
#define mp make_pair
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long lint;

#define PI 3.1415926535897932385


int main()
{
    freopen("a.txt","r",stdin);
    freopen("out","w",stdout);

    int cas;
    cin>>cas;
    for(int x=0;x<cas;x++)
    {
        int n;
        cin>>n;
        vector<int>idependon(n+1,0);
        vector<set<int> >dependsonme(n+1, set<int>());
        for(int x=1;x<=n;x++) {
            int i;
            cin>>i;
            if (i!=0) {
                idependon[x] = i;
                dependsonme[i].insert(x);
            }
        }
        queue<int>ready;
        for(int x=1;x<=n;x++) {
            if (dependsonme[x].size() == 0) {
                ready.push(x);
            }
        }
        lint ans = 0;
        vector<set<int> >vals(n+1);
        while(1) {
            if (!ready.empty()) {
                int val = ready.front();
                ready.pop();
                int used = 0;
                for(int xx=1;;xx++) {
                    set<int>ss = vals[val];
                    if (ss.find(xx) == ss.end()) {
                        used =xx;
                        ans+=xx;
                        break;
                    }
                }
                int p = idependon[val];
                if (p!=0) {
                    vals[p].insert(used);
                    dependsonme[p].erase(dependsonme[p].find(val));
                    if (dependsonme[p].size() == 0) ready.push(p);
                }
            } else {
                break;
            }
        }
        cout<<"Case #"<<x+1<<": "<<ans<<"\n";
    }
    return (0);
}



