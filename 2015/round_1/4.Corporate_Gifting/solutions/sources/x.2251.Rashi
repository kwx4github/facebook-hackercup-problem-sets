#include <stdio.h>
#include <iostream>
#include <vector>
#include <map>
#include<stdlib.h>
int cmp(const void*a, const void*b)
{
	int* p =(int*)a;
	int* q =(int*)b;
	return *q-*p;
}
using namespace std;
int main()
{
	map<int , vector<int> > tree;
	vector<int> temp; 
	int N,T,i,j,count,limit,num,level[200010],check,counter[200010];
	long long int ans;
	scanf("%d",&T);
	for(i=1;i<=T;i++)
	{
		//tree.clear();
		scanf("%d",&N);
		counter[0]=0;
		for(j=1;j<=N;j++)
		{
			scanf("%d",&num);
			tree[num].push_back(j);
			counter[j]=0;
		}
		for(j=N;j>=1;j--)
		{
			if(tree[j].empty())
			{
				level[j]=1;
				counter[1]++;
			}
			else 
			{
				temp.clear();
				temp=tree[j];
				limit=tree[j].size();
				count=0;
				check=1;
				while(count<limit)
				{
					if(check==level[temp[count]])
					{
						check++;
						count=0;
					}
					else
						count++;
				}
				level[j]=check;
				counter[check]++;
			}

		}
		qsort(counter,N+1,sizeof(int),cmp);	
		ans=0;
		for(j=0;j<=N;j++)
		{
			ans+=(counter[j]*(j+1));
		
		}	
		printf("Case #%d: %lld\n",i,ans);
		for(j=0;j<=N;j++)
			tree[j].clear();
		tree.clear();
		
	}
}
