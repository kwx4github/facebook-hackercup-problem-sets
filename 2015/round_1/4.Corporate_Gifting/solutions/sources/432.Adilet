#pragma comment(linker, "/STACK:134217728")
#include <iostream>
#include <fstream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <cstring>
#include <cassert>
#include <utility>
#include <iomanip>

using namespace std;

const int MAXN = 200500;

int tn;
int n;
vector <int> g[MAXN];
long long dp[MAXN][105];
long long pref[MAXN][105], suff[MAXN][105];
long long cost[MAXN][105];
long long ans;
int mg;

void calc(int v) {

	for (int i = 0; i < (int) g[v].size(); i++) {
		int to = g[v][i];
		calc(to);

		for (int j = 1; j <= mg; j++) {
			long long curmin = -1;
			if (j > 1) {
				if (curmin == -1 || pref[to][j - 1] < curmin)
					curmin = pref[to][j - 1];
			}
			if (j < mg) {
				if (curmin == -1 || suff[to][j + 1] < curmin)
					curmin = suff[to][j + 1];	
			}
			cost[v][j] += curmin;
		}
	}

    for (int i = 1; i <= mg; i++) {
    	dp[v][i] = i + cost[v][i];
    }

    pref[v][1] = dp[v][1];
    for (int i = 2; i <= mg; i++) {
    	pref[v][i] = pref[v][i - 1];
    	if (dp[v][i] < pref[v][i])
    		pref[v][i] = dp[v][i];
    }

    suff[v][mg] = dp[v][mg];
    for (int i = mg - 1; i >= 1; i--) {
    	suff[v][i] = suff[v][i + 1];
    	if (dp[v][i] < suff[v][i])
    		suff[v][i] = dp[v][i];
    }                                         
}

int main() {
	assert(freopen("corporate_gifting.txt","r",stdin));
	assert(freopen("output.txt","w",stdout));

	scanf("%d", &tn);

	for (int test = 1; test <= tn; test++) {
		scanf("%d", &n);
		for (int i = 1; i <= n; i++) {
			g[i].clear();
		}
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= 100; j++) {
				dp[i][j] = 0;
				cost[i][j] = 0;
				pref[i][j] = suff[i][j] = 0;
			}
		}

		mg = min(n, 100);

		for (int i = 1; i <= n; i++) {
			int par;
			scanf("%d", &par);
			g[par].push_back(i);
		}

		calc(1);

		ans = dp[1][1];
		for (int i = 1; i <= mg; i++)
			if (dp[1][i] < ans)
				ans = dp[1][i];

		printf("Case #%d: ", test);
		cout << ans << endl;
	}

	return 0;
}