#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
const ll INF = 100000000000000000LL;
const int MAXN = 400010;
ll dp[MAXN][2];
int put[MAXN][2];
int N;
vi fo[MAXN];
void go(int vr){
  for(int i=0;i<sz(fo[vr]);++i)
   go(fo[vr][i]);
  int D = min(N , sz(fo[vr]) + 2);
  vector<ll> val(D+50 , INF);
  vector<vi> bad(D+50);
  ll SUM = 0;
  for(int i=0;i<sz(fo[vr]);++i){
   SUM += dp[fo[vr][i]][0];
   if(put[fo[vr][i]][0] <= D)
    bad[ put[fo[vr][i]][0] ].pb(fo[vr][i]);
                               }
  for(int i=1;i<=D;++i){
   ll CS = SUM;
   vi& rem = bad[i];
   for(int j=0;j<sz(rem);++j){
    CS -= dp[rem[j]][0];
    CS += dp[rem[j]][1];
    relaxMin(CS , INF + 1);
                             }
   relaxMin(val[i] , CS + i);
                       }
  int p1 = min_element(all(val)) - val.begin();
  dp[vr][0] = val[p1] , put[vr][0] = p1;
  val[p1] = INF;
  int p2 = min_element(all(val)) - val.begin();
  dp[vr][1] = val[p2] , put[vr][1] = p2;
}
void doit(int CASE){
  //cout<<CASE<<endl;
  scanf("%d" , &N);
  for(int i=0;i<N;++i)
   fo[i].clear();
  for(int i=0;i<N;++i){
   int par;
   scanf("%d" , &par);
   if(par) fo[par-1].pb(i);
                      }
  go(0);
  cout<<"Case #"<<CASE<<": "<<dp[0][0]<<'\n';
}
int main(){
  int Q;
  scanf("%d" , &Q);
  for(int i=1;i<=Q;++i)
   doit(i);
  return 0;
}
