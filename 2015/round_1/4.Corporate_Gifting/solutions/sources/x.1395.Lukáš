#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
#define MP make_pair
#define PB push_back
#define TR(it,c) for( typeof(c.begin()) it = c.begin(); it != c.end(); ++it )
#define TRR(it,c) for( typeof(c.rbegin()) it = c.rbegin(); it != c.rend(); ++it
#define REP(i,a) for (int i = 0; i < (a); i++)
#define FOR(i,a,b) for (int i = (a); i <= (b); i++)
#define FORD(i,a,b) for (int i = (a); i >= (b); i--)

#define DRI(a) int a; scanf("%d", &a);
#define DRII(a, b) int a, b; scanf("%d %d", &a, &b);
#define DRIII(a, b, c) int a, b, c; scanf("%d %d %d", &a, &b, &c);
#define RI(a) scanf("%d", &a);
#define RII(a, b) scanf("%d %d", &a, &b);
#define RIII(a, b, c) scanf("%d %d %d", &a, &b, &c);
#define MM(arr, num) memset((arr), (num), sizeof((arr)))
#define DEB(x) cerr << ">>> " << (#x) << " -> " << (x) << endl;
#define DEBA(x,n) cerr << (#x) << " "; deba((x),(n));
void deba(int * a, int n){ cerr << "| "; REP(i,n) cerr << a[i] << " "; cerr << "|" << endl;}


inline bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }

const int INF = 1<<29;
typedef long long ll;
typedef unsigned long long ull;
/*******************************************************/

int n,price,oldDlh,dlh,mn;
int p[5000008];
vi ch[5000008];
vi ret;

vi rek(int u){


    if (ch[u].size() == 0){
      ret.clear();
      ret.PB(0); //normalization;
      ret.PB(0); return ret;
    }
    //DEB(ch[u].size());
    vector<vector<int> > chret;
    REP(i,ch[u].size()){
      chret.PB( rek(ch[u][i]) );
    }
    price = 1;
    oldDlh = INF;
    ret.clear();
    ret.PB(0); //normalization;

    while(1){
      dlh = 0;
      REP(i,chret.size()){
        mn = INF;
        FOR(j,1,chret[i].size()){
          if(j==price)continue;
          if(j==chret[i].size()) mn = min(mn, chret[i][j-1] + 1);
          else mn = min(mn,chret[i][j]);
        }
        dlh+= mn;
      }
      dlh+= price-1;
     // cout<<"u: " << u << " price " << price << " dlh " << dlh << endl;
      ret.PB(dlh);
      if (dlh > oldDlh)break; //pozor mozno treba pockat!

      oldDlh = dlh;
      price++;
    }

    return ret;

}


int main() {

  DRI(cs);
  FOR(ii,1,cs){
    RI(n);
    REP(i,n+1)ch[i].clear();
    REP(i,n){
      RI(p[i+1]);
      ch[p[i+1]].PB(i+1);
    }

    vi res = rek(1);
    int mn = INF;
    FOR(i,1,res.size()-1) mn = min(mn,res[i]);
    printf("Case #%d: %d\n",ii,mn+n);
  }


  return 0;
}
