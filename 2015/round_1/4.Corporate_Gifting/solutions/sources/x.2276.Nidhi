#include <iostream>
#include <algorithm>
#include <map>
#include <climits>
#include <cstring>
#include <vector>
#include <queue> 
using namespace std;

typedef long long ll;

int main()
{
    int t;
    cin >> t;
    for (int z=1;z<=t;z++)
    {
        int n;
	cin >> n;
        int color[n+1];
        map<int,int> mp;
        vector<int> arr1[n+1];
        vector<int> arr2[n+1];
	
	
        for (int i=1;i<=n;i++)
        {
            int x;
            cin >> x;
            arr1[x].push_back(i);
            arr2[x].push_back(i);
            color[i]=-1;
            mp[i]=x;
        }

        queue<int> q;

        for (int i=1;i<=n;i++)
        {
            if (arr2[i].size()==0)
                q.push(i);
        }
	int r=0;

        while(q.size()!=0&&r<n)
        {
		r++;int temp = q.front();
            q.pop();

            int y= 1;
            for (int j=1;j<arr1[temp].size();j++)
            {	
                if (color[arr1[temp][j]]==y)
                    y++;

            }

            color[temp]=y;

            vector<int>::iterator position = find(arr2[mp[temp]].begin(), arr2[mp[temp]].end(),temp) ;
	    if (position!=arr2[mp[temp]].end())
           	 arr2[mp[temp]].erase(position);

            if (arr2[mp[temp]].size()==0)
                q.push(mp[temp]);

        }
	

        ll ans = 0;	
        for (int i=1;i<=n;i++)
            ans+=color[i];

        cout << "Case #" << z << ": "<< ans << endl;
    }

    return 0;
}
