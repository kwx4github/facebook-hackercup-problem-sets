/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf INT_MAX
#define linf LLONG_MAX
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define pp pop_back()
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define nl printf("\n")
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pii pair< int , int >
#define pll pair< ll , ll >
#define pcs(a) printf("Case %d: ",a)
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int month[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,-1,+0,+1,+1,+0};int dy[]={-1,+1,+2,+1,-1,-2}; //Hexagonal Direction
///const double eps=1e-6;

/*****************************************************************/
///////////////////////   GET SET GO    ///////////////////////////
/*****************************************************************/

#define M 200005
#define MD 1000000007LL

vector< int > al[M],v[M];
int n,sz;
ll p[3][M],qs[3];
queue< int> q,lv;

int main()
{
    freopen("corporate_gifting.txt","r",stdin);
    freopen("corporate_gifting_output.txt","w",stdout);

    int cs=1,t,i,j,k,u,w,ln,l;

    sc(t);
    while(t--){
        sc2(n,j);

        for(i=2;i<=n;i++)
        {
            sc(j);
            al[j].pb(i);
        }

        q.push(1);
        lv.push(0);
        w=0;

        while(!q.empty())
        {
            u=q.front();
            w=lv.front();
            q.pop();
            lv.pop();

            ln=al[u].size();

            if(ln==0)
            {
                p[0][u]=2LL;
                p[1][u]=1LL;
                p[2][u]=1LL;
            }
            else
            {
                v[w].pb(u);
                for(i=0;i<ln;i++)
                {
                    q.push(al[u][i]);
                    lv.push(w+1);
                }
            }
        }


        for(;w>-1;w--)
        {
            ln=v[w].size();

            for(l=0;l<ln;l++)
            {
                u=v[w][l];

                sz=al[u].size();

                qs[0]=1LL;
                qs[1]=2LL;
                qs[2]=3LL;
                for(i=0;i<sz;i++)
                {
                    for(j=0;j<3;j++)
                        qs[j]+=p[j][ al[u][i] ];
                }

                p[0][u]=min(qs[1],qs[2]);
                p[1][u]=min(qs[0],qs[2]);
                p[2][u]=min(qs[0],qs[1]);
                al[u].clear();
            }
            v[w].clear();
        }
        printf("Case #%d: %lld\n",cs++,min(p[0][1],min(p[1][1],p[2][1])));

//        if(t)
//        {
//            for(i=1;i<n;i++)
//                al[i].clear();
//            al[i].clear();
//        }
    }



    return 0;
}

/*
32
0 1 1 1 1 1 2 2 2 2 3 3 3 7 7 7 6 6 6 12 13 13 15 15 15 15 9 9 26 26 26 1
Case #17: 45
Maximum Colour : 3
*/
