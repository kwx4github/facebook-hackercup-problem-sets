#include<stdio.h>
#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
#include<memory.h>
#include<map>
#include<set>
#include<queue>
#include<list>
#include<sstream>
#define mp make_pair
#define pb push_back      
#define F first
#define S second
#define SS stringstream
#define sqr(x) ((x)*(x))
#define m0(x) memset(x,0,sizeof(x))
#define m1(x) memset(x,63,sizeof(x))
#define CC(x) cout << (x) << endl
#define pw(x) (1ll<<(x))
#define M 1000000007
#define N 211111
using namespace std;
typedef pair<int,int> pt;

vector<int> v[N];
int f[N];

int ans;
int n;
int p[N];

int best;

int mem[N][3];


int go(int x, int o) {
	if (mem[x][o] != -1) return mem[x][o];
	
	int ret = o + 1;
	for (int i = 0; i < v[x].size(); i++) {
		int t = 1e9;
		for (int j = 0; j < 3; j++) if (j != o) t = min(t, go(v[x][i], j));
		ret += t;
	}

	mem[x][o] = ret;
	return ret;
}

void zz(int x) {
	if (x == n) {
		for (int i = 1; i < n; i++) if (f[i] == f[p[i] - 1]) return;
		int s = 0;
		for (int i = 0; i < n; i++) s += f[i] + 1;
		best = min(best, s);
		return;
	}
	for (int i = 0; i < n; i++) {
		f[x] = i;
		zz(x + 1);
	}


}

int main(){
	freopen("1.in","r",stdin);	
	freopen("1.out","w",stdout);
	int t;
	cin >> t;
	for (int tt = 1; tt <= t; tt++) {
		cin >> n;
//		n = rand() % 8 + 1;
		for (int i = 0 ; i < n; i++) v[i].clear();
		for (int i = 0; i < n; i++) {
			cin >> p[i];
//			if (i == 0) p[i] = 0; else p[i] = rand() % (i) + 1;
			if (i > 0) v[p[i] - 1].pb(i);
		}
		
		for (int i = 0; i < n; i++) for (int j = 0; j < 3; j++) mem[i][j] = -1;

		ans = min(min(go(0,0), go(0, 1)), go(0, 2));

//		best = 1e9;
//		zz(0);

		cout << "Case #" << tt << ": ";

/*		if (ans != best) {
			cout << n << endl;
			for (int i = 0; i < n; i++) cout << p[i] << " ";
			cout << endl;
			break;
		}*/
		cout << ans << endl;

	}
	return 0;
}