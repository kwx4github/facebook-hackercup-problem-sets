#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <stdlib.h>
#include <sstream>
#include <assert.h>
#include <memory.h>

#include <time.h>
#pragma comment(linker, "/STACK:20000000")

#define fr(i,a,b) for(int i=(int)(a);i<=(int)(b);i++)
#define fd(i,a,b) for(int i=(int)(a);i>=(int)(b);i--)
#define mp make_pair
#define pb push_back
#define ll long long

using namespace std;

int ri(){int x;scanf("%d",&x);return x;}
ll rll(){ll x;scanf("%lld",&x);return x;}

const int wtf = 40;

int dp[205000][wtf];
vector<vector<int> > graph;

int go(int v,int last)
{
	if (dp[v][last] != -1)
		return dp[v][last];
	int res = 1e9;
	for(int j = 1;j < wtf;j++)
	{
		if (j == last)
			continue;
		int now = j;
		for(int i = 0;i < graph[v].size();i++)
		{
			int to = graph[v][i];
			now += go(to,j);
		}
		res = min(res,now);
	}
	return dp[v][last] = res;
}

void solve()
{
	int test = ri();
	fr(testing,1,test)
	{
		int n = ri();
		graph.clear();
		graph.resize(n + 1);
		fr(i,1,n)
		{
			int p = ri();
			graph[p].pb(i);
			//graph[i - 1].pb(i);
		}
		memset(dp,-1,sizeof(dp));
		int res = 1e9;
		fr(i,1,wtf - 1)
			res = min(res,go(1,i));
		printf("Case #%d: %d\n",testing,res);
	}
}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("C:/Users/CleRIC/Desktop/Универ/acm.timus.ru/input.txt","rt",stdin);
		freopen("C:/Users/CleRIC/Desktop/Универ/acm.timus.ru/output.txt","wt",stdout);
	#else
		//freopen("input.in","rt",stdin);
		//freopen("output.out","wt",stdout);
	#endif

	solve();

	#ifndef ONLINE_JUDGE
		printf("\n\ntime-%.3lf",clock()*1e-3);
	#endif

	return 0;
}