#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <set>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
//#include <bits/stdc++.h>
using namespace std;

#define left(i) ((i)<<1)
#define right(i) (((i)<<1)+1)
#define inf 0x3F3F3F3F
#define linf 0x3F3F3F3F3F3F3F3FLL

typedef long long ll;
typedef pair<int,int> pii;

vector<int> graph[212345];
pii best[212345];
pii sec[212345];
int diff[212345];


int dfs(int a)
{
	for(int i = 0; i < graph[a].size(); i++)
		dfs(graph[a][i]);
	
	for(int i = 1; i <= int(graph[a].size()) + 2; i++)
		diff[i] = 0;

	int sum = 0;
	for(int i = 0; i < graph[a].size(); i++)
		sum += best[graph[a][i]].second;
			
	for(int i = 0; i < graph[a].size(); i++)
		diff[best[graph[a][i]].first] += (best[graph[a][i]].second - sec[graph[a][i]].second);
	
	best[a] = sec[a] = pii(0, inf);
	for(int i = 1; i <= int(graph[a].size()) + 2; i++)
	{
		pii tmp(i, i + sum - diff[i]);
		if(tmp.second < sec[a].second)
			sec[a] = tmp;
		if(sec[a].second < best[a].second)
			swap(best[a], sec[a]);
	}
	return best[a].second;
}

int
main(void)
{
	int T;
	scanf("%d", &T);
	for(int t = 1; t <= T; t++)
	{
		printf("Case #%d: ", t);
		int n, a;
		scanf("%d", &n);
		for(int i = 0; i <= n; i++)
			graph[i].clear();
		for(int i = 1; i <= n; i++)
		{
			scanf("%d", &a);
			graph[a].push_back(i);
		}
		printf("%d\n", dfs(1));
	}
	return 0;
}
























