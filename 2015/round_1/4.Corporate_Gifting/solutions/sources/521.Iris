const
    fi='corporateinp.txt';
    fa='corporateout.txt';
    maxN=201000;
var
    n,m,t,i:longint;
    f:array[0..maxN,1..11] of longint;
    a,gh,ke:array[0..maxN+10] of longint;

procedure nhap;
var
    i:longint;
begin
    read(n);
    for i:=1 to n+2 do gh[i]:=0;
    for i:=1 to n do
    begin
        read(a[i]);
        inc(gh[a[i]]);
    end;
    for i:=1 to n+1 do gh[i]:=gh[i]+gh[i-1];
    for i:=1 to n do
    begin
        ke[gh[a[i]]]:=i;
        dec(gh[a[i]]);
    end;
end;

procedure dfs(u:longint);
var
    i,j,m1,m2:longint;
begin
    for i:=1 to 11 do f[u][i]:=0;
    for i:=gh[u]+1 to gh[u+1] do
    begin
        dfs(ke[i]);
        if f[ke[i]][1]<f[ke[i]][2] then
        begin
            m1:=1;
            m2:=2;
        end else begin
            m1:=2;
            m2:=1;
        end;
        for j:=3 to 11 do
            if (f[ke[i]][j]<f[ke[i]][m1]) then
            begin
                m2:=m1;
                m1:=j;
            end else if (f[ke[i]][j]<f[ke[i]][m2]) then m2:=j;
        for j:=1 to 11 do
            if (j=m1) then f[u][j]:=f[u][j]+f[ke[i]][m2] else f[u][j]:=f[u][j]+f[ke[i]][m1];
    end;
    for i:=1 to 11 do f[u][i]:=f[u][i]+i;
end;

function gmin(x,y:longint):longint;
begin
    if x<y then exit(x);
    exit(y);
end;

procedure xuly;
var
    i,ans:longint;
begin
    dfs(0);
    ans:=f[1][1];
    for i:=1 to 11 do ans:=gmin(ans,f[1][i]);
    writeln(ans);
end;

begin
    assign(input,fi);
    reset(input);
    assign(output,fa);
    rewrite(output);
    read(t);
    for i:=1 to t do
    begin
        write('Case #',i,': ');
        nhap;
        xuly;
    end;
    close(input);
    close(output);
end.
