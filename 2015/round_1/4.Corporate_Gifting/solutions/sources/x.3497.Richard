import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

/**
 * Created by Richard Zhang on 1/18/15.
 */
public class Gifting {
    public static void main(String[] args) {
        if (args.length < 1) {
            log("Please provide input file");
            System.exit(0);
        }

        Case[] cases = readCases(args[0]);
        if (cases == null) {
            System.exit(0);
        }

        for (int i = 0; i < cases.length; i++) {
            log("Case #" + (i + 1) + ": " + cases[i].getMinDollar());
        }
    }

    private static Case[] readCases(String path) {
        try {
            FileReader fileReader = new FileReader(path);
            BufferedReader bufferedReader = new BufferedReader(fileReader);

            String line = bufferedReader.readLine();
            int n = Integer.parseInt(line);
            if (n < 1 || n > 100) {
                log("Invalid number of cases " + n);
                System.exit(0);
            }

            Case[] cases = new Case[n];
            for (int i = 0; i < n; i++) {
                line = bufferedReader.readLine();
                cases[i] = new Case(line, bufferedReader);
            }

            return cases;
        } catch (FileNotFoundException e) {
            log("File not found");
            System.exit(0);
        } catch (IOException e) {
            log("Error in reading file " + path);
            System.exit(0);
        } catch (Exception e) {
            log("error in reading file " + e.getMessage());
        }

        return null;
    }

    private static void log(String line) {
        System.out.println(line);
    }

    private static class Case {
        boolean[] oddEven;

        public Case(String line, BufferedReader reader) throws Exception {
            int length = Integer.valueOf(line);

            line = reader.readLine();
            String[] managers = line.split(" ");
            oddEven = new boolean[managers.length];
            for (int i = 1; i < managers.length; i++) {
                int manager = Integer.valueOf(managers[i]) - 1;
                oddEven[i] = !oddEven[manager];
            }
        }

        public int getMinDollar() {
            int count_odd = 0;
            int count_even = 0;
            for (int i = 0; i < oddEven.length; i++) {
                if (oddEven[i]) {
                    count_odd++;
                } else {
                    count_even++;
                }
            }

            return count_odd > count_even? count_odd + count_even * 2 : count_even + count_odd * 2;
        }
    }
}

