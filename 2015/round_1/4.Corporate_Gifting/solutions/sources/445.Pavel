#include <cstdio>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cmath>
#include <bitset>
#include <set>
#include <map>
#include <string>
#include <string.h>

using namespace std;

const int magic = 15;
vector<int>v[200100];
int n;
int f[200100][magic];
int mint[200100][magic];
int was[200100];

void rec(int x, int ac)
{
	vector<int>g;
	for (int i=0; i<v[x].size(); i++)
	{
		int to = v[x][i];
		if ( to == ac ) continue;
		rec(to, x);
		g.push_back(to);
	}
	for (int i=1; i<=magic; i++)
	{
		int res = 0;
		for (int j=0; j<g.size(); j++)
			res += mint[g[j]][i];
		res += i;
		f[x][i] = res;
	}
	int minx = (1<<20), whx, miny = (1<<20), why;
	for (int i=1; i<=magic; i++)
		if ( f[x][i] < minx )
		{
			minx = f[x][i];
			whx = i;
		}
	for (int i=1; i<=magic; i++)
		if ( i != whx && f[x][i] < miny )
		{
			miny = f[x][i];
			why = i;
		}
	for (int i=1; i<=magic; i++)
	{
		if ( i == whx )
			mint[x][i] = miny;
		else
			mint[x][i] = minx;
	}
}
void solve(int test)
{
	scanf("%d", &n);
	for (int i=1; i<=n; i++)
		v[i].clear();
	//memset(was, -1, sizeof(was));
	for (int i=1; i<=n; i++)
	{
		int x;
		scanf("%d", &x);
		if ( i == 1 ) continue;
		v[i].push_back(x);
		v[x].push_back(i);
	}
	/*int ans = 0;
	for (int i=1; i<=n; i++)
	{
		if ( was[i] != -1 ) continue;
		vector<int>q;
		was[i] = 0;
		q.push_back(i);
		int st = 0;
		while ( st < q.size() )
		{
			int x = q[st]; st++;
			for (int j=0; j<v[x].size(); j++)
			{
				int to = v[x][j];
				if ( was[to] == -1 )
				{
					was[to] = was[x]^1;
					q.push_back(to);
				}
			}
		}
		int a0 = 0, a1 = 0;
		for (int j=0; j<q.size(); j++)
		{
			if ( was[ q[j] ] == 0 ) 
				a0++;
			else
				a1++;
		}
		ans += 2*min(a0, a1) + max(a0, a1);
	}*/
	
	rec(1, -1);
	int ans = (1<<29);
	for (int i=1; i <= magic; i++)
		ans = min(ans, f[1][i]);
	printf("Case #%d: %d\n", test, ans);
}

/*
int rec(int x)
{
	if ( x <= 0 ) return rand();
	
	int ar[10];
	for (int i=0; i<10; i++) ar[i] = rand();	
	int y = ar[rand()%10];
	return y^ar[2]^rec(x-1);
}
*/
int main()
{
	freopen("corporate_gifting.txt", "r", stdin);
	freopen("outputD.txt", "w", stdout);
	int test;
	scanf("%d", &test);
	for (int i=1; i<=test; i++)
		solve(i);
	return 0;
}
