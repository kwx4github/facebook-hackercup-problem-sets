#include <stdio.h>
#include <vector>
#include <iostream>

using namespace std;

const int K = 20;
const int INF = 1e9;
const int N = 5e5;

int f[N][K], nom1[N], nom2[N], min1[N], min2[N], n, cntT;
vector<int> g[N];

void dfs(int x, int px = -1) {
	for (int i = 0; i < K; i++) f[x][i] = INF; 
	for (int i = 0; i < g[x].size(); i++) {
		int y = g[x][i];
		if (y == px) continue;
		dfs(y, x);
	}
	nom1[x] = nom2[x] = -1;
	min1[x] = min2[x] = INF;
	for (int it = 0; it < K; it++) {
		int sum = it + 1;
		for (int i = 0; i < g[x].size(); i++) {
			int y = g[x][i];
			if (y == px) continue;
			int cur;
			if (nom1[y] == it) {
				cur = min2[y];
			} else {
				cur = min1[y];
			}
			sum += cur;
			if (sum > INF) sum = INF;
		}
		f[x][it] = sum;
		if (sum <= min1[x]) {
			nom2[x] = nom1[x];
			min2[x] = min1[x];
			nom1[x] = it;
			min1[x] = sum;
		} else if (sum < min2[x]) {
			nom2[x] = it;
			min2[x] = sum;
		}
	}
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	scanf("%d", &cntT);
	for (int tt = 1; tt <= cntT; tt++) {
		scanf("%d", &n);
		for (int i = 0; i < n; i++) g[i].clear();
		for (int i = 0; i < n; i++) {
			int x;
			scanf("%d", &x);
			--x;
			if (x < 0) continue;
			g[x].push_back(i);
		}
		dfs(0);
		int ans = INF;
		for (int i = 0; i < K; i++) ans = min(ans, f[0][i]);
		cout << "Case #" << tt << ": " << ans << endl;
	}
}
