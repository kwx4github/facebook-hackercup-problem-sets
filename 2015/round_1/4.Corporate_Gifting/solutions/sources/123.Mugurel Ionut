#include <stdio.h>
#include <stdlib.h>
#include <vector>

using namespace std;

#define NMAX 222222
#define CMAX 100

int parent[NMAX], N;
vector<int> child[NMAX];
int q[NMAX], li, ls;
int cmin[NMAX][CMAX], idxmin1[NMAX], idxmin2[NMAX];

void Compute() {
	int i, j, k, c;
	if (parent[1] != 0) exit(123);
	for (i = 1; i <= N; i++) child[i].clear();
	for (i = 2; i <= N; i++)
		child[parent[i]].push_back(i);
	q[li = ls = 1] = 1;
	while (li <= ls) {
		i = q[li];
		li++;
		for (j = 0; j < child[i].size(); j++) {
			ls++;
			q[ls] = child[i][j];
		}
	}
	if (ls != N) exit(124);
	for (li = N; li >= 1; li--) {
		i = q[li];
		idxmin1[i] = idxmin2[i] = 0;
		for (c = 1; c <= N && c < CMAX; c++) {
			cmin[i][c] = c;
			for (j = 0; j < child[i].size(); j++) {
				k = child[i][j];
				if (idxmin1[k] != c) cmin[i][c] += cmin[k][idxmin1[k]];
				else cmin[i][c] += cmin[k][idxmin2[k]];
			}
		
			if (idxmin1[i] == 0 || cmin[i][c] < cmin[i][idxmin1[i]]) {
				idxmin2[i] = idxmin1[i];
				idxmin1[i] = c;
			} else if (idxmin2[i] == 0 || cmin[i][c] < cmin[i][idxmin2[i]])
				idxmin2[i] = c;
		}
	
		if (idxmin1[i] == 0) exit(125);
		if (N >= 2) {
			if (idxmin2[i] == 0) exit(126);
			if (idxmin1[i] == idxmin2[i]) exit(127);
			if (cmin[i][idxmin1[i]] > cmin[i][idxmin2[i]]) exit(128);
			for (c = 1; c <= N && c < CMAX; c++) {
				if (cmin[i][c] < cmin[i][idxmin1[i]]) exit(129);
				if (c != idxmin1[i] && cmin[i][c] < cmin[i][idxmin2[i]]) exit(130);
			}
		}
	}
}

int main() {
	freopen("corporate_gifting.txt", "r", stdin);
	freopen("corporate_gifting.out", "w", stdout);
	int T, t, i, ans;
	scanf("%d", &T);
	for (t = 1; t <= T; t++) {
		scanf("%d", &N);
		for (i = 1; i <= N; i++)
			scanf("%d", &parent[i]);
		Compute();
		ans = cmin[1][1];
		for (i = 2; i <= N && i < CMAX; i++)
			if (cmin[1][i] < ans) ans = cmin[1][i];
		printf("Case #%d: %d\n", t, ans);
		fprintf(stderr, "%d/%d done\n", t, T);
	}
	return 0;
}
