#include <bits/stdc++.h>

typedef long long int li;

#define F(i, n) for(i = 0;i < n; ++i)
#define FI(i, st, ft) for(i = st;i <= ft; ++i)
#define pb(a, b) a.push_back(b)
#define MAXN 100005
#define mp make_pair
#define fi first
#define se second
#define inf 1000000000ll

using namespace std;

vector <li> g[200005];
vector <li> g1[200005];
li dp[200005][4];
li vis[200005];

li kl;
li cnt, n;

void solve()
{
	queue <li> q;

	memset(vis, 0, sizeof vis);

	li i, k, j;
	F(i, n){
		//cout << g[i].size() << " ";
		if(g[i].size() == 0){
		//	cout << i << "\n";
			q.push(i);
		}
	}

	while(!q.empty()){
		li f = q.front();
		q.pop();
		F(k, 3){
			li cur = k + 1;
			F(j, g[f].size()){
				if(k == 0) cur += min(dp[g[f][j]][1], dp[g[f][j]][2]);
				if(k == 1) cur += min(dp[g[f][j]][2], dp[g[f][j]][0]);
				if(k == 2) cur += min(dp[g[f][j]][1], dp[g[f][j]][0]);
			}
			dp[f][k] = cur;
		}
		if(g1[f].size() > 0){
			++vis[g1[f][0]];
			if(vis[g1[f][0]] == g[g1[f][0]].size()){
				q.push(g1[f][0]);
			}
		}
	}
}

int main()
{
	freopen("corporate_gifting.txt", "r", stdin);
	freopen("output1.txt", "w", stdout);

	li t;
	cin >> t;
	for(kl = 0;kl < t; ++kl){
		li t1, i, ans = inf;
		for(i = 0;i < 200005; ++i){
			g[i].clear();
			g1[i].clear();
		}
		memset(dp, 0, sizeof dp);
		cin >> n;
		cin >> t1;
		for(i = 1;i < n; ++i){
			cin >> t1;
			g[t1 - 1].push_back(i);
			g1[i].push_back(t1 - 1);
		}
		solve();
		printf("Case #%lld: %lld\n", ++cnt, min(dp[0][0], min(dp[0][1], dp[0][2])));
	}
	return 0;
}
