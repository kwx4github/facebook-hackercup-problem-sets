#include <stdio.h>
#include <stdlib.h>

const int N_max=200000;

int min(int a, int b)
{
	if (a<b)
		return a;
	else
		return b;
}

void swap(int *a, int *b)
{
	int t;
	t=*a;
	*a=*b;
	*b=t;
}

int st_len=0,*stack;

void push(int a)
{
	stack[st_len]=a;
	st_len++;
}

int pop()
{
	st_len--;
	return stack[st_len];
}

int main()
{
	int t,T, n,N,n0, *K,*K0,k,k0, l,g, *p, **_p, *lev,lev_max, **money;
	FILE *input,*output;
	input=fopen("corporate_gifting.txt","r");
	//input=stdin;
	output=fopen("output.txt","w");
	//output=stdout;
	p=(int*)malloc((N_max+1)*sizeof(int));
	_p=(int**)malloc((N_max+1)*sizeof(int*));
	_p[1]=(int*)malloc(sizeof(int));
	K=(int*)malloc((N_max+1)*sizeof(int));
	K0=(int*)malloc((N_max+1)*sizeof(int));
	lev=(int*)malloc((N_max+1)*sizeof(int));
	stack=(int*)malloc(2*N_max*sizeof(int));
	money=(int**)malloc((N_max+1)*sizeof(int*));
	for (n=1; n<=N_max; n++)
		money[n]=(int*)malloc(4*sizeof(int));
	fscanf(input,"%d",&T);
	for (t=1; t<=T; t++)
	{
		st_len=0;
		fscanf(input,"%d",&N);
		for (n=1; n<=N; n++)
		{
			fscanf(input,"%d",&p[n]);
			lev[n]=0;
			K[n]=0;
			K0[n]=0;
			for (g=1; g<=3; g++)
				money[n][g]=g;
			push(n);
		}
		lev[1]=1;
		lev_max=1;
		while (st_len>0)
		{
			n=pop();
			if (lev[n]==0)
			{
				if (lev[p[n]]==0)
				{
					push(n);
					push(p[n]);
				}
				else
				{
					lev[n]=lev[p[n]]+1;
					if (K[lev[n]]>=K0[lev[n]])
					{
						K0[lev[n]]*=2;
						if (K0[lev[n]]==0)
							K0[lev[n]]=1;
						_p[lev[n]]=(int*)realloc(_p[lev[n]],K0[lev[n]]*sizeof(int));
					}
					_p[lev[n]][K[lev[n]]]=n;
					K[lev[n]]++;
				}
			}
			if (lev[n]>lev_max)
				lev_max=lev[n];
		}
		K[1]=1;
		_p[1][0]=1;
		for (l=lev_max; l>1; l--)
		{
			for (k=0; k<K[l]; k++)
			{
				n=_p[l][k];
				money[p[n]][1]+=min(money[n][2],money[n][3]);
				money[p[n]][2]+=min(money[n][3],money[n][1]);
				money[p[n]][3]+=min(money[n][1],money[n][2]);
			}
		}
		fprintf(output,"Case #%d: %d\n",t,min(money[1][1],money[1][2]));
	}
    return 0;
}
