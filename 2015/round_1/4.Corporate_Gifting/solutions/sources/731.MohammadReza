// .... .... .....!
// ...... ......!
// .... ....... ..... ..!

#include<bits/stdc++.h>
using namespace std;

#define rep(i, n) for (int i = 0, _n = (int)(n); i < _n; i++)
#define fer(i, x, n) for (int i = (int)(x), _n = (int)(n); i < _n; i++)
#define rof(i, n, x) for (int i = (int)(n), _x = (int)(x); i-- > _x; )
#define sz(x) (int((x).size()))
#define pb push_back
#define all(X) (X).begin(),(X).end()
#define X first
#define Y second

template<class P, class Q> inline void smin(P &a, Q b) { if (b < a) a = b; }
template<class P, class Q> inline void smax(P &a, Q b) { if (a < b) a = b; }

typedef long long ll;
typedef pair<int, int> pii;

////////////////////////////////////////////////////////////////////////////////

const int inf = 1<<28;
const int maxn = 200000 + 200;
const int maxr = 30;

int n;
vector<int> child[maxn];
int dp[maxn][maxr], dpn[maxn][maxr];

void dfs(int u) {
	for(int v: child[u]) dfs(v);
	rep(c, maxr) dpn[u][c] = inf;
	rep(c, maxr) {
		dp[u][c] = c;
		for(int v: child[u])
			dp[u][c] += dpn[v][c];
		rep(t, maxr) if(c != t) smin(dpn[u][t], dp[u][c]);
	}
}

void run() {
	cin >> n;
	rep(i, n) {
		int p; cin >> p; p--;
		if(p != -1) child[p].pb(i);
	}
	dfs(0);
	cout << *min_element(dp[0], dp[0] + maxr) + n << endl;
	rep(i, n) child[i].clear();
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);

	int ttt; cin >> ttt;
	fer(ttc, 1, ttt+1) {
		cout << "Case #" << ttc << ": ";
		run();
	}


	return 0;
}

