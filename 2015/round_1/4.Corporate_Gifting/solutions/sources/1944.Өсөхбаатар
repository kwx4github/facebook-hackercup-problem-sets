#include <cstdio>
#include <vector>
#include <cstring>

#define MAX 1000000000
#define min(a, b) a < b ? a : b

using namespace std;

int dp[200001][20];
vector <int> adj[200001];
int deg[200001], N, n = 30;

int dfs(int v, int k) {
    if (dp[v][k]) return dp[v][k];
    int ret = k;
    for (int i = 0; i < deg[v]; i++) {
        int res = MAX;
        for (int j = 1; j <= n; j++) {
            if (j != k) {
                int temp = dfs(adj[v][i], j);
                res = min(res, temp);
            }
        }
        ret += res;
    }
    return dp[v][k] = ret;
}

void clear() {
    memset(deg, 0, sizeof deg);
    memset(dp, 0, sizeof dp);
    for (int i = 0; i <= N; i++)
        adj[i].clear();
}

int main() {
    //freopen("4.in.txt", "r", stdin);
    //freopen("4.out.txt", "w", stdout);

    int t = 0, T, p;
    scanf("%d", &T);
    while (T--) {
        scanf("%d", &N);
        for (int i = 1; i <= N; i++) {
            scanf("%d", &p); deg[p]++;
            adj[p].push_back(i);
        }
        printf("Case #%d: %d\n", ++t, dfs(0, n + 1) - (n + 1));
        clear();
    }
    return 0;
}
