#include <iostream>
#include <vector>
using namespace std;
typedef vector<int> VI;
typedef vector<VI> MI;

MI memo;
MI G;
const int inf = 1e9;

int f(int u, int x) {
  if (memo[u][x] != -1) return memo[u][x];

  int mn = inf;
  for (int i = 1; i <= 3; ++i) if (i != x) {
    int t = i;
    for (int v : G[u]) t += f(v, i);
    mn = min(mn, t);
  }
  return memo[u][x] = mn;
}

int main() {
  int T; cin >> T;
  int cas = 0;
  while (T--) {
    int n;
    cin >> n;
    G = MI(n);
    for (int i = 0; i < n; ++i) {
      int u; 
      cin >> u; --u;
      if (i) G[u].push_back(i);
    }
    memo = MI(n, VI(4, -1));
    cout << "Case #" << ++cas << ": " << f(0, 3) << endl;
  }
}
