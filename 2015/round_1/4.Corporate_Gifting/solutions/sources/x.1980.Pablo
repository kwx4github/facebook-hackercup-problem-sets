#include <algorithm>
#include <iostream>
#include <set>
#include <vector>

using namespace std;
typedef unsigned long long ull;

int const MAXN = 200010;
int mg[MAXN];
vector<int> sub[MAXN];

pair<int,ull> solve(int i) {
  if (sub[i].empty()) {
    return make_pair(1, 1);
  }
  pair<int,ull> rv;  
  set<int> all;
  for (int s : sub[i]) {
    auto r = solve(s);
    rv.second += r.second;
    all.insert(r.first);
  }
  rv.first = 1;
  for (int g : all)
    if (rv.first != g)
      break;
    else
      ++rv.first;
  rv.second += rv.first;
  //cerr << "Employee " << (i+1) << " gifts " << rv.first << " for a total of " << rv.second << endl;
  return rv;
}

int main() {
  cin.sync_with_stdio(false);
  int T; cin >> T;
  for (int C = 1; C <= T; C++) {
    int n; cin >> n;
    for (int i = 0; i != n; ++i) sub[i].clear();
    for (int i = 0; i != n; ++i) {
      cin >> mg[i];
      if (mg[i])
        sub[--mg[i]].push_back(i);
    }
    cout << "Case #" << C << ": " << solve(0).second << '\n';
  }
}