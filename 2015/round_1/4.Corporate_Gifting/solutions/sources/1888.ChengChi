//+-------------------------------------+
//|     By   qwer_zcc                   |
//|     Date 30/10/2014                 |
//+-------------------------------------+
#include <bits/stdc++.h>
#define INF (int(2e9))
#define LLINF ((LL)(1e18))
#define LL long long
#define uLL unsigned long long
#define uint unsigned int
#define D double
#define LD long double
#define rep(i,a,b) for (int i=a;i<=b;i++)
#define drep(i,a,b) for (int i=a;i>=b;i--)
#define M(a) memset(a,0,sizeof(a));
#define pb push_back
#define mp make_pair
#define Pi M_PI
using namespace std;
template<class T> inline T min(T &a,T &b) {return a<b?a:b;}
template<class T> inline T max(T &a,T &b) {return a>b?a:b;}
template<class T> void read(T &x)
{
    char ch;
    while ((ch=getchar()) && !(ch>='0'&&ch<='9'));x=ch-'0';
    while ((ch=getchar()) && (ch>='0'&&ch<='9')) x=x*10+ch-'0';
}
LL Pow(LL a,LL b,LL mod) {LL res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
LL Pow(LL a,LL b) {LL res=1;for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}
const int limit=20,N=210000;
vector<int> E[N];
int f[N][23],n,pre[N][23],nxt[N][23];
void dfs(int w,int Fa)
{
	rep(j,1,limit) f[w][j]=j;
	for (int i=0;i<E[w].size();i++)
	if (E[w][i]!=Fa)
	{
		dfs(E[w][i],w);
		rep(j,1,limit) f[w][j]+=min(pre[E[w][i]][j-1],nxt[E[w][i]][j+1]);
	}
	pre[w][0]=INF;nxt[w][limit+1]=INF;
	rep(i,1,limit) pre[w][i]=min(pre[w][i-1],f[w][i]);
	drep(i,limit,1) nxt[w][i]=min(nxt[w][i+1],f[w][i]);
}
void work()
{
	scanf("%d",&n);int x;
	rep(i,1,n) E[i].clear();
	rep(i,1,n)
	{
		scanf("%d",&x);
		if (x) E[x].pb(i);
	}
	dfs(1,0);
	int ans=INF;
	rep(i,1,limit) ans=min(ans,f[1][i]);
	printf("%d\n",ans);
}
int main()
{
	//freopen("corporate_gifting.txt","r",stdin);
	//freopen("me.out","w",stdout);
	int cs;
	scanf("%d",&cs);
	rep(_,1,cs) printf("Case #%d: ",_),work();
}

