import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main implements Runnable {
    int maxPrice = 0;
    class Node {
        static final int MAXP = 50;
        int[] mins = new int[MAXP + 1];
        ArrayList<Node> children = new ArrayList<Node>();
        void calc() {
            for (Node q : children) {
                q.calc();
            }
            for (int m = 1; m <= MAXP; m++) {
                mins[m] = m;
                for (Node q : children) {
                    int w = -1;
                    for (int i = 1; i <= MAXP; i++) if (i != m) {
                        if (w == -1 || q.mins[i] < q.mins[w]) w = i;
                    }
                    maxPrice = Math.max(maxPrice, w);
                    mins[m] += q.mins[w];
                }
            }
        }
    }
    int solveTest() {
        int n = nextInt();
        Node[] nodes = new Node[n + 1];
        for (int i = 1; i <= n; i++) nodes[i] = new Node();
        for (int i = 1; i <= n; i++) {
            int j = nextInt();
            if (j != 0) {
                nodes[j].children.add(nodes[i]);
            }
        }
        nodes[1].calc();
        int ans = nodes[1].mins[1];
        for (int i = 2; i <= Node.MAXP; i++) ans = Math.min(ans, nodes[1].mins[i]);
        return ans;
    }
    void solve() {
        int t = nextInt();
        for (int i = 1; i <= t; i++) {
            maxPrice = 0;
            out.println("Case #" + i + ": " + solveTest());
            System.err.println("Case #" + i + ": " + maxPrice);
        }
    }
    int nextInt() {
        return Integer.parseInt(nextToken());
    }
    String nextToken() {
        try {
            while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
            return st.nextToken();
        } catch (Exception e) {
            return null;
        }
    }
    BufferedReader in;
    PrintWriter out;
    StringTokenizer st;
    public void run() {
        try {
            in = new BufferedReader(new FileReader("input.txt"));
            out = new PrintWriter("output.txt");
            solve();
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        } finally {
            out.close();
        }
    }
    public static void main(String[] args) {
        new Thread(null, new Main(), "1", 1 << 28).start();
    }
}
