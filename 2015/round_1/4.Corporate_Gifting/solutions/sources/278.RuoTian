#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int t,n;
int H[300000],deep[300000],X[300000],P[300000],tot;
int dp[300000][25];
int mn[300000][25];
inline void add(int x,int y){
	P[++tot]=y;X[tot]=H[x];H[x]=tot;
}
void dfs(int x){
	for(int i=H[x];i;i=X[i]){
		deep[P[i]]=deep[x]+1;
		dfs(P[i]);
	}
	for(int i=1;i<25;i++){
		dp[x][i]=i;
		for(int j=H[x];j;j=X[j]){
			dp[x][i]+=mn[P[j]][i];
		}
	}
	for(int i=1;i<25;i++){
		for(int j=1;j<25;j++){
			if(i!=j) mn[x][i]=min(mn[x][i],dp[x][j]);
		}
	}
}
int main(){
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
	scanf("%d",&t);
	for(int tt=1;tt<=t;tt++){
		scanf("%d",&n);
		memset(H,0,sizeof H);
		memset(dp,0x3f,sizeof dp);
		memset(mn,0x3f,sizeof mn);
		tot=0;
		memset(deep,0,sizeof deep);
		for(int i=1,x;i<=n;i++){
			scanf("%d",&x);
			if(x) add(x,i);
		}
		deep[1]=1;
		dfs(1);
		int ans=0x7fffffff;
		for(int i=1;i<25;i++) ans=min(ans,dp[1][i]);
		printf("Case #%d: %d\n",tt,ans);
	}
	return 0;
}

