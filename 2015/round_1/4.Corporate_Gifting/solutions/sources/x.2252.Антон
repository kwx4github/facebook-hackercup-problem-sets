#include <bits/stdc++.h>

using namespace std;

int foo(){
    int n;
    scanf("%d", &n);
    vector <int> u(n);
    vector <int> parent(n);
    vector < vector<int> > g(n);
    for (int i = 0; i < n; ++i) {
        int x;
        scanf("%d", &x);
        --x;
        parent[i] = x;
        if (x < 0) {
            continue;
        }
        g[x].push_back(i);
        ++u[x];
    }
    queue <int> q;
    vector <int> din[2], element[2];
    for (int i = 0 ; i < 2; ++i) {
        din[i].assign(n, 1 << 29);
        element[i].resize(n);
    }
    for (int i = 0; i < n; ++i) {
        if (u[i] == 0) {
            q.push(i);
            din[0][i] = 1;
            element[0][i] = 1;
            din[1][i] = 2;
            element[1][i] = 2;
        }
    }
    while (!q.empty()) {
        int v = q.front();
        q.pop();
        if (v == 0) {
            break;
        }
        --u[parent[v]];
        if (u[parent[v]] > 0) {
            continue;
        }
        v = parent[v];
        q.push(v);
        int s = 0;
        map <int, int> mp;
        for (int i = 0; i < g[v].size(); ++i) {
            int to = g[v][i];
            s += din[0][to];
            mp[element[0][to]] += din[1][to] - din[0][to];
        }
        int k = 0;
        bool flag = true;
        mp[n + 1] = 1 << 29;
        for (auto i : mp) {
            if (i.first != k + 1 && flag && k + 1 <= n) {
                flag = false;
                if (din[0][v] > s + k + 1) {
                    element[1][v] = element[0][v];
                    din[1][v] = din[0][v];
                    element[0][v] = k + 1;
                    din[0][v] =  s + k + 1;
                }
                else {
                    if (din[1][v] > s + k + 1) {
                        element[1][v] = k + 1;
                        din[1][v] = s + k + 1;
                    }
                }
            }
            k = i.first;
            if (din[0][v] > s + i.second + i.first) {
                element[1][v] = element[0][v];
                din[1][v] = din[0][v];
                element[0][v] = i.first;
                din[0][v] =  s + i.second + i.first;
                continue;
            }
            if (din[1][v] > s + i.second + i.first) {
                element[1][v] = i.first;
                din[1][v] =  s + i.second + i.first;
           }
        }
    }
    return din[0][0];
}

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w" ,stdout);
    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; ++i) {
        printf("Case #%d : %d\n", i + 1, foo());
    }
    return 0;
}
