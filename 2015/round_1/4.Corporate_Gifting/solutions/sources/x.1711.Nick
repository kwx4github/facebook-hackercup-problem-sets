import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.Scanner;


public class gifting {
	static long oo = 987654321987654321L;
	static long guess = 0;
	static LinkedList<Integer>[] G; 
	static Long[][] memo;
	static boolean[][] visited;
	public static void main(String[] args) throws FileNotFoundException {
		Scanner sc = new Scanner(new File("gifting.in"));
		PrintWriter out = new PrintWriter(new File("gifting.out"));
		int T = sc.nextInt();
		for(int t=1;t<=T;t++){
			int N = sc.nextInt();
			guess = Math.min(N,3);
			visited = new boolean[N][(int) (guess+1)];
			G= new LinkedList[N];
			for(int a=0;a<N;a++)
				G[a] = new LinkedList<Integer>();
			int[] array= new int[N];
			for(int a=0;a<N;a++){
				array[a]=sc.nextInt()-1;
			}
			for(int a=1;a<N;a++){
				G[array[a]].add(a);
			}
			long ans = magic(0,0);
			
			out.printf("Case #%d: %d%n",t,ans);
			System.out.printf("Case #%d: %d%n",t,ans);
		}
		out.close();
	}

	private static long magic(int pos, int last) {
		if(visited[pos][last])return last;
		visited[pos][last]=true;
		long ans = oo;
		for(int a=1;a<=guess;a++){
			if(a==last)continue;
			long cur = a;
			for(Integer x : G[pos])
				cur+=magic(x,a);
			ans = Math.min(ans, cur);
		}
		return ans;
	}
}
