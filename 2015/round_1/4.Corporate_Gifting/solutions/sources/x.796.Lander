#include <iostream>
#include <vector>
#include <string>
#include <cmath>
#include <queue>
#include <map>
#include <algorithm>

#define fii(x,y) for(int i=x;i<y;i++)
#define fjj(x,y) for(int j=x;j<y;j++)
#define fkk(x,y) for(int k=x;k<y;k++)
#define fi(x) fii(0,x)
#define fj(x) fjj(0,x)
#define fk(x) fkk(0,x)
#define eps 0.0000000001
#define inf 1<<28

using namespace std;

typedef long long ll;
typedef vector <int> VI;
typedef vector <VI> VVI;
typedef vector <VVI> VVVI;
typedef vector <ll> VL;
typedef vector <VL> VVL;
typedef vector <double> VD;
typedef vector <VD> VVD;
typedef vector <bool> VB;
typedef vector <VB> VVB;
typedef queue <int> QI;
typedef pair<int,int> PI;
typedef pair<int,PI> PT;
typedef queue<PI> QPI;
typedef priority_queue<PT> QPT;
typedef pair<double,double> PD;
typedef map<int,int> MII;
typedef vector<MII> VMII;
typedef vector<PI> VPI;

int main()
{
  int T;
  cin >> T;
  for (int caso = 1; caso <= T; caso++)
  {
    int n;
    cin >> n;
    VI pad(n);
    fi (n) cin >> pad[i];
    fi (n) pad[i]--;
    VVI hij (n);
    fii (1,n) hij[pad[i]].push_back(i);
    VI dg (n,1);
    dg[0] = 0;
    fii (1, n) dg[pad[i]]++;
    VPI prim (n);
    VPI seg (n);
    for (int i = n-1; i >= 0; i--)
    {
      VPI tod;
      int sm = 0;
      fj (hij[i].size())
        sm += prim[hij[i][j]].first;
      VI pen(dg[i]+2,0);
      fj (hij[i].size())
      {
        int h = hij[i][j];
        pen[prim[h].second] += seg[h].first-prim[h].first;
      }
      fjj (1,dg[i]+2)
      {
        tod.push_back(PI(sm+j+pen[j],j));
      }
      sort(tod.begin(),tod.end());
      prim[i] = tod[0];
      seg[i] = tod[1];
    }
    cout << "Case #" << caso << ": " << prim[0].first << endl;
  }
}