#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;
#define N 210000

static int ps[N];
static vector<int> v[N];

void gogo(int x){
	if(v[x].size()==0){
		ps[x]=1;
		return;
	}
	vector<int> v2;
	for(int i=0;i<v[x].size();i++)
		gogo(v[x][i]),v2.push_back(ps[v[x][i]]);
	sort(v2.begin(),v2.end());
	if(v2.front()>1){
		ps[x]=1;
		return;
	}
	ps[x]=-1;
	for(int i=0;i<v2.size()-1;i++)
		if(v2[i]+1<v2[i+1]){
			ps[x]=v2[i]+1;
			break;
		}
	if(ps[x]==-1)
		ps[x]=v2.back()+1;
}



int main(){
	int t,tk=1;
	scanf("%d",&t);
	while(t--){
		int n;
		scanf("%d",&n);
		for(int i=0;i<=n;i++)
			v[i].clear();
		for(int i=0;i<n;i++){
			int x;
			scanf("%d",&x);
			v[x].push_back(i+1);
		}
		gogo(1);
		int ans=0;
		for(int i=1;i<=n;i++)
			ans+=ps[i];
		printf("Case #%d: %d\n",tk++,ans);
	}
}
