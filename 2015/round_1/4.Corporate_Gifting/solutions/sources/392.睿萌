#pragma comment(linker, "/STACK:36777216")
#include <map>
#include <set>
#include <cmath>
#include <ctime>
#include <queue>
#include <stack>
#include <cstdio>
#include <string>
#include <vector>
#include <iomanip>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#define  lc(x) (x << 1)
#define  rc(x) (lc(x) + 1)
#define  lowbit(x) (x & (-x))
#define  PI    (acos(-1))
#define  lowbit(x) (x & (-x))
#define  LL    long long
#define  DB    double
#define  ULL   unsigned long long
#define  PII   pair<int, int>
#define  PLL   pair<LL, LL>
#define  PB    push_back
#define  MP    make_pair

using namespace std;

const int N = 2e5 + 7;
const int M = N * N * 2;
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const DB  EPS = 1e-8;

struct Edge {
    int v, next;
} e[N << 1];

int first[N], ecnt, cas;
int f[N][55], lmn[55], rmn[55];

void Addedge(int u, int v) {
    e[++ ecnt].v = v, e[ecnt].next = first[u], first[u] = ecnt;
}

void Gao(int u) {
//    cout << u << endl;
    int sz = 0;
    for(int i = 1; i <= 50; i ++)
        f[u][i] = 0;
    for(int i = first[u]; i != -1; i = e[i].next) {
        int v = e[i].v;
        Gao(v);
        lmn[0] = rmn[51] = INF;
        for(int j = 1; j <= 50; j ++)
            lmn[j] = min(lmn[j - 1], f[v][j]);
        for(int j = 50; j >= 1; j --)
            rmn[j] = min(rmn[j + 1], f[v][j]);
        for(int j = 1; j <= 50; j ++)
            f[u][j] += min(lmn[j - 1], rmn[j + 1]);
    }
    for(int i = 1; i <= 50; i ++)
        f[u][i] += i;
}

int T, n, u;

int main() {
    int size = 256 << 20; // 256MB
    char *p = (char*) malloc(size) + size;
    __asm__("movl %0, %%esp\n" :: "r"(p));
    freopen("corporate_gifting.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    cin >> T;
    while(T --) {
        cin >> n;
        memset(first, -1, sizeof(first));
        ecnt = -1;
        cas ++;
        for(int i = 1; i <= n; i ++) {
            scanf("%d", &u);
//            u = i - 1;
            Addedge(u, i);
        }
        int res = INF;
        Gao(1);
//        for(int i = 1; i <= n; i ++)
//            for(int j = 1; j <= 5; j ++)
//                cout << i << ' ' << j << ' ' << f[i][j] << endl;
        for(int i = 1; i <= 50; i ++) {
            res = min(res, f[1][i]);
        }
        printf("Case #%d: %d\n", cas, res);

    }
}
