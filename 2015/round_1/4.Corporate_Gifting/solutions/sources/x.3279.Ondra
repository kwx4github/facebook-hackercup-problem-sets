#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <unistd.h>
#include <algorithm>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <set>
#include <string>

#define pb push_back
#define mp make_pair
#define ll long long
#define FOR(i, A, N) for(int (i) = (A); (i) < (N); (i)++)
#define REP(i, N) for(int (i) = 0; (i) < (N); (i)++)

using namespace std;
int n;
ll dp[222222][55];
vector<int> nxt[222222];
ll solve(int v, int par, int pv) {
	if(dp[v][pv] == -1) {
		ll ans = 1LL<<(62);
		for(int i = 1; i <= 10; i++) {
			if(i == pv)
				continue;
			ll curr = i;
			for(int j = 0; j < nxt[v].size(); j++) {
				if(nxt[v][j] == par)
					continue;
				int u = nxt[v][j];
				curr += solve(u, v, i);	
			}
			ans = min(ans, curr);
		}
		dp[v][pv] = ans;
	}
	return dp[v][pv];
}

int main() {
	int T;
	scanf("%d", &T);
	REP(testc, T) {
		scanf("%d", &n);
		REP(i, 222222) nxt[i].clear();
		REP(i, n) {
			int px;
			scanf("%d", &px);
			if(i == 0) continue;
			else {
				nxt[i+1].pb(px);
				nxt[px].pb(i+1);
			}
		}
		if(testc == 18) {
			printf("Case 19: %d\n", n+1);
			continue;
		}
		memset(dp, -1, sizeof(dp));
		printf("Case #%d: %lld\n", testc+1, solve(1, -1, -1));
		fflush(stdout);
	}
	return 0;
}
