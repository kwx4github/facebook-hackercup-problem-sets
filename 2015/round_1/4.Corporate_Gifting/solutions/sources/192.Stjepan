#include <cstdio>
#include <cstring>
#include <cassert>

#include <algorithm>
#include <iostream>
using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

const int MAX = 200100;
const int K = 30;

int N;
vector<int> adj[MAX];

int memo[MAX][K];

int rec(int x, int up) {
  int &ret = memo[x][up];
  if (ret != -1) return ret;

  ret = 1e9;
  FOR(c, 1, K) if (c != up) {
    int sum = c;
    for (int y : adj[x]) sum += rec(y, c);
    ret = min(ret, sum);
  }

  return ret;
}

int main() {
  int T;
  scanf("%d", &T);
  for (int tt = 1; tt <= T; ++tt, fflush(stdout)) {
    scanf("%d", &N);

    REP(i, N) adj[i].clear();
    REP(i, N) {
      int p; scanf("%d", &p); --p;
      if (p >= 0) adj[p].push_back(i);
    }

    memset(memo, -1, sizeof memo);
    printf("Case #%d: %d\n", tt, rec(0, 0));
  }
  return 0;
}
