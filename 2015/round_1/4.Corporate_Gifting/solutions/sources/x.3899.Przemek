//Przemysław Jakub Kozłowski
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#define FI first
#define SE second
#define MP make_pair
using namespace std;
const int N = 200005, INF = 1000000009;

void DFS(int x);

int t;
int n;
vector<int> V[N];
pair<pair<int,int>, int> DP[N];

int main()
{
    scanf("%d", &t);

    for(int ti = 1;ti <= t;ti++)
    {
        scanf("%d", &n);
        
        for(int i = 1;i <= n;i++)
            V[i].clear();
        
        for(int i = 1;i <= n;i++)
        {
            int a;
            scanf("%d", &a);
            if(i > 1) V[a].push_back(i);
        }
        
        DFS(1);
        
        printf("Case #%d: %d\n", ti, DP[1].FI.SE);
    }    

    return 0;
}

int zlicz[N];

void DFS(int x)
{
    DP[x] = MP(MP(1,INF), INF);
    for(int i = 0;i < V[x].size();i++)
        DFS(V[x][i]);
        
    int suma = 0;
    for(int i = 0;i < V[x].size();i++)
    {
        suma += DP[V[x][i]].FI.SE;
        zlicz[DP[V[x][i]].FI.FI] += DP[V[x][i]].SE-DP[V[x][i]].FI.SE;
    }
    
    for(int i = 1;i <= V[x].size()+2;i++)
    {
        int w = suma+zlicz[i]+i;
        if(w < DP[x].FI.SE) DP[x].FI = MP(i,w);
        else if(w < DP[x].SE) DP[x].SE = w;
    }
    
    for(int i = 0;i < V[x].size();i++)
        zlicz[DP[V[x][i]].FI.FI] = 0;
}

