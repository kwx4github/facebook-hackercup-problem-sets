#include <iostream>
#include <cstdio>
#include <set>
#include <vector>
#include <cstring>
using namespace std;

const int MAXN=200010,MAX=21,inf=1000000000;

int dp[MAXN][MAX];

int n;

set<pair<int,int> >s;
set<pair<int,int> >::iterator it;

int obrnuto[MAXN],broj[MAXN],imam[MAXN];

vector<int>graf[MAXN];
vector<int>topoloski;

void postavi()
{
    memset(imam,0,sizeof(imam));
    memset(broj,0,sizeof(broj));
    topoloski.clear();
    for(int i=0;i<MAXN;i++)
        graf[i].clear();
    for(int i=0;i<MAXN;i++)
        for(int j=0;j<MAX;j++)
            dp[i][j]=inf;
}

void sortiraj_topoloski()
{
    for(int i=1;i<=n;i++)
        s.insert(make_pair(broj[i],i));
    while(!s.empty())
    {
        pair<int,int>x=*s.begin();
        s.erase(s.begin());
        if(x.second==0)continue;
        if(imam[x.second])continue;
        topoloski.push_back(x.second);
        imam[x.second]=1;
        s.insert(make_pair(--broj[obrnuto[x.second]],obrnuto[x.second]));
    }
}

int f(int cvor, int bez)
{
    int ret=inf;
    for(int i=1;i<MAX;i++)
    {
        if(i==bez)continue;
        ret=min(ret,dp[cvor][i]);
    }
    return ret;
}

int main()
{
    int test;
    scanf("%d",&test);
    for(int br=0;br<test;br++)
    {
        postavi();
        scanf("%d",&n);
        for(int i=1;i<=n;i++)
        {
            int x;
            scanf("%d",&x);
            graf[x].push_back(i);
            obrnuto[i]=x;
            broj[x]++;
        }
        sortiraj_topoloski();
        for(int i=0;i<topoloski.size();i++)
        {
            int sad=topoloski[i];
            for(int j=1;j<MAX;j++)
            {
                int trenutno=j;
                for(int k=0;k<graf[sad].size();k++)
                    trenutno+=f(graf[sad][k],j);
                dp[sad][j]=min(dp[sad][j],trenutno);
            }
        }
        int rj=inf;
        for(int i=1;i<MAX;i++)
            rj=min(rj,dp[1][i]);
        printf("Case #%d: %d\n",br+1,rj);
    }
    return 0;
}
