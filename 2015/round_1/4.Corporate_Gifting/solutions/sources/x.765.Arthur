#include <iostream>
#include <iomanip>
#include <algorithm>
#include <cmath>
#include <assert.h>
#include <stdio.h>
#include <ctime>
#include <cstdlib>
#include <utility>
#include <string.h>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>

#define inf (999999999999LL)
#define pii pair<int,int>
#define pll pair<long long,long long>
#define pip pair<long long,pll>

#define eps 1e-8
 
#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

#define pb push_back

#define maxn 200200
#define mod 1000000007

using namespace std;

#define ideal first
#define sum second.first
#define outro second.second

vector<int> L[maxn];
int f[maxn];
pip T[maxn];

int cur;
int last[maxn];
long long perde[maxn];
int mrk[maxn];

int ja_foi[maxn];

int N;

void dfs(int x){

	if(ja_foi[x]) return;
	ja_foi[x] = 1;

	if(f[x] == 0){
		T[x].ideal = 1;
		T[x].sum = 1;
		T[x].outro = 2;
		return;
	}

	for(vector<int> :: iterator it = L[x].begin(); it < L[x].end(); it++)
		dfs(*it);

	vector<int> v;
	long long soma = 0;	

	cur++;
	
	for(vector<int> :: iterator it = L[x].begin(); it < L[x].end(); it++){
		mrk[T[*it].ideal] = cur;
		v.pb(T[*it].ideal);
		soma += T[*it].sum;
		int u = T[*it].ideal;
		if(last[u] != cur) last[u] = cur, perde[u] = 0;
		perde[u] += T[*it].outro - T[*it].sum;
	}

	int qual1;
	long long qnt1=9999999999999999LL, qnt2=9999999999999999LL;

	int foi = 0;
	for(int i=1;foi<2 && i<N;i++){
	
		if(mrk[i] == cur) continue;
		foi++;

		if(last[i] != cur) perde[i] = 0;
		long long at = soma + perde[i] + (long long)i;

		if(at < qnt1){
			qnt2 = qnt1;
			qnt1 = at;
			qual1 = i;
		}
		else if(at < qnt2)
			qnt2 = at;

	}

	for(vector<int> :: iterator it = v.begin(); it < v.end(); it++){

		int u = *it;
		if(last[*it] != cur) perde[*it] = 0;
		long long at = soma + perde[*it] + (long long)*it;

		if(at < qnt1){
			qnt2 = qnt1;
			qnt1 = at;
			qual1 = *it;
		}
		else if(at < qnt2)
			qnt2 = at;
		
	}

	T[x].ideal = qual1;
	T[x].sum = qnt1;
	T[x].outro = qnt2;

}

int pai[maxn];
int dg[maxn];

main(){

		int te;
		scanf("%d",&te);
		cur=0;

		for(int t=1;t<=te;t++){

			int n;
			scanf("%d",&n);
			N = n;
			cur++;

			for(int i=0;i<n;i++){
				L[i].clear();
				f[i] = 0;
				ja_foi[i] = 0;
				//dg[i] = 0;
			}

			int p;
			scanf("%d",&p);

			for(int i=1;i<n;i++){
				scanf("%d",&p), p--;
				pai[i] = p;
				f[p]++;
				dg[p]++;
				L[p].pb(i);
			}

			queue<int> Q;
			for(int i=0;i<n;i++) if(dg[i] == 0) Q.push(i);

			int yy = 0;

			while(Q.size()){
				int u = Q.front();
				//debug("vai %d\n",u);
				Q.pop();
				dfs(u);
				yy++;
				if(u == 0) continue;
				dg[pai[u]]--;
				if(dg[pai[u]] == 0) Q.push(pai[u]);
			}

			assert(yy == n);

			//for(int i=0;i<n;i++) debug("dg[%d] = %d\n",i,dg[i]);
			
				
			printf("Case #%d: %lld\n",t,T[0].sum);

		}

}
