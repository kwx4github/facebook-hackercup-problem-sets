#include <cstdio>
#include <cassert>
#include <cstring>

#include <algorithm>
#include <iostream>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

const int MAXN = 200005;
const int MAXL = 20;
const int inf = 1000000000;

int dp[MAXL][MAXN];

vector< int > t[MAXN];

int calc(int last, int n) {
  if (t[n].size() == 0) {
    if (last == 1) return 2;
    return 1;
  }

  int &ret = dp[last][n];
  if (ret >= 0) return ret;

  ret = inf;

  for (int r = 1; r < MAXL; ++r) {
    if (r == last) continue;
    int cur = r;
    for (int m : t[n]) 
      cur += calc(r, m);
    ret = min(ret, cur);
  }

  return ret;
}

int p[MAXN];

int solve() {
  int N;
  scanf("%d", &N);
  REP(i, N) { scanf("%d", p + i); --p[i]; }
  REP(i, N) t[i].clear();
  FOR(i, 1, N) t[p[i]].push_back(i);
  memset(dp, -1, sizeof dp);
  return calc(0, 0);
}

int main(void) 
{
  int T;
  scanf("%d", &T);

  REP(tc, T) printf("Case #%d: %d\n", tc + 1, solve());

  return 0;
}
