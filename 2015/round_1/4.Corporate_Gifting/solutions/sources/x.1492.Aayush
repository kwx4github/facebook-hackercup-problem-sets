#include<bits/stdc++.h>
using namespace std;
int par[200010];
int nchildren[200010];
vector<set<int> > forbidden;
int main(){
  int T;
  cin>>T;
  for(int t=0;t<T;t++){
    int n;
    long long ans=0;
    cin>>n;
    forbidden=vector<set<int> >(n,set<int>());
    for(int i=0;i<n;i++){
      scanf("%d",par+i);
      par[i]--;
      nchildren[i]=0;
    }
    for(int i=0;i<n;i++){
      if(par[i]!=-1){
	nchildren[par[i]]++;
      }
    }
    queue<int> q;
    for(int i=0;i<n;i++){
      if(nchildren[i]==0){
	q.push(i);
      }
    }
    while(!q.empty()){
      int cur=q.front();
      q.pop();
      int curval=-1;
      int curtry=1;
      
      for(set<int>::iterator it=forbidden[cur].begin();it!=forbidden[cur].end();it++){
	if(curtry!=(*it)){
	  curval=curtry;
	  break;
	}
	curtry++;
      }
      
      if(curval==-1)curval=curtry;
      
      ans+=(long long int)curval;
      if(par[cur]!=-1){
	      
	forbidden[par[cur]].insert(curval);
	nchildren[par[cur]]--;

	if(nchildren[par[cur]]==0){
	  q.push(par[cur]);
	}

      }      
    }
    cout<<"Case #"<<1+t<<": "<<ans<<endl;
  }
  return 0;
}
