#include <iostream>
#include <stdio.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <string.h>
#include <cmath>
#include <memory.h>
#include <algorithm>
using namespace std;
typedef long long ll;
int n, N, dp[200000][65];
vector<vector<int> > g;
int calc(int u, int last){
	int &ret = dp[u][last];
	if (ret != -1)
		return ret;
	ret = 1 << 29;
	for (int cur = 0; cur < N; ++cur){
		if (cur == last)
			continue;
		int s = cur + 1;
		for (int i = 0; i < g[u].size(); ++i)
			s += calc(g[u][i], cur);
		ret = min(ret, s);
	}
	return ret;
}
int calc(){
	memset(dp, -1, sizeof(dp));
	N = min(n, 64);
	for (int i = n - 1; i >= 0; i -= 512)
		calc(i, N);
	return calc(0, N);
}
int main()
{
	freopen("D.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int t;
	scanf("%d", &t);
	for (int T = 1; T <= t; ++T){
		printf("Case #%d: ", T);
		scanf("%d", &n);
		g.clear();
		g.resize(n);
		for (int p, i = 0; i < n; ++i){
			scanf("%d", &p);
			if (p)
				g[p - 1].push_back(i);
		}
		printf("%d\n", calc());
	}
	return 0;
}