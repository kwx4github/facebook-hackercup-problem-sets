program corp;
const
    fi = 'corporate_gifting.txt';
    fo = 'corp_output.txt';
    nm = 200000;
    oo = trunc(1e9)+9;
type
    pNode = ^node;
    node = record
        v: longword;
        next: pNode;
    end;
var
    av: array[1..nm] of boolean;
    adj: array[0..nm] of pNode;
    test, iTest, n: longword;
    f: array[1..nm, 1..3] of longword;
procedure inp;
    var
        i, j, par: longword;
        p: pNode;
    begin
        readln(n);
        for i := 1 to n do
            begin
                adj[i] := nil;
                av[i] := true;
            end;
        for i := 1 to n do
            begin
                read(par);
                new(p);
                p^.v := i;
                p^.next := adj[par];
                adj[par] := p;
                for j := 1 to 3 do f[i, j] := 0;
            end;
    end;
function min(const op1, op2: longword): longword; inline;
    begin
        if (op1 <= op2) then exit(op1) else exit(op2);
    end;
procedure dfs(const u: longword);
    var
        i, j, res: longword;
        p: pNode;
    begin
        //if not av[u] then exit;
        //av[u] := false;
        p := adj[u];
        while (p <> nil) do
            begin
                dfs(p^.v);
                p := p^.next;
            end;
        for i := 1 to 3 do
            begin
                f[u, i] := i;
                p := adj[u];
                while (p <> nil) do
                    begin
                        res := oo;
                        for j := 1 to 3 do
                            if (j <> i) then res := min(res, f[p^.v, j]);
                        f[u, i] := f[u, i] + res;
                        p := p^.next;
                    end;
            end;
    end;
procedure sol;
    var
        i, res: longword;
    begin
        res := oo;
        dfs(1);
        for i := 1 to 3 do res := min(res, f[1, i]);
        writeln('Case #', itest, ': ', res);
    end;
begin
    assign(input, fi); reset(input);
    assign(output, fo); rewrite(output);
    readln(test);
    for itest := 1 to test do
        begin
            inp;
            sol;
        end;
end.
