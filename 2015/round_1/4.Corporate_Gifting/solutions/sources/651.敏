#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#define ll long long
using namespace std;
const int N = 200010;
const int inf = N*20;
int n,eh[N],tot,vis[N],dp[N][21];
struct edge{
    int u,v,next;
}et[N];
struct node{
    int u,step;
}cur;
struct Dep{
    int v,dep;
}d[N];
bool cmp(Dep a,Dep b){
    return a.dep>b.dep;
}
void bfs(){
    queue<node>que;
    while(!que.empty()) que.pop();
    cur.u = 1,cur.step = 0;
    que.push(cur);
    vis[1] = 1,d[1].dep = 0;
    while(!que.empty()){
        node tmp = que.front();que.pop();
        int u = tmp.u, step = tmp.step;
        for(int i = eh[u];i!=-1;i = et[i].next){
            int v = et[i].v;
            if(!vis[v]){
                d[v].dep = step + 1;
                node now;
                vis[v] = 1;
                now.u = v,now.step = step + 1;
                que.push(now);
            }
        }
    }
}
void addedge(int u,int v){
    edge e = {u,v,eh[u]};
    et[tot] = e;
    eh[u] = tot++;
}
void init(){
    tot = 0;
    memset(eh,-1,sizeof(eh));
    memset(vis,0,sizeof(vis));
    memset(dp,0,sizeof(dp));
    for(int i = 1;i<=n;i++)
        d[i].v = i;
}
int main(){
    int T,cas = 1;
    freopen("corporate_gifting.txt","r",stdin);
    freopen("corporate_gifting.out","w",stdout);
    //freopen("winning_at_sports1.out","w",stdout);
    cin>>T;
    while(T--){
        printf("Case #%d: ",cas++);
        cin>>n;
        init();
        for(int i = 1;i<=n;i++){
            int tmp;
            cin>>tmp;
            if(i==1) continue;
            addedge(tmp,i);
        }
        bfs();
        sort(d+1,d+1+n,cmp);
        for(int i = 1;i<=n;i++){
            int u = d[i].v;
            for(int j = 1;j<=20;j++){
                dp[u][j] += j;
                for(int k = eh[u];k!=-1;k= et[k].next){
                    int v = et[k].v;
                    int mint = inf;
                    for(int tj = 1;tj<=20;tj++)
                        if(tj!=j&&mint>dp[v][tj])
                            mint = dp[v][tj];
                    dp[u][j] += mint;
                    //cout<<v<< ' '<<dp[v][mint]<<endl;
                }
            }
        }
        /*for(int i = 1;i<=n;i++){
            for(int j = 1;j<=20;j++)
                cout<<dp[i][j]<< ' ';
            cout<<endl;
        }*/
        int ans = inf;
        for(int i = 1;i<=20;i++)
            ans = min(ans,dp[1][i]);
        cout<<ans<<endl;
    }
}
