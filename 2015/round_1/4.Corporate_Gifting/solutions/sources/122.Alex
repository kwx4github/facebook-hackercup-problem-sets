#include <iostream>
#include <sstream>
#include <fstream>
#include <ctime>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <bitset>
#include <queue>
#include <deque>
#include <list>
#include <algorithm>
#include <iomanip>

using namespace std;

typedef pair<int, int> pt;
typedef long long li;
typedef long double ld;

template<typename X> inline X abs(const X& a) { return a < 0 ? -a: a; }
template<typename X> inline X sqr(const X& a) { return a * a; }

#define forn(i,n) for(int i = 0; i < int(n); i++)
#define pb push_back
#define sz(a) int(a.size())
#define mp make_pair
#define all(a) a.begin(), a.end()
#define ford(i,n) for (int i = int(n) - 1; i >= 0; i--)
#define fore(i,l,r) for (int i = int(l); i <= int(r); i++) 
#define ft first
#define sc second
#define x first
#define y second

const int INF = int(1e9);
const li INF64 = li(1e18);
const ld EPS = ld(1e-9);
const ld PI = acos(-1.0);
const int N = 200 * 1000 + 13;

vector <int> g[N];
int n;

const int M = 40;
int z[N][M];

inline bool read()
{
	scanf("%d", &n);
	for(int i = 0; i < n; i++)
	{
		int a;
		scanf("%d", &a);
		a--;
		if(a != -1)
			g[a].pb(i);
	}
	return true;
}

int calc(int v, int bad)
{
	if(z[v][bad] < INF / 2)
		return z[v][bad];

	int& res = z[v][bad];
	res = bad;
	//cerr << v << ' '<< bad << endl;
	if(sz(g[v]) == 0)
	{
		return res = bad;                   
	}

	for(int i = 0; i < sz(g[v]); i++)
	{
		int to = g[v][i];
		int mi = INF;
		for(int k = 1; k < M; k++)
			if(k != bad)
				mi = min(mi, calc(to, k));
		res += mi;
	}
	//cerr << bad << ' ' << res << endl;
	return res;
}
inline void solve()
{	                 
	memset(z, 127, sizeof(z));
	for(int i = 1; i < M; i++)
	   	calc(0, i); 

   	int ans = INF;
   
   	for(int gg = 1; gg < M; gg++)
   		ans = min(ans, z[0][gg]);
   	
   	cout << ans << endl;   
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    cerr << setprecision(10) << fixed;
    cout << setprecision(15) << fixed;

    int tests;
    scanf("%d", &tests);

    srand(time(NULL));
    for(int test = 0; test < tests; test++)
    {
    	//cerr << test << endl;
		for(int i = 0; i < N; i++)
			g[i].clear();
       	printf("Case #%d: ", test + 1);
    	read();
    	solve();
    }
   	return 0;
}