#include <bits/stdc++.h>
using namespace std;

const int INF = 1000000000;
const int MAXN = 200005;
const int MAXK = 1005;
int T, N, P, dp[MAXN][2], val[MAXN][2];
int dbg = -1;
vector<int> adj[MAXN];

void check(int v){
  for(int i = 0; i < adj[v].size(); i++){
    check(adj[v][i]);
  }
  for(int i = 1; i <= MAXK; i++){
    int s = i;
    for(int j = 0; j < adj[v].size(); j++){
      bool b = (val[adj[v][j]][0] == i);
      s += dp[adj[v][j]][b];
    }
    if(s < dp[v][1]){
      dp[v][1] = s;
      val[v][1] = i;
    }
    if(dp[v][1] < dp[v][0]){
      swap(dp[v][1], dp[v][0]);
      swap(val[v][1], val[v][0]);
    }
  }
  dbg = max(dbg, val[v][1]);
}

int main(){
  scanf("%d", &T);
  for(int i = 1; i <= T; i++){
    scanf("%d", &N);
    for(int i = 0; i < N; i++){
      scanf("%d", &P);
      if(P > 0) adj[P - 1].push_back(i);
      dp[i][0] = dp[i][1] = INF;
      val[i][0] = val[i][1] = -1;
    }
    check(0);
    printf("Case #%d: %d\n", i, dp[0][0]);
    for(int i = 0; i < N; i++){
      adj[i].clear();
    }
  }
  cerr << dbg << endl;
}
