#include<stdio.h>
#include<stdlib.h>
#include<vector>
std::vector<int> v[200001];
long long int dp[51][200001];
int r;
void dfs(int p){
	int i,j,k;
	for(i=0;i<r;i++){
	  dp[i][p]=i+1;
	}
	for(i=0;i<v[p].size();i++){
	  int to=v[p][i];
	  dfs(to);
	  for(j=0;j<r;j++){
	    long long int min=1000000000000000000ll;
	    for(k=0;k<r;k++){
	      if(j!=k&&min>dp[k][to]){
	        min=dp[k][to];
	      }
	    }
	    dp[j][p]+=min;
	  }
	}
}
int main(void){
	int t,hh;
	scanf("%d",&t);
	for(hh=1;hh<=t;hh++){
		int n;
		int i,j,k;
		int b;
		scanf("%d",&n);
		for(i=0;i<=n;i++){
			v[i].clear();
		}
		for(i=1;i<=n;i++){
		  scanf("%d",&b);
		  v[b].push_back(i);
		}
		long long int prev=1000000000000000000ll;
		int minr;
		for(r=2;r<=50;r++){
		  dfs(1);
		  long long int ans=1000000000000000000ll;
		  for(i=0;i<r;i++){
		    if(ans>dp[i][1]){
		      ans=dp[i][1];
		    }
		  }
		  if(ans==prev) break;
		  prev=ans;
		}
		printf("Case #%d: %lld\n",hh,prev);
	}
}
