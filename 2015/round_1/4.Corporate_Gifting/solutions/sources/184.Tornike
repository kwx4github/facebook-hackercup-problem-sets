/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//std::ios_base::sync_with_stdio (false);

#pragma comment(linker, "/STACK:100000000")
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <iomanip>
#include <map>
#include <assert.h>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>
#include <deque>
#include <fstream>
#include <bitset>

#define endl '\n'
#define deb(x) cout << "> " << #x << " : " << (x) << endl;
#define EPS 0.0000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF ((1<<30)-1)
#define pb push_back
#define mp make_pair
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int , int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector < int >
#define DID (long long)
#define ll long long
#define AL(a) (a).begin(),(a).end()
#define INFF DID INF*INF
#define debug 1

using namespace std;

const int N = 200005;
const int T = 50;

int dp[N][T],mn1[N][T],mn2[N][T];
int n;
vector <int> g[N];

void DFS(int v){
	for (int i=0;i<g[v].S;i++){
		DFS(g[v][i]);
	}
	int bound = min(T-2,n);
	for (int here = 1; here <= bound; here++){
		int ans = here;
		for (int i=0;i<g[v].S;i++){
			int to = g[v][i];
			ans += min(mn1[to][here-1],mn2[to][here+1]);
		}
		dp[v][here]=ans;
	}
	for (int i=1;i<T;i++)
		mn1[v][i]=min(mn1[v][i-1],dp[v][i]);
	for (int i=T-2;i>=0;i--)
		mn2[v][i]=min(mn2[v][i+1],dp[v][i]);
}

int solve(){
	for (int i=0;i<N;i++)
		for (int j=0;j<T;j++)
			dp[i][j]=mn1[i][j]=mn2[i][j]=INF;

	for (int i=0;i<N;i++)
		g[i].clear();

	scanf("%d",&n);
	for (int i=1;i<=n;i++){
		int v;
		scanf("%d",&v);
		g[v].pb(i);
	}
	
	DFS(1);

	return mn2[1][1];
}

int main(){
    freopen("corporate_gifting.txt","r",stdin);  
	freopen("output.txt","w",stdout);
	
	int tests;
	scanf("%d",&tests);
	for (int t=1;t<=tests;t++){
		int ans = solve();
		cout<<"Case #"<<t<<": "<<ans<<endl;
	}

	return 0;
}
