#include <bits/stdc++.h>
#define ff first
#define ss second
#define mp make_pair
#define var(x) cerr << #x << " = " << x << endl;

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;

const int MAXN = 2e5+10;
int p[MAXN], ism[MAXN], sons[MAXN], val[MAXN], sum[MAXN], vv[111];
vector <int> ss[MAXN];

int solve(int u) {
    for(int i=0;i<ss[u].size();i++) {
        int v = ss[u][i];
        solve(v);
    }
    memset(vv,0,sizeof(vv));
    if(sons[u] > 1) {
        int v0 = 0;
        for(int i=0;i<sons[u];i++) if(val[ss[u][i]] == 0) v0++;
        if(v0 != 1) {
            for(int i=0;i<sons[u];i++) {
                int v = ss[u][i];
                if(val[v] == 0) {
                    sum[v] = (sum[v]+1)/2 + ((sum[v])/2)*2;
                    val[v] = 1;
                }
                vv[val[v]] = 1;
            }
            for(int i=0;i<sons[u];i++) vv[val[ss[u][i]]] = 1;
            int mex = 1;
            for(mex=1;mex<111;mex++) if(vv[mex] == 0) break;
            val[u] = mex;
            for(int i=0;i<sons[u];i++) sum[u] += sum[ss[u][i]];
            sum[u] += mex;
        } else if(v0 == 1) {
            int k = 0;
            for(int i=0;i<sons[u];i++) {
                vv[val[ss[u][i]]] = 1;
                if(val[ss[u][i]] == 0) k = ss[u][i];
            }
            int mex = 1;
            for(mex=1;mex<111;mex++) if(vv[mex] == 0) break;
            if(mex == 1) {
                int best = mex + ((sum[k]+1)/2)*2 + ((sum[k])/2);
                int mex2 = 2;
                for(mex2=2;mex2<111;mex2++) if(vv[mex2] == 0) break;
                if(best > mex2 + ((sum[k]+1)/2) + ((sum[k])/2)*2) {
                    mex = mex2;
                    best = mex2 + ((sum[k]+1)/2) + ((sum[k])/2)*2;
                }
                sum[k] = best;
            } else {
                val[k] = 1;
                sum[k] = (sum[k]+1)/2 + ((sum[k])/2)*2;
            }
            for(int i=0;i<sons[u];i++) sum[u] += sum[ss[u][i]];
            sum[u] += mex;
        }
    } else if(sons[u] == 1) {
        if(val[ss[u][0]] == 0) {
            sum[u] = sum[ss[u][0]] + 1;
            val[u] = 0;
        } else {
            if(val[ss[u][0]] == 1) val[u] = 2;
            else val[u] = 1;
            sum[u] = sum[ss[u][0]] + val[u];
        }
    } else if(sons[u] == 0) {
        sum[u] = 1;
        val[u] = 0;
    }
}

int main() {
    int T;
    cin >> T;
    for(int t=1;t<=T;t++) {
        int n;
        cin >> n;
        memset(sons,0,sizeof(sons));
        memset(val,0,sizeof(val));
        memset(sum,0,sizeof(sum));
        for(int i=0;i<n;i++) ss[i].clear();
        for(int i=1;i<=n;i++) {
            cin >> p[i];
            ism[p[i]] = 1;
            sons[p[i]]++;
            ss[p[i]].push_back(i);
        }
        solve(1);
        if(val[1] == 0) sum[1] = (sum[1]+1)/2 + ((sum[1])/2)*2;
        printf("Case #%d: %d\n", t, sum[1]);
    }
    return 0;
}

