#include <bits/stdc++.h>
#define MAX 20
using namespace std;

vector<int> AdjList[200010];

int val;
int pd[200010][MAX];
vector<pair<int,int> > topo;


int dfs(int pai,int at, int ult){
	//cout<<pai<<" "<<at<<" "<<ult<<endl;

	if(pd[at][ult]!=-1)
		return pd[at][ult];

	int resp = 100000000;
	for(int j = 1;j<=val;j++){
		if(j == ult)continue;
		int aux = j;
		for(int i = 0;i<AdjList[at].size();i++){
			int y = AdjList[at][i];
			if(y == pai)continue;
			aux+=dfs(at,y,j);
		}
		resp = min(aux,resp);
	}
	return pd[at][ult] = resp;
}

int main(){

	int c  = 1;
	int t;
	cin>>t;
	while(t--){
		
		cout<<"Case #"<<c++<<": ";
		int n;
		cin>>n;
		for(int i = 0;i<=n;i++)
			AdjList[i].clear();
		memset(pd,-1,sizeof pd);
		val = min(MAX,n);
		int a;
		cin>>a;
		for(int i = 2;i<=n;i++){
			cin>>a;
			AdjList[i].push_back(a);
			AdjList[a].push_back(i);
		}
		int visitado[200010];
		memset(visitado,-1,sizeof visitado);
		queue<int> q;
		q.push(1);
		visitado[1] = 0;
		topo.clear();
		while(!q.empty()){

			int at = q.front();
			q.pop();
			topo.push_back(make_pair(visitado[at],at));
			for(int i = 0;i<AdjList[at].size();i++){
				int y = AdjList[at][i];
				if(y == visitado[at])continue;
				q.push(y);
				visitado[y] = at;
			}

		}
		
		for(int i = topo.size()-1;i>=0;i--){
			dfs(topo[i].first,topo[i].second,0);
		}
		cout<<dfs(0,1,0)<<endl;
	}

	return 0;
}