#include <string>
#include <cstring>
#include <iostream>
#include <sstream>
#include <vector>
#include <cmath>
#include <cctype>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <cassert>
using namespace std;

/*PREWRITTEN CODE BEGINS HERE*/

#define REP(i,n) for(int i=0,_n=(n); i<_n; ++i)
#define FOR(i,a,b) for(int i=(a),_b=(b); i<=_b; ++i)
#define VAR(a,b) __typeof (b) a=b
#define FORE(i,a)  for(VAR(i,(a).begin()); i!=(a).end(); ++i)
#define RESET(a,c) memset(a,(c),sizeof(a))


typedef long long LL;
/*PREWRITTEN CODE ENDS HERE*/
inline int RI() { int xx; scanf("%d",&xx); return xx; }
typedef long double LD;
const int INF = 1010000000;
const double EPS = 1e-9;
/*SOLUTION BEGINS HERE*/

const int MAX = 200 * 1000 + 200;
int N;

int prv[MAX];
int vis[MAX];
vector<int> nx[MAX];

pair<int, LL> go(int v) {
  LL ret = 0;
  set<int> s;
  FORE(i, nx[v]) {
    pair<int, LL> p = go(*i);
    s.insert(p.first);
    ret += p.second;
  }
  
  int idx = -1;
  FOR(i, 1, N) {
    if (s.count(i) == 0) {
      idx = i;
      break;
    }
  }

  assert(idx != -1);
  ret += idx;
  return make_pair(idx, ret);
}

void solve(void)
{
  scanf("%d", &N);
  
  REP(i, N) nx[i].clear();

  REP(i, N) {
    int a;
    scanf("%d", &a);
    a--;
    prv[i] = a;
    if (i > 0) {
      nx[a].push_back(i);
    }
  }
  
  RESET(vis, 0);
  pair<int, LL> p = go(0);
  printf("%lld\n", p.second);
}

int main(void)
{
	int T, C = 1;
	scanf("%d", &T);
	while(T--) { printf("Case #%d: ",C++); solve(); }
	return (0);
}
