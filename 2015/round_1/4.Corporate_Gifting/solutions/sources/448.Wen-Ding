#include<iostream>
#include<vector>
using namespace std;
int b[200001][20];
int a[210000];
void dfs(int p,vector<int>* e){
	for(int i=0;i<20;++i){
		b[p][i]=i;
	}

	for(int i=0;i<e[p].size();++i){
		dfs(e[p][i],e);
	}
	
	if(a[p]>=0){
		for(int i=0;i<20;++i){
			int mi=200000*100;
			for(int j=0;j<20;++j){
				if(i==j)
					continue;
				if(b[p][j]<mi)
					mi=b[p][j];
			}
			b[a[p]][i]+=mi;
		}
	}
}
int main(){
	int T;
	cin>>T;
	int n;
	for(int TT=1;TT<=T;++TT){

		cin>>n;
		vector<int> e[200001];
		for(int i=0;i<n;++i){
			cin>>a[i];
			--a[i];
			if(a[i]>=0){
				e[a[i]].push_back(i);
			}
		}
		vector<int> order;
		order.push_back(0);
		for(int i=0;i<order.size();++i){
			for(int j=0;j<e[order[i]].size();++j){
				order.push_back(e[order[i]][j]);
			}
		}
		for(int i=0;i<n;++i){
			for(int j=0;j<20;++j){
				b[i][j]=0;
			}
		}
		for(int o=n-1;o>=0;--o){
			int p=order[o];
			for(int j=0;j<20;++j){
				b[p][j]+=j;
			}
			if(a[p]>=0){
				for(int i=0;i<20;++i){
					int mi=200000*100;
					for(int j=0;j<20;++j){
						if(i==j)
							continue;
						if(b[p][j]<mi)
							mi=b[p][j];
					}
					b[a[p]][i]+=mi;
				}
			}
		}
		//dfs(0,e);
		int ans=200000*100;
		for(int i=0;i<20;++i){
			if(ans>b[0][i])
				ans=b[0][i];
		}
		ans+=n;
		cout<<"Case #"<<TT<<": ";
		cout<<ans<<"\n";
	}
	return 0;
}
