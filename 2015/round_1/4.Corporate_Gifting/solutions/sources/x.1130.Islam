package Round1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.Queue;

public class CorporateGifitng {
    public static void main(String[] args) throws NumberFormatException,
            IOException {
        BufferedReader in = new BufferedReader(new FileReader(new File(
                "corporate_gifting.txt")));
        int t = Integer.parseInt(in.readLine());
        for (int _ = 1; _ <= t; _++) {
            int n = Integer.parseInt(in.readLine());
            String[] S = in.readLine().split(" ");
            LinkedList<Integer>[] E = new LinkedList[n];
            for (int i = 0; i < n; i++)
                E[i] = new LinkedList<Integer>();
            for (int i = 0; i < n; i++) {
                int p = Integer.parseInt(S[i]) - 1;
                if (p != -1)
                    E[p].add(i);
            }
            int[] A = new int[n];
            Queue<Integer> Q = new LinkedList<Integer>();
            Q.add(0);
            int index = 0;
            while (!Q.isEmpty()) {
                int temp = Q.poll();
                A[index++] = temp;
                for (int x : E[temp])
                    Q.add(x);
            }
            long[][] DP = new long[n][20];
            for (int i = n - 1; i >= 0; i--)
                for (int j = 1; j < 20; j++) {
                    DP[i][j] = Long.MAX_VALUE;
                    for (int k = 1; k < 20; k++)
                        if (k != j) {
                            int temp = k;
                            for (int x : E[i])
                                temp += DP[x][k];
                            DP[i][j] = Math.min(temp, DP[i][j]);
                        }
                }
            long res = Long.MAX_VALUE;
            for (int i = 1; i < 10; i++)
                res = Math.min(res, DP[0][i]);
            System.out.println("Case #" + _ + ": " + res);
        }
    }
}
