# include <bits/stdc++.h>
#include <sys/resource.h>
# define pb pubh_back
# define ll long long
# define rep(i,n) for(int (i) = 0;(i) < (n);(i)++)
# define REP(i,n) for(int (i) = 1;(i) <= (n);(i)++)
# define sf(i) scanf("%lld",&(i))
# define prn(i) cout<<(i)<<endl
# define pr(i) cout<<(i)<<" "
# define wl(i) while((i)--)
# define mod 1000000007
# define limit 20

using namespace std;

int dp[200003][limit+1];
vector< int > vec[200003];

ll func(int a,int i){
//	prn(a);
	if(dp[a][i]) return dp[a][i];
	ll sum,mi=10000000;
	REP(j,limit){
		sum=j;
		if(i == j)continue;
		rep(k,vec[a].size()){
			sum+= func(vec[a][k],j);
		}
		if(sum<mi)mi=sum;	
	}
	dp[a][i]=mi;
	return mi;
}

void init(int n){
	rep(i,n+1){
		rep(j,limit+1){
			dp[i][j]=0;
		}
		vec[i].clear();
	}
}

int main(){
	clock_t start = clock();
	struct rlimit rl;
    int result;
    result = getrlimit(RLIMIT_STACK, &rl);
    rl.rlim_cur = rl.rlim_cur*2;
    result = setrlimit(RLIMIT_STACK, &rl);
	freopen("corporate_gifting.txt","r",stdin);
    freopen("write.txt","w",stdout);
	ll t; sf(t); REP(w,t){
		printf("Case #%d: ",w);
		ll n; sf(n);
		init(n);
		REP(i,n){
			ll a;
			sf(a); 
			vec[a].push_back(i);
		}
		prn(func(1,0));
	}
	clock_t end = clock();
	printf("%lf\n",(end-start) / CLOCKS_PER_SEC * 1000.0);
	return 0;
}