/* Supto
   Dept. Of CSE
   University Of Dhaka
*/
//#include<bits/stdc++.h>
#include <cstdio>
#include <sstream>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <iostream>
#include <fstream>
#include <numeric>
#include <string>
#include <vector>
#include <cstring>
#include <map>
#include <iterator>

#define pb push_back
#define ins insert
#define ff first
#define ss second
#define ll long long int
#define llu long long unsigned
#define sss stringstream
#define oss ostringstream
#define iss istringstream
#define pii pair<int,int>
#define _sq(x) ((x)*(x))
#define lcm(a,b) ((a)*((b)/gcd(a,b)))
#define mem(a) memset(a,0,sizeof(a))
#define _set(a) memset(a,-1,sizeof(a))
#define popcount(n) __builtin_popcount(n)
#define popcountl(n) __builtin_popcountll(n)
#define ctz(x) __builtin_ctz(x) //number of trailing zeroes in a digit
#define ctzl(x) __builtin_ctzll(x)
#define clz(x) __builtin_clz(x)
#define clzl(x) __builtin_clzll(x) //number of leading zeroes in a digit
//If Long Long (mask & (1LL << k))
#define check(mask, k) (mask & (1 << k))
#define set1(mask, k) (mask | (1 << k))
#define set0(mask ,k) (mask & (~(1<<k)))
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

using namespace std;
#define pi acos(-1.0)
#define inf (1<<30)
#define eps 1e-9
#define MAX 200005
#define MAXL 15

//const ll mod = 1000003;
//int dx[] = {0,0,1,-1};
//int dy[] = {1,-1,0,0};
//int dx[] = {-1,-1,-1,0,0,1,1,1};
//int dy[] = {-1,0,1,-1,1,-1,0,1};
vector <int> G[MAX];
struct data
{
    int u, sz, i;
    map <int, bool> _map;
}state[MAX];
ll ans;
int n;
int main()
{
    READ("corporate_gifting.txt");
    WRITE("output.txt");
    //ios_base::sync_with_stdio(false);
    int ncase, tcase = 1, u, i;
    scanf("%d", &ncase);
    while(ncase--)
    {
        scanf("%d", &n);
        for(i = 1; i <= n; i++)
        {
            scanf("%d", &u);
            if(u == 0) continue;
            G[u].pb(i);
            //G[i].pb(u);
        }
        ans = 0;
        int st = 0;
        state[st].u = 1;
        state[st].sz = G[1].size();
        state[st].i = -1;
        while(st >= 0)
        {
            state[st].i++;
            //printf("%d\n", st);
            if(state[st].i == state[st].sz)
            {
                if(state[st].i == 0)
                {
                    ans++;
                    state[st-1]._map[1] = 1;
                }
                else
                {
                    int j = 1;
                    while(state[st]._map.find(j) != state[st]._map.end()) j++;
                    ans += (ll) j;
                    if(st-1 >= 0) state[st-1]._map[j] = 1;
                }
                state[st]._map.clear();
                st--;
                //printf("%d\n", st);
                continue;
            }
            int v = G[state[st].u][state[st].i];
            state[++st].i = -1;
            state[st].u = v;
            state[st].sz = G[v].size();
            //printf("%d %d\n", st, v);
        }
        printf("Case #%d: %lld\n", tcase++, ans);
        for(i = 1; i <= n; i++) G[i].clear();
    }
    return 0;
}
