#include <bits/stdc++.h>

#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORD(i, a, b) for(int i = (a); i >= (b); --i)
#define VAR(v, i) __typeof(i) v=(i)
#define FORE(i, c) for(VAR(i, (c).begin()); i != (c).end(); ++i)
#define all(v) (v).begin(),(v).end()

#define VI vector<int>
#define PII pair<int,int>
#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define lint long long int

#define debug(x) {cerr <<#x <<" = " <<x <<endl; }
#define debug2(x,y) {cerr <<#x <<" = " <<x << ", "<<#y<<" = "<< y <<endl; } 
#define debug3(x,y,z) {cerr <<#x <<" = " <<x << ", "<<#y<<" = "<< y << ", " << #z << " = " << z <<endl; } 
#define debugv(x) {{cerr <<#x <<" = "; FORE(itt, (x)) cerr <<*itt <<", "; cerr <<endl; }}
#define debugt(t,n) {{cerr <<#t <<" = "; FOR(it,0,(n)) cerr <<t[it] <<", "; cerr <<endl; }}

#define make( x) int (x); scanf("%d",&(x));
#define make2( x, y) int (x), (y); scanf("%d%d",&(x),&(y));
#define make3(x, y, z) int (x), (y), (z); scanf("%d%d%d",&(x),&(y),&(z));
#define make4(x, y, z, t) int (x), (y), (z), (t); scanf("%d%d%d%d",&(x),&(y),&(z),&(t));
#define makev(v,n) VI (v); FOR(i,0,(n)) { make(a); (v).pb(a);} 
#define IOS ios_base::sync_with_stdio(0)
#define HEAP priority_queue

#define read( x) scanf("%d",&(x));
#define read2( x, y) scanf("%d%d",&(x),&(y));
#define read3(x, y, z) scanf("%d%d%d",&(x),&(y),&(z));
#define read4(x, y, z, t) scanf("%d%d%d%d",&(x),&(y),&(z),&(t));
#define readv(v,n) FOR(i,0,(n)) { make(a); (v).pb(a);}

using namespace std;
#define max_n 200005

int n;
VI g[max_n];
int dwa[max_n][2];
int dla[max_n][2];
int jest[500];
int suma[500];
int par[max_n];
int deg[max_n];


void doit(int v,int p){
	int bound = 0;
	FORE(j,g[v]){
		if((*j)!=p){
			bound = max(bound,dla[*j][0]);
		}
	}
	FOR(i,1,bound+3) jest[i] = suma[i] = 0;
	int s1 = 0;
	FORE(j,g[v]){
		if((*j)!=p){
			jest[dla[*j][0]]=1;
			suma[dla[*j][0]]+=dwa[*j][1]-dwa[*j][0];
			s1 += dwa[*j][0];
		}
	}
	int ilezer = 0;
	dwa[v][0] = dwa[v][1] = 1e9;
	dla[v][0] = dla[v][1] = -1;
	FOR(i,1,50){
		if(ilezer==2) break;
		if(jest[i]==0) ilezer++;
		int wyn = s1+suma[i]+i;
		if(wyn<dwa[v][0]){
			dwa[v][1] = dwa[v][0];
			dla[v][1] = dla[v][0];
			dwa[v][0] = wyn;
			dla[v][0] = i;
		}
		else{
			if(wyn<dwa[v][1]){
				dwa[v][1] = wyn;
				dla[v][1] = i;
			}
		}
	}
}

void solve(){
	read(n);
	FOR(i,0,n){
		make(a); 
		par[i] = a-1;
		if(a!=0){
			g[a-1].pb(i);
			g[i].pb(a-1);
			deg[i]++;
			deg[a-1]++;
		}
	}
	VI w;
	FOR(i,1,n){
		if(deg[i]==1) w.pb(i);
	}
	if(n==1) w.pb(0);
	int j = 0;
	while(1){
		int kto = w[j]; j++;
		doit(kto,par[kto]);
		deg[par[kto]]--;
		if(deg[par[kto]]==1 && par[kto]!=0){
			w.pb(par[kto]);
		}
		if(deg[par[kto]]==0){
			if(par[kto]!=0) cerr<<"DUPA"<<endl;
			else w.pb(par[kto]);
		}
		if(j==w.size()) break;
	}
	
	printf("%d\n",dwa[0][0]);
	FOR(i,0,n) g[i].clear();
	FOR(i,0,n) deg[i] = 0;
}

int main(){
	make(tt);
	FOR(i,1,tt+1){
		printf("Case #%d: ",i);
		solve();
	}
}


