#include <iostream>
#include <vector>
using namespace std;

int not_present(vector<int>& a)
{
    for(int i = 0; i < a.size(); ++i)
    {
        int target = a[i];
        while ((target < a.size()) && (target != a[target]))
        {
            int new_target = a[target];
            a[target] = target;
            target = new_target;
        }
    }
    for (int i = 0; i < a.size(); ++i)
    {
        if (a[i] != i)
            return i;
    }
    return a.size();
}

int main()
{
    int T;
    cin >> T;
    for (int t= 1; t <= T; ++t)
    {
        int ans = 0;
        int N;
        cin >> N;
        int arr[200001];
        for (int i = 0; i < N; ++i)
        {
            cin >> arr[i];
        }
        vector<int> present[200001];
        for (int i = N - 1; i > 0; --i)
        {
            int k = not_present(present[i]); 
            ans += k + 1;
            present[arr[i] - 1].push_back(k);
        }
        ans += not_present(present[0]) + 1;
        cout << "Case #" << t << ": " << ans << endl;
    }
    return 0;
}