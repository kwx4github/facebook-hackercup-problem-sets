import Queue

def add_PCS(nod,  p, c, s):
    nod[2].append(p)
    nod[3].append(c)
    nod[4].append(s)
    nod[0] = nod[0]-1

def calc_PCS(nod):
    if len(nod[2]) == 0:
        return 1,1,2
    k = sum(nod[2])
    delta = dict()
    for i in range(1, len(nod[2])+2):
        delta[i] = k
    for i in xrange(len(nod[2])):
        color = nod[3][i]
        if color <= len(nod[2]) + 1:
            delta[color] = delta[color] + nod[4][i] - nod[2][i]
    for i in delta:
        delta[i] = delta[i] + i
    c = min(delta, key = delta.get)
    p = delta[c]
    del delta[c]
    s = min(delta.values())
    return p, c, s


def main():
    file = open("input.txt")
    file_o = open("output.txt", 'w')
    T = int(file.readline())
    for t in range(T):
        n = int(file.readline())
        arr = map(int, file.readline().split())
        nodes = [[0, num-1, [], [], []] for num in arr]
        for nod in nodes:
            if nod[1] >= 0:
                nodes[nod[1]][0] = nodes[nod[1]][0] + 1
        q = Queue.Queue()
        for nod in nodes:
            if nod[0] == 0:
                q.put(nod)
        ans = 0
        while not q.empty():
            nod = q.get()
            p, c, s = calc_PCS(nod)
            if nod[1] == -1:
                ans = p
                break
            prnt_nod = nodes[nod[1]]
            add_PCS(prnt_nod, p,c,s)
            if prnt_nod[0] == 0:
                q.put(prnt_nod)

        file_o.write( "Case #" + str(t+1) + ": " + str(ans) + "\n")
    file_o.close()

main()