__author__ = 'robertking'

from sys import setrecursionlimit
setrecursionlimit(200001)
filename = 'corporate_gifting.txt'
data = open(filename).read().splitlines()
data = iter(data)

cases = int(next(data))


cache = {}
def solve(g, manager):
    if manager in cache:
        return cache[manager]
    #print "solving for manager %d" % manager
    if manager not in g:
        #print "gives 1: %d" % manager
        return 1, 1
    else:
        tot, gifts = 0, set()
        for employee in g[manager]:
            tot1, gift = solve(g, employee)
            tot += tot1
            gifts.add(gift)
        gifts = sorted(gifts)
        for i, gift in enumerate(gifts):
            if i + 1 != gift:
                #print "-gives %d: %d" % (i + 1, manager)
                cache[manager] = (tot + i + 1, i + 1)
                return tot + i + 1, i + 1
        #print "--gives %d: %d" % (len(gifts) + 1, manager)
        cache[manager] = tot +  len(gifts) + 1, len(gifts) + 1
        return tot +  len(gifts) + 1, len(gifts) + 1



for case in range(1, cases + 1):
    N = int(next(data))
    h = map(int, next(data).split())
    g = {}
    cache = {}
    for i in range(len(h)):
        employee = i + 1
        manager = h[i]
        if manager not in g:
            g[manager] = [employee]
        else:
            g[manager].append(employee)
    for i in range(N, 1, -1):
        solve(g, i)
    tot, gift = solve(g, 0)
    ans = tot - gift
    #print "tot gift", tot, gift
    print 'Case #%d: %d' % (case, ans)