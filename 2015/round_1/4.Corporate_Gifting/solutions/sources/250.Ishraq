#include <bits/stdc++.h>

#define FO(i,a,b) for (int i = (a); i < (b); i++)
#define sz(v) int(v.size())

using namespace std;

int n;
vector<int> c[200005];
int cache[200005][22];

int go(int i, int pv) {
    if (cache[i][pv] != 0) return cache[i][pv];
    int res = 1e9;
    FO(v,1,22) if (v != pv) {
        int cur = v;
        for (int j : c[i]) cur += go(j, v);
        res = min(res, cur);
    }
    return cache[i][pv] = res;
}

int main() {
    int T; scanf("%d", &T);
    FO(Z,1,T+1) {
        scanf("%d", &n);
        int r = -1;
        FO(i,1,n+1) {
            int p;
            scanf("%d", &p);
            if (p==0) r = i;
            else c[p].push_back(i);
        }
        printf("Case #%d: %d\n", Z, go(r,0));
        memset(cache,0,sizeof cache);
        FO(i,0,n+1) c[i].clear();
    }
}

