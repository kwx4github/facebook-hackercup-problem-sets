#include <cstdio>
#include <vector>
#include <cstring>

#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define INF (1 << 29)

using namespace std;

vector <int> adj[200005];
int weight[200005][20];

int DFS(int v, int u, int w) {
  int h = adj[v].size(), ret = INF, tmp;
  for(int i = 1; i <= 20; i++)
    if(i != w) {
      tmp = i;
      for(int j = 0; j < h; j++)
	if(adj[v][j] != u) {
	  if(weight[adj[v][j]][i] == -1) weight[adj[v][j]][i] = DFS(adj[v][j], v, i);
	  tmp += weight[adj[v][j]][i];
	}
      ret = MIN(ret, tmp);
    }
  return ret;
}

int main() {
  int test, n, v, u;
  scanf("%d", &test);
  for(int Case = 1; Case <= test; Case++) {
    scanf("%d%d", &n, &v);
    for(u = 2; u <= n; u++) {
      scanf("%d", &v);
      adj[v].push_back(u);
    }
    memset(weight, -1, sizeof(weight));
    printf("Case #%d: %d\n", Case, DFS(1, 0, -1));
    for(v = 1; v <= n; v++)
      adj[v].clear();
  }
  return 0;
}
