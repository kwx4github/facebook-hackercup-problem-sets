#include <bits/stdc++.h>
#define MAXK 3
#define MAXN 200000
using namespace std;

typedef long long LL;

vector<int> child[MAXN],level[MAXN];
LL f[MAXN][4],sum[4];
int lv[MAXN];
int T,N,k,maxLv;
int main(){
  cin>>T;
  for(int t=0;t<T;t++){
    cin>>N;
    for(int i=0;i<N;i++){
      child[i].clear();
    }
    lv[0]=0;
    maxLv=0;
    level[0].push_back(0);
    for(int i=0;i<N;i++){
      cin>>k;
      if(i==0)continue;
      child[k-1].push_back(i);
      lv[i]=lv[k-1]+1;
      level[lv[i]].push_back(i);
      maxLv=max(maxLv,lv[i]);
    }
    for(int l=maxLv;l>=0;l--){
      for(int i=0;i<level[l].size();i++){
	int e=level[l][i];
	if(child[e].size()==0){
	  for(int j=1;j<=MAXK;j++){
	    f[e][j]=(j==1)?2:1;
	  }
	}
	else{
	  for(int j=1;j<=MAXK;j++){
	    sum[j]=j;
	    for(int p=0;p<child[e].size();p++){
	      sum[j]+=f[child[e][p]][j];
	    }
	  }
	  f[e][1]=min(sum[2],sum[3]);
	  f[e][2]=min(sum[1],sum[3]);
	  f[e][3]=min(sum[1],sum[2]);
	}
      }
    }
    LL minimum=min(f[0][1],min(f[0][2],f[0][3]));
    cout<<"Case #"<<t+1<<": "<<minimum<<endl;
  }

  return 0;
}
