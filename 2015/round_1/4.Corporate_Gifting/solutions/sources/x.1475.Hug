#include "iostream"
#include "cstdio"
#include "vector"
#include "map"
#include "algorithm"
#include "cstring"
#include "queue"
using namespace std;
#define rep(i,n) for(int i=0; i<n; ++i)
#define repp(i,a,b) for(int i=a; i<a+b; ++i)
#define SZ size()
#define PB push_back

const int ALL = 4;
const int maxn = 200005;
const int mod = 1000000007;

long long dp[maxn][ALL+1];
std::vector<int> e[maxn];
int f[maxn], n;

void up(long long *a, long long *b){
	int j = -1, k = -1;
	repp(i,1,ALL){
		if(j==-1 || b[i] < b[j]){
			k = j;
			j = i;
		}else{
			if(k==-1 || b[i] < b[k]){
				k = i;
			}
		}
	}
	repp(i,1,ALL){
		if(i==j) a[i] += b[k]; else a[i] += b[j];
	}
}
int q[maxn];
void bfs(){
	int l = 0, r = 1;
	q[0] = 1;
	while(l<r){
		int u = q[l++];
		rep(i,e[u].SZ){
			int v = e[u][i];
			q[r++] = v;
		}
	}
	for(int qq=r-1; qq>=0; --qq){
		int u = q[qq];
		repp(i,1,ALL) dp[u][i] = i;
		rep(i,e[u].SZ){
			int v = e[u][i];
			up(dp[u], dp[v]);
		}	
	}
	// printf("%d:  ", u); repp(i,1,ALL) printf("%lld ", dp[u][i]); printf("\n");
}
int main(int argc, char const *argv[])
{
	int cas;
	scanf("%d", &cas);
	rep(ca,cas){
		scanf("%d", &n);
		repp(i,1,n) e[i].clear();
		repp(i,1,n){
			scanf("%d", f+i);
			e[f[i]].PB(i);
		}
		bfs();
		long long r = 1ll * n * n;
		repp(i, 1, ALL) r = min(r, dp[1][i]);
		printf("Case #%d: %lld\n", ca+1, r);
	}
	return 0;
}