#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <string>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <set>
#include <utility>
#include <vector>
#include <algorithm>
#include <map>
#include <deque>
#include <iomanip>
#include <queue>
#include <iostream>
#include <ctime>
#include <fstream>
#include <functional>
#include <cstdlib>
#include <iterator>
#include <stack>

#define ll long long
#define pb push_back
#define mp make_pair
#define D  double
#define pi pair<ll,ll>
#define si set <pi>
#define F first
#define S second
#define forn(i,n) for (int(i)=0;(i)<(n);i++)
#define forr(i,x,y) for (int(i)=(x);(i)<=(y);i++)
#define ford(i,x,y) for (int(i)=(x);(i)>=(y);i--)
#define rev reverse
#define in insert
#define er erase
#define all(n) (n).begin(),(n).end()
#define graf vector<vector<pi> >
#define graf1 vector<vector<ll> >
#define sqr(a) (a)*(a)
#define file freopen("www.txt","r",stdin);freopen("QQ.txt","w",stdout);

const ll INF=1000000007;
const D cp=2*asin(1.0);
const D eps=1e-9;
const ll mod=1000000007;

using namespace std;

const int num = 105;

int t;

int n;
vector<vector<int> > g;
int f[200005][num + 5];
int res;
vector<int> bstL, bstR;
stack<int> dd;
map<int,int> used;

void dfs(int W)
{
    dd.push(W);
    while(!dd.empty())
    {
        int v=dd.top();
        if (used[v])
        {
            for (int i = 0; i < g[v].size(); ++i)
        {
            int to = g[v][i];
            bstL.assign(num + 5, mod);
            bstR.assign(num + 5, mod);
            for (int j = 1; j < num; ++j)
            {
                bstL[j] = min(bstL[j - 1], f[to][j]);
            }
            for (int j = num - 1; j >= 1; --j)
            {
                bstR[j] = min(bstR[j + 1], f[to][j]);
            }
            for (int j = 1; j < num; ++j)
            {
                int mn = min(bstL[j - 1], bstR[j + 1]);
                f[v][j] += mn;
            }
        }dd.pop();continue;}
        //cout<<v<<endl;
        for (int i = 1; i < num; ++i)
        {
            f[v][i] = i;
        }
        stack<int> y;
        for (int i = 0; i < g[v].size(); ++i)
        {
            int to = g[v][i];
            y.push(to);
        }
        while(!y.empty()) dd.push(y.top()),y.pop();
        used[v]=1;
    }
}

int main()
{
    //file;
    cin.tie(NULL);
    ios_base::sync_with_stdio(false);
    scanf("%d", &t);
    for (int i = 1; i <= t; ++i)
    {
        res = mod;
        scanf("%d", &n);
        g.clear();
        g.resize(n + 5);
        used.clear();
        for (int i = 1; i <= n; ++i) {
            int x; scanf("%d", &x);
            g[x].push_back(i);
        }
        dfs(1);
        for (int i = 1; i < num; ++i) {
            res = min(res, f[1][i]);
        }
        printf("Case #%d: %d\n", i, res);
    }
    return 0;
}
