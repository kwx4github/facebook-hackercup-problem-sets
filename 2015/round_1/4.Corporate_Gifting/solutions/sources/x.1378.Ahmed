#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>

using namespace std;

#define pb push_back
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define sz(v) ((int)v.size())
#define rep(i, m) for (int i = 0; i < (int)(m); i++)
#define rep2(i, n, m) for (int i = n; i < (int)(m); i++)
#define For(it, c) for (__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define mem(a, b) memset(a, b, sizeof(a))
#define mp make_pair
#define dot(a, b) ((conj(a) * (b)).X)
#define X real()
#define Y imag()
#define length(V) (hypot((V).X, (V).Y))
#define vect(a, b) ((b) - (a))
#define cross(a, b) ((conj(a) * (b)).imag())
#define normalize(v) ((v) / length(v))
#define rotate(p, about, theta) ((p - about) * exp(point(0, theta)) + about)
#define pointEqu(a, b) (comp(a.X, b.X) == 0 && comp(a.Y, b.Y) == 0)

typedef stringstream ss;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<string> vs;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vii;
typedef long double ld;
typedef complex<double> point;
typedef pair<point, point> segment;
typedef pair<double, point> circle;
typedef vector<point> polygon;

const int oo = (int) 1e9;
const double PI = 2 * acos(0.0);
const double eps = 1e-9;

int T, N;
vii g;
int p[200002];
int out[200002];

int dp[200002][4];

int main() {
#ifdef AHMED_ALY
	freopen("corporate_gifting.txt", "rt", stdin);
	freopen("b.txt", "wt", stdout);
#endif
	cin >> T;
	rep2(tt,1,T+1)
	{
		cerr << tt << endl;
		cin >> N;
		g.clear();
		g.resize(N);
		mem(out, 0);
		rep(i,N)
		{
			cin >> p[i];
			p[i]--;
			if (!i)
				continue;
			g[p[i]].pb(i);
			out[p[i]]++;
		}
		queue<int> q;
		rep(i,N)
			if (!out[i])
				q.push(i);
		int ret = oo;
		while (sz(q)) {
			int t = q.front();
			q.pop();
			if (!t) {
				rep2(i,1,4)
				{
					int sum = i;
					rep(j,sz(g[t]))
						sum += dp[g[t][j]][i];
					ret = min(ret, sum);
				}
				continue;
			}
			out[p[t]]--;
			if (!out[p[t]])
				q.push(p[t]);
			rep2(k,1,4)
			{
				dp[t][k] = oo;
				rep2(i,1,4)
				{
					if (i == k)
						continue;
					int sum = i;
					rep(j,sz(g[t]))
						sum += dp[g[t][j]][i];
					dp[t][k] = min(dp[t][k], sum);
				}
			}
		}
		cout << "Case #" << tt << ": " << ret << endl;
	}
	return 0;
}
