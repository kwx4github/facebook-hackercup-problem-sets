program problemGifting;
uses math;

type	tEdge =	record
					v, next: longInt;
				end;

var	e: array[ 1..200000 ] of tEdge;
	first: array[ 1..200000 ] of longInt;
	dp: array[ 1..200000, 1..18 ] of longInt;
	ee: longInt;
	
procedure addEdge( u, v: longInt );
begin
	inc( ee );
	e[ee].v := v;
	e[ee].next := first[u];
	first[u] := ee;
end;

procedure dfs( v: longInt );
var	i, j, k, val: longInt;
begin
	i := first[v];
	while ( i > 0 ) do
	begin
		dfs( e[i].v );
	
		i := e[i].next;
	end;

	for i := 1 to 18 do
	begin
		dp[v][i] := i;
		
		j := first[v];
		while ( j > 0 ) do
		begin
			val := 1000000;
			for k := 1 to 18 do
				if ( i <> k ) and ( dp[ e[j].v ][k] < val ) then
					val := dp[ e[j].v ][k];
			
			inc( dp[v][i], val );
		
			j := e[j].next;
		end;
	end;
end;

var	tt, t, n, i, p: longInt;

begin
	readln( tt );
	for t := 1 to tt do
	begin
		fillchar( first, sizeOf(first), 0 );
		ee := 0;
	
		readln( n );
		for i := 1 to n do
		begin
			read( p );
			
			if ( p > 0 ) then
				addEdge( p, i );
		end;
		
		dfs( 1 );
		
		p := 1000000;
		for i := 1 to 18 do
			if ( dp[1][i] < p ) then
				p := dp[1][i];
		
		writeln( 'Case #', t, ': ', p );
	end;
end.
