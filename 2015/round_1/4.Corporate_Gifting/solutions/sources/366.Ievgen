#include <iostream>
#include <string>
#include <cstdio>
#include <set>
#include <algorithm>
#include <vector>
#include <cstring>
#include <map>
#include <queue>
#include <bitset>
#include <ctime>
#pragma comment(linker, "/STACK:256000000")

using namespace std;

const int maxN = 201000;

int is_p[maxN];
int p[maxN];
set<int> q[maxN];
int gfts[maxN];
vector <int> g[maxN];
int used[maxN];
int cdeg[maxN];
set<pair<int, int> > deg;

const int maxK = 100;

long long dp[maxN][maxK];
long long mnexcept[maxN][maxK];

long long calc(int idx) {
	for (int i = 1; i < maxK; ++i) {
		long long csum = i;
		for (int j = 0; j < g[idx].size(); ++j) {
			csum += mnexcept[g[idx][j]][i];
		}
		dp[idx][i] = csum;
	}

	for (int i = 1; i < maxK; ++i) {
		long long cmn = 1000000000000000LL;
		for (int j = 1; j < maxK; ++j) {
			if (j != i) {
				cmn = min(cmn, dp[idx][j]);
			}
		}
		mnexcept[idx][i] = cmn;
	}
}

void solve(int tcase) {
	memset(is_p, 0, sizeof(is_p));
	memset(p, 0, sizeof(p));
	memset(gfts, 0, sizeof(gfts));
	memset(used, 0, sizeof(used));
	memset(cdeg, 0, sizeof(cdeg));
	memset(dp, 0, sizeof(dp));
	memset(mnexcept, 0, sizeof(mnexcept));
	deg.clear();
	for (int i = 0; i < maxN; ++i) {
		q[i].clear();
		g[i].clear();
	}
	printf("Case #%d: ", tcase);
	int n;
	scanf("%d", &n);

	for (int i = 0; i < n; ++i) {
		int x;
		scanf("%d", &x);
		p[i + 1] = x;
		is_p[x] = i + 1;
		g[x].push_back(i + 1);
		++cdeg[x];
	}

	if (n == 1) {
		printf("%d\n", 1);
		return;
	}

	for (int i = 1; i <= n; ++i) {
		deg.insert(make_pair(cdeg[i], i));
	}

	long long res = 0;

	while (!deg.empty()) {
		pair<int, int> cur = *deg.begin();
		deg.erase(deg.begin());

		calc(cur.second);
		if (p[cur.second] != 0) {
			deg.erase(make_pair(cdeg[p[cur.second]], p[cur.second]));
			--cdeg[p[cur.second]];
			deg.insert(make_pair(cdeg[p[cur.second]], p[cur.second]));
		} else {
			long long ans = 1000000000000000LL;
			for (int i = 1; i < maxK; ++i) {
				ans = min(ans, dp[1][i]);
			}
			res = ans;
		}
	}
	cout << res << endl;
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("corporate_gifting_ievgenn.txt", "w", stdout);

	int t;
	scanf("%d", &t);
	for (int i = 1; i <= t; ++i) {
		cerr << i << endl;
		solve(i);
	}

	return 0;
}
