#include<iostream>
#include<cstring>
#include<cstdio>
#include<vector>
#define MAXK 8
#define oo 2000000000

using namespace std;

int kasus,dp[200005][11],N,haha,jawab;
vector<int> child[200005];

int proses(int node,int par) {
    if (child[node].size() == 0) {
        return (par == 1)?2:1;
    } else {
        if (dp[node][par] == -1) {
            dp[node][par] = oo;
            for (int i=1;i<=MAXK;++i) {
                if (i == par) continue;
                int cost = i;
                for (int j=0;j<child[node].size();++j) {
                    cost += proses(child[node][j],i);
                }
                dp[node][par] = min(dp[node][par],cost);
            }
        }
        return dp[node][par];
    }
}

int main() {
    scanf("%d",&kasus);
    for (int l=1;l<=kasus;++l) {
        scanf("%d",&N);
        for (int i=1;i<=N;++i) child[i].clear();
        scanf("%d",&haha);
        for (int i=2;i<=N;++i) {
            scanf("%d",&haha);
            child[haha].push_back(i);
        }
        
        memset(dp,255,sizeof(dp));
        jawab = 1;
        for (int j=0;j<child[1].size();++j) {
            jawab += proses(child[1][j],1);
        }
        
        for (int i=2;i<=MAXK;++i) {
            int cost = i;
            for (int j=0;j<child[1].size();++j) {
                cost += proses(child[1][j],i);
            }
            jawab = min(jawab,cost);
        }
        printf("Case #%d: %d\n",l,jawab);
    }
    return 0;
}
