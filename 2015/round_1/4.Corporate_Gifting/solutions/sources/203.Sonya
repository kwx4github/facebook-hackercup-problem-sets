#pragma comment(linker, "/STACK:64000000")
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<algorithm>
#include<string>
using namespace std;

struct pr
{
	long long i, t;
	pr(long long ie = 0, long long te = 0)
	{
		i = ie;
		t = te;
	}
};

vector<vector<int>> g;

pr a[200005][2];
long long add[200005];


void func(int v)
{
	long long tot = 0;
	for (int i = 0; i < g[v].size(); i++)
		func(g[v][i]);

	int n = g[v].size() + 2;
	for (int i = 1; i <= n; i++)
		add[i] = 0;
	for (int i = 0; i < g[v].size(); i++)
	{
		int to = g[v][i];
		add[a[to][0].i] += a[to][1].t - a[to][0].t;
		tot += a[to][0].t;
	}
	for (int i = 1; i <= n; i++)
	{
		long long cst = tot + add[i] + i;
		if (a[v][0].i == 0 || a[v][0].t > cst)
		{
			a[v][1] = a[v][0];
			a[v][0] = pr(i, cst);
		}
		else if (a[v][1].i == 0 || a[v][1].t > cst)
			a[v][1] = pr(i, cst);
	}
}

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);

	int TT;
	scanf("%d", &TT);


	for (int T = 0; T < TT; T++)
	{
		printf("Case #%d: ", T + 1);

		g.clear();

		int n;
		scanf("%d", &n);
		g.resize(n);
		memset(a, 0, sizeof(a));
		for (int i = 0; i < n; i++)
		{
			int p;
			scanf("%d", &p);
			p--;
			if (p >= 0)
				g[p].push_back(i);
		}

		func(0);
		printf("%lld\n", a[0][0].t);
	}

	return 0;
}