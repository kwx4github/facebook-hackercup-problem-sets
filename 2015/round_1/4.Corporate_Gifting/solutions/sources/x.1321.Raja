#include<bits/stdc++.h>
 
using namespace std;
 
typedef unsigned long long ull;
typedef long long ll;
#define rep(i,a,n) for(int i = a; i < n; ++i)
#define repe(i,a,n) for(int i = a; i <= n; ++i)
#define mfill(a,b) memset(a, b, sizeof(a))
#define all(a) a.begin(), a.end()
#define pb(a) push_back(a)
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
 
 
 
 
int main()
{
    ios_base::sync_with_stdio(false);
//  freopen("t_case.txt","r",stdin);
    int t;
    cin>> t;
   //precompute();
    repe(_cases,1,t)
    {
        int n;
        cin >> n;
        int input[n+1],length = 0;
        vector<int> a[n+1], level[n+1];
        ll b[n+1], total[n+1], emp[n+1], emptotal[n+1];
        repe(i,1,n)
        {
        	cin >> input[i];
        	a[input[i]].pb(i);
        }
        level[0].pb(1);
        	rep(i,0,n-1)
        		{
        			for(int x: level[i])
        				for(int y: a[x])
        					level[i+1].pb(y);
 
        		}
        		int i = 0;
        while(!level[i].empty())
        {
        	++length;
        	++i;
        }
        for(int  i = length -1 ; i >= 0; --i)
        {
        	for(int x: level[i])
        	{
        		if(a[x].empty())
        			{
        				emptotal[x] = 2;
        				emp[x] = 2;
        				b[x] = 1;
        				total[x] = 1;
        			}
        		else
        		{
        			b[x] = 1;
        			emptotal[x] = 0;
        			total[x] = 1;
        			for(int y: a[x])
        				{
        					if(b[y] != 1)
        						total[x] += total[y];
        					else
        						total[x] +=emptotal[y];
        				}
        		}
 
        		int ok = 0;
 
        		for(int  k = 2; k <= n and ok < 1; ++k)
        		{
        			ll newb = k;
        				for(int y: a[x])
        					{
        						if(b[y] != k)
        						 newb += total[y];
        						else
        							newb += emptotal[y];
        					}
        			if(newb <= total[x])
        				{
        					emptotal[x] = total[x];
        					b[x] = k;
        					emp[x] = b[x];
        					total[x] = newb;
 
        				}
        			else if(newb < emptotal[x] or emptotal == 0)
        			{
        				emptotal[x] = newb;
        				emp[x] = k;
        			}
        			else
        				ok = 1;
        		}
        	}
        }
        cout << "Case #" <<_cases <<": " << total[_cases]<<"\n";
    }
    return 0;
}