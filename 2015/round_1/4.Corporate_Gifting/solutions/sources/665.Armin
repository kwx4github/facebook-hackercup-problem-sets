#include <cstdio>
#include <iostream>
#include <queue>
#include <vector>

using namespace std;

typedef long long int ll;
#define MAXN 200010
#define LOGN 30

int min(int a, int b){
    return (a<b)?a:b;
}

int T, N;

int deg[MAXN];
int cdg[MAXN];
int mng[MAXN];

int vlf[MAXN][LOGN+2];
vector<int> nbs[MAXN];

queue<int> nxt;

int main(){

    scanf("%d ", &T);
    for(int cas=1;cas<=T;cas++){
        scanf("%d ", &N);

        for(int i=0; i<MAXN; i++){
            deg[i] = 0; cdg[i] = 0;
            nbs[i].clear();
            for(int j=0;j<LOGN;j++) vlf[i][j] = 0;        
        }

        for(int i=1; i<=N; i++){
            int m;
            scanf("%d ", &m);
            nbs[m].push_back(i);
            deg[m] += 1;
            cdg[m] += 1;
            mng[i] = m;       
         }
 
        for(int i=1; i<=N; i++){
            if(deg[i] == 0) nxt.push(i);
        } 

        while(!nxt.empty()){
            int w = nxt.front();
            nxt.pop();
            
            //set up a leaf
            if(deg[w] == 0){
                vlf[w][1] = 2;
                for(int i=2;i<=LOGN;i++) vlf[w][i] = 1;
            }else{
                for(int i=1;i<=LOGN;i++) vlf[w][i] = 2*N;
                for(int l=1;l<=LOGN;l++){
                    int res = l;
                    for(int j=0; j<deg[w];j++) res+= vlf[nbs[w][j]][l];
                    for(int k=1; k<=LOGN; k++){
                        if(k==l) continue;
                        else vlf[w][k] = min(res, vlf[w][k]);
                    }
                }
            }

            cdg[mng[w]] -=1;
            if(cdg[mng[w]] == 0) nxt.push(mng[w]);
        }

        int erg = 2*N;       
        for(int i=1;i<=LOGN;i++){                        
            erg = (vlf[1][i]<erg)? vlf[1][i] : erg; 
        }
              
        printf("Case #%d: %d\n", cas, erg);
       }
    return 0;
}
