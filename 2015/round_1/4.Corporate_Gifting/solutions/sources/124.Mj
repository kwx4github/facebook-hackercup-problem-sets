#include <iostream>
#include <fstream>
#include <vector>
#pragma comment(linker, "/STACK:50000000") 
#define MAXN 200007
#define MAXK 50
using namespace std;

ifstream fin( "D.in" );
ofstream fout( "D.out" );
#define cin fin
#define cout fout

int dp[MAXN][MAXK], n;
vector< int > v[MAXN];

int solve( int cur, int parNum ){
	int& ref = dp[cur][parNum];
	if( ref != -1 )
		return ref;
	ref = MAXN * MAXK;
	for( int i = 1; i < MAXK; i++ ){
		if( i == parNum )
			continue;
		int a = i;
		for( int j = 0; j < v[cur].size(); j++ ){
			int u = v[cur][j];
			a += solve( u, i );
		}
		ref = min( ref, a );
	}
	return ref;
}

int main()
{
	int test;
	cin >> test;
	for( int T = 1; T <= test; T++ ){
		cerr << T << endl;
		cin >> n;
		memset( dp, -1, sizeof dp );
		for( int i = 0; i <= n; i++ )
			v[i].clear();
		for( int i = 1; i <= n; i++ ){
			int par;
			cin >> par;
			v[par].push_back( i );
		}
		cout << "Case #" << T << ": " << solve( 1, MAXK - 1 ) << endl;
	}
	return 0;
}