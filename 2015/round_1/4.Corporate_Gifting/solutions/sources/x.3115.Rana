#include <algorithm>
#include <iostream>
#include <memory.h>
#include <cstdio>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
using namespace std;
#define sz(s) int((s).size())
#define clr(a) memset(a,0,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define rep(i,n) for(int(i)=0; (i)<(n);++(i))
#define eb emplace_back
#define pb push_back
#define ff first
#define ss second
typedef pair <int,int> pii;
typedef long long LL;
template <class T> inline T gcd(T a,T b){return (!b? a : gcd(b,a%b));}
template <class T> inline T ABS(T x){return ((x)>0?(x):(-(x)));}
const int N = 200000 + 10;

vector <int> g [N];
int par [N];
int dp [N];

void bfs (int u) {
  queue <int> qq;
  qq.push (u);
  while (!qq.empty ()) {
    int u = qq.front ();
    qq.pop ();
    for (int i = 1; i <= 100; ++i) {
      if (dp [par [u]] != i) {
        dp [u] = i;
        break;
      }
    }
    for (int v : g [u]) {
      qq.push (v);
    }
  }
}

map <int, bool> mm;
void dfs (int u) {
  for (int v : g [u]) {
    dfs (v);
  }
  if (sz (g [u]) == 0) {
    dp [u] = 1;
  }
  mm.clear ();
  for (int v : g [u]) {
    mm [dp [v]] = 1;
  }
  for (int i = 1; i <= 100; ++i) {
    if (mm [i] == 0) {
      dp [u] = i;
      break;
    }
  }
}

int main() {
  freopen ("corporate_gifting.txt", "r", stdin);
  freopen ("out.txt", "w", stdout);
  cin.sync_with_stdio (0); cin.tie (0);
  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; ++tc) {
    cout << "Case #" << tc << ": ";
    int n;
    cin >> n;
    for (int v = 1; v <= n; ++v) {
      g [v].clear ();
    }
    for (int v = 1; v <= n; ++v) {
      int u;
      cin >> u;
      if (v == 1) continue;
      g [u].pb (v);
      par [v] = u;
    }
    LL ans1 = 0, ans2 = 123456789878;
    for (int i = 1; i <= n; ++i) {
      dp [i] = 0;
    }
    bfs (1);
    for (int i = 1; i <= n; ++i) {
      ans1 += dp [i];
    }
    //for (int i = 1; i <= n; ++i) {
      //dp [i] = 0;
    //}
    //dfs (1);
    //for (int i = 1; i <= n; ++i) {
      //ans2 += dp [i];
    //}
    cout << min (ans1, ans2) << '\n';
  }
}
