#include <iostream>
#include <utility>
#include <algorithm>
#include <memory.h>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <stdlib.h>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <list>

using namespace std;

int main() {
  
  freopen("/Users/shalinisah/Desktop/corporate_gifting.txt","r",stdin);
  freopen("/Users/shalinisah/Desktop/giftingout.txt","w",stdout);
  
  int t, n;
  cin>>t;
  for (int i = 1;i <= t;++i) {
    cin>>n;
    vector<int>subs(n+1,0), manager(n+1,0);
    vector<set<int> >gifts(n+1);
    for (int j = 0;j < n;++j) {
      cin>>manager[j+1];
      if (manager[j+1] == 0) {
        continue;
      }
      ++subs[manager[j+1]];
    }
    long long ans = 0;
    vector<int>freeGuys;
    do {
      if (freeGuys.empty()) {
        for(int i = 1;i <= n;++i) {
          if (subs[i] == 0) {
            freeGuys.push_back(i);
            subs[i] = -1;
          }
        }
      }
      
      vector<int>newlyFreedGuys;
      
      int nn = (int)freeGuys.size();
      
      for(int i = 0;i < nn;++i) {
        
        for(int j = 1;j <= n;++j) {
          
          if (gifts[freeGuys[i]].find(j) != gifts[freeGuys[i]].end()) {
            continue;
          }
          ans += j;
          gifts[manager[freeGuys[i]]].insert(j);
          break;
          
        }
        
        --subs[manager[freeGuys[i]]];
        if (!subs[manager[freeGuys[i]]]) {
          newlyFreedGuys.push_back(manager[freeGuys[i]]);
          subs[manager[freeGuys[i]]] = -1;
        }
        
      }
      freeGuys = newlyFreedGuys;
    }while (!freeGuys.empty());
    cout<<"Case #"<<i<<": "<<ans<<"\n";
  }
  return 0;
}