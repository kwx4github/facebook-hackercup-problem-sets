import java.io.IOException;
import java.util.HashSet;
import java.util.Locale;
import java.util.Scanner;
import java.util.Set;

public class CorporateGifting {

    private void processInput() throws IOException {
        Scanner in = new Scanner(System.in);
        int T = in.nextInt();

        for (int testCase = 1; testCase <= T; testCase++) {
            int n = in.nextInt();
            int[] hierarchy = new int[n];
            for (int i = 0; i < n; i++) {
                hierarchy[i] = in.nextInt() - 1;
            }
            hierarchy[0] = 0;
            go(testCase, n, hierarchy);
        }

        in.close();
    }

    void go(int t, int n, int[] hierarchy) {
        int[] level = new int[n];
        
        level[0] = 0;
        for (int i = 1; i < n; i++) {
            level[i] = level[hierarchy[i]] + 1;
        }

        // by levels
        int odd = 0;
        int even = 0;
        for (int i = 0; i < n; i++) {
            if (level[i] % 2 == 0) {
                even++;
            } else {
                odd++;
            }
        }
        long res = Math.min(even * 2 + odd, even + odd * 2);
        
        // by leafs
        long res2 = 0;
        Set<Integer>[] gifts = new HashSet[n];
        for (int i = 0; i < n; i++) {
            gifts[i] = new HashSet<Integer>();
        }
        
        for (int i = n - 1; i >= 0; i--) {
            int val = 1;
            while (gifts[i].contains(val)) {
                val++;
            }
            gifts[hierarchy[i]].add(val);
            res2 += val;
//            gifts[i] = null;
        }
        res = Math.min(res, res2);
        
        System.out.printf(Locale.ENGLISH, "Case #%d: %d\n", t, res);
    }

    public static void main(String[] args) throws Exception {
        CorporateGifting a = new CorporateGifting();
        a.processInput();
    }
}
