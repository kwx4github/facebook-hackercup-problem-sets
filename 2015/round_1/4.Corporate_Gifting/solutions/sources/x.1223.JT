#include <cstdio>
#include <iostream>
using namespace std;

#define MIN(a,b) (a<b ? a : b)
const int N = 200000;
struct Employee {
	int cost[3], under;
	Employee * man, * next;
	Employee * work, * last;
} emp[N]; int cnt;

void add_employee(Employee * man, Employee * work){
	work->man = man;
	++man->under;
	if (man->work){
		man->last->next = work;
		man->last = work;
	}
	else man->work = man->last = work;
}

void determine_cost(){
	for (int x = 0; x < cnt; ++x)
		for (int y = 0; y < 3; ++y)
			emp[x].cost[y] = y+1;
	while (true){
		bool found = false;
		for (int x = 0; x < cnt; ++x){
			if (emp[x].under == 0){
				Employee * cur = &emp[x];
				do {
					for (Employee * e = cur->work; e; e = e->next)
						cur->cost[0] += MIN(e->cost[1], e->cost[2]);
					for (Employee * e = cur->work; e; e = e->next)
						cur->cost[1] += MIN(e->cost[0], e->cost[2]);
					for (Employee * e = cur->work; e; e = e->next)
						cur->cost[2] += MIN(e->cost[0], e->cost[1]);
					cur->under = -1;
					cur = cur->man;
				} while (cur && --cur->under == 0);
				found = true;
			}
		}
		if (!found) break;
	}
}

int main(){
	int run, id, spent;
	FILE * fin, * fout;
	freopen_s(&fin, "corporate_gifting.txt", "r", stdin);
	freopen_s(&fout, "gift.out", "w", stdout);
	cin >> run;
	for (int a = 1; a <= run; ++a){
		cin >> cnt >> spent;
		for (int x = 0; x < N; ++x){
			emp[x].under = 0;
			emp[x].man = emp[x].next = emp[x].work = emp[x].last = NULL;
		}
		for (int x = 1; x < cnt; ++x){
			cin >> id;
			add_employee(&emp[id-1], &emp[x]);
		}
		determine_cost();
		spent = MIN(emp[0].cost[0], emp[0].cost[1]);
		spent = MIN(spent, emp[0].cost[2]);
		cout << "Case #" << a << ": " << spent << endl;
	}
	return 0;
}
