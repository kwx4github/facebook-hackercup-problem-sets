import java.io.*;
import java.util.*;

public class A {
	FastScanner in;
	PrintWriter out;

	long[] go(int v, ArrayList<Integer>[] g) {
		long[] res = new long[] { -1, Long.MAX_VALUE, -1, Long.MAX_VALUE };
		HashSet<Integer> hs = new HashSet<>();
		HashMap<Integer, Long> hmAdd = new HashMap<>();
		long curSum = 0;
		for (int to : g[v]) {
			long[] tmpRes = go(to, g);
			hs.add((int) tmpRes[0]);
			hs.add((int) tmpRes[2]);
			Long curAdd = hmAdd.get((int) tmpRes[0]);
			if (curAdd == null) {
				curAdd = 0L;
			}
			curAdd += tmpRes[3] - tmpRes[1];
			hmAdd.put((int) tmpRes[0], curAdd);
			curSum += tmpRes[1];
		}
		int newOne = 1;
		for (int cnt = 0; cnt < 2; cnt++) {
			while (hs.contains(newOne)) {
				newOne++;
			}
			hs.add(newOne);
		}
		for (int check : hs) {
			long curCost = curSum + check;
			Long add = hmAdd.get(check);
			if (add != null) {
				curCost += add;
			}
			if (res[1] > curCost) {
				res[2] = res[0];
				res[3] = res[1];
				res[0] = check;
				res[1] = curCost;
			} else {
				if (res[3] > curCost) {
					res[3] = curCost;
					res[2] = check;
				}
			}
		}
		return res;
	}

	void solve() {
		int tc = in.nextInt();
		for (int t = 0; t < tc; t++) {
			out.print("Case #" + (t + 1) + ": ");
			int n = in.nextInt();
			ArrayList<Integer>[] g = new ArrayList[n];
			for (int i = 0; i < n; i++) {
				g[i] = new ArrayList<>();
			}
			for (int i = 0; i < n; i++) {
				int p = in.nextInt() - 1;
				if (p != -1) {
					g[p].add(i);
				}
			}
			out.println(go(0, g)[1]);
			System.err.println((t + 1) + "/" + tc + " done");
		}
	}

	void run() {
		try {
			in = new FastScanner(new File("corporate_gifting.txt"));
			out = new PrintWriter(new File("A.out"));

			solve();

			out.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	void runIO() {

		in = new FastScanner(System.in);
		out = new PrintWriter(System.out);

		solve();

		out.close();
	}

	class FastScanner {
		BufferedReader br;
		StringTokenizer st;

		public FastScanner(File f) {
			try {
				br = new BufferedReader(new FileReader(f));
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}

		public FastScanner(InputStream f) {
			br = new BufferedReader(new InputStreamReader(f));
		}

		String next() {
			while (st == null || !st.hasMoreTokens()) {
				String s = null;
				try {
					s = br.readLine();
				} catch (IOException e) {
					e.printStackTrace();
				}
				if (s == null)
					return null;
				st = new StringTokenizer(s);
			}
			return st.nextToken();
		}

		boolean hasMoreTokens() {
			while (st == null || !st.hasMoreTokens()) {
				String s = null;
				try {
					s = br.readLine();
				} catch (IOException e) {
					e.printStackTrace();
				}
				if (s == null)
					return false;
				st = new StringTokenizer(s);
			}
			return true;
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}
	}

	public static void main(String[] args) {
		new A().run();
	}
}