#include <bits/stdc++.h>
#include <fstream>
using namespace std;
int t,te,n,inp[200001],dp[200001][4],vis[200001];
vector<int> adj[200001];
set <int> s;
set<int>::iterator it;
void dfs(int n){
	if(adj[n].size()==0){
		dp[n][0]=dp[n][1]=1;
		dp[n][2]=dp[n][3]=2;
		return ;
	}
	dp[n][0]=dp[n][1]=dp[n][2]=dp[n][3]=2000000;
	int i,j;
	s.clear();
	for(i=0;i<adj[n].size();i++)s.insert(dp[adj[n][i]][0]);
	for(i=1,it=s.begin();*it==i&&it!=s.end();i++,it++);
	s.insert(i);
	for(it=s.begin();it!=s.end();it++){
		j=*it;
		for(i=0;i<adj[n].size();i++){
			if(dp[adj[n][i]][0]!=*it)j+=dp[adj[n][i]][1];
			else j+=dp[adj[n][i]][3];
		}
		if(j<dp[n][3]){
			dp[n][2]=*it;
			dp[n][3]=j;
			if(dp[n][3]<dp[n][1]){
				swap(dp[n][3],dp[n][1]);
				swap(dp[n][2],dp[n][0]);
			}
		}
	}
	return;
}
int main(){
	int i,j,k,mi,ma,x;
	ifstream f1;
	ofstream f2;
	f1.open("input.txt");
	f2.open("output.txt");
	f1>>t;
	for(te=0;te<t;te++){
		f1>>n;
		for(i=0;i<n;i++)f1>>inp[i],inp[i]--,adj[i].clear();
		for(i=1;i<n;i++)adj[inp[i]].push_back(i);
		queue<int> q;
		q.push(0);
		i=n-1;
		while(!q.empty()){
			j=q.front();
			q.pop();
			vis[i--]=j;
			for(k=0;k<adj[j].size();k++)q.push(adj[j][k]);
		}
		for(i=0;i<n;i++)dfs(vis[i]);
		cout<<"Case #"<<te+1<<": "<<dp[0][1]<<"\n";
		f2<<"Case #"<<te+1<<": "<<dp[0][1]<<"\n";
	}
	f1.close();
	f2.close();
	return 0;
}
