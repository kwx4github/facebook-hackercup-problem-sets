#include <bits/stdc++.h>
#define MAX 200005
using namespace std;
typedef vector < int > vi;
typedef pair < int, int > pii;
typedef vector < pii > vii;
typedef pair < pii, set < int > > node;
typedef long long ll;
vector < vi > lista;
int n, c[MAX];
bool vis[MAX];
stack < node > q;
int iterDFS(int ini)
{
	stack < node > tmp;
	swap(q,tmp);
	q.push(node(pii(ini, 0), set < int >()));
	while(!q.empty())
	{
totem: 	node u=q.top();
		for(int i=u.first.second;i<lista[u.first.first].size();i++)
		{
			node aux=q.top();
			q.pop();
			aux.first.second++;
			q.push(aux);
			int v=lista[u.first.first][i];
			q.push(node(pii(v, 0),set < int >()));
			goto totem;
		}
		if(lista[u.first.first].size() == 0)
		{	
			c[u.first.first]=1;
			q.pop();
		}	
		else
		{
			for(int i=0;i<lista[u.first.first].size();i++)
			{
				int v=lista[u.first.first][i];
				u.second.insert(c[v]);
			}
			for(int i=1;i<=n;i++)
				if(u.second.find(i) == u.second.end())
				{
					c[u.first.first]=i;
					break;
				}
			q.pop();	
		}
	}
}
int main()
{
	int test;
	scanf("%d", &test);
	for(int te=1;te<=test;te++)
	{	
		scanf("%d", &n);
		lista.assign(n, vi());
		for(int i=0;i<n;i++)
		{
			int v;
			scanf("%d", &v);
			if(i==0) continue;
			lista[v-1].push_back(i);
		}
		memset(vis, 0, sizeof vis);
		iterDFS(0);
		int ans=0;
		for(int i=0;i<n;i++)
		{
			//cout<<i+1<<" "<<c[i]<<endl;
			ans+=c[i];
		}	
		printf("Case #%d: %d\n", te, ans);
	}
}

