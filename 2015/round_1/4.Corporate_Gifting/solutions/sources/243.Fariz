#include<bits/stdc++.h>
 
using namespace std;
 
vector<int> graph[202020];
int dp[202020][22];
 
int solve(int u, int p, int color) { 
  int &ret = dp[u][color];
  if (ret != -1) 
    return ret;
  int ans = color;
  for (int i = 0; i < graph[u].size(); i++) {
    int v = graph[u][i];
    int add = 1 << 30;
    if (v == p) 
      continue;
    for (int j = 1; j < 22; j++)
      if (color != j)
        add = min(add, solve(v, u, j));
    ans += add;
  }
  return ret = ans;
}
 
int main() {
  freopen("corporate_gifting.txt", "r", stdin);
  freopen("corporate_gifting.out", "w", stdout);
  int t;
  scanf("%d", &t);
  for (int tc = 1; tc <= t; tc++) {
    int n, u;
    scanf("%d", &n);
    for (int i = 0; i <= n; i++)
      for(int j = 0; j < 22; j++)
        dp[i][j] = -1;   
    for (int i = 0; i <= n; i++)
      graph[i].clear();
    for (int i = 1; i <= n; i++) {
      scanf("%d", &u);
      if (i == 1)
        continue;
      graph[i].push_back(u);
      graph[u].push_back(i);
    }
    int ans = 1 << 30;
    for (int i = 1; i < 22; i++)
      ans = min(ans, solve(1, 1, i));
    printf("Case #%d: %d\n", tc, ans);
  }
  return 0;
}