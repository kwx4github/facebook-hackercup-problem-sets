#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <sstream>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <map>
#include <set>
#include <list>
#include <queue>
#include <stack>
#include <vector>
#include <cassert>

using namespace std;

#define pb push_back
#define mp make_pair
#define REP(i, n) for (int i = 0; i < (int)(n); ++i)
#define foreach(e, x) for (__typeof(x.begin()) e = x.begin(); e != x.end(); ++e)
typedef long long LL;
typedef pair<int, int> PII;

int t, n;
vector<int> g[200005];
int d1[200005], d2[200005];
LL v1[200005], v2[200005];
const LL INF = 1e18;

void go(int v, int par = -1) {
    int upTo = 2;
    for (int to : g[v]) if (to != par) {
        go(to, v);
        upTo = max(upTo, d1[to] + 1);
        upTo = max(upTo, d2[to] + 1);
    }
    upTo = min(upTo, n);
    int cd1 = -1, cd2 = -1;
    LL cv1 = INF, cv2 = INF;
    for (int i = 1; i <= upTo; ++i) {
        LL cur = i;
        for (int to : g[v]) if (to != par) {
            if (d1[to] == i) cur += v2[to];
            else cur += v1[to];
        }
        if (cur < cv1) {
            cd2 = cd1;
            cv2 = cv1;
            cd1 = i;
            cv1 = cur;
        } else if (cur < cv2) {
            cd2 = i;
            cv2 = cur;
        }
    }
    d1[v] = cd1;
    d2[v] = cd2;
    v1[v] = cv1;
    v2[v] = cv2;
}

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    scanf("%d", &t);
    for (int test = 1; test <= t; ++test) {
        printf("Case #%d: ", test);
        scanf("%d", &n);
        REP(i, n + 1) g[i].clear();
        for (int i = 1; i <= n; ++i) {
            int x;
            scanf("%d", &x);
            if (x > 0) g[x].pb(i);
        }
        if (n == 1) {
            printf("%d\n", 1);
            continue;
        }
        go(1);
        printf("%I64d\n", v1[1]);
        REP(i, n + 1) g[i].clear();
    }
	return 0;
}
