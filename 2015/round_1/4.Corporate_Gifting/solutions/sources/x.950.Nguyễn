#include <bits/stdc++.h>

#define reset(a , b) memset(a , b , sizeof(a))
#define REP(i , A) for(int i = 0 ; i < A.size() ; i++)

using namespace std;

const int INF = 1000000007;
const int N = 200100;

int n , T , f[N][100];
vector<int> adj[N];

void dfs(int u) {
    for (int i = 1 ; i <= 60 ; i++)
        f[u][i] = i;

    REP(i , adj[u]) {
        int v = adj[u][i];
        dfs(v);
        for (int j = 1 ; j <= 60 ; j++) {
            int mi = INF;
            for (int t = 1 ; t <= 60 ; t++)
                if (j != t) mi = min(mi , f[v][t]);
            f[u][j] += mi;
        }
    }
}

int main() {
    //freopen("real.txt" , "r" , stdin);
    //freopen("output.out" , "w" , stdout);

    cin >> T;
    for (int test = 1 ; test <= T ; test++) {
        cin >> n;
        for (int i = 1 ; i <= n ; i++)
            adj[i].clear();
        for (int i = 1 ; i <= n ; i++){
            int x;
            scanf("%d" , &x);
            if (x != 0) adj[x].push_back(i);
        }


        reset(f , 0);
        //dfs(1);

        for (int u = n ; u > 0 ; u--) {
            for (int i = 1 ; i <= 60 ; i++)
                f[u][i] = i;
            REP(i , adj[u]) {
                int v = adj[u][i];
                for (int j = 1 ; j <= 60 ; j++) {
                    int mi = INF;
                    for (int t = 1 ; t <= 60 ; t++)
                        if (j != t) mi = min(mi , f[v][t]);
                    f[u][j] += mi;
                }
            }
        }

        int ans = INF;
        for (int i = 1 ; i <= 30 ; i++)
            ans = min(ans , f[1][i]);

        cout << "Case #" << test << ": " << ans << endl;
    }
}

