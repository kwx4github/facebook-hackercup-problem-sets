#include <bits/stdc++.h>
using namespace std;
const int N = 200005, LOG = 20, INF = 1e9;
vector<int> V[N];
int t, n, x;
int dp[LOG + 5][N], pref[LOG + 5][N], suf[LOG + 5][N];
void DFS(int w)
{
	for(int i = 0; i < V[w].size(); i++)
		DFS(V[w][i]);
	for(int i = 1; i <= LOG; i++)
	{
		int sum = 0;
		for(int j = 0; j < V[w].size(); j++)
		{
			int u = V[w][j];
			sum += min(pref[i][u], suf[i][u]);
		}
		dp[i][w] = sum + i;
	}
	pref[1][w] = INF;
	for(int i = 2; i <= LOG; i++)
		pref[i][w] = min(pref[i - 1][w], dp[i - 1][w]);
	suf[LOG][w] = INF;
	for(int i = LOG - 1; i >= 1; i--)
		suf[i][w] = min(suf[i + 1][w], dp[i + 1][w]);
}

int main()
{
	scanf("%d", &t);
	for(int zz = 1; zz <= t; zz++)
	{
		printf("Case #%d: ", zz);
		scanf("%d", &n);
		for(int i = 1; i <= n; i++)
			V[i].clear();
		for(int i = 1; i <= n; i++)
		{
			scanf("%d", &x);
			V[x].push_back(i);
		}
		DFS(1);
		printf("%d\n", min(pref[LOG][1], dp[LOG][1]));		
	}
}

