#include <cstdio>
#include <cassert>
#include <set>
#include <vector>
#include <algorithm>
#include <cstring>
#include <queue>

using namespace std;

const int MAXN = 1 << 18;

int deg[MAXN];
int dad[MAXN];

set <int> S[MAXN];

int main (void){
  int t; scanf("%d", &t);
  for (int tc = 1; tc <= t; ++tc){
    int n; scanf("%d", &n);

    for (int i = 0; i <= n; ++i){ S[i].clear(); dad[i] = deg[i] = 0; }
    for (int i = 0; i < n; ++i){
      int x; scanf("%d", &x);
      if (x){
	dad[i+1] = x;
	++deg[x];
      }
    }

    queue <int> Q;
    for (int i = 1; i <= n; ++i)
      if (deg[i] == 0) Q.push(i);

    long long ans = 0;
    while (!Q.empty()){
      int curr = Q.front();
      Q.pop();

      int moj = -1;

      for (int j = 1; j <= n; ++j)
	if (S[curr].count(j) == 0){
	  moj = j;
	  break;
	}

      if (moj == -1) assert(0);
      ans += moj;

      int f = dad[curr];
      if (f > 0){
	S[f].insert(moj);
	if (--deg[f] == 0) Q.push(f);
      }
    }

    printf("Case #%d: %lld\n", tc, ans);
  }

  return 0;
}

