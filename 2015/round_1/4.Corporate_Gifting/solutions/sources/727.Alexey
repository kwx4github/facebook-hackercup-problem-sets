#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <queue>
#include <stack>
#include <sstream>
#include <cstring>
#include <numeric>
#include <ctime>

#define re return
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)
#define y0 y32479
#define y1 y95874
#define fill(x, y) memset(x, y, sizeof(x))
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
#define spc(i,n) " \n"[i == n - 1]

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef double D;
typedef long double LD;
typedef long long ll;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;

template<class T> T abs(T x) { return x > 0 ? x : -x;}

int m;
int n;

vi v[200500];
ii best[200500][2];

void go(int x) {
	int r = 0;
	rep(i, sz(v[x])) {
		int y = v[x][i];
		go(y);
		r = max(r, best[y][0].se);
		r = max(r, best[y][1].se);
	}

	int z = sz(v[x]) + 2;
	z = min(z, r + 2);

	vii tmp;
	for (int c = 1; c <= z; c++) {
		ll ans = c;
		if (c > 1000)
			break;
		int g = 1;
		rep(i, sz(v[x])) {
			int y = v[x][i];
			if (best[y][0].se == c)
				ans += best[y][1].fi;
			else
				ans += best[y][0].fi;
			if (sz(tmp) >= 2 && tmp.back().fi <= ans) {
				g = 0;
				break;
			}
		}
		if (g) {
			tmp.pb(mp(ans, c));
			sort(all(tmp));
			if (sz(tmp) > 2)
				tmp.pop_back();
		}
	}
	best[x][0] = tmp[0];
	best[x][1] = tmp[1];
}

void solve() {
	cin >> n;
	rep(i, n)
		v[i].clear();
	rep(i, n) {
		int x;
		cin >> x;
		if (x != 0) {
			x--;
			v[x].pb(i);
		}
	}
	go(0);
	cout << best[0][0].fi << endl;
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int tc;
	cin >> tc;
	rep(tt, tc) {
		cout << "Case #" << tt + 1 << ": ";

		solve();
	}

	re 0;
}
