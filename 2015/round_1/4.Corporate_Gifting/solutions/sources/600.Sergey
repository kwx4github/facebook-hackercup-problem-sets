#pragma comment(linker, "/STACK:200000000")

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <cassert>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <sstream>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef vector <int> vi;

#define pb push_back
#define mp make_pair

template <class T> inline T sqr(const T& x) { return x * x; }
template <class T> inline void updMin(T& a, const T& b) { if (b < a) a = b; }
template <class T> inline void updMax(T& a, const T& b) { if (b > a) a = b; }


void precalc() {

}

const int K = 25;

//int used[2002][2002]; 
//int mas[2002][2002]; 
int used[1000000][30]; 
int mas[1000000][30]; 

int puted[1000000][30]; 
int ans[1000000]; 
int ITER = 1; 
bool usedd[2002]; 

int a[1000000]; 
vector<vector<int> > b; 
int n; 


void solve(int tc) {
	//init 

	//solve



	//put answer

	//cout << "Case #" << tc << ": " << ans << " " << ans2 << "\n"; 
}

int f1(int v, int k) {
	if (used[v][k] == ITER) return mas[v][k]; 
	used[v][k] = ITER; 

	int ans = 1000000000; 
	for (int i = 1; i <= 10; i++) {
		if (i == k) continue; 
		int res = i; 
		for (int j = 0; j < b[v].size(); j++) {
			res += f1(b[v][j], i); 
		}
		if (res < ans) ans = res, puted[v][k] = i; 
	}
	return mas[v][k] = ans; 
}

int f2(int v, int k) {
	if (used[v][k] == ITER) return mas[v][k]; 
	used[v][k] = ITER; 

	int ans = 1000000000; 
	for (int i = 1; i <= K; i++) {
		if (i == k) continue; 
		int res = i; 
		for (int j = 0; j < b[v].size(); j++) {
			res += f2(b[v][j], i); 
		}
		if (res < ans) ans = res, puted[v][k] = i;; 
	}
	return mas[v][k] = ans; 
}

void dfs(int v, int k) { 
	ans[v] = puted[v][k]; 
	for (int j = 0; j < b[v].size(); j++) {
		dfs(b[v][j], puted[v][k]); 
	}
}

void print() {
	dfs(0, 0); 
	int maxx = 0; 
	for (int i = 0; i < n; i++) {
		//cout << ans[i] << " "; 
		maxx = max(maxx, ans[i]); 
	}
	cout << maxx; 
	cout << "\n"; 
}


int f3(int v) {
	bool usedd[100] = { 0 }; 
	memset(usedd, 0, sizeof(usedd));
	int minv = 1; 
	int sum = 0; 
	for (int i = 0; i < b[v].size(); i++) {
		sum += f3(b[v][i]);
		usedd[ans[b[v][i]]] = 1; 
	}
	for (int i = 1; i <= 1000; i++) {
		if (!usedd[i]) {
			minv = i; 
			break; 
		}
	}
	ans[v] = minv;
	return sum + minv; 
}

void print2() {
	for (int i = 0; i < n; i++) {
		cout << ans[i] << " "; 
	}
	cout << "\n"; 
}

void gen() {
	int N = 200000; 
	freopen("input2.txt", "w", stdout); 
	cout << 1 << endl << N << endl; 
	a[0] = 0; 
	cout << "0 "; 
	for (int j = 1; j < N; j++) {
		a[j] = rand() % j + 1; 
		cout << a[j] << " "; 
	}
	cout << endl; 
	return; 
	ITER++; 
	int ans1 = f1(0, 0); 
	
	ITER++; 
	int ans2 = f2(0, 0);
	//int ans2 = f3(0); 

	if (ans1 != ans2) {
		cout << "WA:\n" << N << " "; 
		for (int j = 0; j < N; j++) {
			cout << a[j] << " "; 
		}
		cout << "\n"; 
		for (int j = 1; j < N; j++) {
			cout << a[j] << " " << j + 1 << "\n"; 
		}
	}
}

int main()
{
//	gen(); 
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

	b.resize(1000000); 

	int tc; 
	cin >> tc; 
	for (int i = 0; i < tc; i++) {
		cerr << tc << "\n"; 
		cin >> n; 
		for (int j = 0; j < n; j++) {
			b[j].clear(); 
		}

		for (int j = 0; j < n; j++) {
			cin >> a[j]; 
			if (a[j]) {
				b[a[j] - 1].pb(j); 
			}
		}
		//ITER++; 
		//int ans1 = f1(0, 0); 
		//cout << "real " << ans1 << "\n"; 
		//print(); 
		//ITER++; 
		//int ans2 = f2(0, 0); 
		////int ans2 = f3(0); 
		//cout << "clever " << ans2 << "\n"; 
		//print(); 

		ITER++; 
		int ans = f2(0, 0); 
		
		cout << "Case #" << i + 1 << ": " << ans << "\n"; 
		//print(); 
	}
	if (tc) return 0; 

	const int N = 1000; 

	//for (int i = 0; i <= 100000; i++) {
	while (1) {
		for (int j = 0; j < N; j++) {
			b[j].clear(); 
		}
		a[0] = 0; 
		for (int j = 1; j < N; j++) {
			a[j] = rand() % j + 1; 
			b[a[j] - 1].pb(j); 
		}

		ITER++; 
		int ans1 = f1(0, 0); 
		
		ITER++; 
		int ans2 = f2(0, 0);
		//int ans2 = f3(0); 

		if (ans1 != ans2) {
			cout << "WA:\n" << N << " "; 
			for (int j = 0; j < N; j++) {
				cout << a[j] << " "; 
			}
			cout << "\n"; 
			for (int j = 1; j < N; j++) {
				cout << a[j] << " " << j + 1 << "\n"; 
			}
			return 0; 
		}
	}


	//precalc(); 

	//int tc; 
	//cin >> tc; 
	//for (int i = 0; i < tc; i++) {
	//	cerr << i + 1 << "\n"; 
	//	solve(i + 1); 
	//}

	//cerr << "done\n"; 

	return 0;
}


