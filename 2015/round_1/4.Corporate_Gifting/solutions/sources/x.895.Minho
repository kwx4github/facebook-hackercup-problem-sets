#include <cstdio>
#include <vector>
#include <string.h>

using namespace std;

const int INF=987654321;
int T, n, data[200010], DP[200010][5];
vector< vector<int> > node;

int solution(int here, int sel)
{
	if(node[here].empty()) return sel;

	int& ret=DP[here][sel];
	if(ret!=INF) return ret;

	ret=sel;
	for(int i=0 ; i<node[here].size() ; i++)
	{
		int there=node[here][i], temp=INF;
		for(int nextSel=1 ; nextSel<=4 ; nextSel++) 
		{
			if(nextSel==sel) continue;
			temp=min(temp, solution(there, nextSel));
		}
		ret+=temp;
	}
	//printf("DP[%d][%d] : %d\n", here, sel, DP[here][sel]);

	return ret;
}

int main(void)
{
#ifdef _CONSOLE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w+", stdout);
#endif
	scanf("%d", &T);
	for(int t=1 ; t<=T ; t++)
	{
		for(int i=0 ; i<200010 ; i++)
			for(int j=0 ; j<5 ; j++)
				DP[i][j]=INF;

		scanf("%d", &n);
		node.clear();
		node.resize(n+1, vector<int>());

		for(int i=1 ; i<=n ; i++)
		{
			scanf("%d", &data[i]);
			node[data[i]].push_back(i);
		}
		int sol=INF;
		for(int i=1 ; i<=4 ; i++) sol=min(sol, solution(1, i));

		printf("Case #%d: %d\n", t, sol);
	}
}