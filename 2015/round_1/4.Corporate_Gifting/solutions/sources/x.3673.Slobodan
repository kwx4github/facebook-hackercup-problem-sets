#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <queue>
#include <cstring>
#include <string>
#include <sstream>
#include <vector>
#define ffor(_a,_f,_t) for(int _a=(_f),__t=(_t);_a<__t;_a++)
#define all(_v) (_v).begin() , (_v).end()
#define sz size()
#define pb push_back
#define SET(__set, val) memset(__set, val, sizeof(__set))
#define FOR(__i, __n) ffor (__i, 0, __n)
#define syso system("pause")
#define mp make_pair
typedef long long LL;

using namespace std;

int dp[200000][51];
vector<int> g[200000];

vector<pair<int, int> > neigh;

int memo(int v, int c) {
  if (dp[v][c] != -1)
    return dp[v][c];
    
  neigh.clear();
  ffor (i, 1, 51) {
    int sum = 0;
    FOR (j, g[v].sz)
      sum += memo(g[v][j], i);
    neigh.pb(make_pair(sum + i, i));
  }
  sort(all(neigh));
  
  ffor (i, 1, 51)
    if (neigh[0].second == i)
      dp[v][i] = neigh[1].first;
    else
      dp[v][i] = neigh[0].first;

  return dp[v][c];
}

int main(){
  freopen("4.out","wt", stdout);
  freopen("4.in","r", stdin);
  int tests;
  cin >> tests;
  int n, a;
  FOR (test, tests) {
    SET(dp, 255);
    scanf("%d", &n);
    FOR (i, n)
      g[i].clear();
    FOR (i, n) {
      scanf("%d", &a);
      if (a)
        g[a - 1].pb(i);
    }
    cout << "Case #" << test + 1 << ": " << memo(0, 50) << "\n";
  }
  return 0;
}
