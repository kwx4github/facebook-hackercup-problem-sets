//#define WYTE
#include<bits/stdc++.h>
#define X first
#define Y second
#define mp(x,y) make_pair((x),(y))
#define pb(x) push_back(x)
#define ALL(x) (x).begin(),(x).end()
#define INIT(x,y) memset((x),(y),sizeof(x))
#define PQ priority_queue
#define IT iterator
#define INF 1e9
#define LLNF 1e18
#define EPS 1e-9
#define MOD 1e9+7
typedef long long ll;
typedef unsigned long long ull;
using namespace std;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<pii> vii;
typedef vector<vi> vvi;

vi v[200005];
stack< pair<pii,int> > s;
int memo[200005][5],chk[200005][5];
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    freopen("corporate_gifting.txt","r",stdin);
    freopen("output.txt","wb",stdout);
    int t,ii,n,x,i,node,current,last,tmp;
    scanf("%d",&t);
    for(ii=1;ii<=t;ii++)
    {
        scanf("%d",&n);
        for(i=0;i<=n;i++)
        {
            v[i].clear();
        }
        for(i=1;i<=n;i++)
        {
            scanf("%d",&x);
            v[x].pb(i);
        }
        INIT(chk,0);
        s.push(mp(mp(1,1),0));
        s.push(mp(mp(1,2),0));
        s.push(mp(mp(1,3),0));
        chk[1][1]=chk[1][2]=chk[1][3]=1;
        while(!s.empty())
        {
            node=s.top().X.X;
            current=s.top().X.Y;
            last=s.top().Y;
            s.pop();
            if(last)
            {
                memo[node][current]=current;
                for(i=0;i<v[node].size();i++)
                {
                    tmp=INF;
                    if(current!=1)tmp=min(tmp,memo[v[node][i]][1]);
                    if(current!=2)tmp=min(tmp,memo[v[node][i]][2]);
                    if(current!=3)tmp=min(tmp,memo[v[node][i]][3]);
                    memo[node][current]+=tmp;
                }
            }
            else
            {
                s.push(mp(mp(node,current),1));
                for(i=0;i<v[node].size();i++)
                {
                    if(current!=1&&!chk[v[node][i]][1])
                    {
                        chk[v[node][i]][1]=1;
                        s.push(mp(mp(v[node][i],1),0));
                    }
                    if(current!=2&&!chk[v[node][i]][2])
                    {
                        chk[v[node][i]][2]=1;
                        s.push(mp(mp(v[node][i],2),0));
                    }
                    if(current!=3&&!chk[v[node][i]][3])
                    {
                        chk[v[node][i]][3]=1;
                        s.push(mp(mp(v[node][i],3),0));
                    }
                }
            }
        }
        printf("Case #%d: %d\n",ii,min(memo[1][1],min(memo[1][2],memo[1][3])));
    }
}
