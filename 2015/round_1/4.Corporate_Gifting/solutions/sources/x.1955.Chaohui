#define _CRT_SECURE_NO_WARNINGS
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <memory>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <string>
#include <utility>
#include <vector>
using namespace std;
template<class T> inline void checkmin(T &a, T b) { if (b < a) a = b; }//NOTES:checkmin( 
template<class T> inline void checkmax(T &a, T b) { if (b > a) a = b; }//NOTES:checkmax( 
#define SIZE(x) ((int)(x).size()) 
#define for0(i,n) for(int i=0;i<(n);i++) 
#define for1(i,n) for(int i=1;i<=(n);i++) 
#define for0r(i,n) for(int i=(n)-1;i>=0;i--) 
#define for1r(i,n) for(int i=(n);i>=1;i--) 
typedef long long ll;
typedef pair<int, int> pii;

vector<int> d[200010];
int f[200010][5];

void solve() {
  int n;
  scanf("%d", &n);
  for0(i, n + 1) d[i].clear();
  for1(i, n) {
    int t;
    scanf("%d", &t);
    d[t].push_back(i);
  }
  vector<int> T;
  queue<int> Q;
  Q.push(1);
  while (!Q.empty()) {
    int top = Q.front();
    T.push_back(top);
    Q.pop();
    for (int b : d[top]) Q.push(b);
  }
  reverse(T.begin(), T.end());
  for (int a : T) {
    for (int k = 1; k <= 4; k++) {
      f[a][k] = k;
      for (int b : d[a]) {
        int c = 800000;
        for (int j = 1; j <= 4; j++) {
          if (j != k) checkmin(c, f[b][j]);
        }
        f[a][k] += c;
      }
    }
  }
  printf("%d\n", *min_element(f[1] + 1, f[1] + 5));
}

int main() {
  freopen("corporate_gifting.txt", "r", stdin);
  freopen("corporate_gifting.out", "w", stdout);
  int T, TC = 0;
  scanf("%d", &T);
  while (++TC <= T) {
    printf("Case #%d: ", TC);
    solve();
  }
  return 0;
}
