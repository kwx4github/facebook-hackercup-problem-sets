#pragma comment(linker, "/STACK:67108864")
#include <iostream>
#include <string>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string.h>
#include <utility>
#include <queue>
#include <stack>
#include <iomanip>
#include <ctype.h>
#include <sstream>
#include <map>
#include <set>
#include <stdio.h>
#include <assert.h>
#include <ctype.h>
 
using namespace std;

typedef long long LL;

#define FOR(i,n) for(int i = 0;i < n;i++)
#define MP make_pair
#define PB push_back
#define ALL(a) (a).begin(),(a).end()
#define PII pair<int, int>
#define CLEAR(a) memset(a, 0, sizeof(a))
#define INF 2000000000
const double EPS = 1E-8;
const LL mod = 1000000007;
 
using namespace std;

int n, x;
LL dp[200005][3];
vector<int> g[200005];

inline LL get(int idx, int c) {
  if (dp[idx][c] != -1) {
    return dp[idx][c];
  }

  dp[idx][c] = c;
  FOR(i, g[idx].size()) {
    if (c == 0) {
      dp[idx][c] += min(get(g[idx][i], 1), get(g[idx][i], 2));
    } else if (c == 1) {
      dp[idx][c] += min(get(g[idx][i], 0), get(g[idx][i], 2));
    } else { // 2
      dp[idx][c] += min(get(g[idx][i], 0), get(g[idx][i], 1));
    }
  }

  return dp[idx][c];
}

void solve(int t) {
  FOR(i, 200005) {
    FOR(j, 3)
    dp[i][j] = -1;
    g[i].clear();
  }

  cin >> n;
  //cout << n << endl;
  cin >> x;
  FOR(i, n - 1) {
    cin >> x;
    g[x].push_back(i + 2);
  }

  for (int i = n-1; i > 5; i--)
    FOR(j,3)
  get(i,j);

  if (n > 1)
  cout << "Case #" << t << ": " << n + min(get(1, 2), min(get(1, 0), get(1, 1))) << endl;
  else
  cout << "Case #" << t << ": " << 1 << endl;
}

int main() {
  int t;
  cin >> t;
  FOR(i, t) {
    solve(i+1);
  }

  return 0;
}
