#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;

vector<int> g[200010], KK[200010];
int fa[200010], K1[200010], C[200010], K2[200010], dC[200010];

void f(int u) {
    if (g[u].size() == 0) {  // It is a leaf
        K1[u] = 1;
        C[u] = 1;
        K2[u] = 2;
        return;
    }
    int K = 0, d = g[u].size();
    for (int i = 0; i < d; i ++) {
        int v = g[u][i];
        f(v);
        K += K1[v];
    }
    for (int i = 1; i <= d + 1; i ++) {
        dC[i] = K;
    }
    for (int i = 0; i < d; i ++) {
        int v = g[u][i];
        if (C[v] <= d + 1) {
            dC[C[v]] += K2[v] - K1[v];
        }
    }
    KK[u].resize(d + 2);
    for (int i = 1; i <= d + 1; i ++) {
        KK[u][i] = i + dC[i];
    }
    K1[u] = -1;
    K2[u] = -1;
    C[u] = -1;
    for (int i = 1; i <= d + 1; i ++) {
        if (K1[u] == -1 || K1[u] > KK[u][i]) {
            K1[u] = KK[u][i];
            C[u] = i;
        }
    }
    for (int i = 1; i <= d + 1; i ++) {
        if (i == C[u]) {
            continue;
        }
        if (K2[u] == -1 || K2[u] > KK[u][i]) {
            K2[u] = KK[u][i];
        }
    }
    //printf("%d %d %d %d\n", u, K1[u], C[u], K2[u]);
}

int main() {
    freopen("corporate_gifting.txt", "r", stdin);
    freopen("corporate_gifting.out", "w", stdout);
    int T;
    scanf("%d", &T);
    for (int cas = 1; cas <= T; cas ++) {
        int n;
        scanf("%d", &n);
        for (int i = 0; i <= n; i ++) {
            g[i].clear();
            KK[i].clear();
        }
        for (int i = 1; i <= n; i ++) {
            scanf("%d", &fa[i]);
            g[fa[i]].push_back(i);
        }
        f(1);
        printf("Case #%d: %d\n", cas, K1[1]);
        fprintf(stderr, "%d\n", K1[1]);
    }
    return 0;
}
