#include <bits/stdc++.h>

using namespace std;

#define BET(a,b,c) ((a)<=(b)&&(b)<(c))
#define FOR(i,n) for(int i=0,i##_end=(int(n));i<i##_end;i++)
#define SZ(x) (int)(x.size())
#define ALL(x) (x).begin(),(x).end()
#define MP make_pair
typedef long long ll_t;
typedef vector<int> VI;
typedef vector<VI> VVI;

int n;
VVI adj;
const int giftNum = 10;
long long memo[200000+10][giftNum + 2];

long long dfs(int pos, int gift, int parent = -1){
    long long& ret = memo[pos][gift];
    if(ret != -1) return ret;
    long long val = gift;
    for(auto child : adj[pos]){
        if(parent == child) continue;
        long long sub = 1LL<<60;
        for(int g = 1; g <= n && g <= giftNum; g++){
            if(gift == g) continue;
            sub = min(sub, dfs(child, g, pos));
        }
        val += sub;
    }

    return ret = val;
}



int main()
{
    srand(11);
    int t;
    cin>>t;
    FOR(caseNo, t){
        cin>>n;

        VI parent(n);
        FOR(i,n) scanf("%d",&parent[i]);

        //n = 200000; parent.resize(n); FOR(i,n) if(i) parent[i] = rand() % (i) + 1;

        adj = VVI(n);
        FOR(i,n){
            int id = parent[i];
            if(i == 0) continue;
            adj[id - 1].push_back(i);
            adj[i].push_back(id - 1);
        }
        memset(memo , -1 , sizeof(memo));
        if(1){
            vector<int> order;
            VI visited(n);
            stack<int> st;
            st.push(0);
            while(!st.empty()){
                int now = st.top(); st.pop();
                if(visited[now]) continue;
                visited[now] = true;
                order.push_back(now);
                for(auto child : adj[now]){
                    if(visited[child]) continue;
                    st.push(child);
                }
            }
            reverse(ALL(order));
            for(auto x : order) {
                for(int g=1;g<=giftNum&&g<=n;g++){
                    dfs(x, g, parent[x]-1);
                }
            }
        }

        long long ans = 1LL<<60;
        for(int g=1;g<=giftNum && g<=n;g++){
            ans = min(ans, dfs(0, g));
        }
        printf("Case #%d: %lld\n", caseNo+1, ans);
    }
    return 0;
}
