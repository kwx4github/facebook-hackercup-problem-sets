#include <bits/stdc++.h>

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = (int)(a); i <= (int)(b); ++i)

#define all(v) (v).begin(), (v).end()
#define pb push_back

using namespace std;

typedef vector<int> vi;
typedef long long i64; 

const int N = 300100;
const int M = 20;
int n;
vi g[N];
int ans[N][M];
int antians[N][M];

void init_anti(int* a, int* anti) {
static int bl[M], br[M];
    forn(i, M) bl[i] = br[i] = a[i];
    forn(i, M) if(i) bl[i] = min(bl[i], bl[i-1]);
    ford(i, M) if(i+1<M) br[i] = min(br[i], br[i+1]);
    anti[0] = br[1];
    anti[M-1] = bl[M-2];
    fore(i, 1, M-2) anti[i] = min(bl[i-1], br[i+1]);
}

void _dfs(int v) {
    forn(i, M) ans[v][i] = i+1;
    for(int u: g[v]) forn(i, M) ans[v][i] += antians[u][i];
    init_anti(ans[v], antians[v]);
}

void dfs(int v) {
    for(int u:g[v]) dfs(u);
    _dfs(v);
}

void solve() {
    int T; cin >> T;
    fore(t, 1, T) {
        cout << "Case #" << t << ": ";
        int n;
        cin >> n;
        forn(i, n) g[i].clear();
        forn(i, n) {
            int pi; cin >> pi;
            if( i ) g[pi-1].pb(i);
        }
        dfs(0);
        cout << *min_element(ans[0], ans[0]+M) << '\n';
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    freopen("gifting.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    solve();
    return 0;
}
