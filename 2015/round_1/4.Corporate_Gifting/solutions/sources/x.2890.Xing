#include<fstream>
#include<vector>
#include<algorithm>
using namespace std;

long minCost(vector<long> &r, long b, long e){
    long res=1;
    sort(begin(r)+b, begin(r)+e);
    for(long i=b; i<e; ++i)
        if(r[i]==res)
            ++res;
        else if(r[i]>res)
            break;
    return res;
}

int main(){
    ifstream input("corporate_gifting.txt");
    ofstream output("output.txt");
    int T;
    input>>T;
    long N;
    vector<long> v, r;
    for(int i=0; i<T; ++i){
        input>>N;
        v.resize(N);   fill(begin(v), end(v), 0);
        r.resize(N);   fill(begin(r), end(r), 1);
        for(long j=0; j<N; ++j)
            input>>v[j];
        long eStart=N-1, eEnd=N-1, manager=v[eEnd]-1, res=0;
        while(eStart>=0){
            if(v[eStart]==v[eEnd]){
                res+=r[eStart];
                --eStart;
            }else{
                r[manager]=minCost(r, eStart+1, eEnd+1);
                eEnd=eStart;
                manager=v[eEnd]-1;
            }
        }
        output<<"Case #"<<i+1<<": "<<res<<endl;
    }
}
