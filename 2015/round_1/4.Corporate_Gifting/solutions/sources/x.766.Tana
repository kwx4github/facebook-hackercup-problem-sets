#include<cstdio>
#include<vector>
#include<set>
#include<queue>
using namespace std;
vector<int> adj[200002];
set<pair<long long,int> > s;
int n;
int bnum[200002];
long long bscore[200002];
long long dscore[200002];
long long taint[200002];
vector<int> ff;
int par[200002];
int sub[200002];
queue<int> qq;
void dfs(int p) {
	int i, q;
	long long score = 0ll;
	ff.clear();
	for(i=0; i<adj[p].size(); i++) {
		q = adj[p][i];
		score += bscore[q];
		if (taint[bnum[q]] == bnum[q]) {
			ff.push_back(bnum[q]);
		}
		s.erase(s.find(pair<long long, int>(taint[bnum[q]], bnum[q])));
		taint[bnum[q]] += dscore[q];
		s.insert(pair<long long, int>(taint[bnum[q]], bnum[q]));
	}
	set<pair<long long,int> >::iterator si = s.begin();
	bnum[p] = (*si).second;
	bscore[p] = score + (*si).first;
	si++;
	dscore[p] = (score + (*si).first) - bscore[p];
	for(i=0; i<ff.size(); i++) {
		s.erase(s.find(pair<long long, int>(taint[bnum[q]], bnum[q])));
		taint[bnum[q]] = bnum[q];
		s.insert(pair<long long, int>(taint[bnum[q]], bnum[q]));
	}
}
int main() {
	int tt, t, i, a;
	scanf("%d",&tt);
	for (t=1; t<=tt; t++) {
		scanf("%d",&n);
		s.clear();
		for(i=0;i<n;i++) {
			adj[i].clear();
			s.insert(pair<long long,int>(i+1, i+1));
			taint[i+1] = i+1;
			sub[i] = 0;
		}
		scanf("%d",&a);
		for(i=1;i<n;i++) {
			scanf("%d",&a);
			par[i] = a-1;
			sub[a-1]++;
			adj[a-1].push_back(i);
		}
		for(i=0;i<n;i++) {
			if (sub[i] == 0) {
				qq.push(i);
			}
		}
		while(!qq.empty()) {
			a = qq.front();
			qq.pop();
			dfs(a);
			if (a != 0) {
				if (sub[par[a]] == 1) {
					qq.push(par[a]);
				}
				sub[par[a]]--;
			}
		}
		printf("Case #%d: %d\n", t, bscore[0]);
	}
}