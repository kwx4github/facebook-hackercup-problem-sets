#include <iostream>
#include <fstream>
#include <algorithm>
#include <set>
#include <vector>

using namespace std;




int main(){
	ifstream fin("/home/leo/Downloads/corporate_gifting.txt");
	ofstream fout("d.out");


	const int N = 200005;
	int n;
	int parent[N];
	int children_cnt[N];
	vector< set<int> > received(N, set<int>());


	int tc;
	fin>>tc;
	for(int t = 1; t <= tc; t++){
		fin>>n;

		parent[0] = -1;
		int total_payment = 0;

		fill(children_cnt, children_cnt+n+1, 0);
		children_cnt[0] = -1;
		for(int i = 1 ; i <= n ;i++){
			received[i].clear();
			fin>>parent[i];
			children_cnt[parent[i]]++;
		}


		// for(int i = 0; i <= n ; i++)
		// 	cout<<children_cnt[i]<<" ";
		// cout<<endl;

		vector<int> to_eval;
		for(int i = 1; i <= n ; i++)
			if(children_cnt[i] == 0)
				to_eval.push_back(i);

		while (to_eval.size() > 0){

			vector<int> to_eval_next;

			for(unsigned int j = 0 ; j < to_eval.size() ; j++){

				int i = to_eval[j];

				int pay = 1;
				while(pay <= n && received[i].find(pay)!=received[i].end())
					pay++;

				children_cnt[parent[i]]--;
				if(children_cnt[parent[i]] == 0)
					to_eval_next.push_back(parent[i]);

				received[parent[i]].insert(pay);
				total_payment+=pay;
				children_cnt[i]= -1;// mark as visited
			}
			to_eval.clear();
			to_eval = to_eval_next;
		}


		cout<<"Case #"<<t<<": "<<total_payment<<endl;
		fout<<"Case #"<<t<<": "<<total_payment<<endl;
	}

	fout.close();
}