#include<bits/stdc++.h>              
//------------------------------------------------------------//
//  ___  ___ _____ ______                                     //
//  |  \/  |/  ___|| ___ \     This C++ Template Belongs to   //                   
//  | .  . |\ `--. | |_/ /        Manish Singh Bisht          //
//  | |\/| | `--. \| ___ \       http://fb.me/manish05        //    
//  | |  | |/\__/ /| |_/ /    Email: manish_05@ymail.com    //
//  \_|  |_/\____/ \____/                                     //    
//------------------------------------------------------------//
using namespace std;
#define DEBUG 1
#define debug(x) if(DEBUG){cout<<#x<<":"<<x<<endl;}
#define debug2(x,y) if(DEBUG){cout<<#x<<":"<<x<<" , "<<#y<<":"<<y<<endl;}
#define debugp(x) debug2(x.ft,x.sd)
#define debugv(v) if(DEBUG){cout<<#v<<endl;TR(v,it)cout<<*it<<" ";cout<<endl;}
#define debugar(ar,n) if(DEBUG){cout<<#ar<<endl;FOR(i,n)cout<<ar[i]<<" ";cout<<endl;}
#define debugmm(mp,n,m) if(DEBUG){cout<<#mp<<"("<<#n<<" x "<<#m<<")"<<endl;\
		FOR(i,m+1)cout<<(i<10?"0":"")<<i<<(i?"":"|")<<"\t";cout<<"\n``";FOR(i,m)cout<<"````";\
		FOR(i,n){cout<<endl<<(i<9?"0":"")<<i+1<<"|\t";FOR(j,m)cout<<mp[i][j]<<"\t";}cout<<endl;}
#define debugm(mp,n) debugmm(mp,n,n)
#define FOR(i,n) for(ll i=(0);i<(n);++i)
#define TR(v,it) for(typeof(v.begin()) it(v.begin());it!=v.end();++it)
#define SZ(v) ((ll)(v.size()))
#define CLEAR(a) memset((a),0,sizeof(a))
#define pb push_back
#define mp make_pair
#define VI vector<ll>
#define SI set<ll>
#define PII pair<ll,ll>
#define ft first
#define sd second
#define all(a) a.begin(),a.end()
#define lb lower_bound
#define ub upper_bound
#define inf INT_MAX
#define inff LLONG_MAX
#define PNL cout<<endl
#define md 1000000007
typedef int ll;
const ll MAXN = 1000010;
ll modPow(ll a,ll b,ll m) {
    a %= m;
    ll r = 1;
    while (b > 0) {
        if (b & 1) r = (r * a) % m;
        a = (a * a) % m;
        b >>= 1;
    }
    return r;
}
string convertLL(ll number){stringstream ss;ss << number;return ss.str();}
ll convertString(string s){ll num;stringstream sstr(s);sstr>>num;return num;}
ll gcd(ll a,ll b){return b?gcd(b,a%b):a; }

//REFERENCE FROM PAPER: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.25.823&rep=rep1&type=pdf
int stack[1000010],pos=0;
int main()
{	
	ios_base::sync_with_stdio(false);cin.tie(0);
	int T;
	cin>>T;
	FOR(t,T){
		int N;
		cin>>N;
		vector<int> adj[N],inp,process_order;
		queue<int> bfs_q;
		ll k1[N],k2[N],d[N],cost[N],ans[N],x;
		FOR(i,N){
			cin>>x;
			if(i!=0)adj[x-1].pb(i);
			inp.pb(x-1);
		}
		
		//ITERATIVE BFS STARTS
		bfs_q.push(0);
		while(SZ(bfs_q)>0){
			process_order.pb(bfs_q.front());bfs_q.pop();
			TR(adj[process_order[SZ(process_order)-1]],it)bfs_q.push(*it);
		}
		//ITERATIVE BFS ENDS
		
		//process leaves first, then its parents and so on....till CEO/ROOT
		reverse(all(process_order));
		TR(process_order,it){
			int cur = *it;
			//identify its leaf or not
			if(SZ(adj[cur])){k1[cur]=cost[cur]=k2[cur]=-1;}
			else{k1[cur]=cost[cur]=1;k2[cur]=2;continue;}
			
			ll bigK = 0;
			//bigK = sum of children's best
			TR(adj[cur],it)bigK+=k1[*it];
			
			//calculate new delta
			FOR(i,SZ(adj[cur])+2)d[i]=bigK;
			TR(adj[cur],it){
				if(cost[*it] < SZ(adj[cur])+2)
					d[cost[*it]] = cost[cost[*it]] + k2[*it] - k1[*it];
			}
			
			k1[cur]=cost[cur]=k2[cur]=-1;
			ll localBest[SZ(adj[cur])+2];
			FOR(i,SZ(adj[cur])+2){
				localBest[i]=i+d[i];
				if(k1[cur]==-1||localBest[i]<k1[cur]){
					k1[cur]=localBest[i];
					cost[cur]=i;
				}
			}
			//it has to be different from k1's color
			FOR(i,SZ(adj[cur])+2){
				if( i!=cost[cur] && (k2[cur]==-1||localBest[i]<k2[cur]) ){
					k2[cur]=localBest[i];
				}
			}
		}
		
		cout<<"Case #"<<(t+1)<<": "<<min(k1[0],k2[0])<<endl;
	}
	
	return 0;
}