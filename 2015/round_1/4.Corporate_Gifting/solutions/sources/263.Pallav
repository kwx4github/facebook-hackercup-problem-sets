#include<bits/stdc++.h>
using namespace std ;

#define FOR(i,a,b) for(int i= (int)a; i< (int)b; ++i)
#define REP(i,n) FOR(i,0,n)
#define fill(a, x) memset(a, x, sizeof(a))
#define all(c) c.begin(), c.end()

#define LL long long int 
#define PII pair<int,int> 
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define mod 1000000007

// length longest proper prefix of A[0..i] which is also suffix of A[0..i]
//
//
int KMP(vector<int> A, vector<int> B)
{
   int n = A.size();
   int m = B.size();
   vector<int> lps(m + 1, -1);
   int ans = 0;

   for(int i = 1; i <= m; i++)
   {
      int pos = lps[i - 1];
      while(pos != -1 && B[pos] != B[i - 1]) pos = lps[pos];
      lps[i] = pos + 1;
   }

   int sp = 0;
   int kp = 0;
   while(sp < n)
   {
      while(kp != -1 && (kp == B.size() || B[kp] != A[sp])) kp = lps[kp];
      kp++;
      sp++;
      if(kp == m) ans++;
   }
   return ans;
}
int main()
{
   int n,w; cin>>n>>w;
   vector<int> A,B;
   int prev = -1;
   REP(i,n) {
      int x; cin>>x;
      if(i==0) {
         prev = x;
      } else {
         A.PB(x - prev);
         prev = x;
      }
   }
   REP(i,w) {
      int x; cin>>x;
      if(i==0) {
         prev = x;
      } else {
         B.PB(x - prev);
         prev = x;
      }
   }
   if(n<w) {
      cout << "0" << endl;
   } else if(w==1) {
      cout << n << endl;
   } else if(n==1) {
      cout << "0" << endl;
   } else {
      cout << KMP(A,B) << endl;
   }
   return 0;
}
