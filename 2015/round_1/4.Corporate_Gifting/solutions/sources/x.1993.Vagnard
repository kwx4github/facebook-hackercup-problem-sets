#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker,"/STACK:640000000")
int t, n, par[300000], f[300000][26], cnt[2], q[26];
vector <int> graph[300000];

void dfs(int v)
{
	if ( graph[v].size() == 0 ) {
		f[v][1] = 2;
		for (int i = 2 ; i < 26 ; i ++ )
			f[v][i] = 1;
	};
	for (auto &u : graph[v])
		dfs(u);
	int firstMin = 1, secondMin = 2;
	for (int i = 1 ; i < 26 ; i ++ )
	{
		q[i] = i;
		for (auto &u : graph[v])
			q[i] += f[u][i];
		if ( q[firstMin] == q[i] && firstMin != i )
			secondMin = i;
		if ( q[firstMin] > q[i] ) {
			secondMin = firstMin;
			firstMin = i;
		};
	};
	for (int i = 1 ; i < 26 ; i ++ )
		if ( i == firstMin )
			f[v][i] = q[secondMin];
		else
			f[v][i] = q[firstMin];
};

int main()
{
 //freopen("input.txt","r",stdin);
 //freopen("output.txt","w",stdout);
 scanf("%d",&t);
 for (int j = 1 ; j <= t ; j ++ )
 {
	 scanf("%d",&n);
	 for (int i = 1 ; i <= n ; i ++ ) {
		 graph[i].clear();
		 for (int j = 1 ; j < 26 ; j ++ )
			 f[i][j] = 0;
	 };
	 for (int i = 1 ; i <= n ; i ++ ) {
		 scanf("%d",&par[i]);
		 if ( par[i] )
			 graph[par[i]].push_back(i);
	 };
	 dfs(1);
	 int answer = 2e9;
	 for (int i = 1 ; i < 26 ; i ++ )
		 answer = min(answer , f[1][i]);
	 printf("Case #%d: %d\n",j,answer);
 };
 return 0;
};
