#include <stdio.h>
#include <vector>
#define MN 200000
#define MC 20
using namespace std;
int N;
vector<int> d[MN];
struct DATA {
	int m1, c1, m2, c2;
};
DATA c[MN];
int qu[MN], qs, qe;
int main()
{
	freopen("input.txt","r",stdin);
	FILE *out=fopen("output.txt","w");
	int t, T, i, j, k, p, q, asdf;
	
	scanf("%d",&T);
	for (t = 1; t <= T; t++) {
		printf("Case #%d: ",t);
		fprintf(out,"Case #%d: ",t);
		scanf("%d",&N);
		for (i = 0; i < MN; i++) d[i].clear();
		for (i = 0; i < N; i++) {
			scanf("%d",&j);
			if (j-1 >= 0) d[j-1].push_back(i);
		}
		qs = qe = 0; qu[qe++] = 0;
		while (qs < qe) {
			p = qu[qs++];
			for (i = 0; i < d[p].size(); i++) {
				q = d[p][i];
				qu[qe++] = q;
			}
		}
		for (asdf = qe-1; asdf >= 0; asdf--) {
			p = qu[asdf];
			c[p].m1 = c[p].m2 = -1;
			for (i = 1; i < MC; i++) {
				k = 0;
				for (j = 0; j < d[p].size(); j++) {
					q = d[p][j];
					if (c[q].c1 != i) k += c[q].m1;
					else k += c[q].m2;
				}
				if (c[p].m1 == -1 || c[p].m1 > k+i) {
					c[p].m2 = c[p].m1; c[p].c2 = c[p].c1;
					c[p].m1 = k+i; c[p].c1 = i;
				}
				else if (c[p].m2 == -1 || c[p].m2 > k+i) {
					c[p].m2 = k+i; c[p].c2 = i;
				}
			}
		}
		fprintf(out,"%d\n",c[0].m1);
	}
	fclose(out);
	return 0;
}