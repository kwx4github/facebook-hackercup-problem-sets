#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<cstring>
#include<vector>
using namespace std;
#define Kmax 30
int din[202020][120];
int N,a;

vector<int> g[202020];

void clearx(){
    for(int i=0;i<=200000;++i)
    {
    g[i].clear();
        for(int j=0;j<=Kmax;++j){
            din[i][j]=0;
        }
    }
}
int getScore(int node,int f)
{
int ret = 3*N;
for(int j=1;j<=Kmax;++j)
    if(j!=f)
    ret = min (ret, din[node][j]);

return ret;
}
void gdin(int x){
    //printf("%d!!!",x);
    for(int i=0;i<g[x].size();++i){
        gdin(g[x][i]);
    }

    for(int j=1;j<=Kmax;++j){
        din[x][j]=j;
        for(int i=0;i<g[x].size();++i){

            int nd = g[x][i];
            din[x][j] += getScore(nd,j);
        }
    }

}
int x=0,Tx;
long long S;
int tat[201010];
int main()
{
freopen("test4.in","r",stdin);
freopen("test4.out","w",stdout);
    scanf("%d\n",&Tx);

    for(int tt=1;tt<=Tx;++tt){
        clearx();

        scanf("%d",&N);
        for(int i=1;i<=N;++i){
            scanf("%d",&tat[i]);
            if(i==1)
                continue;
            g[tat[i]].push_back(i);
        }

        gdin(1);
        printf("Case #%d: %lld\n",tt,getScore(1,0));
    }
}
