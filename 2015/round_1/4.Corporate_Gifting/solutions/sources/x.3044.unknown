import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws FileNotFoundException {
        List<List<Integer>> testCases = load();
        List<Integer> output = new ArrayList<>();

        for (List<Integer> testCase : testCases)
            output.add(solve(testCase));

        save(output);
    }

    private static int solve(List<Integer> parentIndices) {
        Tree tree = new Tree(parentIndices);
        return tree.totalGiven();
    }

    private static class Tree {
        Node[] nodes;

        Tree(List<Integer> parentIndices) {
            int size = parentIndices.size();
            nodes = new Node[size + 1];

            for (int i = 0; i < size + 1; i++)
                nodes[i] = new Node();

            for (int i = 0; i < size; i++)
                nodes[i + 1].parent = nodes[parentIndices.get(i)];

            for (int i = size; i > 0; i--)
                nodes[i].give();
        }

        int totalGiven() {
            int total = 0;
            for (int i = 1; i < nodes.length; i++)
                total += nodes[i].given;
            return total;
        }

        class Node {
            Node parent;
            int given = 1;
            final List<Integer> taken = new ArrayList<>();

            void give() {
                while (taken.contains(given)) given++;
                parent.taken.add(given);
            }
        }
    }

    private static List<List<Integer>> load() throws FileNotFoundException {
        List<List<Integer>> testCases = new ArrayList<>();
        Scanner in = new Scanner(new File("input.txt"));

        int caseCount = in.nextInt();
        for (int i = 0; i < caseCount; i++) {
            List<Integer> testCase = new ArrayList<>();
            int employeeCount = in.nextInt();
            for (int j = 0; j < employeeCount; j++)
                testCase.add(in.nextInt());
            testCases.add(testCase);
        }

        in.close();
        return testCases;
    }

    private static void save(List lines) throws FileNotFoundException {
        PrintWriter out = new PrintWriter(new File("output.txt"));
        for (int i = 0; i < lines.size(); i++)
            out.println("Case #" + (i + 1) + ": " + lines.get(i));
        out.close();
    }
}
