#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
void fastStream(){cin.tie(0);std::ios_base::sync_with_stdio(0);}

void print_case(int case_number){
  cout<<"Case #"<<case_number<<": ";
}

const int MAX_LABEL = 10;
const int MAX_N = 201000;

vector<int> G[MAX_N];
int dp[MAX_N][MAX_LABEL+1];
int dfs(int pos,int label){
  //cout<<pos<<" "<<label<<endl;
  if(dp[pos][label]>=0)return dp[pos][label];
  int res = 0;
  for(int to : G[pos]){
    int val = 1<<29;
    for(int i=1;i<=MAX_LABEL;i++){
      if(i!=label){
        val = min(val, dfs(to,i) + i);
      }
    }
    res+=val;
  }
  return dp[pos][label]=res;
}

void rec(int pos,int label,int &max_label){
  max_label=max(max_label,label);
  for(int to : G[pos]){
    int val = 1<<29;
    int n_label;
    for(int i=1;i<=MAX_LABEL;i++){
      if(i!=label){
        if(val>dp[to][i]+i){
          val = min(val, dp[to][i] + i);
          n_label = i;
        }
      }
    }
    rec(to,n_label,max_label);
  }
}


int main(){
  fastStream();
  int T;
  cin>>T;
  for(int cs = 1; cs <= T; cs++){
    print_case(cs);
    memset(dp,-1,sizeof(dp));
    int ans = 1<<29;
    int N;
    cin>>N;
    for(int i=0;i<N;i++)G[i].clear();
    for(int i=0;i<N;i++){
      int a;
      cin>>a;
      a--;
      if(a!=-1){
        G[a].push_back(i);
      }
    }
    // int index = -1;
    for(int i=1;i<=MAX_LABEL;i++){
      // if(ans>dfs(0,i)+i){
      //   index = i;
      // }
      ans=min(ans,dfs(0,i)+i);
    }
    // int max_label=-1;
    // rec(0,index,max_label);
    // cout<<max_label<<endl;
    cout<<ans<<endl;
  }
  
  return 0;
}
