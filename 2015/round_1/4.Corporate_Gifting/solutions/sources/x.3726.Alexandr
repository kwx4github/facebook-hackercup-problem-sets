// Corporate_Gifting.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <vector>
#include <stack>
#include <set>

using std::vector;
using std::stack;
using std::set;

int _tmain(int argc, _TCHAR* argv[])
{
	FILE *pFileRead, *pFileWrite;
	pFileRead = fopen("corporate_gifting.txt", "r+");
	pFileWrite = fopen("corporate_gifting_out.txt", "w+");

	int testCases;
	fscanf(pFileRead, "%d", &testCases);

	for (int i = 1; i <= testCases; ++i) 
	{
		int count;
		fscanf(pFileRead, "%d", &count);
		vector<vector<int>> data(count + 1);

		for(int i = 1; i <= count; ++i) {
			int tmp;
			fscanf(pFileRead, "%d", &tmp);
			data[tmp].push_back(i);
		}

		long int result = 0;

		stack<int> s;
		s.push(1);
		vector<int> exp(count + 1, 0);

		while(!s.empty()) {
			int cur = s.top();
			
			if (data[cur].empty()) {
				exp[cur]++;
				result++;
				s.pop();
			}
			else {
				set<int> best;
				bool proceeded = true;
				for (int k = 0; k < data[cur].size(); ++k) {
					if (exp[data[cur][k]] == 0) {
						s.push(data[cur][k]);
						proceeded = false;
					}
					else
						best.insert(exp[data[cur][k]]);
				}
				if (proceeded) {
					int best_count = 1;
					while(best.find(best_count) != best.end()) {
						++best_count;
					}
					exp[cur] += best_count;
					result += best_count;
					s.pop();
				}
			}
		}

		fprintf(pFileWrite, "Case #%d: %ld\n", i, result);
	}

	fclose(pFileRead);
	fclose(pFileWrite);

	return 0;
}

