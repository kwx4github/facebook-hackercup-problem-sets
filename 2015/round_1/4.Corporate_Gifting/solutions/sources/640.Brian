#include "bits/stdc++.h"
using namespace std;

#define MAXC 21
#define MAXN 200000

long long dp[MAXN + 1][MAXC + 1];
list<int> adj[MAXN + 1];

void f(int u) {
  for(int i = 1; i <= MAXC; i++)
    dp[u][i] = i;
  for(list<int>::iterator it = adj[u].begin(); it != adj[u].end(); it++) {
    int v = *it;
    f(v);
    for(int i = 1; i <= MAXC; i++) {
      long long best = (1LL << 62);
      for(int j = 1; j <= MAXC; j++) {
        if(i == j)
          continue;
        best = min(best, dp[v][j]);
      }
      dp[u][i] += best;
    }
  }
}

int main() {
  int tc, cn, N;

  scanf("%d", &tc);
  for(cn = 1; cn <= tc; cn++) {
    scanf("%d", &N);
    for(int i = 0; i <= N; i++)
      adj[i].clear();
    for(int i = 1; i <= N; i++) {
      int p;
      scanf("%d", &p);
      adj[p].push_back(i);
    }
    f(1);
    long long best = (1LL << 62);
    for(int i = 1; i <= MAXC; i++)
      best = min(best, dp[1][i]);
    printf("Case #%d: %lld\n", cn, best);
  }
  return 0;
}
