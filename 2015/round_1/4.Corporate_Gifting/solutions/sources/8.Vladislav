#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;
typedef pair<ll, ll> lll;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const int N = 200000;

int n;
int m;
vi v[N];
int ct;
ll res[N + 1];
int was[N + 1];
int kkk;

pair<lll, int> go (int x) {
	vector<pair<int, ll> > u;
	ll sum = 0;
	int need = 5;
	for (int i = 0; i < sz (v[x]); i++) {
		pair<lll, int> tmp = go (v[x][i]);
		need = max (need, tmp.se + 5);
		sum += tmp.fi.fi;
		u.pb (mp (tmp.se, tmp.fi.se - tmp.fi.fi));
	}
	need = min (need, sz (v[x]) + 5);
	ct++;
	for (int i = 0; i < sz (u); i++) {
		int a = u[i].fi;
		int b = u[i].se;
		if (was[a] != ct) {
			was[a] = ct;
			res[a] = 0;
		}
		res[a] += b;
	}
	pair<lll, int> cur (mp (1e18, 1e18), 0);
//	printf ("%d\n", need);
	for (int i = 1; i <= need; i++) {
		if (was[i] != ct) {
			was[i] = ct;
			res[i] = 0;
		}
		if (sum + res[i] + i < cur.fi.fi) {
			cur.fi.se = cur.fi.fi;
			cur.fi.fi = sum + res[i] + i;
			cur.se = i;
		} else
		if (sum + res[i] + i < cur.fi.se)
			cur.fi.se = sum + res[i] + i;
	}
	kkk = max (kkk, cur.se);
//	printf ("%d = %I64d %I64d %d\n", x + 1, cur.fi.fi, cur.fi.se, cur.se);
	re cur;
}

int main () {
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
		scanf ("%d", &n);
		for (int i = 0; i < n; i++) v[i].clear ();
		for (int i = 0; i < n; i++) {
			int x;
			scanf ("%d", &x); x--;
			if (i > 0) v[x].pb (i);
		}
		kkk = 0;
		pair<ii, int> tmp = go (0);
		cout << "Case #" << it << ": " << tmp.fi.fi;
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f, kkk = %d\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC, kkk);
	}
	return 0;
}