#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define x first
#define y second
#define in(n) int (n) = nxt()

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef int itn;
typedef pair<int, int> PII;

int nxt() {
    int res;
    scanf("%d", &res);
    return res;
}

const int N = 200000;
vector<int> g[N];
int p[N];

int readInput() {
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        g[i].clear();
    }
    for (int i = 0; i < n; ++i) {
        cin >> p[i];
        --p[i];
    }
    for (int i = 1; i < n; ++i) {
        g[p[i]].pb(i);
    }
    return n;
}

int genInput() {
    int n = 200000;
    for (int i = 0; i < n; ++i) {
        g[i].clear();
    }
    p[0] = -1;
    for (int i = 1; i < n; ++i) {
        p[i] = rand() % i;
    }
    for (int i = 1; i < n; ++i) {
        g[p[i]].pb(i);
    }
    return n;
}

void printTest(int n) {
    cout << n << endl;
    for (int i = 0; i < n; ++i) {
        cout << p[i] << " ";
    }
    cout << endl;
}

const int COLORS = 25;
int dp[N][COLORS];

void dfs(int v) {
    for (int to : g[v]) {
        dfs(to);
    }

    for (int i = 0; i < COLORS; ++i) {
        dp[v][i] = i;
        for (int to : g[v]) {
            int add = INT_MAX;
            for (int j = 0; j < COLORS; ++j) {
                if (j == i) continue;
                add = min(add, dp[to][j]);
            }
            dp[v][i] += add;
        }
    }
}

int solver(int n) {
    dfs(0);
    int ans = INT_MAX;
    for (int i = 0; i < COLORS; ++i) {
        ans = min(ans, dp[0][i]);
    }
    return ans + n;
}

void solve(int test) {
    int n = readInput();
    int ans = solver(n);

    cout << "Case #" << test << ": ";
    cout << ans << endl;
}

int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
//#define filename ""
//    freopen(filename".in", "r", stdin);
//    freopen(filename".out", "w", stdout);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    srand(4524234);

    ld cl0 = clock();
    int t;
    cin >> t;
    for (int i = 0; i < t; ++i) {
        solve(i + 1);
    }
    cerr << setprecision(3) << fixed;
    cerr << (clock() - cl0) / (CLOCKS_PER_SEC) << endl;
    return 0;
}
