#include <cstdio>
#include <cstring>
#include <queue>
#include <algorithm>

using namespace std;

int n;
vector<int> children[200001];

pair<int, int> calc(int id)
{
	vector<char> top;
	int sum = 0;
	for(int i = 0; i < children[id].size(); i++)
	{
		pair<int, int> res = calc(children[id][i]);
		sum += res.first;
		top.push_back(res.second);
	}
	sort(top.begin(), top.end());
	int mex = 1;
	for(int i = 0; i < top.size(); i++)
	{
		if (top[i] > mex) break;
		if (top[i] == mex) mex++;
	}
	return make_pair(sum + mex, mex);
}

int main()
{
	int nt;
	scanf("%d\n", &nt);
	for(int tt = 1; tt <= nt; tt++)
	{
		printf("Case #%d: ", tt);
		scanf("%d", &n);
		for(int i = 1; i <= n; i++) children[i].clear();
		for(int i = 1; i <= n; i++)
		{
			int parent;
			scanf("%d", &parent);
			children[parent].push_back(i);
		}
		printf("%d\n", calc(1).first);
	}
	return 0;
}
