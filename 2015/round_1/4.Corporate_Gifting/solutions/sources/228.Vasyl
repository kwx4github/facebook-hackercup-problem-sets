#pragma comment(linker, "/STACK:134217728")

#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

typedef long long Int;
typedef pair<int,int> PII;
typedef vector<int> VInt;

#define FOR(i, a, b) for(i = (a); i < (b); ++i)
#define RFOR(i, a, b) for(i = (a) - 1; i >= (b); --i)
#define CLEAR(a, b) memset(a, b, sizeof(a))
#define SIZE(a) int((a).size())
#define ALL(a) (a).begin(),(a).end()
#define PB push_back
#define MP make_pair

VInt E[1 << 18];
int C[1 << 18];
int M[1 << 18];
int V[1 << 18];
int D[1 << 18];

void f(int a)
{
	int i;
	int cnt = C[a];
	VInt v(cnt);
	FOR(i, 0, cnt)
		v[i] = i;

	int sum = 0;
	FOR(i, 0, SIZE(E[a]))
	{
		int b = E[a][i];
		f(b);
		sum += V[b];
		if (M[b] < cnt)
			v[M[b]] += D[b];
	}

	int pos = 0;
	FOR(i, 0, cnt)
		if (v[pos] > v[i])
			pos = i;

	V[a] = sum + v[pos];
	M[a] = pos;
	D[a] = 1 << 30;

	FOR(i, 0, cnt)
		if (i != pos)
			D[a] = min(D[a], v[i] - v[pos]);
}

int SolveTest(int test)
{
	int N;
	scanf("%d", &N);

	int i;
	CLEAR(C, 0);
	FOR(i, 0, N)
	{
		int a;
		scanf("%d", &a);
		if (a != 0)
		{
			E[a - 1].push_back(i);
			++C[a - 1];
			++C[i];
		}
	}

	FOR(i, 0, N)
		++C[i];
	
	f(0);
	printf("Case #%d: %d\n", test + 1, N + V[0]);

	FOR(i, 0, N)
		E[i].clear();

	return 0;
}

int main()
{
	freopen("d.in", "r", stdin);
	freopen("d.out", "w", stdout);

	int T, t;
	char buf[1 << 7];
	gets(buf);
	sscanf(buf, "%d", &T);
	FOR(t, 0, T)
	{
		fprintf(stderr, "Solving %d/%d\n", t + 1, T);
		SolveTest(t);
	}

	return 0;
};
