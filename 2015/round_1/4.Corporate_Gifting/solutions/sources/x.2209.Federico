#define Federico using
#define Javier namespace
#define Pousa std;
#include <iostream>
#include <fstream>
#include <string>
#include <set>
#include <vector>
#include <map>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <stack>
#include <queue>
#include <cstring>
#include <sstream>

Federico Javier Pousa


int in(){int r=0,c;for(c=getchar_unlocked();c<=32;c=getchar_unlocked());if(c=='-') return -in();for(;c>32;r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());return r;}

int N, act;
long long int minsum[200005], rcolor[200005], delta[200005], ncolor[200005], coloradd[200005];

int main(){
	int T;
	T = in();
	for(int caso=1; caso<=T; ++caso){
		vector<int> hijos[200005];
		N = in();
		for(int i=1; i<=N; ++i){
			act = in();
			hijos[act].push_back(i);
		}
		
		for(int i=N; i>0; i--){
			if(hijos[i].empty()){
				minsum[i] = 1;
				rcolor[i] = 1;
				delta[i] = 1;
				ncolor[i] = 2;
			}else{
				long long int mintotal = 0;
				for(int k=1; k<=(int)hijos[i].size()+2; ++k){
					coloradd[k] = k;
				}
				for(int k=1; k<=(int)hijos[i].size(); ++k){
					mintotal += minsum[hijos[i][k-1]];
					coloradd[rcolor[hijos[i][k-1]]] += delta[hijos[i][k-1]];
				}
				long long int sum1 = 1000000000000000000LL;
				long long int sum2 = 1000000000000000000LL;
				long long int color1, color2;
				for(int k=1; k<=(int)hijos[i].size()+2; ++k){
					long long int value = coloradd[k];
					if(value<sum1){
						color2 = color1;
						sum2 = sum1;
						color1 = k;
						sum1 = value;
					}else{
						if(value<sum2){
							color2 = k;
							sum2 = value;
						}
					}
				}
				minsum[i] = sum1+mintotal;
				rcolor[i] = color1;
				delta[i] = sum2-sum1;
				ncolor[i] = color2;
				
			}
		}
		
		cout << "Case #" << caso << ": " << minsum[1] << endl;
	}
	
	return 0;
}
