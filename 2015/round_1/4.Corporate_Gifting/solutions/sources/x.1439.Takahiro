import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * Created by poly on 1/18/15.
 */
public class CorporateGifting {
    static class Node {
        int id;
        List<Node> children;

        Node(int id) {
            this.id = id;
            children = new ArrayList<Node>();
        }
    }

    static Node[] nodeArray;
    static long memo[][];

    static long solve(int parentCost, Node root) {
        if (memo[parentCost][root.id] > 0) {
            return memo[parentCost][root.id];
        }
        // System.out.println(parentCost + ":" + root.id);
        long sum = 0;
        for (Node child : root.children) {
            long minCost = Long.MAX_VALUE;
            for (int cost = 1; cost<11; cost++) {
                if (cost == parentCost) {
                    continue;
                }
                long tmp = solve(cost, child);
                minCost = Math.min(minCost, cost + tmp);
            }
            sum += minCost;
        }
        memo[parentCost][root.id] = sum;
        return sum;
    }

    public static void main(String argv[]) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt();
        for (int t = 0; t < T; t++) {
            int n = scanner.nextInt();
            memo = new long[12][n + 2];

            nodeArray = new Node[n + 1];
            nodeArray[0] = new Node(0);
            for (int i = 0; i < n; i++) {
                nodeArray[i + 1] = new Node(i + 1);
            }
            for (int i = 0; i < n; i++) {
                int parent = scanner.nextInt();
                nodeArray[parent].children.add(nodeArray[i + 1]);
            }
            long ans = solve(0, nodeArray[0]);
            System.out.println("Case #" + (t + 1) + ": " + ans);
        }
    }
}
