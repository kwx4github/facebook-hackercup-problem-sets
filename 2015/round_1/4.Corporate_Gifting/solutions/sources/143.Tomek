
// Tomasz Kulczynski
#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cstdlib>
#include <numeric>
using namespace std;

#define X first
#define Y second
#define MP make_pair
#define PB push_back
typedef long long LL;
typedef double D;
typedef long double LD;
typedef vector<int> VI;
typedef pair<int,int> PII;
#define REP(i,n) for (int i=0;i<(n);++i)
#define FOR(i,a,b) for (VAR(i,a);i<=(b);++i)
#define FORD(i,a,b) for(VAR(i,a);i>=(b);--i)
#define FORE(e,v) for(VAR(e,(v).begin());e!=(v).end();++e)
#define VAR(a,b) __typeof(b) a=(b)
#define SIZE(a) ((int)(a).size())
#define ALL(x) (x).begin(),(x).end()
#define CLR(x,a) memset(x,a,sizeof(x))

const int M = 201013;

VI v[M];
int o[M], ret[M], pr[M], dr[M];

void dfs(int x) {
    int sum = 0;
    VI dod(SIZE(v[x]) + 3);
    FORE(i, v[x]) {
        dfs(*i);
        sum += ret[*i];
        if(pr[*i] < SIZE(dod))
            dod[pr[*i]] += dr[*i] - ret[*i];
    }
    ret[x] = dr[x] = pr[x] = -1;
    FOR(p, 1, SIZE(dod)-1) {
        int w = sum + dod[p] + p;
        if (ret[x] == -1 || w < ret[x]) {
            dr[x] = ret[x];
            ret[x] = w;
            pr[x] = p;

        } else if(dr[x] == -1 || w < dr[x]) {
            dr[x] = w;
        }
    }
//    printf("%d :: %d (z %d) %d\n", x, ret[x], pr[x], dr[x]);
}

int main() {
    int dd;
    scanf("%d", &dd);
    FOR(ii, 1, dd) {
        int n;
        scanf("%d",&n);
        FOR(i, 1, n) {
            scanf("%d",&o[i]);
            v[o[i]].PB(i);
        }
        dfs(1);
        REP(i, n+1) v[i].clear();
        printf("Case #%d: %d\n", ii, ret[1]);
    }
    return 0;
}
