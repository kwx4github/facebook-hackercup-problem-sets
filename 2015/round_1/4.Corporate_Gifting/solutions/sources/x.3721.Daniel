import java.util.*;

public class corporate
{
	static Scanner scan;
	static int T, N, highest;
	static int[]  h, value;
	static Alist[] hierarchy, level;
	static TreeSet<Integer> used;
	static String out; 

	static class Alist extends ArrayList<Integer>{}
	static void init()
	{
		N= scan.nextInt();
		hierarchy= new Alist[N+1];
		level= new Alist[N+1];
		value= new int[N+1];
		h= new int[N];
		highest= 0;
		
		for(int i=0; i<N; i++)
			h[i]=scan.nextInt();
		
		for(int i=0; i<=N; i++)
		{
			hierarchy[i]= new Alist();
			level[i]=  new Alist();
		}
	
		for(int i=0; i<N; i++)
			hierarchy[h[i]].add(i+1);		
		
		highest=dfs(1,0);
		
		for(Integer e: level[0])
			value[e]=1;

	}
	
	static int dfs(int index, int d)
	{
		if(hierarchy[index].size()==0)
		{
			level[0].add(index);
			return 0;
		}
	//	System.out.println(index+" "+d);	
		if(d>1000)
			return 0;
		int max= 0;
		for(Integer e: hierarchy[index])
			max= Math.max(max, dfs(e,d+1))+1;

		level[max].add(index);
		
		return max;
	}
	
	static int find()
	{
		int start=0;
		int end= used.size()-1;
		int mid=-1;
		ArrayList<Integer> num= new ArrayList<Integer>(used);
		
		while(start<=end)
		{
			if(start!=num.get(start))
				return start;
		
			mid= (start+end)/2;
			
			if(num.get(mid) > mid)
				end=mid;
			else
				start=mid+1;
		}
		
		return end+1;
	}
	public static void main(String[] args)
	{
		scan= new Scanner(System.in);
		T= scan.nextInt();
		
		for(int t=1; t<=T; t++)
		{	
			init();
			int max=0;
			for(int i=1; i<=highest; i++)
			{
				for(Integer e: level[i])
				{
					used= new TreeSet<Integer>();
					
					for(Integer s: hierarchy[e])
						used.add(value[s]-1);
					
					value[e]=find()+1;
					max=Math.max(value[e],max);
				}
				
			}
			
			int ans=0;
			for(int i=1; i<=N; i++)
				ans+=value[i];
			out= ans+"";
			System.out.println("Case #"+t+": "+out);
		}
	}
}