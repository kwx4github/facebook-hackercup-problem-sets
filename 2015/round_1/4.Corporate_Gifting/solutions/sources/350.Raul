#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

typedef long long LL;
typedef double DB;
typedef unsigned UINT;
typedef unsigned long long ULL;

#define min(a, b)  a < b ? a : b
#define max(a, b)  a > b ? a : b

#define rep(i,n) for(int i=0;i<n;++i)
#define rep1(i,n) for(int i=1;i<=n;++i)
#define repab(i,a,b) for(int i=a;i<=b;++i)
#define dwn(i,n) for (int i=n-1;i>-1;--i)
#define dwn1(i,n) for (int i=n;i>0;--i)
#define dwnab(i,a,b) for(int i=a;i>=b;--i)
#define each(it, A) for (__typeof(A.begin()) it=A.begin(); it != A.end(); ++it)

#define pair pii<int, int>
#define all(v) (v).begin(), (v).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define sortv(v) sort(all(v))

#define mset(m) memset(m,0,sizeof(m))

#define sz(c) (int)c.size()
#define ff first
#define ss second

#define SI ({int x;scanf("%d", &x);x;});
#define SL ({LL x;scanf("%lld", &x);x;});

#define PI(n) printf("%d", n);
#define PLL(n) printf("%I64d", n);

#define PILN(n) printf("%d\n", n);
#define PLLN(n) printf("%I64d\n", n);

#define PLN printf("\n");

#define MAX 222222
#define NUM 51

int t, n, m[NUM+1][MAX], s;

vector <int> p[MAX];

int best(int num, int node)
{
	if (m[num][node])
		return m[num][node];
		
	int sum = num;	
	
	rep(j, sz(p[node]))
	{
		int b = 2000000000;
		rep1(i,NUM)
		{
			if (i == num) continue;
			int a = best(i, p[node][j]);
			b = min(a, b);
		}

		sum += b;
	}
		
	m[num][node] = sum;	
	return sum;
}

int main() {
	ios_base::sync_with_stdio(0);
	freopen("D.txt","w",stdout);
	freopen("corporate_gifting.txt","r",stdin);
	
    cin>>t;

	rep1(q, t)
	{		
		cin>>n;
		
		mset(m);
		
		rep1(i, n)
			p[i].clear();
						
		rep1(i, n)
		{
			cin >> s;
			if (i > 1)
				p[s].pb(i);
		}
		
		s = 2000000000;
		
		rep1(i,NUM)
		{
			int a = best(i, 1);
			s = min(a,s);
		}
		
		printf("Case #%d: %d\n", q, s);
	}

	
    return 0;
}


