#pragma comment(linker, "/STACK:2000000")
#include <bits/stdc++.h>
#define rep(i, a, b) for(int i = (int)a; i < (int)b; i++)
#define red(i, a, b) for(int i = a; i > b; i--)
#define RED true
#define BLACK false
#define pb push_back
#define mk make_pair
#define fi first
#define se second
using namespace std;
typedef pair<int, int> ii;
typedef long long ll;
typedef pair<ii, int> iii;
const int N = 2e5 + 7;
const int M = 10001;
const int inf = 1e9 + 7;
const ll base = 1e18;
const double pi = acos(-1);
const double ep = 1e-9;

int dp[N][4];
int kt[N];
vector<int> adj[N];
deque<int> q;
int d[N];
int n, k = 0;

void BFS(){
	q.push_back(1);
	d[1] = 1; k = 1;
	while (!q.empty()){
		int u = q.front(); q.pop_front();
		rep(j, 0, adj[u].size()){
			int v = adj[u][j];
			q.push_back(v);
			d[++k] = v;
		}
	}
	for(int i = k; i >= 1; i--){
		int u = d[i];
		rep(j,0,4) dp[u][j] = j + 1;
		rep(j, 0, adj[u].size()){
			int v = adj[u][j];
			rep(s, 0, 4){
				int tmp = inf;
				rep(t, 0, 4){
					if (s == t) continue;
					tmp = min(tmp, dp[v][t]);
				}
				dp[u][s] += tmp;
			}
		}
	}
	
}

int main(){
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w" ,stdout);
	int query = 1;
	cin >> query;
	for(int csi = 1; csi <= query; csi++){
		scanf("%d", &n);
		//n = 2e5;
		for(int i = 0; i <= n; i++) adj[i].clear();
		for(int i = 1; i <= n; i++){
			int u;
			scanf("%d", &u);
			if (u > 0) adj[u].push_back(i);
		}
		memset(dp, 0, sizeof(dp));
		//kt[1] = 1;
		BFS();
		//if (csi == 1)return 0;
		int ans = min(min(dp[1][0], dp[1][1]), min(dp[1][2], dp[1][3]));
		printf("Case #%d: %d\n", csi, ans);
	}
	return 0;
	
}
