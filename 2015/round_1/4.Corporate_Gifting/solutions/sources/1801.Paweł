#include<cstdio>
#include<vector>
#define MAXV 200005
using namespace std;

typedef long long i64;

int n,z;
int P[MAXV];
vector<int> V[MAXV];

i64  BEST[MAXV][2], BESTv[MAXV][2];

void best(int v){//vertex, vertex value
    if(BEST[v][0] == -1){
        int s = V[v].size()+2;
        vector<i64> t(s);

        i64 b = 0;
        for(int i=0;i<s;i++)
            t[i] = i+1; 

        for(int x: V[v]){
            best(x);
            b+=BESTv[x][0];
            if(BEST[x][0] <= s)
                t[BEST[x][0]-1] += BESTv[x][1]-BESTv[x][0];
        }
        
        int mi = 0;
        for(int i = 1;i<s;i++)
            if(t[i] < t[mi])
                mi = i;

        BEST[v][0] = mi+1; BESTv[v][0] = b+t[mi];

        mi = -1;
        for(int i = 0;i<s; i++)
            if(i!=BEST[v][0]-1 && (mi==-1||t[mi]>t[i]))
                mi = i;
        BEST[v][1] = mi+1; BESTv[v][1] = b+t[mi];
    }
}

int main(){
    scanf("%d",&z);
    for(int t=0;t<z;t++){
        scanf("%d",&n);
        for(int i=0;i<n;i++)V[i].clear();

        for(int i=0;i<n;i++){
            scanf("%d",&P[i]);P[i]--;
            V[P[i]].push_back(i);
            BEST[i][0] = BEST[i][1] = -1;
        }

        best(0);
        printf("Case #%d: %lld\n", t+1, BESTv[0][0]);
    }
    return 0;
}