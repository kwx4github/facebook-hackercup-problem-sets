#include<bits/stdc++.h>
using namespace std;

// general
#define ll long long
#define pb push_back
#define pob pop_back
#define f first
#define s second
#define mp make_pair
//--------------

// IO funcs
#ifdef fastio

#define SC(x) scanf("%c",&x)
#define SD(x) scanf("%d",&x)
#define SLL(x) scanf("%lld",&x)
#define SS(x) scanf("%s",x)

#define PC(x) printf("%c",x)
#define PD(x) printf("%d",x)
#define PLL(x) printf("%lld",x)
#define PS(x) printf("%s",x)

#else // fastio

#define SC(x) cin>>x
#define SD(x) cin>>x
#define SLL(x) cin>>x
#define SS(x) cin>>x

#define PC(x) cout<<x
#define PD(x) cout<<x
#define PLL(x) cout<<x
#define PS(x) cout<<x

#endif

//----fastio-end---

// funcs
#define swap(a,b) a^=b^=a^=b
//----------------

// statements
#define LP(i,ii,jj) for(int i=(ii);i<(jj);i++)
#define LPR(i,ii,jj) for(int i=(ii);i>=(jj);i--)
//----------------

// DS
#define vi vector<int>
#define pii pair<int,int>
#define mii map<int,int>
//----------------


const int MOD = 1000000007;

map<int, bool> tree[200010];
int p[200010];
map<int,bool> col[200010];

void init()
{
	LP(i,0,200010)
	{
		tree[i].clear();
		col[i].clear();
		p[i]=0;
	}
}

void solve(int TC)
{
	PS("Case #");PD(TC);PS(": ");
	
	init();	
	int n;
	SD(n);
	LP(i,1,n+1)
	{
		SD(p[i]);
		tree[p[i]][i] = 1;
	}

	ll ans=0;

	queue<int> q[2];

	LP(i,1,n+1)
	{
		if(tree[i].size()==0)
			q[0].push(i);
	}

	for(int i=0;;i++)
	{
		while(!q[i%2].empty())
		{
			int ind = q[i%2].front();
			q[i%2].pop();

			int minc = 1;
			while(col[ind].count(minc))
				minc++;

			ans+=minc;
			col[p[ind]][minc]=1;

			tree[p[ind]].erase(ind);
			if(tree[p[ind]].size()==0)
				q[(i+1)%2].push(p[ind]);
		}
		if(q[(i+1)%2].size()==1 && (q[(i+1)%2].front()) == 0)
			break;
	}

	PLL(ans);
	PC('\n');
}

int main()
{
	int t = 1;
	SD(t);
	LP (i,0,t)
	{
		solve(i+1);
	}
	return 0;
}
