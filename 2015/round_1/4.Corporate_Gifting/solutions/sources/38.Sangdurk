#include<cstdio>
#include<cassert>
#include<cstring>
#include<map>
#include<set>
#include<time.h>
#include<algorithm>
#include<stack>
#include<queue>
#include<utility>
#include<cmath>
#include<iostream>
#include<string>
#include<vector>
#include <limits>
   
using namespace std;
  
typedef pair <int, int> ii;
//typedef pair <long long, long long> ll;

const long long INF = 1e9 + 7;
const long long INF9 = 1e9 + 9;

long long gcd( long long b, long long s ){
    return (s!=0) ? gcd( s, b%s ) : b;
}

const int N = 200005;
const int MAGIC = 15;
vector <int> e[N];
int deg[N], v[N];

long long c[N][MAGIC];

void init( int n ){ 

	for(int i=0; i<=n; i++){
		e[i].clear();
		v[i] = 0;
		for(int j=0; j<MAGIC; j++)
			c[i][j] = 0;
	}

}

void go( int x, int par ){
	v[x] = 1;
	int sz = e[x].size();
	long long add = 0;
	for(int i=0; i<sz; i++){
		int u = e[x][i];
		if( !v[u] ) {
			go( u, x );
		}
	}

	
	for(int i=1; i<MAGIC; i++){
		long long mi = INF*INF;
		for(int j=1; j<MAGIC; j++)
			if( i != j )
				mi = min( mi, c[x][j] + j );
		c[par][i] += mi;
	}
}

int main(){
	//freopen("in.txt", "r", stdin);
	
	//freopen("out.txt", "w", stdout);

	int T;
	scanf("%d", &T);

	for(int R=1; R<=T; R++){
		
		int n;
		scanf("%d", &n);
		
		
		for(int i=1; i<=n; i++){
			int x;
			scanf("%d", &x);
			if( x > 0 ) {
				e[i].push_back( x );
				e[x].push_back( i );
				
			}
		}
		long long ans = INF*INF;
		printf("Case #%d: ", R);
		go( 1, 0 );
		for(int i=1; i<MAGIC; i++)
			ans = min( ans, c[0][i] );
		printf("%lld\n", ans);


		init( n );
		
	}
}