#include <bits/stdc++.h>
 
using namespace std;
 
#define      pii               std::pair<int,int>
#define      vi                std::vector<int>
#define      mp(a,b)           std::make_pair(a,b)
#define      X                 first
#define      Y                 second
#define      pb(x)             push_back(x)

 
typedef long long LL;
LL MOD = 1000000007;
int DP[200001][21], vis[200001], m, N;
std::vector<std::vector<int> > v(200001);
int dfs(int i)
{
	// printf("currently visiting %d\n",i);
	assert(i<N);
	vis[i]=1;
	// if(v[i].size()==1)
	// {
	// 	for(int j=1;j<=m;j++)
	// 	{
	// 		DP[i][j]=j;
	// 	}
	// 	return;
	// }
	int l = v[i].size();
	for(int j = 0; j<l;j++)
	{
		int c = v[i][j];
		if(!vis[c])dfs(c);
	}
	for(int k=1;k<=m;k++)
	{
		int cur = 0;
		for(int j=0;j<v[i].size();j++)
		{
			int c = v[i][j], sub_tree=MOD;
			if(DP[c][1]==MOD)continue;
			for(int l = 1; l<=m ;l++)
			{
				if(l!=k) sub_tree = min(sub_tree,DP[c][l]);
			}
			cur += sub_tree;
		}
		DP[i][k] = cur + k;
		// printf("%d ",cur);
	}
	// printf("\n");
}
int main()
{
	int t;
	scanf("%d",&t);
	for(int tc = 1; tc<=t ;tc++)
	{
		int n;
		scanf("%d", &n);
		N = n;
		m = (int)log2(log2((double)n + 100)) + 3;
		m = 20;
		// printf("m  = %d\n", m);
		for(int i =0;i<n;i++)
		{
			for(int j=0;j<=m;j++)
			{
				DP[i][j] = MOD;
			}
		}
		for(int i=0; i<n; i++)
		{
			int a;
			scanf("%d",&a);
			if(i==0)continue;
			a--;
			assert(a < n);
			v[a].push_back(i);
			v[i].push_back(a);
		}
		memset(vis,0,sizeof vis);
		dfs(0);
		int ans = MOD;
		for(int i = 1; i<= m ;i++)
		{
			ans = min(ans , DP[0][i]);
		}
		for(int i=0;i<n;i++)v[i].clear();
		printf("Case #%d: %d\n",tc,ans);
	}	
	return 0;
}
