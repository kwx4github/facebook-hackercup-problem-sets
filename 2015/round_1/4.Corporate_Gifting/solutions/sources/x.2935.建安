#include <cstdio>
#include <cstring>
#include <vector>
#include <queue>
#include <algorithm>
#define MAXN 200000
using namespace std;
vector<int> E[MAXN], D;
int p[MAXN], k[MAXN], g[MAXN];
bool c[MAXN];
int main()
{
	int T, N, di, l, el;
	long long int ans;
	scanf("%d", &T);
	for (int cases = 1 ; cases <= T ; cases++){
		D.clear();
		memset(k, 0, sizeof(k));
		memset(g, 0, sizeof(g));
		ans = 0;
		scanf("%d", &N);
		for (int i = 0 ; i < N ; i++)
			E[i].clear();
		for (int i = 0 ; i < N ; i++){
			scanf("%d", &p[i]);
			if (!i)
				continue;
			E[p[i] - 1].push_back(i);
			k[p[i] - 1]++;
		}
		for (int i = 0 ; i < N ; i++)
			if (!k[i])
				D.push_back(i);
		di = 0;
		while (di < N){
			l = D.size();
			for (int i = di ; i < l ; i++){
				memset(c, 0, sizeof(c));
				el = E[D[i]].size();
				for (int j = 0 ; j < el ; j++)
					c[g[E[D[i]][j]]] = 1;
				for (int j = 1 ; j < MAXN ; j++)
					if (!c[j]){
						g[D[i]] = j;
						ans += j;
						break;
					}
				k[p[D[i]] - 1]--;
				if (!k[p[D[i]] - 1])
					D.push_back(p[D[i]] - 1);
			}
			di = l;
		}
		printf("Case #%d: %lld\n", cases, ans);
	}
	return 0;
}