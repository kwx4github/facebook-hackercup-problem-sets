import java.io.*;
import java.math.BigInteger;
import java.util.*;


public class D {

    int[][] dp;
    ArrayList<Integer>[] g;

    static final int MAX_PRICE=20;

    int doit(int v,int p){
        if(dp[v][p]!=-1)return dp[v][p];
        int ans=1000000000;
        for(int i=1;i<=MAX_PRICE;i++){
            if(i==p)continue;
            int cur=i;
            for(Integer x:g[v])cur+=doit(x,i);
            if(cur<ans)ans=cur;
        }
        return dp[v][p]=ans;
    }

    void solve() throws IOException {
        int t=nextInt();
        for(int testCase=0;testCase<t;testCase++){
            int n=nextInt();
            dp=new int[n][MAX_PRICE+1];
            for(int i=0;i<n;i++)
                for(int j=0;j<=MAX_PRICE;j++)dp[i][j]=-1;
            g=new ArrayList[n];
            for(int i=0;i<n;i++)g[i]=new ArrayList<Integer>();
            nextInt();
            for(int i=1;i<n;i++)g[nextInt()-1].add(i);
            out.printf("Case #%d: %d\n",testCase+1,doit(0,0));
        }
    }

    public static void main(String[] args) throws IOException {
        new D().run();
    }

    void run() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
		reader = new BufferedReader(new FileReader("input.txt"));
        tokenizer = null;
        out = new PrintWriter(new OutputStreamWriter(System.out));
		out = new PrintWriter(new FileWriter("output.txt"));
        solve();
        reader.close();
        out.flush();

    }

    BufferedReader reader;
    StringTokenizer tokenizer;
    PrintWriter out;

    int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }

    long nextLong() throws IOException {
        return Long.parseLong(nextToken());
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(nextToken());
    }

    String nextToken() throws IOException {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }
}
