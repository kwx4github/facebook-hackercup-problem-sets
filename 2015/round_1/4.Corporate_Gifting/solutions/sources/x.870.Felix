// g++ -Wl,-stack_size -Wl,100000000 -O2 homework.cc && ./a.out

#include <assert.h>
#include <stdio.h>

#include <vector>
#include <algorithm>

using namespace std;

#define MAXN 200010

vector<int> con[MAXN];
long long memo[MAXN][5];
int T, N;

long long rec(int idx, int price) {
  long long &ret = memo[idx][price];
  if (ret != -1) return ret;
  for (int i = 1; i <= 4; i++) if (i != price) {
    long long t = i;
    for (int c : con[idx]) {
      t += rec(c, i);
    }
    if (ret == -1 || t < ret) ret = t;
  }
  if (ret == -1) ret = 1;
  return ret;
}

int main() {
  scanf("%d", &T);
  for (int TC = 1; TC <= T; TC++) {
    scanf("%d", &N);
    for (int i = 0; i < N; i++) {
      con[i].clear();
    }
    for (int i = 0, P; i < N; i++) {
      scanf("%d", &P);
      if (i == 0) assert(P == 0);
      else con[P - 1].push_back(i);
    }
    memset(memo, -1, sizeof(memo));
    printf("Case #%d: %lld\n", TC, rec(0, 0));
  }
}
