import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class CorporateGifting {
	static final int MAX = 200001;
	static int[] boss = new int[MAX];
	static int[] emp = new int[MAX];
	static HashSet<Integer>[] gifts = new HashSet[MAX];
	
	private static void hack() {
		Scanner scan = new Scanner(in);
		int T = scan.nextInt();
		for (int t = 1; t <= T; t++) {
			int N = scan.nextInt();
			gifts[0] = new HashSet<>();
			for (int i = 1; i <= N; i++) {
				int b = scan.nextInt();
				boss[i] = b;
				emp[b]++;
				gifts[i] = new HashSet<>();
			}
			
			long spent = 0;
			Queue<Integer> queue = new LinkedList<>();
			for (int i = 1; i <= N; i++)
				if (emp[i] == 0)
					queue.add(i);
			while (true) {
				int k = queue.poll();
				if (k == 0)
					break;
				int g;
				for (g = 1; g <= N; g++)
					if (!gifts[k].contains(g))
						break;
				
				spent += g;
				
				int b = boss[k];
				gifts[b].add(g);
				if (--emp[b] == 0)
					queue.add(b);
			}
			
			out.println("Case #" + t + ": " + spent);
		}
	}
	
	static String read() {
		try { return in.readLine(); } catch (IOException e) { return null; }
	}
	public static void main(String[] args) throws IOException {
//		in = new BufferedReader(new InputStreamReader(System.in));
//		out = new PrintWriter(new BufferedOutputStream(System.out));
		String file = "corporate_gifting";
		in = new BufferedReader( new FileReader(file + ".txt") );
		out = new PrintWriter( new FileOutputStream(file + "_" + System.currentTimeMillis() + ".out") );
		hack(); out.flush();
	}
	static BufferedReader in; static PrintWriter out;
}
