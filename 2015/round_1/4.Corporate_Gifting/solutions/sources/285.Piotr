#include<cstdio>
#include<cstdlib>
#include<vector>

using namespace std;

#define MIN(a, b) (a < b ? a : b)

// #define MAX_K 18
#define MAX_K 20
#define MAX_N 200000

int N = 0;
vector<int> E[MAX_N + 1];
long long M[MAX_K + 1][MAX_N + 1];

long long color(int v, int vc) {
    long long res = M[vc][v];
    if (res > 0) {
        return res;
    }
    res = vc;
    for (vector<int>::iterator it = E[v].begin(); it != E[v].end(); ++it) {
        int x = *it;
        long long res_x = ((long long) N) * ((long long) N);
        for(int c=1; c<=MAX_K; c++) {
            if (c == vc) {
                continue;
            }
            long long res_xc = color(x, c);
            res_x = MIN(res_x, res_xc);
        }
        res += res_x;
    }
    M[vc][v] = res;
    return res;
}

long long solve() {
    for(int i=0; i<=MAX_N; i++) {
        E[i].clear();
        for(int j=0; j<=MAX_K; j++) {
            M[j][i] = 0;
        }
    }
    scanf("%d", &N);
    for(int i=1; i<=N; i++) {
        int x;
        scanf("%d", &x);
        E[x].push_back(i);
    }
    long long res = ((long long) N) * ((long long) N);
    for(int c=1; c<=MAX_K; c++) {
        long long res_c = color(1, c);
        res = MIN(res, res_c);
    }
    return res;
}

int main() {
    int T;
    scanf("%d", &T);
    for(int i=1; i<=T; i++)
        printf("Case #%d: %lld\n", i, solve());
    return 0;
}
