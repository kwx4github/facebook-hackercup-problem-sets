#include <algorithm>
#include <iostream>
#include <sstream>
#include <cstring>
#include <cstdarg>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <complex>
#include <numeric>
#include <vector>
#include <string>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <thread>
#include <mutex>

using namespace std;

#define all(a) (a).begin(), (a).end()
#define sz(a) int((a).size())
#define FOR(i, a, b) for (int i(a), _b(b); i < _b; ++i)
#define REP(i, n) FOR(i, 0, n)
#define FORD(i, a, b) for (int i(a), _b(b); i >= _b; --i)
#define FORE(e, v) for (int e = head[v]; e >= 0; e = E[e].next)
#define UNIQUE(a) sort(all(a)), (a).erase(unique(all(a)), (a).end())
#define CL(a, v) memset(a, v, sizeof a)
#define pb push_back
#define X first
#define Y second

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;

const int INF = 1000000000;
const ll INF_LL = 1000000000000000000LL;
const double pi = 2 * acos(0.0);

template<class T> void smin(T& a, const T& b) { if (a > b) a = b; }
template<class T> void smax(T& a, const T& b) { if (a < b) a = b; }
template<class T> T gcd(T a, T b) {
  while (a & b) { if (a >= b) a %= b; else b %= a; } return a + b; }
template<class T> T sqr(const T& a) { return a * a; }

template<typename Iterator> void print(const char* fmt,
    Iterator begin, Iterator end, const char* separator = " ") {
  for (Iterator it = begin; it != end; ++it) {
    if (it != begin) printf("%s", separator);
    printf(fmt, *it);
  }
  printf("\n");
}

const int h = 200002;
vi e[h];
int x[h], m0[h], m1[h];
int mx;

void dfs(int v) {
  if (e[v].empty()) {
    x[v] = m0[v] = 1;
    m1[v] = 2;
    return;
  }
  vi d;
  int sum = 0;
  REP(i, sz(e[v])) {
    int u = e[v][i];
    dfs(u);
    sum += m0[u];
    if (x[u] >= sz(d)) d.resize(x[u]+1, 0);
    d[x[u]] += m1[u] - m0[u];
  }

  m0[v] = INF;
  d.pb(0);
  FOR(i, 1, sz(d)) {
    d[i] += sum + i;
    if (d[i] < m0[v]) {
      m1[v] = m0[v];
      m0[v] = d[i];
      x[v] = i;
    } else if (d[i] < m1[v]) {
      m1[v] = d[i];
    }
  }
  smax(mx, x[v]);
}

int main() {
  cin.tie(NULL);
  //ios_base::sync_with_stdio(false);
  freopen("corporate_gifting.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  int ntest, itest = 1;
  for (scanf("%d", &ntest); itest <= ntest; ++itest) {
    int n;
    scanf("%d", &n);
    REP(i, n) {
      int p;
      scanf("%d", &p);
      if (p > 0) e[p-1].pb(i);
    }
    mx = 0;
    dfs(0);
    cerr << mx << endl;
//    print("%d", x, x+n);
    printf("Case #%d: %d\n", itest, m0[0]);
    REP(i, n) vi().swap(e[i]);
  }
  cerr << endl << endl << "TIME: " << clock() << endl;
  return 0;
}
