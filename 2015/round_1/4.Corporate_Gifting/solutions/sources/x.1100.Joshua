#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

typedef long long ll;

const int MAX_N = 200005;

int N;
vector<int> children[MAX_N];
ll ans;

void reset(void) {
    for(int i=0;i<MAX_N;i++) {
        children[i].clear();
    }
    ans = 0ll;
}

ll dfs(int u) {
    vector<ll> pos;
    for(int i=0;i<children[u].size();i++) {
        int o = children[u][i];
        pos.push_back(dfs(o));
    }
    sort(pos.begin(), pos.end());

    ll us = MAX_N;
    int upto = 0;
    for(int i=1;i<=N;i++) {
        bool any = false;
        while(upto < pos.size() && pos[upto] == i) {
            any = true;
            upto++;
        }
        if(!any) {
            us = i;
            break;
        }
    }
    ans += us;
    return us;
}

int main() {
    int T;
    scanf("%d",&T);

    for(int z=1;z<=T;z++) {
        reset();
        scanf("%d",&N);

        for(int i=0;i<N;i++) {
            int a;
            scanf("%d",&a);
            a--;
            if(a >= 0) {
                children[a].push_back(i);
            }
        }

        dfs(0);
        printf("Case #%d: %lld\n",z,ans);
    }

    return 0;
}
