#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#include <set>

#define pause cout << " press ansy key to continue...",  cin >> chh
#define file_r(x) freopen(x,  "r",  stdin)
#define file_w(x) freopen(x,  "w",  stdout)
#define lowbit(x) ((x) & (-x))
#define repit(i, c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define rep(i, n) for (int i = 0; i < (n); i++)
#define repe(i, u) for (int i = head[u]; i != -1; i = nxt[i])
#define repd(i, n) for (int i = (n - 1); i >= 0; i--)
#define FOR(i, n, m) for (int i = (n); i <= (m); i++)
#define FORD(i, n, m) for (int i = (n); i >= (m); i--)
#define pb push_back
#define X first
#define Y second
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define SZ(c) (c).size()
#define ALL(c) (c).begin(), (c).end()
#define sqr(r) ((r) * (r))
#define dis(x1, y1, x2, y2) (((x1) - (x2)) * ((x1) - (x2)) + ((y1) - (y2)) * ((y1) - (y2)))

#define bug(x) cout << #x" = " << x << endl
#define bug2(x, y) cout << #x" = " << x << " " << #y" = " << y << endl
#define bug3(x, y, z) cout << #x" = " << x << " " << #y" = " << y << " " << #z" = " << z << endl
#define bug4(x, y, z, w) cout << #x" = " << x << " " << #y" = " << y << " " << #z" = " << z << " " << #w" = " << w << endl

#define in(n) scanf("%d", &n)
#define in2(n, m) scanf("%d %d", &n, &m)
#define in3(x, y, z) scanf("%d %d %d", &x, &y, &z)

using namespace std;
int chh;

typedef vector<int> vi;
typedef set<int> si;
typedef map<int, int> mii;
typedef pair<int, int> pii;
typedef pair<int, pii> pi3;
typedef vector< pair<int, int> > vpii;
typedef long long LL;

const int N = 200005, M = N * 2;

int n, T;
int cnt[N], pa[N];
set<int> h[N];

queue<int> q;

int main() {
	int cas = 0, x, val, sz, fa, c, y;
	LL ans;
	scanf("%d", &T);
	while (T--) {
		scanf("%d", &n);
		memset(cnt, 0, sizeof(cnt));
		FOR (i, 1, n) {
			scanf("%d", &pa[i]);
			if (i == 1) continue;
			cnt[pa[i]]++;
		}
		FOR (i, 1, n) h[i].clear();
		FOR (i, 1, n) {
			if (cnt[i] == 0) q.push(i);
		}
		ans = 0;
		while (!q.empty()) {
			x = q.front(), q.pop();
			sz = SZ(h[x]);
			if (sz == 0) val = 1;
			else {
				val = -1, c = 1;
				repit (it, h[x]) {
					y = *it;
					if (y != c) {
						val = c;
						break;
					}
					c++;
				}
				if (val == -1) val = sz + 1;
			}
			ans += val;
			fa = pa[x], h[fa].insert(val);
			if (--cnt[fa] == 0) q.push(fa);
		}
		printf("Case #%d :%lld\n", ++cas, ans);
	}
    return 0;
}
