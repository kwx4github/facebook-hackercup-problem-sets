#pragma comment(linker,"/stack:256000000")
#include <string>
#include <vector>
#include <cstring>
#include <cstdio>
#include <iostream>
#include <sstream>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include <cstdlib>
#include <cfloat>
#include <ctime>
#include<cassert>
#include<cstdlib>
#include<fstream>
#include<iomanip>

using namespace std;

#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++)
#define sz(v) (int)(v).size()
#define all(v) (v).begin(), (v).end()

const int N=200100,INF=1e9;

vector<int>g[N];
int dp[N][3];

int dfs(int v,int color){
	if(dp[v][color]!=-1)return dp[v][color];
	int res=0;
	REP(i,sz(g[v])){
		int tmp=INF;
		REP(j,3){
			if(color!=j)tmp=min(tmp,dfs(g[v][i],j));
		}
		res+=tmp;
	}
	res+=color+1;
	return dp[v][color]=res;
}

int main() {
#ifdef LOCAL
	freopen("corporate_gifting.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
	int T;
	cin>>T;
	for(int tst=1;tst<=T;tst++){
		printf("Case #%d: ",tst);
		int n,p;
		scanf("%d",&n);
		REP(i,n)g[i].clear();
		REP(i,n){
			scanf("%d",&p);
			--p;
			if(p!=-1)g[p].push_back(i);
		}
		memset(dp,-1,sizeof(dp));
		int res=min(min(dfs(0,0),dfs(0,1)),dfs(0,2));
		cout<<res<<endl;
	}
	return 0;
}