import java.io.*;
import java.util.LinkedList;
import java.util.Queue;

public class FHC4 {
static PrintWriter pw;
public static void main(String args[]) throws Exception{
BufferedReader input = new BufferedReader(new FileReader("./corporate_gifting.txt"));
pw = new PrintWriter(new FileWriter("./output4.txt"));
        int T = Integer.parseInt(input.readLine());
        for(int i = 0 ; i < T ; i++){
        int N = Integer.parseInt(input.readLine());
        String[] s = input.readLine().split(" ");
        int[] num = new int[N];

        LinkedList[] childs = new LinkedList[N];
        for(int j = 0 ; j < N ; j++){
        childs[j] = new LinkedList<Integer>();
        }

        for(int j = 1 ; j < N ; j++){
        num[j] = Integer.parseInt(s[j]);
        childs[num[j]-1].add(j+1);
        }
        Queue<String> list = new LinkedList<String>();
        list.add("1,0");
        long sum = 0;
        while(!list.isEmpty()){
        String[] str = list.poll().split(",");
        int st = Integer.parseInt(str[0]);
        int precost = Integer.parseInt(str[1]);
        int children = childs[st-1].size();
        if(children >= 3){
        int pres = 0;
        if(precost == 0){
        sum += 2;
        pres = 2;
        }else if(precost == 1){
        sum += 2;
        pres = 2;
        }else if(precost == 2){
        sum += 3;
        pres = 3;
        }else if(precost == 3){
        sum += 2;
        pres = 2;
        }
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        list.add(childs[st-1].get(j)+","+pres);
        }
        }else if(children == 2){
        int yasya = 0;
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        yasya += childs[(Integer)childs[st-1].get(j) - 1].size();
        }
        int pres = 0;
        if(childs[st-1].size() < yasya){
       	if(precost == 0){
       	sum += 1;
       	pres = 1;
       	}else if(precost == 1){
       	sum += 3;
       	pres = 3;
       	}else if(precost == 2){
       	sum += 1;
       	pres = 1;
       	}else if(precost == 3){
       	sum += 1;
       	pres = 1;
       	}
        }else{
       	if(precost == 0){
       	sum += 2;
       	pres = 2;
       	}else if(precost == 1){
       	sum += 2;
       	pres = 2;
       	}else if(precost == 2){
       	sum += 3;
       	pres = 3;
       	}else if(precost == 3){
       	sum += 2;
       	pres = 2;
       	}
        }
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        list.add(childs[st-1].get(j)+","+pres);
        }
        }else if(children == 1){
        int pres = 0;
        if(precost == 0){
        sum += 2;
        pres = 2;
        }else if(precost == 1){
        sum += 2;
        pres = 2;
        }else if(precost == 2){
        sum += 1;
        pres = 1;
        }else if(precost == 3){
        sum += 1;
        pres = 1;
        }
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        list.add(childs[st-1].get(j)+","+pres);
        }
        }else{
        sum += 1;
        }
        }

        list.add("1,0");
        long sum2 = 0;
        while(!list.isEmpty()){
        String[] str = list.poll().split(",");
        int st = Integer.parseInt(str[0]);
        int precost = Integer.parseInt(str[1]);
        int children = childs[st-1].size();
        if(children >= 3){
        int pres = 0;
        if(precost == 0){
        sum2 += 2;
        pres = 2;
        }else if(precost == 1){
        sum2 += 2;
        pres = 2;
        }else if(precost == 2){
        sum2 += 3;
        pres = 3;
        }else if(precost == 3){
        sum2 += 2;
        pres = 2;
        }
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        list.add(childs[st-1].get(j)+","+pres);
        }
        }else if(children == 2){
        int yasya = 0;
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        yasya += childs[(Integer)childs[st-1].get(j) - 1].size();
        }
        int pres = 0;
        if(childs[st-1].size() < yasya){
       	if(precost == 0){
       	sum2 += 1;
       	pres = 1;
       	}else if(precost == 1){
       	sum2 += 3;
       	pres = 3;
       	}else if(precost == 2){
       	sum2 += 1;
       	pres = 1;
       	}else if(precost == 3){
       	sum2 += 1;
       	pres = 1;
       	}
        }else{
       	if(precost == 0){
       	sum2 += 2;
       	pres = 2;
       	}else if(precost == 1){
       	sum2 += 2;
       	pres = 2;
       	}else if(precost == 2){
       	sum2 += 3;
       	pres = 3;
       	}else if(precost == 3){
       	sum2 += 2;
       	pres = 2;
       	}
        }
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        list.add(childs[st-1].get(j)+","+pres);
        }
        }else if(children == 1){
        int pres = 0;
        if(precost == 0){
        sum2 += 1;
        pres = 1;
        }else if(precost == 1){
        sum2 += 2;
        pres = 2;
        }else if(precost == 2){
        sum2 += 1;
        pres = 1;
        }else if(precost == 3){
        sum2 += 1;
        pres = 1;
        }
        for(int j = 0 ; j < childs[st-1].size() ; j++){
        list.add(childs[st-1].get(j)+","+pres);
        }
        }else{
        sum2 += 1;
        }
        }

        pw.println("Case #"+(i+1)+": "+Math.min(sum,sum2));
pw.flush();
        }
input.close();
pw.close();
}
}