// @author peter50216
// #includes {{{
#include <bits/stdc++.h>
using namespace std;
// }}}
// #defines {{{
#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define REP(i,n) for(int i=0;i<(n);i++)
#define REP1(i,a,b) for(int i=(a);i<=(b);i++)
#define REPL(i,x) for(int i=0;x[i];i++)
#define PER(i,n) for(int i=(n)-1;i>=0;i--)
#define PER1(i,a,b) for(int i=(a);i>=(b);i--)
#define RI(x) scanf("%d",&x)
#define DRI(x) int x;RI(x)
#define RII(x,y) scanf("%d%d",&x,&y)
#define DRII(x,y) int x,y;RII(x,y)
#define RIII(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define DRIII(x,y,z) int x,y,z;RIII(x,y,z)
#define RS(x) scanf("%s",x)
#define PI(x) printf("%d\n",x)
#define PIS(x) printf("%d ",x)
#define CASET int ___T,cas=1;scanf("%d ",&___T);while(___T--)
#define CASEN0(n) int cas=1;while(scanf("%d",&n)!=EOF&&n)
#define CASEN(n) int cas=1;while(scanf("%d",&n)!=EOF)
#define MP make_pair
#define PB push_back
#define MS0(x) memset(x,0,sizeof(x))
#define MS1(x) memset(x,-1,sizeof(x))
#define SEP(x) ((x)?'\n':' ')
#define F first
#define S second
#ifdef ONLINE_JUDGE
#define FILEIO(x) freopen(#x ".in","r",stdin);freopen(#x ".out","w",stdout);
#define FILEIOS freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#else
#define FILEIO(x) ;
#define FILEIOS ;
#endif
typedef pair<int,int> PII;
typedef long long LL;
typedef unsigned long long ULL;
// }}}


#include <sys/resource.h>

void increase_stack_size() {
   const rlim_t kStackSize = 32 * 1024 * 1024;  // min stack size = 32 MB
   struct rlimit rl;
   int result;
   result = getrlimit(RLIMIT_STACK, &rl);
   if (result == 0)
   {
      if (rl.rlim_cur < kStackSize)
      {
         rl.rlim_cur = kStackSize;
         result = setrlimit(RLIMIT_STACK, &rl);
         if (result != 0)
         {
            fprintf(stderr, "setrlimit returned result = %d\n", result);
         }
      }
   }
}



int n;
vector<int> ch[201000];
int v[201000],vid[201000];
int visid;
vector<int> cur;
int& getv(int i){
  if(vid[i]!=visid){
    vid[i]=visid;
    v[i]=0;
    cur.push_back(i);
  }
  return v[i];
}
const int INF=1000000000;
inline void update(pair<PII,PII>& p, const PII& t){
  if(t<p.first){
    p.second=p.first;
    p.first=t;
  }else if(t<p.second){
    p.second=t;
  }
}
vector<pair<PII,PII>> tmpv[201000];
pair<PII,PII> solve(int np){
  vector<pair<PII,PII>>& tmp=tmpv[np];
  tmp.clear();
  for(int x:ch[np]){
    tmp.push_back(solve(x));
  }
  visid++;
  cur.clear();
  int tot=0;
  for(auto& p : tmp){
    tot+=p.first.first;
    getv(-p.first.second)+=p.second.first-p.first.first;
  }
  pair<PII,PII> ret={{INF,INF},{INF,INF}};
  for(int x:cur){
    int val=tot+v[x]+x;
    update(ret,{val,-x});
  }
  int c=0;
  for(int i=1;c<2;i++){
    if(vid[i]!=visid){
      int val=tot+i;
      update(ret,{val,-i});
      c++;
    }
  }
  return ret;
}

int main(){
  increase_stack_size();
  visid=0;
  CASET{
    RI(n);
    REP(i,n)ch[i].clear();
    REP(i,n){
      DRI(p);
      p--;
      if(p>=0)ch[p].push_back(i);
    }
    pair<PII,PII> ans=solve(0);
    printf("Case #%d: %d\n",cas++,ans.first.first);
  }
}
// vim: fdm=marker:commentstring=\ \"\ %s:nowrap:autoread

