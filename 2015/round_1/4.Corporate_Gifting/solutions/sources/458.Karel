#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <cmath>
#include <cstring>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <iostream>
#include <climits>

using namespace std;

#define REP(i, n) for (int i=0; i<n; i++)
#define FOR(i, m, n) for (int i=m; i<=n; i++)
typedef long long ll;
typedef pair<int,int> ii;

#define MAXN 222222

int n;
vector<int> tree[MAXN];
int dp[MAXN][2];
int col[MAXN][2];

void dfs(int u) {
	REP(i, tree[u].size()) dfs(tree[u][i]);
	FOR (c, 1, 450) {
		int res = c;
		REP(i, tree[u].size()) {
			int v = tree[u][i];
			res += (c!=col[v][0]) ? dp[v][0] : dp[v][1];
		}
		if (res < dp[u][0]) {
			dp[u][1] = dp[u][0];
			col[u][1] = col[u][0];
			dp[u][0] = res;
			col[u][0] = c;
		}
		else if (res < dp[u][1]) {
			dp[u][1] = res;
			col[u][1] = c;
		}
	}
}

void solve() {
	scanf("%d", &n);
	REP(i, n+5) {
		tree[i].clear();
		dp[i][0] = dp[i][1] = n*100;
	}
	REP(i, n) {
		int p; scanf("%d", &p);
		tree[p].push_back(i+1);
	}
	dfs(1);
	printf("%d\n", dp[1][0]);
}

int main() {
	int t; scanf("%d", &t);
	REP(i, t) {
		printf("Case #%d: ", i+1);
		solve();
	}
	return 0;
}
