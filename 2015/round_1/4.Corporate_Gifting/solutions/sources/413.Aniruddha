#include <bits/stdc++.h>

using namespace std;

#define LL long long int
#define sd(x) scanf("%d", &x)
#define MP make_pair
#define PB push_back
#define vi vector<int> 
#define pii pair<int,int>
#define F first
#define S second
#define D double
#define LD long double

#define INF 1000000007
struct Node
{
	long long val;
	int idx;
	bool operator < (const Node &n) const
	{
		return val < n.val;
	}
};
// Node State
// {
// 	// int root;

// 	vector
// }
void dfs(vector<vector<int> > &g, vector<vector<long long> > &dp, int root, vector<bool> &visited)
{
	visited[root] = true;
	// cout<<root<<endl;
	if(g[root].size() == 0)
	{
		dp[root][0] = INF;
		for(int j = 1; j < dp[root].size(); j++)
			dp[root][j] = j;
		return;
	}
	// cout<<root<<"here"<<endl;
	vector<vector<Node> > temp;
	for(int i = 0; i < g[root].size(); i++)
	{
		int v = g[root][i];
		if(!visited[v])
			dfs(g, dp, v, visited);
		temp.push_back(vector<Node> (dp[v].size()));
		for(int j = 0; j < dp[v].size(); j++)
		{
			temp[i][j].val = dp[v][j];
			temp[i][j].idx = j;
		}
		sort(temp[i].begin(), temp[i].end());
		// for(int j = 0; j < temp[i].size(); j++)
		// 	cout<<temp[i][j].idx<<"("<<temp[i][j].val<<")"<<" ";
		// cout<<endl;
	}
	dp[root][0] = INF;
	for(int i = 1; i < dp[root].size(); i++)
	{
		long long sum = 0;
		for(int j = 0; j < temp.size(); j++)
		{
			if(temp[j][0].idx != i)
				sum += temp[j][0].val;
			else
				sum += temp[j][1].val;
		}
		// cout<<i<<" "<<sum<<endl;
		dp[root][i] = sum + i; 
	}
	return;
}
inline void solve(int idx)
{
	int n;
	sd(n);
	vector<vector<long long> > dp(n+1,vector<long long> (11,0)); 
	vector<vector<int> > g(n+1, vector<int>());
	vector<int> parent(n+1, -1);
	// vector<int> val(n+1, 0);
	vector<bool> visited(n+1, false);
	// vector<bool> visited(n+1, false);
	for(int i = 1; i <= n; i++)
	{
		int p;
		sd(p);
		parent[i] = p;
		g[p].PB(i);
	}
	// if(idx == 6)
	// {
	// 	cout<<0<<endl;
	// 	return;
	// }
	for(int i = n; i > 0; i--)
	{
		if(!visited[i]);
		dfs(g, dp, i, visited);
	}
	long long ans = INF;
	// for(int i = 1; i<= n ;i++)
	// {
	// 	for(int j = 1; j <= 10; j++)
	// 		cout<<dp[i][j]<<" ";
	// 	cout<<endl;
	// }
	for(int i = 1; i <= 10; i++)
		ans = min(ans,dp[1][i]);
	cout<<ans<<endl;
}

int main()
{
	
	int t, i;
	sd(t);
	for(i = 1; i <= t; i++)
	{
		// cout<<i<<endl;
		// int n;
		// sd(n);
		// for(int j = 1; j <= n; j++)
		// {
		// 	int a;
		// 	sd(a);
		// 	if(a >= j)
		// 		cout<<a<<" "<<j<<endl;
		// }
		printf("Case #%d: ", i);

		solve(i);
	}
    return 0;
}