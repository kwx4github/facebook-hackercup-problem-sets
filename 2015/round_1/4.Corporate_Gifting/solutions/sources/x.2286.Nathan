#include <bits/stdc++.h>
using namespace std;

int t,n,i;
int num[200005];
bool exist[200005];
int parent[200005];
vector <int> child[200005];
int res = 0;

int getmex() {
	int now = 1;
	while (exist[now]) ++now;
	return now;
}

void process(int x) {
	for (int i = 0; i < child[x].size(); i++) {
		process(child[x][i]);
	}	
	for (int i = 0; i < child[x].size(); i++) {
		exist[num[child[x][i]]] = true;
	}
	num[x] = getmex();
	res += num[x];
	for (int i = 0; i < child[x].size(); i++) {
		exist[num[child[x][i]]] = false;
	}
}

int main() {
	scanf("%d", &t);
	int cs = 0;
	while (t--) {
		memset(exist, 0, sizeof(exist));
		for (int i = 0; i < 200005; i++) {
			child[i].clear();
		}
		res = 0;
		scanf("%d",&n);
		for (int i = 0; i < n; i++) {
			scanf("%d", &parent[i]);
			--parent[i];
			if (parent[i] >= 0) {
				child[parent[i]].push_back(i);
			}
		}
		process(0);
		printf("Case #%d: %d\n", ++cs, res);
	}
}
