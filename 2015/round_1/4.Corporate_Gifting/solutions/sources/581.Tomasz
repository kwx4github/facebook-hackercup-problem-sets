#include<cstdio>
#include<vector>
#define MAXN 200000
#define MAX_COL 20
using namespace std;
int parent[MAXN];
vector<int> edge[MAXN];
int T[MAXN][MAX_COL];

void DFS(int v)
{
	for (int i=1; i<=MAX_COL; ++i)
	{
		T[v][i-1]=i;
	}
	for (int i=0; i<edge[v].size(); ++i)
	{
		int w = edge[v][i];
		DFS(w);
		int min_index = min_element(T[w],T[w]+MAX_COL) - T[w];
		for (int i=0; i< MAX_COL; ++i)
		{
			if (i != min_index)
			{
				T[v][i] += T[w][min_index];
			}
		}
		T[w][min_index] = *max_element(T[w],T[w]+MAX_COL);
		T[v][min_index] += *min_element(T[w],T[w]+MAX_COL);
	}
}

int main()
{
	int t; 
	scanf("%d", &t);
	for (int tt=1; tt<=t; ++tt)
	{
		int n;
		scanf("%d", &n);
		for (int i=0; i<n; ++i)
		{
			int x;
			scanf("%d", &x);
			if (i != 0)
			{
				edge[x-1].push_back(i);
			}
		}
		DFS(0);
		printf("Case #%d: %d\n",tt,*min_element(T[0],T[0]+MAX_COL));
		for (int i=0; i<n; ++i)
		{
			edge[i].clear();
		}
	}
	return 0;
}