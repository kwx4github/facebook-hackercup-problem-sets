#include <cstdio>
#include <cstdlib>
#include <cstring>
#define MAXN 400005
#define MAXNUM 25
#define MYINF 1000000000

using namespace std;

struct node
{
	int min, minw, min2;
};

static int dp[MAXN][MAXNUM];
static int a[MAXN];
static int s[MAXN];
static struct node mins[MAXN];

void DFS (int point, int par)
{
	int i;
	for (i = s[point]; i < s[point+1]; i++)
	{
		if (a[i] != par)
		{
			DFS(a[i], point);
		}
	}
	mins[point].min = MYINF;
	mins[point].minw = 0;
	mins[point].min2 = MYINF;
	int j;
	for (j = 1; j <= 20; j++)
	{
		dp[point][j] = j;
		for (i = s[point]; i < s[point+1]; i++)
		{
			if (a[i] != par)
			{
				if (mins[a[i]].minw == j) dp[point][j] += mins[a[i]].min2;
				else dp[point][j] += mins[a[i]].min;
			}
		}
		if (dp[point][j] < mins[point].min)
		{
			mins[point].min2 = mins[point].min;
			mins[point].min = dp[point][j];
			mins[point].minw = j;
		}
		else if (dp[point][j] < mins[point].min2)
		{
			mins[point].min2 = dp[point][j];
		}
	}
}

int main ()
{
	int T, iT;
	scanf("%d", &T);
	static int data[MAXN];
	for (iT = 0; iT < T; iT++)
	{
		int N;
		scanf("%d",&N);
		int i;
		memset(s,0,sizeof(s));
		for (i = 0; i < N; i++)
		{
			scanf("%d",&data[i]);
			data[i]--;
			if (i)
			{
				s[i]++;
				s[data[i]]++;
			}
		}
		for (i = 1; i <= N; i++) s[i] += s[i-1];
		for (i = 1; i < N; i++)
		{
			s[i]--;
			a[s[i]] = data[i];
			s[data[i]]--;
			a[s[data[i]]] = i;
		}
/*
		for (i = 0; i < N; i++)
		{
			printf("%d:", i);
			for (int j = s[i]; j < s[i+1]; j++) printf(" %d",a[j]);
			printf("\n");
		}
*/
		DFS(0, -1);
		int res = MYINF;
		for (int j = 1; j <= 20; j++)
		{
			if (dp[0][j] < res) res = dp[0][j];
		}
		printf("Case #%d: %d\n",iT+1,res);
	}
	return 0;
}