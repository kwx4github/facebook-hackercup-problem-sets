// Author: Kamil Nizinski
#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#define debug(fmt,...) fprintf(stderr,fmt, ## __VA_ARGS__)
#define mp make_pair
#define ft first
#define sd second
#define psb push_back
#define ppb pop_back
using namespace std;
typedef long long int ll;
typedef long long unsigned llu;
typedef double dd;
const int MAXN=200003;
int P[MAXN],SONS[MAXN],n,ans;
vector < int > RESTR[MAXN];
queue < int > Q;
int smallest_not_restr(int u) {
  sort(RESTR[u].begin(),RESTR[u].end());
  int i;
  for(i=1;i<(int)RESTR[u].size();i++) if(RESTR[u][i]-RESTR[u][i-1]>1) break;
  return RESTR[u][i-1]+1;
}
int solve() {
  int i,u,price;
  scanf("%d",&n);
  for(i=1;i<=n;i++) {
    SONS[i]=0;
    RESTR[i].clear();
    RESTR[i].psb(0);
  }
  ans=0;
  for(i=1;i<=n;i++) {
    scanf("%d",&P[i]);
    SONS[P[i]]++;
  }
  for(i=1;i<=n;i++) if(SONS[i]==0) Q.push(i);
  while(!Q.empty()) {
    u=Q.front();
    Q.pop();
    price=smallest_not_restr(u);
    ans+=price;
    if(P[u]!=0) {
      RESTR[P[u]].psb(price);
      SONS[P[u]]--;
      if(SONS[P[u]]==0) Q.push(P[u]);
    }
  }
  return ans;
}
int main()
{
	int t,i;
	scanf("%d",&t);
	for(i=1;i<=t;i++) printf("Case #%d: %d\n",i,solve());
	return 0;
}
