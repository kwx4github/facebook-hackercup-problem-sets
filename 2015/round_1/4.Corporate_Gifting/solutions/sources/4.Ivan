#include <algorithm>
#include <cassert>
#include <cstring>
#include <iostream>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

const int MAXN = 200100;
const int MAXK = 20;
const llint inf = 1e18;

vector<int> E[MAXN];
llint f[MAXN][MAXK];
llint c[MAXK];

void dfs(int x) {
  vector<int> v;
  v.push_back(x);
  REP(i, (int)v.size())
    for (int y: E[v[i]]) v.push_back(y);
  
  reverse(v.begin(), v.end());
  for (int x: v) {
    REP(i, MAXK) {
      f[x][i] = inf;
      REP(j, MAXK)
        if (j != i) {
          llint cost = j+1;
          for (int y: E[x])
            cost += f[y][j];
          f[x][i] = min(f[x][i], cost);
        }
    }
  }
}
  
int main(void) {
  int TC;
  scanf("%d", &TC);
  for (int tp = 1; tp <= TC; ++tp) {
    int n;
    scanf("%d", &n);
    REP(i, n) E[i].clear();
    
    REP(i, n) {
      int dad;
      scanf("%d", &dad); --dad;
      if (dad != -1) E[dad].push_back(i);
    }

    dfs(0);

    llint ans = inf;
    REP(i, MAXK) ans = min(ans, f[0][i]);

    printf("Case #%d: ", tp);
    printf("%lld\n", ans);
    fprintf(stderr, "Case #%d: ", tp);
    fprintf(stderr, "%lld\n", ans);
  }
  return 0;
}
