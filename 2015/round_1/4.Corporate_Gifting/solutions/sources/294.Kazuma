#include <bits/stdc++.h>
using namespace std;


int putcase(){
	static int a = 1;
	cout << "Case #" << a++ << ": ";
}


vector<int> ch[200010];
#define MAX 50
int dp[200010][MAX];

int o,e;
int main(){
	int T;
	cin >> T;
	while(T--){
		for(int i = 0 ; i < 200010 ; i++){
			for(int j = 0 ; j < MAX ; j++)
				dp[i][j] = 1e9;
		}
		int N;
		cin >> N;
		for(int i = 0 ; i <200010 ; i++)
			ch[i].clear();
		
		vector<int> pa(200010);
		for(int i = 0 ; i < N ; i++){
			int p;
			cin >> p;
			ch[p].push_back(1+i);
			pa[i+1] = p;
		}

		o = e = 0;
		stack<int> S;
		S.push(1);

		vector<int> depth(200010,-1);
		depth[1] = 0;
		vector< pair<int,int> > tpr;
		while( S.size() ){
			int s = S.top(); S.pop();
			
			tpr.push_back(make_pair(depth[s],s));
			for( auto e : ch[s] ){
				if( depth[e] == -1 ){
					depth[e] = depth[s] + 1;
					S.push(e);
		
				}
			}
		}
		sort(tpr.rbegin(),tpr.rend());
		int res = 1e9;
		for( auto I : tpr ){
			int i = I.second;
			for(int j = 1 ; j < MAX ; j++){
				int sum = 0;
				for( auto e : ch[i] ){
					int mn = 1e9;
					for(int k = 1 ; k < MAX ; k++){
						if( j == k ) continue;
						mn = min(mn,dp[e][k]);
					}
					sum += mn;
				}
				dp[i][j] = sum + j;	
				if( i == 1 )
					res = min(dp[i][j],res);
			}
		}
		putcase();
		cout << res << endl;
	}
}
