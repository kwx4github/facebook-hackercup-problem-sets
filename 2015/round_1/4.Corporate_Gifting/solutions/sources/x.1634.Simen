import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;


public class CorporateGifting {
	static String FILENAME = "corporate_gifting.txt";
	static long MOD = 1000000007;
	static int PRICES = 3;

	public static void main(String[] args) throws FileNotFoundException, UnsupportedEncodingException{
		Scanner sc = new Scanner(new FileReader(FILENAME));
		PrintWriter writer = new PrintWriter(FILENAME + "OUT" + ".txt", "UTF-8");
		int t = sc.nextInt();
		for(int c = 1; c <= t; c++){
			int n = sc.nextInt();
			ArrayList<ArrayList<Integer>> g = new ArrayList<ArrayList<Integer>>();
			for(int i = 0 ; i < n; i++){
				g.add(new ArrayList<Integer>());
			}
			for(int i = 0; i < n; i++){
				if(i == 0){
					sc.nextInt();
					continue;
				}
				g.get(sc.nextInt()-1).add(i);
			}
			writer.print("Case #" + c + ": ");
			writer.println(solve(g));
		}
		writer.close();
	}

	private static String solve(ArrayList<ArrayList<Integer>> g) {
		int[][] cost = new int[g.size()][PRICES];
		Queue<Integer> q = new LinkedList<Integer>();
		Stack<Integer> s = new Stack<Integer>(); 
		q.add(0);
		while(!q.isEmpty()){
			int cur = q.poll();
			s.push(cur);
			for(int i = 0; i < g.get(cur).size(); i++){
				q.add(g.get(cur).get(i));
			}
		}
		while(!s.isEmpty()){
			int cur = s.pop();
			for(int i = 0; i < PRICES; i++){
				int sum = 0;
				for(int k = 0; k < g.get(cur).size(); k++){
					int min = Integer.MAX_VALUE;
					for(int j = 0; j < PRICES; j++){
						if(i == j){
							continue;
						}
						min = Math.min(min, cost[g.get(cur).get(k)][j]);
					}
					sum+=min;
				}
				cost[cur][i]=sum+i+1;
			}
		}
		int ans = Integer.MAX_VALUE;
		for(int i = 0 ; i< PRICES; i++){
			ans = Math.min(ans, cost[0][i]);
		}
		
		return Integer.toString(ans);
	}
}
