#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cctype>

#include <iostream>
#include <string>
#include <vector>
#include <list>
#include <stack>
#include <queue>
#include <map>
#include <algorithm>

using namespace std;

int man[200001], childn[200001];
map<int,bool> notb[200001];

typedef long long ll;

int main(){
   int tn, ti = 1;
   scanf("%d", &tn);
   
   while(tn--){
      int n;
      scanf("%d", &n);
      
      
      
      char used[200001] = {0};
      memset(childn, 0, sizeof(int)*(n+1) );
      for(int i = 1; i <= n; ++i){
         notb[i].clear();
         scanf("%d", &man[i]);
         used[ man[i] ] = 1;
         childn[ man[i] ]++;
      }
      printf("Case #%d: ", ti++);
      
      if(n == 1){
         printf("1\n");
         continue;
      }
      
      ll ans = 0;
      vector<int> child, nextchild;
      for(int i = 1; i <= n; ++i) if(used[i] == 0) child.push_back(i);
      for(int i = 0; i < child.size(); ++i){
         notb[ man[child[i]] ][1] = true;
         childn[ man[child[i]] ]--;
         if(childn[ man[child[i]] ] == 0) nextchild.push_back(man[child[i]]);
      }
      ans = child.size();
      
      while(nextchild.size() > 0){
         child = nextchild;
         nextchild.clear();
         
         for(int i = 0; i < child.size(); ++i){
            int test = 1;
            while( notb[child[i]].find(test) != notb[child[i]].end() ) test++;
            ans += test;
            notb[ man[child[i]] ][test] = true;
            childn[ man[child[i]] ]--;
            if(childn[ man[child[i]] ] == 0 && man[child[i]] > 0) nextchild.push_back(man[child[i]]);
         }
      }
      
      printf("%lld\n", ans);
   }

   //system("pause");
   return 0;
}
