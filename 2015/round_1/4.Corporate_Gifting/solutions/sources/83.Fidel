#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

#define MAXN 262144
#define MAXK 32

#define INF 1000000000
#define UNDEFINED -1

typedef int tint;

int J = 0;
vector<int> adj[MAXN];
tint dp[MAXN][MAXK];

tint _dp(int cur, int excl) {
	if (dp[cur][excl] == UNDEFINED) {
		dp[cur][excl] = 0;
		for (int i=0; i<(int)adj[cur].size(); i++) {
			int next = adj[cur][i];
			
			tint tmp = INF;
			for (int j=1; j<MAXK; j++) {
				if (j == excl) continue;
				if (tmp > j+_dp(next, j)) J = max(J,j);
				tmp = min(tmp, j+_dp(next, j));
			}
			dp[cur][excl] += tmp;
		}
	}
	return dp[cur][excl];
}

int main() {
	int N, t, T, i, tmp;
	
	cin >> T;
	for (t=1; t<=T; t++) {
		cin >> N;
		for (i=0; i<=N; i++) adj[i].clear();
		
		for (i=1; i<=N; i++) {
			cin >> tmp;
			adj[tmp].push_back(i);
		}
		
		memset(dp, UNDEFINED, sizeof(dp));
		cout << "Case #" << t << ": " << _dp(0, 0) << endl;
		cerr << J << endl;
	}

	return 0;
}
