#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <fstream>
using namespace std;
#define pb push_back 
#define REP(i,n) for(int i=0;i<(n);i++ )
typedef long long LL;
typedef pair<int, int> pii;

const int maxn = 200100;

vector<int> C[maxn];
pii B[maxn], B2[maxn];


vector<pii> V;
map<int, int> M;

void gao(int v) {
	if (C[v].size() == 0) {
		B[v] = make_pair(1, 1);
		B2[v] = make_pair(2, 2);
		return ;
	}
	int sum = 0;
	REP(i, C[v].size()) {
		gao(C[v][i]);
	}
	V.clear(); M.clear();
	REP(i, C[v].size()) {
		int c = C[v][i];
		sum += B[c].first;
		M[B[c].second] += B2[c].first - B[c].first;
	}

	//all first choice
	int num = 1;
	while (1) {
		if (M.find(num) == M.end()) {
			break;
		}
		num++;
	}
	V.pb(make_pair(sum + num, num));
	for (auto it : M) {
		V.pb(make_pair(sum + it.second + it.first, it.first));
	}

	sort(V.begin(), V.end());
	assert(V.size() >= 2);
	B[v] = V[0]; B2[v] = V[1];
}


int main(){
	int cases;
	cin>>cases;
	REP(_cases, cases) {
		int N; cin>>N;
		REP(i, maxn) {
			C[i].clear();
		}
		REP(i, N) {
			int p; cin>>p; p--;
			if (p >= 0) 
				C[p].pb(i);
		}
		gao(0);
		cerr<<_cases<<endl;
		printf("Case #%d: %d\n", _cases + 1, B[0].first);
	}
    return 0;
}