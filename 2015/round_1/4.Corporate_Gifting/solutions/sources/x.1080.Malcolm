using namespace std;
#include <iostream>
#include <vector>
#include <algorithm>

int main(){
  int T;
  cin >> T;
  for (int t=1; t<=T; t++){
  int N;
  cin >> N;
  int p[N+1];
  for (int i=1; i<=N; i++) cin >> p[i];
  sort(p+1,p+N+1);
  vector<int> children[N+1];
  for (int i=2; i<=N; i++){
    children[p[i]].push_back(i);
  }

  int **best = new int*[N+1];
  for (int i=0; i<N+1; i++)
    best[i] = new int[4];
  int max=1;
  for (int i=N; i>0; i--){
    if (children[i].empty()){
      best[i][0]=1;
      best[i][1]=1;
      best[i][2]=2;
      best[i][3]=2;
    } 
    else{
      best[i][1]=2147483647;
      best[i][3]=2147483647;
     // for each gift the ith employee can buy
      for (int j=1; j<=max; j++){
        // sum will be the best cost if he buys gift j
        int sum=j;
        // for each child he has
        for (int k=0; k<children[i].size(); k++){
          if (best[children[i].at(k)][0]!=j) 
            sum+=best[children[i].at(k)][1];
          else
            sum+=best[children[i].at(k)][3];
        }
        if (sum<best[i][1]){
          // best becomes second best
          best[i][2]=best[i][0];
          best[i][3]=best[i][1];
          // update best
          best[i][0]=j;
          best[i][1]=sum;
          // update max
          if (max<j+1) max=j+1;
        }
        else if (sum<best[i][3]){
          // update second best
          best[i][2]=j;
          best[i][3]=sum;
          if (max<j+1) max=j+1;
        }
      }
    }
  }
  cout << "Case #" << t << ": " <<best[1][1] << endl;
  }

}



