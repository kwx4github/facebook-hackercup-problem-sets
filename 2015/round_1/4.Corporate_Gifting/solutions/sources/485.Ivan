#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<cstdio>
#include<queue>
#include<sstream>
#include<list>
#include<bitset>
#include<ctime>
using namespace std;

#pragma comment(linker, "/STACK:167772160")

typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())
const int inf = 1000000000;
const int MOD = 1000000007;
const double pi=acos(-1.0);


#define TEST 1
#define SUBMIT 2

const int UP = 40;
const int N = 200001;
int n;
vector<int> g[N+2];
int dp[N+2][UP+1];

void read(int mode) {
	if(mode==SUBMIT) {
		int n;cin>>n;
		FOR(i,1,n) {
			int f;
			cin>>f;
			if(f==0) continue;
			g[f].pb(i);
			g[i].pb(f);
		}
	}else {
		int n=200000;
		FOR(i,1,n) {
			int f = (i==1 ? 0 : (rand()%(i-1)+1));
			if(f==0) continue;
			g[f].pb(i);
			g[i].pb(f);
		}
	}
}

int get(int v, int fath, int val) {
	if(dp[v][val]!=-1) return dp[v][val];
	int ans = val;
	FOR(i,0,sz(g[v])-1) {
		int to = g[v][i];
		if(to==fath) continue;

		int cur = inf;
		FOR(tov, 1, UP) if(tov!=val) cur=min(cur, get(to, v, tov));
		ans+=cur;
	}
	return dp[v][val]=ans;
}

int main() {
	freopen("corporate_gifting.txt","r",stdin);freopen("output.txt","w",stdout);
	int tests;cin>>tests;
    for(int testcase=1; testcase<=tests; ++testcase) {
		cerr<<testcase<<endl;

		FOR(i, 0, N) g[i].clear();
		memset(dp, -1, sizeof(dp));
		
		read(SUBMIT);
		
		int ans=inf;
		FOR(i,1,UP) ans=min(ans, get(1, -1, i));

        cout<<"Case #"<<testcase<<": ";
        cout<<ans<<endl;
    }
}