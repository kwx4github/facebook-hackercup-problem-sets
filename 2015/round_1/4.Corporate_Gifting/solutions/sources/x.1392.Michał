#include<cstdio>
#include<algorithm>
#include<utility>
#include<string>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<cmath>
#include<iostream>

#define REP(i, n) for(int i = 0; i< n; ++i)
#define SC(a) scanf("%d", &a)
#define SCC(a) scanf("%c", &a)
#define SC2(a, b) scanf("%d%d", &a, &b)
#define SC3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define PR(a) printf("%d\n", a)
#define FORE(c, a, b) for(int c=int(a); c<= int(b); ++c)
#define FORD(c, a, b) for(int c=int(a); c>= int(b); --c)
#define FORIT(it, cont, cont_t) for(cont_t::iterator it = cont.begin(); it != cont.end(); ++it) 
#define ALL(a) a.begin(), a.end()

#define xx first
#define yy second
#define pb push_back
#define mp make_pair
#define itr iterator

#define dbg if(0) 
#define prd dbg printf
#define koniec dbg {SCC(c);SCC(c);} return 0;

using namespace std;

typedef vector<int> vi;
typedef set<int> si;
typedef multiset<int> msi;
typedef map<int, int> mi;
typedef pair<int, int> pi;
typedef pair<pi, string> psi;
typedef pair<int, psi> ipsi;
typedef vector<psi> vpsi;
typedef long long ll;
typedef long double ld;
typedef unsigned int uint;

const int NMAX = 2000005, PMAX = 30; // 2*10^6
int tn, n, par, ans;
int t[NMAX][PMAX];
vi e[NMAX];

int process(int v, int k) {
  int out = k;
  FORIT(it, e[v], vi)
    out += t[*it][k];
  return out;
}

void compute(int ti) {
  scanf("%d ", &n);
  
  REP(i, n) {
    scanf("%d", &par);
    if(par > 0)
      e[par - 1].pb(i);
    e[i].clear();
  }
  FORD(i, n-1, 0) {
    int best = 1;
    vi scores, tmp(PMAX);
    
    FORE(j, 1, PMAX - 1) {
      tmp[j] = process(i, j);
      
      if(tmp[j] < tmp[best])
        best = j;
      scores.pb(tmp[j]);
    }  
    
    sort(ALL(scores));
    
    t[i][best] = scores[1];
    FORE(j, 1, PMAX - 1) if(j != best)
      t[i][j] = scores[0];
      
    if(i == 0)
      ans = scores[0];
  }   
  cout << "Case #" << ti << ": " << ans << endl;
  cerr << "Case #" << ti << ": " << ans << endl;
}

int main() {
  scanf("%d", &tn);
  FORE(ti, 1, tn)
    compute(ti);
  return 0;
}

