#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<ii> vii;

void print_vector(vi v);
void print_array(int* array, int start, int end);

#define FOR(i,a,b) for (int i = (a),_b = (b); i < _b; i++)
#define DOW(i,b,a) for (int i = (b),_a = (a); i >= _a; i--)
#define fill(a,v) memset(a, v, sizeof a)
#define checkbit(n,b) ((n >> b) & 1)
#define pb(a) push_back(a)
#define ALL(a) (a).begin(), (a).end()
#define SZ(a) (int)(a).size()

#define INF 1e9
#define PI acos(-1.0)

#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)

int tc, n, cse = 1, p[200100], mex[200100], deg[200100];
vvi child;
queue<int> leaves;

int main() {
  #ifndef ONLINE_JUDGE
  freopen("corporate_gifting.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  #endif 

  s(tc);
  while(tc--){
    s(n);
    child.assign(n, vi());
    while(!leaves.empty())leaves.pop();
    FOR(i, 0, n){
      s(p[i]); p[i]--;
      if(p[i] >= 0){
        child[p[i]].push_back(i);
      }
    }
    fill(mex, 0);
    FOR(i, 0, n) {
      deg[i] = child[i].size();
    }
    FOR(i, 0, n){
      if(deg[i] == 0) mex[i] = 1, deg[p[i]]--;
    }
    FOR(i, 0, n){
      if(deg[i] == 0 && mex[i] == 0) leaves.push(i);
    }
    while(!leaves.empty()){
      int i = leaves.front();
      leaves.pop();
      deg[p[i]]--;
      set<int> mexes;
      FOR(j, 0, SZ(child[i])){
        mexes.insert(mex[child[i][j]]);
      }
      for(int k = 1; ; k++){
        if(mexes.count(k) == 0){
          mex[i] = k;
          break;
        }
      }
      if(deg[p[i]] == 0) leaves.push(p[i]);
    }
    ll ans = 0;
    FOR(i, 0, n) ans += mex[i];
    printf("Case #%d: %lld\n", cse++, ans);
  }
  
  return 0;
}

void print_array(int* array, int start, int end){
  printf("[");
  FOR(i, start, end){
    printf("%d ", array[i]);
  }
  printf("]");
  printf("\n");
}

void print_vector(vi v){
  printf("[");
  FOR(i, 0, v.size()){
    printf("%d ", v[i]);
  }
  printf("]");
  printf("\n");
}