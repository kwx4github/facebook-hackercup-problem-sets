#include <cstring>
#include <map>
#include <numeric>
#include <sstream>
#include <cmath>
#include <stack>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <iostream>
#include <set>
#include <queue>
#include <string>
#include <cctype>

using namespace std;

#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define pb(x) push_back((x))
#define REP(i,x,y) for(int i = x; i < int(y); i++)

typedef pair<int, int> pii;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<pii> vii;
typedef vector<string> vs;
typedef vector<int> vi;

vector<vi > adj ;


int memo[200005][10];

int get(int node , int lst){
	int &ret = memo[node][lst];
	if(ret != -1)return ret;
	ret = 1<<30;
	for(int val=1;val<4;val++){
		if(val!=lst){
			int sum = val;
			for(int i=0;i<int(adj[node].size());i++){
				sum += get(adj[node][i] , val) ;
			}
			ret = min(ret,sum);
		}
	}
	return ret;
}


int dps[200005];
vector<int> res;

void bfs(){
	queue<int> Q;
	res.clear();
	Q.push(0);

	while(Q.size()){
		int sz = (int)Q.size();
		while(sz--){
			int cur = Q.front();
			res.push_back(cur);
			Q.pop();
			for(int i=0;i<int(adj[cur].size());i++){
				Q.push(adj[cur][i]);
			}
		}
	}
	reverse(res.begin() , res.end());
}

int main(){
	#ifndef ONLINE_JUDGE
		freopen("corp.txt","r",stdin);
		freopen("output.txt","w",stdout);
	#endif
	int t, n,in ;
	scanf("%d" , &t);
	for(int cn=1;cn<=t;cn++){
		scanf("%d" , &n);
		memset(memo,-1,sizeof memo);
		adj.clear();
		adj.resize(n+5);
		for(int i=0;i<n;i++){
			scanf("%d" , &in);
			if(i!=0){
				in--;
				adj[in].push_back(i);
			}
		}
		bfs();
		//REP(i,0,n) cout << res[i] << endl;
		for(int i=0 ; i < n ; i++){
			for(int x=1;x<5;x++)
				get(res[i],x);
		}
		int ans = 1<<30;

		for(int i = 1 ; i < 4 ; i++)
			ans = min(ans , get(0,i));
		printf("Case #%d: %d\n" , cn , ans);
	}
}


