#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>
#include<queue>
using namespace std;
int T,N;
int A[200001];
vector<int> list[200001];
queue<int> q;
#define MMAX 20
int D[200001][MMAX];
int st[200001],K;
bool V[200001];
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&T);
	int t;
	int i,j,k;
	int Ans1,Ans2;
	for(t=1;t<=T;t++)
	{
		scanf("%d",&N);
		for(i=1;i<=N;i++)
		{
			list[i].clear(),V[i]=0;
			for(j=1;j<MMAX;j++) D[i][j]=j;
		}
		for(i=1;i<=N;i++) scanf("%d",&A[i]),list[A[i]].push_back(i);
		Ans1=Ans2=0;
		K=0; q.push(1); V[1]=1;
		while(!q.empty())
		{
			int x = q.front(); q.pop();
			st[++K]=x;
			for(j=0;j<list[x].size();j++)
			{
				if(V[list[x][j]]) continue;
				q.push(list[x][j]);
				V[list[x][j]]=1;
			}
		}
		for(i=K;i>1;i--)
		{
			int x = st[i];
			for(j=1;j<MMAX;j++)
			{
				for(k=1;k<MMAX;k++) if(j!=k) break;
				int m = D[x][k];
				for(;k<MMAX;k++) if(j!=k && m>D[x][k]) m=D[x][k];
				D[A[x]][j]+=m;
			}
		}
		printf("Case #%d: %d\n",t,min(D[1][1],min(D[1][2],D[1][3])));
	}
}