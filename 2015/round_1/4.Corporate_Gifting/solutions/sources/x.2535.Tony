#include <cstdio>
#include <cstring>
#include <queue>
#include <vector>
using namespace std;
int dp[200001][4];
int parent[200001];
int deg[200001];
vector<int> v[200001];
int main() {
  freopen("corporate_gifting.out", "w", stdout);
  int t, n, k;
  scanf("%d", &t);
  for (int i=1; i<=t; i++) {
    scanf("%d", &n);
    for (int j=0; j<=n; j++) {
      v[j].clear();
    }
    for (int j=1; j<=n; j++) {
      scanf("%d", &k);
      v[k].push_back(j);
      deg[k]++;
      parent[j] = k;
    }
    queue<int> q;
    for (int j=1; j<=n; j++) {
      if (deg[j] == 0) {
        q.push(j);
      }
    }
    while (!q.empty()) {
      int f = q.front();
      q.pop();
      dp[f][1] = 1;
      dp[f][2] = 2;
      dp[f][3] = 3;
      for (int i=0; i<v[f].size(); i++) {
        dp[f][1] += min(dp[v[f][i]][2], dp[v[f][i]][3]);
        dp[f][2] += min(dp[v[f][i]][1], dp[v[f][i]][3]);
        dp[f][3] += min(dp[v[f][i]][1], dp[v[f][i]][2]);
      }
      if (f == 1) {
        break;
      } else if (--deg[parent[f]] == 0) {
        q.push(parent[f]);
      }
    }
    printf("Case #%d: %d\n", i, min(dp[1][1], min(dp[1][2], dp[1][3])));
  }
  return 0;
}

