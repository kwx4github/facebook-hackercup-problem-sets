#define y1 JulioCortasar
#define y2 GabrielGarsiaMarkes
#include <bits/stdc++.h>
#undef y1
#undef y2

#ifdef LOCAL
    #define eprintf(...) fprintf(stderr, __VA_ARGS__)
#else
    #define eprintf(...) 42
#endif

#define pb push_back
#define mp make_pair

using namespace std;

typedef long long ll;
typedef double lf;

const ll inf = 1e9 + 100500;

#define STANDART_INPUT

#ifdef LOCAL
void initrand()
{
    ll seed;
    asm("rdtsc":"=A"(seed));
    srand(seed);
}
#endif

const int maxn = 200000, maxk = 20;

int n, data[maxn];
int dp[maxn][maxk + 1];
vector<int> tree[maxn];

int dfs(int v, int c)
{
    if (dp[v][c] != -1) return dp[v][c];
    int &ans = dp[v][c] = 0;
    for (int to : tree[v])
    {
        int cur = maxn * maxk;
        for (int k = 0; k < maxk; ++k)
            if (k != c)
                cur = min(cur, dfs(to, k));
        ans += cur;
    }
    return ans += c + 1;
}

void solve(int test)
{
    memset(dp, -1, sizeof(dp));
    scanf("%d\n", &n);
    for (int i = 0; i < n; ++i) tree[i].clear();
    for (int i = 0; i < n; ++i)
    {
        scanf("%d", &data[i]);
        if (--data[i] >= 0)
            tree[data[i]].pb(i);
    }
    int ans = maxn * maxk;
    for (int i = 0; i < maxk; ++i)
        ans = min(ans, dfs(0, i));
    printf("Case #%d: %d\n", test, ans);
}

int main()
{
    freopen("input.txt", "r", stdin);
    int t;
    scanf("%d\n", &t);
    for (int i = 1; i <= t; ++i) solve(i);
#ifdef LOCAL
    cerr << "Time = " << clock() / 1000 << " ms." << endl;
#endif
	return 0;
}
