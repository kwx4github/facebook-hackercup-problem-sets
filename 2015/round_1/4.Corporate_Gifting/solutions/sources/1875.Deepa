#include<bits/stdc++.h>
using namespace std;
const int mx = 200005, lg_mx = 20;

int dp[mx][lg_mx];
vector<int> child[mx];

int solve(int x, int last) {
    int &ret = dp[x][last];
    if(ret != -1) return ret;
    ret = INT_MAX;

    for(int nxt = 1; nxt < lg_mx; ++nxt) if(nxt != last) {
        int cur = nxt;
        for(int i = 0; i < child[x].size(); ++i) cur += solve(child[x][i], nxt);
        ret = min(ret, cur);
    }

    return ret;
}

int main() {
    int t;
    scanf("%d", &t);
    for(int k = 1; k <= t; ++k) {
        int n;
        scanf("%d", &n);
        for(int i = 0; i < n; ++i) {
            int x;
            scanf("%d", &x);
            --x;
            if(i) child[x].push_back(i);
        }

        memset(dp, -1, sizeof(dp));
        printf("Case #%d: %d\n", k, solve(0, 0));

        for(int i = 0; i < mx; ++i) child[i].clear();
    }

    
	return 0;
}
