#include <bits/stdc++.h>

using namespace std;

int memo[200010][4];
bool mark[200010][4];

vector <int> arr[200010];
int n;

int DP (int actual, int color){
		//cout<<actual<<" "<<color<<endl;
		if (arr[actual].size()==0){

			if (color==1)
				return 2;
			else
				return 1;
		}
		
		int &best= memo[actual][color];
		
		if (mark[actual][color]) return best;
		
		mark[actual][color]=true;
		best=0;
		
		int colora,colorb;
		colora=0; colorb=0;
		if (color==1){
			
			for (int i=0;i<arr[actual].size();++i){
				int destino= arr[actual][i];
				colora+= DP (destino,2);
				colorb+= DP (destino,3);
				
			}
			
			if (colorb>=colora){
				best+=colora+2;
			}else{
				best+=colorb+3;
			}
			
		}else if (color==2){
			for (int i=0;i<arr[actual].size();++i){
				int destino=arr[actual][i];
				colora+= DP (destino,1);
				colorb+= DP (destino,3);
				
			}
			
			if (colorb>=colora){
				best+=colora+1;
			}else{
				best+=colorb+3;
			}

			
		}else if (color==3){
			for (int i=0;i<arr[actual].size();++i){
				int destino=arr[actual][i];
				colora+=DP(destino,1);
				colorb+=DP(destino,2);

			}
			
			if (colorb>=colora){
				best+=colora+1;
			}else{
				best+=colorb+2;
			}

		}
		
		
		return best;
}

int main(){

	int t; scanf("%d",&t);
	
	for (int s=1;s<=t; ++s){
		
		scanf("%d",&n);
		
		for (int i=0;i<=n;++i){
			arr[i].clear();
			mark[i][1]=false;
			mark[i][2]=false;
			mark[i][3]=false;
		}
		
		int root;
		for (int i=0;i<n;++i){
			int a;
			scanf("%d",&a);
			if (a==0){ root=i+1; continue;}
			
			arr[a].push_back(i+1);
		}
		int best=0x3f3f3f3f;
		
	/*	for (int i=1;i<=n;++i){
			cout<<i<<endl;8
			for (int j=0;j<arr[i].size();++j){
				cout<<arr[i][j]<<" ";
			}
			cout<<endl;
		} */
		
		for (int i=0;i<3;++i){
			int acum=0;
			
			for (int j=0; j<arr[root].size();++j){

			//	acum+= DP(arr[root][j],i+1);
						acum+=DP(arr[root][j],i+1);

			}
			

					//		cout<<acum<<endl;

			best=min(best,acum+i+1);
		}		
		
		printf("Case #%d: %d\n",s,best);
				
	}
	

	return 0;	
}
