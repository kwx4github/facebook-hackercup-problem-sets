#include <iostream>
#include <stdio.h>
#include <math.h>
#include <climits>
#include <functional>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <stack>
#define lli long long int
#define fi(n) scanf("%d",&n)
#define fo(n) printf("%d",n)
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define it(i,v) __typeof(v.begin()) i;
#define set(a,val) memset(a,val,sizeof(a))
#define rep(i,a,b) for(i = (a); i < (b) ; i++)
#define rev(i,a,b) for(i = (a); i >= (b) ; i--)

using namespace std;

lli min(lli a,lli b){
	return a>b?b:a;
}

vector<vector<int> > adj(200004);
lli dp[200004][21];
bool vis[200004];
void func(int id){
	int i,j,k,p;
	set(vis,false);
	stack<int>s;
	vis[id]=true;
	s.push(id);
	while(!s.empty())
	{
		int temp=s.top();
		rep(i,0,adj[temp].size())
		{
			if(vis[adj[temp][i]]==false)
				break;
		}
		if(adj[temp].size()==0)
		{
			for(i=1;i<=20;++i)
			   dp[temp][i]=i;
			s.pop();
		}
		else if(i==adj[temp].size())
		{
			for(i=1;i<=20;++i)
			  {
			   dp[temp][i]=i;
			   for(j=0;j<adj[temp].size();++j)
			   {
			     lli minm=1e18;
			     for(p=1;p<=20;++p)
			     if(p!=i)
			     minm=min(minm,dp[adj[temp][j]][p]);
			     dp[temp][i]+=minm;
			   }
			  }
			  s.pop();
		}
		else
		{
			vis[adj[temp][i]]=true;
			s.push(adj[temp][i]);
		}
	}

}

int main(){
	int i,t,T,n,num;
	fi(T);
	rep(t,1,T+1){
		fi(n); lli ans = LONG_LONG_MAX;
		rep(i,0,n)
			adj[i].clear();
		rep(i,0,n){
			fi(num); adj[num].push_back(i+1);
		}
		func(1);
		rep(i,1,21) ans = min(ans,dp[1][i]);
		printf("Case #%d: %lld\n",t,ans);
	}
	return 0;
}