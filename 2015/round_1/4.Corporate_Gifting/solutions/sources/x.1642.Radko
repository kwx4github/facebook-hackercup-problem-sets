import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;


public class Gifting {
	
	static class Node {
		Node parent;
		List<Node> children;
		int val;
		
		public Node(Node p) {
			this.parent = p;
			this.children = new LinkedList<Node>();
			this.val = 0;
		}
		public Node() {
			this(null);
		}
	}
	
	static long traverse(Node n, int total) {
		if (n.children.size() == 0) {
			n.val = 1;
			return 1;
		}
		long others = 0;
		for (Node child : n.children) {
			others += traverse(child, total);
		}
		boolean array[] = new boolean[n.children.size() + 2];
		for (Node child : n.children) {
			if (child.val < array.length)
				array[child.val] = true;
		}
		for (int i = 1; i < array.length; i++) {
			if (!array[i]) {
				n.val = i;
				return n.val + others;
			}
		}
		// Never here!!!
		return 0;
	}

	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException {
		BufferedReader scanner = new BufferedReader(new FileReader("input/corporate_gifting.txt"));
		int t = Integer.parseInt(scanner.readLine());
		for (int i = 1; i <= t; i++) {
			int n = Integer.parseInt(scanner.readLine());
			Node people[] = new Node[n + 1];
			String line[] = scanner.readLine().split(" ");
			people[0] = null;
			for (int j = 1; j <= n; j++) {
				people[j] = new Node();
			}
			for (int j = 1; j <= n; j++) {
				int manager = Integer.parseInt(line[j - 1]);
				people[j].parent = people[manager];
				if (manager != 0)
					people[manager].children.add(people[j]);
			}
			System.out.format("Case #%d: %d\n", i, traverse(people[1], n + 1));
		}
		scanner.close();
		

	}

}
