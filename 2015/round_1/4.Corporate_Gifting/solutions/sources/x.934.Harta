#include <bits/stdc++.h>
using namespace std;

const int MAXN = 200010;
const int MAXCOL = 10;
const int oo = (int)1e9;

#define pb push_back

vector<int> g[MAXN];
int t, n, root, f[MAXN][MAXCOL + 10];

int dp(int x, int col) {
	if (f[x][col] != -1) return f[x][col];
	int res = 0;
	for (auto &it: g[x]) {
		int temp = oo;
		for (int j = 1; j <= MAXCOL; j++) {           
			if (col == j) continue;
				temp = min(temp, dp(it, j) + j);
		}
		res += temp;
	}
    return f[x][col] = res;
}

int main() {
	freopen("corporate.in", "r", stdin);
	freopen("corporate.out", "w", stdout);
	scanf("%d", &t);
	int xx = 1;
	while (t--) {
		scanf("%d", &n);
		for (int i = 1; i <= n; i++) g[i].clear();
		for (int i = 1; i <= n; i++) {
			int x;
			scanf("%d", &x);
			if (x == 0) {
				root = i;
				continue;
			}
			g[x].pb(i);
		}
		memset(f, -1, sizeof(f));
		int ans = oo;
		for (int i = 1; i <= MAXCOL; i++) ans = min(ans, dp(root, i) + i);
		printf("Case #%d: %d\n", xx++, ans);
	}
    return 0;
}

