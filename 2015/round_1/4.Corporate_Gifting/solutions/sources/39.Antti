#include <iostream>
#include <vector>

#define ll long long
#define R 100

using namespace std;

int t;
int n;
vector<int> p[202020];
ll d[202020][R+1];
ll p1[202020];
ll p2[202020];

void laske(int k) {
    p1[k] = (ll)n*n;
    p2[k] = (ll)n*n;
    for (int i = 0; i < p[k].size(); i++) {
        laske(p[k][i]);
    }
    for (int h = 1; h <= R; h++) {
        ll u = h;
        for (int i = 0; i < p[k].size(); i++) {
            int s = p[k][i];
            ll p = p1[s];
            if (d[s][h] == p) p = p2[s];
            u += p;
        }
        d[k][h] = u;
        if (u < p1[k]) {p2[k] = p1[k]; p1[k] = u;}
        else if (u < p2[k]) p2[k] = u;
    }
}

void solve(int x) {
    cin >> n;
    for (int i = 1; i <= n; i++) p[i].clear();
    for (int i = 1; i <= n; i++) {
        int s;
        cin >> s;
        if (s != 0) p[s].push_back(i);
    }
    laske(1);
    ll t = (ll)n*n;
    for (int i = 1; i <= R; i++) t = min(t, d[1][i]);
    cout << "Case #" << x << ": " << t << "\n";
}

int main() {
    cin >> t;
    for (int i = 1; i <= t; i++) solve(i);
}
