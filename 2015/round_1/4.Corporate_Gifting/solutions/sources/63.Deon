#include <iostream>
#include <ctime>
#include <fstream>
#include <cmath>
#include <cstring>
#include <cassert>
#include <cstdio>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <complex>
#include <utility>
#include <cctype>
#include <list>
#include <bitset>

using namespace std;

#define FORALL(i,a,b) for(int i=(a);i<=(b);++i)
#define FOR(i,n) for(int i=0;i<(n);++i)
#define FORB(i,a,b) for(int i=(a);i>=(b);--i)

typedef long long ll;
typedef long double ld;
typedef complex<ld> vec;

typedef pair<int,int> pii;
typedef map<int,int> mii;

#define pb push_back
#define mp make_pair

#define MAXN 200005
#define MAXC 33
#define INF 1000000000

vector<int> E[MAXN];
int p[MAXN];

int dp[MAXN][MAXC];

#define d(i) ((int)(E[i].size()))

void solve(int i) {
	int numE = E[i].size();
	FOR(x,numE) solve(E[i][x]);
	
	FOR(c,MAXC) {
		dp[i][c] = INF;
		int K = min(d(i) + 2,MAXC-1);
		FORALL(d,1,K) {
			if (d==c) continue;
			int here = d;
			FOR(x,numE) here += dp[E[i][x]][d];
			dp[i][c] = min(dp[i][c], here);
		}
	}
}

int main() {
	int TEST,N;
	scanf("%d",&TEST);
	FOR(test,TEST) {
		scanf("%d",&N);
		FORALL(i,0,N) E[i].clear();
		FORALL(i,1,N) scanf("%d",&p[i]), E[p[i]].pb(i);
		memset(dp,1,sizeof(dp));
		
		solve(1);
		int ans = dp[1][0];
		
		FORALL(i,1,N) {
			int mx = 0;
			FOR(c,MAXC) if (dp[i][c] > dp[i][mx]) mx = c;
			assert(mx < 28);
		}
		
		printf("Case #%d: %d\n",(test+1),ans);
	}
}












