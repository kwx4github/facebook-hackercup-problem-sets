/* 
 * File:   facebook.cpp
 * Author: me
 *
 * Created on January 10, 2015, 10:35 PM
 */
#include <cstdlib>
#include <iostream>
#include <cstdio>
#include <vector>
#include <deque>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <sstream>
#include <cstring>
#include <math.h>
#include <cmath>
#define readfiles freopen("in.in","r",stdin), freopen("out.out","w",stdout);
#define readfile freopen("in.in","r",stdin);
#define fastio ios::sync_with_stdio(false);
const int OO = 0x7fffffff ;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int uint;
typedef vector< int>  vi;
typedef vector< vi> vvi;
typedef pair<int ,int> pi;
typedef vector<pi > vpi;
typedef vector< vpi> vvpi;
typedef pair<pi,int > node;

/*
 * 
 */
bool visited[101][101][5];
char arr[101][101];
int n,m;
void bfs(int sx,int sy)
{
    node s = make_pair(make_pair(sx,sy),0),per;
    queue<node > q;
    q.push(s);
    int x,y,z,xx,yy;
    
    while(!q.empty())
    {
        per = q.front(); q.pop();
        x=per.first.first;
        y=per.first.second;
        z=per.second;
        if(arr[x][y]=='G')
        {
            cout<<z<<endl;
            return;
        }
        z++;
        
        xx=x+1;
        yy=y;
        if(xx>=0&&xx<n&&yy>=0&&yy<m&&(!visited[xx][yy][z%4]))
        {
            q.push(make_pair(make_pair(xx,yy),z));
            visited[xx][yy][z%4]=1;
        }
        
        xx=x-1;
        yy=y;
        if(xx>=0&&xx<n&&yy>=0&&yy<m&&(!visited[xx][yy][z%4]))
        {
            q.push(make_pair(make_pair(xx,yy),z));
            visited[xx][yy][z%4]=1;
        }
       
        xx=x;
        yy=y+1;
        if(xx>=0&&xx<n&&yy>=0&&yy<m&&(!visited[xx][yy][z%4]))
        {
            q.push(make_pair(make_pair(xx,yy),z));
            visited[xx][yy][z%4]=1;
        }
        
        xx=x;
        yy=y-1;
        if(xx>=0&&xx<n&&yy>=0&&yy<m&&(!visited[xx][yy][z%4]))
        {
            q.push(make_pair(make_pair(xx,yy),z));
            visited[xx][yy][z%4]=1;
        }
     
    }
    cout<<"impossible"<<endl;
}
inline void roll_u(int x,int y,int c)
{
    x--;
    while(x>=0)
    {
       if(!(arr[x][y]=='.'||arr[x][y]=='S'||arr[x][y]=='G'))
            break;
        visited[x][y][c]=1;
        x--;
    }
}

inline void roll_d(int x,int y,int c)
{
    x++;
    while(x<n)
    {
       if(!(arr[x][y]=='.'||arr[x][y]=='S'||arr[x][y]=='G'))
            break;
        visited[x][y][c]=1;
        x++;
    }
}

inline void roll_r(int x,int y,int c)
{
    y++;
    while(y<m)
    {
        if(!(arr[x][y]=='.'||arr[x][y]=='S'||arr[x][y]=='G'))
            break;
        visited[x][y][c]=1;
        y++;
    }
}

inline void roll_l(int x,int y,int c)
{
    y--;
    while(y>=0)
    {
        if(!(arr[x][y]=='.'||arr[x][y]=='S'||arr[x][y]=='G'))
            break;
        visited[x][y][c]=1;
        y--;
    }
}


inline void set_u(int x,int y)
{
   visited[x][y][0]=visited[x][y][1]=visited[x][y][2]=visited[x][y][3]=1;
    roll_u(x,y,0);
    roll_r(x,y,1);
    roll_d(x,y,2);
    roll_l(x,y,3);
}

inline void set_d(int x,int y)
{
   visited[x][y][0]=visited[x][y][1]=visited[x][y][2]=visited[x][y][3]=1;
    roll_d(x,y,0);
    roll_l(x,y,1);
    roll_u(x,y,2);
    roll_r(x,y,3);
}

inline void set_r(int x,int y)
{

    visited[x][y][0]=visited[x][y][1]=visited[x][y][2]=visited[x][y][3]=1;
    roll_r(x,y,0);
    roll_d(x,y,1);
    roll_l(x,y,2);
    roll_u(x,y,3);
}

inline void set_l(int x,int y)
{
   visited[x][y][0]=visited[x][y][1]=visited[x][y][2]=visited[x][y][3]=1;
    roll_l(x,y,0);
    roll_u(x,y,1);
    roll_r(x,y,2);
    roll_d(x,y,3);
}


int main(int argc, char** argv) {

   // readfiles
    int t;
    cin>>t;
    for(int tt=1;tt<=t;tt++)
    {
        cout<<"Case #"<<tt<<": ";
        cin>>n>>m;
        
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                cin>>arr[i][j];
        
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                for(int k=0;k<4;k++)
                    visited[i][j][k]=0;
            
            pi s;
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
            {
                if(arr[i][j]=='S'){
                    s.first=i;
                    s.second=j;
                }
                else if(arr[i][j]=='#'){
                    for(int k=0;k<4;k++)
                        visited[i][j][k]=1;
                }
                else if(arr[i][j]=='^')
                    set_u(i,j);
                else if(arr[i][j]=='v')
                    set_d(i,j);
                else if(arr[i][j]=='>')
                    set_r(i,j);
                else if(arr[i][j]=='<')
                    set_l(i,j);
                
            }
            
            bfs(s.first,s.second);
        
        
        
        
    }
    return 0;
}

