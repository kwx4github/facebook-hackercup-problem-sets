/*
Author: Ashfaque Ahmed , CSE-12 , MIST.
Date:
Description :
*/
#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<stack>
#include<queue>
#include<map>
#include<sstream>
using namespace std;
#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include<math.h>
#include<stdlib.h>

#define ip freopen("in.txt","r",stdin)
#define op freopen("out.txt","w",stdout)
#define SET(a) memset(a,-1,sizeof a)
#define CLR(a) memset(a,0,sizeof a)
#define pb push_back
#define mp make_pair

#define max(a,b) ((a>b)?a:b)
#define min(a,b) ((a<b)?a:b)
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define MAX(a) (*max_element(all(a)))
#define MIN(a) (*min_element(all(a)))
#define LB(a,x) (lower_bound(all(a),x)-a.begin())
#define UB(a,x) (upper_bound(all(a),x)-a.begin())
#define countbit(x) __builtin_popcount(x)

#define pi acos(-1)
#define M 1000007
#define I (1<<30)
#define MD 100000007
#define eps 1e-7
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> ii;
ll GCD (ll a, ll b) {return (b==0?a:GCD(b,a%b));}
ll LCM (ll a, ll b) {return ((a*b)/GCD(a,b)); }
ll BMOD(ll a,ll b,ll m){if(b==0)return 1;ll x=BMOD(a,b/2,m);x=(x*x)%m;if(b%2==1)x=(x*a)%m;return x; }
ll POW(ll a,ll b){if(b==0)return 1;ll x=POW(a,b/2);x=(x*x);if(b%2==1)x=(x*a);return x; }
ll MINV(ll a) { return BMOD(a,MD-2,MD); }
ull next_popcount(ull a) { ull b=(a&-a); ull c=a+b; return ((((c^a)>>2)/b)|c); }

struct pt
{
	int x,y;
};
struct pt2
{
	int x1,x2,y1,y2;
};
struct pt3
{
	int x,y,t;
};
//bool cmp(pair < int , int > a, pair < int, int > b){ return a.second < b.second;}
int m,n,d[105][105],c[105][105];
char a[105][105];
pt s,g,t[6][10005];
pt2 lsr[5][10005][5];
bool check(int x, int y, int t)
{
    int i,k,p,f=1;
    t=t%4;
    for(i=0;i<=3;i++)
    {
        p=(t+i)%4;
        for(k=1;k<=lsr[i][0][0].x1;k++)
        {
        if(x>=lsr[i][k][p].x1&&x<=lsr[i][k][p].x2&&y>=lsr[i][k][p].y1&&y<=lsr[i][k][p].y2) f=0;
        }
        //cout<<t<<" "<<p<<endl;
        //cout<<lsr[i][p].x1<<" "<<x<<" "<<lsr[i][p].x2<<" "<<lsr[i][p].y1<<" "<<y<<" "<<lsr[i][p].y2<<endl;
    }
    return f;
}
bool valid(int x, int y)
{
    if(x>=0&&x<m&&y>=0&&y<n&&a[x][y]!='#'&&a[x][y]!='<'&&a[x][y]!='>'&&a[x][y]!='^'&&a[x][y]!='v') return 1;
    else return false;
}
void bfs(int x, int y, int t)
{
    pt3 e;
    queue<pt3>q;
    d[x][y]=0;
    e.x=x,e.y=y; e.t=t;
    q.push(e);
    while(q.empty()!=true)
    {
        pt3 f;
        f=q.front(); q.pop();
        x=f.x; y=f.y; t=f.t;
        //cout<<x<<" "<<y<<" "<<t<<" "<<w<<" "<<d[x][y] <<endl;
        if(x==g.x&&y==g.y) return;

        e.x=x+1; e.y=y; e.t=t+1;
        if(valid(e.x,e.y)&&check(e.x,e.y,e.t)&&c[e.x][e.y]<=5)
        {
            c[e.x][e.y]++;
            //d[e.x][e.y]=d[x][y]+1;
            if(d[e.x][e.y]==0) d[e.x][e.y]=e.t;
            q.push(e);
        }

        e.x=x-1; e.y=y; e.t=t+1;
        if(valid(e.x,e.y)&&check(e.x,e.y,e.t)&&c[e.x][e.y]<=5)
        {
            c[e.x][e.y]++;
            //d[e.x][e.y]=d[x][y]+1;
            if(d[e.x][e.y]==0) d[e.x][e.y]=e.t;
            q.push(e);
        }

        e.x=x; e.y=y+1; e.t=t+1;
        if(valid(e.x,e.y)&&check(e.x,e.y,e.t)&&c[e.x][e.y]<=5)
        {
            c[e.x][e.y]++;
            //d[e.x][e.y]=d[x][y]+1;
            if(d[e.x][e.y]==0) d[e.x][e.y]=e.t;
            q.push(e);
        }

        e.x=x; e.y=y-1; e.t=t+1;
        if(valid(e.x,e.y)&&check(e.x,e.y,e.t)&&c[e.x][e.y]<=5)
        {
            //d[e.x][e.y]=d[x][y]+1;
            if(d[e.x][e.y]==0) d[e.x][e.y]=e.t;
            q.push(e);
        }
    }
}
int main()
{
    //ip;
    //op;
	int i,j,k,T,K,p,q,a1,a2,a3,a4;
	cin>>T;
	for(K=1;K<=T;K++)
	{
	    CLR(a); SET(t); CLR(lsr); CLR(d); CLR(c);
	    scanf("%d %d",&m,&n);
	    //cout<<m<<" "<<n<<endl;
	    getchar();
	    for(i=0;i<m;i++)
	    {
	        scanf("%s",a[i]);
	        //cout<<a[i]<<endl;
	    }
	    a1=0; a2=0; a3=0; a4=0;
	    for(i=0;i<m;i++)
	    {
	        for(j=0;j<n;j++)
	        {
	            if(a[i][j]=='S') { s.x=i; s.y=j; }
	            else if(a[i][j]=='G') { g.x=i; g.y=j; }
	            else if(a[i][j]=='<') { t[0][0].x=++a1; t[0][a1].x=i; t[0][a1].y=j; }
	            else if(a[i][j]=='^') { t[1][0].x=++a2; t[1][a2].x=i; t[1][a2].y=j; }
	            else if(a[i][j]=='>') { t[2][0].x=++a3; t[2][a3].x=i; t[2][a3].y=j; }
	            else if(a[i][j]=='v') { t[3][0].x=++a4; t[3][a4].x=i; t[3][a4].y=j; }
	        }
	    }
	    //cout<<s.x<<" "<<s.y<<"  "<<g.x<<" "<<g.y<<endl;
	    for(j=0;j<4;j++)
	    {
	        lsr[j][0][0].x1=t[j][0].x;
	        for(k=1;k<=t[j][0].x;k++)
	        {
                p=t[j][k].x; q=t[j][k].y;
                if(p==-1&&q==-1) continue;
                //cout<<p<<" "<<q<<endl;
                lsr[j][k][0].x1=p; lsr[j][k][0].x2=p; lsr[j][k][0].y2=q-1;
                for(i=q-1;i>=0;) if(a[p][i]!='#'&&a[p][i]!='<'&&a[p][i]!='>'&&a[p][i]!='^'&&a[p][i]!='v') i--; else break;
                lsr[j][k][0].y1=i+1;

                lsr[j][k][1].y1=q; lsr[j][k][1].y2=q; lsr[j][k][1].x2=p-1;
                for(i=p-1;i>=0;) if(a[i][q]!='#'&&a[i][q]!='<'&&a[i][q]!='>'&&a[i][q]!='^'&&a[i][q]!='v') i--; else break;
                lsr[j][k][1].x1=i+1;

                lsr[j][k][2].x1=p; lsr[j][k][2].x2=p; lsr[j][k][2].y1=q+1;
                for(i=q+1;i<=n;) if(a[p][i]!='#'&&a[p][i]!='<'&&a[p][i]!='>'&&a[p][i]!='^'&&a[p][i]!='v') i++; else break;
                lsr[j][k][2].y2=i-1;

                lsr[j][k][3].y1=q; lsr[j][k][3].y2=q; lsr[j][k][3].x1=p+1;
                for(i=p+1;i<=m;) if(a[i][q]!='#'&&a[i][q]!='<'&&a[i][q]!='>'&&a[i][q]!='^'&&a[i][q]!='v') i++; else break;
                lsr[j][k][3].x2=i-1;
	        }
	    }
	    /*
	    k=1;
	    cout<<lsr[k][0].x1<<" "<<lsr[k][0].x2<<" "<<lsr[k][0].y1<<" "<<lsr[k][0].y2<<endl;
	    cout<<lsr[k][1].x1<<" "<<lsr[k][1].x2<<" "<<lsr[k][1].y1<<" "<<lsr[k][1].y2<<endl;
	    cout<<lsr[k][2].x1<<" "<<lsr[k][2].x2<<" "<<lsr[k][2].y1<<" "<<lsr[k][2].y2<<endl;
	    cout<<lsr[k][3].x1<<" "<<lsr[k][3].x2<<" "<<lsr[k][3].y1<<" "<<lsr[k][3].y2<<endl;
	    //*/
	    //cout<<"ok"<<endl;
	    bfs(s.x,s.y,0);
	    //cout<<"ok"<<endl;
//	    for(i=0;i<m;i++)
//	    {
//	        for(j=0;j<n;j++) cout<<d[i][j]<<" ";
//	        cout<<endl;
//	    }
	    if(d[g.x][g.y]==0) printf("Case #%d: impossible\n",K);
	    else printf("Case #%d: %d\n",K,d[g.x][g.y]);

	}
	return 0;
}
