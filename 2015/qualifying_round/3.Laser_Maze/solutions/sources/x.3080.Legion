#include <bits/stdc++.h>

using namespace std;

struct obj
{
    int x;
    int y;
    int cond;
    int step;
};


int main()
{

    freopen("in.txt", "r", stdin);
    freopen("out.txt","w",stdout);
    cin.tie(0);
    int T;
    cin >> T;
    for(int i=0; i<T; i++)
    {
        int ans = 1e9;
        int n, m;
        cin >> n >> m;
        char c;
        vector<vector<int> > maz(n,vector<int> (m,0));
        vector<vector<vector<int> > > used(4,vector<vector<int> >(n,vector<int>(m, 0)));
        int xs,ys;
        for(int i=0; i<n; i++)
        {
            string s;
            cin >> s;
            // cout << s << endl;
            for(int j=0; j<m; j++)
            {
                if(s[j] == '.')
                    maz[i][j] = 4;
                if(s[j] == '#')
                    maz[i][j] = 5;
                if(s[j] == '^')
                    maz[i][j] = 0;
                if(s[j] == '>')
                    maz[i][j] = 1;
                if(s[j] == 'v')
                    maz[i][j] = 2;
                if(s[j] == '<')
                    maz[i][j] = 3;
                if(s[j] == 'S')
                {
                    xs = j, ys = i, maz[i][j] = 7;
                }
                if(s[j] == 'G')
                    maz[i][j] = 6;
            }
        }

        deque<obj> d;
        obj temp1;
        temp1.x = xs, temp1.y = ys, temp1.cond = 0, temp1.step = 0;
        d.push_back(temp1);

        q:
        while(!d.empty())
        {
            int x = d.front().x;
            int y = d.front().y;
            int cond = d.front().cond;
            int step = d.front().step;
            //cout << x << " " << y << " " << cond << " " << step << endl;
            d.pop_front();
              if(used[cond][y][x])
                continue;
               used[cond][y][x] = 1;
            if(maz[y][x] == 5 || maz[y][x] < 4)
                goto q;

            if(step > 0){
            for(int j = y-1; j >= 0; j--){
                if(maz[j][x]<4 && (maz[j][x] + cond)%4 == 2)
                    goto q;
            if(maz[j][x]<4 && (maz[j][x] + cond)%4 != 2)
                break;
            if(maz[j][x] == 5)
                break;
            }

            for(int j = y+1; j < n; j++){
                if(maz[j][x]<4 && (maz[j][x] + cond)%4 == 0)
                    goto q;
            if(maz[j][x]<4 && (maz[j][x] + cond)%4 != 0)
                break;
            if(maz[j][x] == 5)
                break;
            }

            for(int j = x-1; j >= 0; j--){
                if(maz[y][j]<4 && (maz[y][j] + cond)%4 == 1)
                    goto q;
            if(maz[y][j]<4 && (maz[y][j] + cond)%4 != 1)
                break;
            if(maz[y][j] == 5)
                break;
            }

            for(int j = x+1; j < m; j++){
                if(maz[y][j]<4 && (maz[y][j] + cond)%4 == 3)
                    goto q;
            if(maz[y][j]<4 && (maz[y][j] + cond)%4 != 3)
                break;
            if(maz[y][j] == 5)
                break;
            }
            }

            if(maz[y][x] == 6)
            {
                ans = min(ans, step);
                goto q;
            }

            if(x < m-1 && used[(cond + 1)%4][y][x + 1] == 0)
            {
                obj temp;
                temp.x = x + 1;
                temp.y = y;
                temp.cond = (cond + 1)%4;
                temp.step = step + 1;
                d.push_back(temp);
            }

            if(x > 0 && used[(cond + 1)%4][y][x - 1] == 0)
            {
                obj temp;
                temp.x = x - 1;
                temp.y = y;
                temp.cond = (cond + 1)%4;
                temp.step = step + 1;
                d.push_back(temp);
            }

            if(y < n-1 && used[(cond + 1)%4][y + 1][x] == 0)
            {
                obj temp;
                temp.x = x;
                temp.y = y + 1;
                temp.cond = (cond + 1)%4;
                temp.step = step + 1;
                d.push_back(temp);
            }

            if(y > 0 && used[(cond + 1)%4][y - 1][x] == 0)
            {
                obj temp;
                temp.x = x;
                temp.y = y - 1;
                temp.cond = (cond + 1)%4;
                temp.step = step + 1;
                d.push_back(temp);
            }

        }
        if(ans < 1e11)
        cout << "Case #" << i + 1 << ": " << ans << '\n';
        else
          cout << "Case #" << i + 1 << ": " << "impossible" << '\n';

    }
}
