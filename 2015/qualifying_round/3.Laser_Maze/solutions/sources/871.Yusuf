#include <bits/stdc++.h>
using namespace std;
struct laser{int i,j;char d;};
int n,m,si,sj,gi,gj;
char g[105][105];
bool stat[4][105][105],vis[4][105][105];
int di[4]={-1,0,0,1};
int dj[4]={0,-1,1,0};
int main(){
//    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int T;
    cin>>T;
    for(int t=0;t<T;t++){
        cin>>n>>m;
        vector<laser>l;
        memset(stat,false,sizeof stat);
        memset(vis,false,sizeof vis);
        for(int i=0;i<n;i++){
            cin>>g[i];
            for(int j=0;j<m;j++){
                if(g[i][j]=='S')si=i,sj=j;
                else if(g[i][j]=='G')gi=i,gj=j;
                else if(g[i][j]=='>'||g[i][j]=='^'||g[i][j]=='<'||g[i][j]=='v')l.push_back((laser){i,j,g[i][j]});
                if(g[i][j]!='S'&&g[i][j]!='G'&&g[i][j]!='.')for(int k=0;k<4;k++)stat[k][i][j]=true;
            }
        }
        for(int i=0;i<4;i++){
            for(int j=0;j<l.size();j++){
                if(l[j].d=='>'){
                    for(int k=l[j].j+1;k<m;k++){
                        if(g[l[j].i][k]!='S'&&g[l[j].i][k]!='G'&&g[l[j].i][k]!='.')
                            break;
                        stat[i][l[j].i][k]=true;
                    }
                    l[j].d='v';
                }else if(l[j].d=='^'){
                    for(int k=l[j].i-1;k>=0;k--){
                        if(g[k][l[j].j]!='S'&&g[k][l[j].j]!='G'&&g[k][l[j].j]!='.')
                            break;
                        stat[i][k][l[j].j]=true;
                    }
                    l[j].d='>';
                }else if(l[j].d=='<'){
                    for(int k=l[j].j-1;k>=0;k--){
                        if(g[l[j].i][k]!='S'&&g[l[j].i][k]!='G'&&g[l[j].i][k]!='.')
                            break;
                        stat[i][l[j].i][k]=true;
                    }
                    l[j].d='^';
                }else if(l[j].d=='v'){
                    for(int k=l[j].i+1;k<n;k++){
                        if(g[k][l[j].j]!='S'&&g[k][l[j].j]!='G'&&g[k][l[j].j]!='.')
                            break;
                        stat[i][k][l[j].j]=true;
                    }
                    l[j].d='<';
                }
            }
            //for(int o=0;o<n;o++){for(int p=0;p<m;p++)cout<<stat[i][o][p]; cout<<endl;}
            //cout<<endl;
        }
        queue<pair<pair<int,int>,int> >q;
        q.push(make_pair(make_pair(si,sj),0));
        int d;
        vis[0][si][sj]=true;
        bool done=false;
        while(!q.empty()){
            int ti=q.front().first.first,tj=q.front().first.second,td=q.front().second;
            if(ti==gi&&tj==gj){
                done =true;
                d=td;
                break;
            }
            //cout<<ti<<" "<<tj<<" "<<td<<" :\n";
            q.pop();
            for(int i=0,tti,ttj;i<4;i++){
                tti=ti+di[i];ttj=tj+dj[i];
                if(tti>=0&&ttj>=0&&tti<n&&ttj<m&&!vis[(td+1)%4][tti][ttj]&&!stat[(td+1)%4][tti][ttj]){
                    vis[(td+1)%4][tti][ttj]=true;
                    //cout<<tti<<" "<<ttj<<endl;
                    q.push(make_pair(make_pair(tti,ttj),td+1));
                }
            }
        }
        if(done)
            cout<<"Case #"<<t+1<<": "<<d<<endl;
        else
            cout<<"Case #"<<t+1<<": "<<"impossible"<<endl;
    }
}
