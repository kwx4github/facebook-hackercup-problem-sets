#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
int n,m;
string s[110];
int f[110][110];
int F[110][110];
int px[] = {-1,0,1,0};
int py[] = {0,1,0,-1};
bool G[110][110][5];
int nx,ny;

void atk(int x,int y,int h,int board)
{
   while (0<x && x<=m && 0<y && y<=n)
   {
       if (s[x-1][y-1] == '#') break;
       G[x][y][board] = true;
       x+=px[h-1];
       y+=py[h-1];
   }
}

int main()
{
    freopen("FBHK.INP","r",stdin);
    freopen("FBHK.OUT","w",stdout);
    int ntest;
    cin>>ntest;
    for (int kk = 1; kk<=ntest; kk++)
    {
       cin>>m>>n;
       for (int i = 0; i<m; i++)
           cin>>s[i];
      // Init G
      memset(G,false,sizeof(G));
      memset(f,0x3f,sizeof(f));
      memset(F,0x3f,sizeof(F));
      for (int i = 0; i<=n+1; i++)
      for (int j = 0; j<4; j++)
      {
          G[0][i][j] = true;
          G[m+1][i][j] = true;
      }
      for (int i = 0; i<=m+1; i++)
      for (int j = 0; j<4; j++)
      {
          G[i][0][j] = true;
          G[i][n+1][j] = true;
      }
      for (int i = 0; i<m; i++)
      for (int j = 0; j<n; j++)
      {
          if (s[i][j] == '#')
          {
              G[i+1][j+1][0] = true;
              G[i+1][j+1][1] = true;
              G[i+1][j+1][2] = true;
              G[i+1][j+1][3] = true;
          }
          if (s[i][j] == '^')
          {
             atk(i+1,j+1,2,0);
             atk(i+1,j+1,3,1);
             atk(i+1,j+1,4,2);
             atk(i+1,j+1,1,3);
          }
          if (s[i][j] == '>')
          {
             atk(i+1,j+1,3,0);
             atk(i+1,j+1,4,1);
             atk(i+1,j+1,1,2);
             atk(i+1,j+1,2,3);
          }
          if (s[i][j] == 'v')
          {
             atk(i+1,j+1,4,0);
             atk(i+1,j+1,1,1);
             atk(i+1,j+1,2,2);
             atk(i+1,j+1,3,3);
          }
          if (s[i][j] == '<')
          {
             atk(i+1,j+1,1,0);
             atk(i+1,j+1,2,1);
             atk(i+1,j+1,3,2);
             atk(i+1,j+1,4,3);
          }
          if (s[i][j] == 'S')
             f[i + 1][j + 1] = 0;
          if (s[i][j] == 'G')
          {
              nx = i+1;
              ny = j+1;
          }
      }
    // Go

    for (int k = 1; k<=n*n; k++)
    {
        int kx = (k - 1)%4;
        for (int i = 1; i<=m; i++)
        for (int j = 1; j<=n; j++)
        {
            if (s[i-1][j-1] == '#') continue;
            if (s[i-1][j-1] == '^') continue;
            if (s[i-1][j-1] == 'v') continue;
            if (s[i-1][j-1] == '>') continue;
            if (s[i-1][j-1] == '<') continue;
            for (int h = 0; h<4; h++)
            {
                int u = px[h] + i;
                int v = py[h] + j;
                if (G[u][v][kx] == false)
                   {
                       F[u][v] = min(F[u][v],f[i][j]+1);
                   }
            }
        }
      if (F[nx][ny] < 1000000) break;
      for (int i = 1; i<=m; i++)
      for (int j = 1; j<=n; j++)
          f[i][j] = F[i][j];
       memset(F,0x3f,sizeof(F));
    }
    cout<<"Case #"<<kk<<" :";
     if (F[nx][ny] >= 1000000) cout<<"impossible\n";
     else
        cout<<F[nx][ny]<<"\n";
    }
    return 0;
}
