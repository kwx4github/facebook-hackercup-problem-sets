#include<stdio.h>
#include<string.h>
int N,M;
int T;
int D[5][101][101];
char A[5][101][101];
int Sx,Sy,Ex,Ey;
int X[4]={-1,0,1,0};
int Y[4]={0,1,0,-1};
bool lazer[300];
int type[300];
struct QUE
{
	int x,y,z;
}que[100001];
int head,tail;
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&T);
	int t;
	lazer['^']=lazer['>']=lazer['v']=lazer['<']=1;
	type['^']=0; type['>']=1; type['v']=2; type['<']=3;
	for(t=1;t<=T;t++)
	{
		memset(D,0,sizeof(D));
		memset(A,0,sizeof(A));
		scanf("%d %d",&N,&M);
		int i,j,k,x,y,z,xx,yy,zz;
		for(i=1;i<=N;i++)
		{
			scanf("%s",&A[4][i][1]);
			for(j=1;j<=M;j++)
			{
				if(A[4][i][j]=='S') Sx=i,Sy=j;
				if(A[4][i][j]=='G') Ex=i,Ey=j;
				for(k=0;k<4;k++)
				{
					A[k][i][j]=A[4][i][j];
				}
			}
		}
		int d;
		for(k=0;k<4;k++)
		{
			for(i=1;i<=N;i++)
			{
				for(j=1;j<=M;j++)
				{
					if(lazer[A[k][i][j]])
					{
						d=(type[A[k][i][j]]+k+1)%4;
						for(x=i+X[d],y=j+Y[d];1<=x&&x<=N&&1<=y&&y<=M;x+=X[d],y+=Y[d])
						{
							if(lazer[A[k][x][y]] || A[k][x][y]=='#') break;
							A[k][x][y]='#';
						}
						A[k][i][j]='#';
					}
				}
			}
		}
		head=tail=0;
		for(k=0;k<4;k++)
		{
			if(1<=Sx+X[k]&&Sx+X[k]<=N&&1<=Sy+Y[k]&&Sy+Y[k]<=M)
			{
				if(A[0][Sx+X[k]][Sy+Y[k]]=='#') continue;
				D[0][Sx+X[k]][Sy+Y[k]]=1;
				que[tail].z=0; que[tail].x=Sx+X[k]; que[tail++].y=Sy+Y[k];
			}
		}
		printf("Case #%d: ",t);
		bool flag=false;
		while(head!=tail)
		{
			x=que[head].x; y=que[head].y; z=que[head++].z;
			if(x==Ex&&y==Ey)
			{
				printf("%d\n",D[z][x][y]);
				flag=true;
				break;
			}
			zz=(z+1)%4;
			for(k=0;k<4;k++)
			{
				xx=x+X[k]; yy=y+Y[k];
				if(!(1<=xx&&xx<=N&&1<=yy&&yy<=M)) continue;
				if(A[zz][xx][yy]=='#') continue;
				if(D[zz][xx][yy]) continue;
				D[zz][xx][yy]=D[z][x][y]+1;
				que[tail].z=zz; que[tail].x=xx; que[tail++].y=yy;
			}
		}
		if(!flag) printf("impossible\n");
	}
}