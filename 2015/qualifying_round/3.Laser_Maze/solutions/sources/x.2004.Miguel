#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
using namespace std;
#define p(x) cerr<<#x<<":"<<x<<"\n"
#define f first
#define s second
#define in(x,y) (x>=0 && x<y)
#define mp make_pair
#define lim 101
int cs,c,i,j,gx,gy,n,m,x,y,z;
int D[lim][lim][5];
char A[lim][lim];
int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};
string dir="^>v<";
queue <pair<pair<int,int>,int> > Q;
void push(int x,int y,int z,int w)
{
  int i,x2,y2;
  if(!in(x,n) || !in(y,m))
    return;
  for(i=0;i<4;i++)
  {
    x2=x;
    y2=y;
    while(in(x2,n) && in(y2,m) && A[x2][y2]=='.')
    {
      x2+=dx[i];
      y2+=dy[i];
    }
    if(in(x2,n) && in(y2,m) && A[x2][y2]!='#')
      if((dir.find(A[x2][y2])+z+2)%4==i)
        break;
  }
  if(i==4 && D[x][y][z]==-1)
  {
    D[x][y][z]=w;
    Q.push(mp(mp(x,y),z));
  }
}
int main()
{
  scanf("%d",&cs);
  for(c=1;c<=cs;c++)
  {
    while(!Q.empty())
      Q.pop();
    memset(D,-1,sizeof D);
    scanf("%d%d",&n,&m);
    for(i=0;i<n;i++)
    {
      scanf("%s",A[i]);
      for(j=0;j<m;j++)
        if(A[i][j]=='S')
        {
          D[i][j][0]=0;
          Q.push(mp(mp(i,j),0));
          A[i][j]='.';
        }
        else if(A[i][j]=='G')
        {
          gx=i;
          gy=j;
          A[i][j]='.';
        }
    }
    while(!Q.empty())
    {
      x=Q.front().f.f;
      y=Q.front().f.s;
      z=Q.front().s;
      if(x==gx && y==gy)
        break;
      Q.pop();
      for(i=0;i<4;i++)
        push(x+dx[i],y+dy[i],(z+1)%4,D[x][y][z]+1);
    }
    printf("Case #%d: ",c);
    if(Q.empty())
      printf("impossible\n");
    else
      printf("%d\n",D[x][y][z]);
  }
	return 0;
}
