/*==================================================*\
 *  | Author: ziki
 *   | Created Time: 
 *    | File Name: 
 *     | Description: 
 *     \*==================================================*/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <utility>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <string.h>
 
#undef LOCAL
using namespace std;
using namespace rel_ops;
 
typedef long long int64;
typedef unsigned long long uint64;
const double pi=acos(-1.0);
const double eps=1e-11;
const int inf=0x7FFFFFFF;
template<class T> inline bool checkmin(T &a,T b){return b<a?a=b,1:0;}
template<class T> inline bool checkmax(T &a,T b){return b>a?a=b,1:0;}
template<class T> inline T sqr(T x){return x*x;}
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<PII> VII;
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
#define mem(a,b) memset(a, b, sizeof(a))
#define clr(a) memset(a, 0, sizeof(a))
#define rep(i,n) for(int i=0; i<n; i++)
#define repit(i,v) for(typeof(v.begin()) i=v.begin(); i!=v.end(); i++)
#define iter(v) typeof(v.begin())
#define ff first
#define ss second
#ifdef LOCAL
#define dbg(args...) printf(args); //##__VA_ARGS__
#define dout cout
#define out(x) (cout<<#x<<": "<<x<<endl)
template<class T>void show(T a, int n){for(int i=0; i<n; ++i) cout<<a[i]<<' '; cout<<endl;}
template<class T>void show(T a, int r, int l){for(int i=0; i<r; ++i)show(a[i],l);cout<<endl;}
#else
#define dbg(...)
#define dout if(true);else cout
#define out(...)
#define show(...)
#endif

char ch[111][111];
int dis[4][111][111], safe[4][111][111];

int key[300];
int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};
void init() {
	memset(key, -1, sizeof(key));
	key['^'] = 0;
	key['>'] = 1;
	key['v'] = 2;
	key['<'] = 3;
}
int n, m;
bool inc(int &x, int &y, int dir) {
	x += dx[dir], y += dy[dir];
	if (x < 0 || x >= n || y < 0 || y >= m ||
			key[ch[x][y]] >= 0 || ch[x][y] == '#') return false;
	out(x<<' '<<y<<' '<<n<<' '<<m);
	return true;
}

struct S {
	int x, y, s;
};
int main() {
	init();
	int N;
	cin >> N;
	rep(cas, N) {
		cin >> n >> m;
		rep(i, n) cin>>ch[i];
		memset(dis, 37, sizeof(dis));
		memset(safe, 1, sizeof(safe));
		queue<S> q;
		rep(i, n) rep(j, m) {
			int c = ch[i][j];
				out(i<<' '<<j<<' '<<c<<' '<<key[c]);
			if (key[c] >= 0) {
				out(i<<' '<<j);
				int d = key[c];
				for (int k = 0; k < 4; k++) {
					int tx = i, ty = j;
					while (inc(tx, ty, (d+k)&3)) {
						out(k<<' '<<tx<<' '<<ty);
						safe[k][tx][ty] = false;
					}
				}
			}
			if (c == 'S') {
				q.push(S{i, j, 0});
				dis[0][i][j] = 0;
			}
		}
		// rep(i, 4) show(safe[i], n, m);
		// rep(i, 4) show(dis[i], n, m);

		int ans = -1;
		while (!q.empty()) {
			S f = q.front(); q.pop();
			out(f.s << ' ' << f.x << ' ' << f.y);
			if (ch[f.x][f.y] == 'G') {
				ans = dis[f.s][f.x][f.y];
				break;
			}
			int state = (f.s + 1) & 3;
			for (int i = 0; i < 4; i++) {
				int x = f.x, y = f.y;
				if (inc(x, y, i)) {
					if (safe[state][x][y] && 
							checkmin(dis[state][x][y], dis[f.s][f.x][f.y]+1))
						q.push(S{x, y, state});
				}
			}
		}
		printf("Case #%d: ", cas+1);
		if (ans < 0) puts("impossible");
		else {
			printf("%d\n", ans);
		}
	}
	return 0;
}
