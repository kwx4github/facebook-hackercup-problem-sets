#include<iostream>
#include<cstdio>
#include<vector>
#include<iomanip>
#include<list>
#include<algorithm>
#include<map>
#include<cstring>

using namespace std;


typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;

const int maxN = 200;
int t , m , n ,stx , sty , lstx , lsty , rpt = 0;
bool mp[maxN][maxN][5];
bool  vis[maxN][maxN][5];
int ans , cur1;
bool b = 0;
int x[maxN * maxN * 4+ 200] , y[maxN * maxN * 4+ 200] , w[maxN * maxN * 4+ 200] , d[maxN * maxN * 4 + 200];

void add(int pos , int xx , int yy, int ww ,int dd)
{
  if(xx < n and yy < m and xx >=0 and yy >=0)
    {
      if(!vis[xx][yy][ww] and !mp[xx][yy][ww])
	{
	  if(xx == lstx and yy == lsty)
	    {
	      cout << "Case #" << rpt + 1<< ": " <<dd << endl;
	      ans = dd;
	      b = 1;
	      return;
	    } 
	  x[pos] = xx;
	  y[pos] = yy;
	  w[pos] = ww;
	  d[pos] = dd;
	  cur1 ++;
	  vis[xx][yy][ww] = 1;
	}
    } 
}

void solve()
{
  cur1 = ans = b = 0;
  vis[stx][sty][0] = 1;
  add(cur1 , stx, sty + 1 , 1 , 1);
  if(b){b=0;return;}
  add(cur1 , stx + 1, sty , 1 , 1);
  if(b){b=0;return;}
  add(cur1 , stx - 1, sty , 1 , 1);
  if(b){b=0;return;}
  add(cur1 , stx, sty - 1 , 1 , 1);
  if(b){b=0;return;}
  for(int i = 0; i < cur1; i++)
    {
      add(cur1 , x[i], y[i] + 1 , (w[i] + 1) % 4 , d[i] +1);
      if(b){b=0;return;}
      add(cur1 , x[i] + 1, y[i] , (w[i] + 1) % 4 , d[i] +1);
      if(b){b=0;return;}
      add(cur1 , x[i] - 1, y[i] , (w[i] + 1) % 4 , d[i] +1);
      if(b){b=0;return;}
      add(cur1 , x[i], y[i] - 1, (w[i] + 1) % 4 , d[i] +1);
      if(b){b=0;return;}  
    }
  cout << "Case #" << rpt + 1 << ": " <<"impossible" << endl;
}





int main()
{
  ios_base::sync_with_stdio(false);
  cin >>t;
  for(rpt = 0; rpt < t; rpt++)
    {
      cin >> n >> m;
      memset(mp , 0 , sizeof(mp));
      memset(vis , 0 , sizeof(vis));
      string s[maxN];
      for(int j = 0; j < n; j++) cin >> s[j];
      int cur = 0;
      int way = -1;
      for(int j = 0; j < n; j++)
	{
	  cur = 0;
	  for(int rep = 0; rep < m; rep++)
	    {
	      if(cur != 0) mp[j][rep][way] = 1;
	      if(s[j][rep] == 'S') stx = j , sty = rep;
	      else if(s[j][rep] == 'G') lstx = j , lsty = rep;
	      else if(s[j][rep] == '#' or s[j][rep] != '.') 
		{
		  cur = 0;
		  mp[j][rep][0] = 1;
		  mp[j][rep][1] = 1;
		  mp[j][rep][2] = 1;
		  mp[j][rep][3] = 1;
		}
	      if(s[j][rep] == '>') cur = 1 , way = 0;
	      else if (s[j][rep] == '^') cur = 1 , way = 1;
	      else if (s[j][rep] == '<') cur = 1 , way = 2;
	      else if (s[j][rep] == 'v') cur = 1, way = 3; 
	      //cout << cur << ' ' << way <<' ' << j << ' ' << rep<< endl;
	    }
	}
      for(int j = 0; j < n; j++)
	{
	  cur = 0;
	  for(int rep = m - 1; rep >= 0; rep--)
	    {
	      if(cur != 0) mp[j][rep][way] = 1;
	      if(s[j][rep] == 'S') stx = j , sty = rep;
	      else if(s[j][rep] == 'G') lstx = j , lsty = rep;
	      else if(s[j][rep] == '#' or s[j][rep] != '.') 
		{
		  cur = 0;
		  mp[j][rep][0] = 1;
		  mp[j][rep][1] = 1;
		  mp[j][rep][2] = 1;
		  mp[j][rep][3] = 1;
		}
	      if(s[j][rep] == '<') cur = 1 , way = 0;
	      else if (s[j][rep] == 'v') cur = 1 , way = 1;
	      else if (s[j][rep] == '>') cur = 1 , way = 2;
	      else if (s[j][rep] == '^') cur = 1, way = 3; 
	      // cout << cur << ' ' << way <<' ' << j << ' ' << rep<< endl;
	    }  
	}
      for(int rep = 0; rep < m; rep++)
	{
	  cur = 0;
	  for(int j = 0; j < n; j++)
	    {
	      if(cur != 0) mp[j][rep][way] = 1;
	      if(s[j][rep] == 'S') stx = j , sty = rep;
	      else if(s[j][rep] == 'G') lstx = j , lsty = rep;
	      else if(s[j][rep] == '#' or s[j][rep] != '.') 
		{
		  cur = 0;
		  mp[j][rep][0] = 1;
		  mp[j][rep][1] = 1;
		  mp[j][rep][2] = 1;
		  mp[j][rep][3] = 1;
		}
	      if(s[j][rep] == 'v') cur = 1 , way = 0;
	      else if (s[j][rep] == '>') cur = 1 , way = 1;
	      else if (s[j][rep] == '^') cur = 1 , way = 2;
	      else if (s[j][rep] == '<') cur = 1, way = 3; 
	      //cout << cur << ' ' << way << ' ' <<  j << ' ' << rep <<endl;
	    }  
	}
      for(int rep = 0; rep < m; rep++)
	{
	  cur = 0;
	  for(int j = n - 1; j >= 0; j--)
	    {
	      if(cur != 0) mp[j][rep][way] = 1;
	      if(s[j][rep] == 'S') stx = j , sty = rep;
	      else if(s[j][rep] == 'G') lstx = j , lsty = rep;
	      else if(s[j][rep] == '#' or s[j][rep] != '.') 
		{
		  cur = 0;
		  mp[j][rep][0] = 1;
		  mp[j][rep][1] = 1;
		  mp[j][rep][2] = 1;
		  mp[j][rep][3] = 1;
		}
	      if(s[j][rep] == '^') cur = 1 , way = 0;
	      else if (s[j][rep] == '<') cur = 1 , way = 1;
	      else if (s[j][rep] == 'v') cur = 1 , way = 2;
	      else if (s[j][rep] == '>') cur = 1, way = 3; 
	      //     cout << cur << ' ' << way<< ' ' << j << ' ' << rep << endl;
	  }  
	}
      solve();
    }

  return 0;
}
