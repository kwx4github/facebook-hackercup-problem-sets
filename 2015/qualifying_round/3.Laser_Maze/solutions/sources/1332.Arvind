#include<bits/stdc++.h>

// Isme kya hai ;)

using namespace std;

#define TRACE

#ifdef TRACE
    #define trace1(x)                cerr << #x << ": " << x << endl;
    #define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
    #define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
    #define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
    #define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
    #define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

    #define trace1(x)
    #define trace2(x, y)
    #define trace3(x, y, z)
    #define trace4(a, b, c, d)
    #define trace5(a, b, c, d, e)
    #define trace6(a, b, c, d, e, f)

#endif

#define ull unsigned long long
#define ll long long
#define Max(x,y) ((x)>(y)?(x):(y))
#define Min(x,y) ((x)<(y)?(x):(y))
#define Sl(x) scanf("%lld",&x)
#define Su(x) scanf("%llu",&x)
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define S(x) scanf("%d",&x)
#define I(x) cin>>x
#define IS(x) getline(cin,x)
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mii map<int,int>
#define pps pair<ll,pll>
#define ppi pair<pii,int>
#define ppf pair<pll,ll>
#define psi pair<string,int>
#define pis pair<int,string>
#define fr first
#define se second
#define p(x) cout<<(x)
#define MOD 1000000007
#define eps 1e-7
#define V(x) vector<x>
#define pb push_back
#define mem(x,i) memset(x,i,sizeof(x))
#define fori(i,s,n) for(int i=(s);i<(n);i++)
#define ford(i,s,n) for(int i=(n)-1;i>=(s);--i)
#define INF 1000000000
#define debug(i,st,arr) fori(i,0,st){cout<<arr[i]<<" ";}cout<<endl;
#define forci(i,sw) for((i)=(sw).begin();(i)!=(sw).end();(i)++)
#define forcd(i,sw) for((i)=(sw).rbegin();(i)!=(sw).rend();(i)++)

int abs(int x) {if(x < 0) return -x; return x;}

int addmod(int v1, int v2) {
    int v3 = v1+v2;
    if(v3 >= MOD) v3 -= MOD;
    return v3;
}

int cc[100];
int dir[] = {'^', '>', 'v', '<'};
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};
char c[101][101];
int gone[101][101][4], vis[101][101][4], dp[101][101][4];
int srt, en;
int n, m;

bool check(int x, int y, int t)
{
    if(x < 0 || y < 0 || x >= n || y >= m || c[x][y] != '.' ) return false;
    return true;
}

bool check2(int x, int y, int t)
{
    if(x < 0 || y < 0 || x >= n || y >= m || c[x][y] != '.'  || vis[x][y][t] == 1) return false;
    return true;
}

void go(int x, int y)
{
    int pos = -1;

    fori(i,0,4) {
        if(c[x][y] == dir[i]) pos = i;
    }
    fori(i,0,4) {
        pos++;
        pos %= 4;
        int xx, yy;
        xx = x + dx[pos];
        yy = y + dy[pos];
        while(check(xx,yy,i)) {
            vis[xx][yy][i] = 1;
            xx += dx[pos];
            yy += dy[pos];
        }
    }
}

int dfs(int x, int y, int t)
{
    queue<ppi> q;
    fori(i,0,4) {
        if(check2(x+dx[i], y+dy[i],t)) {
            q.push(ppi(pii(x+dx[i], y+dy[i]),0));
            gone[x+dx[i]][y+dy[i]][t] = 1;
        }
    }

    while(!q.empty()) {
        ppi pp = q.front();
        q.pop();
        int x, y, t;
        x = pp.fr.fr;
        y = pp.fr.se;
        t = pp.se;
        fori(i,0,4) {
            if(check2(x+dx[i], y+dy[i], (t+1)%4) && !gone[x+dx[i]][y+dy[i]][(t+1)%4]) {
                q.push(ppi(pii(x+dx[i], y+dy[i]),(t+1)%4));
                gone[x+dx[i]][y+dy[i]][(t+1)%4] = gone[x][y][t] + 1;
            }
        }
    }
    int ans = INF;

    fori(i,0,4) {
        if(gone[en/m][en%m][i]) ans = min(ans, gone[en/m][en%m][i]);
    }
    return ans;
}

int main()
{
    freopen("inputt.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int t;

    S(t);
    int cs = 0;
    while(t--) {
        S(n), S(m);
        cs++;
        fori(i,0,n) {
            fori(j,0,m) {
                I(c[i][j]);
            //    cout << c[i][j];
            }
         //   cout << endl;
        }
        fori(i,0,n) fori(j,0,m) {
            fori(l,0,4) dp[i][j][l] = vis[i][j][l] = gone[i][j][l] = 0;
            if(c[i][j] == 'S') {
                c[i][j] = '.';
                srt = i*m + j;
            }
            if(c[i][j] == 'G') {
                c[i][j] = '.';
                en = i*m + j;
            }
        }
        cout << "Case #" << cs << ": ";
        fori(i,0,n) fori(j,0,m) {
            if(c[i][j] == '^' || c[i][j] == '<' || c[i][j] == '>' || c[i][j] == 'v') {
                go(i,j);
            }
        }
        int ans = dfs(srt/m, srt%m, 0);
        if(ans == INF) {
            cout << "impossible" << endl;
        }
        else {
            cout << ans << endl;
        }
    }
    return 0;
}


/*
v#....#v.....#....#^#
...#..#.#..v....^....
...#......#....#..#>.
....#...<..........v.
.#v.....#^S#....###..
.....#...............
....................#
.#.......>...#..#.G<.
#...#....#.##.......#
...v..........<#..^..
..#^...>.###.........
..#......#....#...##.
..........#.....#....
..............#.#..#.
..##.##.#...v........
..#..^.#....##.#.....
###..#.........^#....
.##.##..<<........#..
....#^.###........>..
....#..<....##..v....
.............#......#
#.##......#.....#....
........#....#....#..
#.............#..##..
v#......#.>.....#...#
*/

