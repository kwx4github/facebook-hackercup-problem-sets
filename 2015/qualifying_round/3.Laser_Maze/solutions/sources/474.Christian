#include<queue>
#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cstdio>
using namespace std;
struct paso
{
	int f, s;
	paso(int f = 0, int s = 0):f(f),s(s){};
	bool operator != (const paso &t){return(f!=t.f || s!=t.s);}
	bool operator == (const paso &t){return(f==t.f && s==t.s);}
};

queue<paso> Q;
int t, m, n, p;
char mapa[101][102];
bool v[101][102][4];
paso c_paso(-3,-3), act;
int dir[4][2] = {{0,1},{1,0},{0,-1},{-1,0}};
string l = "<^>v";

bool posible(int x1, int y1)
{
	for(int i = 0; i < 4; i++)
	{
		int x = x1 + dir[i][0], y = y1 + dir[i][1];
		while(x >= 0 && y >= 0 && x < m && y < n)
		{
			if(mapa[x][y] == l[(i+4-(p+1)%4)%4]) return false;
			if(mapa[x][y] != '.' && mapa[x][y] != 'G') break;
			x += dir[i][0];
			y += dir[i][1];
		}
	}
	return true;
}

void bfs()
{
	while(!Q.empty())
	{
		act = Q.front(); Q.pop();
		if(act == c_paso){p++; if(!Q.empty()) Q.push(c_paso);}
		if(mapa[act.f][act.s] == 'G') return;
		for(int r = 0; r < 4; r++)
		{
			int i = act.f + dir[r][0], j = act.s + dir[r][1];
			if(i >= 0 && i < m && j >= 0 && j < n && (mapa[i][j] == '.' || mapa[i][j] == 'G'))
			{
				if(!v[i][j][(p+1)%4] && posible(i,j))
				{
					Q.push(paso(i,j));
					v[i][j][(p+1)%4] = true;
				}
			}
		}
	}
}

int main()
{
	//freopen("laser_maze.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	cin >> t;
	for(int k = 1; k <= t; k++)
	{
		cin >> m >> n;
		p = 0;
		memset(v,0,sizeof(v));
		while(!Q.empty()) Q.pop();
		for(int i = 0; i < m; i++){cin >> mapa[i];}
		for(int i = 0; i < m; i++)
		{
			for(int j = 0; j < n; j++)
			{
				if(mapa[i][j] == 'S')
				{
					Q.push(paso(i,j));
					Q.push(c_paso);
					v[i][j][p%4] = true;
					mapa[i][j] = '.';
					break;
				}
			}
		}
		bfs();
		cout << "Case #" << k << ": ";
		if(act!=c_paso && mapa[act.f][act.s] == 'G') cout << p;
		else cout << "impossible";
		cout << endl;
	}
	//system("pause");
	return 0;
}
