#include <iostream>
using namespace std;

#define EAST 0
#define SOUTH 1
#define WEST 2
#define NORTH 3
#define D 4
#define N 100

const int step[D][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};

int main(){
	int T, n, m;
	char maze[N][N];
	bool map[D][N][N];
	int queue[D*N*N][3];
	cin >> T;
	for (int iTest = 1; iTest <= T; ++iTest){
		cin >> n >> m;
		char c;
		int Si, Sj, Gi, Gj;
		for (int i = 0; i < n; ++i){
			for (int j = 0; j < m; ++j){
				cin >> maze[i][j];
				switch (maze[i][j]){
					case '>': maze[i][j] = EAST; break;
					case 'v': maze[i][j] = SOUTH; break;
					case '<': maze[i][j] = WEST; break;
					case '^': maze[i][j] = NORTH; break;
					case 'S': Si = i; Sj = j; break;
					case 'G': Gi = i; Gj = j; break;
				}
			}
		}

		for (int t = 0; t < D; ++t){
			for (int i = 0; i < n; ++i){
				for (int j = 0; j < m; ++j){
					map[t][i][j] = (maze[i][j] == '.' || maze[i][j] == 'S' || maze[i][j] == 'G');
				}
			}
			for (int i = 0; i < n; ++i){
				for (int j = 0; j < m; ++j){
					if (maze[i][j] >= EAST && maze[i][j] <= NORTH){
						int di = (maze[i][j] + t) % D;
						int i2 = i + step[di][0];
						int j2 = j + step[di][1];
						while (i2 >= 0 && i2 <= n && j2 >= 0 && j2 <= m && 
							 	(maze[i2][j2] == '.' || maze[i2][j2] == 'S' || maze[i2][j2] == 'G')){
							map[t][i2][j2] = false;
							i2 += step[di][0];
							j2 += step[di][1];
						}
					}
				}
			}
		}

		int answer = -1;
		map[0][0][0] = false;
		queue[0][0] = Si;
		queue[0][1] = Sj;
		queue[0][2] = 0;
		for (int l = 0, r = 1; l < r; l++){
			int i = queue[l][0];
			int j = queue[l][1];
			int t = (queue[l][2] + 1) % D;
			if (i == Gi && j == Gj){
				answer = queue[l][2];
				break;
			}
			for (int di = 0; di < D; ++di){
				int i2 = i + step[di][0];
				int j2 = j + step[di][1];
				if (i2 >= 0 && i2 < n && j2 >= 0 && j2 < m && map[t][i2][j2]){
					map[t][i2][j2] = false;
					queue[r][0] = i2;
					queue[r][1] = j2;
					queue[r][2] = queue[l][2] + 1;
					r++;
				}
			}
		}
		if (answer >= 0){
			cout << "Case #" << iTest << ": " << answer << endl;
		}else{
			cout << "Case #" << iTest << ": " << "impossible" << endl;
		}
	}
	return 0;
}
