/*
	Coded By -> Piyush Adlakha
*/

#include<bits/stdc++.h>
using namespace std;
struct node {
	int i,j,mat;
};
void seti(char arr[110][110],char arr1[4][110][110],int i,int j,int plus_i,int plus_j,int mat,int n,int m) {
	
	while((i<n && i>=0) && (j<m && j>=0)) {
		i += plus_i;
		j += plus_j;
		if(arr[i][j] != '.') {
			return;
		}
		arr1[mat][i][j] = '#';
	}
	
}
void push (queue<node> &q,char arr1[4][110][110],int mat1[4][110][110],node n2,int n,int m) {
	
	node n1;
	int i,j,mat,prev_mat;
	i = n2.i;
	j = n2.j;
	prev_mat = n2.mat;
	mat = (n2.mat + 1)%4;
	
	if(i-1>=0 && arr1[mat][i-1][j] == '.' && mat1[mat][i-1][j] == -1) {
		n1.i = i-1;
		n1.j = j;
		n1.mat = mat;
		q.push(n1);
		mat1[mat][i-1][j] = mat1[prev_mat][i][j] + 1;
	}
	
	if(i+1<n && arr1[mat][i+1][j] == '.' && mat1[mat][i+1][j] == -1) {
		n1.i = i+1;
		n1.j = j;
		n1.mat = mat;
		q.push(n1);
		mat1[mat][i+1][j] = mat1[prev_mat][i][j] + 1;
	}
	
	if(j-1>=0 && arr1[mat][i][j-1] == '.' && mat1[mat][i][j-1] == -1) {
		n1.i = i;
		n1.j = j-1;
		n1.mat = mat;
		q.push(n1);
		mat1[mat][i][j-1] = mat1[prev_mat][i][j] + 1;
	}
	
	if(j+1<m && arr1[mat][i][j+1] == '.' && mat1[mat][i][j+1] == -1) {
		n1.i = i;
		n1.j = j+1;
		n1.mat = mat;
		q.push(n1);
		mat1[mat][i][j+1] = mat1[prev_mat][i][j] + 1;
	//	cout<<"aa: "<<mat1[prev_mat][i][j]<<" "<<mat1[mat][i][j+1]<<endl;
	}
	
}
int main()
{
	ifstream cin("input3.txt");
	ofstream cout("output3.txt");
	int t,mat[4][110][110],cas=1,n,m,si,sj,ei,ej;
	char arr[110][110];
	char arr1[4][110][110];
	cin>>t;
	while(cas<=t) {
		
		queue<node> q;
		node n1;
		
		cin>>n>>m;
		
		for (int i=0;i<n;i++) {
			for (int j=0;j<m;j++) {
				cin>>arr[i][j];
				mat[0][i][j] = mat[1][i][j] = mat[2][i][j] = mat[3][i][j] = -1;
				if(arr[i][j] == 'S') {
					si = i;
					sj = j;
					arr[i][j] = '.';
				} else if(arr[i][j] == 'G') {
					ei = i;
					ej = j;
					arr[i][j] = '.';
				}
				if(arr[i][j] == '.') {
					arr1[0][i][j] = arr1[1][i][j] = arr1[2][i][j] = arr1[3][i][j] = '.';
				} else {
					arr1[0][i][j] = arr1[1][i][j] = arr1[2][i][j] = arr1[3][i][j] = '#';
				}	
			}
		}
		
		for (int i=0;i<n;i++) {
			for (int j=0;j<m;j++) {
				
				if(arr[i][j] == '^') {
					seti(arr,arr1,i,j,-1,0,0,n,m);
					seti(arr,arr1,i,j,0,1,1,n,m);
					seti(arr,arr1,i,j,1,0,2,n,m);
					seti(arr,arr1,i,j,0,-1,3,n,m);
				} else if (arr[i][j] == '>') {
					seti(arr,arr1,i,j,0,1,0,n,m);
					seti(arr,arr1,i,j,1,0,1,n,m);
					seti(arr,arr1,i,j,0,-1,2,n,m);
					seti(arr,arr1,i,j,-1,0,3,n,m);
				} else if (arr[i][j] == 'v') {
					seti(arr,arr1,i,j,1,0,0,n,m);
					seti(arr,arr1,i,j,0,-1,1,n,m);
					seti(arr,arr1,i,j,-1,0,2,n,m);
					seti(arr,arr1,i,j,0,1,3,n,m);
				} else if (arr[i][j] == '<') {
					seti(arr,arr1,i,j,0,-1,0,n,m);
					seti(arr,arr1,i,j,-1,0,1,n,m);
					seti(arr,arr1,i,j,0,1,2,n,m);
					seti(arr,arr1,i,j,1,0,3,n,m);
				}
				
			}
		}
		/*for (int k=0;k<4;k++) {
			for (int i=0;i<n;i++) {
				for (int j=0;j<m;j++) {
					cout<<arr1[k][i][j]<<" ";
				}
				cout<<endl;
			}
			cout<<endl;
		}*/
		n1.i = si;
		n1.j = sj;
		
		n1.mat = 0;
		q.push(n1);
		mat[0][si][sj] = 0;
		
		while(!q.empty()) {
			node n2 = q.front();
			q.pop();
			//cout<<n2.mat<<" "<<n2.i<<" "<<n2.j<<" "<<mat[n2.mat][n2.i][n2.j]<<endl;
			if(mat[n2.mat][n2.i][n2.j] != -1) {
				push(q,arr1,mat,n2,n,m);
			}
		}
		int mini = INT_MAX;
		for (int i=0;i<4;i++) {
			if (mat[i][ei][ej] != -1) {
				mini = min(mini,mat[i][ei][ej]);
			}
		}
		cout<<"Case #"<<cas<<": ";
		if(mini == INT_MAX) {
			cout<<"impossible\n";
		} else {
			cout<<mini<<endl;
		}
		cas++;
	}
	return 0;
}

