#include<cstdio>
#include<iostream>
#include <algorithm>
using namespace std;

#define MAX 100
#define INF 10000000
int m,n,si,ti,sj,tj,d[4][MAX][MAX],b[4][MAX][MAX],v[4][MAX][MAX]; 
string s[MAX];
char l[]="^>v<^";
int ir[]={-1,0,1,0}, ic[]={0,1,0,-1};
struct State{ int i,j,d; State(int _i, int _j, int _d):i(_i),j(_j),d(_d){}; State(){State(0,0,0);} };
#define FI for (i=0; i<m; i++)
#define FIJ FI for (j=0; j<n; j++)
#define FIJK FIJ for (k=0; k<4; k++)
#define valid(ii,jj) (ii>=0 && jj>=0 && ii<m && jj<n && s[ii][jj]=='.')

State q[4*MAX*MAX];
int qh,qt;

void inputmaze(){
	int i,j,k,ii,jj;
	cin>>m>>n;
	FI cin>>s[i];
	FIJ if (s[i][j]=='S'){si=i;sj=j;s[i][j]='.';}
	FIJ if (s[i][j]=='G'){ti=i;tj=j;s[i][j]='.';}
	for (int p=0; p<4; p++){
		FIJ{ b[p][i][j]=1;}
		FIJ{ if (s[i][j]=='#') b[p][i][j]=0;}
		FIJK{ if (s[i][j]==l[k]) for (ii=i,jj=j; (ii==i&&jj==j)||valid(ii,jj) ;ii+=ir[k],jj+=ic[k]) b[p][ii][jj]=0; }
		FIJK{ if (s[i][j]==l[k]){ s[i][j]=l[k+1]; break;} }
	}
}
int push(int i, int j, int dd){
	if (!valid(i,j)) return 0;
	if (dd && b[dd%4][i][j]==0) return 0;
	if (dd>=d[dd%4][i][j]) return 0;
	if (v[dd%4][i][j]) return 0;
	d[dd%4][i][j]=dd;
	v[dd%4][i][j]=1;
	q[qh++]=State(i,j,dd);
}
int main(){
	int t,u,i,j,k,dd;
	cin>>t;
	for (u=0; u<t; u++){
		inputmaze();
		FIJK d[k][i][j]=INF;
		FIJK v[k][i][j]=0;
		qh=qt=0;
		push(si,sj,0);
		while(qh>qt){
			State ss(q[qt++]); 
			if (ss.i==ti&&ss.j==tj) break;
			for (k=0; k<4; k++) push(ss.i+ir[k],ss.j+ic[k],ss.d+1);
		}
		cout<<"Case #"<<(u+1)<<": ";
		dd=INF; for (k=0; k<4; k++) dd=min(dd,d[k][ti][tj]);
		if (dd==INF) cout<<"impossible"<<endl; else cout<<dd<<endl; 
	}
	return 0;
}

