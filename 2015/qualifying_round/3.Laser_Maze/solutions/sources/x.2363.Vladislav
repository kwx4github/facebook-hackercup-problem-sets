#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const int di[4] = {1, 0, -1, 0};
const int dj[4] = {0, -1, 0, 1};

int n;
int m;
string g[100];
int w[100][100];
int bad[100][100][4];
int was[100][100][4];
int d[100][100][4];
int qi[40000];
int qj[40000];
int qt[40000];

int main () {
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
	        cin >> n >> m;
	        for (int i = 0; i < n; i++) cin >> g[i];
	        int si, sj, fi, fj;
	        for (int i = 0; i < n; i++)
	        	for (int j = 0; j < m; j++)
	        		if (g[i][j] == 'S') {
	        			si = i;
	        			sj = j;
	        			g[i][j] = '.';
	        		} else
	        		if (g[i][j] == 'G') {
	        			fi = i;
	        			fj = j;
	        			g[i][j] = '.';
	        		} else
	        		if (g[i][j] != '#' && g[i][j] != '.') {
	        			w[i][j] = int (g[i][j] == '<') + 2 * int (g[i][j] == '^') + 3 * int (g[i][j] == '>');
	        			g[i][j] = '@';
	        		}
		for (int dt = 0; dt < 4; dt++) {
			for (int i = 0; i < n; i++)
				for (int j = 0; j < m; j++) {
					bad[i][j][dt] = 0;
					was[i][j][dt] = 0;
				}	
			for (int i = 0; i < n; i++)
				for (int j = 0; j < m; j++)
					if (g[i][j] == '@') {
						int ci = i, cj = j, ct = (dt + w[i][j]) % 4;
						while (true) {
							bad[ci][cj][dt] = 1;
							ci += di[ct];
							cj += dj[ct];
							if (ci < 0 || cj < 0 || ci >= n || cj >= m || g[ci][cj] != '.') break;
						}
					}
		}
		int l = 0, r = 1;
		qi[0] = si;
		qj[0] = sj;
		qt[0] = 0;
		was[si][sj][0] = 1;
		d[si][sj][0] = 0;
		int ans = -1;
		while (l < r) {
			int i = qi[l];
			int j = qj[l];
			int ct = qt[l];
			l++;
			if (i == fi && j == fj) {
				ans = d[i][j][ct];
				break;
			}
			for (int t = 0; t < 4; t++) {
				int ni = i + int (t == 0) - int (t == 1);
				int nj = j + int (t == 2) - int (t == 3);
				int nt = (ct + 1) % 4;
				if (ni < 0 || nj < 0 || ni >= n || nj >= m || bad[ni][nj][nt]) continue;
				if (!was[ni][nj][nt]) {
					was[ni][nj][nt] = 1;
					d[ni][nj][nt] = d[i][j][ct] + 1;
					qi[r] = ni;
					qj[r] = nj;
					qt[r] = nt;
					r++;
				}
			}
		}

		cout << "Case #" << it << ": ";
		if (ans == -1) cout << "impossible"; else cout << ans;
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
	}
	return 0;
}