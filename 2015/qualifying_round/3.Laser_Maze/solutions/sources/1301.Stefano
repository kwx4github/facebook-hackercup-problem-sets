#include <bits/stdc++.h>

using namespace std;

typedef long long     LL;
typedef pair<int,int> pii;

double PI  = acos(-1);
double EPS = 1e-7;
int INF    = 1000000000;
LL INFLL   = 1000000000000000000LL;

#define fi            first
#define se            second
#define mp            make_pair
#define pb            push_back

#define input(in)     freopen(in,"r",stdin)
#define output(out)   freopen(out,"w",stdout)

#define MIN(a, b)     (a) = min((a), (b))
#define MAX(a, b)     (a) = max((a), (b))

#define RESET(a, b)   memset(a,b,sizeof(a))
#define ALL(a)        (a).begin(), (a).end()
#define SIZE(a)       (int)a.size()
#define SORT(a)       sort(ALL(a))
#define UNIQUE(a)     (a).erase( unique( ALL(a) ), (a).end() )
#define FOR(a, b, c)  for (int (a)=(b); (a)<=(c); (a)++)
#define FORD(a, b, c) for (int (a)=(b); (a)>=(c); (a)--)
#define FORIT(a, b)   for (__typeof((b).begin()) a=(b).begin(); a!=(b).end(); a++)

int mx[8] = {-1,1,0,0,-1,-1,1,1};
int my[8] = {0,0,-1,1,-1,1,-1,1};

// ----- //

char x[4][105][105];
bool vs[4][105][105];

int main()
{
	int t;
	scanf("%d",&t);
	FOR(tc,1,t)
	{
		RESET(vs,0);
		int n,m;
		scanf("%d%d",&n,&m);
		pii st, gl;
		FOR(a,0,n-1)
		{
			getchar();
			FOR(b,0,m-1)
			{
				x[0][a][b] = getchar();
				if (x[0][a][b] == 'S') st = mp(a,b), x[0][a][b] = '.';
				if (x[0][a][b] == 'G') gl = mp(a,b), x[0][a][b] = '.';
		//		cout << x[0][a][b];
			}
		//	cout << endl;
		}
		//return 0;
		FOR(it,1,3)
		{
			FOR(a,0,n-1)
			{
				FOR(b,0,m-1)
				{
					if (x[it-1][a][b] == '>')
					{
						x[it][a][b] = 'v';
					}
					else if (x[it-1][a][b] == 'v')
					{
						x[it][a][b] = '<';
					}
					else if (x[it-1][a][b] == '<')
					{
						x[it][a][b] = '^';
					}
					else if (x[it-1][a][b] == '^')
					{
					//	cout << "masuk " << x[it-1][a][b] << endl;
						x[it][a][b] = '>';
					//	cout << "masuk2 " << x[it][a][b] << endl;
					}
					else
					{
						x[it][a][b] = x[it-1][a][b];
					}
					//cout << it << " " << a << " " << b << " " << x[it-1][a][b] << " " << x[it][a][b] << endl;
				}
				//cout << endl;
			}
		}
		FOR(it,0,3)
		{
			
			FOR(a,0,n-1)
			{
				FOR(b,0,m-1)
				{
					if (x[it][a][b] == '>')
					{
						for (int i = b+1;i < m && (x[it][a][i] == '.' || x[it][a][i] == 'x'); i++) x[it][a][i] = 'x';
					}
					if (x[it][a][b] == '<')
					{
						for (int i = b-1;i >= 0 && (x[it][a][i] == '.' || x[it][a][i] == 'x'); i--) x[it][a][i] = 'x';
					}
					if (x[it][a][b] == 'v')
					{
						for (int i = a+1;i < n && (x[it][i][b] == '.' || x[it][i][b] == 'x'); i++) x[it][i][b] = 'x';
					}
					if (x[it][a][b] == '^')
					{
						for (int i = a-1;i >= 0 && (x[it][i][b] == '.' || x[it][i][b] == 'x'); i--) x[it][i][b] = 'x';
					}
				}
			}
		}
		queue< pair<pii,pii> > q;
		q.push(mp(mp(0,0),st));
		vs[0][st.fi][st.se] = 1;
		int ans = -1;
		while(!q.empty())
		{
			int dist = q.front().fi.fi;
			int b = q.front().fi.se;
			pii pos = q.front().se;
			q.pop();
			if (pos == gl)
			{
				ans = dist;
				break;
			}
			FOR(a,0,3)
			{
				pii nxt = mp(pos.fi+mx[a],pos.se+my[a]);
				if (0 <= nxt.fi && nxt.fi < n && 0 <= nxt.se && nxt.se < m && !vs[(b+1)%4][nxt.fi][nxt.se] && x[(b+1)%4][nxt.fi][nxt.se] == '.')
				{
					vs[(b+1)%4][nxt.fi][nxt.se] = 1;
					q.push(mp(mp(dist+1,(b+1)%4),nxt));
				}
			}
		}
		if (ans == -1)
			printf("Case #%d: impossible\n",tc);
		else
			printf("Case #%d: %d\n",tc,ans);

	}
}
