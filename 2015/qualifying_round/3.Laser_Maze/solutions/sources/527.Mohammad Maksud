//#include<bits/stdc++.h>
#include<iostream>
#include<sstream>
#include<string>
#include<cstdlib>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<cctype>
#include<set>
#include<bitset>
#include<algorithm>
#include<list>
#include<utility>
#include<functional>
#include <deque>
#include <numeric>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <assert.h>



#include<cmath>
#include<math.h>

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<ctype.h>

using namespace std;

#define deb(a)      cerr<<"#"<<__LINE__<<" -> "<<#a<<"  "<<a<<endl;
#define popcount(a) (__builtin_popcountll(a))
#define SZ(a)       ((int)a.size())
#define fs           first
#define sc           second
#define pb          push
#define ll          long long
#define ld          long double
#define MP          make_pair
#define SS          stringstream
#define VS          vector<string>
#define VI          vector<int>
#define CON(a,b)  ((a).find(b)!=(a).end())
#define mem(a,b)    memset(a,b,sizeof(a))
#define memc(a,b)   memcpy(a,b,sizeof(b))
#define accu(a,b,c) accumulate((a),(b),(c))
#define fi(i,a,b)   for(i=a;i<b;i++)
#define fii(a,b)    for(i=a;i<b;i++)
#define fij(a,b)    for(j=a;j<b;j++)
#define fik(a,b)    for(k=a;k<b;k++)
#define fil(a,b)    for(l=a;l<b;l++)
#define ri(i,a)     for(i=0;i<a;i++)
#define rii(a)      for(i=0;i<a;i++)
#define rij(a)      for(j=0;j<a;j++)
#define rik(a)      for(k=0;k<a;k++)
#define ril(a)      for(l=0;l<a;l++)
#define fore(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)
#define ERR         (1e-7)
#define EQ(a,b)     (fabs((a)-(b))<ERR)
#define all(a)      (a).begin(),(a).end()
#define rall(a)      (a).rbegin(),(a).rend()
#define p2(a)       (1LL<<a)
#define EX(msk,a)   (msk&p2(a))




#define debug(a...)          {cout<<" #--> ";dbg,a; cout<<endl;}

struct debugger
{
    ///Collected from rudradevbasak
    template<typename T> debugger& operator , (const T v)
    {
        cout<<v<<" ";
        return *this;
    }
} dbg;


const double pi=acos(-1.0);
const double eps=1e-7;

template<class TT>TT sqr(TT a){return a*a;}
template<class TT>TT abs(TT a){if(a<0)  return -a;return a;}
typedef pair<int,int> pii;

const int N = 104;
int bo[4][N][N];
char in[N][N];
int n,m;
int di[]={0,1,0,-1};
int dj[]={1,0,-1,0};


int getSign(char c){
    if(c=='>')  return 0;
    if(c=='v')  return 1;
    if(c=='<')  return 2;
    if(c=='^')  return 3;
    return -1;
}

bool valid(int d,int r,int c)
{
    if(r<0 || c<0 || r>=n || c>=m ) return false;
    if(bo[d][r][c]==-3) return false;
    return true;
}

void go(int d,int x,int y,int dx,int dy)
{
    int i=1;
    int r = x+i*dx;
    int c = y+i*dy;
    while(valid(d,r,c))
    {
        bo[d][r][c]=-2;
        i++;
        r = x+i*dx;
        c = y+i*dy;
    }
}


int bfs(int si,int sj,int gi,int gj)
{
    //if(bo[0][si][sj]<-1)    return 0;
    queue<int>qi,qj,qd;
    bo[0][si][sj]=0;
    qd.pb(0);
    qi.pb(si);
    qj.pb(sj);

    while(!qd.empty())
    {
        int d = qd.front();qd.pop();
        int r = qi.front();qi.pop();
        int c = qj.front();qj.pop();
        int nd,nr,nc;
        nd = (d+1)%4;

        for(int i=0;i<4;i++)
        {
            nr = r+di[i];
            nc = c+dj[i];
            if(!valid(nd,nr,nc))    continue;
            if(bo[nd][nr][nc]!=-1) continue;
            bo[nd][nr][nc]=bo[d][r][c]+1;
            if(gi==nr && gj==nc)    return bo[nd][nr][nc];
            qd.pb(nd);
            qi.pb(nr);
            qj.pb(nc);
        }
    }
    return 0;
}

int main()
{
//    freopen("in.txt","r",stdin);
    freopen("laser_maze.txt","r",stdin);
    freopen("out.txt","w",stdout);

    int i,j,k,tks=1,ks=1,gi,gj,si,sj;

    scanf("%d",&tks);

    while(tks--)
    {
        scanf("%d%d",&n,&m);
        rii(n)
            scanf("%s",in[i]);

        memset(bo,-1,sizeof bo);


        rii(n)
            rij(m)
            {
                char c = in[i][j];
                if(c=='#' || c=='>' || c=='v' || c=='<' || c=='^')
                {
                    rik(4)
                        bo[k][i][j]=-3;
                }
                else if(c=='S') {si=i;sj=j;}
                else if(c=='G') {gi=i;gj=j;}
            }

         rii(n)
            rij(m)
            {
                char c = in[i][j];
                int dir=getSign(c);
                if(dir<0)   continue;
                rik(4)
                {
                    int cDir=(dir+k)%4;
                    go(k,i,j,di[cDir],dj[cDir]);
                }
            }

        int ans  = bfs(si,sj,gi,gj);


        if(ans) printf("Case #%d: %d\n",ks++,ans);
        else printf("Case #%d: impossible\n",ks++);
    }

    return 0;
}




