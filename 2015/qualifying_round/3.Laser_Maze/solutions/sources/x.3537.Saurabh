#include<iostream>
#include<cstdio>
#include<vector>

using namespace std;

class sample
{
    public:int x,y;
};
class laser
{
public:
    sample attack[4];
    char ch;
};
int m,n;
char a[102][102];
bool bomb[102][102][4];
int bfs(sample start)
{
    int ind=0;
    sample temp;
    vector <sample> q;
    vector <int> s;
    q.push_back(start);
    s.push_back(0);
    while(ind<s.size() && s.size()<10000001)
    {
        sample top=q[ind];
        temp.x=top.x-1,temp.y=top.y;
        if(temp.x>=0 && (a[temp.x][temp.y]=='.' || a[temp.x][temp.y]=='S' || a[temp.x][temp.y]=='G') && !bomb[temp.x][temp.y][(s[ind]+1)%4])
        {
            q.push_back(temp),s.push_back(s[ind]+1);
            if(a[temp.x][temp.y]=='G')
                break;
        }
        temp.x=top.x,temp.y=top.y+1;
        if(temp.y<n && (a[temp.x][temp.y]=='.' || a[temp.x][temp.y]=='S' || a[temp.x][temp.y]=='G') && !bomb[temp.x][temp.y][(s[ind]+1)%4])
        {
            q.push_back(temp),s.push_back(s[ind]+1);
            if(a[temp.x][temp.y]=='G')
                break;
        }
        temp.x=top.x+1,temp.y=top.y;
        if(temp.x<m && (a[temp.x][temp.y]=='.' || a[temp.x][temp.y]=='S' || a[temp.x][temp.y]=='G') && !bomb[temp.x][temp.y][(s[ind]+1)%4])
        {
            q.push_back(temp),s.push_back(s[ind]+1);
            if(a[temp.x][temp.y]=='G')
                break;
        }
        temp.x=top.x,temp.y=top.y-1;
        if(temp.y>=0 && (a[temp.x][temp.y]=='.' || a[temp.x][temp.y]=='S' || a[temp.x][temp.y]=='G') && !bomb[temp.x][temp.y][(s[ind]+1)%4])
        {
            q.push_back(temp),s.push_back(s[ind]+1);
            if(a[temp.x][temp.y]=='G')
                break;
        }
        ind++;
    }
    if(ind==s.size() || s.size()==1000001)
        return -1;
    return s[s.size()-1];
}
void make_bomb(vector <sample> &v)
{
    int i,j;
    for(i=0;i<v.size();i++)
    {
        if(a[v[i].x][v[i].y]=='^')
        {
            for(j=v[i].x-1;j>=0 && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j--)
                bomb[j][v[i].y][0]=true;
            for(j=v[i].y+1;j<n && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j++)
                bomb[v[i].x][j][1]=true;
            for(j=v[i].x+1;j<m && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j++)
                bomb[j][v[i].y][2]=true;
            for(j=v[i].y-1;j>=0 && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j--)
                bomb[v[i].x][j][3]=true;
        }
        else if(a[v[i].x][v[i].y]=='>')
        {
            for(j=v[i].x-1;j>=0 && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j--)
                bomb[j][v[i].y][3]=true;
            for(j=v[i].y+1;j<n && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j++)
                bomb[v[i].x][j][0]=true;
            for(j=v[i].x+1;j<m && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j++)
                bomb[j][v[i].y][1]=true;
            for(j=v[i].y-1;j>=0 && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j--)
                bomb[v[i].x][j][2]=true;
        }
        else if(a[v[i].x][v[i].y]=='v')
        {
            for(j=v[i].x-1;j>=0 && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j--)
                bomb[j][v[i].y][2]=true;
            for(j=v[i].y+1;j<n && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j++)
                bomb[v[i].x][j][3]=true;
            for(j=v[i].x+1;j<m && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j++)
                bomb[j][v[i].y][0]=true;
            for(j=v[i].y-1;j>=0 && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j--)
                bomb[v[i].x][j][1]=true;
        }
        else if(a[v[i].x][v[i].y]=='<')
        {
            for(j=v[i].x-1;j>=0 && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j--)
                bomb[j][v[i].y][1]=true;
            for(j=v[i].y+1;j<n && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j++)
                bomb[v[i].x][j][2]=true;
            for(j=v[i].x+1;j<m && (a[j][v[i].y]=='.' || a[j][v[i].y]=='S' || a[j][v[i].y]=='G');j++)
                bomb[j][v[i].y][3]=true;
            for(j=v[i].y-1;j>=0 && (a[v[i].x][j]=='.' || a[v[i].x][j]=='S' || a[v[i].x][j]=='G');j--)
                bomb[v[i].x][j][0]=true;
        }
    }
}
int main()
{
    int t;
    scanf("%d",&t);
    for(int cas=1;cas<=t;cas++)
    {
        int i,j;
        sample temp,start;
        vector <sample> v;
        scanf("%d %d",&m,&n);
        for(i=0;i<m;i++)
            for(j=0;j<n;j++)
                bomb[i][j][0]=bomb[i][j][1]=bomb[i][j][2]=bomb[i][j][3]=false;
        for(i=0;i<m;i++)
            scanf("%s",a[i]);
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                if(a[i][j]=='S')
                    start.x=i,start.y=j;
                else if(a[i][j]=='^' || a[i][j]=='<' || a[i][j]=='>' || a[i][j]=='v')
                    temp.x=i,temp.y=j,v.push_back(temp);
            }
        }
        make_bomb(v);
        int tem=bfs(start);
        if(tem==-1)
            printf("Case #%d: impossible\n",cas);
        else
            printf("Case #%d: %d\n",cas,tem);
    }

    return 0;
}
