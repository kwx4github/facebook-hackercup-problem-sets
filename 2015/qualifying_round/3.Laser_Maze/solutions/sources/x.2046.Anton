#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>
#include<stack>

using namespace std;

typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)			memset(a,b,sizeof a)
#define pb				push_back

int n,m;
string s[111];

int d[111][111][4];

int dx[]={1,0,-1,0};
int dy[]={0,-1,0,1};

bool can(int x,int y,int t){
	for(int i=x-1;i>=0;i--){
		int d = -1;
		if(s[i][y] == 'v') d=0;
		if(s[i][y] == '^') d=2;
		if(s[i][y] == '<') d=1;
		if(s[i][y] == '>') d=3;
		if(s[i][y] == '#') break;
		if(d==-1)continue;
		d+=t;
		d%=4;
		if(i<x && d==0) return false;
		if(i>x && d==2) return false;
	}
	for(int i=x+1;i<n;i++){
		int d = -1;
		if(s[i][y] == 'v') d=0;
		if(s[i][y] == '^') d=2;
		if(s[i][y] == '<') d=1;
		if(s[i][y] == '>') d=3;
		if(s[i][y] == '#') break;
		if(d==-1)continue;
		d+=t;
		d%=4;
		if(i<x && d==0) return false;
		if(i>x && d==2) return false;
	}
	for(int i=y-1;i>=0;i--){
		int d = -1;
		if(s[x][i] == 'v') d=0;
		if(s[x][i] == '^') d=2;
		if(s[x][i] == '<') d=1;
		if(s[x][i] == '>') d=3;
		if(s[x][i]=='#') break;
		if(d==-1)continue;
		d+=t;
		d%=4;
		if(i<y && d==3) return false;
		if(i>y && d==1) return false;
	}
	
	for(int i=y+1;i<m;i++){
		int d = -1;
		if(s[x][i] == 'v') d=0;
		if(s[x][i] == '^') d=2;
		if(s[x][i] == '<') d=1;
		if(s[x][i] == '>') d=3;
		if(s[x][i]=='#') break;
		if(d==-1)continue;
		d+=t;
		d%=4;
		if(i<y && d==3) return false;
		if(i>y && d==1) return false;
	}
	return true;
}

int go(int x,int y,int X,int Y){
	CL(d,-1);
	d[x][y][0]=0;
	queue<pii> q;
	q.push(make_pair(x*1000+y,0));
	while(!q.empty()){
		x=q.front().first/1000;
		y=q.front().first%1000;
		int t = q.front().second;
		q.pop();

		if(x==X && y==Y)return t;

		REP(i,4){
			int nx = x+dx[i];
			int ny = y+dy[i];
			if(nx>=0 && ny>=0 && nx<n && ny<m){
				if(s[nx][ny]=='.'){
					if(d[nx][ny][(t+1)%4]==-1){
						if(!can(nx,ny,(t+1)%4)) continue;
						d[nx][ny][(t+1)%4]=t+1;
						q.push(make_pair(nx*1000+ny,t+1));
					}
				}
			}
		}
	}
	return -1;
}

int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif

	int tc;
	cin>>tc;
	REP(TC,tc){
		cin>>n>>m;
		REP(i,n)cin>>s[i];
		int x=0,y=0,X=0,Y=0;
		REP(i,n)REP(j,m){
			if(s[i][j]=='S'){
				x=i,y=j;
				s[i][j]='.';
			}else if(s[i][j]=='G'){
				X=i,y=j;
				s[i][j]='.';
			}
		}
		int res = go(x,y,X,Y);
		printf("Case #%d: ",TC+1);
		if(res==-1) puts("impossible");
		else cout<<res<<endl;;
	}

#ifdef LocalHost
//	printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}