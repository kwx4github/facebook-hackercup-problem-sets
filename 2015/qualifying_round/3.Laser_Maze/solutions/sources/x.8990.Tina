#include<iostream>
#include<fstream>
#include<stdio.h>
using namespace std;

void aout(int map[102][102], int m, int n){
	int x, y;
	for (x = 1; x <= m; x++){
		for (y = 1; y <= n; y++){
			cout << map[x][y] << " ";
		}
		cout << endl;
	}
}

int mazerunner(int map[102][102], int step[102][102],int acc,int m,int n){
	bool d=false;
	int x, y, z, result;
	for (x = 1; x <= m; x++){
		for (y = 1; y <= n; y++){
			if (step[x][y] == acc){
				if (map[x + 1][y] == 0 || map[x + 1][y] == -1 || map[x + 1][y] == 10)
					step[x + 1][y] = acc + 1;
				if (map[x][y + 1] == 0 || map[x][y + 1] == -1 || map[x][y + 1] == 10)
					step[x][y + 1] = acc + 1;
				if (map[x - 1][y] == 0 || map[x - 1][y] == -1 || map[x - 1][y] == 10)
					step[x - 1][y] = acc + 1;
				if (map[x][y - 1] == 0 || map[x][y - 1] == -1 || map[x][y - 1] == 10)
					step[x][y - 1] = acc + 1;
			}
		}
	}
//	aout(map, m, n);
//	cout << endl;
//	aout(step, m, n);
//	cout << endl;
	for (x = 1; x <= m; x++){
		for (y = 1; y <= n; y++){
			if (map[x][y] >= 4 && map[x][y] <= 7){
				map[x][y] = (map[x][y] + 1) % 4 + 4;
				if (map[x][y] == 4){
					for (z = x + 1; map[z][y] == 0 || map[z][y] == 10 || map[z][y] == -1; z++){
						if (step[z][y] == acc + 1)
							step[z][y] = acc;
					}
				}
				if (map[x][y] == 5){
					for (z = y+1; map[x][z] == 0 || map[x][z] == 10 || map[x][z] == -1; z++){
						if (step[x][z] == acc + 1)
							step[x][z] = acc;
					}
				}
				if (map[x][y] == 6){
					for (z = x - 1; map[z][y] == 0 || map[z][y] == 10 || map[z][y] == -1; z--){
						if (step[z][y] == acc + 1)
							step[z][y] = acc;
					}
				}
				if (map[x][y] == 7){
					for (z = y - 1; map[x][z] == 0 || map[x][z] == 10 || map[x][z] == -1; z--){
						if (step[x][z] == acc + 1)
							step[x][z] = acc;
					}
				}
			}
		}
	}
//	aout(map, m, n);
//	cout << endl;
//	aout(step, m, n);
//	cout << endl;
	for (x = 1; x <= m; x++){
		for (y = 1; y <= n; y++){
			if (map[x][y] == 10 && step[x][y] == acc + 1)
				return acc + 1;
			if (step[x][y] == acc + 1)
				d = true;
		}
	}
//	aout(map, m, n);
//	cout << endl;
//	aout(step, m, n);
//	cout << endl;
	if (acc > 2000)
		return -1;
	result = mazerunner(map, step, acc + 1, m, n);
	if (d)
		return result;
	else
		return -1;
}

void main(){
	ifstream cin("laser_maze.txt");
	ofstream cout("laser_maze_output.txt");
	int x,y,map[102][102],step[102][102],m,n,result,i,j;
	char temp;
	cin >> x;
	for (y = 0; y < x; y++){
		cin >> m >> n;
		for (i = 1; i < m+1; i++){
			for (j = 1; j < n+1; j++){
				cin >> temp;
				if (temp == '.')
					map[i][j] = 0;
				else if (temp == '#')
					map[i][j] = 1;
				else if (temp == 'S'){
					map[i][j] = -1;
					step[i][j] = 0;
				}
				else if (temp == 'G')
					map[i][j] = 10;
				else if (temp == '^')
					map[i][j] = 4;
				else if (temp == '>')
					map[i][j] = 5;
				else if (temp == '<')
					map[i][j] = 7;
				else if (temp == 'v')
					map[i][j] = 6;
				if (step[i][j] != 0)
					step[i][j] = -1;
			}
		}
		cout << "Case#" << y + 1 << ": " ;
//		aout(map, m, n);
//		cout << endl;
//		aout(step, m, n);
//		cout << endl;
		result = mazerunner(map,step,0,m,n);
		if (result == -1)
			cout << "impossible" << endl;
		else cout << result << endl;
	}
}