#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
#include<queue>
using namespace std;

queue<int>q;

const int maxn=40010;
int dis[maxn],vis[maxn],is[110][110];
int can[4][110][110];

int dx[4]={0,1,0,-1};
int dy[4]={1,0,-1,0};

int bfs(int x,int y,int tx,int ty,int n,int m)
{
	int s,t,u,v,i,j;

	s=x*100+y;
	s=s*4;

	q.push(s);
	memset(dis,-1,sizeof(dis));
	memset(vis,0,sizeof(vis));
	vis[s]=1,dis[s]=0;

	int cur;
	while(!q.empty())
	{
		u=q.front();q.pop();
		vis[u]=0;
		cur=u&3;
		x=u/4/100,y=u/4%100;

		cur=(cur+1)&3;

		int xx,yy;
		for(i=0;i<4;i++)
		{
			xx=x+dx[i];
			yy=y+dy[i];
			if(xx<0||yy<0||xx>=n||yy>=m)
				continue;
			if(!can[cur][xx][yy])
				continue;

			v=xx*100+yy;
			v=v*4+cur;

			if(dis[v]<0||dis[v]>dis[u]+1)
			{
				dis[v]=dis[u]+1;
				if(!vis[v])
				{
					vis[v]=1;
					q.push(v);
				}
			}
		}
	}

	int ret=-1;

	for(i=0;i<4;i++)
	{
		v=tx*100+ty;
		v=v*4+i;
		if(dis[v]>=0)
		{
			if(ret<0||ret>dis[v])
				ret=dis[v];
		}
	}
	return ret;
}

char str[110][110];
int main()
{
	freopen("c.txt","r",stdin);
	freopen("c.ans","w",stdout);
	int t,n,m,i,j,k;
	int sx,sy,ex,ey;

	int ii=0;

	cin>>t;

	while(t--)
	{
		ii++;
		cin>>n>>m;

		for(i=0;i<4;i++)
			for(j=0;j<n;j++)
				for(k=0;k<m;k++)
					can[i][j][k]=1;
		for(i=0;i<n;i++)
		{
			cin>>str[i];
			for(j=0;j<m;j++)if(str[i][j]=='#')
				can[0][i][j]=can[1][i][j]=can[2][i][j]=can[3][i][j]=0;
			else if(str[i][j]=='S')
				sx=i,sy=j;
			else if(str[i][j]=='G')
				ex=i,ey=j;
		}
		for(i=0;i<n;i++)
			for(j=0;j<m;j++)if(str[i][j]=='>'||str[i][j]=='<'||str[i][j]=='^'||str[i][j]=='v')
			{
				int cur;
				if(str[i][j]=='>')
					cur=0;
				else if(str[i][j]=='v')
					cur=1;
				else if(str[i][j]=='<')
					cur=2;
				else
					cur=3;

				for(int dir=0;dir<4;dir++)
				{
					can[dir][i][j]=0;
					for(k=1;;k++)
					{
						int xx=i+dx[cur]*k;
						int yy=j+dy[cur]*k;

						if(xx<0||yy<0||xx>=n||yy>=m||(str[xx][yy]-'S'&&str[xx][yy]-'G'&&str[xx][yy]-'.'))
							break;
						can[dir][xx][yy]=0;
					}
					cur++;
					cur&=3;
				}
			}

		int ans=bfs(sx,sy,ex,ey,n,m);
		printf("Case #%d: ",ii);
		if(ans<0)
			puts("impossible");
		else
			printf("%d\n",ans);
	}
}
