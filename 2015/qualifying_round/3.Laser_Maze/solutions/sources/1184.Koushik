#include<stdio.h>
int main()
{
    int t,n,m,maz[4][100][100],ans,qptr,que[4][10000],s,g,i,i1,j1,i2,j2,x,y,a,b,flag,q4;
    char q[100][100],str[101],cha,cha1[5]="^>v<";
    FILE *ip,*op;
    ip=fopen("input.txt","r");
    op=fopen("output.txt","w");
    fscanf(ip,"%d",&t);

    for(q4=1;q4<=t;q4++)
    {
        fscanf(ip,"%d",&n);
        fscanf(ip,"%d",&m);
        //get the map,initialise s and g
           for(i1=0;i1<n;i1++)
           {
               fscanf(ip,"%s",str);
               for(j1=0;j1<m;j1++)
               {
                   q[i1][j1]=str[j1];
                   if(str[j1]=='S')
                     s=i1*m+j1;
                   if(str[j1]=='G')
                     g=i1*m+j1;
               }
           }
           /*for(i1=0;i1<n;i1++)
           {
             for(j1=0;j1<m;j1++)
              printf("%c",q[i1][j1]);
              printf("\n");
           }
           printf("\n");*/

               for(i1=0;i1<n;i1++)
                for(j1=0;j1<m;j1++)
            {
                if(q[i1][j1]=='#'||q[i1][j1]=='>'||q[i1][j1]=='^'||q[i1][j1]=='<'||q[i1][j1]=='v')
                {
                    maz[0][i1][j1]=-1;
                    maz[1][i1][j1]=-1;
                    maz[2][i1][j1]=-1;
                    maz[3][i1][j1]=-1;
                }
                else{
                        maz[0][i1][j1]=0;
                    maz[1][i1][j1]=0;
                    maz[2][i1][j1]=0;
                    maz[3][i1][j1]=0;

                }
            }

            /*for(i1=0;i1<n;i1++)
           {
             for(j1=0;j1<m;j1++)
              printf("%d",maz[0][i1][j1]);
              printf("\n");
           }
         printf("\n");*/
            for(i=0;i<4;i++)
            {
               for(i1=0;i1<n;i1++)
                for(j1=0;j1<m;j1++)
                {
                    if(q[i1][j1]=='>'||q[i1][j1]=='^'||q[i1][j1]=='<'||q[i1][j1]=='v')
                    {
                        for(i2=0;i2<4;i2++)
                            if(q[i1][j1]==cha1[i2])
                                  break;
                        cha=cha1[(i2+i)%4];
                        //printf("%c",cha);
                    }
                    else
                        cha='0';
                    switch(cha)
                    {
                        case '^':for(i2=i1-1;i2>=0;i2--)
                                      {
                                          if(q[i2][j1]=='#'||q[i2][j1]=='>'||q[i2][j1]=='^'||q[i2][j1]=='<'||q[i2][j1]=='v')
                                            break;
                                          else
                                            maz[i][i2][j1]=-1;
                                      }
                                      break;

                         case '>':for(j2=j1+1;j2<m;j2++)
                                      {
                                          if(q[i1][j2]=='#'||q[i1][j2]=='>'||q[i1][j2]=='^'||q[i1][j2]=='<'||q[i1][j2]=='v')
                                            break;
                                          else
                                            maz[i][i1][j2]=-1;
                                      }
                                      break;
                        case 'v':for(i2=i1+1;i2<n;i2++)
                                      {
                                          if(q[i2][j1]=='#'||q[i2][j1]=='>'||q[i2][j1]=='^'||q[i2][j1]=='<'||q[i2][j1]=='v')
                                            break;
                                          else
                                            maz[i][i2][j1]=-1;
                                      }
                                      break;
                           case '<':for(j2=j1-1;j2>=0;j2--)
                                      {
                                          if(q[i1][j2]=='#'||q[i1][j2]=='>'||q[i1][j2]=='^'||q[i1][j2]=='<'||q[i1][j2]=='v')
                                            break;
                                          else
                                            maz[i][i1][j2]=-1;
                                      }
                                      break;






                    }




                }

               /*  for(i1=0;i1<n;i1++)
           {
             for(j1=0;j1<m;j1++)
              printf("%d",maz[i][i1][j1]);
              printf("\n");
           }
         printf("\n");*/



        }

         flag=0;
         x=s/m;
         y=s-x*m;
         ans=0;
         maz[0][x][y]=1;
         qptr=0;
         que[0][qptr]=s;


        while(qptr>=0)
        {
            ans++;
            a=ans%4;
            b=(ans-1)%4;
            i1=-1;
            for(i2=0;i2<=qptr;i2++)
            {
                x=(que[b][i2])/m;
                y=que[b][i2]-x*m;
                if(x+1<n)
                    if(maz[a][x+1][y]==0)
                {
                    maz[a][x+1][y]=1;
                    i1++;
                    que[a][i1]=(x+1)*m+y;
                    if(que[a][i1]==g)
                    {
                        flag=1;
                        break;
                    }
                }
                if(x-1>=0)
                    if(maz[a][x-1][y]==0)
                {
                    maz[a][x-1][y]=1;
                    i1++;
                    que[a][i1]=(x-1)*m+y;
                    if(que[a][i1]==g)
                    {
                        flag=1;
                        break;
                    }
                }

                    if(y+1<m)
                    if(maz[a][x][y+1]==0)
                {
                    maz[a][x][y+1]=1;
                    i1++;
                    que[a][i1]=(x)*m+(y+1);
                    if(que[a][i1]==g)
                    {
                        flag=1;
                        break;
                    }
                }

                   if(y-1>=0)
                    if(maz[a][x][y-1]==0)
                {
                    maz[a][x][y-1]=1;
                    i1++;
                    que[a][i1]=(x)*m+(y-1);
                    if(que[a][i1]==g)
                    {
                        flag=1;
                        break;
                    }
                }

            }

            if(flag==1)
                break;


            qptr=i1;







        }


            if(flag)
                fprintf(op,"Case #%d: %d\n",q4,ans);
            else
                fprintf(op,"Case #%d: impossible\n",q4);






    }









 return 0;
}
