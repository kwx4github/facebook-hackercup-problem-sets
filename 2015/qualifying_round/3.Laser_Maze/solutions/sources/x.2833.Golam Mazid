//BISMILLAHIR RAHMANIR RAHIM
#include<stdio.h>
#include<string.h>
#include<queue>
#define Sz 105
using namespace std;
queue<int>q;
bool vis[Sz][Sz][5];
char gd[Sz][Sz];
int dis[Sz][Sz][5];
int Min(int a,int b)
{
    return a<b?a:b;
}
int main()
{
    FILE *f1,*f2;
    f1 = fopen("laser_maze.txt","r");
    f2 = fopen("out.txt","w");
    int t,cs=1,i,j,k,n,m,sx,sy,gx,gy,x,y,dir,R[]={0,0,-1,1},C[]={-1,1,0,0};
    fscanf(f1,"%d",&t);
    while(t--)
    {
        fscanf(f1,"%d%d",&n,&m);
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                for(k=0;k<4;k++)
                    vis[i][j][k]=0,dis[i][j][k]=1<<30;
            }
        }
        for(i=0;i<n;i++)
            fscanf(f1,"%s",&gd[i]);
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                if(gd[i][j]=='S')
                    sx=i,sy=j;
                else if(gd[i][j]=='G')
                    gx=i,gy=j;
                else if(gd[i][j]=='^')
                {
                    for(k=i-1;k>=0;k--)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][0]=1;
                    }
                    for(k=i+1;k<n;k++)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][2]=1;
                    }
                    for(k=j+1;k<m;k++)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][1]=1;
                    }
                    for(k=j-1;k>=0;k--)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][3]=1;
                    }
                }
                else if(gd[i][j]=='>')
                {
                    for(k=i-1;k>=0;k--)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][3]=1;
                    }
                    for(k=i+1;k<n;k++)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][1]=1;
                    }
                    for(k=j+1;k<m;k++)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][0]=1;
                    }
                    for(k=j-1;k>=0;k--)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][2]=1;
                    }
                }
                else if(gd[i][j]=='v')
                {
                    for(k=i-1;k>=0;k--)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][2]=1;
                    }
                    for(k=i+1;k<n;k++)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][0]=1;
                    }
                    for(k=j+1;k<m;k++)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][3]=1;
                    }
                    for(k=j-1;k>=0;k--)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][1]=1;
                    }
                }
                else if(gd[i][j]=='<')
                {
                    for(k=i-1;k>=0;k--)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][1]=1;
                    }
                    for(k=i+1;k<n;k++)
                    {
                        if(gd[k][j]!='S'&&gd[k][j]!='G'&&gd[k][j]!='.')
                            break;
                        vis[k][j][3]=1;
                    }
                    for(k=j+1;k<m;k++)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][2]=1;
                    }
                    for(k=j-1;k>=0;k--)
                    {
                        if(gd[i][k]!='S'&&gd[i][k]!='G'&&gd[i][k]!='.')
                            break;
                        vis[i][k][0]=1;
                    }
                }
                else
                    continue;
            }
        }
        q.push(sx),q.push(sy),q.push(0),dis[sx][sy][0]=0;
        while(!q.empty())
        {
            sx=q.front(),q.pop();
            sy=q.front(),q.pop();
            dir=q.front(),q.pop();
            for(i=0;i<4;i++)
            {
                x=sx+R[i], y=sy+C[i];
                if(x>=0&&x<n&&y>=0&&y<m)
                {
                    if(vis[x][y][(dir+1)%4]==0&&dis[x][y][(dir+1)%4]>dis[sx][sy][dir]+1)
                    {
                        dis[x][y][(dir+1)%4]=dis[sx][sy][dir]+1;
                        q.push(x);
                        q.push(y);
                        q.push((dir+1)%4);
                    }
                }
            }
        }
        if(dis[gx][gy][0]>=(1<<30)&&dis[gx][gy][1]>=(1<<30)&&dis[gx][gy][2]>=(1<<30)&&dis[gx][gy][3]>=(1<<30))
            fprintf(f2,"Case #%d: impossible\n",cs++);
        else
            fprintf(f2,"Case #%d: %d\n",cs++,Min(dis[gx][gy][2],Min(dis[gx][gy][3],Min(dis[gx][gy][0],dis[gx][gy][1]))));
    }
    fclose(f1);
    fclose(f2);
    return 0;
}
