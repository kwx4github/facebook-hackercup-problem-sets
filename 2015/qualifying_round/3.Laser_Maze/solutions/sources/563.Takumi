#include<bits/stdc++.h>
using namespace std;

int T;
int H,W;
char fie[111][111];
bool brs[111][111][4];

int dx[]={0,1,0,-1};
int dy[]={-1,0,1,0};
char dc[]="^>v<";

int memo[111][111][5];

struct state{
  int x,y,w,c;
};

bool isok(int x,int y){
  if( x < 0 || y < 0 || x >= W || y >= H ) return false;
  if( fie[x][y] == 'S' || fie[x][y] == 'G' || fie[x][y] == '.' ) return true;
  return false;
}

int solve(int sx,int sy){
  queue<state> q;
  memset(memo,-1,sizeof(memo));
  q.push( (state){sx,sy,0,0} );
  memo[sx][sy][0] = 0;
  while( !q.empty() ){
    state st = q.front(); q.pop();
    if( fie[st.x][st.y] == 'G' ) return st.c;
    int nw = (st.w+1)%4, nc = st.c+1;
    for(int i=0;i<4;i++){
      int nx = st.x+dx[i], ny = st.y + dy[i];
      if( isok(nx,ny) ){
	if( brs[nx][ny][nw] ) continue;
	if( memo[nx][ny][nw] == -1 ){
	  memo[nx][ny][nw] = nc;
	  q.push( (state){nx,ny,nw,nc} );
	}
      }
    }
  }
  return -1;
}

int main(){
  cin >> T;
  for(int ttt=1;ttt<=T;ttt++){
    cin >> H >> W;
    int sx,sy;
    for(int i=0;i<H;i++){
      for(int j=0;j<W;j++){
	cin >> fie[j][i];	
	if( fie[j][i] == 'S' ) {
	  sx = j; sy = i;
	}
      }
    }

    memset(brs,0,sizeof(brs));
    for(int i=0;i<H;i++){
      for(int j=0;j<W;j++){
	for(int k=0;k<4;k++){
	  if( fie[j][i] == dc[k] ){
	    for(int l=0;l<4;l++){
	      int nd = (k+l)%4;
	      int x = j+dx[nd], y = i+dy[nd];
	      while( isok(x,y) ){
		brs[x][y][l] = true;
		x+=dx[nd]; y+=dy[nd];
	      }
	    }
	  }
	}
      }
    }
    /*
    for(int k=0;k<4;k++){
      printf("view : %d's road\n",k);
      for(int i=0;i<H;i++){
	for(int j=0;j<W;j++){
	  if( brs[j][i][k] ) printf("x");
	  else printf("%c",fie[j][i]);
	}
	puts("");
      }
    }
    */
    int res = solve(sx,sy);
    cout << "Case #"<<ttt<<": ";
    if( ~res ) cout << res << endl;
    else cout << "impossible" << endl;
  }
}
