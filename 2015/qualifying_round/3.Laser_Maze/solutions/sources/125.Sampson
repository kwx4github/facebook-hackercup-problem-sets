#include <cstdio>
#include <algorithm>
#define N 105
#define INF (1 << 29)
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
using namespace std;

int t, n, m, dy[] = {-1, 0, 1, 0}, dx[] = {0, 1, 0, -1}, q[N * N * 4], sy, sx, gy, gx, d[N][N][4], ans;
char s[N][N], map[128];
bool p[N][N][4];

int main(){
	map['^'] = 1;
	map['>'] = 2;
	map['v'] = 3;
	map['<'] = 4;
	scanf("%d", &t);
	FI(tc, 1, t){
		scanf("%d %d", &n, &m);
		fi(i, 0, n) scanf("%s", s[i]);
		fi(k, 0, 4){
			fi(i, 0, n) fi(j, 0, m){
				p[i][j][k] = 1;
				d[i][j][k] = INF;
			}
			fi(i, 0, n) fi(j, 0, m){
				if(map[s[i][j]]){
					int d = (map[s[i][j]] - 1 + k) % 4;
					p[i][j][k] = 0;
					int y = i + dy[d], x = j + dx[d];
					while(y >= 0 && y < n && x >= 0 && x < m && !map[s[y][x]] && s[y][x] != '#'){
						p[y][x][k] = 0;
						y += dy[d];
						x += dx[d];
					}
				}else if(s[i][j] == '#') p[i][j][k] = 0;
			}
		}
		fi(i, 0, n) fi(j, 0, m){
			if(s[i][j] == 'S'){
				sy = i;
				sx = j;
			}
			if(s[i][j] == 'G'){
				gy = i;
				gx = j;
			}
		}
		
		d[sy][sx][0] = 0;
		
		int l = 0, h = 0;
		ans = INF;
		q[h++] = (sy * m + sx) * 4;
		for(; l < h; l++){
			int dir = q[l] % 4, x = q[l] / 4 % m, y = q[l] / 4 / m;
			if(y == gy && x == gx){
				ans = d[y][x][dir];
				break;
			}
			fi(i, 0, 4){
				int ny = y + dy[i], nx = x + dx[i], nd = (dir + 1) % 4;
				if(ny < 0 || ny >= n || nx < 0 || nx >= m || !p[ny][nx][nd] || d[ny][nx][nd] < INF) continue;
				d[ny][nx][nd] = d[y][x][dir] + 1;
				q[h++] = (ny * m + nx) * 4 + nd;
			}
		}
		
		printf("Case #%d: ", tc);
		if(ans == INF) puts("impossible");
		else printf("%d\n", ans);
	}
}
