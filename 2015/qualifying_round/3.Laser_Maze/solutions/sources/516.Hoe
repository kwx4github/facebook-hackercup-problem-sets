#include<cstdio>
#include<cstring>
#include<queue>

using namespace std;

queue<int> q;
char mat[105][105];
int dis[105][105][4];
bool no[105][105][4];
int dir[1000];
int dr[]={-1,0,1,0};
int dc[]={0,1,0,-1};

bool ck(char c) {
	return c == '^' || c == '>' || c == 'v' || c == '<';
}

int main() {
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	dir['^'] = 0;
	dir['>'] = 1;
	dir['v'] = 2;
	dir['<'] = 3;

	int Ts; scanf("%d",&Ts);
	for(int cs=1;cs<=Ts;++cs) {
		memset(dis,-1,sizeof(dis));
		memset(no,0,sizeof(no));
		int n,m; scanf("%d%d",&n,&m);
		for(int i=0;i<n;++i) scanf("%s",mat[i]);
		
		for(int t=1;t<=4;++t) {
			for(int r=0;r<n;++r) for(int c=0;c<m;++c) if(ck(mat[r][c])) {
				int rr = r, cc = c;
				int cur_dir = (dir[mat[r][c]] + t) % 4;
				while(true) {
					rr += dr[cur_dir], cc += dc[cur_dir];
					if(rr < 0 || rr >= n) break;
					if(cc < 0 || cc >= m) break;
					if(mat[rr][cc] == '#' || ck(mat[rr][cc])) break;
					no[rr][cc][t%4] = 1;
				}
			}
		}

		int sr = -1, sc = -1;
		int er = -1, ec = -1;
		for(int i=0;i<n;++i) for(int j=0;j<m;++j)
			if(mat[i][j] == 'S') sr = i, sc = j;
			else if(mat[i][j] == 'G') er = i, ec = j;

		dis[sr][sc][0] = 0;
		
		q.push(sr), q.push(sc), q.push(0);
		while(q.size()) {
			int r = q.front(); q.pop();
			int c = q.front(); q.pop();
			int d = q.front(); q.pop();

			for(int i=0;i<4;++i) {
				int rr = r + dr[i];
				int cc = c + dc[i];
				int dd = (d + 1) % 4;
				if(rr < 0 || rr >= n) continue;
				if(cc < 0 || cc >= m) continue;
				if(mat[rr][cc] == '#' || ck(mat[rr][cc])) continue;
				if(no[rr][cc][dd] || dis[rr][cc][dd] != -1) continue;
				dis[rr][cc][dd] = dis[r][c][d] + 1;
				q.push(rr), q.push(cc), q.push(dd);
			}
		}

		printf("Case #%d: ",cs);
		int mn = 1<<30;
		for(int i=0;i<4;++i) if(dis[er][ec][i] != -1)
			mn = min(mn, dis[er][ec][i]);
		if(mn == (1<<30)) printf("impossible\n");
		else printf("%d\n",mn);
	}
}
