#include <bits/stdc++.h>
using namespace std;
#define s second
#define f first
#define mp make_pair
#define ll long long
#define pb push_back
#define fr(i,s,n) for(int i=s; i<n; i++)
#define sz size()
#define mmst(a,x) memset(a,x,sizeof(a))
#define scan(x) scanf("%d",&x)
#define pii pair<int,int>
#define piii pair<int,pii>
#define db(x) cout<< #x<<'='<<x<<' ';
#define _ cout<<'\n'

struct po{
    int x,y,z,c;
    po(){}
    po(int xx,int yy,int zz,int cc){
        x=xx;y=yy;c=cc;z=zz;
    }
};
int n,m,ex,ey,dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};
char a[101][101][4];
bool v[101][101][4];
bool va(int x,int y,int p){
    if(x<0 || x>=n || y<0 || y>=m)return 0;
    char c=a[x][y][p];
    if(c=='#'||c=='0'||c=='1'||c=='2'||c=='3')return 0;
    return 1;


}
int bfs(int x,int y){
    queue<po> q;
    q.push(po(x,y,0,0));
    while(!q.empty()){
        po p=q.front();q.pop();
        //db(p.x)db(p.y)db(p.z)_;
        if(p.x==ex&&p.y==ey)return p.c;
        for(int i=0; i<4; i++){
            int xx=p.x+dx[i],yy=p.y+dy[i],z=(p.z+1)%4;
            if(va(xx,yy,z)&& !v[xx][yy][z]){
                q.push(po(xx,yy,z,p.c+1));
                v[xx][yy][z]=1;
            }
        }
    }
    return -1;
}

int main(){
    freopen ("laser_maze.txt","r",stdin);
    freopen("output.txt", "w", stdout);
    int t,cc=1;
    cin>>t;
    while(t--){
        mmst(v,0);
        cin>>n>>m;
        char ch;
        int x,y;
        fr(i,0,n)fr(j,0,m){
            cin>>ch;
            if(ch=='^'||ch=='>'||ch=='v'||ch=='<'){
                switch(ch){
                    case '^':a[i][j][0]='0';break;
                    case '>':a[i][j][0]='1';break;
                    case 'v':a[i][j][0]='2';break;
                    case '<':a[i][j][0]='3';break;
                }
                fr(k,1,4){
                    a[i][j][k]=char(((a[i][j][k-1]-'0')+1)%4+'0');
                }
            }
            else {
                fr(k,0,4){
                    a[i][j][k]=ch;
                }
                if(ch=='S'){x=i;y=j;}
                else if(ch=='G'){ex=i;ey=j;}
            }
        }
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                for(int p=0; p<4; p++){
                    if(a[i][j][p]=='3'){
                        int jj=j;
                        while(va(i,--jj,p))a[i][jj][p]='#';
                    }
                    else if(a[i][j][p]=='2'){
                        int ii=i;
                        while(va(++ii,j,p))a[ii][j][p]='#';
                    }
                    else if(a[i][j][p]=='1'){
                        int jj=j;
                        while(va(i,++jj,p))a[i][jj][p]='#';
                    }
                    else if(a[i][j][p]=='0'){
                        int ii=i;
                        while(va(--ii,j,p))a[ii][j][p]='#';
                    }
                }

            }
        }
        /*fr(i,0,4)
        cout<<a[1][2][i]<<'\n';*/
        int an=bfs(x,y);
        printf("Case #%d: ",cc++);
        if(an>=0)cout<<an<<'\n';
        else cout<<"impossible\n";
    }
    return 0;
}
