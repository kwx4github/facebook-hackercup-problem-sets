#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> ii;
typedef pair<ii,int> iii;
queue<iii> q;
int T,R,C;
char arr[105][105];
int maze[105][105][4];
int d1[4]={1,0,-1,0},d2[4]={0,1,0,-1};
bool laser(int i, int j){
	return (arr[i][j]=='.');
}
void c1(int i, int j, int k){ 
	maze[i][j][k]='x'; i--;
	while (i>=0&&laser(i,j)){
		maze[i][j][k]='x';
		i--;
	}
}
void c2(int i, int j, int k){
	maze[i][j][k]='x'; i++;
	while (i<R&&laser(i,j)){
		maze[i][j][k]='x';
		i++;
	}
}
void c3(int i, int j, int k){
	maze[i][j][k]='x'; j--;
	while (j>=0&&laser(i,j)){
		maze[i][j][k]='x';
		j--;
	}
}
void c4(int i, int j, int k){
	maze[i][j][k]='x'; j++;
	while (j<C&&laser(i,j)){
		maze[i][j][k]='x';
		j++;
	}
}
bool pos(int i, int j, int l){
	if (i<0||j<0||i>=R||j>=C) return false;
	if (maze[i][j][l]=='.') return true;
	else return false;
}
int main(){
	scanf("%d\n",&T);
	for (int tc=1; tc<=T; tc++){
		scanf("%d %d\n",&R,&C);
		memset(arr,0,sizeof arr);
		memset(maze,0,sizeof maze);
		for (int i=0; i<R; i++){
			scanf("%s",arr[i]);
		}
		int si=0,sj=0,ei=0,ej=0;
		for (int i=0; i<R; i++){
			for (int j=0; j<C; j++){
				if (arr[i][j]=='S'){
					si=i; sj=j;
					arr[i][j]='.';
				}
				if (arr[i][j]=='G'){
					ei=i;ej=j;
					arr[i][j]='.';
				}
				for (int k=0; k<4; k++){
					maze[i][j][k]=arr[i][j];
				}
			}
		}
		for (int i=0; i<R; i++){
			for (int j=0; j<C; j++){
				if (arr[i][j]=='<'){
					c3(i,j,0);
					c1(i,j,1);
					c4(i,j,2);
					c2(i,j,3);
				}
				if (arr[i][j]=='^'){
					c1(i,j,0);
					c4(i,j,1);
					c2(i,j,2);
					c3(i,j,3);
				}
				if (arr[i][j]=='>'){
					c4(i,j,0);
					c2(i,j,1);
					c3(i,j,2);
					c1(i,j,3);
				}
				if (arr[i][j]=='v'){
					c2(i,j,0);
					c3(i,j,1);
					c1(i,j,2);
					c4(i,j,3);
				}
			}
		}
		long long ans=9223372036854775807LL;
		q.push(iii(ii(si,sj),0));
		maze[si][sj][0]=0;
		while(!q.empty()){
			int i=q.front().first.first,j=q.front().first.second,l=q.front().second;
			q.pop();
			if (i==ei&&j==ej){
				ans=maze[i][j][l];
				break;
			}
			int cl=l;
			l++; l%=4;
			for (int x=0; x<4; x++){
				int ni=i+d1[x],nj=j+d2[x];
				if (pos(ni,nj,l)){
					maze[ni][nj][l]=maze[i][j][cl]+1;
					q.push(iii(ii(ni,nj),l));
				}
			}
		}
		printf("Case #%d: ",tc);
		if (ans==9223372036854775807LL) printf("impossible\n");
		else printf("%lld\n",ans);
	}
}
