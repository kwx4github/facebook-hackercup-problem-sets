/*
ID:maruf911
PROG:
LANG: C++
*/

/**Bismillahir Rahmanir Rahim
   In the name of ALLAH, most gracious, most merciful */
#include <bits/stdc++.h>
using namespace std;
#define inf           100000000000000000LL
#define pb            push_back
#define mp            make_pair
#define eps           1e-9
#define nl            printf("\n")
#define spc           printf(" ")
#define sci(n)        scanf("%ld",&n)
#define sc64(n)       scanf("%I64d",&n)
#define scii(a,b)     scanf("%ld %ld",&a,&b)
#define sc6464(a,b)   scanf("%I64d %I64d",&a,&b)
#define scs(s)        scanf("%s",s)
#define scss(a,b)     scanf("%s %s",a,b)
#define scd(f)        scanf("%lf",&f)
#define scdd(a,b)     scanf("%lf %lf",&a,&b)
#define prc(k)        printf("Case %ld: ",k);
#define pri(a)        printf("%ld",a)
#define pr64(a)       printf("%I64d",a)
#define prii(a,b)     printf("%ld %ld",a,b)
#define pr6464(a,b)   printf("%I64d %I64d",a,b)
#define prs(a)        printf("%s",a)
#define prss(a,b)     printf("%s %s",a,b)
#define prd(a)        printf("%lf",a)
#define prdd(a,b)     printf("%lf %lf",a,b)
#define rep(i,n)      for(int i(0),_n(n);i<_n;++i)
#define repr(i,n)     for(int i=n;i>=0;i--)
#define repi(i,a,b)   for(int i(a),_b(b);i<=_b;++i)
#define repl(i,n)     for(int i(1),_n(n);i<=_n;++i)
#define repir(i,a,b)  for(int i=a;i>=b;i--)
#define chk(a,k) ((bool)(a&(1<<(k))))
#define off(a,k) (a&(~(1<<(k))))
#define on(a,k) (a|(1<<(k)))
int Set(int N,int pos) {return N |= (1LL<<pos);}
int Reset(int N,int pos) {return N&= ~(1LL<<pos);}
bool Check(int N,int pos) {return N&(1LL<<pos);}
#define ff            first
#define ss            second
#define all(a)        a.begin(),a.end()
#define mem(x,a)      memset(x,a,sizeof(x))
#define repe(it,c)    for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
int dx[]={0,0,1,-1},dy[]={1,-1,0,0};
typedef vector<int> vi;
typedef vector<long> vl;
typedef vector<long long> vll;
typedef vector<string> vs;
#define ll long long
typedef vector<vector<int> > vvi;
typedef pair<int,int> pr;
inline void cn( long &n )//fast input function
{
n=0;
long ch=getchar();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar();}
while(ch >= '0' && ch <= '9')
n = (n<<3)+(n<<1) + ch-'0', ch=getchar();
n=n*sign;
}
template<class T> void cmin(T &a,T b){if(b<a) a=b;}
template<class T> void cmax(T &a,T b){if(b>a) a=b;}
template<class T> int len(const T&c){return (int)c.size();}
template<class T> int len(char c[]){return (int)strlen(c);}
//string itos(long n){string s;while(n){s+=(n%10+48);n/=10;}reverse(all(s));return s;}
long stoi(string s){long n=0;rep(i,len(s))n=n*10+(s[i]-48);return n;}
string s[101];
int r,c;
int pos(int i,int j,int mov)
{
      if(i<0||j<0||i>=r||j>=c) return 0;
    if(mov==0)
    {
    for(int k=j+1;k<c;k++) {
            if(s[i][k]=='<') return 0;
            if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;

    }
    for(int k=j-1;k>=0;k--) {
            if(s[i][k]=='>') return 0;
            if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;
    }
    for(int k=i-1;k>=0;k--) {
            if(s[k][j]=='v') return 0;
            if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    for(int k=i+1;k<r;k++) {
            if(s[k][j]=='^') return 0;
            if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    }
    else if(mov==1)
    {
    for(int k=j+1;k<c;k++) {
            if(s[i][k]=='v') return 0;
             if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;
    }
    for(int k=j-1;k>=0;k--) {
            if(s[i][k]=='^') return 0;
     if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;
    }
    for(int k=i-1;k>=0;k--) {
            if(s[k][j]=='>') return 0;
    if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    for(int k=i+1;k<r;k++) {
            if(s[k][j]=='<') return 0;
    if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    }
    else if(mov==2)
    {
    for(int k=j+1;k<c;k++) {
            if(s[i][k]=='>') return 0;
     if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;
    }
    for(int k=j-1;k>=0;k--) {
            if(s[i][k]=='<') return 0;
     if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;
    }
    for(int k=i-1;k>=0;k--) {
            if(s[k][j]=='^') return 0;
    if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    for(int k=i+1;k<r;k++) {
            if(s[k][j]=='v') return 0;
    if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    }
    else if(mov==3){
    for(int k=j+1;k<c;k++) {
            if(s[i][k]=='^') return 0;
     if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;
    }
    for(int k=j-1;k>=0;k--) {
            if(s[i][k]=='v') return 0;
     if(s[i][k]=='#'||s[i][k]=='<'||s[i][k]=='>'||s[i][k]=='^'||s[i][k]=='v')
            break;
    }
    for(int k=i-1;k>=0;k--) {
            if(s[k][j]=='<') return 0;
    if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    for(int k=i+1;k<r;k++) {
            if(s[k][j]=='>') return 0;
    if(s[k][j]=='#'||s[k][j]=='<'||s[k][j]=='>'||s[k][j]=='^'||s[k][j]=='v')
            break;
    }
    }

    return 1;
}
int col[105][105];
/*int cnt=0;
long dfs(int i,int j,int mov)
{

      if(mov>r+c) return inf;

    if(i<0||j<0||i>=r||j>=c) return inf;


    if(s[i][j]=='G') {
        if(pos(i,j,mov%4)==0) return inf;
   //     cout<<"           ok\n";
            return mov;
    }
   //  if(col[i][j]>2) return inf;
    //  col[i][j]++;

    if((mov>0&&pos(i,j,mov%4)==0)) return inf;
    if(s[i][j]!='.'&&s[i][j]!='S') return inf;
 //   cout<<i<<" "<<j<<" "<<mov<<endl;
    return min(dfs(i+1,j,mov+1),min(dfs(i,j+1,mov+1),min(dfs(i-1,j,mov+1),dfs(i,j-1,mov+1))));
}*/
struct node
{
    int i,j,mov;
};

long long bfs(int i,int j)
{
    int x,y,m;
    node st;
    st.i=i; st.j=j; st.mov=0;
    col[i][j]=1;
    queue<node> q;
    q.push(st);
    while(!q.empty())
    {
        node t=q.front();
        q.pop();
        if(s[t.i][t.j]=='G') return t.mov;
        rep(k,4){
        x=t.i+dx[k]; y=t.j+dy[k]; m=t.mov;
        if(pos(x,y,(m+1)%4)&&col[x][y]<=5)
        {
            node tm; tm.i=x, tm.j=y; tm.mov=m+1;
            q.push(tm);
            col[x][y]++;
        }
        }


    }
    return inf;
}
int main()
{
ios_base::sync_with_stdio(false);
freopen("input.txt","r",stdin);
freopen("output.txt","w",stdout);
//cout<<inf;
long t,kase;
cin>>t;
for(kase=1;kase<=t;kase++)
{

mem(col,0);
   cin>>r>>c;
   rep(i,r) cin>>s[i];
   rep(i,r)rep(j,c)
   if(s[i][j]=='S')
   {
       long long res=bfs(i,j);
           cout<<"Case #"<<kase<<": ";
       if(res>=inf) cout<<"impossible\n";
       else cout<<res<<endl;
   }
}

return 0;
}
