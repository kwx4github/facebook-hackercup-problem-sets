#include <fstream>
#include <queue>
using namespace std;

struct st
{
    int x,y,z;
};

const int dx[4]={1,0,-1,0};
const int dy[4]={0,-1,0,1};

queue <st> c;
char a[105][105];
int d[105][105][5],i,j,k,n,m,t,xs,ys,xg,yg,p,x,y,z,l,mn;

st mk(int x,int y,int z)
{
    st a;
    a.x=x;
    a.y=y;
    a.z=z;
    return a;
}

int main()
{
    ifstream f("in.txt");
    ofstream g("out.txt");
    f >> t;
    for (int w=1;w<=t;w++)
    {
        f >> n >> m;
        for (i=1;i<=n;i++)
            for (j=1;j<=m;j++)
                f >> a[i][j];
        for (i=0;i<=n+1;i++)
        {
            a[i][0]='#';
            a[i][m+1]='#';
        }
        for (i=0;i<=m+1;i++)
        {
            a[0][i]='#';
            a[n+1][i]='#';
        }
        for (i=1;i<=n;i++)
            for (j=1;j<=m;j++)
                for (k=1;k<=4;k++)
                    d[i][j][k]=0;
        for (i=1;i<=n;i++)
            for (j=1;j<=m;j++)
            {
                if (a[i][j]=='S')
                {
                    xs=i;
                    ys=j;
                    a[i][j]='.';
                }
                if (a[i][j]=='G')
                {
                    xg=i;
                    yg=j;
                    a[i][j]='.';
                }
                p=0;
                if (a[i][j]=='^')
                    p=1;
                if (a[i][j]=='>')
                    p=2;
                if (a[i][j]=='v')
                    p=3;
                if (a[i][j]=='<')
                    p=4;
                if (p)
                {
                    a[i][j]='#';
                    for (k=1;k<=4;k++)
                    {
                        l=(p+k)%4;
                        x=i+dx[l];y=j+dy[l];
                        while (a[x][y]=='.')
                        {
                            d[x][y][k]=-1;
                            x+=dx[l];
                            y+=dy[l];
                        }
                    }
                }
            }
        c.push(mk(xs,ys,1));
        d[xs][ys][1]=1;
        while (!c.empty())
        {
            x=c.front().x;
            y=c.front().y;
            z=c.front().z;
            c.pop();
            for (i=0;i<4;i++)
            {
                if ((a[x+dx[i]][y+dy[i]]=='.') && (d[x+dx[i]][y+dy[i]][z%4+1]==0))
                {
                    d[x+dx[i]][y+dy[i]][z%4+1]=d[x][y][z]+1;
                    c.push(mk(x+dx[i],y+dy[i],z%4+1));
                }
            }
        }
        mn=1 << 30;
        for (i=1;i<=4;i++)
            if ((d[xg][yg][i]>0) && (d[xg][yg][i]<mn))
                mn=d[xg][yg][i];
        g << "Case #" << w << ": ";
        if (mn==1 << 30)
            g << "impossible\n";
        else g << mn-1 << "\n";
    }
    return 0;
}
