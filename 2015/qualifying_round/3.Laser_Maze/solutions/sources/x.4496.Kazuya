#include <bits/stdc++.h>
using namespace std;
#define all(c) (c).begin(),(c).end()
#define rrep(i,n) for(int i=(int)(n)-1;i>=0;i--)
#define REP(i,m,n) for(int i=(int)(m);i<(int)(n);i++)
#define rep(i,n) REP(i,0,n)
#define iter(c) __typeof((c).begin())
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
#define pb(a) push_back(a)
#define pr(a) cout<<(a)<<endl
#define PR(a,b) cout<<(a)<<" "<<(b)<<endl
#define R cin>>
#define F first
#define S second
#define ll long long
bool check(int n,int m,int x,int y){return (x<0||x>=n||y<0||y>=m)?false:true;}
const ll MAX=1000000007,MAXL=1LL<<60,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};
typedef pair<int,int> P;

int dir(char c) {
  if(c=='^') return 0;
  if(c=='>') return 1;
  if(c=='v') return 2;
  if(c=='<') return 3;
  return -1;
}

int main() {
  int T;
  R T;
  for(int t=1; t<=T; t++) {
    int ans=MAX;
    int n,m;
    R n >> m;
    string r[n];
    int sx,sy,tx,ty;
    rep(i,n) {
      R r[i];
      rep(j,m) {
	if(r[i][j]=='S') {sx=i,sy=j;}
	else if(r[i][j]=='G') {tx=i,ty=j;}
      }
    }
    string s[4][n];
    rep(k,4) {
      rep(i,n) s[k][i]=r[i];
      rep(i,n) {
	rep(j,m) {
	  if(dir(s[k][i][j])>-1) {
	    int l=(dir(s[k][i][j])+k)%4;
	    int x=i,y=j;
	    while(1) {
	      x+=dx[l],y+=dy[l];
	      if(!check(n,m,x,y)) break;
	      if(dir(s[k][x][y])>-1 || s[k][x][y]=='#') break;
	      s[k][x][y]='#';
	    }
	  }
	}
      }
    }
    int dp[4][n][m];
    rep(i,4)rep(j,n)rep(k,m) dp[i][j][k]=MAX;
    dp[0][sx][sy]=0;
    queue<P> que;
    queue<int> di;
    que.push(P(sx,sy));
    di.push(0);
    while(!que.empty()) {
      P p=que.front();que.pop();
      int k=di.front();di.pop();
      int nx=p.F,ny=p.S;
      rep(i,4) {
	int x=nx+dx[i],y=ny+dy[i];
	if(!check(n,m,x,y)) continue;
	if(dir(s[(k+1)%4][x][y])>-1 || s[(k+1)%4][x][y]=='#') continue;
	if(dp[(k+1)%4][x][y]>dp[k][nx][ny]+1) {
	  dp[(k+1)%4][x][y]=dp[k][nx][ny]+1;
	  que.push(P(x,y));
	  di.push((k+1)%4);
	}
      }
    }
    rep(i,4) ans=min(ans,dp[i][tx][ty]);
    cout << "Case #" << t << ": ";
    if(ans!=MAX) cout << ans << endl;
    else cout << "impossible" << endl;
  }
  return 0;
}
