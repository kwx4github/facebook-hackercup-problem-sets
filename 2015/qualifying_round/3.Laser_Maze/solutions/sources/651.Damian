#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <map>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <cstring>
#include <complex>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)for(int i=0;i<v;i++)
#define FORE(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define REMIN(x,y) (x)=min((x),(y))
#define REMAX(x,y) (x)=max((x),(y))
#define pb push_back
#define sz size()
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define un(v) v.erase(unique(ALL(v)),v.end())
#define LOLDBG
#ifdef LOLDBG
#define DBG(vari) cerr<<#vari<<" = "<<vari<<endl;
#define DBG2(v1,v2) cerr<<(v1)<<" - "<<(v2)<<endl;
#else
#define DBG(vari)
#define DBG2(v1,v2)
#endif
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define CZ3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z));
#define ALL(x) (x).begin(),(x).end()
#define tests int dsdsf;cin>>dsdsf;while(dsdsf--)
#define testss int dsdsf;CZ(dsdsf);while(dsdsf--)
using namespace std;
typedef pair<int,int> pii;
typedef vector<int> vi;
template<typename T,typename TT> ostream &operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream &operator<<(ostream &s,vector<T> t){s<<"{";FOR(i,t.size())s<<t[i]<<(i==t.size()-1?"":",");return s<<"}"<<endl; }
#define INF 10000000
char ki[]=">v<^";
char c[111][111];
char cc[111][111][4];
int d[111][111][4];
int n,m;
int dx[]={1,-1,0,0,0};
int dy[]={0,0,-1,1,0};

int check(int ii,int jj,int kk)
{
	{
		int i=ii-1,j=jj;
		while(i>=0){if (cc[i][j][kk]!='.') break;i--;}
		if (i>=0 && cc[i][j][kk]=='v') return 1;
	}
	{
		int i=ii+1,j=jj;
		while(i<n){if (cc[i][j][kk]!='.') break;i++;}
		if (i<n && cc[i][j][kk]=='^') return 1;
	}
	{
		int i=ii,j=jj-1;
		while(j>=0){if (cc[i][j][kk]!='.') break;j--;}
		if (j>=0 && cc[i][j][kk]=='>') return 1;
	}
	{
		int i=ii,j=jj+1;
		while(j<m){if (cc[i][j][kk]!='.') break;j++;}
		if (j<m && cc[i][j][kk]=='<') return 1;
	}
	return 0;
}

int main()
{
    int te;cin>>te;
    FOR(nrte,te)
    {
		cin>>n>>m;
		FOR(i,n)cin>>c[i];
		
		int si,sj,gi,gj;
		FOR(i,n)FOR(j,m)
		{
			if (c[i][j]=='G'){gi=i;gj=j;c[i][j]='.';}
			if (c[i][j]=='S'){si=i;sj=j;c[i][j]='.';}
		}
		FOR(k,4)FOR(i,n)FOR(j,m)cc[i][j][k]=c[i][j];
		
		REP(k,1,3)
		{
			FOR(i,n)FOR(j,m)
			{
				if (cc[i][j][k]=='.' || cc[i][j][k]=='#') continue;
				int f=0;
				//DBG(mp(i,j));
				while(ki[f]!=cc[i][j][k]) f++;
				cc[i][j][k]=ki[(f+k)%4];
			}
			
		}
		//FOR(k,4)DBG(cc[0][4][k]);
		FOR(i,n)FOR(j,m)FOR(k,4)d[i][j][k]=INF;
		d[si][sj][0]=0;
		queue<pair<pii,int> > Q;
		Q.push(mp(mp(si,sj),0));
		//DBG(mp(si,sj));
		//DBG(mp(gi,gj));
		int wyn=-1;
		while(Q.sz)
		{
			int ii=Q.front().fi.fi;
			int jj=Q.front().fi.se;
			int kk=Q.front().se;
			if (ii==gi && jj==gj)
			{
				wyn=d[ii][jj][kk];
				break;
			}
			
			Q.pop();
			FOR(o,4)
			{
				int ni=ii+dx[o];
				int nj=jj+dy[o];
				int nk=(kk+1)%4;
				if (!(0<=ni && ni<n && 0<=nj && nj<m)) continue;
				if (c[ni][nj]!='.') continue;
				if (d[ni][nj][nk]!=INF) continue;
				if (check(ni,nj,nk)) continue;
				d[ni][nj][nk]=d[ii][jj][kk]+1;
				Q.push(mp(mp(ni,nj),nk));
			}
			
		}
		if (wyn>=0)
    	printf("Case #%d: %d\n",nrte+1,wyn);
    	else printf("Case #%d: impossible\n",nrte+1);

    }

	return 0;
}


