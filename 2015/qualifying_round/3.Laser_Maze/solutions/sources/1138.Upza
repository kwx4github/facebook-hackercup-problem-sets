#include<cstdio>
#include<cstdlib>
#include<cstring>
#define F first
#define S second
#define mp(x,y) make_pair(x,y)
using namespace std;
typedef long long ll;
int r,c,cnt;
char a[103][103];
int x[103][103],block[103][103],sta[103][103][4];
void laz0(int p,int q,int num);
void laz1(int p,int q,int num);
void laz2(int p,int q,int num);
void laz3(int p,int q,int num);
void laz0(int p,int q,int num)
{
    for(int i=p-1;block[i][q]<1;i--)sta[i][q][num]=1;
    if(num<3)laz1(p,q,num+1);
}
void laz1(int p,int q,int num)
{
    for(int j=q+1;block[p][j]<1;j++)sta[p][j][num]=1;
    if(num<3)laz2(p,q,num+1);
}
void laz2(int p,int q,int num)
{
    for(int i=p+1;block[i][q]<1;i++)sta[i][q][num]=1;
    if(num<3)laz3(p,q,num+1);
}
void laz3(int p,int q,int num)
{
    for(int j=q-1;block[p][j]<1;j--)sta[p][j][num]=1;
    if(num<3)laz0(p,q,num+1);
}
void func(int p,int q)
{
    if(a[p][q]=='^'){laz0(p,q,0); return;}
    if(a[p][q]=='>'){laz1(p,q,0); return;}
    if(a[p][q]=='v'){laz2(p,q,0); return;}
    if(a[p][q]=='<'){laz3(p,q,0); return;}
}
int check(int p,int q)
{
    if(block[p][q]==1)return 0;
    if(sta[p][q][cnt%4]==0)
    {
        x[p][q]=cnt+1;
        return 1;
    }
    return 0;
}
int main()
{
    //ios_base::sync_with_stdio(false);
    //cin.tie(NULL);
    freopen("laser_maze.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int t,tt,i,j,chk;
    scanf("%d",&tt);
    for(t=1;t<=tt;t++)
    {
        scanf("%d %d",&r,&c);
        memset(x,0,sizeof x);
        memset(sta,0,sizeof sta);
        memset(block,0,sizeof block);
        chk=1;
        for(i=1;i<=r;i++)scanf("%s",a[i]+1);
        for(i=0;i<=r+1;i++)block[i][0]=1,block[i][c+1]=1;
        for(j=0;j<=c+1;j++)block[0][j]=1,block[r+1][j]=1;
        for(i=1;i<=r;i++)for(j=1;j<=c;j++)
        {
            if(a[i][j]=='.')continue;
            if(a[i][j]=='#'){block[i][j]=1; continue;}
            if(a[i][j]=='S'){x[i][j]=1; continue;}
            if(a[i][j]=='G'){block[i][j]=-1; continue;}
            block[i][j]=1;
        }
        for(i=1;i<=r;i++)for(j=1;j<=c;j++)
        {
            if(a[i][j]=='.')continue;
            if(a[i][j]=='#')continue;
            if(a[i][j]=='S')continue;
            if(a[i][j]=='G')continue;
            func(i,j);
        }
        /*
        for(i=1;i<=r;i++)
        {
            for(j=1;j<=c;j++)cout<<x[i][j]<<" ";
            cout<<endl;
        }
        */
        printf("Case #%d: ",t);
        for(cnt=1;chk;cnt++)
        {
            chk=0;
            for(i=1;i<=r;i++)for(j=1;j<=c;j++)
            {
                //cout<<"          "<<i<<" "<<j<<" "<<x[i][j]<<endl;
                if(x[i][j]==cnt)
                {
                    if(block[i][j]==-1)
                    {
                        //cout<<i<<" "<<j<<" "<<x[i][j]<<" "<<cnt<<endl;
                        printf("%d\n",cnt-1);
                        cnt=1;
                        chk=-1;
                    }
                    else
                    {
                        chk+=check(i-1,j);
                        chk+=check(i,j-1);
                        chk+=check(i+1,j);
                        chk+=check(i,j+1);
                    }
                }
                if(chk==-1)i=r,j=c;
            }
//for(i=1;i<=r;i++)
//{
//for(j=1;j<=c;j++)cout<<x[i][j]<<" ";
//cout<<endl;
//}
//cout<<"                      "<<chk<<endl;
            if(chk==-1)chk=0;
            else if(chk==0||cnt>1000)printf("impossible\n"),chk=0;
        }
    }
}
