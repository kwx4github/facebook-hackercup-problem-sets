import copy
t=input()
def las(board):
    laser=[]
    for x in range(0,len(board)):
        for y in range(0,len(board[0])):
            if board[x][y]=='<':
                laser.append([x,y,0])
            elif board[x][y]=='^':
                laser.append([x,y,1])
            elif board[x][y]=='>':
                laser.append([x,y,2])
            elif board[x][y]=='v':
                laser.append([x,y,3])
    return laser
def a1(ar,st,lase):
    if st[1]<lase[1]:
        for x in range(st[1]+1,lase[1]):
            if ar[st[0]][x]=='#':
                return 0
        return 1
    else:
        for x in range(lase[1],st[1]+1):
            if ar[st[0]][x]=='#':
                return 0
        return 1
def a2(ar,st,lase):
    if st[0]<lase[0]:
        for x in range(st[0]+1,lase[0]):
            if ar[x][st[1]]=="#":
                return 0
        return 1
    else:
        for x in range(lase[0]+1,st[0]):
            if ar[x][st[1]]=="#":
                return 0
        return 1
def laserprogress(laser):
    for x in range(0,len(laser)):
        laser[x][2]+=1
    return laser
def stgo(ar):
    st=[]
    for x in range(0,len(ar)):
        for y in range(0,len(ar[0])):
            if ar[x][y]=='S':
                st.append(x)
                st.append(y)
                return st
for x in range(0,t):
    mn=map(int,raw_input().split())
    board=[]
    lasers=[]
    matr=[[],[],[],[]]
    for y in range(0,mn[0]):
        board.append(raw_input())
        temp1=[0]*mn[1]
        for z in range(0,mn[1]):
            if board[-1][z]=='#' or board[-1][z]=='<' or board[-1][z]=='>' or board[-1][z]=='^' or board[-1][z]=='v':
                temp1[z]=2
            elif board[-1][z]=='G':
                temp1[z]=3
        matr[0].append(copy.deepcopy(temp1))
        matr[1].append(copy.deepcopy(temp1))
        matr[2].append(copy.deepcopy(temp1))
        matr[3].append(copy.deepcopy(temp1))
    
##    p=''
##    for y in range(0,mn[0]-1):
##        p=p+'.'
##    board.append("S"+p)
##    for y in range(0,mn[0]-2):
##        board.append(p+".")
##    board.append(p+"G")
    lasers=las(board)
    for qac in range(0,4):
        for zs in range(0,mn[0]):
            for zx in range(0,mn[1]):
                for z in range(0,len(lasers)):
                    if matr[qac][zs][zx]==0 or matr[qac][zs][zx]==3:
                        if lasers[z][2]%4==1 and zx==lasers[z][1] and zs<lasers[z][0] and a2(board,[zs,zx],lasers[z])==1:
                            matr[qac][zs][zx]=1
                            break
                        elif lasers[z][2]%4==2 and zs==lasers[z][0] and zx>lasers[z][1] and a1(board,[zs,zx],lasers[z])==1:
                            matr[qac][zs][zx]=1
                            break
                        elif lasers[z][2]%4==3 and zx==lasers[z][1] and zs>lasers[z][0] and a2(board,[zs,zx],lasers[z])==1:
                            matr[qac][zs][zx]=1
                            break
                        elif lasers[z][2]%4==0 and zs==lasers[z][0] and zx<lasers[z][1] and a1(board,[zs,zx],lasers[z])==1:
                            matr[qac][zs][zx]=1
                            break
        lasers=laserprogress(lasers)

    lasernum=0
    pla=stgo(board)
    pla.append(lasernum)
    total=[pla]
#    lasers=las(board)
    boardset=[pla]
    f1=0
    while boardset!=[]:
        lasernum=boardset[0][2]+1
        start=[boardset[0][0],boardset[0][1]]
        del boardset[0]
        teq=[]
        try:
        #if start[0]!=mn[0]-1:
                if matr[lasernum%4][start[0]+1][start[1]]==0:
                    #del boardset[0]
                    tem=[start[0]+1,start[1],lasernum]
                    fg=0
                    for qa in range(0,len(teq)):
                            if teq[qa][0]==tem[0] and teq[qa][1]==tem[1] and teq[qa][2]%4==tem[2]%4:
                                fg=1
                                break
                    if fg==0:
                        teq.append(copy.deepcopy(tem))
                elif matr[lasernum%4][start[0]+1][start[1]]==3:
                    f1=1
                    break
        except:
            pass
        try:
        #if start[1]!=mn[1]-1:
                if matr[lasernum%4][start[0]][start[1]+1]==0:
                    #del boardset[0]
                    tem=[start[0],start[1]+1,lasernum]
                    fg=0
                    for qa in range(0,len(teq)):
                            if teq[qa][0]==tem[0] and teq[qa][1]==tem[1] and teq[qa][2]%4==tem[2]%4:
                                fg=1
                                break
                    if fg==0:
                        teq.append(copy.deepcopy(tem))
                elif matr[lasernum%4][start[0]][start[1]+1]==3:
                    f1=1
                    break
        except:
            pass
        if start[0]!=0:
                if matr[lasernum%4][start[0]-1][start[1]]==0:
                    #del boardset[0]
                    tem=[start[0]-1,start[1],lasernum]
                    fg=0
                    for qa in range(0,len(teq)):
                            if teq[qa][0]==tem[0] and teq[qa][1]==tem[1] and teq[qa][2]%4==tem[2]%4:
                                fg=1
                                break
                    if fg==0:
                        teq.append(copy.deepcopy(tem))
                elif matr[lasernum%4][start[0]-1][start[1]]==3:
                    f1=1
                    break
        if start[1]!=0:
                if matr[lasernum%4][start[0]][start[1]-1]==0:
                    #del boardset[0]
                    tem=[start[0],start[1]-1,lasernum]
                    fg=0
                    for qa in range(0,len(teq)):
                            if teq[qa][0]==tem[0] and teq[qa][1]==tem[1] and teq[qa][2]%4==tem[2]%4:
                                fg=1
                                break
                    if fg==0:
                        teq.append(copy.deepcopy(tem))
                elif matr[lasernum%4][start[0]][start[1]-1]==3:
                    f1=1
                    break
        fq=0
        for wop in range(0,len(teq)):
            for pop  in range(0,len(total)):
                if teq[wop][0]==total[pop][0] and teq[wop][1]==total[pop][1] and teq[wop][2]%4==total[pop][2]%4:
                    fq=1
                    break
            if fq==0:
                boardset.append(copy.deepcopy(teq[wop]))
                total.append(copy.deepcopy(teq[wop]))
            fq=0
                    
    if f1==1:
        print "Case #"+str(x+1)+": "+str(lasernum)
    else:
        print "Case #"+str(x+1)+": impossible"
