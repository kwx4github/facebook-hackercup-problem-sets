#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ul;
typedef pair<int,int> ii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<ii> vii;

int t,n,m,dir,ok,v,x,y;
char arr[111][111];
int memo[5][111][111];
int vis[5][111][111];
queue<pair<int,ii> > q;
pair<int,ii> cur;

int main(){
	scanf("%d",&t);
	for (int jj=1; jj<=t; jj++){
		scanf("%d%d",&n,&m);
		for (int i=0; i<n; i++){
			scanf("%s",arr[i]);
		}
		memset(memo,0,sizeof memo);
		memset(vis,0,sizeof vis);
		while (!q.empty()) q.pop();
		for (int i=0; i<n; i++){
			for (int j=0; j<m; j++){
				dir = -1;
				if (arr[i][j] == 'S'){
					q.push(pair<int,ii>(0,ii(i,j)));
					vis[0][i][j] = 1;
				}
				if (arr[i][j] == '^'){
					dir = 0;
				} else if (arr[i][j] == '<'){
					dir = 1;
				} else if (arr[i][j] == '>'){
					dir = 3;
				} else if (arr[i][j] == 'v'){
					dir = 2;
				}
				if (dir >= 0){
					for (int k=i-1; k>=0; k--){
						if (arr[k][j] == '.' || arr[k][j] == 'S' || arr[k][j] == 'G'){
							memo[dir][k][j] = 1;
						} else break;
					}
					dir++;
					if (dir == 4) dir = 0;
					for (int k=j+1; k<m; k++){
						if (arr[i][k] == '.' || arr[i][k] == 'S' || arr[i][k] == 'G'){
							memo[dir][i][k] = 1;
						} else break;
					}
					dir++;
					if (dir == 4) dir = 0;
					for (int k=i+1; k<n; k++){
						if (arr[k][j] == '.' || arr[k][j] == 'S' || arr[k][j] == 'G'){
							memo[dir][k][j] = 1;
						} else break;
					}
					dir++;
					if (dir == 4) dir = 0;
					for (int k=j-1; k>=0; k--){
						if (arr[i][k] == '.' || arr[i][k] == 'S' || arr[i][k] == 'G'){
							memo[dir][i][k] = 1;
						} else break;
					}
				}
			}
		}
		ok = 0;
		while (!q.empty()){
			cur = q.front();
			q.pop();
			v = (cur.first+1)%4;
			x = cur.second.first;
			y = cur.second.second;
			if (arr[x][y] == 'G'){
				ok = cur.first;
				break;
			}
			// atas
			if (x > 0){
				if (arr[x-1][y] == '.' || arr[x-1][y] == 'S' || arr[x-1][y] == 'G'){
					if (!memo[v][x-1][y] && !vis[v][x-1][y]){
						vis[v][x-1][y] = 1;
						q.push(pair<int,ii>(cur.first+1,ii(x-1,y)));
					}
				}
			}
			// bawah
			if (x < n-1){
				if (arr[x+1][y] == '.' || arr[x+1][y] == 'S' || arr[x+1][y] == 'G'){
					if (!memo[v][x+1][y] && !vis[v][x+1][y]){
						vis[v][x+1][y] = 1;
						q.push(pair<int,ii>(cur.first+1,ii(x+1,y)));
					}
				}
			}
			// kiri
			if (y > 0){
				if (arr[x][y-1] == '.' || arr[x][y-1] == 'S' || arr[x][y-1] == 'G'){
					if (!memo[v][x][y-1] && !vis[v][x][y-1]){
						vis[v][x][y-1] = 1;
						q.push(pair<int,ii>(cur.first+1,ii(x,y-1)));
					}
				}
			}
			// kanan
			if (y < m-1){
				if (arr[x][y+1] == '.' || arr[x][y+1] == 'S' || arr[x][y+1] == 'G'){
					if (!memo[v][x][y+1] && !vis[v][x][y+1]){
						vis[v][x][y+1] = 1;
						q.push(pair<int,ii>(cur.first+1,ii(x,y+1)));
					}
				}
			}
		}
		printf("Case #%d: ",jj);
		if (ok) printf("%d\n",ok);
		else printf("impossible\n");
	}
	return 0;
}
