

#include <set>
#include <bitset>
#include <queue>
#include <deque>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cstring>
#include <string>
#include <cassert>

#include <vector>
#include <list>
#include <map>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

typedef vector <int> vi;
typedef vector <vi> vvi;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <string> vs;

typedef long long LL; //NOTES:int64
typedef unsigned long long ULL; //NOTES:uint64
typedef unsigned uint;

const double pi = acos(-1.0); //NOTES:pi
const double eps = 1e-11; //NOTES:eps
const int MAXI = 0x7fffffff;
const int dx[] = {1, 0, -1, 0};
const int dy[] = {0, 1, 0, -1};
const char dz[] = "SENW";

#define rep(i,n)        for (int i=0;i<n;i++)
#define loop(i,a,b)     for (int i=(a),_b=(b); i<_b; i++)
#define rloop(i,b,a)    for (int i=(b)-1,_a=(a); i>=_a; i--)
#define Reset(a,b)      memset((a),(b),sizeof(a))

#define endline         putchar('\n')
#define space           putchar(' ')
#define EXIT(x)         {cout << x;return 0;}

#define fi              first
#define se              second
#define pb              push_back

#define S(x)            scanf("%d",&x);
#define input freopen("input.txt","r",stdin);
#define deb(i,a,n) for(i=0;i<n;i++){cout<<a[i]<<" ";}
#define db(x,y)          printf("%d %d\n",x,y);
#define debug(args...)	{dbg,args; cerr<<endl;}
#define dline			cerr<<endl
#define INF				(int)1e9
#define LINF			(long long)1e18
#define EPS				1e-9
#define maX(a,b)		((a)>(b)?(a):(b))
#define miN(a,b)		((a)<(b)?(a):(b))
#define abS(x)			((x)<0?-(x):(x))
#define mod             1000000007

struct debugger
{
	template<typename T> debugger& operator , (const T& v)
	{
		cerr<<v<<" ";
		return *this;
	}
} dbg;

void debugarr(long long * arr,int n)
{
	cout<<"[";
	for(int i=0;i<n;i++)
		cout<<arr[i]<<" ";
	cout<<"]"<<endl;
}
bool a[100][100],b[100][100],c[100][100],d[100][100],v[4][110][110];
vector <pair<int,int> > v1,v2,v3,v4;
char str[110][110];
int answer = -1;
void bfs(int si,int sj,int m,int n) {
    int steps = 0,x,y,s;
    queue< pair< int,pair< int,int > > > q;
    pair<int,pair<int,int> > p;
    pair<int,int> pp;
    q.push(make_pair(0,make_pair(si,sj)));
    v[0][si][sj]=true;
    while(!q.empty()) {
        p = q.front();
        pp = p.second;
        steps = p.first;
        x = pp.first;
        y = pp.second;
        steps++;
        s = steps%4;
        q.pop();
        for(int i=0;i<4;i++) {
            if(x+dx[i]<m&&x+dx[i]>=0&&y+dy[i]<n&&y+dy[i]>=0 && str[x+dx[i]][y+dy[i]]!='#' && !v[s][x+dx[i]][y+dy[i]] && str[x+dx[i]][y+dy[i]]!='<' && str[x+dx[i]][y+dy[i]]!='^' && str[x+dx[i]][y+dy[i]]!='>' && str[x+dx[i]][y+dy[i]]!='v') {
                v[s][x+dx[i]][y+dy[i]] = true;
             if(s==1) {

                if(!a[x+dx[i]][y+dy[i]]) {
                    if(str[x+dx[i]][y+dy[i]]=='G') {
                        answer = steps;
                        return;
                    }
                    q.push(make_pair(steps,make_pair(x+dx[i],y+dy[i])));
                }
            } else if(s==2) {
                if(!b[x+dx[i]][y+dy[i]]) {
                    if(str[x+dx[i]][y+dy[i]]=='G') {
                        answer = steps;
                        return;
                    }
                    q.push(make_pair(steps,make_pair(x+dx[i],y+dy[i])));
                }

            } else if(s==3) {
                if(!c[x+dx[i]][y+dy[i]]) {
                    if(str[x+dx[i]][y+dy[i]]=='G') {
                        answer = steps;
                        return;
                    }
                    q.push(make_pair(steps,make_pair(x+dx[i],y+dy[i])));
                }

            } else {
                if(!d[x+dx[i]][y+dy[i]]) {
                    if(str[x+dx[i]][y+dy[i]]=='G') {
                        answer = steps;
                        return;
                    }
                    q.push(make_pair(steps,make_pair(x+dx[i],y+dy[i])));
                }

            }
         }

        }
    }
}

int main()
{
// #ifndef ONLINE_JUDGE
//     input;
//     freopen("output2.txt","w",stdout);
// #endif
    int i,j,k,l,t,n,m,x,y;
    bool f = false;
    S(t);
    for(int it =0;it<t;it++) {
        Reset(a,false);
        Reset(b,false);
        Reset(c,false);
        Reset(d,false);
        Reset(v,false);
        v1.clear();
        v2.clear();
        v3.clear();
        v4.clear();
        answer = -1;
        S(m);S(n);
        for(i=0;i<m;i++){
            cin>>str[i];
        }
        // bool p=0,q=0,r=0,s=0;
        //////////////
        for(i=0;i<m;i++) {
            for(j=0;j<n;j++) {
                if(str[i][j]=='>') {
                    v1.push_back(make_pair(i,j));
                } else if(str[i][j]=='v') {
                    v2.push_back(make_pair(i,j));
                } else if(str[i][j]=='<') {
                    v3.push_back(make_pair(i,j));
                } else if(str[i][j]=='^'){
                    v4.push_back(make_pair(i,j));
                }
            }
        }
        // cout<<v4[0].first<<' '<<v4[0].second<<endl;
        for(i=0;i<v1.size();i++){
            x = v1[i].first;
            y = v1[i].second;
            bool p = 1;
            for(j=x-1;j>=0;j--) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    c[j][y] |= p;
                }
            }
            for(j=x+1;j<m;j++) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    a[j][y] |= p;
                }
            }
            for(j=y-1;j>=0;j--) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    b[x][j] |= p;
                }
            }
            for(j=y+1;j<n;j++) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    d[x][j] |= p;
                }
            }
        }

        for(i=0;i<v2.size();i++){
            x = v2[i].first;
            y = v2[i].second;
            bool p = 1;
            for(j=x-1;j>=0;j--) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    b[j][y] |= p;
                }
            }
            for(j=x+1;j<m;j++) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    d[j][y] |= p;
                }
            }
            for(j=y-1;j>=0;j--) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    a[x][j] |= p;
                }
            }
            for(j=y+1;j<n;j++) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    c[x][j] |= p;
                }
            }
        }

        for(i=0;i<v3.size();i++){
            x = v3[i].first;
            y = v3[i].second;
            bool p = 1;
            for(j=x-1;j>=0;j--) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    a[j][y] |= p;
                }
            }
            for(j=x+1;j<m;j++) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    c[j][y] |= p;
                }
            }
            for(j=y-1;j>=0;j--) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    d[x][j] |= p;
                }
            }
            for(j=y+1;j<n;j++) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    b[x][j] |= p;
                }
            }
        }

        for(i=0;i<v4.size();i++){
            x = v4[i].first;
            y = v4[i].second;
            bool p = 1;
            for(j=x-1;j>=0;j--) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    d[j][y] |= p;
                }
            }
            for(j=x+1;j<m;j++) {
                if(str[j][y]=='#') {
                    p = 0;
                } else {
                    b[j][y] |= p;
                }
            }
            for(j=y-1;j>=0;j--) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    c[x][j] |= p;
                }
            }
            for(j=y+1;j<n;j++) {
                if(str[x][j]=='#') {
                    p = 0;
                } else {
                    a[x][j] |= p;
                }
            }
        }
      

        // debug(a[1][1],b[1][1],c[1][1],d[1][1])

        for(i=0;i<m;i++) {
            for(j=0;j<n;j++) {
                if(str[i][j]=='S') {
                    bfs(i,j,m,n);
                }
            }
        }

        if(answer == -1) {
            printf("Case #%d: impossible\n",it+1);
        } else {
            printf("Case #%d: %d\n",it+1,answer);
        }

    }
   

 return 0;

}