#include<iostream>
#include<sstream>
#include<vector>
#include<queue>

using namespace std;

typedef vector <vector <vector <int> > > vvvi;
typedef vector <vector <int> > vvi;
typedef pair< pair<int, int>, pair<int, int> > ppi;

int N, M;
int Gx, Gy, Sx, Sy;

void shootLaser(vvi &maze, int x, int y, int laser){
	int i, j;
	maze[x][y]='#';
	switch(laser){
		case 0:
			for(i=x-1;i>=0;i--){
				if(maze[i][y]=='.'){
					maze[i][y]='#';
				} else {
					break;
				}
			}
			break;
		case 2:
			for(i=x+1;i<N;i++){
				if(maze[i][y]=='.'){
					maze[i][y]='#';
				} else {
					break;
				}
			}
			break;
		case 3:
			for(j=y-1;j>=0;j--){
				if(maze[x][j]=='.'){
					maze[x][j]='#';
				} else {
					break;
				}
			}
			break;
		case 1:
			for(j=y+1;j<M;j++){
				if(maze[x][j]=='.'){
					maze[x][j]='#';
				} else {
					break;
				}
			}
			break;
	}
}

void expandLasers(vvi &maze, int mod){
	for(int i=0;i<N;i++){
		for(int j=0;j<M;j++){
			if(maze[i][j] < 4){
				int laser = (maze[i][j] + mod) % 4;
				shootLaser(maze, i, j, laser);
			}
		}
	}
}

int main(){
	int T; cin>>T;
	for(int t=1;t<=T;t++){
		cin>>N>>M;
		vvvi maze(4);
		maze[0].resize(N);
		for(int i=0;i<N;i++){
			maze[0][i].resize(M);
			string ss; cin>>ss;
			for(int j=0;j<M;j++){
				maze[0][i][j] = ss[j];
				switch (maze[0][i][j]){
					case '^': maze[0][i][j] = 0; break;
					case '>': maze[0][i][j] = 1; break;
					case 'v': maze[0][i][j] = 2; break;
					case '<': maze[0][i][j] = 3; break;
					case 'G': maze[0][i][j] = '.'; Gx=i; Gy=j; break;
					case 'S': maze[0][i][j] = '.'; Sx=i; Sy=j; break;
				}	
			}
		}
		maze[1] = maze[2] = maze[3] = maze[0];
		for(int i=0;i<4;i++) expandLasers(maze[i], i);

		int result = -1;
		queue<ppi> q;
		ppi u, v = make_pair(make_pair(0, 0), make_pair(Sx, Sy));
		q.push(v);
		maze[0][Sx][Sy]='.';
		//cout<<Sx<<" "<<Sy<<"   "<<Gx<<' '<<Gy<<endl;
		while(!q.empty()){
			v = q.front();
			q.pop();
			int l=v.first.first, x=v.second.first, y=v.second.second;
			//cout<<x<<' '<<y<<endl;
			if (x>=N || y>=M || x<0 || y<0 || maze[l][x][y]!='.') continue;
			maze[l][x][y] = 'x';
			if (x==Gx && y==Gy){
				result = v.first.second;
				break;
			}
			
			v.first.first = (v.first.first + 1) % 4;
			v.first.second++;
			u = v; u.second.first--; q.push(u);
			u = v; u.second.first++; q.push(u);
			u = v; u.second.second--; q.push(u);
			u = v; u.second.second++; q.push(u);
		}
		cout<<"Case #"<<t<<": ";
		if (result<0){
			cout<<"impossible";
		} else { 
			cout<<result;
		}
		cout<<endl;
		//break;
	}
	return 0;
}
