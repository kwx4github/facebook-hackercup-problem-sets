#include <iostream>
#include <fstream>
#include <string>
#include <vector>
using namespace std;
#define maxn 101
#define maxa 1000000
int t, answer=maxa, n, m;
int x[]={-1, 0, 1, 0}, y[]={0, 1, 0, -1};
struct mm
{
    int loc, nr;
    int v[4];
} maze[maxn][maxn];
int lee[maxn][maxn];
int viz[maxn][maxn];
int gx, gy, sx, sy;
void deep(int i, int j, int ans)
{
    if (i<=0 || i>n || j<=0 || j>m) return;
    if (viz[i][j]<ans-4) return;
    else if (viz[i][j]>ans) viz[i][j]=ans;
    if (lee[i][j]>=4) return;
    int k;
    for (k=1;k<=maze[i][j].nr;k++)
    if (maze[i][j].v[k]==ans%4) return;
    lee[i][j]++;
    if (i==gx && j==gy) if (answer>ans) answer=ans;
    for (k=0;k<=3;k++)
        if (maze[i+x[k]][j+y[k]].loc>=0 && lee[i+x[k]][j+y[k]]<4) {deep(i+x[k], j+y[k], ans+1);}

   lee[i][j]--;
}
int main()
{
    ifstream r("lm.in");
    ofstream w("lm.txt");
    r>>t;
    int i, j, k, l, aux, aux2;
    char c;
    for (i=1;i<=t;i++)
    {
        r>>n>>m;

        for (j=1;j<=n;j++)
        {
            maze[j][0].loc=-1;
            maze[j][m+1].loc=-1;
        }
        for (j=1;j<=m;j++)
        {
            maze[0][j].loc=-1;
            maze[n+1][j].loc=-1;
        }
        for (j=1;j<=n;j++)
            for (k=1;k<=m;k++)
            {
                r>>c;
                maze[j][k].loc=4;
                lee[j][k]=0;
                if (c=='S') {maze[j][k].loc=4; sx=j; sy=k;}
                if (c=='G') {maze[j][k].loc=4; gx=j; gy=k;}
                if (c=='^') maze[j][k].loc=-1;
                if (c=='>') maze[j][k].loc=-2;
                if (c=='v') maze[j][k].loc=-3;
                if (c=='<') maze[j][k].loc=-4;
                if (c=='#') maze[j][k].loc=-5;
                if (c=='.') maze[j][k].loc=4;
            }
        for (j=1;j<=n;j++)
            for (k=1;k<=m;k++)
                if (maze[j][k].loc<0 && maze[j][k].loc!=-5)
                    for (l=0;l<=3;l++)
                    {
                        aux=1;
                        while (maze[j+aux*x[l]][k+aux*y[l]].loc==4)
                        {aux2=++maze[j+aux*x[l]][k+aux*y[l]].nr;
                        maze[j+aux*x[l]][k+aux*y[l]].v[aux2]=(4+maze[j][k].loc+1+l)%4; aux++;
                        }
                    }


        for (l=0;l<=3;l++)
            {
                for (j=1;j<=n;j++)
                    for (k=1;k<=m;k++) lee[j][k]=0;
               // for (j=1;j<=n;j++)
                //    for (k=1;k<=m;k++) viz[j][k]=maxa;
                if (maze[sx+x[l]][sy+y[l]].loc>=0) deep(sx+x[l], sy+y[l], 1);
            }
        if (answer<maxa) w<<"Case #"<<i<<": "<<answer<<'\n';
        else w<<"Case #"<<i<<": impossible\n";
        answer=maxa;
        for (j=1;j<=n;j++)
            for (k=1;k<=m;k++) maze[j][k].nr=0;
    }
}
