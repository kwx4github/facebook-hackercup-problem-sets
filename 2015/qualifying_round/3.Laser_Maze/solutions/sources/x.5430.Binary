#include <stdio.h>
#include <stdlib.h>

char next_maze[100][100];

int goMaze(int M, int N, char maze[100][100]) {
	int res = 0;
	do {
	int isLive = 0;
	for (int m=0;m<M;m++ ){
		for (int n = 0;n<N;n++) {
			char cur = maze[m][n];
			if (cur == 'T') return res;
			char next = cur;
			switch (cur) {
			//turn the laser
			case '^': next = '>'; break;
			case '>': next = 'v'; break;
			case 'v': next = '<'; break;
			case '<': next = '^'; break;
			//move out
			case 'S': next = '.'; break;
			}
			if (cur == 'S') { //move 4 directions
				isLive = 1; //still alive
				if (m > 0) {
					if (maze[m-1][n]=='G') next_maze[m-1][n]='T';
					if (maze[m-1][n]=='.'||maze[m-1][n]=='S') next_maze[m-1][n]='S';
				}
				if (m+1 < M) {
					if (maze[m+1][n]=='G') next_maze[m+1][n]='T';
					if (maze[m+1][n]=='.'||maze[m+1][n]=='S') next_maze[m+1][n]='S';
				}
				if (n+1 < N) {
					if (maze[m][n+1]=='G') next_maze[m][n+1]='T';
					if (maze[m][n+1]=='.'||maze[m][n+1]=='S') next_maze[m][n+1]='S';
				}
				if (n > 0) {
					if (maze[m][n-1]=='G')  next_maze[m][n-1]='T';
					if (maze[m][n-1]=='.'||maze[m][n-1]=='S') next_maze[m][n-1]='S';
				}
			}
			if (next == '.') {
				if (m>0 && maze[m-1][n]=='S') next = 'S';
				if (n>0 && maze[m][n-1]=='S') next = 'S';
			}
			if (next == 'G') {
				if (m>0 && maze[m-1][n]=='S') next = 'T';
				if (n>0 && maze[m][n-1]=='S') next = 'T';
			}
			next_maze[m][n] = next;
		}
	}
	if (isLive == 0) return 0;
	//copy
	for (int m=0;m<M;m++ ){
		for (int n = 0;n<N;n++) {
			maze[m][n]=next_maze[m][n];
		}
	}
	//shoot laser
	for (int m=0;m<M;m++ ){
		for (int n = 0;n<N;n++) {
			char cur = maze[m][n];
			switch (cur) {
			case '^': 
				for (int mm = m-1; mm>=0; mm--) {
					if (maze[mm][n]=='.'||maze[mm][n]=='S') maze[mm][n]='.';
					else if (maze[mm][n]=='T') maze[mm][n] = 'G';
					else break;
				}
			break;
			case '>': 
				for (int nn = n+1; nn<N; nn++) {
					if (maze[m][nn]=='.'||maze[m][nn]=='S') maze[m][nn]='.';
					else if (maze[m][nn]=='T') maze[m][nn] = 'G';
					else break;
				}
			break;
			case 'v':
				for (int mm = m+1; mm<M; mm++) {
					if (maze[mm][n]=='.'||maze[mm][n]=='S') maze[mm][n]='.';
					else if (maze[mm][n]=='T') maze[mm][n] = 'G';
					else break;
				}
			break;
			case '<':
				for (int nn = n-1; nn>=0; nn--) {
					if (maze[m][nn]=='.'||maze[m][nn]=='S') maze[m][nn]='.';
					else if (maze[m][nn]=='T') maze[m][nn] = 'G';
					else break;
				}
			break;
			}
		}
	}
	res ++;
	}while (res <= M*N*4);
	return 0;
}

int main(int argc, char * argv[]) {
	int T;
	char maze[100][100];
	scanf("%d", &T);
	for (int i = 0; i < T; i++) {
		int M, N;
		scanf("%d %d", &M, &N);
		//printf("M, N=%d, %d\n", M, N);
		for (int j=0; j<M;j++) {
			scanf("%s", maze[j]);
			//printf("maze[%d]=%s\n", maze[j]);
		}
		int res = goMaze(M, N, maze);
		printf("Case #%d: ", i+1);
		if (res >0) printf("%d\n", res);
		else printf("impossible\n");
	}
	return 0;
}