#include <stdio.h>
#include <string.h>
char p[110][110] = {0,};
bool imp[110][110][4] = {0,};
char ob[6] = "#<>^v";
int q[50000][4] = {0,};
bool ch[110][110][4] = {0,};
int dr[4][2] = {-1, 0, 0, -1, 0, 1, 1, 0};
int main(){
	int T;
	scanf("%d", &T);
	int tt;
	for(tt = 1; tt <= T; tt++){
		int m, n;
		scanf("%d%d", &m, &n);
		int i, j, k, l;
		for(i = 0; i < m; i++) scanf("%s", p[i]);
		int sx, sy;
		for(i = 0; i < m; i++){
			for(j = 0; j < n; j++){
				if(p[i][j] == 'S'){
					sx = i;
					sy = j;
				}
				int d;
				if(p[i][j] == '#'){
					for(k = 0; k < 4; k++) imp[i][j][k] = true;
					continue;
				}
				else if(p[i][j] == '<'){
					d = 0;
				}
				else if(p[i][j] == '>'){
					d = 2;
				}
				else if(p[i][j] == '^'){
					d = 1;
				}
				else if(p[i][j] == 'v'){
					d = 3;
				}
				else continue;
				for(k = 0; k < 4; k++){
					imp[i][j][k] = true;
					if(d == 0){
						for(l = j - 1; l >= 0; l--){
							if(strchr(ob, p[i][l])) break;
							imp[i][l][k] = true;
						}
					}
					if(d == 1){
						for(l = i - 1; l >= 0; l--){
							if(strchr(ob, p[l][j])) break;
							imp[l][j][k] = true;
						}
					}
					if(d == 2){
						for(l = j + 1; l < n; l++){
							if(strchr(ob, p[i][l])) break;
							imp[i][l][k] = true;
						}
					}
					if(d == 3){
						for(l = i + 1; l < m; l++){
							if(strchr(ob, p[l][j])) break;
							imp[l][j][k] = true;
						}
					}
					d = (d + 1) % 4;
				}
			}
		}
		int qs, qe;
		q[0][0] = sx;
		q[0][1] = sy;
		q[0][2] = 0;
		q[0][3] = 0;
		ch[sx][sy][0] = true;
		qe = 1;
		int ans = -1;
		for(qs = 0; qs < qe; qs++){
			if(p[q[qs][0]][q[qs][1]] == 'G'){
				ans = q[qs][3];
				break;
			}
			for(i = 0; i < 4; i++){
				int nx = q[qs][0] + dr[i][0];
				int ny = q[qs][1] + dr[i][1];
				int nt = (q[qs][2] + 1) % 4;
				if(nx >= 0 && nx < m && ny >= 0 && ny < n && !ch[nx][ny][nt] && !imp[nx][ny][nt]){
					q[qe][0] = nx;
					q[qe][1] = ny;
					q[qe][2] = nt;
					q[qe][3] = q[qs][3] + 1;
					ch[nx][ny][nt] = true;
					qe++;
				}
			}
		}
		printf("Case #%d: ", tt);
		if(ans == -1) puts("impossible");
		else printf("%d\n", ans);
		for(i = 0; i < m; i++){
			for(j = 0; j < n; j++){
				for(k = 0; k < 4; k++){
					imp[i][j][k] = false;
					ch[i][j][k] = false;
				}
			}
		}
	}
	return 0;
}
