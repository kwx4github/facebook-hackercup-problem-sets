#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <bits/stdc++.h>
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(i,n) for(int i = 0; i < (int)(n); ++ i)
#define for1(i,n) for(int i = 1; i <= (int)(n); ++ i)
#define fore(i,a,b) for(int i = (int)(a); i <= (int)(b); ++ i)
#define ford(i,n) for(int i = (int)(n)-1; i >= 0; -- i)
#define ford1(i,n) for(int i = (int)(n); i >= 1; -- i)
#define fored(i,a,b) for(int i = (int)(b); i >= (int)(a);--i)
#define mp make_pair 
#define pb push_back
#define sz(v) ((int)((v).size()))
#define all(v) (v).begin(), (v).end()
#define FOR(i, n) for (int i = 0; i < (n); ++i)
#define forit(i,s,f) for(vector<int>::iterator it = s;it!=f; ++it) 

//#define fi first
//#define se second

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double LD;
typedef long long i64;
typedef unsigned long long u64;
typedef long double ld;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef pair<LL, LL> pll;
typedef vector<pii> vpi;
typedef vector<ld> vd;
typedef pair<ld, ld> pdd;
typedef vector<pdd> vpd;
typedef pair<pdd, pdd> segment;
///////////////////////////////////////////////////////////
const int N = 100 + 7;
char a[4][N][N];
int n, m;
bool unsafe[4][N][N];
int tox[] = { 1, 0, -1, 0 };
int syu[] = { 0, 1, 0, -1 };
struct state{
	int tox, syu,clock;
};
int ans[4][N][N];
void clear()
{
	FOR(i, 4)FOR(j, N) FOR(k, N)
	{
		unsafe[i][j][k] = false;
		a[i][j][k] = 0;
		ans[i][j][k] = -1;
	}
}
void sol()
{
	state sk,G;
	scanf("%d%d",&n,&m);
	FOR(i, n) scanf("%s", a[0][i]);
	for1(i, 3) FOR(j, n) FOR(k, m)
		{
			a[i][j][k] = a[i - 1][j][k];
			if (a[i][j][k] == 'S')
			{
				sk.tox = j;
				sk.syu = k;
				sk.clock = 0;
			}
			if (a[i][j][k] == 'G')
			{
				G.tox = j;
				G.syu = k;
				G.clock = 0;
			}
			if (a[i][j][k] == '>') 
			{
				a[i][j][k] = 'v'; 
				continue;
			}
			if (a[i][j][k] == 'v') 
			{
				a[i][j][k] = '<';
				continue;
			}
			if (a[i][j][k] == '<') 
			{
				a[i][j][k] = '^';
				continue;
			}
			if (a[i][j][k] == '^') 
			{
				a[i][j][k] = '>';
				continue;
			}
		}
	FOR(i,4)
	{
		FOR(j, n) FOR(k, m)
		{
			int ux=-1;
			if (a[i][j][k] == '>') ux = 1;
			if (a[i][j][k] == 'v') ux = 0;
			if (a[i][j][k] == '<') ux = 3;
			if (a[i][j][k] == '^') ux = 2;
			if (ux == -1) continue;
			int tt = j, ts = k;
			while (1)
			{
				tt += tox[ux];
				ts += syu[ux];
				if (tt >= n || tt < 0 || ts >= m || ts < 0) break;
				if (a[0][tt][ts]!='.' && a[0][tt][ts]!='G' && a[0][tt][ts]!='S') break;
				unsafe[i][tt][ts] = true;
			}
		}
	}
	queue<state> Q;
	ans[sk.clock][sk.tox][sk.syu] = 0;
	Q.push(sk);
	while (!Q.empty())
	{
		state st = Q.front();
		Q.pop();
		FOR(i, 4)
		{
			state tmp = st;
			tmp.clock = (tmp.clock + 1) % 4;
			tmp.syu += syu[i];
			tmp.tox += tox[i];
			if (tmp.tox >= n || tmp.tox < 0 || tmp.syu >= m || tmp.syu < 0)  continue;
			if (ans[tmp.clock][tmp.tox][tmp.syu] != -1) continue;
			if (unsafe[tmp.clock][tmp.tox][tmp.syu]) continue;
			if (a[tmp.clock][tmp.tox][tmp.syu] == 'S' ||
				a[tmp.clock][tmp.tox][tmp.syu] == 'G' ||
				a[tmp.clock][tmp.tox][tmp.syu] == '.')
			{
				ans[tmp.clock][tmp.tox][tmp.syu] = ans[st.clock][st.tox][st.syu] + 1;
				Q.push(tmp);
			}
		}
	}
	int an = 100000000;
	FOR(i, 4) if (ans[i][G.tox][G.syu] >= 0) an = min(an, ans[i][G.tox][G.syu]);
	if (an == 100000000) printf("impossible\n");
	else printf("%d\n", an);
}

void solve()
{
	string S;
	int T;
	scanf("%d", &T);
	for1(tt, T)
	{
		printf("Case #%d: ", tt);
		clear();
		sol();
	}
}




///////////////////////////////////////////////////////////
void testgen(){
	FILE * f = fopen("input.txt", "w");
	int n = 500000;
	fprintf(f, "%d\n", n);
	//  srand(time(NULL));
	fclose(f);
}
int main() {
#ifdef HOME
	//  testgen();
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#define task "gold"
	//  freopen("input.txt", "r", stdin);
	//  freopen("output.txt", "w", stdout);
	//  freopen(task".in", "r", stdin);
	//  freopen(task".out", "w", stdout);
#endif

	cout << fixed;
	cout.precision(10);
	cerr << fixed;
	cerr.precision(3);

	solve();

#ifdef HOME
	cerr << "Execution time = " << clock() / 1000.0 << "ms\n";
#endif
	return 0;
}