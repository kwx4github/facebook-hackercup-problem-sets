#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int t;
int m, n;
string r[111];
int h[4][111][111];
int z[4][111][111];

char muuta(char t) {
    if (t == '^') return '>';
    if (t == '>') return 'v';
    if (t == 'v') return '<';
    if (t == '<') return '^';
}

int etsi(int y, int x, int dy, int dx, char t) {
    while (true) {
        y += dy; x += dx;
        if (y < 0 || x < 0 || y >= m || x >= n) return -1;
        if (r[y][x] == '#') return -1;
        if (r[y][x] == '.') continue;
        char u = r[y][x];
        int c = 0;
        while (u != t) {u = muuta(u); c++;}
        return c;
    }
}

vector<pair<pair<int,int>,int>> v;

void lisaa(int y, int x, int p, int c, int q) {
    if (y < 0 || x < 0 || y >= m || x >= n) return;
    if (q && h[p][y][x]) return;
    if (z[p][y][x] != -1) return;
    z[p][y][x] = c;
    v.push_back(make_pair(make_pair(y,x),p));
}

void solve(int x) {
    cin >> m >> n;
    for (int i = 0; i < m; i++) cin >> r[i];
    int gy, gx, sy, sx;
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            if (r[i][j] == 'G') {gy = i; gx = j; r[i][j] = '.';}
            if (r[i][j] == 'S') {sy = i; sx = j; r[i][j] = '.';}
            for (int k = 0; k < 4; k++) h[k][i][j] = 0;
            for (int k = 0; k < 4; k++) z[k][i][j] = -1;
        }
    }
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            if (r[i][j] != '.') continue;
            int u;
            u = etsi(i, j, 0, -1, '>');
            if (u != -1) h[u][i][j] = 1;
            u = etsi(i, j, 0, 1, '<');
            if (u != -1) h[u][i][j] = 1;
            u = etsi(i, j, -1, 0, 'v');
            if (u != -1) h[u][i][j] = 1;
            u = etsi(i, j, 1, 0, '^');
            if (u != -1) h[u][i][j] = 1;
        }
    }
    v.clear();
    lisaa(sy, sx, 0, 0, 0);
    cout << "Case #" << x << ": ";
    for (int i = 0; i < v.size(); i++) {
        int uy = v[i].first.first;
        int ux = v[i].first.second;
        int up = v[i].second;
        int uc = z[up][uy][ux];
        if (uy == gy && ux == gx) {
            cout << uc << "\n";
            return;
        }
        lisaa(uy-1, ux, (up+1)%4, uc+1, 1);
        lisaa(uy+1, ux, (up+1)%4, uc+1, 1);
        lisaa(uy, ux-1, (up+1)%4, uc+1, 1);
        lisaa(uy, ux+1, (up+1)%4, uc+1, 1);
    }
    cout << "impossible\n";
}

int main() {
    cin >> t;
    for (int i = 0; i < t; i++) solve(i+1);
}
