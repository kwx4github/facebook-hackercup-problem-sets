#include <cstdio>
#include <cstring>
#include <queue>
#include <algorithm>
#define ff first
#define ss second
using namespace std;
typedef pair<int,int> ii;
typedef pair<ii,ii> iiii;
int t,r,c;
char grid[105][105];
int dx[]={0,-1,0,1};
int dy[]={-1,0,1,0};
int startx,starty,endx,endy;
bool visited[105][105][10];
queue <iiii> q;
void upd(int x, int y, int z, int d){
	for(;;){
		x+=dx[d],y+=dy[d];
		if(x<0||x>=r||y<0||y>=c) break;
		if(grid[x][y]=='.'||grid[x][y]=='S'||grid[x][y]=='G') visited[x][y][z]=1;
		else break;
	}
}
int main(){
	scanf("%d",&t);
	for(int a=1;a<=t;a++){
		printf("Case #%d: ",a);
		memset(visited,0,sizeof(visited));
		scanf("%d %d",&r,&c);
		for(int x=0;x<r;x++) scanf("%s",grid[x]);
		for(int x=0;x<r;x++){
			for(int y=0;y<c;y++){
				if(grid[x][y]=='.') continue;
				if(grid[x][y]=='S') startx=x,starty=y;
				else if(grid[x][y]=='G') endx=x,endy=y;
				else if(grid[x][y]=='#'){for(int z=0;z<4;z++) visited[x][y][z]=1;}
				else{
					int d;
					switch(grid[x][y]){
						case '<':
						d=0;break;
						case '^':
						d=1;break;
						case '>':
						d=2;break;
						case 'v':
						d=3;break;
					}
					for(int z=0;z<4;z++) upd(x,y,z,(z+d)&3),visited[x][y][z]=1;
				}
			}
		}
		q.push(iiii(ii(startx,starty),ii(0,0)));
		visited[startx][starty][0]=1;
		while(!q.empty()){
			iiii curr=q.front();
			if(curr.ff.ff==endx&&curr.ff.ss==endy){printf("%d\n",curr.ss.ss);break;}
			q.pop();
			curr.ss.ff=(curr.ss.ff+1)&3;
			curr.ss.ss++;
			for(int x=0;x<4;x++){
				int tempx=curr.ff.ff+dx[x],tempy=curr.ff.ss+dy[x];
				if(tempx<0||tempx>=r||tempy<0||tempy>=c) continue;
				if(visited[tempx][tempy][curr.ss.ff]) continue;
				visited[tempx][tempy][curr.ss.ff]=1;
				q.push(iiii(ii(tempx,tempy),curr.ss));
			}
		}
		if(q.empty()) printf("impossible\n");
		while(!q.empty()) q.pop();
	}
	return 0;
}
