#include <cstdio>
#define inboard(a,b) (0 <= a && a < M && 0 <= b && b < N)
#define nonblock(b,c) (a[b][c] == '.' || a[b][c] == 'S' || a[b][c] == 'G')

int M, N;
char a[100][101];
int b[100][100];
int d[128];
int si, sj, gi, gj;
int h, t, q[40000][2];
bool vs[100][100][4];
int di[] = {-1, 0, 1, 0}, dj[] = {0, 1, 0, -1};

int solve() {
	scanf("%d%d", &M, &N);
	for (int i = 0; i < M; i++)
		scanf("%s", a[i]);
	for (int i = 0; i < M; i++)
		for (int j = 0; j < N; j++)
			b[i][j] = 0;
	for (int i = 0; i < M; i++)
		for (int j = 0; j < N; j++) {
			if (a[i][j] == 'S')
				si = i, sj = j;
			if (a[i][j] == 'G')
				gi = i, gj = j;
			if (d[a[i][j]]) {
				int x = d[a[i][j]] - 1;
				for (int k = 0; k < 4; k++)
					for (int ii = i + di[k], jj = j + dj[k]; inboard(ii,jj) && nonblock(ii,jj); ii += di[k], jj += dj[k])
						b[ii][jj] |= 1 << (x + k & 3);
			}
			for (int k = 0; k < 4; k++)
				vs[i][j][k] = false;
		}
	q[0][0] = si;
	q[0][1] = sj;
	h = 0, t = 1;
	for (int ds = 0; h < t; ds++)
		for (int m = t; h < m; h++) {
			if (q[h][0] == gi && q[h][1] == gj)
				return ds;
			for (int i = 0; i < 4; i++) {
				int ii = q[h][0] + di[i];
				int jj = q[h][1] + dj[i];
				if (inboard(ii,jj) && nonblock(ii,jj) && !(1 << (ds & 3) & b[ii][jj]) && !vs[ii][jj][ds & 3]) {
					vs[ii][jj][ds & 3] = true;
					q[t][0] = ii;
					q[t][1] = jj;
					t++;
				}
			}
		}
	return 0;
}

int main() {
	d['<'] = 1;
	d['v'] = 2;
	d['>'] = 3;
	d['^'] = 4;
	int T;
	scanf("%d", &T);
	for (int i = 1; i <= T; i++) {
		int x = solve();
		printf("Case #%d: ", i);
		if (x > 0)
			printf("%d\n", x);
		else
			printf("impossible\n");
	}
}