#include <bits/stdc++.h>
using namespace std;
const int INF=1234567890;

struct LOC{
	int t,x,y;
	LOC(int t_,int x_,int y_):t(t_),x(x_),y(y_) {}
};

int M,N;
char ori[110][110];
char turn_[]="^>v<^";
int dtx[4]={-1, 0, 1, 0};
int dty[4]={ 0, 1, 0,-1};
int d[4][110][110];
queue<LOC> que;

void read_in()
{
	scanf("%d%d",&M,&N);
	while(getchar()!='\n');
	for(int i=1;i<=M;i++)
		gets(ori[i]+1);
}

void turn()
{
	for(int i=1;i<=M;i++)
		for(int j=1;j<=N;j++)
			for(int k=0;k<4;k++)
				if(turn_[k]==ori[i][j])
				{
					ori[i][j]=turn_[k+1];
					break;
				}
}
void init()
{
	fill(d[0][0],d[4][0],-1);
	while(!que.empty())
		que.pop();
	//puts(":)");
	for(int i=0;i<4;i++)
	{
//printf("i=%d\n",i);
		for(int j=1;j<=M;j++)
			for(int k=1;k<=N;k++)
				d[i][j][k]=INF;
		for(int j=1;j<=M;j++)
			for(int k=1;k<=N;k++)
			{
//printf("j=%d,k=%d %c\n",j,k,ori[j][k]);
				if(ori[j][k]=='S')
					if(i==0)
					{
						d[i][j][k]=0;
						que.push(LOC(i,j,k));
					}
					else
						continue;
				else if(ori[j][k]=='.' || ori[j][k]=='G')
					continue;
				else if(ori[j][k]=='#')
					d[i][j][k]=-1;
				else
				{
					d[i][j][k]=-1;
					int x=j,y=k,dx,dy;
					for(int l=0;l<4;l++)
						if(turn_[l]==ori[j][k])
						{
							dx=dtx[l],dy=dty[l];
							break;
						}
					//printf("%d,%d,%d,%d %c\n",x,y,dx,dy,ori[j][k]);
					x+=dx, y+=dy;
					for(;ori[x][y]=='.' || ori[x][y]=='S' || ori[x][y]=='G';x+=dx,y+=dy)
						d[i][x][y]=-1;
				}
			}
		turn();
	}
}

int dx[4]={-1, 0, 1, 0};
int dy[4]={ 0,-1, 0, 1};
int nt[4]={1,2,3,0};

int BFS()
{
	bool begin=1;
	while(!que.empty())
	{
		LOC now=que.front();
		que.pop();
		int t,x,y,dis;
		t=now.t;
		x=now.x;
		y=now.y;
		dis=d[t][x][y]+1;
		if(begin)
			dis=1,begin=0;
		for(int i=0;i<4;i++)
			if(d [nt[t]] [x+dx[i]] [y+dy[i]] > dis)
			{
				if(ori[x+dx[i]][y+dy[i]]=='G')
					return dis;
				d [nt[t]] [x+dx[i]] [y+dy[i]] = dis;
				que.push(LOC(nt[t],x+dx[i],y+dy[i]));
			}
	}
	return -1;
}

int main()
{
	int T;
	scanf("%d",&T);
	for(int testcase=1;testcase<=T;testcase++)
	{
		read_in();
		init();
		
		/*LOC tmp=que.front();
		printf("%d %d %d\n",tmp.t,tmp.x,tmp.y);*/
		int ans=BFS();
		
		/*for(int i=0;i<4;i++,puts(""))
			for(int j=1;j<=M;j++,puts(""))
				for(int k=1;k<=N;k++)
					printf("%11d",d[i][j][k]);*/
		
		printf("Case #%d: ",testcase);
		if(ans==-1)
			puts("impossible");
		else
			printf("%d\n",ans);
	}
	return 0;
}
