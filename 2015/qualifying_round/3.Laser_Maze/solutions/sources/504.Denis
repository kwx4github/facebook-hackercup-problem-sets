/*
    Look at me!
    Look at me!
    Look at how large the monster inside me has become!
*/

#include<fstream>
#include<iostream>
#include<cstdio>
#include<map>
#include<set>
#define FIT(a,b) for(vector<int >::iterator a=b.begin();a!=b.end();a++)
#define FITP(a,b) for(vector<pair<int,int> >::iterator a=b.begin();a!=b.end();a++)
#define RIT(a,b) for(vector<int>::reverse_iterator a=b.end();a!=b.begin();++a)
#include<stack>
#define ROF(a,b,c) for(int a=b;a>=c;--a)
#include<vector>
#include<algorithm>
#define FOR(a,b,c) for(int a=b;a<=c;++a)
#define REP(a,b) for(register int a=0;a<b;++a)
#include<cstring>
#include<bitset>
#include<cmath>
#include<iomanip>
#include<ctime>
#define f cin
#define g cout
#include<queue>
#define debug cerr<<"OK";
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define ll long long
#define ull unsigned long long
#define mod 666013
#define inf 1<<30
#define N 105
#define DIM 10000000
using namespace std;
/*int dx[]={0,0,0,1,-1};
int dy[]={0,1,-1,0,0};*/

vector<pii > di[N*N*10];
int dx[]={0,0,0,1,-1};
int dy[]={0,1,-1,0,0};
int n,m,xs,ys,mad,xd,yd,sol,T,cr,A[4][N][N],B[4][N][N];
char a[N][N];
int ok(int x,int y)
{
    if(x<1||x>n||y<1||y>m)
        return 0;
    if(a[x][y]=='#'||a[x][y]=='^'||a[x][y]=='<'||a[x][y]=='>'||a[x][y]=='v')
        return 0;
    return 1;
}
int main ()
{

    #ifndef ONLINE_JUDGE
    freopen("a.in","r",stdin);
    freopen("a.out","w",stdout);
    #endif

    f>>T;
    FOR(test,1,T)
    {
        f>>n>>m;
        FOR(i,1,n)
        f>>(a[i]+1);


        FOR(i,1,n)
        FOR(j,1,m)
        if(a[i][j]=='<'||a[i][j]=='>'||a[i][j]=='^'||a[i][j]=='v')
        {
            if(a[i][j]=='<')
                cr=0;
            else
            if(a[i][j]=='^')
                cr=3;
            else
            if(a[i][j]=='>')
                cr=2;
            else
                cr=1;

            int xc=i-1;
            int yc=j;
            while(ok(xc,yc))
            {
                A[cr][xc][yc]=1;
                --xc;
            }

            cr++;
            cr%=4;

            xc=i;
            yc=j+1;
            while(ok(xc,yc))
            {
                A[cr][xc][yc]=1;
                ++yc;
            }

            cr++;
            cr%=4;

            xc=i+1;
            yc=j;
            while(ok(xc,yc))
            {
                A[cr][xc][yc]=1;
                ++xc;
            }

            cr++;
            cr%=4;

            xc=i;
            yc=j-1;
            while(ok(xc,yc))
            {
                A[cr][xc][yc]=1;
                --yc;
            }
        }

        FOR(i,1,n)
        FOR(j,1,m)
        if(a[i][j]=='S')
        {
            xs=i;
            ys=j;
        }

        FOR(i,1,n)
        FOR(j,1,m)
        if(a[i][j]=='G')
        {
            xd=i;
            yd=j;
        }

        di[3].pb(mp(xs,ys));
        B[3][xs][ys]=3;
        mad=3;
        FOR(d,3,mad)
        {
            int nexd=d+1;
            FITP(it,di[d])
            {
                int xc=it->fi;
                int yc=it->se;
                FOR(i,1,4)
                {
                    int nx=xc+dx[i];
                    int ny=yc+dy[i];
                    if(!ok(nx,ny))
                        continue;
                    if(B[nexd%4][nx][ny]||A[nexd%4][nx][ny])
                        continue;
                    B[nexd%4][nx][ny]=nexd;
                    di[nexd].pb(mp(nx,ny));
                    mad=max(nexd,mad);
                }
            }
        }
        g<<"Case #"<<test<<": ";
        sol=1<<30;
        FOR(i,0,3)
        if(B[i][xd][yd])
            sol=min(sol,B[i][xd][yd]-3);
        if(sol!=(1<<30))
        g<<sol<<"\n";
        else
        g<<"impossible\n";

        FOR(i,3,mad)
        di[i].clear();

        memset(B,0,sizeof(B));
        memset(A,0,sizeof(A));
    }
    return 0;
}
