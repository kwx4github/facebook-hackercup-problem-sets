#include <bits/stdc++.h>
using namespace std;


int putC(){
	static int cs = 1;
	cout << "Case #" << cs++ << ": ";
}
char c[150][150];

struct NODE{
	int x,y,c;
};

string table = "^>v<";
int dx[] = {0,1,0,-1};
int dy[] = {-1,0,1,0};

int main(){
	int T;
	cin >> T;
	while(T--){
		putC();
		int h,w;
		cin >> h >> w;
		for(int i = 0 ; i < 150 ; i++) for(int j = 0 ; j < 150 ; j++) c[i][j] = '#';
	
		int gx,gy;
		queue<NODE> Q;
		for(int i = 0 ; i < h ; i++){
			for(int j = 0 ; j < w ; j++){
				char d;
				cin >> d;
				if( d == 'S' ){
					d = '.';
					Q.push({j+1,i+1});
				}else if( d == 'G' ){
					d = '.';
					gx = j+1;
					gy = i+1;
				}
				c[i+1][j+1] = d;
			}
		}
		int done[150][150][4] = {};
		while( Q.size() ){
			NODE q = Q.front(); Q.pop();
			
			if( c[q.y][q.x] != '.' ) continue;
			if( done[q.y][q.x][q.c%4]++ ) continue;
			int bad = 0;
			if(q.c)
			for(int i = 0 ; i < 4 ; i++){
				int tx = q.x;
				int ty = q.y;
				while( c[ty][tx] == '.' ){
					tx += dx[i];
					ty += dy[i];
				}
				if( c[ty][tx] != '#' ){
					int f = (table.find(c[ty][tx]) + q.c) % 4;
					//cout << q.x << " " << q.y << " " << q.c << ": " << c[ty][tx] << endl;
					if( (f+2)%4 == i ){
						bad = 1;
					}
				}
			}
			if(bad) continue;
			if( q.x == gx && q.y == gy ){
				cout << q.c << endl;
				goto exit;
			}
			for(int i = 0 ; i < 4 ; i++)
				Q.push({q.x+dx[i],q.y+dy[i],q.c+1});
		}
		cout << "impossible" << endl;
		exit:;
	}
}