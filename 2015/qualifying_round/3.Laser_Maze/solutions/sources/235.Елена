#include<iostream>
#include<cstdio>
#include<queue>
using namespace std;
char a[107][107];
bool bad[107][107][5];
long long dp[107][107][5];
int dx[]={1,-1,0,0},dy[]={0,0,1,-1};
const long long INF=100000000007;
void cl()
{
    for(int i=0;i<107;i++)
    {
        for(int j=0;j<107;j++)
        {
            for(int k=0;k<5;k++)
            {
                a[i][j]=0;
                bad[i][j][k]=false;
                dp[i][j][k]=INF;
            }
        }
    }
}
int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int t;
    cin>>t;
    for(int tt=1;tt<=t;tt++)
    {
        cl();
        int n,m;
        cin>>n>>m;
        int sx,sy,fx,fy;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                cin>>a[i][j];
                if(a[i][j]=='S')
                {
                    sx=i;
                    sy=j;
                    a[i][j]='.';
                }
                if(a[i][j]=='G')
                {
                    fx=i;
                    fy=j;
                    a[i][j]='.';
                }
            }
        }
        for(int i=1;i<=m;i++)
        {
            a[0][i]='#';
            a[n+1][i]='#';
        }
        for(int i=1;i<=n;i++)
        {
            a[i][0]='#';
            a[i][m+1]='#';
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(a[i][j]!='.' && a[i][j]!='#')
                {
                    int up;
                    if(a[i][j]=='^')
                    {
                        up=0;
                    }
                    else if(a[i][j]=='<')
                    {
                        up=1;
                    }
                    else if(a[i][j]=='v')
                    {
                        up=2;
                    }
                    else
                    {
                        up=3;
                    }
                    for(int k=i-1;k>=0;k--)
                    {
                        if(a[k][j]!='.') break;
                        bad[k][j][up%4]=true;
                    }
                    for(int k=i+1;k<=n;k++)
                    {
                        if(a[k][j]!='.') break;
                        bad[k][j][(up+2)%4]=true;
                    }
                    for(int k=j+1;k<=m;k++)
                    {
                        if(a[i][k]!='.') break;
                        bad[i][k][(up+1)%4]=true;
                    }
                    for(int k=j-1;k>=0;k--)
                    {
                        if(a[i][k]!='.') break;
                        bad[i][k][(up+3)%4]=true;
                    }
                }

            }
        }
        dp[sx][sy][0]=0;
        queue<int>qx,qy,qw;
        qx.push(sx);
        qy.push(sy);
        qw.push(0);
        while(!qx.empty())
        {
            int x=qx.front(),y=qy.front(),w=qw.front();
            qx.pop();
            qy.pop();
            qw.pop();
            int nw=(w+1)%4;
            for(int d=0;d<4;d++)
            {
                int nx=x+dx[d],ny=y+dy[d];
                if(a[nx][ny]=='.' && !bad[nx][ny][nw] && dp[nx][ny][nw]-1>dp[x][y][w])
                {
                    dp[nx][ny][nw]=dp[x][y][w]+1;
                    qx.push(nx);
                    qy.push(ny);
                    qw.push(nw);
                }
            }

        }
        long long ans=INF;
        for(int i=0;i<4;i++)
        {
            ans=min(ans,dp[fx][fy][i]);
        }
        cout<<"Case #"<<tt<<": ";
        if(ans>=INF/2)
        {
            cout<<"impossible"<<endl;
        }
        else
        {
            cout<<ans<<endl;
        }
    }
}
