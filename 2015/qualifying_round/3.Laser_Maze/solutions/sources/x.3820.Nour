#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define pb push_back
#define mp make_pair


typedef long long ll;
using namespace std;
vector<string> a;
int mem[110][110][5]; 
int dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};
string las = "<^>v";
bool check(int i, int j, int steps) {
	if(i < 0 || i == a.size() || j < 0 || j == a[0].size() || a[i][j] == '#' || las.find(a[i][j]) != -1) return 0;
	for(int k = j - 1; k >= 0; k--) {
		if(a[i][k] == '.' || a[i][k] == 'S' || a[i][k] == 'G') continue;
		if(a[i][k] == '#') break;
		if(las[(las.find(a[i][k]) + steps) % 4] == '>') return 0;
		break;
	}

	for(int k = j + 1; k < a[0].size(); k++) {
		if(a[i][k] == '.' || a[i][k] == 'S' || a[i][k] == 'G') continue;
		if(a[i][k] == '#') break;
		if(las[(las.find(a[i][k]) + steps) % 4] == '<') return 0;
		break;
	}


	for(int k = i + 1; k < a.size(); k++) {
		if(a[k][j] == '.' || a[k][j] == 'S' || a[k][j] == 'G') continue;
		if(a[k][j] == '#') break;
		if(las[(las.find(a[k][j]) + steps) % 4] == '^') return 0;
		break;
	}

	for(int k = i - 1; k >=0; k--) {
		if(a[k][j] == '.' || a[k][j] == 'S' || a[k][j] == 'G') continue;
		if(a[k][j] == '#') break;
		if(las[(las.find(a[k][j]) + steps) % 4] == 'v') return 0;
		break;
	}

	return 1;
}

int go(int i, int j, int steps) {
	if(a[i][j] == 'G') return 0;
	if(mem[i][j][steps % 4] != -1) return mem[i][j][steps % 4];
	mem[i][j][steps%4] = oo;
	for(int k = 0; k < 4; k++) {
		if(check(i + dx[k], j + dy[k], steps + 1)) mem[i][j][steps % 4] = min(mem[i][j][steps % 4], 1 + go(i + dx[k], j + dy[k], steps + 1));
	}
	return mem[i][j][steps % 4];
}

int main() {
	freopen ("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	int t;
	cin >> t;
	for(int tc = 1; tc <= t; tc++) {
		int n, m;
		cin >> n >> m;
		a.resize(n);
		for(int i = 0; i < n; cin >> a[i++]);
		memset(mem, -1, sizeof mem);
		int si, sj;
		for(int i = 0; i < n; i++) for(int j = 0; j < m; j++) if(a[i][j] == 'S') si = i, sj = j;
		int res = go(si, sj, 0);
		cout << "Case #" << tc << ": ";
		if(res == oo) cout << "impossible\n";
		else cout << res << endl;
	}
	return 0;
}
