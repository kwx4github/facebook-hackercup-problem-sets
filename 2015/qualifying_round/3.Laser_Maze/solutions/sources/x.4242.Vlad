#include <iostream>
#include <fstream>
#include <iomanip>
using namespace std;

const int di[4]={-1,0,1,0},
          dj[4]={0,-1,0,1};

int main()
{
    ifstream fin("laser_maze.txt");
    ofstream fout("laser_maze_output.txt");

    int t; fin>>t;fin.get();

    for(int i=1;i<=t;i++)
    {
        int n,m;
        fin>>n>>m;fin.get();

        int mat[102][102]={{0}},matt[102][102]={{0}};
        int lst=-1,cst=-1,lsf=-1,csf=-1;

        for(int j=1;j<=n;j++){
            for(int k=1;k<=m;k++){
                char c; fin.get(c);
                if(c == '#'){
                    mat[j][k]=-5;
                    matt[j][k]=-5;
                }
                if(c == 'S'){
                    lst=j;
                    cst=k;
                }
                if(c == 'G'){
                    lsf=j;
                    csf=k;
                }
                if(c == '>')
                {
                    mat[j][k]=-1;
                    matt[j][k]=-1;
                }
                if(c == 'v')
                {
                    mat[j][k]=-1;
                    matt[j][k]=-2;
                }
                if(c == '<')
                {
                    mat[j][k]=-1;
                    matt[j][k]=-3;
                }
                if(c == '^')
                {
                    mat[j][k]=-1;
                    matt[j][k]=-4;
                }

            }
            fin.get();
        }

        int l[20000],c[20000],st=0,dr=0;
        mat[lst][cst]=1;
        l[dr]=lst; c[dr]=cst; dr++;
        int step=1,contor=0;
        int sol=99999;

        while(st<=dr){
            int ilee=l[st],jlee=c[st];
            int nrel=dr-st+1;
            bool dead=false;
            if(matt[ilee][jlee]==1) dead=true;

            if(mat[ilee][jlee]==step || contor>=nrel){
                            //stop da laser
                            for(int i1=1;i1<=n;i1++)
                                for(int j1=1;j1<=m;j1++)
                                    if(matt[i1][j1]==1) matt[i1][j1]=0;

                            //rotesc turnutile
                            for(int i1=1;i1<=n;i1++){
                                for(int j1=1;j1<=m;j1++){
                                    if(matt[i1][j1]<0 && matt[i1][j1]!=-4 && matt[i1][j1]!=-5)
                                        matt[i1][j1]--;
                                    else if(matt[i1][j1]==-4)
                                        matt[i1][j1]=-1;
                                }
                            }

                            //FIRE DA LASER BITCH
                            for(int i1=1;i1<=n;i1++){
                                for(int j1=1;j1<=m;j1++){
                                    if(matt[i1][j1]==-1){
                                        int jdr=j1+1;
                                        while(matt[i1][jdr]==0 && jdr<=m){
                                            matt[i1][jdr]=1;jdr++;
                                        }
                                    }
                                    if(matt[i1][j1]==-2){
                                        int idr=i1+1;
                                        while(matt[idr][j1]==0 && idr<=n){
                                            matt[idr][j1]=1;idr++;
                                        }
                                    }
                                    if(matt[i1][j1]==-3){
                                        int jdr=j1-1;
                                        while(matt[i1][jdr]==0 && jdr>0){
                                            matt[i1][jdr]=1;jdr--;
                                        }
                                    }
                                    if(matt[i1][j1]==-4){
                                        int idr=i1-1;
                                        while(matt[idr][j1]==0 && idr>0){
                                            matt[idr][j1]=1;idr--;
                                        }
                                    }
                                }
                            }
              contor=0;
              step++;
            }

            if(ilee==lsf && jlee==csf && mat[ilee][jlee]-1<sol){ sol=mat[ilee][jlee]-1;}

            if(dead==true)
                st++;
            else if(mat[ilee][jlee]<step){
                bool OK=false;
                for(int k=0;k<4;k++){
                    int ii=ilee+di[k],jj=jlee+dj[k];
                        if(ii>0 && ii<=n && jj>0 && jj<=m){
                            if(mat[ii][jj]==0 && matt[ii][jj]==0){
                                mat[ii][jj]=mat[ilee][jlee]+1;
                                l[dr]=ii;c[dr]=jj;dr++;
                            }
                            if(matt[ii][jj]==1){
                                OK=true;
                            }
                        }
                }
                if(OK==true){
                    mat[ilee][jlee]+=2;
                    l[dr]=ilee;c[dr]=jlee;dr++;
                }
                st++;
            }
            else if(mat[ilee][jlee]>=step){
                l[dr]=ilee;c[dr]=jlee;dr++;
                st++;
                contor++;
            }
        }
        if(sol!=99999)
            fout<<"Case #"<<i<<": "<<sol<<"\n";
        if(sol==99999)
            fout<<"Case #"<<i<<": impossible"<<"\n";
    }



    return 0;
}
