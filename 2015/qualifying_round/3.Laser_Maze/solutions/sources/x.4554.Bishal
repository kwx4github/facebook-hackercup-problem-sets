/***************************************************************
 *                                                             *
 *             ==>>BG_PeaceMind(BISHAL)                 @NEPAL *
 ***************************************************************/
#include<bits/stdc++.h>
#include<iostream>
#include<string.h>
#include<stdlib.h>
#include<ctype.h>
#include<time.h>
#include<math.h>
#include<string>
#include<climits>
#include<algorithm>
#include<sstream>
#include<fstream>
#include<map>
#include<vector>
#include<queue>
#include<set>
#include<stack>
#include<utility>
#include<iomanip>
#define PI acos(-1.0)
#define nl puts("")
#define SZ(x) x.size()
#define pb(x) push_back(x)
#define X first
#define Y second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mpr(a,b) make_pair(a,b)
#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define SL(a) scanf("%lld",&a)
#define S2(a,b) scanf("%d%d",&a,&b)
#define SL2(a,b) scanf("%lld%lld",&a,&b)
#define all(v) v.begin(),v.end()
#define clr(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define fr(i,a,n) for(i=a;i<=n;i++)
#define rf(i,a,n) for(i=n;i>=a;i--)
#define MXE(x) *max_element(all(x))
#define MNE(x) *min_element(all(x))

#define INFILE() freopen("laser_maze.txt","r",stdin)
#define OUTFILE()freopen("outC222.txt","w",stdout)
#define LB(v,k) lower_bound(v.begin(),v.end(),k)
#define _cin ios_base::sync_with_stdio(0),cin.tie(0)
#define ct(x) cerr<<__LINE__<< ":: "<<#x<<"= "<<x<<endl
#define fi(it,n) for(__typeof(n.begin()) it=n.begin();it!=n.end();it++)
using namespace std;
typedef long long ll;
/// if(q1<=l && r<=q2)
/// atoi( str.c_str() ); // char string to int
/// sprintf(str,"%d",num);// num to char string
///int month[]={-1,31,28,31,30,31,30,31,31,30,31,30,31}; //Not Leap Yr
int dx[]= {1,0,-1,0};
int dy[]= {0,1,0,-1}; //4 Dir
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 Dir
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight
/************************************************************************
 * /////////////////////////////////////////////////////////////////////*
 ************************************************************************/
///        0123456789
#define MX  105
#define MD  1000000009LL


struct data
{
    int x,y,d;
    data() {};
    data(int a,int b,int c)
    {
        x=a;
        y=b;
        d=c;
    }
    bool friend operator <(data A,data B)
    {
        return A.d>B.d;
    }
};

char s[MX][MX];
int lm,r,c,ar[MX][MX][4];
map<char,int>mpc;
char las[]= {'>','v','<','^'};

int go( int sx,int sy )
{
    priority_queue< data >PQ;
    int cnt=0;
    PQ.push(data(sx,sy,0));
    while(! PQ.empty() )
    {
        cnt++;
        if(cnt==lm)return (lm+1);
        data p=PQ.top();
        PQ.pop();
        int x=p.x;
        int y=p.y;
        int d=p.d;
        if(s[x][y]=='G') return d;
        for(int i=0; i<=3; i++)
        {
            int nx=x+dx[i];
            int ny=y+dy[i];

            if(nx>=r || nx<0 || ny>=c || ny<0 || s[nx][ny]=='#' )continue;

            int lsr=-1;
            for(int k=0; k<=3; k++) if(s[nx][ny]==las[k] )lsr=k;
            if(lsr>=0) continue;

            for(int k=0; k<=3; k++)
            {
                if(ar[nx][ny][k]==-1)continue;
                int dr=(ar[nx][ny][k]+d+1+4)%4;
                if(dr==(k+2+4)%4)lsr=k;
            }
            //cout<<nx<< " "<<ny<< " "<<lsr<<endl;
            if(lsr>=0) continue;

            PQ.push( data(nx,ny,d+1) );
        }
    }
    return (lm+1);
}

int main()
{
    int i,j,k,tc,a,b,cs=1;
     INFILE();
     OUTFILE();
//    mpc['>']=0;
//    mpc['^']=1;
//    mpc['<']=2;
//    mpc['v']=3;
    S(tc);
    while(tc--)
    {
        S2(r,c);
        fr(i,0,r-1)fr(j,0,c-1)cin>>s[i][j];

        ///--0--L,
        for(i=0; i<r; i++)
        {
            int lst=-1;
            for(j=c-1; j>=0; j--)
            {
                if(s[i][j]=='S')a=i,b=j;
                for(k=0; k<=3; k++)
                {
                    if( s[i][j]==las[k] )
                    {
                        lst=k;
                        break;
                    }
                }
                if(s[i][j]=='#')lst=-1;
                ar[i][j][0]=lst;
            }
        }

        ///---1---down
        for(j=0; j<c; j++)
        {
            int lst=-1;
            for(i=r-1; i>=0; i--)
            {
                for(k=0; k<=3; k++)
                {
                    if( s[i][j]==las[k] )
                    {
                        lst=k;
                        break;
                    }
                }
                if(s[i][j]=='#')lst=-1;
                ar[i][j][1]=lst;
            }
        }

        /// -2--Rgt
        for(i=0; i<r; i++)
        {
            int lst=-1;
            for(j=0; j<=c-1; j++)
            {
                for(k=0; k<=3; k++)
                {
                    if( s[i][j]==las[k] )
                    {
                        lst=k;
                        break;
                    }
                }
                if(s[i][j]=='#')lst=-1;
                ar[i][j][2]=lst;
            }
        }

        ///---3-up
        for(j=0; j<c; j++)
        {
            int lst=-1;
            for(i=0; i<r; i++)
            {
                for(k=0; k<=3; k++)
                {
                    if( s[i][j]==las[k] )
                    {
                        lst=k;
                        break;
                    }
                }
                if(s[i][j]=='#')lst=-1;
                ar[i][j][3]=lst;
            }
        }

//        fr(i,0,r-1)
//        {
//            fr(j,0,c-1)
//            {
//                cout<<s[i][j]<< " "<< " "<<ar[i][j][0]<< " "<<ar[i][j][1]<< " "<<ar[i][j][2]<< " "<<ar[i][j][3]<<endl;
//            }
//            cout<<endl;
//            cout<<endl;
//        }
        lm=(r+100)*(c*100)+1;
        // cout<<a<< " : "<<b<< " --> "<<lm<<endl;
        int ans=go(a,b);
        // cout<< " KK "<<ans<<endl;
        printf("Case #%d: ",cs++);
        if(ans<=lm)printf("%d\n",ans);
        else printf("impossible\n");
    }
    return 0;
}
