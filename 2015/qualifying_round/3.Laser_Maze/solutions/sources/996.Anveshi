#include<bits/stdc++.h>
#define lol long long int
#define ulol unsigned long long int 
#define mp make_pair
#define pb push_back
#define ff first
#define ss second
using namespace std;
int n,m,i,j,k;
int M[101][101][5];
int visited[101][101][5];
int ans[101][101][5];
char s[105][105];
pair  < int,int> start,goal;
int notwall(int l,int ll){
	if(s[l][ll]=='.' || s[l][ll]=='S' || s[l][ll]=='G')return 0;
	return 1;
}
void init(){
	
		for(i=0;i<n;i++)for(j=0;j<m;j++)for(k=0;k<6;k++){M[i][j][k]=0,visited[i][j][k]=0;ans[i][j][k]=INT_MAX;}
//
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(s[i][j]=='S'){start.ff=i;start.ss=j;}
				if(s[i][j]=='G'){goal.ff=i;goal.ss=j;}
				if(s[i][j]=='^'){
					for(k=i-1;k>=0;k--){
						if(notwall(k,j))break;
						else M[k][j][4]=1;
					}
				}
				if(s[i][j]=='^'){
					for(k=j+1;k<m;k++){
						if(notwall(i,k))break;
						else M[i][k][1]=1;
					}
				}
				if(s[i][j]=='^'){
					for(k=i+1;k<n;k++){

						if(notwall(k,j))break;
						else M[k][j][2]=1;
					}
				}
				if(s[i][j]=='^'){
					for(k=j-1;k>=0;k--){
						if(notwall(i,k))break;
						else M[i][k][3]=1;
					}
				}

				if(s[i][j]=='>'){
					for(k=i-1;k>=0;k--){
						if(notwall(k,j))break;
						else M[k][j][3]=1;
					}
				}
				if(s[i][j]=='>'){
					for(k=j+1;k<m;k++){
						if(notwall(i,k))break;
						else M[i][k][4]=1;
					}
				}
				if(s[i][j]=='>'){
					for(k=i+1;k<n;k++){
						if(notwall(k,j))break;
						else M[k][j][1]=1;
					}
				}
				if(s[i][j]=='>'){
					for(k=j-1;k>=0;k--){
						if(notwall(i,k))break;
						else M[i][k][2]=1;
					}
				}
			
////
				if(s[i][j]=='v'){
					for(k=i-1;k>=0;k--){
						if(notwall(k,j))break;
						else M[k][j][2]=1;
					}
				}
				if(s[i][j]=='v'){
					for(k=j+1;k<m;k++){
						if(notwall(i,k))break;
						else M[i][k][3]=1;
					}
				}
				if(s[i][j]=='v'){
					for(k=i+1;k<n;k++){
						if(notwall(k,j))break;
						else M[k][j][4]=1;
					}
				}
				if(s[i][j]=='v'){
					for(k=j-1;k>=0;k--){
						if(notwall(i,k))break;
						else M[i][k][1]=1;
					}
				}
////

				if(s[i][j]=='<'){
					for(k=i-1;k>=0;k--){
						if(notwall(k,j))break;
						else M[k][j][1]=1;
					}
				}
				if(s[i][j]=='<'){
					for(k=j+1;k<m;k++){
						if(notwall(i,k))break;
						else M[i][k][2]=1;
					}
				}
				if(s[i][j]=='<'){
					for(k=i+1;k<n;k++){
						if(notwall(k,j))break;
						else M[k][j][3]=1;
					}
				}
				if(s[i][j]=='<'){
					for(k=j-1;k>=0;k--){
						if(notwall(i,k))break;
						else M[i][k][4]=1;
					}
				}
		}
	}
//
	return ;
}
int f(int p1,int p2){
	if(s[p1][p2]=='.' || s[p1][p2]=='S' || s[p1][p2]=='G')return 1;
	return 0;
}
int valid(int xx,int yy){
	if(xx<n && xx>=0 && yy>=0 && yy<m)return 1;
	return  0;
}
void fun(int ii,int jj,int step){
	//cout << ii << " "  << jj   << " " <<  step << endl;
	if(f(ii,jj)==0)return ;
	int yy=step%4+(step%4==0?4:0);
	if(M[ii][jj][yy]==1 && step!=0)
		return;
	if(step<ans[ii][jj][yy])ans[ii][jj][yy]=step;
	else return ;

//	cout << ii << " "  << jj   << " " <<  yy <<  " " << step  << endl;
	if(valid(ii+1,jj))
		fun(ii+1,jj,step+1);
	if(valid(ii,jj+1))
		fun(ii,jj+1,step+1);
	if(valid(ii-1,jj))
		fun(ii-1,jj,step+1);
	if(valid(ii,jj-1))
		fun(ii,jj-1,step+1);
	return ;
}
int main()
{
	//ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int T,x;
	cin >> T;
	for(x=1;x<=T;x++){
		cin >> n >> m;
		for(i=0;i<n;i++)
			scanf("%s",s[i]);
		init();
		cout << "Case #" << x << ": ";
	/*	for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				for(k=1;k<5;k++){
			//		if(M[i][j][k]==1)cout  <<  i << " " << j <<  " "  << k << endl;
				}
			}
		}*/
		fun(start.ff,start.ss,0);
//		 for(i=1;i<=4;i++)
//			 cout << ans[goal.ff][goal.ss][i] << " " ;
	/*	for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				sort(ans[i][j]+1,ans[i][j]+5);
				cout << ans[i][j][1] <<  " " ; 
			}
			cout << endl;
		}*/
		sort(ans[goal.ff][goal.ss]+1,ans[goal.ff][goal.ss]+5);
		if(ans[goal.ff][goal.ss][1]>100000000)cout << "impossible" << endl;
		else
			cout << ans[goal.ff][goal.ss][1] << endl;
	}
	return 0;
}
