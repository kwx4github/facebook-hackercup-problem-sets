#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <algorithm>
#include <iomanip>

using namespace std;

void preprocess()
{
}

int a[4][120][120];
int xs, ys, xg, yg;
int n, m;

void dfs(int x, int y, int t)
{
    int cur = a[t][x][y];
    if (x==xs && y==ys && t == 0) cur++;
    cur++;
    t++;
    t%=4;
    if (x>0 && (a[t][x-1][y] == 0 || cur < a[t][x-1][y]))
    {
        a[t][x-1][y] = cur;
        dfs(x-1, y, t);
    }
    if (x<m-1 && (a[t][x+1][y] == 0 || cur < a[t][x+1][y]))
    {
        a[t][x+1][y] = cur;
        dfs(x+1, y, t);
    }
    if (y>0 && (a[t][x][y-1] == 0 || cur < a[t][x][y-1]))
    {
        a[t][x][y-1] = cur;
        dfs(x, y-1, t);
    }
    if (y<n-1 && (a[t][x][y+1] == 0 || cur < a[t][x][y+1]))
    {
        a[t][x][y+1] = cur;
        dfs(x, y+1, t);
    }
}

void solve(istream & cin, ostream & cout)
{
    cin>>m>>n;
    for(int i=0; i<m; i++)
    {
        string s;
        cin>>s;
        for(int j = 0; j<n; j++)
        {
            int res = 0;
            if (s[j]=='#') res = -1;
            if (s[j]=='S')
            {
                xs = i;
                ys = j;
            }
            if (s[j]=='G')
            {
                xg = i;
                yg = j;
            }

            if (s[j]=='^') res = -2;
            if (s[j]=='>') res = -3;
            if (s[j]=='v') res = -4;
            if (s[j]=='<') res = -5;
            
            for(int k = 0; k<4; k++)
                a[k][i][j] = res;

        }
    }
    for(int t = 0; t<4; t++)
    {
        for(int i = 0; i<m; i++)
            for (int j = 0; j<n; j++)
            {
                if(a[t][i][j]<-1)
                {
                    int res = -a[t][i][j] - 2 + t;
                    res %=4;
                    if(res==0)
                    {
                        int x = i-1;
                        while(x>=0 && a[t][x][j]==0) {a[t][x][j] = -1; x--;}
                    }
                    if(res==2)
                    {
                        int x = i+1;
                        while(x<m && a[t][x][j]==0) {a[t][x][j] = -1; x++;}
                    }
                    if(res==3)
                    {
                        int y = j-1;
                        while(y>=0 && a[t][i][y]==0) {a[t][i][y] = -1; y--;}
                    }
                    if(res==1)
                    {
                        int y = j+1;
                        while(y<n && a[t][i][y]==0) {a[t][i][y] = -1; y++;}
                    }
                }
            }
    }
    a[0][xs][ys] = -1;
    dfs(xs, ys, 0);
    int mi = 1000000;
    for(int i = 0; i<4; i++)
    {
        if (a[i][xg][yg] > 0 && a[i][xg][yg] < mi) {
            mi = a[i][xg][yg];
        }
    }
    if (mi==1000000)
    {
        cout<<"impossible";
        return;
    }
    cout<<mi;
}

int main()
{
    ifstream cin("/Users/egor/Desktop/XCode/facebook/facebook/in.txt");
    ofstream cout("/Users/egor/Desktop/XCode/facebook/facebook/out.txt");
    int testCount = 0;
    cin>>testCount;
    preprocess();
    for(int t = 0; t < testCount; t++)
    {
        cout<<"Case #"<<t+1<<": ";
        solve(cin, cout);
        cout << endl;
    }
    //cin.close();
    //cout.close();
}