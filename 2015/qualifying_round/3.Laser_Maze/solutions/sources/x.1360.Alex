import java.io.*;
import java.util.*;

public class fbq3 {
	static int[] xdir = {-1, 0, 1, 0};
	static int[] ydir = {0, -1, 0, 1};
    public static void main(String[] args) throws Exception {
    	BufferedReader in = new BufferedReader(new FileReader("fbq3.in"));
    	PrintStream out = new PrintStream("fbq3.out");
    	
		int t = Integer.parseInt(in.readLine());
		for(int i = 0; i < t; i++) {
			String str = in.readLine();
			int m = Integer.parseInt(str.substring(0, str.indexOf(" ")));
			int n = Integer.parseInt(str.substring(str.indexOf(" ") + 1));
			char[][] mat = new char[m][n];
			for(int j = 0; j < m; j++) {
				mat[j] = in.readLine().toCharArray();
			}
			int sx = -1;
			int sy = -1;
			int gx = -1;
			int gy = -1;
			for(int j = 0; j < m; j++) {
				for(int k = 0; k < n; k++) {
					if(mat[j][k] == 'S') {
						sx = j;
						sy = k;
					}
					if(mat[j][k] == 'G') {
						gx = j;
						gy = k;
					}
				}
			}
			boolean[][][] mods = new boolean[4][m][n];
			for(int j = 0; j < m; j++) {
				for(int k = 0; k < n; k++) {
					boolean works = true;
					if(mat[j][k] == '^' || mat[j][k] == '<' || mat[j][k] == 'v' || mat[j][k] == '>') {
						int dir = -1;
						if(mat[j][k] == '^') {
							dir = 0;
						}
						if(mat[j][k] == '>') {
							dir = 1;
						}
						if(mat[j][k] == 'v') {
							dir = 2;
						}
						if(mat[j][k] == '<') {
							dir = 3;
						}
						for(int l = j - 1; l > -1 && works; l--) {
							if(mat[l][k] == '.' || mat[l][k] == 'S' || mat[l][k] == 'G') {
								mods[(dir + 0) % 4][l][k] = true;
							} else {
								works = false;
							}
						}
						works = true;
						for(int l = j + 1; l < m && works; l++) {
							if(mat[l][k] == '.' || mat[l][k] == 'S' || mat[l][k] == 'G') {
								mods[(dir + 2) % 4][l][k] = true;
							} else {
								works = false;
							}
						}
						works = true;
						for(int l = k - 1; l > -1 && works; l--) {
							if(mat[j][l] == '.' || mat[j][l] == 'S' || mat[j][l] == 'G') {
								mods[(dir + 1) % 4][j][l] = true;
							} else {
								works = false;
							}
						}
						works = true;
						for(int l = k + 1; l < n && works; l++) {
							if(mat[j][l] == '.' || mat[j][l] == 'S' || mat[j][l] == 'G') {
								mods[(dir + 3) % 4][j][l] = true;
							} else {
								works = false;
							}
						}
					}
				}
			}
			boolean works = false;
			int time = 1;
			while(!works && time < 500) {
				char[][] mat2 = new char[m][n];
				for(int j = 0; j < m; j++) {
					for(int k = 0; k < n; k++) {
						mat2[j][k] = mat[j][k];
					}
				}
				for(int j = 0; j < m; j++) {
					for(int k = 0; k < n; k++) {
						if(mat[j][k] == 'S') {
							for(int l = 0; l < 4; l++) {
								mat2[j][k] = '.';
								int tempx = j + xdir[l];
								int tempy = k + ydir[l];
								if(isValid(tempx, tempy, m, n) && (mat[tempx][tempy] == '.' || mat[tempx][tempy] == 'G')) {
									mat2[tempx][tempy] = 'S';
								}
							}
						}
					}
				}

				for(int j = 0; j < m; j++) {
					for(int k = 0; k < n; k++) {
						if(mods[time % 4][j][k] && mat2[j][k] == 'S') {
							mat2[j][k] = '.';
						}
					}
				}

				if(mat2[gx][gy] == 'S') {
					works = true;
				} else {
					time++;
				}
				mat = mat2;
			}
			if(works) {
				out.println("Case #" + (i + 1) + ": " + time);
			} else {
				out.println("Case #" + (i + 1) + ": impossible");
			}
		}
	}

	public static boolean isValid(int x, int y, int dimx, int dimy) {
		return -1 < x && x < dimx && -1 < y && y < dimy;
	}

	static class Point {
	    int x;
	    int y;
	
	    public Point(int tempx, int tempy) {
	    	x = tempx;
	    	y = tempy;
	    }
	}
}