#include <iostream>
using namespace std;
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<map>
#include<queue>
#include<algorithm>
#include<cmath>
#include<set>
#include <ctime>
typedef  pair<int,int> pii;
#define rep(i,j,n) for(i=j;i<n;i++)
#define pb push_back


int m,n,visit[200][200][4];
char a[200][200];
bool flag[200][200][4];

int main() {
	
	//clock_t start = std::clock();
	freopen ("inp.txt","r",stdin);
	freopen ("out.txt","w",stdout);
	//cout << "Time: " << (std::clock() - start) / (double)(CLOCKS_PER_SEC / 1000) << " ms" << std::endl;
	
	
	int t,ca=0,i,j,k,I,J;
	
	cin>>t;
	while(t--)
	{
		ca++;
		cin>>n>>m;
		
		memset(visit,-1,sizeof(visit));
		
		for(i=0;i<=n;i++)
		for(j=0;j<=m;j++)
			for(k=0;k<4;k++)
				flag[i][j][k]=true;
		
		for(i=0;i<n;i++)
		cin>>a[i];
		int startx,starty,goalx,goaly;
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(a[i][j]=='S')
						{
							startx=i,starty=j;
							continue;
						}
				if(a[i][j]=='G')
						{
							goalx=i,goaly=j;
							continue;
						}
				
				if(a[i][j]=='.')	 continue;
				
				
				flag[i][j][0]=flag[i][j][1]=flag[i][j][2]=flag[i][j][3]=false;
				
				if(a[i][j]=='#') continue;
				
				int cnt=0;
					if(a[i][j]=='^')
					cnt=0;
					
					if(a[i][j]=='>')
					cnt=3;
					
					if(a[i][j]=='v')
					cnt=2;
					
					if(a[i][j]=='<')
					cnt=1;
					
					for(I=i-1;I>=0;I--)
					{
						if ((a[I][j]=='<')||(a[I][j]=='^')||(a[I][j]=='>')||(a[I][j]=='v')||(a[I][j]=='#') )
							break;
						flag[I][j][cnt]=false;
					}
						
					for(I=i+1;I<n;I++)
					{
						if ((a[I][j]=='<')||(a[I][j]=='^')||(a[I][j]=='>')||(a[I][j]=='v')||(a[I][j]=='#') )
							break;
						flag[I][j][((cnt+2)%4)%4]=false;
					}
					
					for(J=j-1;J>=0;J--)
					{
						if ((a[i][J]=='<')||(a[i][J]=='^')||(a[i][J]=='>')||(a[i][J]=='v')||(a[i][J]=='#') )
							break;
						flag[i][J][((cnt+3)%4)%4]=false;
					}
						
					
					for(J=j+1;J<m;J++)
					{
						if ((a[i][J]=='<')||(a[i][J]=='^')||(a[i][J]=='>')||(a[i][J]=='v')||(a[i][J]=='#') )
							break;
						flag[i][J][((cnt+1)%4)%4]=false;
					}
				
			}
		}	
		
		flag[startx][starty][0]=true;
		
		priority_queue<pair<int,pair<int,int> > > que;
		pair<int,pair<int,int> > p;
		
		que.push({0,{startx,starty}});
		
		while(!que.empty())
		{
			int count,x,y;
			p=que.top();
			que.pop();
			count=-p.first;
			x=p.second.first;
			y=p.second.second;
			
			
			if(visit[x][y][((count)%4)%4]!=-1)
				continue;
			visit[x][y][((count)%4)%4] = count;

			
			if(x<n-1)
			if(flag[x+1][y][((count+1)%4)%4])
			if(visit[x+1][y][((count+1)%4)%4]==-1)
				que.push({-count-1,{x+1,y}});
				
			if(x>0)
			if(flag[x-1][y][((count+1)%4)%4])
			if(visit[x-1][y][((count+1)%4)%4]==-1)
				que.push({-count-1,{x-1,y}});
				
			if(y<m-1)
			if(flag[x][y+1][((count+1)%4)%4])
			if(visit[x][y+1][((count+1)%4)%4]==-1)
				que.push({-count-1,{x,y+1}});
				
			if(y>0)
			if(flag[x][y-1][((count+1)%4)%4])
			if(visit[x][y-1][((count+1)%4)%4]==-1)
				que.push({-count-1,{x,y-1}});				
			
		}
		
		if( (visit[goalx][goaly][0]==-1) && (visit[goalx][goaly][1]==-1) && (visit[goalx][goaly][2]==-1) && (visit[goalx][goaly][3]==-1))
		cout<<"Case #"<<ca<<": impossible\n";
		else
		{
			int ans= visit[goalx][goaly][0];
			
			
			if(ans==-1) ans=visit[goalx][goaly][1];
			
			if(visit[goalx][goaly][1]!=-1)
			if(visit[goalx][goaly][1]<ans)
				ans=visit[goalx][goaly][1];

			if(ans==-1) ans=visit[goalx][goaly][2];
			
			if(visit[goalx][goaly][2]!=-1)
			if(visit[goalx][goaly][2]<ans)
				ans=visit[goalx][goaly][2];
			
			
			if(ans==-1) ans=visit[goalx][goaly][3];
			
			if(visit[goalx][goaly][3]!=-1)
			if(visit[goalx][goaly][3]<ans)
				ans=visit[goalx][goaly][3];

			cout<<"Case #"<<ca<<": "<<ans<<"\n";
				
		}
		//cout<<visit[goalx][goaly][0]<<endl<<visit[goalx][goaly][1]<<endl<<visit[goalx][goaly][2]<<endl<<visit[goalx][goaly][3]<<endl<<endl;
	}
	
	return 0;
	}
