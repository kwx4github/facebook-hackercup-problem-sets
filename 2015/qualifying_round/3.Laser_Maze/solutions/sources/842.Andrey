#include <iostream>
#include <fstream>
#include <string>
#include <queue>

using namespace std;

char b[4]={'<','^','>','v'};
int xy[4][2]={{0, -1}, {-1, 0}, {0, 1}, {1, 0}};
int tests, n, m;
char a[111][111], d[111][111][4];
queue<pair< pair<int, int>, int> > q;

inline int num(char c)
{
	if (c=='<') return 0;
	if (c=='^') return 1;
	if (c=='>') return 2;
	if (c=='v') return 3;
	if (c=='#') return -1;
	return -2;
}
inline bool check(int x0, int y0, int d)
{
	for(int i=0; i<4; ++i)
	{
		int x=x0+xy[i][0], y=y0+xy[i][1];
		while(x>=0 && y>=0 && x<n && y<m)
		{
			if (a[x][y]!='.' && a[x][y]!='G')
				break;
			x+=xy[i][0];
			y+=xy[i][1];
		}
		if (x>=0 && y>=0 && x<n && y<m && num(a[x][y])>=0)
			if ((num(a[x][y])+d-i+4)%4==2)
				return false;
	}
	return true;
}

int main()
{
	ifstream cin("input.txt");
	ofstream cout("output.txt");
	cin>>tests;
	for(int k=1; k<=tests; k++)
	{
		bool t=false;
		while(!q.empty()) q.pop();
		cin>>n>>m;
		for(int i=0; i<n; ++i)
			for(int j=0; j<m; ++j)
			{
				d[i][j][0]=d[i][j][1]=d[i][j][2]=d[i][j][3]=-1;
				cin>>a[i][j];
				if (a[i][j]=='S')
				{
					q.push(make_pair(make_pair(i, j), 0));
					a[i][j]='.';
					d[i][j][0]=0;
				}
			}
		while(!q.empty())
		{
			if (t)
				break;
			int x0, y0, dist0;
			x0 = q.front().first.first;
			y0 = q.front().first.second;
			dist0 = q.front().second;
			q.pop();
			for(int i=0; i<4; ++i)
			{
				int x=x0+xy[i][0], y=y0+xy[i][1], dist=dist0+1;
				if (x<n && x>=0 && y<m && y>=0 && d[x][y][dist&3]==-1 && num(a[x][y])==-2)
				{
					if (!check(x,y,dist)) continue;
					q.push(make_pair(make_pair(x, y), dist));
					d[x][y][dist&3]=dist;
					if (a[x][y]=='G')
					{
						cout<<"Case #"<<k<<": "<<dist<<endl;
						t=true;
						break;
					}
				}
			}
		}
		if (!t)
			cout<<"Case #"<<k<<": impossible"<<endl;
	}
	return 0;
}
/*
5
2 5
##^##
S...G
2 5
##v##
S...G
1 5
S..G<
1 6
S...G<
5 5
S....
.....
.>v..
.^<..
....G
*/