#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <assert.h>
 
using namespace std;
 
#define sz(a) (int)(a.size())
#define len(a) (int)(a.length())
#define pb push_back
#define mp make_pair
#define fi first
#define se second

char g[105][105];
bool e[105][105][4];
int vis[105][105][4];
int dx[]={1, 0, -1, 0};
int dy[]={0, -1, 0, 1};
string r="v<^>";
int m,n;

inline bool within(int i,int j){
	return i>=0&&i<m&&j>=0&&j<n;
}

inline bool valid_step(int i,int j){
	if(!within(i,j)) return false;
	return g[i][j]!='#'&&r.find(g[i][j])==string::npos;
}

int main(){
	freopen("laser_maze.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int t,cas=1; cin>>t;
	while(t--){
		cout<<"Case #"<<cas++<<": ";
		cin>>m>>n;
		for(int i=0;i<m;++i){
			cin>>g[i];
		}
		memset(e,true,sizeof(e));
		int si=-1,sj=-1,ei=-1,ej=-1;
		for(int d=0;d<4;++d){
			for(int i=0;i<m;++i){
				for(int j=0;j<n;++j){
					if(g[i][j]=='S') si=i,sj=j;
					if(g[i][j]=='G') ei=i,ej=j;
					if(r.find(g[i][j])!=string::npos){
						int v=r.find(g[i][j]);
						int ci=i,cj=j;
						ci+=dx[v],cj+=dy[v];
						while(valid_step(ci,cj)){
							e[ci][cj][d]=false;
							ci+=dx[v],cj+=dy[v];
						}
					}
				}
			}
			for(int i=0;i<m;++i){
				for(int j=0;j<n;++j){
					if(r.find(g[i][j])!=string::npos){
						int ii=r.find(g[i][j]);
						g[i][j]=r[(ii+1)%4];
					}
				}
			}
		}
		memset(vis,-1,sizeof(vis));
		queue<pair<pair<int,int>,int> > q;
		//if(e[si][sj][0]){
			vis[si][sj][0]=0;
			q.push(mp(mp(si,sj),0));
		//}
		while(!q.empty()){
			pair<pair<int,int>,int> h=q.front(); q.pop();
			for(int k=0;k<4;++k){
				int ni=h.fi.fi+dx[k];
				int nj=h.fi.se+dy[k];
				if(valid_step(ni,nj)&&e[ni][nj][(h.se+1)%4]&&vis[ni][nj][(h.se+1)%4]==-1){
					vis[ni][nj][(h.se+1)%4]=vis[h.fi.fi][h.fi.se][h.se]+1;
					q.push(mp(mp(ni,nj),(h.se+1)%4));
				}
			}
		}
		int ans=1<<29;
		for(int d=0;d<4;++d){
			if(vis[ei][ej][d]!=-1)
				ans=min(ans,vis[ei][ej][d]);
		}
		if(ans==(1<<29)) cout<<"impossible\n";
		else cout<<ans<<'\n';
	}
	return 0;
}