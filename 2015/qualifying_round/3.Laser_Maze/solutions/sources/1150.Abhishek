#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <vector>
#include <iomanip>
#include <cmath>
#include <set>
#include <map>
#include <queue> 
#include <climits>
#include <cassert>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<pii,pii> piii;
#define pb push_back
#define mp make_pair
#define si(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define fr first
#define sc second
#define sz size()
#define ln length()
#define rforr(i,a,b)                for(int i=b-1;i>=0;i--)
#define forr(i,a,b)                 for(int i=a;i<b;i++)
#define rep(i,n)                    forr(i,0,n) 
#define all(v)                      v.begin(),v.end()    
#define uniq(v)                     sort(all(v));v.erase(unique(all(v)),v.end())
#define clr(a)                      memset(a,0,sizeof a)
#define MAX 110
#define MOD 1000000007
string a[110];
int M,N ;
inline bool checklaser(char c){
	return (c == '>' || c == 'v' || c == '<' || c == '^');
}
int m[4][MAX][MAX];
int w[MAX][MAX][4];
queue<piii> Q;
void printmatrix(){

		cout<<"0\n";
		for(int i=0;i<N;i++){
			for(int j=0;j<M;j++){
				cout<<m[0][i][j]<< " ";
			}
			cout<<endl;
		}
		cout<<"1\n";
		for(int i=0;i<N;i++){
			for(int j=0;j<M;j++){
				cout<<m[1][i][j]<< " ";
			}
			cout<<endl;
		}
		cout<<"2\n";
		for(int i=0;i<N;i++){
			for(int j=0;j<M;j++){
				cout<<m[2][i][j]<< " ";
			}
			cout<<endl;
		}
		cout<<"3\n";
		for(int i=0;i<N;i++){
			for(int j=0;j<M;j++){
				cout<<m[3][i][j]<< " ";
			}
			cout<<endl;
		}
}
void fire(char c , int x , int y , int mi){
	if(c == '^'){	
		for(int k=x-1;k>=0;k--){
			if(a[k][y] == '.' || a[k][y] == 'S' || a[k][y] == 'G' || m[mi][k][y])
				m[mi][k][y]=1;
			else
				break;
		}	
	}
	else if(c == 'v'){	
		for(int k=x+1;k<N;k++){
			if(a[k][y] == '.' || a[k][y] == 'S' || a[k][y] == 'G' || m[mi][k][y])
				m[mi][k][y]=1;
			else
				break;
		}	
	}
	else if(c == '<'){	
		for(int k=y-1;k>=0;k--){
			if(a[x][k] == '.' || a[x][k] == 'S' || a[x][k] == 'G'|| m[mi][x][k])
				m[mi][x][k]=1;
			else
				break;
		}	
	}
	else if(c == '>'){	
		for(int k=y+1;k<M;k++){
			if(a[x][k] == '.' || a[x][k] == 'S' || a[x][k] == 'G'|| m[mi][x][k])
				m[mi][x][k]=1;
			else
				break;
		}	
	}
}
inline void cond(int xx , int yy , int d , int mi){
	if(xx>=0 && xx<N && yy>=0 && yy<M && m[(mi+1)%4][xx][yy] == 0 && w[xx][yy][(mi+1)%4] == -1 && (!checklaser(a[xx][yy])) && (a[xx][yy]!= '#')){
		w[xx][yy][(mi+1)%4]=1;
		Q.push(mp(mp(xx,yy),mp(d+1,(mi+1)%4)));
	}
}
int main(){
	ios::sync_with_stdio(0);
	int t,si,sj;
	cin>>t;
	for(int tt=1;tt<=t;tt++){
		cin>>N>>M;
		rep(i,N){
			rep(j,M){
				rep(k,4){
					w[i][j][k] = -1 ;
					m[k][i][j] = 0 ;
				}
				
			}
		}
		rep(i,N)
				cin>>a[i];					
		rep(i,N){
			rep(j,M){
				if(a[i][j] == 'S'){si = i ; sj = j; }
				if(checklaser(a[i][j])){
					if(a[i][j] == '^'){
						fire('^',i,j,0);
						fire('>',i,j,1);
						fire('v',i,j,2);
						fire('<',i,j,3);
					}
					else if(a[i][j] == '>'){
						fire('>',i,j,0);
						fire('v',i,j,1);
						fire('<',i,j,2);
						fire('^',i,j,3);	
					}
					else if(a[i][j] == 'v'){
						fire('v',i,j,0);
						fire('<',i,j,1);
						fire('^',i,j,2);
						fire('>',i,j,3);
					}
					else if(a[i][j] == '<'){
						fire('<',i,j,0);
						fire('^',i,j,1);
						fire('>',i,j,2);
						fire('v',i,j,3);
					}
				}
			}
		}
		cout<<"Case #"<<tt<<": ";
		int xx , yy ,ans = INT_MAX;
		bool bbb = false;
		//printmatrix();
		Q.push(mp(mp(si,sj),mp(0,0)));
		while(!Q.empty()){
			piii p = Q.front();
			Q.pop();
			pii p1 = p.fr ; pii p2 = p.sc ;
			int x=p1.fr ; int y = p1.sc ; int d = p2.fr ; int mi = p2.sc ;
			//cout<<x<<" "<<y<<" " << d<< " " <<mi << endl;
			if(a[p1.fr][p1.sc] == 'G'){
				cout<<d<<endl;
				bbb = true;
				break;
			}
			xx = x   ; yy = y-1 ;  cond(xx,yy,d,mi);
			xx = x-1 ; yy = y   ;  cond(xx,yy,d,mi);
			xx = x   ; yy = y+1 ;  cond(xx,yy,d,mi);
			xx = x+1 ; yy = y   ;  cond(xx,yy,d,mi);
		}
		if(!bbb)
			cout<<"impossible\n";
		while(!Q.empty())Q.pop();
	}
	return 0;
}

