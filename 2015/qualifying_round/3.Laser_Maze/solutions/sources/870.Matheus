#include <bits/stdc++.h>

using namespace std;

void printmaze(int maze[5][102][102], int m, int n, int k){
	int i, j;
	printf("maze%d\n", k );
	for(j = 0; j < m+2; j++){
		for(i = 0; i < n+2; i++){
			if(maze[k][i][j] >= 0)
				printf(" ");
			printf("%d ", maze[k][i][j]);
		}
		printf("\n");
	}
	return;
}

void preencheLinha(int maze[5][102][102], int i, int j, int k, int dir){

	int aux = 1;
	switch(dir){
		case(1):
			while(maze[0][i-aux][j] == 0 || maze[0][i-aux][j] == -2 || maze[0][i-aux][j] == -3){
				maze[k][i-aux][j] = -1;
				aux++;
			}
			break;
		case(2):
			while(maze[0][i][j-aux] == 0 || maze[0][i][j-aux] == -2 || maze[0][i][j-aux] == -3){
				maze[k][i][j-aux] = -1;
				aux++;
			}
			break;
		case(3):
			while(maze[0][i+aux][j] == 0 || maze[0][i+aux][j] == -2 || maze[0][i+aux][j] == -3){
				maze[k][i+aux][j] = -1;
				aux++;
			}
			break;
		case(0):
			while(maze[0][i][j+aux] == 0 || maze[0][i][j+aux] == -2 || maze[0][i][j+aux] == 3){
				maze[k][i][j+aux] = -1;
				aux++;
			}
			break;
	}
}

int move(int maze[5][102][102], int m, int n, int k){
	int next = k+1;
	if(k == 0)
		k = 4;
	int test, i, j;
	test = 0;
	for(j = 1; j < m+1; j++){
		for(i = 1; i < n+1; i++){
			if(maze[0][i][j] == k){
				maze[0][i][j] = 0;
				if(maze[k][i-1][j] == 0){
					if(maze[0][i-1][j] == -3)
						return 2;
					maze[0][i-1][j] = next;
					test = 1;
				}
				if(maze[k][i][j-1] == 0){
					if(maze[0][i][j-1] == -3)
						return 2;
					maze[0][i][j-1] = next;
					test = 1;
				}
				if(maze[k][i+1][j] == 0){
					if(maze[0][i+1][j] == -3)
						return 2;
					maze[0][i+1][j] = next;
					test = 1;
				}
				if(maze[k][i][j+1] == 0){
					if(maze[0][i][j+1] == -3)
						return 2;
					maze[0][i][j+1] = next;
					test = 1;
				}
				if(k == 1)
					maze[4][i][j] = -1;
				else
					maze[(k+3)%4][i][j] = -1;
			}
		}
	}
	return test;
}

int main(){
	int maze[5][102][102];
	int t;
	int m, n;
	int i, j, k, l;
	char c;
	
	scanf(" %d", &t);
	
	for(l = 1; l <= t; l++){
		scanf(" %d %d", &m, &n);
		
		
		for(j = 0; j < m+2; j++){
			for(i = 0; i < n+2; i++){
					maze[1][i][j] = maze[2][i][j] = maze[3][i][j] = maze[4][i][j] = 0;
				if(j == 0 || i == 0 || j == m+1 || i == n+1)
					maze[0][i][j] = -1;
				else{
					scanf(" %c", &c);
					switch (c){
						case '.': maze[0][i][j] =  0; break; // vazio
						case '#': maze[0][i][j] = -1; break; // muro
						case 'S': maze[0][i][j] = -2; break; // player
						case 'G': maze[0][i][j] = -3; break; // fim
						case '<': maze[0][i][j] =  1; break;
						case '>': maze[0][i][j] =  3; break;
						case '^': maze[0][i][j] =  2; break;
						case 'v': maze[0][i][j] =  4; break;
					}
				}
			}
		}
		
		for(k = 1; k <= 4; k++){
			for(j = 0; j < m+2; j++){
				for(i = 0; i < n+2; i++){
					switch (maze[0][i][j]){
						case (-1): maze[k][i][j] = -1; break;
						case (1):  preencheLinha(maze, i, j, k, (1+k) % 4); maze[k][i][j] = -1; 
							if(k == 4)
								maze[0][i][j] = -1;
							break;
						case (2):  preencheLinha(maze, i, j, k, (2+k) % 4); maze[k][i][j] = -1;
							if(k == 4)
								maze[0][i][j] = -1;
							break;
						case (3):  preencheLinha(maze, i, j, k, (3+k) % 4); maze[k][i][j] = -1;
							if(k == 4)
								maze[0][i][j] = -1;
							break;
						case (4):  preencheLinha(maze, i, j, k, k % 4); maze[k][i][j] = -1;
							if(k == 4)
								maze[0][i][j] = -1;
							break;
						case (-2):
							if(k == 4)
								maze[0][i][j] = 1;
							break;
					}
				}
			}
//			printmaze(maze, m, n, k);
//			printf("\n");
		}
//		printmaze(maze, m, n, 0);
//		printf("\n");
		int k = 0;
		int test = 1;

		while(test == 1){
			k++;
			test = move(maze, m, n, (k%4));
//			printmaze(maze, m, n, 0);
//			printf("\n");
		}
		
		if(test == 2)
			printf("Case #%d: %d\n", l, k);
		else printf("Case #%d: impossible\n", l);
		
	}
	return 0;
}