#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
#include <cmath>
#include <stdio.h>
#include <list>
#include <vector>
#include <map>
#include <set>
#include <limits.h>
#define ll long long int
#define mod 1000000009
using namespace std;

int ans=INT_MAX;
int m,n;

int visited[110][110][4];
char a[110][110];



bool safe(int x,int y,int cnt)
{
     char order[4]={'^','>','v','<'};
    // cout<<x<<y<<"safe"<<endl;
     //left
     for(int i=y;i>=0;i--)
     {
       if(a[x][i]=='#')break;
       
       if(a[x][i]!='.'){
                        
       int k=0;
       while(order[k]!=a[x][i])k++;
       
       int inr=k,temp=cnt;
       while(temp--){inr++;if(inr>3)inr=0;}                
       
       if(inr==1)return false;
       break;                 
                        
                        
       }
             
             
       }
       
       //right
       
     for(int i=y;i<m;i++)
     {
       if(a[x][i]=='#')break;
       
       if(a[x][i]!='.'){
                        
       int k=0;
       while(order[k]!=a[x][i])k++;
       
       int inr=k,temp=cnt;
       while(temp--){inr++;if(inr>3)inr=0;}                
       
       if(inr==3)return false;
       break;                 
                        
                        
       }
     }
       //up
       
     for(int i=x;i>=0;i--)
     {
       if(a[i][y]=='#')break;
       
       if(a[i][y]!='.'){
                        
      
                        
       int k=0;
       while(order[k]!=a[i][y])k++;
       
       int inr=k,temp=cnt;
       while(temp--){inr++;if(inr>3)inr=0;}                
       
       if(inr==2)return false;
       break;                 
                        
                        
       }
             
             
       }
         
         //down
                
     for(int i=x;i<n;i++)
     {
       if(a[i][y]=='#')break;
       
       if(a[i][y]!='.'){
                        
       int k=0;
       while(order[k]!=a[i][y])k++;
       
       int inr=k,temp=cnt;
       while(temp--){inr++;if(inr>3)inr=0;}                
       
       if(inr==0)return false;
       break;                 
                        
                        
       }
             
             
     }    
       
       
    return true;
             
 }
       
       
       
     
     

void dfs(int x,int y,int cnt,int dx,int dy)
{
   //  cout<<x<<y<<endl;
     visited[x][y][cnt%4]=cnt;
     
     if(x==dx && y==dy){ans=min(ans,cnt);return;}
     
     int x_axis[4]={-1,0,0,1};
     int y_axis[4]={0,-1,1,0};
     
     for(int i=0;i<4;i++)
     {
             
             int ix=x_axis[i]+x;
             int iy=y_axis[i]+y;
           //  cout<<x<<y<<ix<<iy<<a[ix][iy]<<visited[ix][iy][(cnt+1)%4]<<"IN"<<endl;
             if(ix>=0 && iy>=0 && ix<n && iy<m && a[ix][iy]=='.' && visited[ix][iy][(cnt+1)%4]>cnt+1 && safe(ix,iy,(cnt+1)%4) )
                   dfs(ix,iy,cnt+1,dx,dy);
             
             
             
             }
     
}


     
     
     

int main()
{

 // freopen("C:\\Users\\jack\\Desktop\\in.txt","r",stdin);
 //freopen("C:\\Users\\jack\\Desktop\\out.txt","w",stdout);

    int test;
    scanf("%d",&test);
    int t=1;
    
    while(t<=test)
    {
        
         scanf("%d%d",&n,&m);
         
         
         int sx,sy,dx,dy;
        
         
         for(int i=0;i<n;i++)
         for(int j=0;j<m;j++)
           {  cin>>a[i][j];
             
              if(a[i][j]=='S')sx=i,sy=j,a[i][j]='.';
              else if(a[i][j]=='G')dx=i,dy=j,a[i][j]='.';
              
              for(int k=0;k<4;k++)
               visited[i][j][k]=INT_MAX;
               
           }
           
     
      ans=INT_MAX;
     
     
       dfs(sx,sy,0,dx,dy);
           
       printf("Case #%d: ",t);
        
       if(ans!=INT_MAX)printf("%d\n",ans);
        else printf("impossible\n");
        
        t++;     
         



                 }

    }
