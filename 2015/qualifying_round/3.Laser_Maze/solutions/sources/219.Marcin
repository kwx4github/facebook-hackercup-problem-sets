#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> PI;
typedef long long LL;
typedef double D;
#define FI first
#define SE second
#define MP make_pair
#define PB push_back
#define R(I,N) for(int I=0;I<N;I++)
#define F(I,A,B) for(int I=A;I<B;I++)
#define FD(I,N) for(int I=N-1;I>=0;I--)
#define make(A) scanf("%d",&A)
#define make2(A,B) scanf("%d%d",&A,&B)
#define db if(1)printf
template<typename C> void ma(C& a,C b){if(a<b)a=b;}
template<typename C> void mi(C& a,C b){if(a>b)a=b;}
#define MAX 101
int n,m;
char t[MAX][MAX];
bool cz[MAX][MAX][4];
struct q{
  int x,y,z;
  bool go();
};
vector<q> s,s2;
void clr(){
  s.clear();
  s2.clear();
  R(i,n)R(j,m)R(k,4)cz[i][j][k] = 0;
}
char kk[] = "<^>v";
int xx[] = {0,-1,0,1};
int yy[] = {-1,0,1,0};
bool in(int a,int b){
  return a>=0 && a<n && b>=0 && b<m; 
}
void las(int a,int b,int l,int k){
  while(in(a,b)){
    cz[a][b][l] = 1;
    a+=xx[k];
    b+=yy[k];
    if(t[a][b]!='.' && t[a][b] != 'S' && t[a][b] != 'G')break;
  }
}
void add(int a,int b,int c){
  if(!in(a,b) || cz[a][b][c] == 1)return;
  cz[a][b][c] = 1;
  s2.PB({a,b,c});
}
bool q::go(){
  if(t[x][y] == 'G')return 1;
  R(i,4)add(x+xx[i],y+yy[i],(z+1)%4);
  return 0; 
}
void test(){
  static int cas = 0; cas++;
  printf("Case #%d: ",cas);
  make2(n,m);clr();
  R(i,n)scanf("%s",t[i]);
  R(i,n)R(j,m){
    if(t[i][j] == '#')R(k,4)cz[i][j][k] = 1;
    if(t[i][j] == 'S')s.PB({i,j,0});
    R(k,4){
      if(t[i][j] == kk[k]){
        R(l,4)las(i,j,l,(k+l)%4);
      }
    }
  }
  int res = 0;
  while(!s.empty()){
    R(i,s.size()){
      if(s[i].go()){
        printf("%d\n",res);
        return;
      }
    }
    res++;
    s.clear();
    swap(s,s2);
  }
  puts("impossible");
}
main(){
  int _;make(_);while(_--)test();
}