#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <queue>
#include <stack>
#include <sstream>
#include <cstring>
#include <numeric>
#include <ctime>

#define re return
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)
#define y0 y32479
#define y1 y95874
#define fill(x, y) memset(x, y, sizeof(x))
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
#define spc(i,n) " \n"[i == n - 1]
#define Pi 3.1415926535897932384626433832795

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef double D;
typedef long double LD;
typedef long long ll;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;

template<class T> T abs(T x) { return x > 0 ? x : -x;}

#define FILENAME ""

int m;
int n;

int dx[4] = {1, 0, -1, 0};
int dy[4] = {0, 1, 0, -1};

int matr[110][110][4];
int ans[110][110][4];

void clear() {
    fill(matr, 0);
}

void solve() {
    int x1, y1, x2, y2;
    cin >> n >> m;
    rep(i, n) {
        string s;
        cin >> s;
        rep(j, m) {
        	matr[i][j][0] = -2;
            char c = s[j];
            if (c == 'S') {
                x1 = i;
                y1 = j;
            }
            if (c == 'G') {
                x2 = i;
                y2 = j;
            }
            if (c == '^')
                matr[i][j][0] = 2;
            if (c == 'v')
                matr[i][j][0] = 0;
            if (c == '>')
                matr[i][j][0] = 1;
            if (c == '<')
                matr[i][j][0] = 3;
            if (c == '#')
                matr[i][j][0] = -1;
        }
    }
    for (int o = 1; o < 4; o++) {
    	rep(i, n) rep(j, m) {
    		matr[i][j][o] = matr[i][j][o - 1];
    		if (matr[i][j][o - 1] >= 0)
    			matr[i][j][o] = (matr[i][j][o - 1] + 3) % 4;
    	}
    }

    rep(o, 4) rep(i, n) rep(j, m) {
    	int x = matr[i][j][o];
    	if (x >= 0) {
    		int cx = i;
    		int cy = j;
    		while (true) {
    			cx += dx[x];
    			cy += dy[x];
    			if (matr[cx][cy][o] != -2)
    				break;
    			matr[cx][cy][o] = -1;
    		}
    	}
    }

    /*
    if (matr[x1][y1][0] == -1) {
    	cout << "impossible" << endl;
    	re;
    }*/

    fill(ans, -1);
    queue<pair<int, ii> > q;
    ans[x1][y1][0] = 0;
    q.push(mp(0, mp(x1, y1)));
    while (!q.empty()) {
    	pair<int, ii> z = q.front();
    	int o = z.fi;
    	int x = z.se.fi;
    	int y = z.se.se;
    	rep(i, 4) {
    		int nx = x + dx[i];
    		int ny = y + dy[i];
    		int no = (o + 1) % 4;
    		if (nx >= 0 && nx < n && ny >= 0 && ny < m && matr[nx][ny][no] == -2 && ans[nx][ny][no] == -1) {
    			ans[nx][ny][no] = ans[x][y][o] + 1;
    			q.push(mp(no, mp(nx, ny)));
    		}
    	}
    	q.pop();
    }

    int a = -1;
    rep(i, 4)
    if (ans[x2][y2][i] != -1)
    	if (a == -1 || ans[x2][y2][i] < a)
    		a = ans[x2][y2][i];
    if (a == -1)
    	cout << "impossible" << endl;
    else
    	cout << a << endl;
}

int main() {

#ifdef LOCAL_BOBER
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    int tc;
    cin >> tc;
    rep(tt, tc) {
        cout << "Case #" << tt + 1 << ": ";
        clear();
        solve();
    }

    re 0;
}
