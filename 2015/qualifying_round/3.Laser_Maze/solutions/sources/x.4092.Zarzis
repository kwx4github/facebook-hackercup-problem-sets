#include<bits/stdc++.h>
using namespace std;
int n,m,sx,sy,dx,dy,cost[102][102];
bool ll[102][102][4];
int dirr[]= {0,1,0,-1};
int dirc[]= {1,0,-1,0};
char s[102][102];
void clr() {
    for(int i=0; i<n; i++) {
        for(int j=0; j<m; j++) {
            cost[i][j]=(1<<29);
        }
    }
    return;
}
void bfs(int x) {
    queue<pair<int,int> >q;
    cost[sx][sy]=x;
    q.push(make_pair(sx,sy));
    while(!q.empty()) {
        pair<int,int>src=q.front();
        q.pop();
        for(int i=0; i<4; i++) {
            pair<int,int>dest=make_pair(src.first+dirr[i],src.second+dirc[i]);
            if(dest.first<0 || dest.first>=n || dest.second<0 || dest.second>=m)continue;
            if(s[dest.first][dest.second]=='#' || s[dest.first][dest.second]=='^' || s[dest.first][dest.second]=='>' || s[dest.first][dest.second]=='v' || s[dest.first][dest.second]=='<')continue;
            if(ll[dest.first][dest.second][(cost[src.first][src.second]+1)%4])continue;
            if(cost[dest.first][dest.second]>(cost[src.first][src.second]+1)) {
                cost[dest.first][dest.second]=cost[src.first][src.second]+1;
                q.push(dest);
            }
        }
    }
    return;
}
int main() {
	freopen("laser_maze.txt","r",stdin);
	freopen("laser_maze_out.txt","w",stdout);
    int t;
    cin>>t;
    for(int z=1; z<=t; z++) {
        memset(ll,0,sizeof(ll));
        cin>>n>>m;
        for(int i=0; i<n; i++) {
            cin>>s[i];
            for(int j=0; j<m; j++) {
                cost[i][j]=(1<<29);
                if(s[i][j]=='S') {
                    sx=i;
                    sy=j;
                } else if(s[i][j]=='G') {
                    dx=i,dy=j;
                } else if(s[i][j]=='^') {
                    for(int k=0; k<i; k++)ll[k][j][0]=1;
                    for(int k=j+1; k<m; k++)ll[i][k][1]=1;
                    for(int k=i+1; k<n; k++)ll[k][j][2]=1;
                    for(int k=0; k<j; k++)ll[i][k][3]=1;
                } else if(s[i][j]=='>') {
                    for(int k=0; k<i; k++)ll[k][j][3]=1;
                    for(int k=j+1; k<m; k++)ll[i][k][0]=1;
                    for(int k=i+1; k<n; k++)ll[k][j][1]=1;
                    for(int k=0; k<j; k++)ll[i][k][2]=1;
                } else if(s[i][j]=='v') {
                    for(int k=0; k<i; k++)ll[k][j][2]=1;
                    for(int k=j+1; k<m; k++)ll[i][k][3]=1;
                    for(int k=i+1; k<n; k++)ll[k][j][0]=1;
                    for(int k=0; k<j; k++)ll[i][k][1]=1;
                } else if(s[i][j]=='<') {
                    for(int k=0; k<i; k++)ll[k][j][1]=1;
                    for(int k=j+1; k<m; k++)ll[i][k][2]=1;
                    for(int k=i+1; k<n; k++)ll[k][j][3]=1;
                    for(int k=0; k<j; k++)ll[i][k][0]=1;
                }
            }
        }
        int ans=(1<<29);
        for(int i=0; i<4; i++) {
            bfs(2*i);
            ans=min(ans,cost[dx][dy]);
            clr();
        }
        if(ans==(1<<29)) {
            cout<<"Case #"<<z<<": impossible\n";
            continue;
        }
        cout<<"Case #"<<z<<": "<<ans<<"\n";
    }
    return 0;
}
