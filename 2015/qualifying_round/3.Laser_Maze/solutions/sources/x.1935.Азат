#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <set>

using namespace std;

int main(){
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	
	int t, inf = 100000000;
	set<char> turs;
	turs.insert('<');
	turs.insert('>');
	turs.insert('^');
	turs.insert('v');
	
	int h[] = {0, 1, 0, -1};
	
	cin >> t;
	
	for(int t1 = 0; t1 < t ; t1++){
		int n, m, x0, y0, x1, y1;
		
		cin >> n >> m;
		
		int a[n][m][4];
		char c[n][m][4];
		
		for(int i = 0; i < n; i++)
			for(int j = 0; j < m; j++){
				cin >> c[i][j][0];
				
				if(c[i][j][0] == 'S'){
					x0 = i;
					y0 = j;
				}
				
				if(c[i][j][0] == 'G'){
					x1 = i;
					y1 = j;
				}
			}
		
		for(int k = 0; k < 4; k++){
			int p = (k + 1) % 4;
			
			for(int i = 0; i < n; i++)
				for(int j = 0; j < m; j++)
					c[i][j][p] = c[i][j][k];
		}
		
		for(int k = 0; k < 4; k++){
			int p = (k + 1) % 4;
			
			for(int i = 0; i < n; i++)
				for(int j = 0; j < m; j++)
					switch(c[i][j][k]){
						case '^':{
							c[i][j][p] = '<';
							
							for(int z = j - 1; z >= 0; z--){
								if(c[i][z][0] == '#' || turs.find(c[i][z][0]) != turs.end())
									break;
								
								c[i][z][p] = '#';
							}
							
							break;
						}
						case '<':{
							c[i][j][p] = 'v';
							
							for(int z = i + 1; z < n; z++){
								if(c[z][j][0] == '#' || turs.find(c[z][j][0]) != turs.end())
									break;
								
								c[z][j][p] = '#';
							}
							
							break;
						}	
						case '>':{
							c[i][j][p] = '^';
							
							for(int z = i - 1; z >= 0; z--){
								if(c[z][j][0] == '#' || turs.find(c[z][j][0]) != turs.end())
									break;
								
								c[z][j][p] = '#';
							}
							
							break;
						}	
						case 'v':{
							c[i][j][p] = '>';
							
							for(int z = j + 1; z < m; z++){
								if(c[i][z][0] == '#' || turs.find(c[i][z][0]) != turs.end())
									break;
								
								c[i][z][p] = '#';
							}
							
							break;
						}		
					}
		}
		
		for(int i = 0; i < n; i++)
			for(int j = 0; j < m; j++)
				for(int k = 0; k < 4; k++)
					a[i][j][k] = inf;
		
		a[x0][y0][0] = 0;
		
		vector<int> x, y, p;
		x.push_back(x0);
		y.push_back(y0);
		p.push_back(0);
		
		for(int i = 0; i < x.size(); i++){			
			for(int k = 0; k < 4; k++){
				int xx = x[i] + h[k], yy = y[i] + h[3 - k];
				
				int r = (p[i] + 1) % 4;
				
				if(0 <= xx && xx < n && 0 <= yy && yy < m && c[xx][yy][r] != '#' && turs.find(c[xx][yy][r]) == turs.end())
					if(a[x[i]][y[i]][p[i]] + 1 < a[xx][yy][r]){
						a[xx][yy][r] = a[x[i]][y[i]][p[i]] + 1;
						x.push_back(xx);
						y.push_back(yy);
						p.push_back(r);
					}
			}
		}
		
		int ans = inf;
		
		for(int i = 0; i < 4; i++)
			ans = min(ans, a[x1][y1][i]);
		
		cout << "Case #" << t1 + 1 << ": ";
		
		if(ans < inf)
			cout << ans << endl;
		else cout << "impossible" << endl;
	}
	
	
	return 0;
}
