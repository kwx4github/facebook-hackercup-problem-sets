const   nm=101;
        xxx: array[0..3] of shortint=(-1,0,1,0);
        yyy: array[0..3] of shortint=(0,1,0,-1);
        zzz: array[0..3] of char=('^','>','v','<');
var     a: array[0..nm,0..nm] of char;
        b: array[1..nm,1..nm,0..3] of boolean;
        lx,ly,x,y,lz: array[1..nm*nm] of longint;
        t,m,n,i,j,tt,xx,yy,nlaze,l,r,lr,res,z,k,zz: longint;
        laze: set of char;
        survive,ok: boolean;
begin
        assign(input,'Laser_Maze.txt'); reset(input);
        assign(output,'Laser_Maze.out'); rewrite(output);
        readln(t);
        laze:=['<','^','>','v'];
        for tt:=1 to t do
        begin
                fillchar(a,sizeof(a),'#');
                readln(m,n);
                nlaze:=0;
                for i:=1 to m do
                begin
                        for j:=1 to n do
                        begin
                                read(a[i,j]);
                                if a[i,j]='S' then
                                begin
                                        xx:=i; yy:=j;
                                end else
                                if a[i,j] in laze then
                                begin
                                        inc(nlaze);
                                        lx[nlaze]:=i;
                                        ly[nlaze]:=j;
                                        if a[i,j]='^' then lz[nlaze]:=0 else
                                        if a[i,j]='>' then lz[nlaze]:=1 else
                                        if a[i,j]='v' then lz[nlaze]:=2 else
                                        if a[i,j]='<' then lz[nlaze]:=3;
                                end;
                        end;
                        readln;
                end;
                fillchar(b,sizeof(b),true);
                b[xx,yy,0]:=false;
                l:=1; r:=1;
                x[1]:=xx; y[1]:=yy;
                res:=0; z:=0;
                ok:=false;
                repeat
                        inc(res);
                        z:=(z+1) mod 4;
                        lr:=r;
                        for i:=l to lr do
                        begin
                        for j:=0 to 3 do
                        if (a[x[i]+xxx[j],y[i]+yyy[j]]='.') or (a[x[i]+xxx[j],y[i]+yyy[j]]='G')
                        or (a[x[i]+xxx[j],y[i]+yyy[j]]='S') then
                        begin
                                if b[x[i]+xxx[j],y[i]+yyy[j],z]=false then continue;
                                b[x[i]+xxx[j],y[i]+yyy[j],z]:=false;
                                survive:=true;
                                for k:=1 to nlaze do
                                begin
                                        zz:=(lz[k]+z) mod 4;
                                        xx:=lx[k]; yy:=ly[k];
                                        repeat
                                                xx:=xx+xxx[zz];
                                                yy:=yy+yyy[zz];
                                                if (xx=0) or (yy=0) or (xx>m) or (yy>n) then break;
                                                if (a[xx,yy]<>'.') and (a[xx,yy]<>'G') and (a[xx,yy]<>'S')
                                                then break;
                                                if (x[i]+xxx[j]=xx) and (y[i]+yyy[j]=yy) then
                                                begin
                                                        survive:=false;
                                                        break;
                                                end;
                                        until false;
                                        if survive=false then break;
                                end;
                                if survive=false then continue;
                                inc(r);
                                x[r]:=x[i]+xxx[j];
                                y[r]:=y[i]+yyy[j];
                                if a[x[r],y[r]]='G' then
                                begin
                                        writeln('Case #',tt,': ',res);
                                        ok:=true;
                                        break;
                                end;
                        end;
                        if ok then break;
                        end;
                        if ok then break;
                        l:=lr+1;
                until l>r;
                if ok=false then writeln('Case #',tt,': impossible');
        end;
end.