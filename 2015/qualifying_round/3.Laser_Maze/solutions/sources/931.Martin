#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <set>
#include <algorithm>
using namespace std;
#define dprint(v) cerr << #v"=" << v << endl //;)
#define forr(i,a,b) for(int i=(a); i<(b); i++)
#define forn(i,n) forr(i,0,n)
#define dforn(i,n) for(int i=n-1; i>=0; i--)
#define forall(it,v) for(typeof(v.begin()) it=v.begin();it!=v.end();++it)
#define sz(c) ((int)c.size())
#define zero(v) memset(v, 0, sizeof(v))
#define pb push_back
#define fst first
#define snd second
typedef long long ll;
typedef pair<int,int> ii;
const int INF=1e9;
int M,N;
char maze[200][200];
bool fire[200][200][4];
int dx[]={0, 1, 0, -1};
int dy[]={-1, 0, 1, 0};
int posi[200][200][4];

void put(int st, int d, int y, int x){
	for(x+=dx[d], y+=dy[d]; 0<=x&&x<N && 0<=y&&y<M && (maze[y][x]=='.' || maze[y][x]=='G' || maze[y][x]=='S'); x+=dx[d], y+=dy[d])
		fire[y][x][st]=true;
}

void rec(int y, int x, int st, int s){
	posi[y][x][st]=s;
	int ns=(st+1)%4;
	forn(d, 4){
		int Dx=x+dx[d], Dy=y+dy[d];
		if(0<=Dx&&Dx<N && 0<=Dy&&Dy<M && posi[Dy][Dx][ns]>s+1 && (maze[Dy][Dx]=='.' || maze[Dy][Dx]=='G' || maze[Dy][Dx]=='S') && !fire[Dy][Dx][ns])
			rec(Dy, Dx, ns, s+1);
	}
}

int main() {
	freopen("input.in", "r", stdin);
	freopen("asdf.in", "w", stdout);
	int tt; cin >> tt;
	forr(ttt, 1, tt+1){
		cin >> M >> N;
		zero(fire);
		forn(i, M) cin >> maze[i];
		forn(i, M) forn(j, N){
			if(maze[i][j]=='<'){
				forn(k, 4) put(k, (k+3)%4, i, j);
			}
			if(maze[i][j]=='>'){
				forn(k, 4) put(k, (k+1)%4, i, j);
			}
			if(maze[i][j]=='^'){
				forn(k, 4) put(k, k, i, j);
			}
			if(maze[i][j]=='v'){
				forn(k, 4) put(k, (k+2)%4, i, j);
			}
		}
		//~ forn(i, M) {forn(j, N) cout << fire[i][j][1]; cout << endl;}
		int y,x;
		forn(i, M) forn(j, N) if(maze[i][j]=='S') y=i, x=j;
		forn(i, M) forn(j, N) forn(st, 4) posi[i][j][st]=INF;
		rec(y, x, 0, 0);
		forn(i, M) forn(j, N) if(maze[i][j]=='G') y=i, x=j;
		int ans=INF;
		forn(i, 4) ans=min(ans, posi[y][x][i]);
		cout << "Case #" << ttt << ": ";
		if(ans==INF) cout << "impossible";
		else cout << ans;
		cout << endl;
	}
	return 0;
}
