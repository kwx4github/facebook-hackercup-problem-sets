#include <bits/stdc++.h>

using namespace std;

struct paso {
    int x, y, tiempo;
} m, mm;

bool P[105][105][7], Y[105][105][7];
char A[105][105], Z[105];
int casos, cto1, cto2, ter1, ter2, mejor;
queue<paso> F;

void checa(int x, int y, int t){
    ++t;
    if(P[x][y][t%4] and A[x][y]=='.' and !Y[x][y][t%4] and x>0 and x<=cto1 and y>0 and y<=cto1){
        Y[x][y][t%4]=true;
        mm.x=x;
        mm.y=y;
        mm.tiempo=t;
        F.push(mm);
    }
}

int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);

    scanf("%d",&casos);
    for(int v=1; v<=casos; v++){
        scanf("%d%d",&cto2,&cto1);
        for(int i=cto2; i>0; i--){
            for(int e=1; e<=cto1; e++){
                for(int d=0; d<4; d++){
                    P[e][i][d]=true;
                    Y[e][i][d]=false;
                }
            }
        }

        for(int i=cto2; i>0; i--){
            scanf("%s",Z);
            for(int e=0; e<cto1; e++){
                if(Z[e]=='G'){
                    Z[e]='.';
                    ter1=e+1;
                    ter2=i;
                }
                else if(Z[e]=='S'){
                    Z[e]='.';
                    m.x=e+1;
                    m.y=i;
                    m.tiempo=0;
                }
                A[e+1][i]=Z[e];
            }
        }
        for(int i=cto2; i>0; i--){
            for(int e=1; e<=cto1; e++){
                if(A[e][i]=='<'){
                    A[e][i]='#';
                    for(int d=e-1; A[d][i]=='.'; d--){ // izq
                        P[d][i][0]=false;
                    }
                    for(int d=e+1; A[d][i]=='.'; d++){ // der
                        P[d][i][2]=false;
                    }
                    for(int d=i+1; A[e][d]=='.'; d++){ // arr
                        P[e][d][1]=false;
                    }
                    for(int d=i-1; A[e][d]=='.'; d--){ // aba
                        P[e][d][3]=false;
                    }
                }
                if(A[e][i]=='v'){
                    A[e][i]='#';
                    for(int d=e-1; A[d][i]=='.'; d--){ // izq
                        P[d][i][1]=false;
                    }
                    for(int d=e+1; A[d][i]=='.'; d++){ // der
                        P[d][i][3]=false;
                    }
                    for(int d=i+1; A[e][d]=='.'; d++){ // arr
                        P[e][d][2]=false;
                    }
                    for(int d=i-1; A[e][d]=='.'; d--){ // aba
                        P[e][d][0]=false;
                    }
                }
                if(A[e][i]=='>'){
                    A[e][i]='#';
                    for(int d=e-1; A[d][i]=='.'; d--){ // izq
                        P[d][i][2]=false;
                    }
                    for(int d=e+1; A[d][i]=='.'; d++){ // der
                        P[d][i][0]=false;
                    }
                    for(int d=i+1; A[e][d]=='.'; d++){ // arr
                        P[e][d][3]=false;
                    }
                    for(int d=i-1; A[e][d]=='.'; d--){ // aba
                        P[e][d][1]=false;
                    }
                }
                if(A[e][i]=='^'){
                    A[e][i]='#';
                    for(int d=e-1; A[d][i]=='.'; d--){ // izq
                        P[d][i][3]=false;
                    }
                    for(int d=e+1; A[d][i]=='.'; d++){ // der
                        P[d][i][1]=false;
                    }
                    for(int d=i+1; A[e][d]=='.'; d++){ // arr
                        P[e][d][0]=false;
                    }
                    for(int d=i-1; A[e][d]=='.'; d--){ // aba
                        P[e][d][2]=false;
                    }
                }
            }
        }
        while(!F.empty()){
            F.pop();
        }
        F.push(m);
        Y[m.x][m.y][0]=true;

        mejor=-1;
        while(!F.empty()){
            m=F.front();
            if(m.x==ter1 and m.y==ter2){
                mejor=m.tiempo;
                break;
            }
            F.pop();
            checa(m.x+1, m.y, m.tiempo);
            checa(m.x-1, m.y, m.tiempo);
            checa(m.x, m.y+1, m.tiempo);
            checa(m.x, m.y-1, m.tiempo);
        }
        printf("Case #%d: ",v);
        if(mejor==-1){
            printf("impossible\n");
        }
        else {
            printf("%d\n",mejor);
        }
    }

    return 0;
}
