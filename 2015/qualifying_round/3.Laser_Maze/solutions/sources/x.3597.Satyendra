#include<vector>
#include<stdio.h>
using namespace std;
class Solution {
public:
    void setZeroes(vector<vector<int> > &matrix) {
      int i,j,k,l;
     int m=matrix.size();
     int n=matrix[0].size();
printf("there are %d rows and %d columns\n",m,n);
for(i=0;i<m;i++)
{
for(j=0;j<n;j++)
printf("%d ",matrix[i][j]);
printf("\n");
}
      for(i=0;i<m;i++)
       { 
          for(j=0;j<n;j++)
          {
              if(matrix[i][j]==0)
                {
printf("%d,%d is zero\n",i,j);
                    for(k=0;k<m;k++)
           { 
                      matrix[k][j]=0;
printf("making %d,%d zero\n",k,j);
}
                      for(l=0;l<n;l++)
 {
                      matrix[i][l]=0;
               printf("making %d,%d zero\n",i,l);
}         
                    }
                }
          
       }
for(i=0;i<m;i++)
{
for(j=0;j<n;j++)
printf("%d ",matrix[i][j]);
printf("\n");
}
    }
};
int main()
{
vector< vector<int> > v ;
vector<int> x;
x.push_back(0);
x.push_back(0);
x.push_back(0);
x.push_back(5);
v.push_back(x);
x.clear();
x.push_back(4);
x.push_back(3);
x.push_back(1);
x.push_back(4);
v.push_back(x);
x.clear();
x.push_back(0);
x.push_back(1);
x.push_back(1);
x.push_back(4);
v.push_back(x);
x.clear();
x.push_back(1);
x.push_back(2);
x.push_back(1);
x.push_back(3);
v.push_back(x);
x.clear();
x.push_back(0);
x.push_back(0);
x.push_back(1);
x.push_back(1);
x.push_back(3);
v.push_back(x);
// [[0,0,0,5],[4,3,1,4],[0,1,1,4],[1,2,1,3],[0,0,1,1]];
printf("size of v is %d\n",v.size());
Solution f =*( new Solution());
f.setZeroes(v);
}
