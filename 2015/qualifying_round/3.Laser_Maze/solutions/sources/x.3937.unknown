#include <iostream>
#include <fstream>
using namespace std;

ifstream f("wow.in");
ofstream g("wow.out");

#define inf (1<<30)

int xx[]= {-1,0,1,0};
int yy[]= {0,1,0,-1};
int nr_min;

#define LE 166
#define cout g

char A[LE][LE];
int nr_pasi[4][LE][LE];
bool viz[4][LE][LE];
int quex[LE*LE*5],quet[LE*LE*5],quey[LE*LE*5];
int n,m,fr[666];
bool bad[4][LE][LE];

void bfs(int x,int y,int tmp)
{
    int i,k=0,t;
    quex[++k]=x;
    quey[k]=y;
    quet[k]=tmp;
    nr_pasi[tmp][x][y]=0;

    for(i=1; i<=k; ++i)
        for(t=0; t<4; ++t)
        {
            int x2=quex[i]+xx[t];
            int y2=quey[i]+yy[t];
            int t2=(quet[i]+1)%4;
            if (x2<1||y2<1||x2>n||y2>m) continue;
            if (viz[t2][x2][y2]) continue;
            if (bad[t2][x2][y2]) continue;

            quex[++k]=x2;
            quey[k]=y2;
            quet[k]=t2;
            viz[t2][x2][y2]=true;
            nr_pasi[t2][x2][y2]=nr_pasi[quet[i]][quex[i]][quey[i]]+1;
        }
}

string str;

int main()
{
    int nrt,i,j,t;
    f>>nrt;

    fr['^']=0;
    fr['>']=1;
    fr['v']=2;
    fr['<']=3;

    int stx,sty,sfx,sfy;

    for(int lx=1; nrt; --nrt,++lx)
    {
        f>>n>>m;
        f.get();

        for(t=0; t<4; ++t)
            for(i=1; i<=n; ++i)
                for(j=1; j<=m; ++j)
                    viz[t][i][j]=false;

        for(i=1; i<=n; ++i)
        {
            f>>str;
            for(j=0; j<m; ++j)  A[i][j+1]=str[j];
        }

        for(i=1; i<=n; ++i)
            for(j=1; j<=m; ++j)
            {
                if (A[i][j]=='S')
                    stx=i,sty=j;
                if (A[i][j]=='G')
                    sfx=i,sfy=j;
            }

        for(t=0; t<4; ++t)
        {
            for(i=1; i<=n; ++i)
            {
                char l='.';

                for(j=1; j<=m; ++j)
                {
                     if (A[i][j]!='.'&&A[i][j]!='S'&&A[i][j]!='G') l=A[i][j];
                    bad[t][i][j]=false;
                    if (l=='.'||l=='#'||l=='S'||l=='G') continue;
                    if ((fr[l]+t)%4==1) bad[t][i][j]=true;
                }
            }

            for(i=1; i<=n; ++i)
            {
                char l='.';
                for(j=m; j>=1; --j)
                {
                     if (A[i][j]!='.'&&A[i][j]!='S'&&A[i][j]!='G') l=A[i][j];
                    if (l=='.'||l=='#'||l=='S'||l=='G') continue;
                    if ((fr[l]+t)%4==3) bad[t][i][j]=true;
                }
            }


            for(j=1; j<=m; ++j)
            {
                char l='.';
                for(i=1; i<=n; ++i)
                {
                    if (A[i][j]!='.'&&A[i][j]!='S'&&A[i][j]!='G') l=A[i][j];
                    if (l=='.'||l=='#'||l=='S'||l=='G') continue;
                    if ((fr[l]+t)%4==2) bad[t][i][j]=true;
                }
            }


            for(j=1; j<=m; ++j)
            {
                char l='.';
                for(i=n; i>=1; --i)
                {
                     if (A[i][j]!='.'&&A[i][j]!='S'&&A[i][j]!='G') l=A[i][j];
                    if (A[i][j]=='#') bad[t][i][j]=true;
                    if (l=='.'||l=='#'||l=='S'||l=='G') continue;
                    if ((fr[l]+t)%2==0) bad[t][i][j]=true;
                }
            }
        }

        bfs(stx,sty,0);

        int nr_min=inf;

        for(i=0; i<4; ++i)
            if (viz[i][sfx][sfy])
                nr_min=min(nr_min,nr_pasi[i][sfx][sfy]);


        cout<<"Case #"<<lx<<": ";

        if (nr_min==inf) cout<<"impossible";
        else cout<<nr_min;

        cout<<'\n';
    }


    return 0;
}
