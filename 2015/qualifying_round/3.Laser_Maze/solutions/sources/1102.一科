#include <iostream>
#include <stdio.h>
#include <string.h>
#include <queue>
using namespace std;
struct point
{
    int x,y,t,ans;
    point(int x1=0,int y1=0,int t1=0,int ans1=0)
    {
        x=x1,y=y1,t=t1,ans=ans1;
    }
};
char s[120][120];
int a[4][120][120],c,v,ex,ey;
void init(int b[120][120])
{
    int i,j,k;
    for(i=0;i<c;i++)
    {
        for(j=0;j<v;j++)
        {
            if(b[i][j]==-1)
            {
                for(k=j-1;k>=0;k--)
                if(!b[i][k])b[i][k]=1;
                else if(b[i][k]<0)break;
            }
            else
            if(b[i][j]==-2)
            {
                for(k=j+1;k<v;k++)
                if(!b[i][k])b[i][k]=1;
                else if(b[i][k]<0)break;
            }
            else
            if(b[i][j]==-3)
            {
                for(k=i-1;k>=0;k--)
                if(!b[k][j])b[k][j]=1;
                else if(b[k][j]<0)break;
            }
            else
            if(b[i][j]==-4)
            {
                for(k=i+1;k<c;k++)
                if(!b[k][j])b[k][j]=1;
                else if(b[k][j]<0)break;
            }
        }
    }
}
int w[4][2]={{-1,0},{1,0},{0,-1},{0,1}};
int work(int t,int x,int y)
{
    if(x==ex&&y==ey)return 0;
    point xp,tmp=point(x,y,t,0);
    queue<point> q;
    int tx,ty,tt,i,ans;
    while(!q.empty())q.pop();
    q.push(tmp);
    while(!q.empty())
    {
        xp=q.front();
        q.pop();
        tt=(xp.t+1)%4;
        for(i=0;i<4;i++)
        {
            tx=xp.x+w[i][0];
            ty=xp.y+w[i][1];
            ans=xp.ans+1;
            if(tx>=0&&tx<c&&ty>=0&&ty<v&&a[tt][tx][ty]==0)
            {
                if(tx==ex&&ty==ey)
                {
                    return ans;
                }
                a[tt][tx][ty]=1;
                q.push(point(tx,ty,tt,ans));
            }
        }
    }
    return -1;
}
int main()
{
////    freopen("in.txt","r",stdin);
////    freopen("out.txt","w",stdout);
    int t,i,sx,sy,j,cas=1;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d",&c,&v);
        for(i=0; i<c; i++)
        {
            scanf("%s",s[i]);
        }
        memset(a,0,sizeof(a));
        for(i=0; i<c; i++)
        {
            for(j=0; j<v; j++)
            {
                if(s[i][j]=='S')
                    sx=i,sy=j;
                if(s[i][j]=='G')
                    ex=i,ey=j;
                if(s[i][j]=='<')
                {
                    a[0][i][j]=-1;
                    a[1][i][j]=-3;
                    a[2][i][j]=-2;
                    a[3][i][j]=-4;
                }
                else if(s[i][j]=='>')
                {
                    a[0][i][j]=-2;
                    a[1][i][j]=-4;
                    a[2][i][j]=-1;
                    a[3][i][j]=-3;
                }
                else if(s[i][j]=='^')
                {
                    a[0][i][j]=-3;
                    a[1][i][j]=-2;
                    a[2][i][j]=-4;
                    a[3][i][j]=-1;
                }
                else if(s[i][j]=='v')
                {
                    a[0][i][j]=-4;
                    a[1][i][j]=-1;
                    a[2][i][j]=-3;
                    a[3][i][j]=-2;
                }
                else if(s[i][j]=='#')
                {
                    a[0][i][j]=-5;
                    a[1][i][j]=-5;
                    a[2][i][j]=-5;
                    a[3][i][j]=-5;
                }
            }
        }
        for(i=0;i<4;i++)
        init(a[i]);
        int ans=work(0,sx,sy);
        cout<<"Case #"<<cas++<<": ";
        if(ans==-1)
        cout<<"impossible"<<endl;
        else cout<<ans<<endl;
    }
}
