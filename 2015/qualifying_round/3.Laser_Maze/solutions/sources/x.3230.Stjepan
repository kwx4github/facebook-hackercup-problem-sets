#include <iostream>
#include <cstdio>
#include <queue>
#include <cstring>
#include <algorithm>
using namespace std;

#define TRACE(x) cout << #x << " = " << x << endl;

const int kombX[4]={-1,0,1,0};
const int kombY[4]={0,1,0,-1};

const int MAXN=110;
const int inf=1000000000;

struct tocka
{
    int x,y,br,vrijeme;
    tocka(int _x=0, int _y=0, int _br=0, int _vrijeme=0)
    {
        x=_x;
        y=_y;
        br=_br;
        vrijeme=_vrijeme;
    }
};

int n,m;

char mat[MAXN][MAXN];

int ne[4][MAXN][MAXN];
int rj[4][MAXN][MAXN];

queue<tocka>q;

void slozi(int x, int y, int k)
{
    for(int br=0;br<4;br++)
    {
        int smjer=(k+br)%4;
        for(int i=x,j=y;;i+=kombX[smjer],j+=kombY[smjer])
        {
            if(i<0||i>=n||j<0||j>=m)break;
            ne[br][i][j]=1;
            if(mat[i][j]=='#')break;
        }
    }
}

int main()
{
    int test;
    scanf("%d",&test);
    for(int num=0;num<test;num++)
    {
        tocka poc,kraj;
        scanf("%d %d",&n,&m);
        memset(ne,0,sizeof(ne));
        for(int br=0;br<4;br++)
            for(int i=0;i<n;i++)
                for(int j=0;j<m;j++)
                    rj[br][i][j]=inf;
        for(int i=0;i<n;i++)
            scanf("%s",mat[i]);
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
            {
                if(mat[i][j]=='S')poc=tocka(i,j);
                if(mat[i][j]=='G')kraj=tocka(i,j);
                if(mat[i][j]=='^')slozi(i,j,0);
                if(mat[i][j]=='>')slozi(i,j,1);
                if(mat[i][j]=='v')slozi(i,j,2);
                if(mat[i][j]=='<')slozi(i,j,3);
            }
        while(!q.empty())q.pop();
        q.push(poc);
        rj[0][poc.x][poc.y]=0;
        while(!q.empty())
        {
            tocka sad=q.front();
            q.pop();
            if(sad.x==kraj.x&&sad.y==kraj.y)break;
            for(int i=0;i<4;i++)
            {
                tocka novi=tocka(sad.x+kombX[i],sad.y+kombY[i],(sad.br+1)%4,sad.vrijeme+1);
                if(novi.x<0||novi.x>=n||novi.y<0||novi.y>=m)continue;
                if(mat[novi.x][novi.y]=='#')continue;
                if(ne[novi.br][novi.x][novi.y])continue;
                if(novi.vrijeme<rj[novi.br][novi.x][novi.y])
                {
                    rj[novi.br][novi.x][novi.y]=novi.vrijeme;
                    q.push(novi);
                }
            }
        }
        int mini=inf;
        for(int i=0;i<4;i++)
            mini=min(mini,rj[i][kraj.x][kraj.y]);
        printf("Case #%d: ",num+1);
        if(mini==inf)
            printf("impossible\n");
        else
            printf("%d\n",mini);
    }
    return 0;
}
