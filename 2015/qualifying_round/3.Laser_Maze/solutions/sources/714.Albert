#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <bits/stdc++.h>
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(i,n) for(int i = 0; i < (int)(n); ++ i)
#define for1(i,n) for(int i = 1; i <= (int)(n); ++ i)
#define fore(i,a,b) for(int i = (int)(a); i <= (int)(b); ++ i)
#define ford(i,n) for(int i = (int)(n)-1; i >= 0; -- i)
#define ford1(i,n) for(int i = (int)(n); i >= 1; -- i)
#define fored(i,a,b) for(int i = (int)(b); i >= (int)(a);--i)
#define mp make_pair 
#define pb push_back
#define sz(v) ((int)((v).size()))
#define all(v) (v).begin(), (v).end()
#define FOR(i, n) for (int i = 0; i < (n); ++i)
//#define FORE(it,c) for(__typeof(c).begin() it = (c).begin(); it!=(c).end(); ++it)
//#define fi first
//#define se second

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double LD;
typedef long long i64;
typedef unsigned long long u64;
typedef long double ld;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;
typedef vector<pii> vpi;
typedef vector<ld> vd;
typedef pair<ld,ld> pdd;
typedef vector<pdd> vpd;
const int N = 100+5;

int dx[] = { 0,-1,0,1};
int dy[] = {-1, 0,1,0};
char e[] = {'<','^','>','v'};
char s[ N ][ N ];
char d[ 4 ][ N ][ N ];
int mark[4][N][N];
int n, m;
void work_on(char a[N][N]){
	forn(i,n){
		forn(j,m){
			forn(u,4){
				if(a[i][j]==e[u]){
					int nx = i, ny = j;
					nx+=dx[u];
					ny+=dy[u];
					while(nx >= 0 && nx < n && ny >= 0 && ny < m && (a[nx][ny]=='.' || a[nx][ny]=='_')){
						a[nx][ny] = '_';
						nx+=dx[u];
						ny+=dy[u];
					}
				}
			}
		}
	}
}
int bfs(pii st, pii fi){
	queue<pair<pii,pii>> qu;
	qu.push(mp(st,mp(0,0)));
	while(!qu.empty()){
		pair<pii,pii> v = qu.front();qu.pop();
		if(v.first==fi)
			return v.second.second;
		forn(i,4){
			int nx = v.first.first+dx[i];
			int ny = v.first.second+dy[i];
			int nu = (v.second.first+1)%4;
			if(nx >= 0 && nx < n && ny >= 0 && ny < m && d[nu][nx][ny]=='.' && mark[nu][nx][ny]==0){
				mark[nu][nx][ny] = 1;
				qu.push( mp( mp(nx,ny), mp(nu,v.second.second+1) ) );
			}
		}
	}
	return -1;
}
void solve(){
	int T;
	scanf("%d", &T);
	for1(tnum,T){
		scanf("%d%d", &n, &m);
		forn(i,n)
			scanf("%s", &s[i]);
		pii sp, fp;
		forn(u,4){
			forn(i,n){
				forn(j,m){
					d[u][i][j] = s[i][j];
					if(s[i][j]=='S'){
						d[u][i][j] = '.';
						sp = mp(i,j);
					}
					if(s[i][j]=='G'){
						d[u][i][j] = '.';
						fp = mp(i,j);
					}
					forn(v,4)
						if(s[i][j]==e[v])
							d[u][i][j] = e[(v+u)%4];
				}
			}
		}
		forn(u,4)
			work_on(d[u]);
		memset(mark,0,sizeof mark);
		int res = bfs(sp, fp);
		printf("Case #%d: ", tnum);
		if(res==-1)
			puts("impossible");
		else
			printf("%d \n", res);
	}
}

void testgen(){
	FILE * f = fopen("input.txt", "w");
//	int T = 100*100*100;
//	int n = 120000;
//	fprintf(f, "%d\n", n);
	fclose(f);
}
int main() {
#ifdef LOCAL
//	testgen();
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#define task ""
//	freopen(task".in", "r", stdin);
//	freopen(task".out", "w", stdout);
#endif

	cout<<fixed;
	cout.precision(15);
	cerr<<fixed;
	cerr.precision(12);

	solve();

#ifdef LOCAL
	cerr<<"Execution time = "<<clock()/1000.0<<"ms\n";
#endif
	return 0;
}