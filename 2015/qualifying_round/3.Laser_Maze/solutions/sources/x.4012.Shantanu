#include<bits/stdc++.h>
#define MAX 110
using namespace std;

int r,c;
char bd[MAX][MAX];

struct data{
    int x,y,cnt;
};

int color[MAX][MAX];
int rrr[] = {1,-1,0,0};
int ccc[] = {0,0,1,-1};

char pos(char c,int s)
{
    s%=4;
    char ch[] = {'>','v','<','^','>','v','<','^','>','v','<','^'};
    for(int i=0;i<12;i++) if(ch[i]==c) return ch[i+s];
}

bool islaser(char c)
{
    if(c=='>'||c=='v'||c=='<'||c=='^') return true;
    else return false;
}

int bfs(pair<int,int>st)
{
    memset(color,0,sizeof(color));
    queue<data>Q;
    Q.push({st.first,st.second,0});
    color[st.first][st.second] = 1;

    while(!Q.empty())
    {
        data fr = Q.front();
        Q.pop();

        if(bd[fr.x][fr.y]=='G') return fr.cnt;

        for(int i=0;i<4;i++)
        {
            int x = rrr[i]+fr.x;
            int y = ccc[i]+fr.y;
            int cnt = fr.cnt+1;

            if(x<0 || x>=r || y<0 || y>=c) continue;
            if(color[x][y]>=4) continue;
            if(bd[x][y]=='#' || islaser(bd[x][y])) continue;
            if(bd[x][y]=='.' || bd[x][y]=='G' || bd[x][y]=='S')
            {
                int ok = true;;
                for(int j=y;j<c;j++)
                {
                    if(bd[x][j]=='#') break;
                    if(islaser(bd[x][j]))
                    {
                        if(pos(bd[x][j],cnt)=='<')
                        {
                            ok&=false;
                            break;
                        }
                    }
                }

                for(int j=y;j>=0;j--)
                {
                    if(bd[x][j]=='#') break;
                    if(islaser(bd[x][j]))
                    {
                        if(pos(bd[x][j],cnt)=='>')
                        {
                            ok&=false;
                            break;
                        }
                    }
                }

                for(int j=x;j<r;j++)
                {
                    if(bd[j][y]=='#') break;
                    if(islaser(bd[j][y]))
                    {
                        if(pos(bd[j][y],cnt)=='^')
                        {
                            ok&=false;
                            break;
                        }
                    }
                }

                for(int j=x;j>=0;j--)
                {
                    if(bd[j][y]=='#') break;
                    if(islaser(bd[j][y]))
                    {
                        if(pos(bd[j][y],cnt)=='v')
                        {
                            ok&=false;
                            break;
                        }
                    }
                }

                if(ok)
                {
                    color[x][y]++;
                    Q.push({x,y,cnt});
                }
            }
        }
    }
    return -1;
}
int main()
{
    freopen("c.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int t; cin>>t;
    for(int cas=1;cas<=t;cas++)
    {
        pair<int,int>st;

        cin>>r>>c;
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                cin>>bd[i][j];
                if(bd[i][j]=='S') st = make_pair(i,j);
            }
        }
        int ans = bfs(st);

        cout<<"Case #"<<cas<<": ";
        if(ans==-1) cout<<"impossible"<<endl;
        else cout<<ans<<endl;
    }
}
