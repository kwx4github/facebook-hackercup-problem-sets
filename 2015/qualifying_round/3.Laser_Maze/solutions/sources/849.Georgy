#include <bits/stdc++.h>

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = (int)(a); i <= (int)(b); ++i)

#define all(v) (v).begin(), (v).end()
#define pb push_back
#define fi first
#define se second

using namespace std;

typedef vector<int> vi;
typedef pair<int, int> pii;
typedef tuple<int, int, int> t3i;

const int N = 120;
const int inf = 1e9 + 100500;

int a[N][N];
int di[4] = {-1,0,1,0};
int dj[4] = {0,1,0,-1};
bool can[4][N][N];
int d[4][N][N];

template<typename T>
bool uax(T&a, const T& b) { if(a<b){a=b;return true;} return false; }

template<typename T>
bool uin(T&a, const T& b) { if(b<a){a=b;return true;} return false; }

void solve() {
    int T; cin >> T;
    fore(t, 1, T) {
        cout << "Case #" << t << ": ";
        int n, m;
        cin >> n >> m;
        pii st, end;
        fore(i, 0, n+1) fore(j, 0, m+1) {
            a[i][j] = -2;
            forn(t, 4) can[t][i][j] = false;
        }
        fore(i, 1, n) {
            string s;
            cin >> s;
            fore(j, 1, m) {
                switch( s[j-1] ) {
                    case '#': a[i][j] = -2; break;
                    case 'S': a[i][j] = -1; st=pii(i, j); break;
                    case 'G': a[i][j] = -1; end=pii(i, j); break;
                    case '.': a[i][j] = -1; break;
                    case '^': a[i][j] = 0; break;
                    case '>': a[i][j] = 1; break;
                    case 'v': a[i][j] = 2; break;
                    case '<': a[i][j] = 3; break;
                    default: assert(false);
                }
            }
        }
        fore(i, 1, n) fore(j, 1, m) if( a[i][j] == -1 )
            forn(t, 4) can[t][i][j] = true;
        fore(i, 1, n) fore(j, 1, m) if( a[i][j] >= 0 ) {
            forn(t, 4) {
                int tt = (t + a[i][j]) % 4;
                int x = i, y = j;
                do {
                    x += di[tt]; y += dj[tt];
                    can[t][x][y] = false;
                } while( a[x][y] == -1 );
            }
        }
        fore(i, 0, n+1) fore(j, 0, m+1) forn(t, 4)
            d[t][i][j] = inf;
        d[0][st.fi][st.se] = 0;
        queue<t3i > Q;
        Q.push(t3i(0, st.fi, st.se));
        while(!Q.empty()) {
            t3i v = Q.front(); Q.pop();
            int t,x,y;
            tie(t,x,y) = v;
            int nt=(t+1)%4;
            forn(dt,4) {
                int nx=x+di[dt],ny=y+dj[dt];
                if( can[nt][nx][ny] ) {
                    if( uin(d[nt][nx][ny], d[t][x][y]+1) ) {
                        Q.emplace(nt, nx, ny);
                    }
                }
            }
        }
        int ans = inf;
        forn(t, 4) uin(ans, d[t][end.fi][end.se]);
        if( ans == inf ) cout << "impossible\n";
        else cout << ans << '\n';
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    solve();
    return 0;
}
