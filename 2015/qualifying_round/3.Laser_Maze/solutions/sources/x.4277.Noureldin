#include <bits/stdc++.h>
using namespace std;

typedef pair<int,int> pii;

char G[110][110];
bool V[110][100][4];
pii S,D;
vector<pii> laser;
int M,N;

int dx[] = {-1,0,1,0},dy[] = {0,1,0,-1};

int solve(){
	queue<pii> q;
	q.push(make_pair(S.first*N + S.second,0));
	V[S.first][S.second][0] = 1;
	pii u,v;int x,y,t;
	while(!q.empty()){
		u = q.front(); q.pop();
		//cout << u.first/N << " " << u.first%N << " " << u.second << "\n";
		for(int i = 0;i < 4;i++){
			x = u.first/N + dx[i];
			y = u.first%N + dy[i];
			t = u.second + 1;
			if(x >= 0 && x < M && y >= 0 && y < N && V[x][y][t%4] == 0){
				if(D.first == x && D.second == y) return t;
				v = make_pair(x*N + y,t);
				//cout << "from (" << u.first/N << "," << u.first%N << ") go to " << v.first << "(" << x << "," << y << ")" << "\n";
				q.push(v);
				V[x][y][t%4] = 1;
			}
		}
	}
	return -1;
}

void pre(){
	for(int q = 0;q < laser.size();q++){
		int i = laser[q].first, j = laser[q].second;
		V[i][j][0] = V[i][j][1] = V[i][j][2] = V[i][j][3] = 1;
		char s[5];
		if(G[i][j] == '<') strcpy(s,"1234");
		else if(G[i][j] == '^') strcpy(s,"4123");
		else if(G[i][j] == '>') strcpy(s,"3412");
		else strcpy(s,"2341");
		for(int k = 0;k < 4;k++)
			for(int x = i,y = j;x >= 0 && x < M && y >= 0 && y < N;x += dx[k],y += dy[k])
				if(G[x][y] == '#') break;
				else V[x][y][s[k] - '0'] = 1;
	}
}

int main(){
	int T;
	cin >> T;
	for(int t = 1;t <= T;t++){
		cin >> M >> N;
		laser.clear();
		fill(&V[0][0][0],&V[M][0][0],0);
		for(int i = 0;i < M;i++){
			cin >> G[i];
			for(int j = 0;j < N;j++){
				if(G[i][j] == '#') V[i][j][0] = V[i][j][1] = V[i][j][2] = V[i][j][3] = 1;
				else if(G[i][j] == '<' || G[i][j] == '>' || G[i][j] == '^' || G[i][j] == 'v') laser.push_back(make_pair(i,j));
				else if(G[i][j] == 'S') S = make_pair(i,j);
				else if(G[i][j] == 'G') D = make_pair(i,j);
			}
		}
		pre();
		int ans = solve();
		cout << "Case #" << t << ": ";
		if(ans == -1) cout << "impossible\n";
		else cout << ans << "\n";
	}
}