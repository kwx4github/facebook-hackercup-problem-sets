#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

using namespace std;
typedef long long ll;
const double eps = 1e-7;

const ll mod = 1e9+7;

int dx[4] = {1, 0, -1 , 0};
int dy[4] = {0, -1, 0, 1};

vector<vector<char> > ma;
int n,m;
bool check(int x, int y, int tur)
{
	for(int i =0; i<4; ++i)
	{
		int xx = x+dx[i], yy = y+dy[i];
		while(xx>=0 && xx < n && yy >=0 && yy <m)
		{
			if(ma[xx][yy] == '#')
				break;
			int nap = -1;
			if(ma[xx][yy] == '^')
				nap = 0;
			if(ma[xx][yy] == '>')
				nap = 1;
			if(ma[xx][yy] == 'v')
				nap = 2;
			if(ma[xx][yy] == '<')
				nap = 3;
			if(nap == -1)
			{
				xx+=dx[i];
				yy+=dy[i];
				continue;
			}

			nap = tur + nap;
			nap%=4;
			if(nap == i)
				return false;


			xx+=dx[i];
			yy+=dy[i];
		}
	}
	return true;
}

int main()
{
	freopen("input.txt","r", stdin);
	freopen("output.txt","w", stdout);
	
	int t;
	cin>>t;
	int cc = 0;
	while(t--)
	{
		cc++;
		
		
		cin>>n>>m;
		ma.assign(n, vector<char> (m,0));
		int sx, sy;
		for(int i =0; i<n; ++i)
		{
			for(int j =0; j<m; ++j)
			{
				cin>>ma[i][j];
				if(ma[i][j] == 'S')
				{
					sx = i;
					sy = j;
				}
			}
		}
		map<pair<pair<int , int> , int>, int> used;
		queue<pair<pair<int , int>, int> > q;
		q.push(make_pair(make_pair(sx,sy),0));
		used.insert(make_pair(make_pair(make_pair(sx,sy),0),0));
		int ans = -1;
		while(!q.empty())
		{
			int x = q.front().first.first;
			int y = q.front().first.second;
			int len = q.front().second;
			if(ma[x][y] == 'G')
			{
				ans = len;
				break;
			}
			q.pop();

			for(int i =0; i<4; ++i)
			{
				int tur = (len+1)%4;
				int xx = x+dx[i];
				int yy = y+dy[i];
				if(xx <0 || xx >=n || yy<0 || yy >=m)
					continue;
				if(used.find(make_pair(make_pair(xx, yy), tur)) == used.end() && (ma[xx][yy] =='.' || ma[xx][yy] == 'S' || ma[xx][yy] == 'G'))
				{
					if(check(xx, yy, tur))
					{
						used.insert(make_pair(make_pair(make_pair(xx, yy), tur), len+1));
						q.push(make_pair(make_pair(xx, yy), len+1));
					}

				}
			}

		}

		if(ans!=-1)
		{
			cout<<"Case #"<<cc<<": "<<ans<<endl;
		}
		else
			cout<<"Case #"<<cc<<": impossible"<<endl;

		
	}

	return 0;
}

/*
3 5
1 2 3
1 3 2 2 1
*/