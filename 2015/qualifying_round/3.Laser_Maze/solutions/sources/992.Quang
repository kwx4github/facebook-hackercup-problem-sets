#include <bits/stdc++.h>

using namespace std;

int px[4] = {0, -1, 0, 1}, py[4] = {-1, 0, 1, 0}, n, m, o, key, res[111111], d[1111];
char a[111][111];
bool mark[111][111][5], fr[111][111][5], check[111][111];

struct rec
{
	int x, y;
} q[111111], e[111111], s;

void init(){

 	scanf("%d %d\n", &n, &m);
	o = 0;

	for (int i=0 ;i<= 101; i++)
		for (int j= 0; j<= 101; j++){
			check[i][j]= false;
			a[i][j] = '#';
		}


	for (int i=1 ;i<= n; i++){
		for (int j=1 ; j<= m; j++){
			scanf("%c", &a[i][j]);
			if ( d[a[i][j]] != 0){
				o++;
				e[o].x = i; e[o].y = j;				
			}
			if (a[i][j] == 'S'){
				s.x = i; s.y = j;
				check[i][j]= true;
			}

			if ((a[i][j] == 'G') || (a[i][j] == '.'))
				check[i][j] = true;
		}
		scanf("\n");
	}
}

void getready(){

	int cr, u, v, k, h, g;

	for (int i=1; i <= 101; i++)
		for (int j=1; j<= 101; j++)
			for (int k = 0 ; k <= 4; k++){
				mark[i][j][k]=false;
				fr[i][j][k] = true;
			}

	for (int i=1; i<= o; i++){
		u = e[i].x; v= e[i].y; 
		k = d[a[u][v]];
		for (int j=0; j<= 3; j++){
			g = u; h = v;
			cr = (k+j) % 4;
			while ( check[ g + px[cr]][ h + py[cr]]){
				g = g + px[cr];
				h = h + py[cr];
				mark[g][h][j] = true;
			}
		}
	}
}

void loang(){

	int l, r, u, v; 
	key= 0, l=0; r = 1; res[1]=0; q[1] = s;
	fr[q[1].x][q[1].y][0]=true;
	while (l < r){
		l++;
		for (int i=0 ; i<= 3; i++){
			u = q[l].x + px[i]; 
			v = q[l].y + py[i]; 
			if ( (mark[u][v][(res[l]+1) % 4] == false) && ( check[u][v]) && (fr[u][v][(res[l]+1) % 4])){
				if (a[u][v] == 'G'){
					key = res[l]+1;
					break;
				}
				r++;
				q[r].x = u;
				q[r].y = v;
				res[r] = res[l]+1;
				fr[u][v][res[r] % 4]= false;
			}
		}
		if (key !=0)
			break;
	}
}

int main(){

	freopen("laser_maze.txt", "r", stdin);
	freopen("test.out", "w", stdout);
	int test;
	scanf("%d\n", &test);

	d['^']=1; d['>']= 2; d['v']= 3; d['<'] = 4;

	for (int t=1; t<= test; t++){

		init();
		getready();
		loang();

		if (key == 0)
			printf("Case #%d: %s\n", t,"impossible" );
		else
			printf("Case #%d: %d\n", t, key);
	}
}