#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <string.h>
#include <math.h>
#include <fstream>
#include <iostream>
using namespace std;
#define N 110
#define M 1000000
int di[]={-1, 0, 1, 0}, dj[]={0, 1, 0, -1};
char m[N][N], g[N][N][4];
int u[N][N][4];
queue <int> q;
int r, c;
void push(int i, int j, int t)
{
	if(i>=0 && i<r && j>=0 && j<c)
		if(!t || (!g[i][j][t%4] && u[i][j][t%4]==M)) { u[i][j][t%4]=t; q.push(i); q.push(j); q.push(t); }
}
void fill(int i, int j, int t, int k)
{
	for(; ; )
	{
		i+=di[k];
		j+=dj[k];
		if(i<0 || i>=r || j<0 || j>=c || m[i][j]=='#' || m[i][j]=='<' || m[i][j]=='>' || m[i][j]=='^' || m[i][j]=='v') break;
		g[i][j][t]=1;
	}
}
void solve()
{
	int i, j, bi, bj, ei, ej, t, k;
	scanf("%d%d", &r, &c);
	for(i=0; i<r; scanf("%s", m[i]), i++);
	for(i=0; i<r; i++)
		for(j=0; j<c; j++)
			for(k=0; k<4; g[i][j][k]=0, u[i][j][k]=M, k++);
	for(i=0; i<r; i++)
		for(j=0; j<c; j++)
			if(m[i][j]=='S') { bi=i; bj=j; }
			else if(m[i][j]=='G') { ei=i; ej=j; }
			else if(m[i][j]=='#')
			{
				for(k=0; k<4; g[i][j][k]=1, k++);
			}
			else if(m[i][j]!='.')
			{
				for(k=0; k<4; g[i][j][k]=1, k++);
				if(m[i][j]=='^') t=0;
				else if(m[i][j]=='>') t=1;
				else if(m[i][j]=='v') t=2;
				else t=3;
				for(k=0; k<4; fill(i, j, k, (t+k)%4), k++);
			}
	push(bi, bj, 0);
	for(; !q.empty(); )
	{
		i=q.front(); q.pop();
		j=q.front(); q.pop();
		t=q.front(); q.pop();
		for(k=0; k<4; push(i+di[k], j+dj[k], t+1), k++);
	}
	for(t=M, k=0; k<4; t=min(t, u[ei][ej][k]), k++);
	if(t==M) printf("impossible\n");
	else printf("%d\n", t);
}
int main()
{
	int ts;
	scanf("%d", &ts);
	for(int t=1; t<=ts; t++)
	{
		printf("Case #%d: ", t);
		solve();
	}
	return 0;
}