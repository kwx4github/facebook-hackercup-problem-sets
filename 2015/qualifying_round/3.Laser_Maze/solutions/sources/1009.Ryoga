// Enjoy your stay.

#include <bits/stdc++.h>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define all(x) (x).begin(),(x).end()
#define fir first
#define foreach(it,X) for(auto it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define mt make_tuple
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)(x).size())

using namespace std;

typedef istringstream iss;
typedef long long ll;
typedef pair<ll,ll> pi;
typedef stringstream sst;
typedef vector<ll> vi;

int M,N;
char c[111][111];
int d[111][111][4];
int dy[] = {0,1,0,-1};
int dx[] = {1,0,-1,0};
int map2dir[128];

void main2(){
	fill(map2dir, map2dir+128, -1);
	map2dir['>'] = 0;
	map2dir['v'] = 1;
	map2dir['<'] = 2;
	map2dir['^'] = 3;
	cin>>M>>N;
	M+=2, N+=2;
	rep(i,M)rep(j,N) c[i][j] = '#';
	rep2(i,1,M-1)rep2(j,1,N-1){
		cin>>c[i][j];
	}
	int sy,sx,gy,gx;
	rep(i,M)rep(j,N){
		if(c[i][j] == 'S'){
			sy = i, sx = j;
			c[i][j] = '.';
		}else if(c[i][j] == 'G'){
			gy = i, gx = j;
			c[i][j] = '.';
		}
	}
	rep(i,M)rep(j,N)rep(k,4){
		d[i][j][k] = INF;
	}
	d[sy][sx][0] = 0;
	queue<tuple<int,int,int>> Q;
	Q.push(mt(sy,sx,0));
	while(sz(Q)){
		auto t = Q.front();
		Q.pop();
		int y,x,m;
		tie(y,x,m) = t;
		if(y == gy && x == gx){
			cout<<d[y][x][m]<<endl;
			return;
		}
		rep(dir,4){
			int ny = y + dy[dir];
			int nx = x + dx[dir];
			int nm = (m + 1) % 4;
			if(c[ny][nx] == '.'){
				int ok = 1;
				rep(dir2,4){
					int Y = ny, X = nx;
					while(c[Y][X] == '.'){
						Y += dy[dir2];
						X += dx[dir2];
					}
					if(map2dir[c[Y][X]] != -1 &&
					(map2dir[c[Y][X]] + nm) % 4 == (dir2 + 2) % 4){
						ok = 0;
						break;
					}
				}
				if(ok && d[ny][nx][nm] == INF){
					d[ny][nx][nm] = d[y][x][m] + 1;
					Q.push(mt(ny,nx,nm));
				}
			}
		}
	}
	cout<<"impossible"<<endl;
}

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	
	
	int T;
	cin>>T;
	time_t start=clock(),pre=start;
	rep(tc,T){
		cout<<"Case #"<<tc+1<<": ";
		main2();
		time_t now=clock();
		cerr<<tc+1<<"/"<<T<<": "<<(double)(now-pre)/CLOCKS_PER_SEC<<endl;
		if(tc==T-1){
			cerr<<"Total: "<<(double)(now-start)/CLOCKS_PER_SEC<<endl;
			cerr<<"  Ave: "<<(double)(now-start)/CLOCKS_PER_SEC/T<<endl;
		}
		pre=now;
	}
}
