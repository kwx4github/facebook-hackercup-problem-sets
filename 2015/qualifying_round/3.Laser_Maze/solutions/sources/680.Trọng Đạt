uses math;
const
  fi='';
  fo='';
  laser = ['^','v','<','>'];
type
  info=record
    x,y,time:longint;
  end;
var
  f,g:text;
  test,t,m,n:longint;
  a:array[0..101] of ansistring;
  c:array[0..101,0..101,0..3] of boolean;
  r:array[0..101,0..101,0..3] of longint;
  dx,dy:array[0..3] of longint;
  q:array[0..40100] of info;

procedure nhap;
var
  i,j:longint;
begin
  readln(f,m,n);
  for i:=1 to m do
    readln(f,a[i]);
end;


function get(c:char):longint;
begin
  if (c='^') then exit(0);
  if (c='>') then exit(1);
  if (c='v') then exit(2);
  if (c='<') then exit(3);
end;

function inside(x,y:longint):boolean;
begin
  exit( (x>0) and (x<=m) and (y>0) and (y<=n) );
end;

procedure fill(i,j,d,k:longint);
var
  u,v:longint;
begin
  u:=i;
  v:=j;
  repeat
    u:=u+dx[d];
    v:=v+dy[d];
    if inside(u,v)=false then break;
    if (a[u,v]='.') or (a[u,v]='S') or (a[u,v]='G') then
      c[u,v,k]:=false else break;
  until false;
end;



procedure solve;
var
  i,j,cur,k,next,u,v,uu,vv,res,dau,cuoi:longint;
begin
  fillchar(c,sizeof(c),true);
  fillchar(r,sizeof(r),$FF);
  for i:=1 to m do
    for j:=1 to n do
      if a[i,j] in laser then
        begin
          cur:=get(a[i,j]);
          for k:=0 to 3 do
            fill(i,j, (cur+k) mod 4,k);
        end;
  for i:=1 to m do
    for j:=1 to n do
      if a[i,j]='S' then
        begin
          q[1].x:=i;
          q[1].y:=j;
          q[1].time:=0;
          r[i,j,0]:=0;
        end;
  dau:=0;cuoi:=1;
  repeat
    inc(dau);
    if dau>cuoi then break;
    u:=q[dau].x;
    v:=q[dau].y;
    cur:=q[dau].time;
    next:=(cur+1)  mod 4;
    for i:=0 to 3 do
      begin
        uu:=u+dx[i];
        vv:=v+dy[i];
        if inside(uu,vv) then
          if (a[uu,vv]='.') or (a[uu,vv]='S') or (a[uu,vv]='G') then
            if c[uu,vv,next]=true then
              if r[uu,vv,next]=-1 then
              begin
                inc(cuoi);
                q[cuoi].x:=uu;
                q[cuoi].y:=vv;
                q[cuoi].time:=next;
                r[uu,vv,next]:=r[u,v,cur]+1;
              end;
      end;
  until false;
  for i:=1 to m do
    for j:=1 to n do
      if a[i,j]='G' then
        begin
          u:=i;
          v:=j;
        end;
  res:=maxlongint;
  for i:=0 to 3 do
    if r[u,v,i]>=0 then res:=min(res,r[u,v,i]);
  if res<>maxlongint then writeln(g,'Case #',test,': ',res) else
    writeln(g,'Case #',test,': impossible');
end;


begin
  dx[0]:=-1;dy[0]:=0;
  dx[1]:=0;dy[1]:=1;
  dx[2]:=1;dy[2]:=0;
  dx[3]:=0;dy[3]:=-1;

  assign(f,fi);reset(f);
  assign(g,fo);rewrite(g);
  readln(f,t);
  for test:=1 to t do
    begin
      nhap;
      solve;
    end;
  close(f);close(g);
end.