#include<bits/stdc++.h>
#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define range(x,l,r) (l<=x && x<r)
using namespace std;
typedef pair<int,int> pii;
typedef pair<pii,int> tri;

const int dir[] = {-1,0,1,0,-1};
const string fire = "^>v<";
int d[111][111][5];
string g[111], gm[4][111];

int main(){
  int T;
  cin >> T;
  for(int casenum=1;casenum<=T;casenum++){
    int h,w;
    cin >> h >> w;

    int sy=0,sx=0,gy=0,gx=0;
    rep(i,h){
      cin >> g[i];
      rep(j,w){
	if(g[i][j] == 'S'){
	  g[i][j] = '.'; sy = i; sx = j;
	}
	if(g[i][j] == 'G'){
	  g[i][j] = '.'; gy = i; gx = j;
	}
      }
    }

    rep(k,4)rep(i,h){
      gm[k][i] = g[i];
      rep(j,w){
	if(g[i][j] != '.')gm[k][i][j] = '#';
      }
    }

    rep(i,h)rep(j,w){
      rep(dd,4){
	if(fire[dd] == g[i][j]){
	  rep(azu,4){
	    int nd = (dd+azu)%4, y = i+dir[nd], x = j+dir[nd+1];
	    while(range(y,0,h) && range(x,0,w) && g[y][x]=='.'){
	      gm[azu][y][x] = '#';
	      y += dir[nd]; x += dir[nd+1];
	    }
	  }
	}
      }
    }

    int ans = -1;
    memset(d,-1,sizeof(d));
    d[sy][sx][0] = 0;
    queue<tri> q;
    q.push(tri(pii(sy,sx),0));

    while(q.size()){
      tri t = q.front(); q.pop();
      int y = t.first.first, x = t.first.second, m = t.second;

      if(y==gy && x==gx){
	ans = d[y][x][m]; break;
      }

      rep(i,4){
	int ny = y+dir[i], nx = x+dir[i+1], nm = (m+1)%4;
	if(!range(ny,0,h) || !range(nx,0,w))continue;
	if(gm[nm][ny][nx]=='#')continue;

	if(d[ny][nx][nm]<0){	
	  d[ny][nx][nm] = d[y][x][m] + 1;
	  q.push(tri(pii(ny,nx),nm));
	}
      }
    }

    cout << "Case #" << casenum << ": ";
    if(ans<0)cout << "impossible" << endl;
    else cout << ans << endl;
  }
}
