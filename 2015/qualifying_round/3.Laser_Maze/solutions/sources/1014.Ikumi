#include<stdio.h>
#include<algorithm>
#include<queue>
using namespace std;
char str[120][120];
char ds[7]="v<^>";
int dx[]={1,0,-1,0};
int dy[]={0,-1,0,1};
int bfs[4][120][120];
int v[4][120][120];
int main(){
	int T;
	scanf("%d",&T);
	for(int t=1;t<=T;t++){
		int a,b;scanf("%d%d",&a,&b);
		for(int i=0;i<a;i++)scanf("%s",str[i]);
		for(int i=0;i<a;i++)for(int j=0;j<b;j++)for(int k=0;k<4;k++)
			bfs[k][i][j]=999999999;
		int sr,sc,gr,gc;
		for(int i=0;i<a;i++)for(int j=0;j<b;j++){
			if(str[i][j]=='S'){sr=i;sc=j;}
			if(str[i][j]=='G'){gr=i;gc=j;}
		}
		for(int i=0;i<4;i++)for(int j=0;j<a;j++)for(int k=0;k<b;k++)v[i][j][k]=0;
		for(int i=0;i<4;i++){
			for(int j=0;j<a;j++)for(int k=0;k<b;k++){
				for(int l=0;l<4;l++){
					if(ds[l]==str[j][k]){
						int dir=(i+l+1)%4;
						int row=j;
						int col=k;
						while(1){
							row+=dx[dir];
							col+=dy[dir];
							if(row<0||col<0||row>=a||col>=b)break;
							if(str[row][col]=='#')break;
							if(str[row][col]=='<')break;
							if(str[row][col]=='v')break;
							if(str[row][col]=='>')break;
							if(str[row][col]=='^')break;
							v[i][row][col]=1;
						}
					}
				}
			}
		}
		bfs[0][sr][sc]=0;
		queue<pair<int,pair<int,int> > > Q;
		Q.push(make_pair(0,make_pair(sr,sc)));
		while(Q.size()){
			int st=Q.front().first;
			int row=Q.front().second.first;
			int col=Q.front().second.second;
			Q.pop();
			
			for(int i=0;i<4;i++){
				if(row+dx[i]<0||row+dx[i]>=a||col+dy[i]<0||col+dy[i]>=b)continue;
				int tr=row+dx[i];
				int tc=col+dy[i];
				if(str[tr][tc]=='#'||str[tr][tc]=='^'||str[tr][tc]=='>'||str[tr][tc]=='<'||str[tr][tc]=='v')
					continue;
				if(v[st][tr][tc])continue;
				if(bfs[st][row][col]+1<bfs[(st+1)%4][tr][tc]){
					bfs[(st+1)%4][tr][tc]=bfs[st][row][col]+1;
					Q.push(make_pair((st+1)%4,make_pair(tr,tc)));
				}
			}
		}
		int ret=999999999;
		for(int i=0;i<4;i++)ret=min(ret,bfs[i][gr][gc]);
		if(ret>99999999)printf("Case #%d: impossible\n",t);
		else printf("Case #%d: %d\n",t,ret);
	}
}