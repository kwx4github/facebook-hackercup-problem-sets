#include <bits/stdc++.h>



using namespace std;



#define fr(i,a,b) for(int i=a; i<b;++i)
typedef long long ll;
typedef pair<int,int> pii;

const int oo = 0x3f3f3f3f;
struct S{
	int x,y,m;
	S(){}
	S(int X, int Y, int M){ x = X, y = Y, m = M; }
};

int bx, by, ex, ey;
int t, n, m;
char gr[110][110];
bool gr2[110][110][4];
int d[110][110][4];
S fila[110*110*5];
int in, fi;
char turn[] = {'>', 'v', '<', '^'};
int dx[] = {0,1,0,-1};
int dy[] = {1,0,-1,0};

bool valid(int a, int b){
	return a >= 0 && a < n && b >= 0 && b < m;
}

int main(){
	scanf("%d",&t);
	fr(cas,1,t+1){
		memset(gr2, false, sizeof gr2);
		memset(d, 0x3f, sizeof d);
		scanf("%d %d",&n,&m);
		fr(i,0,n){ 
			scanf("%s",gr[i]);
			fr(j,0,m){ 
				if(gr[i][j] == 'S') bx = i, by = j;
				else if(gr[i][j] == 'G') ex = i, ey = j;
			}
		}
		fr(cont,0,4){
			fr(i,0,n){
				fr(j,0,m){
					if(gr[i][j] == '#') gr2[i][j][cont] = true;
					int id = -1;
					fr(k,0,4) if(turn[k] == gr[i][j]) id = k;
					if(id != -1){
						int ii = i, ij = j;
						do{
							gr2[ii][ij][cont] = true;
							ii += dx[id];
							ij += dy[id];
						}while(valid(ii,ij) && (gr[ii][ij] == '.' || gr[ii][ij] == 'S' || gr[ii][ij] == 'G'));
					}
				}
			}
/*			fr(i,0,n){
				fr(j,0,m) printf("%d ",gr2[i][j][cont]);
				puts("");
			}
			puts("");*/
			fr(i,0,n){
				fr(j,0,m){
					int id = -1;
					fr(k,0,4) if(turn[k] == gr[i][j]) id = k;
					if(id != -1){
						gr[i][j] = turn[(id+1)%4];
					}
				}
			}
		}
		in = fi = 0;
		fila[fi++] = S(bx, by, 0);
		d[bx][by][0] = 0;
		int ans = oo;
		while(in < fi){
			S now = fila[in++];
			if(now.x == ex && now.y == ey) ans = min(ans, d[now.x][now.y][now.m]);
			int nt = (now.m+1)%4;
			fr(i,0,4){
				int nx = now.x + dx[i];
				int ny = now.y + dy[i];
				if(valid(nx,ny) && gr2[nx][ny][nt] == false && d[nx][ny][nt] == oo){
					d[nx][ny][nt] = d[now.x][now.y][now.m]+1;
					fila[fi++] = S(nx,ny,nt);
				}
			}
		}
		printf("Case #%d: ", cas);
		if(ans != oo) printf("%d\n", ans);
		else printf("impossible\n");
	}
	return 0;
}





















