#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
#include<cstring>
#include<limits.h>
#include<math.h>

#define FOR(i,a,b)  for(i = (a); i < (b); i++)
#define SET(p)      memset(p,-1,sizeof(p))
#define CLR(p)      memset(p,0,sizeof(p))
#define S(n)	    scanf("%d",&n)
#define P(n)	    printf("%d\n",n)
#define Sl(n)	    scanf("%lld",&n)
#define Pl(n)	    printf("%lld\n",n)
#define Sf(n)       scanf("%lf",&n)
#define Ss(n)       scanf("%s",n)
#define LL long long
#define ULL unsigned long long
#define pb push_back
#define mod 1000000007
typedef long long A_type;
#include<queue>
using namespace std;

A_type gcd(A_type a,A_type b){A_type t; if(a<b){t=a;a=b;b=t;} while(b){t=a%b;a=b;b=t;} return a;}

long long fpow(long long a, long long b){ long long ans=1; while(b) {if(b&1){ans*=a;ans=ans%mod;} a=a*a;a=a%mod; b=b>>1;}return ans;}
int n,m;
int v[100][100][4];
string s[100];
int si,sj,ei,ej;
queue <int> iq,jq,mq;
int mark(int I,int J,int d);
int move(int i,int j,int m);
int printv();
int printa();
int main()
{
    int f,t,T,i,j,k,d;
  freopen("lz.txt","r",stdin);
  freopen("out.txt","w",stdout);

cin>>T;t=1;
while(t<=T)
{
          cin>>n>>m;
          for(i=0;i<n;i++)
          cin>>s[i];
           for(i=0;i<100;i++)
          { for (j=0;j<100;j++)
            { v[i][j][0]=v[i][j][1]=v[i][j][2]=v[i][j][3]=0;
            }
          }
        // printa();
       //  printv();
         for(i=0;i<n;i++)
          {for (j=0;j<m;j++)
          { d=-1;
            switch(s[i][j])
            {
              case '^':d=0;break;
              case '>':d=1;break;
              case 'v':d=2;break;
              case '<':d=3;break;
              case '#':v[i][j][0]=v[i][j][1]=v[i][j][2]=v[i][j][3]=1;break;
              case 'S':si=i;sj=j;break;
              case 'G':ei=i;ej=j;break;
            }
              if(d>-1){
              mark(i,j,d);
              }             
           }
           }
          
         //  printa();
         // printv();
           while(!iq.empty()){iq.pop();jq.pop();mq.pop();}
  move(si,sj,0);
  f=-1;
           while(!iq.empty()){//cout<<"nsxt";
            f=move(iq.front(),jq.front(),mq.front());
            if(f>0)
            break;
            iq.pop();jq.pop();mq.pop();                  
          }
if(f>0)
printf("Case #%d: %d\n",t,f);
else
printf("Case #%d: impossible\n",t);
t++;
}


return 0;}

int mark(int I,int J,int d)
{
    int i,j;
    
    v[I][J][0]=v[I][J][1]=v[I][J][2]=v[I][J][3]=1;
     //cout<<"dsa";
     i=I-1;
    // cout<<i;
       while( i>=0 )
    {if (!(s[i][J]=='.' || s[i][J]=='S' || s[i][J]=='G') )
      break;
     v[i--][J][(4-d)%4]=1; // cout<<i<<j<<I<<J<<d<<"a";
    }
    j=J+1;
    while(j<m )
    {if (!(s[I][j]=='.' || s[I][j]=='S' || s[I][j]=='G') )
      break;
    v[I][j++][(5-d)%4]=1; 
    }
    i=I+1;
    while(i<n )
    {if  (!(s[i][J]=='.' || s[i][J]=='S' || s[i][J]=='G') )
      break;
     v[i++][J][(6-d)%4]=1; 
    }
    j=J-1;
    while(j>=0 )
    {  if (!(s[I][j]=='.' || s[I][j]=='S' || s[I][j]=='G') )
      break;
     v[I][j--][(7-d)%4]=1;
    }
    return 0;
}

int move(int i ,int j , int mov)
{//printf("\ninmove %d,%d,%d: ",i,j,mov);
v[i][j][mov%4]=1;
 int d;
 if (i==ei && j==ej)
   {  return mov;}
     mov=mov+1;
     d=mov%4;
    // cout<<"d:"<<d;
 if (i<(n-1)){if(v[i+1][j][d]==0)
{  iq.push(i+1); jq.push(j);mq.push(mov);v[i+1][j][d]=1;}}
 if (i>0){if(v[i-1][j][d]==0)
{  iq.push(i-1); jq.push(j);mq.push(mov);v[i-1][j][d]=1;}}
 if (j<(m-1)){ if(v[i][j+1][d]==0)
{  iq.push(i); jq.push(j+1);mq.push(mov);v[i][j+1][d]=1;}}
 if (j>0){ if(v[i][j-1][d]==0)
{  iq.push(i); jq.push(j-1);mq.push(mov);v[i][j-1][d]=1;}}
return -1;        
}
int printa() 
{ cout<<"\n";
    for(int i=0;i<n;i++)
   {for(int j=0;j<m;j++)
     cout<<s[i][j];cout<<' ';               
   cout<<"\n";}
    }
int printv()
{cout<<"\n";
for(int i=0;i<n;i++)
{for(int j=0;j<m;j++)
  {printf("%d%d%d%d ",v[i][j][0],v[i][j][1],v[i][j][2],v[i][j][3]);}
cout<<"\n";}
}     


