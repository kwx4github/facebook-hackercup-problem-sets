#define _CRT_SECURE_NO_WARNINGS

#pragma comment (linker, "/STACK:1000000000")

#include <cstdio>
#include <queue>
#include <ctime>
#include <set>
#include <algorithm>
#include <string>
#include <vector>
#include <cassert>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <memory>
#include <deque>
#include <stack>
#include <map>
#include <unordered_set>
#include <list>

using namespace std;

#define pb push_back
#define pob pop_back
#define rs resize
#define as assign
#define lwb lower_bound
#define upb upper_bound
#define mp make_pair
#define all(v) v.begin(), v.end()
#define sz(a) (int)a.size()
#define forn(i, n) for (int i = 0; i < n; ++i)
#define ford(i, n) for (int i = n - 1; i >= 0; --i)

typedef long long ll;
typedef short int shi;
typedef unsigned short int ushi;
typedef unsigned int ui;
typedef unsigned long long ull;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <ll> vl;
typedef vector <vl> vvl;
typedef vector <bool> vb;
typedef vector <vb> vvb;
typedef vector <string> vs;
typedef vector <vs> vvs;
typedef vector <char> vc;
typedef vector <vc> vvc;
typedef vector <vvc> vvvc;
typedef vector <vvi> vvvi;
typedef vector <vvvi> vvvvi;
typedef vector <vvl> vvvl;
typedef vector <vvvl> vvvvl;
typedef vector <vvb> vvvb;
typedef double db;
typedef long double ldb;
typedef vector <db> vdb;
typedef vector <vdb> vvdb;
typedef vector <vvdb> vvvdb;
typedef vector <ldb> vldb;
typedef pair <int, int> ii;
typedef pair <int, char> ic;
typedef pair <ll, ll> lll;
typedef pair <int, ll> il;
typedef pair <ll, int> li;
typedef vector <ii> vii;
typedef vector <ic> vic;
typedef vector <vic> vvic;
typedef vector <vii> vvii;
typedef vector <lll> vll;
typedef vector <vll> vvll;
typedef set <int> si;
typedef set <ll> sl;
typedef set <pair <ll, int> > sli;
typedef set <pair <ll, ll> > sll;
typedef set <ii> sii;
typedef set <pair <int, bool> > sib;
typedef vector <si> vsi;
typedef vector <sii> vsii;
typedef map <int, int> mii;
typedef map <string, char> msc;
typedef map <char, int> mci;
typedef queue <int> qi;
typedef deque <int> di;
typedef stack <int> sti;

const int inf = (int)1e9;
const db eps = 1e-10;   
const int M = 1000;
const int N = 100005;
const int P = 137;
const int K = 11;

clock_t start = clock();

bool u[100][100][10001];
string a[100];
bool d[100][100][4];

int ans, n, m;

void dfs(int x, int y, int t)
{
	if (a[x][y] == 'G')
	{
		ans = min(ans, t);
		return;
	}
	u[x][y][t] = 1;
	if (x > 0 && t < 1000 && !d[x - 1][y][(t + 1) % 4] && !u[x - 1][y][t + 1])
		dfs(x - 1, y, t + 1);
	if (y > 0 && t < 1000 && !d[x][y - 1][(t + 1) % 4] && !u[x][y - 1][t + 1])
		dfs(x, y - 1, t + 1);
	if (x < n - 1 && t < 1000 && !d[x + 1][y][(t + 1) % 4] && !u[x + 1][y][t + 1])
		dfs(x + 1, y, t + 1);
	if (y < m - 1 && t < 1000 && !d[x][y + 1][(t + 1) % 4] && !u[x][y + 1][t + 1])
		dfs(x, y + 1, t + 1);
}


int main() 
{ 		 
#ifndef ONLINE_JUDGE
    freopen("laser_maze.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif;
	int T;
	cin >> T;
	for (int t = 1; t <= T; ++t)
	{
		memset(u, 0, sizeof u);
		memset(d, 0, sizeof d);
		ans = inf;
		cin >> n >> m;
		for (int i = 0; i < n; ++i)
			cin >> a[i];
		int s = 0, p = 0;
		for (int i = 0; i < n; ++i)
			for (int j = 0; j < m; ++j)
			{
				if (a[i][j] == '#')
				{
					d[i][j][0] = 1;
					d[i][j][1] = 1;
					d[i][j][2] = 1;
					d[i][j][3] = 1;
					continue;
				}
				if (a[i][j] == 'S')
				{
					s = i;
					p = j;
					continue;
				}
				if (a[i][j] == '^')
				{
					d[i][j][0] = 1;
					d[i][j][1] = 1;
					d[i][j][2] = 1;
					d[i][j][3] = 1;
					for (int k = i; k >= 0 && a[k][j] != '#'; --k)
						d[k][j][0] = 1;
					for (int k = j; k < m && a[i][k] != '#'; ++k)
						d[i][k][1] = 1;
					for (int k = i; k < n && a[k][j] != '#'; ++k)
						d[k][j][2] = 1;
					for (int k = j; k >= 0 && a[i][k] != '#'; --k)
						d[i][k][3] = 1;
					continue;
				}
				if (a[i][j] == '>')
				{
					d[i][j][0] = 1;
					d[i][j][1] = 1;
					d[i][j][2] = 1;
					d[i][j][3] = 1;
					for (int k = j; k < m && a[i][k] != '#'; ++k)
						d[i][k][0] = 1;
					for (int k = i; k < n && a[k][j] != '#'; ++k)
						d[k][j][1] = 1;
					for (int k = j; k >= 0 && a[i][k] != '#'; --k)
						d[i][k][2] = 1;
					for (int k = i; k >= 0 && a[k][j] != '#'; --k)
						d[k][j][3] = 1;
					continue;
				}
				if (a[i][j] == 'v')
				{
					d[i][j][0] = 1;
					d[i][j][1] = 1;
					d[i][j][2] = 1;
					d[i][j][3] = 1;
					for (int k = i; k < n && a[k][j] != '#'; ++k)
						d[k][j][0] = 1;
					for (int k = j; k >= 0 && a[i][k] != '#'; --k)
						d[i][k][1] = 1;
					for (int k = i; k >= 0 && a[k][j] != '#'; --k)
						d[k][j][2] = 1;
					for (int k = j; k < m && a[i][k] != '#'; ++k)
						d[i][k][3] = 1;
					continue;
				}
				if (a[i][j] == '<')
				{
					d[i][j][0] = 1;
					d[i][j][1] = 1;
					d[i][j][2] = 1;
					d[i][j][3] = 1;
					for (int k = j; k >= 0 && a[i][k] != '#'; --k)
						d[i][k][0] = 1;
					for (int k = i; k >= 0 && a[k][j] != '#'; --k)
						d[k][j][1] = 1;
					for (int k = j; k < m && a[i][k] != '#'; ++k)
						d[i][k][2] = 1;
					for (int k = i; k < n && a[k][j] != '#'; ++k)
						d[k][j][3] = 1;
					continue;
				}
			}
		dfs(s, p, 0);
		cout << "Case #" << t << ": ";
		if (ans == inf)
			cout << "impossible";
		else
			cout << ans;
		cout << '\n';
	}
	return 0;
}