#include <cstdio>
#include <ctime>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <queue>
using namespace std;
#define MP make_pair
#define PB push_back
#define FI first
#define SE second
int tab[5][102][102];
int mod[4][2]={{-1,0},{0,1},{1,0},{0,-1}};
int tt,t,m,n;
typedef  pair<int,pair<int,int> > Ruch;
int main(){
	ios_base::sync_with_stdio(false);
	cin>>tt;
	char c;
	pair<int,int> meta;
	for(t=1;t<=tt;t++){
		priority_queue<Ruch, std::vector<Ruch>, std::greater<Ruch> > ru;
		cin>>m>>n;
		for(int j=0;j<=n+1;j++)
			tab[0][0][j]=tab[0][m+1][j]=10;
		for(int i=1;i<=m;i++){
			tab[0][i][0]=tab[0][i][n+1]=10;
			for(int j=1;j<=n;j++){
				cin>>c;
				switch(c){
					case 'S':
						ru.push(MP(0,MP(i,j)));
						tab[0][i][j]=0;
						break;
					case 'G':
						meta=MP(i,j);
						tab[0][i][j]=0;
						break;
					case '.':
						tab[0][i][j]=0;
						break;
					case '#':
						tab[0][i][j]=10;
						break;
					case '^':
						tab[0][i][j]=11;
						break;
					case '>':
						tab[0][i][j]=12;
						break;
					case 'v':
						tab[0][i][j]=13;
						break;
					case '<':
						tab[0][i][j]=14;
						break;
				}
			}	
		}
		
		for(int k=0;k<3;k++)
		for(int i=0;i<=m+1;i++)
		for(int j=0;j<=n+1;j++)
			if(tab[k][i][j]<=10)
				tab[k+1][i][j]=tab[k][i][j];
			else	
				tab[k+1][i][j]=(tab[k][i][j]-10)%4+11;
		for(int k=0;k<4;k++)
		for(int i=0;i<=m+1;i++)
		for(int j=0;j<=n+1;j++)
			if(tab[k][i][j]>10){
				int r=tab[k][i][j]-11;
				int ia=i,ja=j;
					ia+=mod[r][0];
					ja+=mod[r][1];
					while(tab[k][ia][ja]<10){
						tab[k][ia][ja]=r+1;
						ia+=mod[r][0];
						ja+=mod[r][1];
					}
			}
		//cout<<"dane"<<endl;
		int a,b;
		bool su=false;
		while(!ru.empty()){
				
			Ruch r=ru.top();
				//cout<<r.FI<<" "<<r.SE.FI<<" "<<r.SE.SE<<" "<<endl;
			ru.pop();
			if(r.SE==meta){
				cout<<"Case #"<<t<<": "<<r.first<<"\n";
				su=true;
				break;
			}else
			for(int i=0;i<4;i++){
				a=r.SE.FI+mod[i][0];
				b=r.SE.SE+mod[i][1];
				if(tab[(r.FI+1)%4][a][b]==0){
					ru.push(MP(r.FI+1,MP(a,b)));
					tab[(r.FI+1)%4][a][b]=9;
					}
			}
		}
		if(su==false)
			cout<<"Case #"<<t<<": "<<"impossible\n";
	}
	
	
}
