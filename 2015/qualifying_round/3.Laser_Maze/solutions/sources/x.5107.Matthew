#include <stdio.h>

char laser[] = "<^>v";

int del[4][2] = {{0, -1}, {-1, 0}, {0, 1}, {1, 0}};

char map[101][101][4];

int q[40001][3], qn;

int main(){
    int tc, ti;
    scanf("%d", &tc);

    for(ti=1;ti<=tc;ti++){
        int n, m;
        scanf("%d %d", &n, &m);

        int i, j, k, l;

        // read in map and rotate for each phase
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                char ch;
                scanf(" %c", &ch);

                if(ch == 'S'){
                    q[0][0] = i;
                    q[0][1] = j;
                    q[0][2] = 1;
                }

                map[i][j][0] = map[i][j][1] = map[i][j][2] = map[i][j][3] = ch;

                for(k=0;k<4;k++){
                    if(ch == laser[k]){
                        for(l=0;l<4;l++) map[i][j][l] = (k+l)%4;
                        break;
                    }
                }
            }
        }

        // update the maps
        for(k=0;k<4;k++){
            for(i=0;i<n;i++){
                for(j=0;j<m;j++){
                    if(map[i][j][k] > 3) continue; // not a laser
                    int dir = map[i][j][k];
                    int r = i + del[dir][0];
                    int c = j + del[dir][1];
                    while(r>=0 && c>=0 && r<n && c<m && map[r][c][k] > 3 && map[r][c][k] != '#'){
                        map[r][c][k] = 'o';
                        r += del[dir][0];
                        c += del[dir][1];
                    }
                }
            }
        }

        map[q[0][0]][q[0][1]][0] = '#';
        qn = 1;
        for(i=0;i<qn;i++){
            int r = q[i][0];
            int c = q[i][1];
            int dep = q[i][2];
            int k = dep % 4;

            for(j=0;j<4;j++){
                int nx = r + del[j][0];
                int ny = c + del[j][1];

                if(nx<0 || ny<0 || nx>=n || ny >= m) continue;

                char nc = map[nx][ny][k]; 
                if(nc == '#' || nc == 'o') continue;
                if(nc == 'G'){
                    printf("Case #%d: %d\n", ti, dep);
                    i = qn+1;
                    break;
                }
                map[nx][ny][k] = '#';
            
                q[qn][0] = nx;
                q[qn][1] = ny;
                q[qn][2] = dep + 1;
                ++qn;

            }

        }

        // for(k=0;k<4;k++){
        //     for(i=0;i<n;i++){
        //         for(j=0;j<m;j++){
        //             printf("%c", map[i][j][k] > 3 ? map[i][j][k] : laser[map[i][j][k]]);
        //         }
        //         printf("\n");
        //     }
        //     printf("\n");
        // }
        if(i == qn)
        printf("Case #%d: impossible\n", ti);
    }

    return 0;
}