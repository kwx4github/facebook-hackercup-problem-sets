#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/hash_policy.hpp>
#include<ext/rope>
#define f first
#define s second
//#define mkptr make_shared<nod>
#define mkptr new nod
//#pragma comment(linker,"/STACK:102400000,102400000")
using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;
typedef pair<int,int> par;
typedef pair<par,par> pr;
bool fin[4][105][105];
char mp[105][105];
int main(){
    int t,T=0;
    scanf("%d",&t);
    while(t--){T++;
        int n,m;
        scanf("%d%d",&n,&m);
        for(int i=0;i<n;i++)
            scanf("%s",mp[i]);
        memset(fin,0,sizeof(fin));
        int sx,sy,ex,ey;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                int vx,vy,run=0;
                if(mp[i][j]=='S')sx=i,sy=j;
                else if(mp[i][j]=='G')ex=i,ey=j;
                else if(mp[i][j]=='v')vx=1,vy=0,run=1;
                else if(mp[i][j]=='<')vx=0,vy=-1,run=1;
                else if(mp[i][j]=='^')vx=-1,vy=0,run=1;
                else if(mp[i][j]=='>')vx=0,vy=1,run;
                else if(mp[i][j]=='#')fin[0][i][j]=fin[1][i][j]=fin[2][i][j]=fin[3][i][j]=1;
                if(run){
                    for(int k=0;k<4;k++){
                        int nx=i,ny=j;
                        while(nx>=0&&nx<n&&ny>=0&&ny<m){
                            fin[k][nx][ny]=1;
                            nx+=vx,ny+=vy;
                            }
                        swap(vx,vy),vy=-vy;
                        }
                    }
                }
            }
        /*for(int k=0;k<4;k++)
            for(int i=0;i<n;i++,puts(""))
                for(int j=0;j<m;j++)
                    printf("%d ",fin[k][i][j]);*/
        queue<pr>qu;
        qu.push(pr(par(sx,sy),par(0,0)));
        auto chk=[&](int x,int y,int z,int k){
            if(x<0||y<0||x>=n||y>=m||fin[z][x][y])return;
            fin[z][x][y]=1;
            qu.push(pr(par(x,y),par(z,k)));
            };
        printf("Case #%d: ",T);
        while(!qu.empty()){
            pr now=qu.front();
            qu.pop();
            int x=now.f.f,y=now.f.s,z=now.s.f,k=now.s.s;
            //printf("%d %d %d %d\n",x,y,z,k);
            if(x==ex&&y==ey){
                printf("%d\n",k);
                goto ed;
                }
            chk(x-1,y,(z+1)%4,k+1);
            chk(x+1,y,(z+1)%4,k+1);
            chk(x,y-1,(z+1)%4,k+1);
            chk(x,y+1,(z+1)%4,k+1);
            }
        puts("impossible");
        ed:;
        }
    }
