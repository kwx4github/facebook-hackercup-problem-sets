#include<iostream>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int m,n;
char maze[200][200];
int boom[200][200][4];
int v[200][200][4];
int bfs[10000000][3];//x,y,step

bool chk(int x, int y){
    return x>=0 && x < m && y >=0 && y < n;
}

int main(){
    int T;
    int sx, sy, ex, ey, ans;
    scanf("%d", &T);
    for(int f=1;f<=T;f++){
        scanf("%d%d",&m,&n);
        for(int i=0;i<m;i++){
            scanf("%s",maze[i]);
        }
        for(int i=0;i<m;i++)for(int j=0;j<n;j++)for(int k=0;k<4;k++)
            boom[i][j][k] = v[i][j][k] = 0;

        for(int i=0;i<m;i++) for(int j=0;j<n;j++){
            if(maze[i][j] == '^'){
                for(int k=0;i-k>=0;k++) boom[i-k][j][0] = 1;            
                for(int k=0;j+k< n;k++) boom[i][j+k][1] = 1;            
                for(int k=0;i+k< m;k++) boom[i+k][j][2] = 1;            
                for(int k=0;j-k>=0;k++) boom[i][j-k][3] = 1;            
            }
            if(maze[i][j] == '>'){
                for(int k=0;i-k>=0;k++) boom[i-k][j][3] = 1;            
                for(int k=0;j+k< n;k++) boom[i][j+k][0] = 1;            
                for(int k=0;i+k< m;k++) boom[i+k][j][1] = 1;            
                for(int k=0;j-k>=0;k++) boom[i][j-k][2] = 1;            
            }
            if(maze[i][j] == 'v'){
                for(int k=0;i-k>=0;k++) boom[i-k][j][2] = 1;            
                for(int k=0;j+k< n;k++) boom[i][j+k][3] = 1;            
                for(int k=0;i+k< m;k++) boom[i+k][j][0] = 1;            
                for(int k=0;j-k>=0;k++) boom[i][j-k][1] = 1;            
            }
            if(maze[i][j] == '<'){
                for(int k=0;i-k>=0;k++) boom[i-k][j][1] = 1;            
                for(int k=0;j+k< n;k++) boom[i][j+k][2] = 1;            
                for(int k=0;i+k< m;k++) boom[i+k][j][3] = 1;            
                for(int k=0;j-k>=0;k++) boom[i][j-k][0] = 1;            
            }
            if(maze[i][j] == 'S'){
                sx = i;
                sy = j;
            }
            if(maze[i][j] == 'G'){
                ex = i;
                ey = j;
            }
        }


        int w,l, nx,ny,ns;
        int dx[4] = {0,1,0,-1};
        int dy[4] = {1,0,-1,0};
        l = 0;

        v[sx][sy][0] = 1;
        bfs[l][0] = sx;
        bfs[l][1] = sy;
        bfs[l][2] = 0;
        l++;

        ans = -1;
        for(w=0;w!=l && ans == -1;w++){
            nx = bfs[w][0];
            ny = bfs[w][1];
            ns = bfs[w][2];
            int nm = (ns+1) % 4;
            for(int d=0;d<4;d++){
                if( chk(nx+dx[d], ny+dy[d]) ){
                    if( v[nx+dx[d]][ny+dy[d]][nm] == 1 ||
                        boom[nx+dx[d]][ny+dy[d]][nm] == 1 ){
                        continue;
                    }
                    if( maze[nx+dx[d]][ny+dy[d]] == '#' ){
                        continue;
                    }

                    v[nx+dx[d]][ny+dy[d]][nm] = 1;

                    bfs[l][0] = nx + dx[d];
                    bfs[l][1] = ny + dy[d];
                    bfs[l][2] = ns + 1;
                
                    if(bfs[l][0] == ex && bfs[l][1] == ey){
                        ans = bfs[l][2];
                        break;
                    }
                    l++;
                }    
            }
        }


        printf("Case #%d: ", f);
        if(ans == -1){
            printf("impossible\n");
        }else{
            printf("%d\n",ans);
        }
    }   
}
