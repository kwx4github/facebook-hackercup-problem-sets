#include <bits/stdc++.h>
using namespace std;
int n,m,a,b,res,t;
char maze[110][110];
int p1[]={-1,0,1,0};
int p2[]={0,1,0,-1};
bool vis[110][110][10];
struct node
{int x,y,l;};
bool Check_The_Maze(int x, int y, int ln)
{
    for(int i=y-1;i>=0;i--)///>,1
    {
        if((maze[x][i]!='.') && !(maze[x][i]>=0 && maze[x][i]<=3) )
            break;
        if(maze[x][i]>=0 && maze[x][i]<=3 && (maze[x][i]+ln)%4==1 )
            return false;
    }
    for(int i=y+1;i<m;i++)///<,3
    {
        if((maze[x][i]!='.') && !(maze[x][i]>=0 && maze[x][i]<=3) )
            break;
        if(maze[x][i]>=0 && maze[x][i]<=3 && (maze[x][i]+ln)%4==3 )
            return false;
    }
    for(int i=x-1;i>=0;i--)///V
    {
        if((maze[i][y]!='.') && !(maze[i][y]>=0 && maze[i][y]<=3) )
            break;
        if(maze[i][y]>=0 && maze[i][y]<=3 && (maze[i][y]+ln)%4==2 )
            return false;
    }
    for(int i=x+1;i<n;i++)///^
    {
        if((maze[i][y]!='.') && !(maze[i][y]>=0 && maze[i][y]<=3) )
            break;
        if(maze[i][y]>=0 && maze[i][y]<=3 && (maze[i][y]+ln)%4==0 )
            return false;
    }
    return true;
}
int Solve()
{
    queue< node>Q;
    node z;
    z.x=a, z.y=b, z.l=0;
    Q.push(z);
    while(!Q.empty())
    {
        node f=Q.front();
        Q.pop();
        if(vis[f.x][f.y][f.l%4])
            continue;
        if(f.x<0 || f.x>=n || f.y<0 || f.y>=m )
            continue;
        if(maze[f.x][f.y]=='G')
        {
            if(Check_The_Maze(f.x, f.y, f.l))
              return f.l;
            return -1;
        }
        if(!Check_The_Maze(f.x, f.y, f.l))
            continue;
        if(maze[f.x][f.y]!='.')
            continue;
        vis[f.x][f.y][f.l%4]=1;
        for(int i=0;i<4;i++)
        {
            node F;
            F.x=f.x+p1[i], F.y=f.y+p2[i], F.l=f.l+1;
            Q.push(F);
        }
    }
    return -1;
}
int main()
{
   freopen("r.txt","r",stdin);
   freopen("answer.txt","w",stdout);
   scanf("%d",&t);
   for(int u=1;u<=t;u++)
   {
       scanf("%d %d",&n,&m);
       for(int i=0;i<n;i++)
           scanf("%s",maze[i]);
       for(int i=0;i<n;i++)
       {
           for(int j=0;j<m;j++)
           {
               if(maze[i][j]=='^')
                    maze[i][j]=0;
                if(maze[i][j]=='>')
                   maze[i][j]=1;
                if(maze[i][j]=='v')
                   maze[i][j]=2;
                if(maze[i][j]=='<')
                   maze[i][j]=3;
                if(maze[i][j]=='S')
                   maze[i][j]='.', a=i, b=j;
           }
       }
       memset(vis,0,sizeof vis);
       res=Solve();
       if(res==-1)
          printf("Case #%d: impossible\n",u);
       else
          printf("Case #%d: %d\n",u,res);
   }

    return 0;
}
