import java.io.*;
import java.util.StringTokenizer;

/**
 * Created by shirsh on 11/1/15.
 */
public class OneFifteen {
    private static int[] digitArray;

    public static void main(String...args) {
        Input input = new Input("/home/shirsh/shirsh/hacker-cup/resources/input.txt");

        int T = input.nextInt();
        for(int i = 0; i < T; i++) {
            int n = input.nextInt();
            System.out.println("Case #" + (i+1) + ": " + getSmallest(n) + " " + getBiggest(n));
        }
    }

    private static int getSmallest(int n) {
        if(n == 0) return 0;

        int digits[] = getDigitArray(n);
        int num = 0;

        for(int i = 1; i <= 9; i++) {
            for(int k = 0; k < digits[i]; k++) {
                num = (num * 10) + i;
                if(num > 0 && digits[0] > 0) {
                    for(int l = 0; l < digits[0]; l++) {
                        num = (num * 10);
                    }
                    digits[0] = 0;
                }
            }
        }

        return num;
    }

    private static int getBiggest(int n) {
        if(n == 0) return 0;

        int digits[] = getDigitArray(n);
        int num = 0;
        for(int i = 9; i >= 0; i--) {
            for(int k = 0; k < digits[i]; k++) {
                num = (num * 10) + i;
            }
        }

        return num;
    }

    public static int[] getDigitArray(int n) {
        int digits[] = new int[10];

        while (n != 0) {
            digits[n % 10]++;
            n = n / 10;
        }

        return digits;
    }

    static class Input {
        BufferedReader br;
        StringTokenizer st;

        public Input(String s) {
            try {
                br = new BufferedReader(new FileReader(s));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
        }

        public Input() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String nextToken() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(nextToken());
        }

        String nextString() {
            return nextToken();
        }
    }
}
