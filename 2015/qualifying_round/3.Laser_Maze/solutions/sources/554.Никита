from copy import deepcopy
fin = open('input.txt', 'r')
fout = open('output.txt', 'w')
T = int(fin.readline())
z = 0
while z < T:
    print('Case #', z + 1, ':', sep = '', end = ' ', file = fout)
    n, m = map(int, fin.readline().split())
    arr = []
    dir = [(-1, 0), (0, 1), (1, 0), (0, -1)]
    aim = {'^': 1, '>': 2, 'v': 3, '<': 4}
    for i in range(n):
        row = fin.readline()
        arr.append([])
        for j in range(m):
            arr[i].append(row[j])
            if row[j] == 'S':
                sx, sy = i, j
    moves = []
    for i in range(4):
        moves.append(deepcopy(arr))
        for j in range(n):
            for k in range(m):
                if arr[j][k] in aim:
                    dx, dy = dir[(i + aim[arr[j][k]]) % 4]
                    x, y = j + dx, k + dy
                    while 0 <= x < n and 0 <= y < m and arr[x][y] in ['.', 'S', 'G']:
                        moves[i][x][y] = '#'
                        x += dx
                        y += dy
    q = [(sx, sy, -1)]
    i, ans, en = 0, 0, 1
    while i < len(q):
        if i == en:
            ans += 1
            en = len(q)
        x, y, k = q[i]
        if k != -1:
            if x < 0 or x >= n or y < 0 or y >= m or moves[k][x][y] == '#' or arr[x][y] in aim:
                i += 1
                continue
            moves[k][x][y] = '#'
        if arr[x][y] == 'G':
            print(ans, file = fout)
            break
        for a in range(-1, 2):
            for b in range(-1, 2):
                if (a == 0) ^ (b == 0):
                    q.append((x + a, y + b, (k + 1) % 4))
        i += 1
    else:
        print('impossible', file = fout)
    z += 1
fin.close()
fout.close()