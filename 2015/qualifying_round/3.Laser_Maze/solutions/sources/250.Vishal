#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<stack>
#include<algorithm>
#include<map>
#include<limits>

#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sll(n) scanf("%lld",&n)
#define sull(n) scanf("%llu",&n)
#define ss(str) scanf("%s",str)
#define sf(n) scanf("%f",&n)
#define sd(n) scanf("%lf",&n)
#define I int
#define ll long long int
#define ull unsigned long long int
#define as_0 48
#define as_A 65
#define as_a 97
#define mem(a) memset(a,-1,sizeof a)
#define INF (1<<30)
#define M 1000000009

using namespace std;

long long power(int a, int b)
{
    if( b == 0 )
        return 1;
    else
        return a*power(a,b-1);
}

char arr0[109][109],arr1[109][109],arr2[109][109],arr3[109][109];
int brr0[109][109],brr1[109][109],brr2[109][109],brr3[109][109];
pair<int,int> s,g;
int m,n;

//0 start, -1 empty, -2 wall, -3 goal

struct cell
{
    int a,b,turn;
};

int valid(int a,int b,int turn)
{
    if(a<0 || b<0 || a>=m || b>=n) return 0;
    if(turn==0 && brr1[a][b]!=-1) return 0;
    if(turn==1 && brr2[a][b]!=-1) return 0;
    if(turn==2 && brr3[a][b]!=-1) return 0;
    if(turn==3 && brr0[a][b]!=-1) return 0;
    return 1;
}

int func()
{
    int turn=0;
    queue<cell>q;
    cell c;
    c.a=s.first;
    c.b=s.second;
    c.turn=0;
    q.push(c);

    while(!q.empty())
    {
        if(valid(q.front().a-1,q.front().b,q.front().turn))
        {
            if(q.front().turn==0) brr1[q.front().a-1][q.front().b]=brr0[q.front().a][q.front().b]+1;
            else if(q.front().turn==1) brr2[q.front().a-1][q.front().b]=brr1[q.front().a][q.front().b]+1;
            else if(q.front().turn==2) brr3[q.front().a-1][q.front().b]=brr2[q.front().a][q.front().b]+1;
            else if(q.front().turn==3) brr0[q.front().a-1][q.front().b]=brr3[q.front().a][q.front().b]+1;
            c.a=q.front().a-1; c.b=q.front().b; c.turn=(q.front().turn+1)%4;
            q.push(c);
        }
        if(valid(q.front().a,q.front().b-1,q.front().turn))
        {
            if(q.front().turn==0) brr1[q.front().a][q.front().b-1]=brr0[q.front().a][q.front().b]+1;
            else if(q.front().turn==1) brr2[q.front().a][q.front().b-1]=brr1[q.front().a][q.front().b]+1;
            else if(q.front().turn==2) brr3[q.front().a][q.front().b-1]=brr2[q.front().a][q.front().b]+1;
            else if(q.front().turn==3) brr0[q.front().a][q.front().b-1]=brr3[q.front().a][q.front().b]+1;
            c.a=q.front().a; c.b=q.front().b-1; c.turn=(q.front().turn+1)%4;
            q.push(c);
        }
        if(valid(q.front().a+1,q.front().b,q.front().turn))
        {
            if(q.front().turn==0) brr1[q.front().a+1][q.front().b]=brr0[q.front().a][q.front().b]+1;
            else if(q.front().turn==1) brr2[q.front().a+1][q.front().b]=brr1[q.front().a][q.front().b]+1;
            else if(q.front().turn==2) brr3[q.front().a+1][q.front().b]=brr2[q.front().a][q.front().b]+1;
            else if(q.front().turn==3) brr0[q.front().a+1][q.front().b]=brr3[q.front().a][q.front().b]+1;
            c.a=q.front().a+1; c.b=q.front().b; c.turn=(q.front().turn+1)%4;
            q.push(c);
        }
        if(valid(q.front().a,q.front().b+1,q.front().turn))
        {
            if(q.front().turn==0) brr1[q.front().a][q.front().b+1]=brr0[q.front().a][q.front().b]+1;
            else if(q.front().turn==1) brr2[q.front().a][q.front().b+1]=brr1[q.front().a][q.front().b]+1;
            else if(q.front().turn==2) brr3[q.front().a][q.front().b+1]=brr2[q.front().a][q.front().b]+1;
            else if(q.front().turn==3) brr0[q.front().a][q.front().b+1]=brr3[q.front().a][q.front().b]+1;
            c.a=q.front().a; c.b=q.front().b+1; c.turn=(q.front().turn+1)%4;
            q.push(c);
        }
        q.pop();
    }
    int ans=1000000009;
    if(brr0[g.first][g.second]<0 && brr1[g.first][g.second]<0 && brr2[g.first][g.second]<0 && brr3[g.first][g.second]<0) return -1;

    if(brr0[g.first][g.second]>0) ans=min(ans,brr0[g.first][g.second]);
    if(brr1[g.first][g.second]>0) ans=min(ans,brr1[g.first][g.second]);
    if(brr2[g.first][g.second]>0) ans=min(ans,brr2[g.first][g.second]);
    if(brr3[g.first][g.second]>0) ans=min(ans,brr3[g.first][g.second]);
    return ans;
}

int input()
{
    int i,j;
    si(m); si(n);
    mem(brr0);
    mem(brr1);
    mem(brr2);
    mem(brr3);
    getchar();

    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            sc(arr0[i][j]);
            if(arr0[i][j]=='.') {arr1[i][j]=arr2[i][j]=arr3[i][j]='.';}
            else if(arr0[i][j]=='#') {arr1[i][j]=arr2[i][j]=arr3[i][j]='#';}
            else if(arr0[i][j]=='^') {arr1[i][j]='>'; arr2[i][j]='v'; arr3[i][j]='<';}
            else if(arr0[i][j]=='>') {arr1[i][j]='v'; arr2[i][j]='<'; arr3[i][j]='^';}
            else if(arr0[i][j]=='v') {arr1[i][j]='<'; arr2[i][j]='^'; arr3[i][j]='>';}
            else if(arr0[i][j]=='<') {arr1[i][j]='^'; arr2[i][j]='>'; arr3[i][j]='v';}
            else if(arr0[i][j]=='S') {arr1[i][j]=arr2[i][j]=arr3[i][j]='S'; s.first=i; s.second=j;}
            else if(arr0[i][j]=='G') {arr1[i][j]=arr2[i][j]=arr3[i][j]='G'; g.first=i; g.second=j;}
            //cout<<arr0[i][j];
        }
        getchar();
        //cout<<"\n";
    }

    int k;



    //mark0
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            //cout<<"t";
            if(arr0[i][j]=='#') brr0[i][j]=-2;
            else if(arr0[i][j]=='^')
            {
                brr0[i][j]=-2;
                k=i-1;
                while(k>=0 && (arr0[k][j]=='S' || arr0[k][j]=='G' || arr0[k][j]=='.'))
                {
                    brr0[k][j]=-2;
                    k--;
                }
            }
            else if(arr0[i][j]=='>')
            {
                brr0[i][j]=-2;
                k=j+1;
                while(k<n && (arr0[i][k]=='S' || arr0[i][k]=='G' || arr0[i][k]=='.'))
                {
                    brr0[i][k]=-2;
                    k++;
                }
            }
            else if(arr0[i][j]=='v')
            {
                brr0[i][j]=-2;
                k=i+1;
                while(k<m && (arr0[k][j]=='S' || arr0[k][j]=='G' || arr0[k][j]=='.'))
                {
                    brr0[k][j]=-2;
                    k++;
                }
            }
            else if(arr0[i][j]=='<')
            {
                brr0[i][j]=-2;
                k=j-1;
                while(k>=0 && (arr0[i][k]=='S' || arr0[i][k]=='G' || arr0[i][k]=='.'))
                {
                    brr0[i][k]=-2;
                    k--;
                }
            }
        }
    }


    //mark1
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            if(arr1[i][j]=='#') brr1[i][j]=-2;
            //cout<<"ss";
            else if(arr1[i][j]=='^')
            {
                brr1[i][j]=-2;
                k=i-1;
                while(k>=0 && (arr1[k][j]=='S' || arr1[k][j]=='G' || arr1[k][j]=='.'))
                {
                    brr1[k][j]=-2;
                    k--;
                }
            }
            else if(arr1[i][j]=='>')
            {
                brr1[i][j]=-2;
                k=j+1;
                while(k<n && (arr1[i][k]=='S' || arr1[i][k]=='G' || arr1[i][k]=='.'))
                {
                    brr1[i][k]=-2;
                    k++;
                }
            }
            else if(arr1[i][j]=='v')
            {
                brr1[i][j]=-2;
                k=i+1;
                while(k<m && (arr1[k][j]=='S' || arr1[k][j]=='G' || arr1[k][j]=='.'))
                {
                    brr1[k][j]=-2;
                    k++;
                }
            }
            else if(arr1[i][j]=='<')
            {
                brr1[i][j]=-2;
                k=j-1;
                while(k>=0 && (arr1[i][k]=='S' || arr1[i][k]=='G' || arr1[i][k]=='.'))
                {
                    brr1[i][k]=-2;
                    k--;
                }
            }
            //cout<<"s";
        }

    }

    //cout<<"t";

    //mark2
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            //cout<<i<<j<<"\n";
            if(arr2[i][j]=='#') brr2[i][j]=-2;
            else if(arr2[i][j]=='^')
            {
                brr2[i][j]=-2;
                k=i-1;
                while(k>=0 && (arr2[k][j]=='S' || arr2[k][j]=='G' || arr2[k][j]=='.'))
                {
                    brr2[k][j]=-2;
                    k--;
                }
            }
            else if(arr2[i][j]=='>')
            {
                brr2[i][j]=-2;
                k=j+1;
                while(k<n && (arr2[i][k]=='S' || arr2[i][k]=='G' || arr2[i][k]=='.'))
                {
                    brr2[i][k]=-2;
                    k++;
                }
            }
            else if(arr2[i][j]=='v')
            {
                //cout<<"r";
                brr2[i][j]=-2;
                k=i+1;
                while(k<m && (arr2[k][j]=='S' || arr2[k][j]=='G' || arr2[k][j]=='.'))
                {
                    brr2[k][j]=-2;
                    k++;
                }
            }
            else if(arr2[i][j]=='<')
            {
                brr2[i][j]=-2;
                k=j-1;
                while(k>=0 && (arr2[i][k]=='S' || arr2[i][k]=='G' || arr2[i][k]=='.'))
                {
                    brr2[i][k]=-2;
                    k--;
                }
            }

        }
    }

    //mark3
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            if(arr3[i][j]=='#') brr3[i][j]=-2;
            else if(arr3[i][j]=='^')
            {
                brr3[i][j]=-2;
                k=i-1;
                while(k>=0 && (arr3[k][j]=='S' || arr3[k][j]=='G' || arr3[k][j]=='.'))
                {
                    brr3[k][j]=-2;
                    k--;
                }
            }
            else if(arr3[i][j]=='>')
            {
                brr3[i][j]=-2;
                k=j+1;
                while(k<n && (arr3[i][k]=='S' || arr3[i][k]=='G' || arr3[i][k]=='.'))
                {
                    brr3[i][k]=-2;
                    k++;
                }
            }
            else if(arr3[i][j]=='v')
            {
                brr3[i][j]=-2;
                k=i+1;
                while(k<m && (arr3[k][j]=='S' || arr3[k][j]=='G' || arr3[k][j]=='.'))
                {
                    brr3[k][j]=-2;
                    k++;
                }
            }
            else if(arr3[i][j]=='<')
            {
                brr3[i][j]=-2;
                k=j-1;
                while(k>=0 && (arr3[i][k]=='S' || arr3[i][k]=='G' || arr3[i][k]=='.'))
                {
                    brr3[i][k]=-2;
                    k--;
                }
            }
        }
    }

    brr0[s.first][s.second]=0;

    /*for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            cout<<brr2[i][j];
        }
        cout<<"\n";
    }*/

    //return 0;

    return func();
}

int main()
{
   //freopen("inp.txt","r",stdin);
   //freopen("outp.txt","w",stdout);
   int t,z=1;
   cin>>t;
   while(t--)
   {
       cout<<"Case #"<<z++<<": ";
       int ans=input();
       if (ans==-1) cout<<"impossible\n";
       else cout<<ans<<"\n";
   }


 return 0;
}
