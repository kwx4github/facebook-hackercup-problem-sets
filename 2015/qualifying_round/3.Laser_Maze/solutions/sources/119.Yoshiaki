#include <cstdlib>
#include <cmath>
#include <climits>
#include <cfloat>
#include <map>
#include <utility>
#include <set>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <sstream>
#include <deque>
#include <complex>
#include <stack>
#include <queue>
#include <cstdio>
#include <cctype>
#include <cstring>
#include <ctime>
#include <iterator>
#include <bitset>
#include <numeric>
#include <list>
#include <iomanip>

#if __cplusplus >= 201103L
#include <array>
#include <tuple>
#include <initializer_list>
#include <unordered_set>
#include <unordered_map>
#include <forward_list>

#define cauto const auto&
#define ALL(v) begin(v),end(v)
#else
#define ALL(v) (v).begin(),(v).end()
#endif

using namespace std;


namespace{
typedef long long LL;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;

typedef vector<int> vint;
typedef vector<vector<int> > vvint;
typedef vector<long long> vll, vLL;
typedef vector<vector<long long> > vvll, vvLL;

#define VV(T) vector<vector< T > >

template <class T>
void initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){
	v.assign(a, vector<T>(b, t));
}

template <class F, class T>
void convert(const F &f, T &t){
	stringstream ss;
	ss << f;
	ss >> t;
}


#define REP(i,n) for(int i=0;i<int(n);++i)
#define RALL(v) (v).rbegin(),(v).rend()


#define MOD 1000000007LL
#define EPS 1e-8

char v[128][128];
bool bl[4][128][128];
int vis[4][128][128];
int gen;

void mainmain(){
	++gen;

	int h, w;
	cin >> h >> w;
	const int dy[] = {-1, 0, 1, 0};
	const int dx[] = {0, 1, 0, -1};
	for(int i = 0; i < w + 2; ++i){
		v[0][i] = v[h + 1][i] = '#';
	}
	for(int i = 1; i <= h; ++i){
		cin >> (v[i] + 1);
		v[i][0] = v[i][w + 1] = '#';
	}

	int start = -1, goal = -1;
	for(int i = 0; i <= h + 1; ++i)
	for(int j = 0; j <= w + 1; ++j){
		for(int k = 0; k < 4; ++k){
			bl[k][i][j] = false;
		}
		if(v[i][j] == 'S'){
			start = i << 7 | j;
			v[i][j] = '.';
		}
		else if(v[i][j] == 'G'){
			goal = i << 7 | j;
			v[i][j] = '.';
		}
	}

	for(int i = 0; i <= h + 1; ++i)
	for(int j = 0; j <= w + 1; ++j){
		if(v[i][j] == '#'){
			for(int k = 0; k < 4; ++k){
				bl[k][i][j] = true;
			}
		}
		else if(v[i][j] != '.'){
			int d0;
			if(v[i][j] == '^'){ d0 = 0; }
			else if(v[i][j] == '>'){ d0 = 1; }
			else if(v[i][j] == 'v'){ d0 = 2; }
			else if(v[i][j] == '<'){ d0 = 3; }
			else{ abort(); }

			for(int d = 0; d < 4; ++d){
				int y = i, x = j;
				do{
					bl[d][y][x] = true;
					y += dy[(d + d0) & 3];
					x += dx[(d + d0) & 3];
				} while(v[y][x] == '.');
			}
		}
	}

	queue<int> q;
	q.push(start);
	q.push(-1);
	int tm = 1;
	vis[0][start >> 7][start & 127] = gen;
	while(q.size() > 1){
		int st = q.front();
		q.pop();
		if(st == -1){
			++tm;
			q.push(-1);
		}
		else{
			int y = st >> 7, x = st & 127;
			for(int d = 0; d < 4; ++d){
				int ny = y + dy[d], nx = x + dx[d];
				if(!bl[tm & 3][ny][nx] && vis[tm & 3][ny][nx] != gen){
					vis[tm & 3][ny][nx] = gen;
					if((ny << 7 | nx) == goal){
						cout << tm;
						return;
					}
					q.push(ny << 7 | nx);
				}
			}
		}
	}
	cout << "impossible";
}

}
int main() try{
	char buf[32] = "";
	cin.getline(buf, 32);
	string s = buf;
	int T = strtol(buf, 0, 10);
	int d = strlen(buf);
	for(int tc = 1; tc <= T; ++tc){
		cerr << setw(d + 4) << tc << " / " << setw(d) << T << '\n';
		cout << "Case #" << tc << ": ";
		mainmain();
		cout << endl;
	}
}
catch(...){
	cerr << "ERROR\n";
}
