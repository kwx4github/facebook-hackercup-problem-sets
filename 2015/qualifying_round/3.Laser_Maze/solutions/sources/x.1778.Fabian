#include <iostream>
#include <cstdio>
#include <queue>
using namespace std;

struct Est{
    int i,j,pos;
    Est()
    {
        i = j = pos = 0;
    }
    Est(const int &_i, const int &_j, const int &_pos)
    {
        i = _i;
        j = _j;
        pos = _pos;
    }
};

int vAbs(int num)
{
    if(num < 0)
        return num*-1;
    return num;
}

Est ini,fin;
int di[4] = {0,1,0,-1};
int dj[4] = {1,0,-1,0};
char dm[4] = {'>','v','<','^'};

int n,m;
char sop[105][105];
int mark[105][105][4];
int  mat[105][105][4];
queue <Est> cola;
int turn = 1;

bool valido(const Est &E)
{
    if(E.i >= 0 && E.j >= 0 && E.i < n && E.j < m && mark[E.i][E.j][E.pos] != turn && mat[E.i][E.j][E.pos] == 0)
        return true;
    return false;
}

int busca()
{
    Est a, temp;
    while(!cola.empty())
    {
        a = cola.front();
        cola.pop();
        if(a.i == fin.i && a.j == fin.j)
            return mat[a.i][a.j][a.pos];

        for(int h = 0; h < 4; ++h)
        {
            temp = Est(a.i+di[h], a.j+dj[h], (a.pos+1)%4);
            if(valido(temp))
            {
                cola.push(temp);
                mat[temp.i][temp.j][temp.pos] = mat[a.i][a.j][a.pos]+1;
            }
        }

    }
    return -1;
}

int main()
{
    freopen("laser_maze.txt","r",stdin);
    freopen("text.out","w",stdout);

    int T;
    cin>>T;

    for(int t = 0; t < T; ++t)
    {
        cin>>n>>m;
        for(int i = 0; i < n; ++i)
            cin>>sop[i];
        cout<<"Case #"<<t+1<<": ";
        for(int i = 0; i < n; ++i)
           for(int j = 0; j < m; ++j)
            {
                switch(sop[i][j])
                {
                case 'G':
                    ini = Est(i,j,0);
                    break;
                case 'S':
                    fin = Est(i,j,0);
                    break;
                case '#':
                    for(int h = 0; h < 4; ++h)
                        mark[i][j][h] = turn;
                    break;
                case '.': break;
                default:
                    int dir;
                    for(int h = 0; h < 4; ++h)
                        if(sop[i][j] == dm[h])
                            dir = h;
                    for(int h = 3; h >= 0; --h)
                    {
                       if(di[dir] != 0)
                            for(int d = vAbs(di[dir]*i); d >= 0 && d < n && sop[d][j] != '#'; d+=di[dir])
                                mark[d][j][h] = turn;
                       else
                            for(int d = vAbs(dj[dir]*j); d >= 0 && d < m && sop[i][d] != '#'; d+=dj[dir])
                                mark[i][d][h] = turn;
                       dir = (dir+1)%4;
                    }
                }
            }

            for(int h = 0; h < 4; ++h)
            {
                Est temp = Est(ini.i+di[h],ini.j+dj[h],0);
                if(valido(temp))
                {
                    cola.push(temp);
                    mat[temp.i][temp.j][0] = 1;
                }
            }
            int sol = busca();
            if(sol == -1)
            {
                if(t != T-1)
                    cout<<"impossible"<<endl;
                else
                    cout<<"impossible";
            }
            else
            {
                if(t != T-1)
                    cout<<sol<<endl;
                else
                    cout<<sol;
            }

            for(int ti = 0; ti < n; ++ti)
                for(int tj = 0; tj < m; ++tj)
                    for(int th = 0; th < 4; ++th)
                        mat[ti][tj][th] = 0;
            ++turn;
    }


    return 0;
}
