#include <iostream>
#include <cstring>
using namespace std;

const int smax = 100;
const int dy[] = {0, -1, 0, 1}, dx[] = {1, 0, -1, 0};
char cd[] = ">^<v";

char a[4][smax][smax + 1];
int qa[smax * smax], qi[smax * smax], qj[smax * smax], nq;

int main() {
	int nt, it;

	cin >> nt;
	for (it = 1; it <= nt; it++) {
		int m, n;
		int i, j, k, id, l, a1, i1, j1, r = 0;
		int is, js, ig, jg;

		cin >> m >> n;
		for (i = 0; i < m; i++) cin >> a[0][i];

		for (i = 0; i < m; i++) for (j = 0; j < n; j++) {
			if (a[0][i][j] == 'S') {
				is = i, js = j;
				a[0][i][j] = '.';
			}
			if (a[0][i][j] == 'G') {
				ig = i, jg = j;
				a[0][i][j] = '.';
			}
			for (k = 1; k < 4; k++) {
				char *pd = strchr(cd, a[0][i][j]);

				if (pd) {
					a[k][i][j] = cd[(pd - cd - k + 4) % 4];
				} else {
					a[k][i][j] = a[0][i][j];
				}
			}
		}

		for (i = 0; i < m; i++) for (j = 0; j < n; j++) {
			for (k = 0; k < 4; k++) {
				char *pd = strchr(cd, a[k][i][j]);

				if (pd) {
					id = pd - cd;
					for (l = 1; ; l++) {
						i1 = i + dy[id] * l;
						j1 = j + dx[id] * l;
						if (i1 < 0 || i1 >= m || j1 < 0 || j1 >= n || a[k][i1][j1] != '.' && a[k][i1][j1] != '*') break;
						a[k][i1][j1] = '*';
					}
				}
			}
		}

		cout << "Case #" << it << ": ";

		// for (k = 0; k < 4; k++) {
		// 	for (i = 0; i < m; i++) {
		// 		cout << string(a[k][i], a[k][i] + n) << '\n';
		// 	}
		// 	cout << '\n';
		// }

		qa[0] = 0, qi[0] = is, qj[0] = js, nq = 1;
		for (i = 0, j = nq; i < nq; i++) {
			if (i == j) {
				r++;
				j = nq;
			}
			if (qi[i] == ig && qj[i] == jg) {
				break;
			}
			for (id = 0; id < 4; id++) {
				a1 = (qa[i] + 1) % 4;
				i1 = qi[i] + dy[id];
				j1 = qj[i] + dx[id];
				if (i1 < 0 || i1 >= m || j1 < 0 || j1 >= n || a[a1][i1][j1] != '.') continue;
				a[a1][i1][j1] = 'o';
				qa[nq] = a1, qi[nq] = i1, qj[nq] = j1, nq++;
			}
		}

		if (i < nq) {
			cout << r;
		} else {
			cout << "impossible";
		}
		cout << '\n';
	}
}
