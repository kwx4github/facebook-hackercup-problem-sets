#include<stdio.h>
#include<string.h>

char s[101][101];
bool u[101][101][4];
int dx[4]={0,-1,0,1};
int dy[4]={-1,0,1,0};
int x[40001];
int y[40001];
int z[40001];
int f[101][101][4];

void solve()
{
  int n,m;
  int i,j,k;
  scanf("%d%d",&n,&m);
  for (i=0;i<n;i++)
    scanf("%s",s[i]);
  memset(u,true,sizeof(u));
  int sx,sy,ex,ey;
  for (i=0;i<n;i++)
    for (j=0;j<m;j++)
    {
      if (s[i][j]=='S')
      {
        sx=i;
        sy=j;
        s[i][j]='.';
      }
      if (s[i][j]=='G')
      {
        ex=i;
        ey=j;
        s[i][j]='.';
      }
      if (s[i][j]!='.')
      {
        for (k=0;k<4;k++)
          u[i][j][k]=false;
      }
    }
  for (i=0;i<n;i++)
    for (j=0;j<m;j++)
    {
      if (s[i][j]=='.'||s[i][j]=='#') continue;
      int cc;
      if (s[i][j]=='<') cc=0;
      if (s[i][j]=='^') cc=1;
      if (s[i][j]=='>') cc=2;
      if (s[i][j]=='v') cc=3;
      if (cc==-1) continue;
      for (k=0;k<4;k++)
      {
        int xx=i+dx[k];
        int yy=j+dy[k];
        while (xx>=0&&xx<n&&yy>=0&&yy<m)
        {
          if (s[xx][yy]=='.') u[xx][yy][(k-cc+4)%4]=false;
          else break;
          xx=xx+dx[k];
          yy=yy+dy[k];
        }
      }
    }
  int head=1;
  int tail=1;
  x[1]=sx;
  y[1]=sy;
  z[1]=0;
  memset(f,-1,sizeof(f));
  f[sx][sy][0]=0;
  while (head<=tail)
  {
    for (i=0;i<4;i++)
    {
      int xx=x[head]+dx[i];
      int yy=y[head]+dy[i];
      if (xx>=0&&xx<n&&yy>=0&&yy<m&&u[xx][yy][(z[head]+1)%4]&&f[xx][yy][(z[head]+1)%4]==-1)
      {
        tail++;
        x[tail]=xx;
        y[tail]=yy;
        z[tail]=(z[head]+1)%4;
        f[xx][yy][(z[head]+1)%4]=f[x[head]][y[head]][z[head]]+1;
      }
    }
    head++;
  }
  int res=-1;
  for (i=0;i<4;i++)
    if (f[ex][ey][i]>=0&&(res==-1||res>f[ex][ey][i])) res=f[ex][ey][i];
  if (res==-1) printf("impossible\n");
  else printf("%d\n",res);
}

int main()
{
  freopen("/usr/local/google/home/lxhgww/Downloads/laser_maze.txt","r",stdin);
  freopen("/usr/local/google/home/lxhgww/Downloads/laser_maze_output.txt","w",stdout);
  int t,p;
  scanf("%d",&t);
  for (p=1;p<=t;p++)
  {
    printf("Case #%d: ",p);
    solve();
  }
}

