#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 205
#define INF 2000000000
#define eps 0.000000000001

using namespace std;

char a[Nmax][Nmax];
int dp[Nmax][Nmax][4],linG,colG,linS,colS,n,m,numar[10000];
const int dx[]={-1,0,1, 0};
const int dy[]={ 0,1,0,-1};

struct cell
{
    int lin,col,pasi;
};
queue <cell> Q;

inline bool Ok(cell w, int pasi)
{
    int i,j;
    if(w.lin<1 || w.lin>n || w.col<1 || w.col>m) return false;
    if(a[w.lin][w.col]=='#') return false;
    for(j=w.col;j<=m;++j) if(numar[a[w.lin][j]]==(2-pasi+12)%4) return false;
    for(i=w.lin;i<=n;++i) if(numar[a[i][w.col]]==(3-pasi+12)%4) return false;
    for(j=w.col;j;--j) if(numar[a[w.lin][j]]==(0-pasi+12)%4) return false;
    for(i=w.lin;i;--i) if(numar[a[i][w.col]]==(1-pasi+12)%4) return false;
    return true;
}

inline void Lee()
{
    cell w,w1;
    int t;
    w.lin=linS; w.col=colS; w.pasi=0; dp[w.lin][w.col][w.pasi]=0; Q.push(w);
    while(!Q.empty())
    {
        w=Q.front(); Q.pop();
        for(t=0;t<4;++t)
        {
            w1.lin=w.lin+dx[t]; w1.col=w.col+dy[t]; w1.pasi=(w.pasi+1)%4;
            if(Ok(w1,w1.pasi) && dp[w1.lin][w1.col][w1.pasi]>dp[w.lin][w.col][w.pasi]+1)
            {
                dp[w1.lin][w1.col][w1.pasi]=dp[w.lin][w.col][w.pasi]+1;
                Q.push(w1);
            }
        }
    }
}

int main()
{
    int T,tt,i,j,k,minim;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>T;
    numar['<']=2;
    numar['^']=3;
    numar['>']=0;
    numar['v']=1;
    numar['.']=numar['S']=numar['G']=numar['#']=-1;
    for(tt=1;tt<=T;++tt)
    {
        cin>>n>>m;
        for(i=1;i<=n;++i)
            cin>>(a[i]+1);
        for(i=1;i<=n;++i)
            for(j=1;j<=m;++j)
            {
                for(k=0;k<4;++k)
                    dp[i][j][k]=INF;
                if(a[i][j]=='S')
                {
                    linS=i;
                    colS=j;
                }
                if(a[i][j]=='G')
                {
                    linG=i;
                    colG=j;
                }
            }
        Lee();
        minim=INF;
        for(i=0;i<4;++i) minim=min(minim,dp[linG][colG][i]);
        if(minim==INF) cout<<"Case #"<<tt<<": impossible\n";
        else cout<<"Case #"<<tt<<": "<<minim<<"\n";
    }
    return 0;
}
