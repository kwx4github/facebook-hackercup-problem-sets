#include <iostream>
#include <array>
#include <stack>
#include <vector>
using namespace std;
int main(){
	int T;
	cin >> T;
	for(int t=1;t<=T;t++){
		cout << "Case #" << t << ": ";
		int M,N,S,G,h,b,d;
		cin >> M >> N;
		bool maze[M][N][4];
		vector<stack<int> > st(4), ko(2);
		char teck;
		bool p;
		for(int i=0;i<M*N;i++){
			cin >> teck;
			p=0;
			switch(teck){
				case '.': p=1;
					break;
				case 'S': S = i;
					p=1;
					break;
				case 'G': G = i;
					p=1;
					break;
				case '^': st[0].push(i);
					break;
				case '>': st[1].push(i);
					break;
				case 'v': st[2].push(i);
					break;
				case '<': st[3].push(i);
			}
			for(int j=0;j<4;j++){
				maze[i/N][i%N][j] = p;
			}
		}
		for(int i=0;i<4;i++){
			while(!st[i].empty()){
				h = st[i].top()/N;
				b = st[i].top()%N;
				st[i].pop();
				for(int j=h+1;j<M && (maze[j][b][0]||maze[j][b][1]||maze[j][b][2]||maze[j][b][3]);j++){
					maze[j][b][(6-i)%4]=0;
				}
				for(int j=h-1;j>=0 && (maze[j][b][0]||maze[j][b][1]||maze[j][b][2]||maze[j][b][3]);j--){
					maze[j][b][(4-i)%4]=0;
				}
				for(int j=b+1;j<N && (maze[h][j][0]||maze[h][j][1]||maze[h][j][2]||maze[h][j][3]);j++){
					maze[h][j][(5-i)%4]=0;
				}
				for(int j=b-1;j>=0 && (maze[h][j][0]||maze[h][j][1]||maze[h][j][2]||maze[h][j][3]);j--){
					maze[h][j][(7-i)%4]=0;
				}
			}
		}
		ko[0].push(S);
		p = 0;
		for(int svar=0;!ko[p].empty();svar++){
			while(!ko[p].empty()){
				d = ko[p].top();
				h = d/N;
				b = d%N;
				ko[p].pop();
				if(h<0||b<0||h>=M||(svar!=0 && !maze[h][b][svar%4])) continue;
				maze[h][b][svar%4] = 0;
				if(d==G){
					teck = 'Y';
					break;
				}
				ko[!p].push(d+N);
				ko[!p].push(d-N);
				if(b!=0) ko[!p].push(d-1);
				if(b!=N-1) ko[!p].push(d+1);
			}
			if(teck=='Y'){
				cout << svar << endl;
				break;
			}
			p^=1;
		}
		if(teck!='Y'){
			cout << "impossible" << endl;
		}
	}
}