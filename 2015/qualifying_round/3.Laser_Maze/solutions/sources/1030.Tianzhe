#include<bits/stdc++.h>
#define X first
#define Y second
#define mp make_pair
#define ph push
#define pb push_back
#define rep(i,a,n) for(int _tmp=n,i=a;i<=_tmp;++i)
#define dep(i,a,n) for(int _tmp=n,i=a;i>=_tmp;--i)
#define ALL(x,S) for(__typeof((S).end()) x=S.begin();x!=S.end();x++)
#define eps 1e-8
#define pi 3.1415926535897
#define sqr(x) ((x)*(x))
#define MAX(a,b) a=max(a,b)
#define MIN(a,b) a=min(a,b)
#define SZ(x) ((int)(x).size())
#define CPY(a,b) memcpy(a,b,sizeof(a))
#define CLR(a) memset(a,0,sizeof(a))
#define POSIN(x,y) (1<=(x)&&(x)<=n&&1<=(y)&&(y)<=m)
#define all(x) (x).begin(),(x).end()
#define COUT(S,x) cout<<fixed<<setprecision(x)<<S<<endl
using namespace std;
typedef long long ll;
typedef double lf;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef pair<lf,lf> pff;
typedef complex<double> CD;
const int inf=0x20202020;
const int mod=1000000007;
template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
template<class T> inline void read(T&x,T&y){read(x);read(y);}
template<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}
template<class T> inline void read(T&x,T&y,T&z,T&q){read(x);read(y);read(z);read(q);}
const int DX[]={1,0,-1,0},DY[]={0,1,0,-1};
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll powmod(ll a,ll b,ll mod) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}
//*******************************************
bool bad[4][103][103];
int a[111][111],b[111][111];
char s[111][111];
bool vis[4][111][111];
int n,m;
bool is(int c) {
	return (c>=0&&c<=3);
}
void rebuild() {
	CLR(bad);
	rep(k,0,3){
		rep(i,1,n)rep(j,1,m)if(is(a[i][j]))b[i][j]=(a[i][j]+k)%4;else b[i][j]=a[i][j];
		rep(i,1,n)rep(j,1,m)if(is(b[i][j])){
			bad[k][i][j]=1;int x=b[i][j];
			if(x==0){
				dep(ii,i-1,1)if(b[ii][j]==4)bad[k][ii][j]=1;
				else break;
			} else if(x==1) {
				rep(jj,j+1,m)if(b[i][jj]==4)bad[k][i][jj]=1;
				else break;
			}else if (x==2) {
				rep(ii,i+1,n)if(b[ii][j]==4)bad[k][ii][j]=1;
				else break;
			} else if(x==3) {
				dep(jj,j-1,1)if(b[i][jj]==4)bad[k][i][jj]=1;
				else break;
			}
		} else if(b[i][j]<0){
			bad[k][i][j]=1;
		}
	}
}
struct S{
	int x,y,st,K;
	S(){}
	S(int _x,int _y,int _st,int _K){x=_x,y=_y,st=_st,K=_K;}
} q[5555555];
int dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};
int main() {
	//freopen("1.in","r",stdin);
	//freopen("1.out","w",stdout);
	int cs=0;
	int T;read(T);while(T--){
		read(n,m);int sx,sy,tx,ty;
		rep(i,1,n)scanf("%s",s[i]+1);
		rep(i,1,n)rep(j,1,m){
			if(s[i][j]=='<')a[i][j]=3;
			if(s[i][j]=='^')a[i][j]=0;
			if(s[i][j]=='>')a[i][j]=1;
			if(s[i][j]=='v')a[i][j]=2;
			if(s[i][j]=='#')a[i][j]=-1;
			if(s[i][j]=='.')a[i][j]=4;
			if(s[i][j]=='S')a[i][j]=4,sx=i,sy=j;
			if(s[i][j]=='G')a[i][j]=4,tx=i,ty=j;
		}
		rebuild();bool f=0;
		printf("Case #%d: ",++cs);
		CLR(vis);
		int l,r;q[l=r=1]=S(sx,sy,0,0);vis[0][sx][sy]=1;
		while (l<=r) {
			S now=q[l++];
			int x=now.x,y=now.y,st=now.st,K=now.K;
			if(x==tx&&y==ty){f=1;printf("%d\n",now.st);break;}
			int kk=(K+1)%4;
			rep(p,0,3){
				int nx=x+dx[p],ny=y+dy[p];
				if(!POSIN(nx,ny))continue;
				if(bad[kk][nx][ny])continue;
				if(vis[kk][nx][ny])continue;
				vis[kk][nx][ny]=1;
				q[++r]=S(nx,ny,now.st+1,kk);
			}
		}
		if(!f)puts("impossible");
	}
	
	return 0;
}
