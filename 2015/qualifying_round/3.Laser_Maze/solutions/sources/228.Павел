#include <iostream>

using namespace std;

const int inf = 1 << 20;

char a[128][128];

int d[128][128][4];

int dx[] = {1, 0, -1, 0};
int dy[] = {0, 1, 0, -1};
char symbols[] = "v>^<";

int qx[1 << 16];
int qy[1 << 16];
int qz[1 << 16];

int main()
{
    int t;
    cin >> t;

    for (int tt=1; tt<=t; tt++)
    {
        int n, m;
        cin >> n >> m;

        cin.getline(a[0], sizeof(a[0]));
        for (int i=0; i<n; i++)
            cin.getline(a[i], sizeof(a[i]));

        for (int i=0; i<n; i++)
            for (int j=0; j<m; j++)
                for (int k=0; k<4; k++)
                    d[i][j][k] = inf;

        int qs = 0, qf = 0;
        int gx = -1, gy = -1;

        for (int i=0; i<n; i++)
            for (int j=0; j<m; j++)
            {
                if (a[i][j] == '#')
                {
                    for (int k=0; k<4; k++)
                        d[i][j][k] = -1;
                    continue;
                }

                if (a[i][j] == 'G')
                {
                    gx = i;
                    gy = j;
                    continue;
                }

                if (a[i][j] == 'S')
                {
                    qx[qf] = i;
                    qy[qf] = j;
                    qz[qf] = 0;
                    qf++;
                    continue;
                }

                if (a[i][j] == '.')
                    continue;

                int s;
                for (int k=0; k<4; k++)
                    if (a[i][j] == symbols[k])
                        s = k;

                for (int k=0; k<4; k++)
                {
                    for (int t = 0; ; t++)
                    {
                        int x = i + t * dx[s];
                        int y = j + t * dy[s];

                        if (x < 0 || x >= n || y < 0 || y >= m || a[x][y] != '.' && a[x][y] != 'S' && a[x][y] != 'G' && t)
                            break;

                        d[x][y][k] = -1;
                    }

                    s = s + 3 & 3;
                }
            }

        d[qx[0]][qy[0]][qz[0]] = 0;

        for (; qs < qf; qs++)
        {
            int x = qx[qs];
            int y = qy[qs];
            int z = qz[qs];

            int s = z + 1 & 3;

            for (int k=0; k<4; k++)
            {
                int i = x + dx[k];
                int j = y + dy[k];

                if (i < 0 || i >= n || j < 0 || j >= m)
                    continue;

                if (d[i][j][s] > d[x][y][z] + 1)
                {
                    d[i][j][s] = d[x][y][z] + 1;
                    qx[qf] = i;
                    qy[qf] = j;
                    qz[qf] = s;
                    qf++;
                }
            }
        }

        int ans = inf;
        for (int s=0; s<4; s++)
            if (d[gx][gy][s] > 0)
                ans = min(d[gx][gy][s], ans);

        cout << "Case #" << tt << ": ";
        if (ans < inf)
            cout << ans;
        else
            cout << "impossible";
        cout << endl;
    }
    return 0;
}
