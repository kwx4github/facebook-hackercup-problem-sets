#include<cstdio>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<set>
#include<string>
#include<map>
using namespace std;

char temp[109][109];
int A[109][109];
int B[109][109];
int X[10],Y[10];

int main()
{
	X[0]=0;
	Y[0]=1;

	X[1]=1;
	Y[1]=0;
	
	X[2]=0;
	Y[2]=-1;
	
	X[3]=-1;
	Y[3]=0;

	freopen("laser_maze.txt","r",stdin); 
    freopen("output.txt","w",stdout);

    

	int cas_1;
	scanf("%d",&cas_1);

	for(int cas1=1;cas1<=cas_1;cas1++)
	{
		int m,n;

		scanf("%d %d",&m,&n);

		for(int i=0;i<m;i++)
			for(int j=0;j<n;j++)
				A[i][j] = -1;

		int x1,y1,x2,y2;

		for(int i=0;i<m;i++)
		{
			scanf("%s",temp[i]);

			for(int j=0;j<n;j++)
			{
				if(temp[i][j]=='S')
				{
					x1=i;
					y1=j;
					A[i][j]=-2;
				}
				else if(temp[i][j]=='G')
				{
					x2=i;
					y2=j;
				}
				else if(temp[i][j]=='<')
					A[i][j]=0;
				else if(temp[i][j]=='^')
					A[i][j]=1;
				else if(temp[i][j]=='>')
					A[i][j]=2;
				else if(temp[i][j]=='v')
					A[i][j]=3;
				
				
			}
		}

		int res = -1;

		for(int step = 0;step<=n*m*20;step++)
		{
			for(int i=0;i<m;i++)
			for(int j=0;j<n;j++)
				B[i][j] = -1;

			for(int i=0;i<m;i++)
				for(int j=0;j<n;j++)
					if(A[i][j]==-2)
					{
						for(int k=0;k<4;k++)
							if( i+X[k]>=0  && i+X[k]<m 
								&& j+Y[k]>=0  && j+Y[k]<n 
								&& (temp[i+X[k]][j+Y[k]]=='.' || temp[i+X[k]][j+Y[k]]=='G' || temp[i+X[k]][j+Y[k]]=='S'))
							{
								B[i+X[k]][j+Y[k]]=-2;
							}
					}

			for(int i=0;i<m;i++)
				for(int j=0;j<n;j++)
					if(A[i][j]>=0)
					{
						B[i][j] = (A[i][j] + 1)%4;
						
						if(B[i][j]==0)
						{
							for(int k=j-1;k>=0;k--)
								if(B[i][k] == -2)
									B[i][k]=-1;
						}
						else if(B[i][j]==1)
						{
							for(int k=i-1;k>=0;k--)
								if(B[k][j] == -2)
									B[k][j]=-1;
						}
						else if(B[i][j]==2)
						{
							for(int k=j+1;k<n;k++)
								if(B[i][k] == -2)
									B[i][k]=-1;
						}
						else if(B[i][j]==3)
						{
							for(int k=i+1;k<m;k++)
								if(B[k][j] == -2)
									B[k][j]=-1;
						}
					}

					for(int i=0;i<m;i++)
						for(int j=0;j<n;j++)
							A[i][j] = B[i][j];

					if(A[x2][y2]==-2)
					{
						res = step +1;
						break;
					}

		}

		if(res == -1)
			printf("Case #%d: impossible\n",cas1);
		else
			printf("Case #%d: %d\n",cas1,res);
		
	}

	return 0;    
}

