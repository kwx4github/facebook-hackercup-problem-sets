import java.io.*;
import java.util.*;
import static java.lang.System.*;

public class C {
	public static void main (String [] args) throws IOException {new C().run();}
	public void run() throws IOException{
		Scanner file = new Scanner(new File("C.txt"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("C.out.txt")));
		int T = file.nextInt();
        for (int asdf = 0; asdf < T; asdf++) {
            int R = file.nextInt(), C = file.nextInt();
            file.nextLine();
            char[][] mat = new char[R][];
            int SR = -1, SC = -1, GR = -1, GC = -1;
            for (int i = 0; i < R; i++) {
                String str = file.nextLine();
                mat[i] = str.toCharArray();
                if (str.contains("S")) {
                    SR = i; 
                    SC = str.indexOf('S');
                }
                if (str.contains("G")) {
                    GR = i; 
                    GC = str.indexOf('G');
                }
            }
            mat[SR][SC] = '.';
            mat[GR][GC] = '.';
            boolean laser[][][] = new boolean[4][R][C];
            String L = "^>v<";
            int[][] mr = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};
            for (int i = 0; i < 4; i++) {
                for (int r = 0; r < R; r++) {
                    for (int c = 0; c < C; c++) { //heh c++
                        int ind = L.indexOf(mat[r][c]);
                        if (ind != -1) {
                            ind = rotate(ind, i);
                            int dr = mr[ind][0], dc = mr[ind][1];
                            int rr = r + dr, cc = c + dc;
                            while (ib(rr, cc, R, C) && mat[rr][cc] == '.') {
                                laser[i][rr][cc] = true;
                                rr += dr;
                                cc += dc;
                            }
                        }
                    }
                }
            }
            /*
            for (int i = 0; i < 4; i ++){
                for (int r = 0; r < R; r++) {
                    for (int c = 0; c < C; c++) {
                        System.out.print(laser[i][r][c] ? 'o':'.');
                    }
                    System.out.println();
                }
                System.out.println();
            }
            */
            boolean[][][] vis = new boolean[4][R][C];
            Queue<int[]> que = new ArrayDeque<int[]>();
            int fin = -1;
            que.add(new int[]{SR, SC, 0});
            while (!que.isEmpty()) {
                int[] ar = que.remove();
                int r = ar[0], c = ar[1], d = ar[2], dir = d % 4, next = rotate(dir, 1);
                if (vis[dir][r][c]) {
                    continue;
                }
                vis[dir][r][c] = true;
                if (r == GR && c == GC) {
                    fin = d;
                    break;
                }
                for (int i = 0; i < 4; i++){
                    int dr = mr[i][0], dc = mr[i][1];
                    int rr = r + dr, cc = c + dc;
                    if (ib(rr, cc, R, C) && mat[rr][cc] == '.' && !vis[next][rr][cc] && !laser[next][rr][cc]) {
                        que.add(new int[]{rr, cc, d + 1});
                    }
                }
            }
            out.printf("Case #%d: %s%n", asdf + 1, fin == -1 ? "impossible":fin);
        }
		out.close();
		System.exit(0);
	}
    int rotate(int x, int dx) {
        return (x + dx) % 4;
    }
    boolean ib(int r, int c, int R, int C) {
        return !(r < 0 || c < 0 || r >= R || c >= C);
    }
}