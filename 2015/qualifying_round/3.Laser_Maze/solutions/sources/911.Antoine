<?php
	$dirs = array(
		array(0, -1),
		array(1, 0),
		array(0, 1),
		array(-1, 0)
	);

	function solve($x, $y, $t)
	{
		//printf("solve($x, $y, $t)\n");
		global $W, $H, $map, $visited, $turrets, $dirs, $target;
		
		if ($x < 0 || $x >= $W || $y < 0 || $y >= $H || $map[$x][$y] == '#')
			return;
		
		if ($t > $target)
			return;
		
		$m = $t % 4;
		$hash = "$x-$y-$m";
		if (isset($visited[$hash]))
			if ($t >= $visited[$hash])
				return;
		$visited[$hash] = $t;
		
		/* test turrets */
		if ($t > 0) foreach ($turrets as $turret)
		{
			list($tx, $ty, $dir) = $turret;
			list($dx, $dy) = $dirs[($dir + $t) % 4];
			if ($dy && $x == $tx || $dx && $y == $ty)
			{
				while (1)
				{
					$tx += $dx;
					$ty += $dy;
					if ($tx < 0 || $tx >= $W || $ty < 0 || $ty >= $H || $map[$tx][$ty] == '#')
						break;
					if ($tx == $x && $ty == $y)
						return;
				}
			}
		}
		
		if ($map[$x][$y] == 'G')
		{
			$target = min($t, $target);
			return;
		}
		
		solve($x - 1, $y, $t + 1);
		solve($x + 1, $y, $t + 1);
		solve($x, $y - 1, $t + 1);
		solve($x, $y + 1, $t + 1);
	}
	
	fscanf(STDIN, "%d", $T);
	for ($i = 1; $i <= $T; $i++)
	{
		$map = array();
		$turrets = array();
		fscanf(STDIN, "%d %d", $H, $W);
		for ($y = 0; $y < $H; $y++)
		{
			$line = str_split(fgets(STDIN));
			for ($x = 0; $x < $W; $x++)
			{
				$map[$x][$y] = $line[$x];
				if ($map[$x][$y] == 'S')
				{
					$sx = $x;
					$sy = $y;
				}
				$dir = array_search($map[$x][$y], array('^', '>', 'v', '<'));
				if ($dir !== FALSE)
				{
					$map[$x][$y] = '#';
					$turrets[] = array($x, $y, $dir);
				}
			}
		}
		
		$visited = array();
		$target = INF;
		solve($sx, $sy, 0);		
		printf("Case #%d: %s\n", $i, is_infinite($target) ? 'impossible' : $target);
	}
?>