#include <vector>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include<iomanip>
using namespace std;

typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
#define pb push_back
#define sz size()
#define ln length()
#define fore(i,a,b) for(int i=a;i<b;i++)
#define fores(i,a,b) for(int i=a;i<=b;i++)
#define ford(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%d",&a)
#define md 1000000007

int main() {
	freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
	int t;
	cin>>t;
	fore(z,0,t)
	{
		printf("Case #%d: ",z+1);
		int n,m;
		sc(n);sc(m);
		vector<string> adj;
		fore(i,0,n)
		{
			string temp;
			cin>>temp;
			adj.pb(temp);
		}
		vector<pii> pos;
		pii beg,endo;
		fore(i,0,n)
		{
			fore(j,0,m)
			{
				if(adj[i][j]!='.' && adj[i][j]!='S' && adj[i][j]!='G' && adj[i][j]!='#')
					pos.pb(mp(i,j));
				else if(adj[i][j]=='S')
					beg = mp(i,j);
				else if(adj[i][j]=='G')
					endo = mp(i,j);
			}
		}
		vector<vi> cur(n,vi(m,0));
		cur[beg.ff][beg.ss] = 1;
		bool found = false;
		fore(k,0,((n+m)*2)+3)
		{
			if(cur[endo.ff][endo.ss]==1)
			{
				cout<<k<<endl;
				found = true;
				break;
			}
			fore(i,0,pos.sz)
			{
				if(adj[pos[i].ff][pos[i].ss] == '>')
					adj[pos[i].ff][pos[i].ss]  = 'v';
				else if(adj[pos[i].ff][pos[i].ss] == 'v')
					adj[pos[i].ff][pos[i].ss] = '<';
				else if(adj[pos[i].ff][pos[i].ss] == '<')
					adj[pos[i].ff][pos[i].ss] = '^';
				else if(adj[pos[i].ff][pos[i].ss] =='^')
					adj[pos[i].ff][pos[i].ss] = '>';
			}
			vector<vi> vis(n,vi(m,0));
			fore(i,0,pos.sz)
			{
				vis[pos[i].ff][pos[i].ss] = -1;
				switch(adj[pos[i].ff][pos[i].ss])
				{
					case '<':
					ford(j,pos[i].ss-1,0)
					{
						if(adj[pos[i].ff][j]=='.' || adj[pos[i].ff][j]=='S'  || adj[pos[i].ff][j]=='G')
						{
							vis[pos[i].ff][j] = -1;
						}
						else
							break;
					}
					break;
					case 'v':
					fore(j,pos[i].ff+1,n)
					{
						if(adj[j][pos[i].ss]=='.' || adj[j][pos[i].ss]=='S'  || adj[j][pos[i].ss]=='G')
						{
							vis[j][pos[i].ss] = -1;
						}
						else
							break;
					}
					break;

					case '>':
					fore(j,pos[i].ss+1,m)
					{
						if(adj[pos[i].ff][j]=='.' || adj[pos[i].ff][j]=='S'  || adj[pos[i].ff][j]=='G')
						{
							vis[pos[i].ff][j] = -1;
						}
						else
							break;
					}
					break;

					case '^':
					ford(j,pos[i].ff-1,0)
					{
						if(adj[j][pos[i].ss]=='.' || adj[j][pos[i].ss]=='S'  || adj[j][pos[i].ss]=='G')
						{
							vis[j][pos[i].ss] = -1;
						}
						else
							break;
					}
					break;
				}
			}
			/*fore(i,0,n)
			{
			    fore(j,0,m)
			    {
			        cout<<vis[i][j]<<" ";
			    }
			    cout<<endl;
			}*/
			vector<vi> temp(n,vi(m,0));
			fore(i,0,n)
			{
				fore(j,0,m)
				{
					if(cur[i][j]==1)
					{
						if(i!=n-1)
							if(adj[i+1][j]!='#' && vis[i+1][j]!=-1)
								temp[i+1][j] = 1;
						if(i!=0)
							if(adj[i-1][j]!='#' && vis[i-1][j]!=-1)
								temp[i-1][j] = 1;
						if(j!=m-1)
							if(adj[i][j+1]!='#' && vis[i][j+1]!=-1)
								temp[i][j+1] = 1;
						if(j!=0)
							if(adj[i][j-1]!='#' && vis[i][j-1]!=-1)
								temp[i][j-1] = 1;
					}
				}
			}
			cur = temp;
		}
		if(!found)
			cout<<"impossible"<<endl;
	}
	return 0;
}
