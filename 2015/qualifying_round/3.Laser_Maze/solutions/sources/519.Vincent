uses math;
var
	T,M,N,i,j,k,l : byte;
	start_x,start_y,end_x,end_y : byte;
	map : array[1..5,0..101,0..101] of char;
	step : array[1..4,0..101,0..101] of longint;
procedure draw_laser(S : char;ke,y,x : byte);
var
	a,b : byte;
begin
	//down laser
	if S = 'v' then
	begin
		for a:=y+1 to M do 
		begin
			if (map[ke,a,x] = '.') or (map[ke,a,x] = 'l') then map[ke,a,x]:='l'
			else break;
		end;
		map[ke+1,y,x]:='<';
	end
	else if S = '^' then
	begin
		for a:=y-1 downto 1 do 
		begin
			if (map[ke,a,x] = '.') or (map[ke,a,x] = 'l') then map[ke,a,x]:='l'
			else break;
		end;
		map[ke+1,y,x]:='>';
	end
	else if S = '>' then
	begin
		for b:=x+1 to N do 
		begin
			if (map[ke,y,b] = '.') or (map[ke,y,b] = 'l') then map[ke,y,b]:='l'
			else break;
		end;
		map[ke+1,y,x]:='v';
	end
	else if S = '<' then
	begin
		for b:=x-1 downto 1 do 
		begin
			if (map[ke,y,b] = '.') or (map[ke,y,b] = 'l') then map[ke,y,b]:='l'
			else break;
		end;
		map[ke+1,y,x]:='^';
	end;
end;

procedure dfs(ke : longint;y,x : byte);
begin
	//writeln(ke,' ',y,' ',x);
	if (y > 0) and (y < M+1) and (X > 0) and (X < N+1) then
	begin
		if (map[(ke mod 4)+1,y-1,x] = '.') and (step[(ke mod 4)+1,y-1,x] > step[ke,y,x]+1) then
		begin
			step[(ke mod 4)+1,y-1,x]:=step[ke,y,x]+1;
			dfs((ke mod 4)+1,y-1,x);
		end;
		if (map[(ke mod 4)+1,y+1,x] = '.') and (step[(ke mod 4)+1,y+1,x] > step[ke,y,x]+1) then
		begin
			step[(ke mod 4)+1,y+1,x]:=step[ke,y,x]+1;
			dfs((ke mod 4)+1,y+1,x);
		end;
		if (map[(ke mod 4)+1,y,x-1] = '.') and (step[(ke mod 4)+1,y,x-1] > step[ke,y,x]+1) then
		begin
			step[(ke mod 4)+1,y,x-1]:=step[ke,y,x]+1;
			dfs((ke mod 4)+1,y,x-1);
		end;
		if (map[(ke mod 4)+1,y,x+1] = '.') and (step[(ke mod 4)+1,y,x+1] > step[ke,y,x]+1) then
		begin
			step[(ke mod 4)+1,y,x+1]:=step[ke,y,x]+1;
			dfs((ke mod 4)+1,y,x+1);
		end;
	end;
end;

var
	Z : longint;
	output : text;
begin
	assign(output,'output.txt');
	rewrite(output);
	readln(T);
	for k:=1 to T do
	begin
		readln(M,N);
		//map	
		for j:=1 to M do
		begin
			for i:=1 to N do
			begin
				read(map[1,j,i]);
				map[2,j,i]:=map[1,j,i];
				map[3,j,i]:=map[1,j,i];
				map[4,j,i]:=map[1,j,i];
				if map[1,j,i] = 'S' then 
				begin
					start_x:=i;
					start_y:=j;
					map[1,j,i]:='.';
					map[2,j,i]:='.';
					map[3,j,i]:='.';
					map[4,j,i]:='.';
				end
				else if map[1,j,i] = 'G' then
				begin
					end_x:=i;
					end_y:=j;
					map[1,j,i]:='.';
					map[2,j,i]:='.';
					map[3,j,i]:='.';
					map[4,j,i]:='.';
				end;
				step[1,j,i]:=1000000000;
				step[2,j,i]:=1000000000;
				step[3,j,i]:=1000000000;
				step[4,j,i]:=1000000000;
			end;
			readln;
		end;
		//Make 4 Laser Possibility
		for l:=1 to 4 do
			for j:=1 to M do
				for i:=1 to N do
						draw_laser(map[l,j,i],l,j,i);
		
		{for l:=1 to 4 do
		begin
			for j:=1 to M do
			begin
				for i:=1 to N do
				begin
					write(map[l,j,i]);
				end;
				writeln;
			end;
			writeln;
		end;}
		step[1,start_y,start_x]:=0;
		dfs(1,start_y,start_x);
		Z:=1000000000;
		for l:=1 to 4 do
			if map[l,end_y,end_x] = '.' then
				Z:=min(Z,step[l,end_y,end_x]);
		
		write(output,'Case #',k,': ');
		if Z < 1000000000 then writeln(output,Z)
		else writeln(output,'impossible');
	end;
	close(output);
end.
