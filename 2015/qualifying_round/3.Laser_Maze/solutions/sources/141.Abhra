/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
int arr[110][110][4],xs,ys,xf,yf,m,n;
vector<string> v;
vector<pair<int,int> > vp;

vector<pair<pair<int,int>,int> > v1;
int bfs(){
	int ans=0,x,y,z,k,c;
	v1.clear();
	v1.pb(mp(mp(xs,ys),0));
	arr[xs][ys][0]=1;
	while(v1.size()){
		x=v1[0].F.F;
		y=v1[0].F.S;
		z=v1[0].S;
		c=arr[x][y][z];
		k=(z+1)%4;
		v1.erase(v1.begin());
	//	cout<<x<<" "<<y<<" "<<z<<" "<<c<<endl;
		if(x-1>=0 && arr[x-1][y][k]==0){
			if(x-1==xf && y==yf) return c+1;
			arr[x-1][y][k]=c+1;
			v1.pb(mp(mp(x-1,y),k));
		}
		if(y-1>=0 && arr[x][y-1][k]==0){
			if(x==xf && y-1==yf) return c+1;
			arr[x][y-1][k]=c+1;
			v1.pb(mp(mp(x,y-1),k));
		}
		if(x+1<n && arr[x+1][y][k]==0){
			if(x+1==xf && y==yf) return c+1;
			arr[x+1][y][k]=c+1;
			v1.pb(mp(mp(x+1,y),k));
		}
		if(y+1<m && arr[x][y+1][k]==0){
			if(x==xf && y+1==yf) return c+1;
			arr[x][y+1][k]=c+1;
			v1.pb(mp(mp(x,y+1),k));
		}
	}
	return -1;
}
int main(){
	int t,x,y,cas=0,ans;
	string s;
	si(t);
	while(t--){
		si(n);si(m);
		f(i,n) f(j,m) f(k,4) arr[i][j][k]=0;
		v.clear();vp.clear();
		f(i,n){
			cin>>s;
			v.pb(s);
			f(j,m){
				if(v[i][j]=='<' || v[i][j]=='>' || v[i][j]=='^' || v[i][j]=='v') vp.pb(mp(i,j));
				if(v[i][j]!='.' && v[i][j]!='G' && v[i][j]!='S') f(k,4) arr[i][j][k]=-1;
				if(v[i][j]=='S'){
					xs=i;ys=j;
				}
				if(v[i][j]=='G'){
					xf=i;yf=j;
				}
			}
		}
		f(i,4){
			f(j,vp.size()){
				x=vp[j].F;y=vp[j].S;
				if(v[x][y]=='<'){
					fre(k,y-1,0){
						if(v[x][k] != '.' && v[x][k] != 'S' && v[x][k] != 'G') break;
						arr[x][k][i]=-1;
					}
					v[x][y]='^';
				}
				else if(v[x][y]=='^'){
					fre(k,x-1,0){
						if(v[k][y] != '.' && v[k][y] != 'S' && v[k][y] != 'G') break;
						arr[k][y][i]=-1;
					}
					v[x][y]='>';
				}
				else if(v[x][y]=='>'){
					fr(k,y+1,m){
						if(v[x][k] != '.' && v[x][k] != 'S' && v[x][k] != 'G') break;
						arr[x][k][i]=-1;
					}
					v[x][y]='v';
				}
				else if(v[x][y]=='v'){
					fr(k,x+1,n){
						if(v[k][y] != '.' && v[k][y] != 'S' && v[k][y] != 'G') break;
						arr[k][y][i]=-1;
					}
					v[x][y]='<';
				}
			}
		}
		ans=bfs();
		printf("Case #%d: ",++cas);
		if(ans==-1) printf("impossible");
		else printf("%d",ans-1);
		cout<<endl;
	}
	
	return 0;
}