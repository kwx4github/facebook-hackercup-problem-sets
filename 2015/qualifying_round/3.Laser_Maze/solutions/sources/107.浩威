#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
using namespace std;
char p[10][105][105],s[105][105];
int n,m,i,j,k,nx,ny,nz,nowx[100005],nowy[100005],nowz[100005],T,_,X,Y,l,r;
bool FLAG;
const int F1[4]={0,0,1,-1};
const int F2[4]={1,-1,0,0};
int main()
{
    scanf("%d",&T);
    for (_=1; _<=T; _++)
    {
        scanf("%d%d",&n,&m);
        for (i=1; i<=n; i++)
          scanf("%s",s[i]);
        printf("Case #%d: ",_);
        X=0;
        for (i=1; i<=n; i++)
          for (j=1; j<=m; j++)
            if (s[i][j-1]=='S' || s[i][j-1]=='G' || s[i][j-1]=='.')
              p[X][i][j-1]='.'; else p[X][i][j-1]='#';
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
          {
              if (s[i][j]=='^')
              {
                  p[X][i][j]='#';
                  for (k=i-1; k>=1; k--)
                    if (s[k][j]=='.' || s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#'; else break;
              }
              if (s[i][j]=='v')
              {
                  p[X][i][j]='#';
                  for (k=i+1; k<=n; k++)
                    if (s[k][j]=='.' ||s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#';  else break;
              }
              if (s[i][j]=='<')
              {
                  p[X][i][j]='#';
                  for (k=j-1; k>=0; k--)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
              if (s[i][j]=='>')
              {
                  p[X][i][j]='#';
                  for (k=j+1; k<m; k++)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
          }
        X++;
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
          {
              if (s[i][j]=='^') s[i][j]='>'; else
              if (s[i][j]=='>') s[i][j]='v'; else
              if (s[i][j]=='v') s[i][j]='<'; else
              if (s[i][j]=='<') s[i][j]='^';
          }
        for (i=1; i<=n; i++)
          for (j=1; j<=m; j++)
            if (s[i][j-1]=='S' || s[i][j-1]=='G' || s[i][j-1]=='.')
              p[X][i][j-1]='.'; else p[X][i][j-1]='#';
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
          {
              if (s[i][j]=='^')
              {
                  p[X][i][j]='#';
                  for (k=i-1; k>=1; k--)
                    if (s[k][j]=='.' || s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#'; else break;
              }
              if (s[i][j]=='v')
              {
                  p[X][i][j]='#';
                  for (k=i+1; k<=n; k++)
                    if (s[k][j]=='.' ||s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#';  else break;
              }
              if (s[i][j]=='<')
              {
                  p[X][i][j]='#';
                  for (k=j-1; k>=0; k--)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
              if (s[i][j]=='>')
              {
                  p[X][i][j]='#';
                  for (k=j+1; k<m; k++)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
          }
        X++;
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
          {
              if (s[i][j]=='^') s[i][j]='>'; else
              if (s[i][j]=='>') s[i][j]='v'; else
              if (s[i][j]=='v') s[i][j]='<'; else
              if (s[i][j]=='<') s[i][j]='^';
          }
        for (i=1; i<=n; i++)
          for (j=1; j<=m; j++)
            if (s[i][j-1]=='S' || s[i][j-1]=='G' || s[i][j-1]=='.')
              p[X][i][j-1]='.'; else p[X][i][j-1]='#';
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
          {
              if (s[i][j]=='^')
              {
                  p[X][i][j]='#';
                  for (k=i-1; k>=1; k--)
                    if (s[k][j]=='.' || s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#'; else break;
              }
              if (s[i][j]=='v')
              {
                  p[X][i][j]='#';
                  for (k=i+1; k<=n; k++)
                    if (s[k][j]=='.' ||s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#';  else break;
              }
              if (s[i][j]=='<')
              {
                  p[X][i][j]='#';
                  for (k=j-1; k>=0; k--)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
              if (s[i][j]=='>')
              {
                  p[X][i][j]='#';
                  for (k=j+1; k<m; k++)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
          }
        X++;
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
          {
              if (s[i][j]=='^') s[i][j]='>'; else
              if (s[i][j]=='>') s[i][j]='v'; else
              if (s[i][j]=='v') s[i][j]='<'; else
              if (s[i][j]=='<') s[i][j]='^';
          }
        for (i=1; i<=n; i++)
          for (j=1; j<=m; j++)
            if (s[i][j-1]=='S' || s[i][j-1]=='G' || s[i][j-1]=='.')
              p[X][i][j-1]='.'; else p[X][i][j-1]='#';
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
          {
              if (s[i][j]=='^')
              {
                  p[X][i][j]='#';
                  for (k=i-1; k>=1; k--)
                    if (s[k][j]=='.' || s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#'; else break;
              }
              if (s[i][j]=='v')
              {
                  p[X][i][j]='#';
                  for (k=i+1; k<=n; k++)
                    if (s[k][j]=='.' ||s[k][j]=='S' || s[k][j]=='G') p[X][k][j]='#';  else break;
              }
              if (s[i][j]=='<')
              {
                  p[X][i][j]='#';
                  for (k=j-1; k>=0; k--)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
              if (s[i][j]=='>')
              {
                  p[X][i][j]='#';
                  for (k=j+1; k<m; k++)
                    if (s[i][k]=='.' || s[i][k]=='S' || s[i][k]=='G') p[X][i][k]='#'; else break;
              }
          }
        r=0;
        for (i=1; i<=n; i++)
          for (j=0; j<m; j++)
            if (s[i][j]=='S') {nowx[++r]=i; nowy[r]=j; nowz[r]=0;} else
              if (s[i][j]=='G') X=i,Y=j;
        l=0;
        p[0][nowx[1]][nowy[1]]='#';
        FLAG=false;
        while (l!=r)
        {
            nx=nowx[++l]; ny=nowy[l]; nz=nowz[l];
            if (nx==X && ny==Y) {FLAG=true; cout<<nz<<endl; break;}
            for (i=0; i<4; i++)
            {
                if (nx+F1[i]>=1 && nx+F1[i]<=n && ny+F2[i]>=0 && ny+F2[i]<m && p[(nz+1)%4][nx+F1[i]][ny+F2[i]]!='#')
                {
                    p[(nz+1)%4][nx+F1[i]][ny+F2[i]]='#';
                    nowx[++r]=nx+F1[i]; nowy[r]=ny+F2[i]; nowz[r]=nz+1;
                }
            }
        }
        if (!FLAG) cout<<"impossible"<<endl;
    }
    return 0;
}
