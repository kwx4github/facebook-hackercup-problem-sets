#include <stdio.h>

int a[10][110][110];
int qsx[60010] ,qsy[60010] ,qsp[60010];
int main(void)
{
	int t ,i;
	int n ,m ,nn ,mm;
	int j ,j1 ,j2 ,jj1 ,jj2;
	char s[10] ,c;
	int sx ,sy ,ex ,ey;
	int aa;
	int x ,y ,xx ,yy;
	int nq;
	int p ,pp;
	int nd ,d ,dirx[10] ,diry[10];
	int ans;
	
	nd=4;
	dirx[1]=-1;
	diry[1]=0;
	dirx[2]=0;
	diry[2]=1;
	dirx[3]=1;
	diry[3]=0;
	dirx[4]=0;
	diry[4]=-1;	
	scanf("%d" ,&t);
	for (i=1 ; i<=t ; i++)
	{
		scanf("%d %d" ,&n ,&m);
		nn=n+1;
		mm=m+1;
		for (j1=0 ; j1<=nn ; j1++)
		{
			a[1][j1][0]=-5;
			a[1][j1][mm]=-5;	
		}
		for (j2=1 ; j2<=mm ; j2++)
		{
			a[1][0][j2]=-5;	
			a[1][nn][j2]=-5;
		}
		for (j1=1 ; j1<=n ; j1++)
		{
			gets(s);
			for (j2=1 ; j2<=m ; j2++)	
			{
				scanf("%c" ,&c);
				if (c=='#')
				{
					a[1][j1][j2]=-5;
				}
				else if (c=='.')
				{
					a[1][j1][j2]=0;	
				}
				else if (c=='S')
				{
					sx=j1;
					sy=j2;
					a[1][j1][j2]=0;	
				}
				else if (c=='G')
				{
					ex=j1;
					ey=j2;					
					a[1][j1][j2]=0;	
				}
				else
				{
					if (c=='^')
					{
						a[1][j1][j2]=-1;	
					}	
					else if (c=='>')
					{
						a[1][j1][j2]=-2;	
					}
					else if (c=='v')
					{
						a[1][j1][j2]=-3;	
					}
					else if (c=='<')
					{
						a[1][j1][j2]=-4;	
					}	
				}
			}
		}
		for (j=2 ; j<=4 ; j++)
		{
			for (j1=0 ; j1<=nn ; j1++)
			{
				for (j2=0 ; j2<=mm ; j2++)	
				{
					aa=a[j-1][j1][j2];
					if (aa==-4)
					{
						aa=-1;
					}
					else if (aa<=-1&&aa>=-3)
					{
						aa--;
					}
					a[j][j1][j2]=aa;
				}
			}			
		}
		for (j=1 ; j<=4 ; j++)
		{
			for (j1=1 ; j1<=n ; j1++)
			{
				for (j2=1 ; j2<=m ; j2++)	
				{
					aa=a[j][j1][j2];
					if (aa<=-1&&aa>=-4)
					{
						if (aa==-1)
						{
							x=-1; 
							y=0;
						}
						else if (aa==-2)
						{
							x=0; 
							y=1;							
						}
						else if (aa==-3)
						{
							x=1; 
							y=0;
						}
						else if (aa==-4)
						{
							x=0; 
							y=-1;							
						}						
						jj1=j1+x;
						jj2=j2+y;
						while (a[j][jj1][jj2]>=0||a[j][jj1][jj2]<=-6)
						{
							a[j][jj1][jj2]=-6;
							jj1+=x;
							jj2+=y;	
						}
					}
				}
			}			
		}		
		nq=1;
		qsx[1]=sx;
		qsy[1]=sy;
		qsp[1]=2;
		a[1][sx][sy]=1;
		ans=0;
		for (j=1 ; j<=nq ; j++)
		{
			x=qsx[j];
			y=qsy[j];
			p=qsp[j];
			if (p==1)
			{
				pp=4;	
			}
			else
			{
				pp=p-1;
			}
			aa=a[pp][x][y]+1;
			if (p==4)
			{
				pp=1;	
			}
			else
			{
				pp=p+1;
			}				
			for (d=1 ; d<=nd ; d++)
			{
				xx=x+dirx[d];
				yy=y+diry[d];
				if (xx==ex&&yy==ey&&a[p][xx][yy]!=(-6))
				{
					ans=aa-1;	
					break;
				}		
			}
			if (ans)
			{
				break;	
			}
			for (d=1 ; d<=nd ; d++)
			{
				xx=x+dirx[d];
				yy=y+diry[d];
				if (!a[p][xx][yy])
				{
					a[p][xx][yy]=aa;
					nq++;
					qsx[nq]=xx;
					qsy[nq]=yy;
					qsp[nq]=pp;
				}		
			}			
		}
		if (ans)
		{
			printf("Case #%d: %d\n" ,i ,ans);
		}
		else
		{
			printf("Case #%d: impossible\n" ,i);
		}
	}
	
	return 0;
}
