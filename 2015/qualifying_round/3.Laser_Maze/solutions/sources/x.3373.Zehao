#include <iostream>
#include <cstring>
#include <sstream>
using namespace std;

const int maxn = 100 + 10;
const int dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};

char map[maxn][maxn];
int n, m;
int laserd[maxn][maxn][4];
bool vis[maxn][maxn][4];
int q[maxn * maxn * 4][3], head, tail;

int bfs(int sx, int sy, int dx, int dy) {
	memset(vis,0,sizeof(vis));
	int x,y,s;
	tail = 0;
	head = 1;
	q[0][0] = sx;
	q[0][1] = sy;
	q[0][2] = 0;
	vis[x][y][0] = true;
	int nx, ny, ns;
	while (head > tail) {
		x = q[tail][0];
		y = q[tail][1];
		s = q[tail][2];
		tail ++;
		if (x == dx && y == dy)
			return s;
		for (int i = 0; i < 4; i ++) {
			nx = x + dir[i][0];
			ny = y + dir[i][1];
			ns = s + 1;
			if (nx >= 0 && ny >= 0 && nx < n && ny < m && map[nx][ny] != '#'
                && !vis[nx][ny][ns%4] && !laserd[nx][ny][ns%4]) {
				vis[nx][ny][ns%4] = true;
				q[head][0] = nx;
				q[head][1] = ny;
				q[head][2] = ns;
				head ++;
			}
		}
	}
	return -1;
}

int laserc[200] = {0};

int main() {
	int dx, dy, sx, sy, nx, ny;
	int t, tt;
	laserc['>'] = 1;
	laserc['v'] = 2;
	laserc['<'] = 3;
	laserc['^'] = 4;
	cin >> tt;
	for (t = 0; t < tt; t ++) {
		memset(laserd, 0, sizeof(laserd));
		cin >> n >> m;
		for (int i = 0; i < n ; i ++ ) {
			for (int j = 0; j < m ; j ++ ) {
				cin >> map[i][j];
				if (map[i][j] == 'S') {
					sx = i;
					sy = j;
					map[i][j] = '.';
				} else if (map[i][j] == 'G') {
					dx = i;
					dy = j;
					map[i][j] = '.';
				}
			}
		}
		for (int i = 0; i < n ; i ++ ) {
			for (int j = 0; j < m ; j ++ ) {
				if (laserc[map[i][j]] > 0) {
					for (int kk = 0; kk < 4; kk ++) {
						nx = i;
						ny = j;
						for (int k = 0; ; k ++ ) {
							nx = nx + dir[(kk + laserc[map[i][j]]) % 4][0];
							ny = ny + dir[(kk + laserc[map[i][j]]) % 4][1];
							if (nx >= 0 && ny >= 0 && nx < n && ny < m
                                && map[nx][ny] != '#')
								laserd[nx][ny][kk] = 1;
							else
								break;
						}
					}
				}
			}
		}
		/*for (int k = 0; k < 4 ; k ++ ) {
         for (int i = 0; i < n ; i ++ ) {
         for (int j = 0; j < m ; j ++ ) {
         cout << laserd[i][j][k] << ' ';
         }
         cout << endl;
         }
         cout << endl;
         }*/
		cout << "Case #" << t + 1 << ": ";
		int ans = bfs(sx, sy, dx, dy);
		if (ans >= 0)
			cout << ans << endl;
		else
			cout << "impossible" << endl;
	}
	return 0;
}