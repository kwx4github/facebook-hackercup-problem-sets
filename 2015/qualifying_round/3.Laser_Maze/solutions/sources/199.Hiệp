#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long

#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define sz(a) ((int)(a).size())
#define ms(a,x) memset(a, x, sizeof(a))
#define ld long double
#define Repd(i, n) for(int i = (n) - 1; i >= 0; --i)

using namespace std;

const int nm = 102;
const int inf = 0x3f3f3f3f;
const int x[] = { -1, 0, 1, 0 };
const int y[] = { 0, 1, 0, -1 };

int m, n;
char a[6][nm][nm];
int d[nm][nm][6];

char next(char x) {
	if (x == '^')
		return '>';
	if (x == '>')
		return 'v';
	if (x == 'v')
		return '<';
	if (x == '<')
		return '^';
	return x;
}

bool hople(int i, int j) {
	return i >= 0 && i < m && j >= 0 && j < n;
}

void block(int t) {
	for (int i = 0; i < m; ++i) {
		for (int j = 0; j < n; ++j) {
			int h = -1;
			if (a[t][i][j] == '^')
				h = 0;
			else if (a[t][i][j] == '>')
				h = 1;
			else if (a[t][i][j] == 'v')
				h = 2;
			else if (a[t][i][j] == '<')
				h = 3;
			if (h >= 0) {
				for (int k = 1;
						hople(i + k * x[h], j + k * y[h])
								&& (a[t][i + k * x[h]][j + k * y[h]] == '.'
										|| a[t][i + k * x[h]][j + k * y[h]]
												== 'x'); ++k)
					a[t][i + k * x[h]][j + k * y[h]] = 'x';
			}
		}
	}
}

void solve(int test) {
	cout << "Case #" << test << ": ";
	cin >> m >> n;
	int x0, y0, x1, y1;
	for (int i = 0; i < m; ++i) {
		cin >> a[0][i];
		for (int j = 0; j < n; ++j) {
			if (a[0][i][j] == 'S') {
				x0 = i;
				y0 = j;
				a[0][i][j] = '.';
			} else if (a[0][i][j] == 'G') {
				x1 = i;
				y1 = j;
				a[0][i][j] = '.';
			}
			a[1][i][j] = next(a[0][i][j]);
			a[2][i][j] = next(a[1][i][j]);
			a[3][i][j] = next(a[2][i][j]);
		}
	}
	for (int i = 0; i < 4; ++i)
		block(i);
	memset(d, 0x3f, sizeof(d));
	d[x0][y0][0] = 0;
	queue<pair<pair<int, int>, int> > q;
	q.push(mp(mp(x0, y0), 0));
	while (!q.empty()) {
		int i = q.front().first.first;
		int j = q.front().first.second;
		int k = q.front().second;
//		cout << i << " " << j << " " << k << " " << d[i][j][k] << "\n";
		q.pop();
		for (int h = 0; h < 4; ++h) {
			int i2 = i + x[h];
			int j2 = j + y[h];
			int k2 = (k + 1) % 4;
			if (hople(i2, j2) && a[k2][i2][j2] == '.' && d[i2][j2][k2] > d[i][j][k] + 1) {
				d[i2][j2][k2] = d[i][j][k] + 1;
				if (i2 == x1 && j2 == y1) {
					cout << d[i2][j2][k2] << "\n";
					return;
				}
				q.push(mp(mp(i2, j2), k2));
			}
		}
	}
	cout << "impossible\n";
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input3.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t;
	cin >> t;
	for (int i = 1; i <= t; ++i)
		solve(i);
}
