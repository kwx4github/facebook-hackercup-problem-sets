
#pragma comment(linker, "/STACK:1024000000,1024000000") 
#include <iostream> 
#include <stdlib.h> 
#include <ctime> 
#include <cmath> 
#include <stdio.h> 
#include <vector> 
#include <algorithm> 
#include <queue> 
#include <string.h> 
#include <map> 
#include <set> 
#include <assert.h>
#define x first 
#define y second 
#define pb push_back 
#define mp make_pair 
#define vi vector<int> 
#define pii pair<int,int> 
#define ll long long 
#define inf 1000000007 
#define mod 1000000007 
#define all(x) x.begin(),x.end() 
#define N 200010 
#define pi acos(-1.)
#define DBG(x) cerr<<#x<<"="<<x<<"\n"; 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++) 
using namespace std; 
   
#define MP(x,y,z) mp(mp(x,y),z)
char s[105][105];
bool check(int x,int y)
{
    if(s[x][y]=='>'||s[x][y]=='<'||s[x][y]=='^'||s[x][y]=='v')return 0;
    return 1;
}
int dp[105][105][4],v[105][105][4],can[105][105][4];
int d[][2]={0,-1,0,1,1,0,-1,0};
char ss[]="^>v<";map<char,int>g;
char get(char c,int k)
{
    int i=g[c];i=(i+k)%4;
    return ss[i];
}
int main() 
{ 
    int i,j,k,ca=0,m,n,T;
    g['^']=0,g['>']=1,g['v']=2,g['<']=3;
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d",&n,&m);
        int sx,sy,tx,ty;
        for(i=0;i<n;i++)
        {
            scanf("%s",s[i]);
            for(j=0;j<m;j++)
            if(s[i][j]=='S'){sx=i,sy=j;s[i][j]='.';}
            else if(s[i][j]=='G'){tx=i,ty=j;s[i][j]='.';}
        }
        memset(can,0,sizeof(can));
        int ans=-1;
        for(i=0;i<n;i++)
            for(j=0;j<m;j++)
                if(s[i][j]=='.')
                {
                    for(k=0;k<4;k++)
                    {
                        int x,y;
                        for(y=j;y>=0&&s[i][y]=='.';y--);
                        if(y>=0&&s[i][y]!='#')
                        {
                            char c=get(s[i][y],k);
                            if(c=='>')continue;
                        }
                        for(y=j;y<m&&s[i][y]=='.';y++);
                        if(y<m&&s[i][y]!='#')
                        {
                            char c=get(s[i][y],k);
                            if(c=='<')continue;
                        }
                        for(x=i;x>=0&&s[x][j]=='.';x--);
                        if(x>=0&&s[x][j]!='#')
                        {
                            char c=get(s[x][j],k);
                            if(c=='v')continue;
                        }
                        for(x=i;x<n&&s[x][j]=='.';x++);
                        if(x<n&&s[x][j]!='#')
                        {
                            char c=get(s[x][j],k);
                            if(c=='^')continue;
                        }
                        can[i][j][k]=1;
                    }
                }
        memset(dp,-1,sizeof(dp));
        queue<pair<pii,int> >q;
        q.push(MP(sx,sy,0));dp[sx][sy][0]=0;
        while(!q.empty())
        {
            int x=q.front().x.x,y=q.front().x.y,z=q.front().y;
            q.pop();
            //cerr<<x<<" "<<y<<" "<<z<<"\n"; 
            if(x==tx&&y==ty){ans=dp[x][y][z];break;}
            for(i=0;i<4;i++)
            {
                int nx=x+d[i][0],ny=y+d[i][1],nz=(z+1)%4;
                if(nx>=0&&nx<n&&ny>=0&&ny<m&&can[nx][ny][nz]&&dp[nx][ny][nz]==-1)
                {
                    //DBG(nx)DBG(ny)
                    dp[nx][ny][nz]=dp[x][y][z]+1;
                    q.push(MP(nx,ny,nz));
                }
            }
        }
        printf("Case #%d: ",++ca);
        if(ans==-1)puts("impossible");
        else printf("%d\n",ans);
    }
    
}