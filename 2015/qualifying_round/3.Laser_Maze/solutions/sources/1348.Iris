#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <queue>
#include <stack>
#include <algorithm>
#include <cmath>
using namespace std;
#define fi "input.txt"
#define fa "output.txt"
#define foru(i,l,r) for(int i=l;i<r;i++)
#define ford(i,l,r) for(int i=l;i>r;i--)
#define re return
#define ll long long
#define pb push_back

const int maxN=101;
const int ma1[]={0,0,-1,1};
const int ma2[]={-1,1,0,0};
int n,m;
char a[maxN][maxN];
bool b[maxN][maxN][4];
int fr[maxN][maxN][4];
struct tl {int x,y,z;};
queue<tl> hd;

void init() {
    scanf("%i %i\n",&n,&m);
    foru(i,1,n+1) {
        scanf("%s\n",a[i]+1);
    }
//    foru(i,1,n+1) {
//        foru(j,1,m+1) printf("%c",a[i][j]);
//        printf("\n");
//    }
}
void s0(int x,int y) {
    foru(i,1,n+1) if (a[x-i][y]!='.' && a[x-i][y]!='S' && a[x-i][y]!='G') break; else b[x-i][y][0]=false;
    foru(i,1,n+1) if (a[x+i][y]!='.' && a[x+i][y]!='S' && a[x+i][y]!='G') break; else
    b[x+i][y][2]=false;
    foru(i,1,m+1) if (a[x][y+i]!='.' && a[x][y+i]!='S' && a[x][y+i]!='G') break; else b[x][y+i][1]=false;
    foru(i,1,m+1) if (a[x][y-i]!='.' && a[x][y-i]!='S' && a[x][y-i]!='G') break; else b[x][y-i][3]=false;
}

void s1(int x,int y) {
    foru(i,1,n+1) if (a[x-i][y]!='.' && a[x-i][y]!='S' && a[x-i][y]!='G') break; else b[x-i][y][3]=false;
    foru(i,1,n+1) if (a[x+i][y]!='.' && a[x+i][y]!='S' && a[x+i][y]!='G') break; else b[x+i][y][1]=false;
    foru(i,1,m+1) if (a[x][y+i]!='.' && a[x][y+i]!='S' && a[x][y+i]!='G') break; else b[x][y+i][0]=false;
    foru(i,1,m+1) if (a[x][y-i]!='.' && a[x][y-i]!='S' && a[x][y-i]!='G') break; else b[x][y-i][2]=false;
}

void s2(int x,int y) {
    foru(i,1,n+1) if (a[x-i][y]!='.' && a[x-i][y]!='S' && a[x-i][y]!='G') break; else b[x-i][y][2]=false;
    foru(i,1,n+1) if (a[x+i][y]!='.' && a[x+i][y]!='S' && a[x+i][y]!='G') break; else b[x+i][y][0]=false;
    foru(i,1,m+1) if (a[x][y+i]!='.' && a[x][y+i]!='S' && a[x][y+i]!='G') break; else b[x][y+i][3]=false;
    foru(i,1,m+1) if (a[x][y-i]!='.' && a[x][y-i]!='S' && a[x][y-i]!='G') break; else b[x][y-i][1]=false;
}

void s3(int x,int y) {
    foru(i,1,n+1) if (a[x-i][y]!='.' && a[x-i][y]!='S' && a[x-i][y]!='G') break; else b[x-i][y][1]=false;
    foru(i,1,n+1) if (a[x+i][y]!='.' && a[x+i][y]!='S' && a[x+i][y]!='G') break; else b[x+i][y][3]=false;
    foru(i,1,m+1) if (a[x][y+i]!='.' && a[x][y+i]!='S' && a[x][y+i]!='G') break; else b[x][y+i][2]=false;
    foru(i,1,m+1) if (a[x][y-i]!='.' && a[x][y-i]!='S' && a[x][y-i]!='G') break; else b[x][y-i][0]=false;
}

tl gan(int x,int y,int z) {
    tl tam;
    tam.x=x;
    tam.y=y;
    tam.z=z;
    re tam;
}

bool kt(int x,int y) {
    re (x>0 && x<=n && y>0 && y<=m);
}

int loang(int d) {
    while (!hd.empty()) {
        int x=hd.front().x, y=hd.front().y, z=hd.front().z;
        hd.pop();
        foru(i,0,4) if (kt(x+ma1[i],y+ma2[i])) {
            int xx=x+ma1[i], yy=y+ma2[i], zz=z+1;
            if (zz>=4) zz-=4;
            if (!b[xx][yy][zz]) continue;
            if (fr[xx][yy][zz]==-1) {
                fr[xx][yy][zz]=fr[x][y][z]+1;
                hd.push(gan(xx,yy,zz));
                if (a[xx][yy]=='G') re fr[xx][yy][zz]+1;
            }
        }
    }
    re -1;
}

void xuly(int d) {
    while (!hd.empty()) hd.pop();
    memset(fr,255,sizeof(fr));
    foru(i,1,n+1) foru(j,1,m+1)
        if (a[i][j]!='.' && a[i][j]!='S' && a[i][j]!='G')
            foru(k,0,4) b[i][j][k]=false;
        else
            foru(k,0,4) b[i][j][k]=true;
    foru(i,1,n+1) foru(j,1,m+1) if (a[i][j]!='.' && a[i][j]!='#') {
        if (a[i][j]=='^') s0(i,j);
        if (a[i][j]=='>') s1(i,j);
        if (a[i][j]=='v') s2(i,j);
        if (a[i][j]=='<') s3(i,j);
        if (a[i][j]=='S') {
            hd.push(gan(i,j,0));
            b[i][j][0]=0;
        }
    }
    int res=loang(d);
    if (res!=-1) printf("%i\n",res); else printf("impossible\n");
}

int main() {
    freopen(fi,"r",stdin);
    freopen(fa,"w",stdout);
    int t;
    cin>>t;
    foru(i,0,t) {
        printf("Case #%i: ",i+1);
        init();
        xuly(i+1);
    }
    fclose(stdin);
    fclose(stdout);
    return 0;
    re 0;
}
