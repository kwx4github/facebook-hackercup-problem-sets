#include<iostream>

using namespace std;

char str[200][200];
int mats[200][200];
int n,m;
int ans[200][200];

bool valid(int posi,int posj,int count)
{
	for(int i=posj-1;i>=0;i--)
	{
		if(str[posi][i]=='#')
			break;
		if(str[posi][i] == '<' || str[posi][i] == '^' || str[posi][i] == '>' || str[posi][i] == 'v')
		{
			switch(count%4)
			{
				case 0: if(str[posi][i] == '>') return false;
					break;
				case 1: if(str[posi][i] == '^') return false;
					break;
				case 2: if(str[posi][i] == '<') return false;
					break;
				case 3: if(str[posi][i] == 'v') return false;
					break;
			}
			break;
		}
	}
	
	for(int i=posj+1;i<m;i++)
	{
		if(str[posi][i]=='#')
			break;
		if(str[posi][i] == '<' || str[posi][i] == '^' || str[posi][i] == '>' || str[posi][i] == 'v')
		{
			switch(count%4)
			{
				case 0: if(str[posi][i] == '<') return false;
					break;
				case 1: if(str[posi][i] == 'v') return false;
					break;
				case 2: if(str[posi][i] == '>') return false;
					break;
				case 3: if(str[posi][i] == '^') return false;
					break;
			}
			break;
		}
	}
	
	for(int i=posi-1;i>=0;i--)
	{
		if(str[i][posj]=='#')
			break;
		if(str[i][posj] == '<' || str[i][posj] == '^' || str[i][posj] == '>' || str[i][posj] == 'v')
		{
			switch(count%4)
			{
				case 0: if(str[i][posj] == 'v') return false;
					break;
				case 1: if(str[i][posj] == '>') return false;
					break;
				case 2: if(str[i][posj] == '^') return false;
					break;
				case 3: if(str[i][posj] == '<') return false;
					break;
			}
			break;
		}
	}
	
	for(int i=posi+1;i<n;i++)
	{
		if(str[i][posj]=='#')
			break;
		if(str[i][posj] == '<' || str[i][posj] == '^' || str[i][posj] == '>' || str[i][posj] == 'v')
		{
			switch(count%4)
			{
				case 0: if(str[i][posj] == '^') return false;
					break;
				case 1: if(str[i][posj] == '<') return false;
					break;
				case 2: if(str[i][posj] == 'v') return false;
					break;
				case 3: if(str[i][posj] == '>') return false;
					break;
			}
			break;
		}
	}
	return true;
}

int min(int posi,int posj,int count)
{
		if(posi>=n || posj>=m || posi<0 || posj<0 || str[posi][posj]=='#' || str[posi][posj]=='>' || str[posi][posj]=='<' || str[posi][posj]=='^' || str[posi][posj]=='v')
			return -1;
		
		if(mats[posi][posj]==-1)
			mats[posi][posj]=count%4;
		else if(mats[posi][posj]==count%4)
			return -1;
		
		if(valid(posi,posj,count) == true)
		{
			if(str[posi][posj]=='G')
				return 0;
			int t1,t2,t3,t4;
			t1=min(posi+1,posj,count+1);
			t3=min(posi,posj+1,count+1);
			t2=min(posi-1,posj,count+1);
			t4=min(posi,posj-1,count+1);
			if(t1==-1 && t2==-1 && t3==-1 && t4==-1)
				return -1;
			int y=1000;
			if(t1!=-1 && y>t1)
				y=t1;
			if(t2!=-1 && y>t2)
				y=t2;
			if(t3!=-1 && y>t3)
				y=t3;
			if(t4!=-1 && y>t4)
				y=t4;
			return y+1;
			
		}
		else
			return -1;
		
			
}

int main()
{
	int t;
	cin>>t;
	for(int i=0;i<t;i++)
	{
		for(int l=0;l<101;l++)
		{
			for(int p=0;p<101;p++)
				mats[l][p]=-1;
		}
		cin>>n>>m;
		for(int j=0;j<n;j++)
			cin>>str[j];
		int j,k;
		for(j=0;j<n;j++)
		{
			for(k=0;k<m;k++)
			{
				if(str[j][k]=='S')
					break;
			}
			if(str[j][k]=='S')
					break;
		}
		int t1,t2,t3,t4,posi,posj;
		posi=j;
		posj=k;
		mats[j][k]=0;
			t1=min(posi+1,posj,1);
			//cout<<"pu";
			//cout<<t1<<endl;
			t3=min(posi,posj+1,1);
			//cout<<t3<<endl;
			t2=min(posi-1,posj,1);
			//cout<<t2<<endl;
			t4=min(posi,posj-1,1);
			//cout<<t4<<endl;
			if(t1==-1 && t2==-1 && t3==-1 && t4==-1)
				cout<<"Case #"<<i+1<<": impossible"<<endl;
			else{
			int y=1000;
			if(t1!=-1 && y>t1)
				y=t1;
			if(t2!=-1 && y>t2)
				y=t2;
			if(t3!=-1 && y>t3)
				y=t3;
			if(t4!=-1 && y>t4)
				y=t4;
				cout<<"Case #"<<i+1<<": "<<y+1<<endl;
				//cout<<y+1<<endl;
			}
				
	}
	return 0;
}
