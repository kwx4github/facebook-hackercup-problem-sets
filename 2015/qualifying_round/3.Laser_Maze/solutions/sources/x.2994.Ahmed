#include <bits/stdc++.h>
using namespace std;

char a[105][105];
int vis[105][105];
int check[4][105][105];
int dx[] = {0, 0, -1, 1};
int dy[] = {-1, 1, 0, 0};

int main(){
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	int t; cin >> t;
	for(int tc = 1; tc <= t; tc++){
		int n, m, ans = 0; cin >> n >> m;
		memset(check, 0, sizeof check);
		memset(vis, 0, sizeof vis);
		set<pair<int, pair<int, int > > > q;
		int aa, bb, cc, dd;
		for(int i = 0; i < n; i++){
			cin >> a[i];
			 for(int j = 0; j < m; j++){
				 if(a[i][j] == 'S'){
					  q.insert({0, {i, j}});
					  vis[i][j] = 1;
				  }
				 //aa vvvvvvvv
				 //bb <<<<<<<<
				 //cc ^^^^^^^^
				 //dd >>>>>>>>
				 if(a[i][j] == 'v'){
					 aa = 0, bb = 1, cc = 2, dd = 3;
				 }
				 if(a[i][j] == '>'){
					 aa = 1, bb = 2, cc = 3, dd = 0;
				 }
				 if(a[i][j] == '^'){
					 aa = 2, bb = 3, cc = 0, dd = 1;
				 }
				 if(a[i][j] == '<'){
					 aa = 3, bb = 0, cc = 1, dd = 2;
				 }
				 if(a[i][j] == '<' || a[i][j] == '^' || a[i][j] == '>' || a[i][j] == 'v'){
					 for(int k = i; k < n; k++){
						 check[aa][k][j] = 1;
					 }
					 for(int k = j; k >= 0; k--){
						 check[bb][i][k] = 1;
					 }
					 for(int k = i; k >= 0; k--){
						 check[cc][k][j] = 1;
					 }
					 for(int k = j; k < m; k++){
						 check[dd][i][k] = 1;
					 }
				 }
			}
		}
		while(!q.empty()){
			int x = q.begin()->second.first;
			int y = q.begin()->second.second;
			int depth = q.begin()->first;
			q.erase(q.begin());
			if(a[x][y] == 'G'){
				ans = depth;
				break;
			}
			for(int i = 0; i < 4; i++){
				int nx = x + dx[i];
				int ny = y + dy[i];
				if(nx < 0) continue;
				if(ny < 0) continue;
				if(nx >= n) continue;
				if(ny >= m) continue;
				if(vis[nx][ny] < 4 && !check[(depth + 1) % 4][nx][ny] && a[nx][ny] != '#'){
					vis[nx][ny]++;
					q.insert({depth + 1, {nx, ny}});
				}
			}
		}
		if(ans)
			cout << "Case #" << tc << ": " << ans << endl;
		else
			cout << "Case #" << tc << ": " << "Impossible" << endl;
	}
}
