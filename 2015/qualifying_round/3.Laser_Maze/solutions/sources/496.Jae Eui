#include <stdio.h>
#include <string.h>
#include <queue>
int n,m,end[2];
char map[4][102][102],dir[5]={"<^>v"};
bool check[4][102][102];
int que[50001][3],head=-1,tail,go[4][2]={0,-1,-1,0,0,1,1,0};
int main(){
	int testt,test,i,j,a,k,p;
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&testt);
	for(test=1;test<=testt;test++){
		memset(check,0,sizeof(check));
		head=-1;tail=0;
		scanf("%d %d",&n,&m);
		for(i=0;i<n;i++){
			scanf("%s",map[0][i]);
			for(j=0;j<m;j++){
				if(map[0][i][j]=='S'){
					que[++head][0]=i;
					que[head][1]=j;
					que[head][2]=0;
					check[0][i][j]=1;
					map[0][i][j]='.';
				}
				if(map[0][i][j]=='G'){
					end[0]=i;
					end[1]=j;
					map[0][i][j]='.';
				}
				map[1][i][j]=map[0][i][j];
				map[2][i][j]=map[0][i][j];
				map[3][i][j]=map[0][i][j];
			}
		}
		for(p=0;p<4;p++){
			for(i=0;i<n;i++){
				for(j=0;j<m;j++){
					if(map[p][i][j]!='.')
						check[p][i][j]=1;
					for(a=0;a<4;a++){
						if(map[p][i][j]==dir[a])
							break;
					}
					if(a==4) continue;
					a=(a+p)&3;
					for(k=1;;k++){
						if(i+go[a][0]*k>=0 && j+go[a][1]*k>=0 && i+go[a][0]*k<n && j+go[a][1]*k<m && map[p][i+go[a][0]*k][j+go[a][1]*k]=='.')
							check[p][i+go[a][0]*k][j+go[a][1]*k]=1;
						else break;
					}
				}
			}
		}
		int print=-1,cnt;
		while(head>=tail){
			i=que[tail][0];j=que[tail][1];cnt=que[tail++][2];
			if(i==end[0] && j==end[1]){
				print=cnt;
				break;
			}
			cnt++;
			for(a=0;a<4;a++){
				if(i+go[a][0]>=0 && j+go[a][1]>=0 && i+go[a][0]<n && j+go[a][1]<m && !check[cnt&3][i+go[a][0]][j+go[a][1]]){
					check[cnt&3][i+go[a][0]][j+go[a][1]]=1;
					que[++head][0]=i+go[a][0];
					que[head][1]=j+go[a][1];
					que[head][2]=cnt;
				}
			}
		}
		if(print==-1)
			printf("Case #%d: impossible\n",test);
		else
			printf("Case #%d: %d\n",test,print);
	}
	return 0;
}
