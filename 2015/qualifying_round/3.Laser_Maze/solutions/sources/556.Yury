#include <stdio.h>
#include <memory.h>
const int MX=104,MQ=MX*MX*4;
const int dx[4]={0,-1,0,1};
const int dy[4]={-1,0,1,0};
const int dz[4]={'<','^','>','v'};
int t,tt,n,m,i,j,k,e,x,y,z,sx,sy,gx,gy,inf,cur,r,fi,fr,qx[MQ],qy[MQ],qz[MQ],p[MX][MX][4];
bool b[MX][MX][4];
char s[MX][MX];
int main() {
  scanf("%d",&t);
  for (tt=1; tt<=t; tt++) {
    scanf("%d%d",&n,&m);
    for (i=1; i<=n; i++) {
      scanf("%s",s[i]+1);
      s[i][0]=s[i][m+1]='#';
      for (j=1; j<=m; j++) {
        if (s[i][j]=='S') { qx[0]=i; qy[0]=j; qz[0]=0; s[i][j]='.'; }
        if (s[i][j]=='G') { gx=i; gy=j; s[i][j]='.'; }
      }
    }
    for (i=0; i<=m+1; i++) s[0][i]=s[n+1][i]='#';
    memset(b,false,sizeof(b));
    for (z=0; z<4; z++) {
      for (i=1; i<=n; i++) for (j=1; j<=m; j++) {
        for (k=0; k<4; k++) if (s[i][j]==dz[k]) break;
        if (k>=4) continue;
        for (e=0; e<4; e++, k++) {
          if (k==4) k=0;
          for (x=i+dx[k], y=j+dy[k]; ; x+=dx[k], y+=dy[k]) {
            if (s[x][y]!='.') break;
            b[x][y][e]=true;
          }
        }
      }
    }
    memset(p,120,sizeof(p));
    inf=p[0][0][0];
    p[qx[0]][qy[0]][qz[0]]=0;
    for (fi=0, fr=1; fi<fr; fi++) {
      cur=p[qx[fi]][qy[fi]][qz[fi]];
      z=(qz[fi]+1)%4;
      for (k=0; k<4; k++) {
        x=qx[fi]+dx[k];
        y=qy[fi]+dy[k];
        if (s[x][y]!='.' || b[x][y][z] || p[x][y][z]<inf) continue;
        qx[fr]=x; qy[fr]=y; qz[fr++]=z;
        p[x][y][z]=cur+1;
        if (x==gx && y==gy) { r=cur+1; break; }
      }
      if (k<4) break;
    }
    printf("Case #%d: ",tt);
    if (fi<fr) printf("%d\n",r); else puts("impossible");
  }
  return 0;
}
