#include<stdio.h>
#include<stdlib.h>
#include<queue>
using std::queue;
char map[4][103][103];
char in[103][103];
int dx[4]={-1,0,1,0};
int dy[4]={0,1,0,-1};
struct sss{
	int M,x,y,step;
};
int vis[4][104][104];
queue< sss > q;
int main(void){
	int t,hh;
	scanf("%d",&t);
	for(hh=1;hh<=t;hh++){
		int n,m;
		scanf("%d%d",&n,&m);
		int i,j,k;
		char s[105];
		int stx,sty,edx,edy;
		while(!q.empty()) q.pop();
		for(i=0;i<n;i++){
			scanf("%s",s);
			for(j=0;j<m;j++){
				in[i][j]=s[j];
				if(in[i][j]=='S') stx=i,sty=j;
				else if(in[i][j]=='G') edx=i,edy=j;
				for(k=0;k<4;k++)
				  map[k][i][j]=in[i][j],vis[k][i][j]=0;
			}
		}
		for(k=0;k<4;k++){
			for(i=0;i<n;i++)
			  for(j=0;j<m;j++){
			  	if(map[k][i][j]!='.'&&map[k][i][j]!='#'&&map[k][i][j]!='S'&&map[k][i][j]!='G'){
			  		int dir;
			  		if(map[k][i][j]=='^') dir=(0+k)%4;
			  		else if(map[k][i][j]=='>') dir=(1+k)%4;
			  		else if(map[k][i][j]=='v') dir=(2+k)%4;
			  		else if(map[k][i][j]=='<') dir=(3+k)%4;
			  		int nx=i,ny=j;
			  		while(nx>=0&&nx<n&&ny>=0&&ny<m){
			  			if(map[k][nx][ny]!='.'&&map[k][nx][ny]!='#'&&map[k][nx][ny]!='S'&&map[k][nx][ny]!='G'){
			  				if(nx==i&&ny==j)
			  			     map[k][nx][ny]='#';
			  			}
			  			else map[k][nx][ny]='#';
			  			nx+=dx[dir];
			  			ny+=dy[dir];
			  		}
			  	}
			  }
		}
		sss now;
		now.M=0,now.x=stx,now.y=sty,now.step=0;
		q.push(now);
		int ans=-1;
		while(!q.empty()){
			now=q.front();
			//printf("%d %d %d\n",now.x,now.y,now.m);
			q.pop();
			vis[now.M][now.x][now.y]=1;
			for(k=0;k<4;k++){
				int nx=now.x+dx[k],ny=now.y+dy[k];
				int nm=(now.M+1)%4;
				if(!(nx>=0&&nx<n&&ny>=0&&ny<m)) continue;
				if(map[nm][nx][ny]=='#') continue;
				if(vis[nm][nx][ny]) continue;
				if(map[nm][nx][ny]=='G') ans=now.step+1;
				sss next;
				next.x=nx,next.y=ny,next.M=nm,next.step=now.step+1;
				q.push(next);
			}
			if(ans!=-1) break;
		}
		if(ans==-1) printf("Case #%d: impossible\n",hh);    
		else printf("Case #%d: %d\n",hh,ans);    
	}
	return 0;
}
