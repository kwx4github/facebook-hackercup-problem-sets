/* ***************************
Author: Abhay Mangal (abhay26)
*************************** */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <cstring>
#include <cassert>
#include <numeric>
#include <utility>
#include <bitset>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
using namespace std;
 #define tr(container, it) \
    for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define maX(a,b) (a) > (b) ? (a) : (b)
#define pii pair< int, int >
#define pip pair< int, pii >
#define FOR(i,n) for(int i=0; i<(int)n ;i++)
#define REP(i,a,n) for(int i=a;i<(int)n;i++)
#define pb push_back
#define mp make_pair
typedef long long ll;
int dx[]= {-1,0,1,0};
int dy[]= {0,1,0,-1};
int X[105][105][4];
int A[105][105][4];
int m,n;
char str[105];
ll dp[105][105][4];
int sx,sy,gx,gy;
char G[105][105];
int vis[105][105][4];
bool valid(int x, int y, int d)
{
    if(x < 0 || x >= m || y < 0 || y >= n)
        return 0;
    if(G[x][y] == '#')
        return 0;
    if(G[x][y] == '<' || G[x][y] == '>' || G[x][y] == '^' || G[x][y] == 'v')
        return 0;
   // if(x == 2)
   // cout << x << " " << y << " " << d << " = " << A[x][y][d] << endl;
    return A[x][y][d];
    return 1;
}
/*ll calc(int x, int y, int d)
{
   // cout << x << " " << y << " " << d << endl;
    ll &ret = dp[x][y][d];
    if(ret != -1)
        return ret;
    ret = 2000000000;
    if(x == gx && y == gy)
    {
        ret = 0;
        return ret;
    }
    int nd = (d+1)%4;
    FOR(k,4)
    {
        int nx = x + dx[k];
        int ny = y + dy[k];

        if(valid(nx,ny,nd))
        {
            if(x == 2 && y == 3 && d == 1)
            {
                cout << "loL " << nx << " " << ny << " " << nd << calc(nx,ny,nd) << endl;
            }
            ret = min(ret, 1+calc(nx,ny,nd));
        }
    }
    //cout << x << " " << y << " " << d << " " << ret << endl;
    return ret;
}*/
void init(int k)
{
    FOR(i,m)
    {
        FOR(j,n)
        {
            A[i][j][k] = 1;
        }
    }
    FOR(i,m)
    {
        FOR(j,n)
        {
            if(X[i][j][k] != 10)
            {
                A[i][j][k] = 0;
            }
            if(X[i][j][k] == 0)
            {
                for(int z=j-1;z>=0;z--)
                {
                    if(X[i][z][k] >= 10)
                        A[i][z][k] = 0;
                    else
                        break;
                }
            }
            else if(X[i][j][k] == 1)
            {
                for(int z = i-1;z>=0;z--)
                {
                    if(X[z][j][k] >= 10)
                        A[z][j][k] = 0;
                    else break;
                }
            }
            else if(X[i][j][k] == 2)
            {
                for(int z=j+1;z<n;z++)
                {
                    if(X[i][z][k] >= 10)
                        A[i][z][k] = 0;
                    else
                        break;
                }
            }
            else if(X[i][j][k] == 3)
            {
                for(int z = i+1;z<m;z++)
                {
                    if(X[z][j][k] >= 10)
                        A[z][j][k] = 0;
                    else break;
                }
            }
        }
    }
}
int main()
{
    freopen("laser_maze.txt","r",stdin);
    freopen("3.out","w",stdout);
    int t;
    scanf("%d",&t);
    int kas = 0;
    while(t--)
    {
        memset(dp,-1,sizeof dp);
        memset(vis,0,sizeof vis);
        scanf("%d %d",&m,&n);
        FOR(i,m)
        {
            scanf("%s",G[i]);
            for(int j=0;j<n;j++)
            {
                if(G[i][j] == 'G')
                {
                    X[i][j][0] = 10;
                    gx = i;
                    gy = j;
                }
                else if(G[i][j] == 'S')
                {
                    X[i][j][0] = 10;
                    sx = i;
                    sy = j;
                }
                else if(G[i][j] == '<')
                    X[i][j][0] = 0;
                else if(G[i][j] == '^')
                    X[i][j][0] = 1;
                else if(G[i][j] == '>')
                    X[i][j][0] = 2;
                else if(G[i][j] == 'v')
                    X[i][j][0] = 3;
                else if(G[i][j] == '#')
                    X[i][j][0] = 5;
                else X[i][j][0] = 10;
            }
        }
        init(0);
        /*FOR(i,m)
            {
                FOR(j,n)
                {
                    cout << X[i][j][0] <<" ";
                }
                cout << endl;
            }*/
        for(int k=1;k<=3;k++)
        {
            FOR(i,m)
            {
                FOR(j,n)
                {
                    if(X[i][j][k-1] > 4)
                    {
                        X[i][j][k] = X[i][j][k-1];
                    }
                    else
                        X[i][j][k] = (X[i][j][k-1]+1)%4;
                }
            }
            init(k);
        }
        /*for(int k=0;k<4;k++)
        {
            cout << endl;
            FOR(i,m)
            {
                FOR(j,n)
                {
                    cout << X[i][j][k] <<" ";
                }
                cout << endl;
            }
            cout << endl;
            FOR(i,m)
            {
                FOR(j,n)
                {
                    cout << A[i][j][k] <<" ";
                }
                cout << endl;
            }
        }*/
        ll ans = 1000000000;
        queue<pip> Q;
        Q.push(pip(0,pii(sx,sy)));

        while(!Q.empty())
        {
            pip Z = Q.front();
            Q.pop();
            int d = Z.first;
            int x = Z.second.first;
            int y = Z.second.second;
            if(x == gx && y == gy)
            {
                ans = d;
                break;
            }
            if(vis[x][y][d%4])
                continue;
            vis[x][y][d%4] = 1;
            FOR(k,4)
            {
                int nx = x + dx[k];
                int ny = y + dy[k];
                if(valid(nx,ny,(d+1)%4))
                    Q.push(pip(d+1,pii(nx,ny)));
            }
        }
        kas++;
        printf("Case #%d: ",kas);
        if(ans >= 1000000000)
            printf("impossible\n");
        else
            printf("%lld\n",ans);
      // cout << A[2][4][2] << " " << calc(2,4,2) << endl;
    }
return 0;
}
