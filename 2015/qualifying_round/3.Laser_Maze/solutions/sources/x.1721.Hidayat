#include <bits/stdc++.h>

using namespace std;

int TC,caseNo,r,c,fx,fy,sx,sy;
bool flag[10][110][110];
const int xx[] = {1,0,-1,0};
const int yy[] = {0,1,0,-1};
char arr[110][110];

bool ok(int x,int y) {
	return x >= 0 && x < r && y >= 0 && y < c;
}

int main() {
	cin >> TC;
	while(TC--) {
		cin >> r >> c;
		for(int i = 0; i<r; i++)
			for(int j = 0; j<c; j++) {
				cin >> arr[i][j];
				if(arr[i][j] == 'S') {
					sx = i;
					sy = j;
					arr[i][j] = '.';
				}
				if(arr[i][j] == 'G') {
					fx = i;
					fy = j;
					arr[i][j] = '.';
				}
			}

		queue< pair<int, pair<int,int> > > q;
		q.push(make_pair(0,make_pair(sx,sy)));
		memset(flag,false,sizeof(flag));
		flag[0][sx][sy] = true;

		int ans = -1;

		while(!q.empty()) {
			int moves = q.front().first;
			int x = q.front().second.first;
			int y = q.front().second.second;
			q.pop();

			bool can = true;

			for(int i = 1; i<=100; i++) {
				if(!ok(x,y+i))
					break;
				if(moves%4 == 0 && arr[x][y+i] == '<')
					can = false;
				if(moves%4 == 1 && arr[x][y+i] == 'v')
					can = false;
				if(moves%4 == 2 && arr[x][y+i] == '>')
					can = false;
				if(moves%4 == 3 && arr[x][y+i] == '^')
					can = false;
				if(arr[x][y+i] != '.')
					break;
			}

			for(int i = 1; i<=100; i++) {
				if(!ok(x,y-i))
					break;
				if(moves%4 == 0 && arr[x][y-i] == '>')
					can = false;
				if(moves%4 == 1 && arr[x][y-i] == '^')
					can = false;
				if(moves%4 == 2 && arr[x][y-i] == '<')
					can = false;
				if(moves%4 == 3 && arr[x][y-i] == 'v')
					can = false;
				if(arr[x][y-i] != '.')
					break;
			}

			for(int i = 1; i<=100; i++) {
				if(!ok(x+i,y))
					break;
				if(moves%4 == 0 && arr[x+i][y] == '^')
					can = false;
				if(moves%4 == 1 && arr[x+i][y] == '<')
					can = false;
				if(moves%4 == 2 && arr[x+i][y] == 'v')
					can = false;
				if(moves%4 == 3 && arr[x+i][y] == '>')
					can = false;
				if(arr[x+i][y] != '.')
					break;
			}

			for(int i = 1; i<=100; i++) {
				if(!ok(x-i,y))
					break;
				if(moves%4 == 0 && arr[x-i][y] == 'v')
					can = false;
				if(moves%4 == 1 && arr[x-i][y] == '<')
					can = false;
				if(moves%4 == 2 && arr[x-i][y] == '^')
					can = false;
				if(moves%4 == 3 && arr[x-i][y] == '>')
					can = false;
				if(arr[x-i][y] != '.')
					break;
			}

			if(!can && moves > 0)
				continue;

			if(x == fx && y == fy) {
				ans = moves;
				break;
			}

			for(int i = 0; i<4; i++) {
				if(ok(x+xx[i],y+yy[i]) && arr[x+xx[i]][y+yy[i]] == '.' && !flag[(moves+1)%4][x+xx[i]][y+yy[i]]) {
					flag[(moves+1)%4][x+xx[i]][y+yy[i]] = true;
					q.push(make_pair(moves+1,make_pair(x+xx[i],y+yy[i])));
				}
			}
		}

		cout << "Case #" << ++caseNo << ": ";
		if(ans == -1)
			cout << "impossible" << endl;
		else
			cout << ans << endl;
	}
}