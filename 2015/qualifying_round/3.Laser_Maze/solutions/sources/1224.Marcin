#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <cstring>

using namespace std;

typedef pair<int, int> pii;
typedef pair<pii, int> tri;

char plansza[102][102];
bool vis[102][102][4];
bool lasery[102][102][4];

int gx, gy;


void wypelnij(int h, int w, int gora, int dol, int prawo, int lewo)
{
    for(int i=1; plansza[h][w+i] == '.'; i++)
    {
        lasery[h][w+i][prawo] = true;
    }
    
    for(int i=1; plansza[h][w-i] == '.'; i++)
    {
        lasery[h][w-i][lewo] = true;
    }
    
    for(int i=1; plansza[h+i][w] == '.'; i++)
    {
        lasery[h+i][w][dol] = true;
    }
    
    for(int i=1; plansza[h-i][w] == '.'; i++)
    {
        lasery[h-i][w][gora] = true;
    }
}

int szukaj(int sx, int sy)
{
    int dx[4] = {0, 0, 1, -1};
    int dy[4] = {1, -1, 0, 0};
    
    queue<tri> Q;
    
    Q.push(tri(pii(sx, sy), 0) );
    
    while(!Q.empty() )
    {
        int x = Q.front().first.first;
        int y = Q.front().first.second;
        int moves = Q.front().second;
        
        Q.pop();
        
        if(vis[x][y][moves%4])
        {
            //cout<<"blee"<<endl;
            continue;
        }
        
        vis[x][y][moves%4] = true;
        
        for(int i=0; i<4; i++)
        {
            int nx = x + dx[i];
            int ny = y + dy[i];
            
            if(lasery[nx][ny][(moves+1)%4] || vis[nx][ny][(moves+1)%4] )
            {
                //cout<<"here"<<endl;
                continue;
            }
            
            if(nx == gx && ny == gy)
                return moves+1;
            
            if(plansza[nx][ny] != '.')
            {
                /*cout<<nx<<" "<<ny<<endl;
                cout<<"czyzby"<<endl;*/
                continue;
            }
            
            Q.push(tri(pii(nx, ny), moves+1) );
        }
    }
    
    return -1;
}

void clear()
{
    memset(vis, 0, sizeof(vis) );
    memset(lasery, 0, sizeof(lasery) );
    memset(plansza, 0, sizeof(plansza) );
}

int main()
{
    ios_base::sync_with_stdio(0);
    
    int testy;
    cin>>testy;
    
    for(int t=1; t<=testy; t++)
    {
        clear();
        int m, n;
        cin>>m>>n;
        
        int sx, sy;
        
        for(int i=1; i<=m; i++)
        {
            for(int j=1; j<=n; j++)
            {
                cin>>plansza[i][j];
                
                if(plansza[i][j] == 'S')
                {
                    //cout<<"jest"<<endl;
                    sx = i;
                    sy = j;
                    plansza[i][j] = '.';
                }
                    
                if(plansza[i][j] == 'G')
                {
                    gx = i;
                    gy = j;
                    plansza[i][j] = '.';
                }
            }
        }
        
        for(int i=1; i<=m; i++)
        {
            for(int j=1; j<=n; j++)
            {
                
                if(plansza[i][j] == '^')
                    wypelnij(i, j, 0, 2, 1, 3);
                
                if(plansza[i][j] == '>')
                    wypelnij(i, j, 3, 1, 0, 2);
                
                if(plansza[i][j] == 'v')
                    wypelnij(i, j, 2, 0, 3, 1);
                
                if(plansza[i][j] == '<')
                    wypelnij(i, j, 1, 3, 2, 0);
            }
        }
        
        int res = szukaj(sx, sy);
        
        cout<<"Case #"<<t<<": ";
        if(res == -1)
            cout<<"impossible\n";
        else
            cout<<res<<"\n";
        
        
       /* for(int i=1; i<=m; i++)
        {
            for(int j=1; j<= n; j++)
            {
                for(int k=0; k<4; k++)
                {
                    cout<<lasery[i][j][k]<<" ";
                }
            }
            cout<<endl;
        }*/
    }
    
    
    return 0;
}