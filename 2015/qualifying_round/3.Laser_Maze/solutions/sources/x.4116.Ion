#include <fstream>
#include <algorithm>
#include <utility>
#define x first
#define y second
using namespace std;
const int dx[4] = {-1, 0, 1, 0};
const int dy[4] = {0, 1, 0, -1};
const int NM = 102;
const int INF = 0x3f3f3f3f;

typedef struct gl{
    int i,j,tp;
}glod;

char a[NM][NM];
int d[NM][NM][4];
glod Q[NM*NM];

int main(){
    ifstream cin("FB3.in");
    ofstream cout("FB3.out");
    int T,M,N,i,j,starti,startj,goali,goalj,tp;

    cin >> T;

    for(int t = 1; t <= T; ++t)
    {
        cin >> N >> M;

        for(int to = 0; to < 4; ++ to)
        {
            for(i=1;i<=N;++i)
            {
                for(j=1;j<=M;++j)
                    d[i][j][to] = INF;
            }
        }

        for(i=1;i<=N;++i)
        {
            for(j=1;j<=M;++j)
            {
                cin >> a[i][j];
                if(a[i][j] == 'S')
                {
                    starti = i;
                    startj = j;
                }
                if(a[i][j] == 'G')
                {
                    goali = i;
                    goalj = j;
                }
                if(a[i][j] == '#' || a[i][j] == '<' || a[i][j] == '>' || a[i][j] == '^' || a[i][j] == 'v')
                {
                    for(int o = 0;o<4;++o) d[i][j][o] = -1;
                }
            }
        }

        for(i=1;i<=N;++i)
        {
            for(j=1;j<=M;++j)
            {
                if(a[i][j] == '<' || a[i][j] == '>' || a[i][j] == '^' || a[i][j] == 'v')
                {
                    if(a[i][j] == '^') tp = 0;
                    if(a[i][j] == '>') tp = 1;
                    if(a[i][j] == 'v') tp = 2;
                    if(a[i][j] == '<') tp = 3;

                    for(int dd = 0; dd < 4; ++dd)
                    {
                        int tt = (tp + dd) % 4;
                        int ii = i + dx[tt];
                        int jj = j + dy[tt];

                        while(ii > 0 && ii <= N && jj > 0 && jj <= M &&
                          (a[ii][jj] != '#' || a[ii][jj] != '<' || a[ii][jj] != '^' || a[ii][jj] != '>' || a[ii][jj] != 'v'))
                            {
                                d[ii][jj][dd] = -1;
                                ii += dx[tt];
                                jj += dy[tt];
                            }
                    }
                }
            }
        }

        int k = 1, ii, jj, tt, newcost;

        k = 1;
        Q[1].i = starti; Q[1].j = startj; Q[1].tp = 0;
        d[starti][startj][0] = 0;

        for(i=1;i<=k;++i)
        {
            for(int to = 0; to < 4; ++ to)
            {
                ii = Q[i].i + dx[to];
                jj = Q[i].j + dy[to];
                tt = (Q[i].tp + 1) % 4;
                newcost = d[Q[i].i][Q[i].j][Q[i].tp] + 1;
                if(ii == 0 || jj == 0 || ii > N || jj > M || d[ii][jj][tt] == -1 || d[ii][jj][tt] <= newcost) continue;
                d[ii][jj][tt] = newcost;
                Q[++k].i = ii; Q[k].j = jj; Q[k].tp = tt;
            }
        }

        /*
        for(int to = 0; to < 4; ++ to)
        {
            for(i=1;i<=N;++i)
            {
                for(j=1;j<=M;++j)
                    cout << d[i][j][to] << ' ';
                cout << '\n';
            }
            cout << '\n';
        }
        */

        int ans = INF;
        for(i=0;i<4;++i)
            if(d[goali][goalj][i] != -1)
                ans = min(ans, d[goali][goalj][i]);

        cout << "Case #" << t << ": ";
        if(ans == INF) cout << "impossible\n";
        else cout << ans << '\n';
    }

    return 0;
}
