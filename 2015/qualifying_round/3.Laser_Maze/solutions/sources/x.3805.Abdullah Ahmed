#include <bits/stdc++.h>

using namespace std;
int dx [] = {1 , -1 , 0 , 0  } ;
int dy [] = {0 , 0 , 1 , -1  } ;
int d[100][100];
char g[100][100];
int n,m;
int counter = 0 ;
bool check(int x,int y,int co){
    if(x >= 0 && x < n && y >= 0 && y < m && g[x][y] != '#'){
// y - axis check
        for(int i= 0 ; i < n ; i++)
            if(i > x &&g[i][y] == 'v' && (!co || co == 4) ) return  false ;
                       else  if(i > x &&g[i][y] == '^' && co == 2 ) return  false ;
            else if(i < x &&g[i][y] == '^'&& (!co || co == 4)) return  false ;
                                   else  if(i < x &&g[i][y] == 'v' && co == 2 ) return  false ;
            else if(i < x &&g[i][y] == '>'&& co == 3) return  false ;
                        else if(i > x &&g[i][y] == '<'&& co == 1) return  false ;
// x-axis check
      for(int i= 0 ; i < m ; i++)
            if(i > y &&g[x][i] == '<' && (!co || co == 4) ) return  false ;
                    else if(i > y &&g[x][i] == '>' && co == 2 ) return  false ;
            else if(i < y &&g[x][i] == '>'&& (!co || co == 4)) return  false ;
                               else if(i < y &&g[x][i] == '<' && co == 2 ) return  false ;
            else if(i < y &&g[x][i] == 'v'&& co == 1) return  false ;
                        else if(i > y &&g[x][i] == '^'&& co == 1) return  false ;

        return true ;
    }
    return false;
}
int bfs(int sx,int sy){
 d[sx][sy] = 0;
queue <pair<int,int> >q;
pair<int,int>t;
t.first = sx,t.second = sy;
q.push(t);
while(!q.empty()){
        t = q.front();
       q.pop();
       int cc = counter;
        for(int i = 0 ; i < 4 ; i++ ){
            int xs = t.first + dx[i];
                           int ys = t.second + dy[i];
  // cout<<xs <<" "<<ys<<" "<<check(xs,ys)<<endl;
int uu = ((cc+1)%4);
                if(check(xs,ys,uu)){
                    if(g[xs][ys] == 'G') return d[t.first][t.second] + 1 ;
                    else {
                        d[xs][ys]  = d[t.first][t.second] + 1 ;
                 //  cout<<xs <<" "<<ys<<endl;
                        pair<int,int> kk;
                        kk.first = xs;
                        kk.second = ys;
                        counter++;
                        counter%=4;
                        q.push(kk);
                    }
                }
        }
}
}
int main(){
    freopen("laser_maze.txt","r",stdin);
  freopen("output.txt","w",stdout);
    int t,cs =1;

    cin >>t;
    while(t--){
int xs,ys;
cin >> n >> m;
for(int i = 0 ; i < n ; i++)
    for(int j = 0 ; j < m ;j++)
        d[i][j] = 0;
for(int i = 0 ; i < n ; i++)
    for(int j = 0 ; j < m ;j++){
       cin >>g[i][j];
       if(g[i][j] == 'S') xs = i,ys = j;
    }
printf("Case #%d: ",cs++);
int zz = bfs(xs,ys);
if(zz > 0|| zz > n*m)
cout<<zz<<endl;
else cout<<"impossible"<<endl;
counter = 0;
    }
    return 0;
}
