#include <iostream>
#include <queue>
using namespace std;

struct S
{
	int r, c, t;
};
int t;
int n, m;
char a[105][105];
bool v[105][105][4];
int main()
{
	cin >> t;
	int count = 1;
	while(t)
	{
		cin >> n >> m;
		for(int i = 0; i < n; i++)
			for(int j = 0; j < m; j++)
				for(int k = 0; k < 4; k++)
					v[i][j][k] = false;
		S st;
		for(int i  = 0; i < n; i++)
		{
			for(int j = 0; j < m; j++)
			{
				cin >> a[i][j];
				if(a[i][j] == 'S')
				{
					st.r = i;
					st.c = j;
					st.t = 0;
				}
			}
		}
		queue<S> q;
		q.push(st);
		int result = -1;
		while(!q.empty())
		{
			S cur = q.front();
			//cout << cur.r << " " << cur.c << " " << cur.t << endl;
			q.pop();
			if(cur.r < 0 || cur.r >= n)
				continue;
			if(cur.c < 0 || cur.c >= m)
				continue;
			if(v[cur.r][cur.c][cur.t%4])
				continue;
			v[cur.r][cur.c][cur.t%4] = true;
			if(a[cur.r][cur.c] == '#')
				continue;
			bool flag = false;
			if(cur.t > 0)
			{
				for(int i = cur.r - 1; i >= 0; i--)
				{
					if(a[i][cur.c] == '#')
						break;
					char temp = a[i][cur.c];
					if((temp == '>' && cur.t%4 == 1) || (temp == '^' && cur.t%4 == 2) || (temp == '<' && cur.t%4 == 3) ||
						(temp == 'v' && cur.t%4 == 0))
					{
						flag = true;
						break;
					}
				}
				for(int i = cur.r + 1; i < n; i++)
				{
					char temp = a[i][cur.c];
					if(temp == '#')
						break;
					if((temp == '<' && cur.t%4 == 1) || (temp == 'v' && cur.t%4 == 2) || (temp == '>' && cur.t%4 == 3) ||
						(temp == '^' && cur.t%4 == 0))
					{
						flag = true;
						break;
					}
				}
				for(int i = cur.c - 1; i >= 0; i--)
				{
					if(a[cur.r][i] == '#')
						break;
					char temp = a[cur.r][i];
					if((temp == '^' && cur.t%4 == 1) || (temp == '<' && cur.t%4 == 2) || (temp == 'v' && cur.t%4 == 3) ||
						(temp == '>' && cur.t%4 == 0))
					{
						flag = true;
						break;
					}
				}
				for(int i = cur.c + 1; i < m; i++)
				{
					char temp = a[cur.r][i];
					if(temp == '#')
						break;
					if((temp == 'v' && cur.t % 4 == 1) || (temp == '>' && cur.t % 4 == 2) || (temp == '^' && cur.t % 4 == 3) ||
						(temp == '<' && cur.t % 4 == 0))
					{
						flag = true;
						break;
					}
				}
			}
			if(flag)
				continue;
			if(a[cur.r][cur.c] == 'G')
			{
				result = cur.t;
				break;
			}
			S temp = {cur.r-1, cur.c, cur.t+1};
			q.push(temp);
			temp.r = cur.r+1;
			q.push(temp);
			temp.r = cur.r;
			temp.c = cur.c-1;
			q.push(temp);
			temp.c = cur.c+1;
			q.push(temp);
		}
		cout << "Case #" << count << ": ";
		if(result == -1)
			cout << "impossible";
		else	cout << result;
		cout << endl;
		count++;
		t--;
	}
}