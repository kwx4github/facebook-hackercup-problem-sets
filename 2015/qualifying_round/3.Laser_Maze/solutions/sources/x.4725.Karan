// karanaggarwal
#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define repi(i,n) for(int i=0; i<(int)n;i++)
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define sortv(a) sort(a.begin(),a.end())
#define all(a) a.begin(),a.end()
#define DRT()  int t; cin>>t; while(t--)
#define TRACE
using namespace std;

//FILE *fin = freopen("in","r",stdin);
//FILE *fout = freopen("out","w",stdout);


#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif


typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;


bool A[100][100][4];
int D[100][100][4];
int n,m; 
string B[100];
int X[4]={-1,0,0,1};
int Y[4]={0,-1,1,0};
bool valid(int i, int j, int mv)
{
    if(i<0 or j<0 or i>=n or j>=m)return false;
    mv = mv%4;
    if(A[i][j][mv] or D[i][j][mv]>=0)return false;
    return true;
}

void blockall(int x, int y)
{
    repi(i,4) A[x][y][i] = true;
}

void up(int x, int y, int ty)
{
    x--;
    while(x>=0 and A[x][y][ty]==false)
    {
        A[x][y][ty] = true; x--; 
    }
}
void down(int x, int y, int ty)
{
    x++;
    while(x<n and A[x][y][ty]==false)
    {
        A[x][y][ty] = true; x++;}
}
void left(int x, int y, int ty)
{
    y--;
    while(y>=0 and A[x][y][ty]==false)
    {
        A[x][y][ty] = true; 
        y--;
    }
}
void right(int x, int y, int ty)
{
    y++;
    while(y<m and A[x][y][ty]==false)
    {
        A[x][y][ty] = true; 
        y++;
    }
}

int main()
{
    int t; si(t); int cs = 0; 
    while(t--)
    {
        SET(A,0);
        cin>>n>>m;
        cs++;
        repi(i,n)cin>>B[i];
        PII s,d; 
        repi(i,n)repi(j,m) 
        {
            if(B[i][j]=='S')s = MP(i,j);
            if(B[i][j]=='G')d = MP(i,j);
            if(B[i][j]=='#' || B[i][j]=='<' || B[i][j]=='>' || B[i][j]=='^' || B[i][j]=='v') blockall(i,j);
        }
        repi(i,n)repi(j,m) 
        {
            if(B[i][j]=='>')
            {
                int x = 0;
                right(i,j,x);x++;  
                down(i,j,x);x++;  
                left(i,j,x);x++;  
                up(i,j,x);x++;  
            }
            if(B[i][j]=='^')
            {
                int x = 0;
                up(i,j,x);x++;  
                right(i,j,x);x++;  
                down(i,j,x);x++;  
                left(i,j,x);x++;  
            }
            if(B[i][j]=='v')
            {
                int x = 0;
                down(i,j,x);x++;  
                left(i,j,x);x++;  
                up(i,j,x);x++;  
                right(i,j,x);x++;  
            }
            if(B[i][j]=='<')
            {
                int x = 0;
                left(i,j,x);x++;  
                up(i,j,x);x++;  
                right(i,j,x);x++;  
                down(i,j,x);x++;  
            }
        }
        SET(D,-1); D[s.F][s.S][0] = 0;
        queue<pair< PII , int> > Q; Q.push(MP(MP(s.F,s.S),0));
        int ans = -1;
        while(!Q.empty())
        {
            pair< PII , int > tp = Q.front(); Q.pop(); 
            if(tp.F == d)
            {
                ans = D[d.F][d.S][tp.S]; break;
            }
            int nd = 1 + D[tp.F.F][tp.F.S][tp.S];
            int nm = tp.S + 1; if(nm==4)nm = 0;
            repi(i,4)
            {
                int x = tp.F.F + X[i]; 
                int y = tp.F.S + Y[i]; 
                if(valid(x,y,nm))
                {
                    D[x][y][nm] = nd;
                    Q.push(MP(MP(x,y),nm));
                }
            }
        }
        cout<<"Case #"<<cs<<": ";
        if(ans!=-1)cout<<ans<<endl; else cout<<"impossible\n";
    }
    return 0;
}

