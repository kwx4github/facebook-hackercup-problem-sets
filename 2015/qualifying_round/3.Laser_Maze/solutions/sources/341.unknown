// /\||/\||
//
//
//////////////////////
// Program: 
// Written By Alireza Farhadi (LGM)
//////////////////////
#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cctype>
#include <cassert>
#include <csignal>
#include <cmath>
#include <array>
#include <queue>
#include <stack>
#include <string>
#include <regex>
#include <set>
#include <map>
#include <tuple>
#include <list>
#include <utility>
#include <vector>
#include <bitset>
#include <deque>
#include <iomanip>
#include <complex>
#include <fstream>
#include <sstream>
#include <unordered_set>
#include <unordered_map>

using namespace std;
#ifdef _TEST
#define testdo(x) x
#else
#define testdo(x)
#endif
#define show(x) testdo(cerr<<((#x))<<" = "<<((x))<<" "<<endl)
#define bit(a,b) (((a)>>(b))&1)
#define get(x,i) (get<((i))>(((x))))
#define ALL(x) ((x)).begin(),((x)).end()
#define Mt make_tuple
#define gcd __gcd
#define endl '\n'
#define bcnt(x) ((__builtin_popcount(x)))
#define bcntll(x) ((__builtin_popcountll(x)))
#define sqr(x) ((((x))*((x))))
#define fx(x) fixed<<setprecision(x)
#define list _list

template<class T> inline void smn(T &a,const T &b){if(b<a) a=b;}
template<class T> inline void smx(T &a,const T &b){if(b>a) a=b;}

typedef long long ll;
typedef pair<int,int> pie;
typedef tuple<int,int,int> trip;
typedef complex<double> point;

const double eps=1e-8;

const int MN=1000,INF=(1u<<31)-1;

int xd[]={-1,0,1,0};
int yd[]={0,1,0,-1};

int t;
int n,m;
bool bad[MN][MN][4];
bool block[MN][MN];
char mp[MN][MN];
map<char,int> dir;
bool mark[MN][MN][4];
int dis[MN][MN][4];
void bfs(int x,int y,int ti)
{
	queue<trip> Q;
	mark[x][y][ti]=1;
	dis[x][y][ti]=0;
	Q.push({x,y,ti});
	while (!Q.empty())
	{
		trip temp=Q.front(); Q.pop();
		int xn=get(temp,0),yn=get(temp,1),dn=get(temp,2);
		for (int i=xn-1;i<=xn+1;i++) for (int j=yn-1;j<=yn+1;j++) if (abs(i-xn)+abs(j-yn)==1 && i>=0 && j>=0 && i<n && j<m && !mark[i][j][(dn+1)%4] && !block[i][j] && !bad[i][j][(dn+1)%4])
		{
			mark[i][j][(dn+1)%4]=1;
			dis[i][j][(dn+1)%4]=dis[xn][yn][dn]+1;
			Q.push({i,j,(dn+1)%4});
		}
	}
}
void go(int x,int y,int ti,int di)
{
	bad[x][y][ti]=1;
	int x2=x+xd[di];
	int y2=y+yd[di];
	if (x2<0 || y2<0 || x2>=n || y2>=m || block[x2][y2]) return ;
	go(x2,y2,ti,di);
}
int main()
{
	ios_base::sync_with_stdio(false);
	dir['^']=0;
	dir['>']=1;
	dir['v']=2;
	dir['<']=3;
	cin>>t;
	for (int tc=1;tc<=t;tc++)
	{
		memset(bad,0,sizeof(bad));
		memset(block,0,sizeof(block));
		memset(mark,0,sizeof(mark));		
		cin>>n>>m;
		for (int i=0;i<n;i++) for (int j=0;j<m;j++)
		{
			cin>>mp[i][j];
			if (mp[i][j]!='.' && mp[i][j]!='S' && mp[i][j]!='G')
				block[i][j]=1;
		}
		for (int i=0;i<n;i++) for (int j=0;j<m;j++) if (dir.find(mp[i][j])!=dir.end())
			for (int k=0;k<4;k++) go(i,j,k,(dir[mp[i][j]]+k)%4);
		for (int i=0;i<n;i++) for (int j=0;j<m;j++) if (mp[i][j]=='S')
			bfs(i,j,0);
		int res=INF;
		for (int i=0;i<n;i++) for (int j=0;j<m;j++) if (mp[i][j]=='G')
			for (int k=0;k<4;k++) if (mark[i][j][k])
				smn(res,dis[i][j][k]);
		cout<<"Case #"<<tc<<": ";
		if (res==INF) cout<<"impossible"<<endl;
		else cout<<res<<endl;
	}
	return 0;
}
