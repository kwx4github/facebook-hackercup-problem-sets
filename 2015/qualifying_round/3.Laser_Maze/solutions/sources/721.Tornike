/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//std::ios_base::sync_with_stdio (false);

#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <iomanip>
#include <map>
#include <assert.h>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>
#include <deque>
#include <fstream>
#include <bitset>

#define endl '\n'
#define deb(x) cout << "> " << #x << " : " << (x) << endl;
#define EPS 0.0000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF ((1<<30)-1)
#define pb push_back
#define mp make_pair
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int , int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector < int >
#define DID (long long)
#define ll long long
#define AL(a) (a).begin(),(a).end()
#define INFF DID INF*INF
#define debug 1

using namespace std;

const int T = 1e3 + 5;

char c[T][T];
int N,M,stI,stJ,fnI,fnJ;
int no[T][T][4];
int dx[4]={0,-1,0,1};
int dy[4]={-1,0,1,0};

struct node{
    int i,j,t;
};

queue <node> q;
int mn[T][T][4],fix[T][T][4];

void renull(){
    memset(mn,0,sizeof(mn));
    memset(fix,0,sizeof(fix));
    memset(no,0,sizeof(no));
    while (!q.empty())
        q.pop();
}

int main(){
    #ifndef ONLINE_JUDGE
        freopen("text.in","r",stdin);  freopen("text.out","w",stdout);
    #endif

    int t;
    int tt;
    cin>>t;
    tt = t;
    while (t--){
        renull();
        scanf("%d %d\n",&N,&M);
        for (int i=1;i<=N;i++){
            for (int j=1;j<=M;j++){
                c[i][j]=getchar();
                if (c[i][j]=='S')
                    stI = i, stJ = j;
                if (c[i][j]=='G')
                    fnI = i, fnJ = j;
                if (c[i][j]=='<')
                    c[i][j]='0';
                if (c[i][j]=='^')
                    c[i][j]='1';
                if (c[i][j]=='>')
                    c[i][j]='2';
                if (c[i][j]=='v')
                    c[i][j]='3';
            }
            getchar();
        }
        for (int i=0;i<=N+1;i++)
            for (int j=0;j<=M+1;j++)
            if (i == 0 || j==0 || i==N+1 || j==M+1)
            c[i][j]='#';
        for (int k=0;k<4;k++){
            for (int i=1;i<=N;i++)
            for (int j=1;j<=M;j++)if (c[i][j]>='0' && c[i][j]<='3'){
                int p = k + c[i][j] - '0';p%=4;
                int I = i + dx[p];
                int J = j + dy[p];
                while (c[I][J]=='S' || c[I][J]=='G' || c[I][J]=='.'){
                    no[I][J][k] = 1;
                    I+=dx[p];
                    J+=dy[p];
                }
            }
        }

        q.push((node){stI,stJ,0});
        for (int i=1;i<=N;i++)
            for (int j=1;j<=M;j++)
            for (int k=0;k<4;k++)
            mn[i][j][k]=INF , fix[i][j][k]=0;

        while (!q.empty()){
            int I = q.front().i;
            int J = q.front().j;
            int tm = q.front().t;

            //cout<<I<<" "<<J<<" "<<tm<<endl;

            q.pop();

            for (int k=0;k<4;k++){
                int newI = I + dx[k];
                int newJ = J + dy[k];
                if (!(c[newI][newJ] == 'S' || c[newI][newJ] == 'G' || c[newI][newJ] == '.'))
                    continue;
                if (no[newI][newJ][(tm+1)%4])
                    continue;
                if (fix[newI][newJ][(tm+1)%4])
                    continue;
                fix[newI][newJ][(tm+1)%4]=1;
                mn[newI][newJ][(tm+1)%4]=tm+1;
                q.push((node){newI,newJ,tm+1});
            }
        }

        int ans = INF;
        for (int i=0;i<4;i++){
            ans = min(ans,mn[fnI][fnJ][i]);
        }

        if (ans == INF)
            cout<<"Case #"<<tt-t<<": "<<"impossible"<<endl;
        else
            cout<<"Case #"<<tt-t<<": "<<ans<<endl;

    }

}
