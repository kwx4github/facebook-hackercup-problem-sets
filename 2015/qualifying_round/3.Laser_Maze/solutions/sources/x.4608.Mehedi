#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<deque>
#include<stack>
#include<map>
#include<set>
#include<list>
#include<sstream>
#include<utility>
#include<climits>
#include<fstream>
#include<bitset>

using namespace std;

#define Max 105
#define Min -1
#define lli long long int
#define psb push_back
#define pob pop_back
#define forl(i,n) for(i=1;i<=n;i++)
#define all(a) a.begin(),a.end()

typedef pair<int,int> pii;
typedef pair<lli,lli> pli;
typedef vector<int> vi;
typedef vector<lli> vli;

//int kdx[] = { -2, -2, -1, 1, 2,  2,  1, -1 };
//int kdy[] = { -1,  1,  2, 2, 1, -1, -2, -2 };
int dx[] = {0,0,1,-1};
int dy[] = {1,-1,0,0};

char imz[Max][Max],mz[Max][Max][8];
bool vst[Max][Max][8];
int n,m,sx,sy,ex,ey,tim[Max][Max];
struct data{
    int x;
    int y;
};

void shoot(int r1,int c1,int r2,int c2,int i){
    int t;
    if(r1>r2){
        t=r1;r1=r2;r2=t;
    }
    if(c1>c2){
        t=c1;c1=c2;c2=t;
    }
    for(;r1<=r2;r1++){
        for(t=c1;t<=c2;t++){
            mz[r1][t][i]='#';
        }
    }
    return;
}

int bfs(){
    queue<data>q;
    int tx,ty,nx,ny,t;
    data st;
    st.x=sx;st.y=sy;
    tim[sx][sy]=0;
    q.push(st);
    t=0;
    while(!q.empty()){
        st = q.front();
        tx=st.x;ty=st.y;
        q.pop();
        for(int i=0;i<4;i++){
            nx=tx+dx[i];ny=ty+dy[i];
            t=tim[nx][ny]=tim[tx][ty]+1;
            if(mz[nx][ny][t%4]=='G')
                return t;
            if(nx<n&&nx>=0&&ny<m&&ny>=0&&mz[nx][ny][t%4]!='#'&&vst[nx][ny][t%4]==0){
                vst[nx][ny][t%4]=1;
                st.x=nx;
                st.y=ny;
                q.push(st);
            }
        }
    }
    return -1;
}

int main()
{
//ios::sync_with_stdio(false);
//freopen("laser_maze.txt","r",stdin);
//freopen("output","w",stdout);
int k,t,c;
//cin>>k;
scanf("%d",&k);
for(int i=1;i<=k;i++){
    //cin>>n>>m;
    scanf("%d %d",&n,&m);
    for(int j=0;j<n;j++)
        scanf("%s",imz[j]);
        //cin>>imz[j];
    for(int a=0;a<4;a++){
      for(int k=0;k<n;k++){
        for(int j=0;j<m;j++){
            mz[k][j][a]=imz[k][j];
        }
    }
    }

    for(int j=0;j<n;j++){
        for(int k=0;k<m;k++){
            if(imz[j][k]=='S') {sx=j;sy=k;}
            else if(imz[j][k]=='G') {ex=j;ey=k;}
            else if(imz[j][k]!='.'&&imz[j][k]!='#'){
            if(imz[j][k]=='<')t=1;
            else if(imz[j][k]=='v')t=2;
            else if(imz[j][k]=='>')t=3;
            else if(imz[j][k]=='^')t=4;

            for(int l=t,c=1;c<=4;l++,c++){
                if(c%4 == 1)shoot(j,k,0,k,l%4);
                else if(c%4 == 2)shoot(j,k,j,m-1,l%4);
                else if(c%4 == 3)shoot(j,k,n-1,k,l%4);
                else if(c%4 == 0)shoot(j,k,j,0,l%4);
        }
        }
    }
}
    t=bfs();
    if(t==-1){
        //cout<<"Case #"<<i<<": "<<"impossible\n";
        printf("Case #%d: impossible\n",i);
    }
    else{
        //cout<<"Case #"<<i<<": "<<t<<'\n';
        printf("Case #%d: %d\n",i,t);
    }
    memset(vst,0,sizeof(vst));
}
return 0;
}
