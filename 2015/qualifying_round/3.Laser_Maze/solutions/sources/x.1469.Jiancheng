#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;
#define N 102
int dx[] = {-1, 0, 1, 0};
int dy[] = {0, -1, 0, 1};
char a[N][N];
int f[N][N][4];
pii st, en;
vector<pii> laser;
int t, n, m, s;

bool check(int x, int y, int step)
{
    for (int k = 0; k < laser.size(); ++k)
    {
        int i = laser[k].first;
        int j = laser[k].second;
        int d = (a[i][j] + step) % 4;
        if (d == 0)
        {
            if (y == j && x <= i)
                return 0;
        }
        else if (d == 1)
        {
            if (x == i && y >= j)
                return 0;
        }
        else if (d == 2)
        {
            if (y == j && x >= i)
                return 0;
        }
        else
        {
            if (x == i && y <= j)
                return 0;
        }
    }
    return 1;
}

void bfs()
{
    queue<piii> q;
    memset(f, 15, sizeof(f));
    q.push(piii(st, 0));
    f[st.first][st.second][0] = 0;
    while (!q.empty())
    {
        piii h = q.front();
        int i = h.first.first;
        int j = h.first.second;
        int cycle = h.second;
        int step = f[i][j][cycle] + 1;
        q.pop();
        for (int k = 0; k < 4; ++k)
        {
            int x = i + dx[k];
            int y = j + dy[k];
            if (x >= 0 && x < n && y >= 0 && y < m && a[x][y] == '.' &&
                step < f[x][y][step % 4] && check(x, y, step))
            {
                if (x == en.first && y == en.second)
                {
                    printf("%d\n", step);
                    return ;
                }
                f[x][y][step % 4] = step;
                q.push(piii(pii(x, y), step % 4));
            }
        }
    }
    puts("impossible");
}

void solve()
{
    scanf("%d%d", &n, &m);
    laser.clear();
    for (int i = 0; i < n; ++i)
    {
        scanf("%s", &a[i]);
        for (int j = 0; j < m; ++j)
            if (a[i][j] == 'S')
            {
                st = pii(i, j);
                a[i][j] = '.';
            }
            else if (a[i][j] == 'G')
            {
                en = pii(i, j);
                a[i][j] = '.';
            }
            else if (a[i][j] == '^' || a[i][j] == 'v' || a[i][j] == '<' || a[i][j] == '>')
            {
                laser.push_back(pii(i, j));
                if (a[i][j] == '^')
                    a[i][j] = 0;
                else if (a[i][j] == '>')
                    a[i][j] = 1;
                else if (a[i][j] == 'v')
                    a[i][j] = 2;
                else
                    a[i][j] = 3;
            }
    }
    bfs();
}

int main()
{
    freopen("1.txt", "r", stdin);
    freopen("22.txt", "w", stdout);
    scanf("%d", &t);
    for (int tt = 1; tt <= t; ++tt)
    {
        printf("Case #%d: ", tt);
        solve();
    }
    return 0;
}