#include <cstdio>
#include <queue>
#include <vector>

using namespace std;

#define INF 100000000

vector <vector <long int> > arr;

long int valu(long int a,long int b,long int c,long int n)
{
	return ((c*n*n)+(b*n)+a);
}

long int mina(long int a,long int b)
{
	if(a<b)
		return a;
	return b;
}

long int maxa(long int a,long int b)
{
	if(a>b)
		return a;
	return b;
}

long int bfs(vector <vector <long int> > arr,long int vis[],long int dist[],long int n);

int main() 
{
	FILE* fp,*fo;
	fp=fopen("input.txt","r");
	fo=fopen("output.txt","w");	
	long int n,m,t,k,i,j,s,a,b,c,mx,inx,iny,fnx,fny,ch=1;
	fscanf(fp,"%ld",&k);
	while(ch<=k)
	{
		inx=iny=fnx=fny=(-1);
		fscanf(fp,"%ld %ld",&n,&m);
		char str[110][110];
		long int val[110][110][5],stat[110][110][5],u,dist[110000],vis[110000];
		for(i=0;i<n;i++)
		{
			fscanf(fp,"%s",str[i]);
		}
		mx=maxa(n,m);
		arr.clear();
		arr.resize(100*mx*mx);
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				stat[i][j][0]=stat[i][j][1]=stat[i][j][2]=stat[i][j][3]=1;
				for(s=0;s<4;s++)
				{
					val[i][j][s]=valu(i,j,s,mx+1);
				}
				if(str[i][j]=='S')
				{
					inx=i,iny=j;
				}
				else if(str[i][j]=='G')
				{
					fnx=i,fny=j;
				}
				else if((str[i][j]=='#')||(str[i][j]=='^')||(str[i][j]=='v')||(str[i][j]=='<')||(str[i][j]=='>'))
				{
					stat[i][j][0]=stat[i][j][1]=stat[i][j][2]=stat[i][j][3]=0;
				}
			}
		}
		
		for(i=0;i<n;i++)
		{
			long long int st=1;
			for(j=0;j<m;j++)
			{
				if(str[i][j]=='>')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][0]=mina(st,stat[i][j][0]);
			}
			st=1;
			for(j=m-1;j>=0;j--)
			{
				if(str[i][j]=='<')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][0]=mina(st,stat[i][j][0]);
			}
			
			st=1;
			for(j=0;j<m;j++)
			{
				if(str[i][j]=='^')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][1]=mina(st,stat[i][j][1]);
			}
			st=1;
			for(j=m-1;j>=0;j--)
			{
				if(str[i][j]=='v')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][1]=mina(st,stat[i][j][1]);
			}
			
			st=1;
			for(j=0;j<m;j++)
			{
				if(str[i][j]=='<')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][2]=mina(st,stat[i][j][2]);
			}
			st=1;
			for(j=m-1;j>=0;j--)
			{
				if(str[i][j]=='>')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][2]=mina(st,stat[i][j][2]);
			}
			
			st=1;
			for(j=0;j<m;j++)
			{
				if(str[i][j]=='v')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][3]=mina(st,stat[i][j][3]);
			}
			st=1;
			for(j=m-1;j>=0;j--)
			{
				if(str[i][j]=='^')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][3]=mina(st,stat[i][j][3]);
			}
		}
		
		
		for(j=0;j<m;j++)
		{
			long long int st=1;
			for(i=0;i<n;i++)
			{
				if(str[i][j]=='v')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][0]=mina(st,stat[i][j][0]);
			}
			st=1;
			for(i=n-1;i>=0;i--)
			{
				if(str[i][j]=='^')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][0]=mina(st,stat[i][j][0]);
			}
			
			st=1;
			for(i=0;i<n;i++)
			{
				if(str[i][j]=='>')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][1]=mina(st,stat[i][j][1]);
			}
			st=1;
			for(i=n-1;i>=0;i--)
			{
				if(str[i][j]=='<')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][1]=mina(st,stat[i][j][1]);
			}
			
			st=1;
			for(i=0;i<n;i++)
			{
				if(str[i][j]=='^')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][2]=mina(st,stat[i][j][2]);
			}
			st=1;
			for(i=n-1;i>=0;i--)
			{
				if(str[i][j]=='v')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][2]=mina(st,stat[i][j][2]);
			}
			
			st=1;
			for(i=0;i<n;i++)
			{
				if(str[i][j]=='<')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][3]=mina(st,stat[i][j][3]);
			}
			st=1;
			for(i=n-1;i>=0;i--)
			{
				if(str[i][j]=='>')
				{
					st=0;
				}
				else if(str[i][j]=='#')
				{
					st=1;
				}
				stat[i][j][3]=mina(st,stat[i][j][3]);
			}
		}
		
		/*for(s=0;s<4;s++)
		{
			for(i=0;i<n;i++)
			{
				for(j=0;j<m;j++)
				{
					printf("%ld ",stat[i][j][s]);
				}
				printf("\n");
			}
			printf("\n\n");
		}
		
		for(s=0;s<4;s++)
		{
			for(i=0;i<n;i++)
			{
				for(j=0;j<m;j++)
				{
					printf("%ld ",val[i][j][s]);
				}
				printf("\n");
			}
			printf("\n\n");
		}*/
		
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				for(s=0;s<4;s++)
				{
					u=val[i][j][s];
					if(stat[i][j][s]==0)
						continue;					
					c=(s+1)%4;
					if((i>=1)&&stat[i-1][j][c])
						arr[u].push_back(val[i-1][j][c]);
					if((j>=1)&&stat[i][j-1][c])
						arr[u].push_back(val[i][j-1][c]);
					if((j<(m-1))&&stat[i][j+1][c])
						arr[u].push_back(val[i][j+1][c]);
					if((i<(n-1))&&stat[i+1][j][c])
						arr[u].push_back(val[i+1][j][c]);
				}
			}	
		}
		
		t=(4*(mx+1)*(mx+1));
		
		/*for(i=0;i<t;i++)
		{
			if(arr[i].size()==0)
				continue;
			printf("%ld: ",i);
			for(j=0;j<arr[i].size();j++)
			{
				printf("%ld ",arr[i][j]);
			}
			printf("\n");
		}*/
		
		//printf("%ld %ld\n",valu(inx,iny,0,mx+1),valu(fnx,fny,0,mx+1));
			
		a=INF;
		c=1;
		i=inx,j=iny;
		if((i>=1)&&stat[i-1][j][c])
		{
			for(b=0;b<=t;b++) 
			{
				dist[b]=INF;
				vis[b]=0;			
			}
			bfs(arr,vis,dist,val[i-1][j][c]);
			for(s=0;s<4;s++)
			{
				//printf("%ld : %ld\n",valu(fnx,fny,s,mx+1),dist[valu(fnx,fny,s,mx+1)]);
				a=mina(a,dist[valu(fnx,fny,s,mx+1)]);
			}
		}
		if((j>=1)&&stat[i][j-1][c])
		{
			for(b=0;b<=t;b++) 
			{
				dist[b]=INF;
				vis[b]=0;			
			}
			bfs(arr,vis,dist,val[i][j-1][c]);
			for(s=0;s<4;s++)
			{
				//printf("%ld : %ld\n",valu(fnx,fny,s,mx+1),dist[valu(fnx,fny,s,mx+1)]);
				a=mina(a,dist[valu(fnx,fny,s,mx+1)]);
			}
		}
		if((j<(m-1))&&stat[i][j+1][c])
		{
			for(b=0;b<=t;b++) 
			{
				dist[b]=INF;
				vis[b]=0;			
			}
			bfs(arr,vis,dist,val[i][j+1][c]);
			for(s=0;s<4;s++)
			{
				//printf("%ld : %ld\n",valu(fnx,fny,s,mx+1),dist[valu(fnx,fny,s,mx+1)]);
				a=mina(a,dist[valu(fnx,fny,s,mx+1)]);
			}
		}
		if((i<(n-1))&&stat[i+1][j][c])
		{
			for(b=0;b<=t;b++) 
			{
				dist[b]=INF;
				vis[b]=0;			
			}
			bfs(arr,vis,dist,val[i+1][j][c]);
			for(s=0;s<4;s++)
			{
				//printf("%ld : %ld\n",valu(fnx,fny,s,mx+1),dist[valu(fnx,fny,s,mx+1)]);
				a=mina(a,dist[valu(fnx,fny,s,mx+1)]);
			}
		}		
		printf("Case #%ld: \n",ch);
		fprintf(fo,"Case #%ld: ",ch);
		if(a==INF)
		{
			fprintf(fo,"impossible\n");
		}
		else
		{
			fprintf(fo,"%ld\n",a+1);
		}
		ch++;
	}		
	return 0;
}

long int bfs(vector <vector <long int> > arr,long int vis[],long int dist[],long int n)
{
	long int s=0,i,j,t=0;
	queue <long int> qu;
	qu.push(n);
	dist[n]=0;
	vis[n]=1;
	s++;
	while(s>0)
	{
		i=qu.front();
		qu.pop();
		s--;
		for(j=0;j<arr[i].size();j++)
		{
			if(vis[arr[i][j]]!=1)
			{
				dist[arr[i][j]]=dist[i]+1;
				vis[arr[i][j]]=1;
				qu.push(arr[i][j]);
				s++;
			}
		}
	}
	return 0;
}

