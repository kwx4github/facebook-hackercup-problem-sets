#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;
typedef long long ll;

#define pb push_back
#define eb emplace_back
#define mp make_pair
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;++i)

const int dx[]={0,1,0,-1};//u,r,d,l
const int dy[]={-1,0,1,0};
const char dd[]={'^','>','v','<'};

int TC,h,w,sy,sx,gy,gx;
char c[110][110];
bool ok[110][110][4];
int d[110][110][4];

int main(){
    scanf("%d",&TC);
    rep(tt,TC){
	printf("Case #%d: ",tt+1);
	scanf("%d%d",&h,&w);
	rep(i,h){
	    scanf("%s",c[i]);
	    rep(j,w){
		if(c[i][j]=='S'){sy=i;sx=j;c[i][j]='.';}
		else if(c[i][j]=='G'){gy=i;gx=j;c[i][j]='.';}
	    }
	}

	rep(i,h) rep(j,w) rep(t,4) ok[i][j][t]=c[i][j]=='.';

	rep(i,h) rep(j,w){
	    int dir=-1;
	    rep(t,4) if(c[i][j]==dd[t]) dir=t;
	    if(dir==-1) continue;

	    rep(t,4){
		int y=i,x=j;
		while(true){
		    y+=dy[dir],x+=dx[dir];
		    if(x<0||x>=w||y<0||y>=h||c[y][x]!='.') break;
		    ok[y][x][t]=0;
		}
		++dir;
		if(dir>=4) dir-=4;
	    }
	}

	memset(d,-1,sizeof(d));
	queue<pair<pii,int> > que;
	que.push(mp(mp(sy,sx),0));
	d[sy][sx][0]=0;


	while(!que.empty()){
	    pair<pii,int> p=que.front();que.pop();
	    int y=p.fi.fi,x=p.fi.se,m=p.se;
	    int mm=m+1; if(mm>=4)mm-=4;
	    rep(i,4){
		int ny=y+dy[i],nx=x+dx[i];
		if(ny>=0&&nx>=0&&ny<h&&nx<w&&ok[ny][nx][mm]&&d[ny][nx][mm]==-1){
		    d[ny][nx][mm]=d[y][x][m]+1;
		    que.push(mp(mp(ny,nx),mm));
		}
	    }
	}

	int mi=100000000;
	rep(i,4) if(d[gy][gx][i]!=-1) mi=min(mi,d[gy][gx][i]);
	if(mi==100000000) puts("impossible");
	else printf("%d\n",mi);
    }
    return 0;
}
