from collections import deque
if __name__ == '__main__':
  t = int(raw_input())
  for tt in xrange(t):
    m, n = map(int, raw_input().strip().split())
    x = [[], [], [], []]
    y = [[], [], [], []]
    for i in xrange(m):
      s = [c for c in raw_input().strip()]
      for j in xrange(n):
        if s[j] == 'S':
          si = i
          sj = j
          s[j] = '.'
        elif s[j] == 'G':
          gi = i
          gj = j
          s[j] = '.'
      x[0].append(s)
    for k in xrange(1, 4):
      for i in xrange(m):
        x[k].append(x[k-1][i][:])
        for j in xrange(n):
          if x[k][i][j] == '^':
            x[k][i][j] = '>'
          elif x[k][i][j] == '>':
            x[k][i][j] = 'v'
          elif x[k][i][j] == 'v':
            x[k][i][j] = '<'
          elif x[k][i][j] == '<':
            x[k][i][j] = '^'
    for k in xrange(4):
      for i in xrange(m):
        y[k].append([0] * n)
        for j in xrange(n):
          if x[k][i][j] == '^':
            ii = i-1
            while ii >= 0 and (x[k][ii][j] == '.' or x[k][ii][j] == 'o'):
              x[k][ii][j] = 'o'
              ii -= 1
          elif x[k][i][j] == 'v':
            ii = i+1
            while ii < m and (x[k][ii][j] == '.' or x[k][ii][j] == 'o'):
              x[k][ii][j] = 'o'
              ii += 1
          elif x[k][i][j] == '<':
            jj = j-1
            while jj >= 0 and (x[k][i][jj] == '.' or x[k][i][jj] == 'o'):
              x[k][i][jj] = 'o'
              jj -= 1
          elif x[k][i][j] == '>':
            jj = j+1
            while jj < n and (x[k][i][jj] == '.' or x[k][i][jj] == 'o'):
              x[k][i][jj] = 'o'
              jj += 1
    q = deque()
    q.append((0, si, sj, 0))
    y[0][si][sj] = 1
    ans = -1
    while q:
      k, i, j, d = q.popleft()
      if i == gi and j == gj:
        ans = d
        break
      kk = (k+1) % 4
      ii = i-1
      if ii >= 0 and x[kk][ii][j] == '.' and y[kk][ii][j] == 0:
        q.append((kk, ii, j, d+1))
        y[kk][ii][j] = 1
      ii = i+1
      if ii < m and x[kk][ii][j] == '.' and y[kk][ii][j] == 0:
        q.append((kk, ii, j, d+1))
        y[kk][ii][j] = 1
      jj = j-1
      if jj >= 0 and x[kk][i][jj] == '.' and y[kk][i][jj] == 0:
        q.append((kk, i, jj, d+1))
        y[kk][i][jj] = 1
      jj = j+1
      if jj < n and x[kk][i][jj] == '.' and y[kk][i][jj] == 0:
        q.append((kk, i, jj, d+1))
        y[kk][i][jj] = 1
    print 'Case #%d: %s' % (tt+1, 'impossible' if ans == -1 else ans)