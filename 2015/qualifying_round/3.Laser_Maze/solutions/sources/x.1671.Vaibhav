#include<stdio.h>
int main()
{
    freopen("laser_maze.txt","r",stdin); freopen("laser_maze_output.txt","w",stdout);
	int t,i,j,k,mod[102][102][4],n,m,sx,sy,gx,gy,total,tt,steps,current[102][102],previous[102][102],flag1,val,flag;
	char a[102][102];
	scanf("%d",&t);
	for(tt=1;tt<=t;tt++)
	{
		scanf("%d %d",&n,&m);
		for(i=1;i<=n;i++)
		{
			scanf("%s",a[i]);
		}
		for(i=1;i<=n;i++)
		{
			for(j=m;j>=1;j--)
			{
				a[i][j]=a[i][j-1];
			}
		}
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				if(a[i][j]=='S')
				{
					sx=i;
					sy=j;
					a[i][j]='.';
				}
				if(a[i][j]=='G')
				{
					gx=i;
					gy=j;
					a[i][j]='.';
				}
			}
		}
		for(i=0;i<=n+1;i++)
		{
			for(j=0;j<=m+1;j++)
			{
				for(k=0;k<4;k++)
				{
					mod[i][j][k]=1;
					if(i==0||j==0||j==m+1||i==n+1)
					mod[i][j][k]=0;
				}
			}
		}
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				if(a[i][j]=='^')
				{
					for(k=i-1;k>=1;k--)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][0]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j+1;k<=m;k++)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][1]=0;
						}
						else
						{
							break;
						}
					}
					for(k=i+1;k<=n;k++)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][2]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j-1;k>=1;k--)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][3]=0;
						}
						else
						{
							break;
						}
					}
				}
				else if(a[i][j]=='>')
				{
					for(k=i-1;k>=1;k--)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][3]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j+1;k<=m;k++)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][0]=0;
						}
						else
						{
							break;
						}
					}
					for(k=i+1;k<=n;k++)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][1]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j-1;k>=1;k--)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][2]=0;
						}
						else
						{
							break;
						}
					}
				}
				else if(a[i][j]=='v')
				{
					for(k=i-1;k>=1;k--)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][2]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j+1;k<=m;k++)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][3]=0;
						}
						else
						{
							break;
						}
					}
					for(k=i+1;k<=n;k++)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][0]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j-1;k>=1;k--)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][1]=0;
						}
						else
						{
							break;
						}
					}
				}
				else if(a[i][j]=='<')
				{
					for(k=i-1;k>=1;k--)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][1]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j+1;k<=m;k++)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][2]=0;
						}
						else
						{
							break;
						}
					}
					for(k=i+1;k<=n;k++)
					{
						if(a[k][j]=='.')
						{
							mod[k][j][3]=0;
						}
						else
						{
							break;
						}
					}
					for(k=j-1;k>=1;k--)
					{
						if(a[i][k]=='.')
						{
							mod[i][k][0]=0;
						}
						else
						{
							break;
						}
					}
				}
				else
				{
					continue;
				}
			}
		}
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				if(a[i][j]!='.')
				{
					for(k=0;k<4;k++)
					{
						mod[i][j][k]=0;
					}
				}
			}
		}
		//printf("%d\n",mod[2][3][3]);
		/*for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				printf("%c",a[i][j]);
			}
			printf("\n");
		}*/
		/*for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				printf("%d",mod[i][j][3]);
			}
			printf("\n");
		}*/
		total=5000*(n+m);
		flag=0;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				current[i][j]=-1;
				previous[i][j]=-1;
			}
		}
		//printf("%d %d %d %d ",sx,sy,gx,gy);
		for(steps=1;steps<=total;steps++)
		{
			//printf("a");
			if(steps==1)
			{
				if(mod[sx-1][sy][1])
				previous[sx-1][sy]=1;
				if(mod[sx][sy+1][1])
				previous[sx][sy+1]=1;
				if(mod[sx+1][sy][1])
				previous[sx][sy+1]=1;
				if(mod[sx][sy-1][1])
				previous[sx][sy-1]=1;
				if(previous[gx][gy]==1)
				{
					flag=1;
					break;
				}
			}
			else
			{
				for(i=1;i<=n;i++)
				{
					for(j=1;j<=m;j++)
					{
						current[i][j]=-1;
					}
				}
				flag1=0;
				for(i=1;i<=n;i++)
				{
					for(j=1;j<=m;j++)
					{
						if(previous[i][j]==(steps-1))
						{
							flag1=1;
							val=steps%4;
							if(mod[i-1][j][val])
							current[i-1][j]=steps;
							if(mod[i][j+1][val])
							current[i][j+1]=steps;
							if(mod[i+1][j][val])
							current[i+1][j]=steps;
							if(mod[i][j-1][val])
							current[i][j-1]=steps;
						}
					}
				}
				/*for(i=1;i<=n;i++)
				{
					for(j=1;j<=m;j++)
					{
						printf("%d ",current[i][j]);
					}
					printf("\n");
				}
				printf("\n");*/
				if(current[gx][gy]==steps)
				{
					flag=1;
					break;
				}
				else
				{
					for(i=1;i<=n;i++)
					{
						for(j=1;j<=m;j++)
						{
							previous[i][j]=current[i][j];
						}
					}
				}
				if(flag1==0)
				break;
			}
		}
		printf("Case #%d: ",tt);
		if(flag)
		printf("%d\n",steps);
		else
		printf("impossible\n");
	}
	return 0;
}
