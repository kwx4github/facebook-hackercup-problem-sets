#include <bits/stdc++.h>
using namespace std;
#define y1 orz

#define maxn 111

const char dc[]={'<','>','^','v'};
const char cha[]={'^','v','>','<'};

int tc=0,T,n,m,i,j,qb,qe,x,y,xx,yy,ss,x1,y1,x2,y2;
char s[maxn][maxn];
int sh[maxn][maxn][4],L[maxn][maxn],R[maxn][maxn],U[maxn][maxn],D[maxn][maxn];

struct sta{
    int x,y,s;
}q[maxn*maxn+444],cs;

bool Tu(char c){
    for(int i=0;i<4;++i)
        if(dc[i]==c)return 1;
    return 0;
}

int GT(char c){
    for(int i=0;i<4;++i)
        if(dc[i]==c)return i;
    return -1;
}
    
bool trouble(char forbidden,char cur,int timer){
    if(timer==0)return 0;
    if(cur=='?')return 0;
    for(int i=0;i<(timer%4);++i)
        cur=cha[GT(cur)];
    return(cur==forbidden);
}

bool death(int x,int y,int timer){
    char cup=(U[y][x-1]?s[U[y][x-1]][y]:'?');
    char cdown=(D[y][x+1]?s[D[y][x+1]][y]:'?');
    char cleft=(L[x][y-1]?s[x][L[x][y-1]]:'?');
    char cright=(R[x][y+1]?s[x][R[x][y+1]]:'?');
//    if(tc==2)cout<<cup<<cdown<<cleft<<cright<<"\n";
    bool ok=1;
    ok&=(!trouble('v',cup,timer));
    ok&=(!trouble('^',cdown,timer));
    ok&=(!trouble('>',cleft,timer));
    ok&=(!trouble('<',cright,timer));
    return (!ok);
}

int getsh(int x,int y){
    int R=(int)1e9-5;
    for(int i=0;i<4;++i)R=min(R,sh[x][y][i]);
        return R;
}

void Try(sta S){
    int x=S.x,y=S.y,ss=S.s;
    if(x<1||x>n||y<1||y>m)return;
    if(s[x][y]=='#'||Tu(s[x][y]))return;
    if(death(x,y,ss))return;
    if(ss>=sh[x][y][ss%4])return;
   // cout<<x<<" "<<y<<" "<<ss<<"\n";
    sh[x][y][ss%4]=ss;
    q[++qe]=S;
}

int main(){
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d",&T);while(T--){
        scanf("%d%d",&n,&m);
        for(i=1;i<=n;++i)scanf("%s",s[i]+1);
        memset(L,0,sizeof L),memset(R,0,sizeof R);
        memset(U,0,sizeof U),memset(D,0,sizeof D);
        for(i=1;i<=n;++i){
            for(j=1;j<=m;++j){
                L[i][j]=(Tu(s[i][j])?j:L[i][j-1]);
                if(s[i][j]=='#')L[i][j]=0;
            }
            for(j=m;j>=1;--j){
                R[i][j]=(Tu(s[i][j])?j:R[i][j+1]);
                if(s[i][j]=='#')R[i][j]=0;
            }
        }
        for(j=1;j<=m;++j){
            for(i=1;i<=n;++i){
                U[j][i]=(Tu(s[i][j])?i:U[j][i-1]);
                if(s[i][j]=='#')U[j][i]=0;
            }
            for(i=n;i>=1;--i){
                D[j][i]=(Tu(s[i][j])?i:D[j][i+1]);
                if(s[i][j]=='#')D[j][i]=0;
            }
        }
      //  cout<<trouble('v','^',2)<<"\n";
 //       cout<<trouble('<','<',1)<<"\n";
 //       cout<<trouble('<','<',2)<<"\n";
 //       cout<<trouble('<','<',3)<<"\n";
 //       cout<<trouble('<','<',4)<<"\n";
        for(i=1;i<=n;++i)for(j=1;j<=m;++j){
            if(s[i][j]=='S')x1=i,y1=j;
            if(s[i][j]=='G')x2=i,y2=j;
        }
        for(i=1;i<=n;++i)for(j=1;j<=m;++j)sh[i][j][0]=sh[i][j][1]=sh[i][j][2]=sh[i][j][3]=(int)1e9-5;
        qb=1,qe=0;
        Try((sta){x1,y1,0});
        while(qb<=qe){
            cs=q[qb++];
            xx=cs.x,yy=cs.y,ss=cs.s;
            Try((sta){xx-1,yy,ss+1});
            Try((sta){xx+1,yy,ss+1});
            Try((sta){xx,yy-1,ss+1});
            Try((sta){xx,yy+1,ss+1});
        }
        ++tc;
       cout <<"Case #" << tc << ": ";
    //    cout<<x2<<" "<<y2<<"\n";
        if(getsh(x2,y2)==(int)1e9-5)puts("impossible");else
                                printf("%d\n",getsh(x2,y2));
      //  cout<<getsh(x2,y2)<<"\n";
    }
    return 0;   
}