#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<cstring>

#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORD(i, a, b) for(int i = (a); i >= (b); --i)
#define VAR(v, i) __typeof(i) v=(i)
#define FORE(i, c) for(VAR(i, (c).begin()); i != (c).end(); ++i)
#define all(v) (v).begin(),(v).end()

#define VI vector<int>
#define PII pair<int,int>
#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define lint long long int

#define debug(x) {cerr <<#x <<" = " <<x <<endl; }
#define debug2(x,y) {cerr <<#x <<" = " <<x << ", "<<#y<<" = "<< y <<endl; } 
#define debug3(x,y,z) {cerr <<#x <<" = " <<x << ", "<<#y<<" = "<< y << ", " << #z << " = " << z <<endl; } 
#define debugv(x) {{cerr <<#x <<" = "; FORE(itt, (x)) cerr <<*itt <<", "; cerr <<endl; }}
#define debugt(t,n) {{cerr <<#t <<" = "; FOR(it,0,(n)) cerr <<t[it] <<", "; cerr <<endl; }}

#define make( x) int (x); scanf("%d",&(x));
#define make2( x, y) int (x), (y); scanf("%d%d",&(x),&(y));
#define make3(x, y, z) int (x), (y), (z); scanf("%d%d%d",&(x),&(y),&(z));
#define make4(x, y, z, t) int (x), (y), (z), (t); scanf("%d%d%d%d",&(x),&(y),&(z),&(t));
#define IOS ios_base::sync_with_stdio(0)
#define HEAP priority_queue

#define read( x) scanf("%d",&(x));
#define read2( x, y) scanf("%d%d",&(x),&(y));
#define read3(x, y, z) scanf("%d%d%d",&(x),&(y),&(z));
#define read4(x, y, z, t) scanf("%d%d%d%d",&(x),&(y),&(z),&(t));

using namespace std;
#define max_n 100005

char s[105][105];
int state[105][105][5];
int dist[105][105][5];

map<char,int> pos;
char ruchy[]={'^','>','v','<'};
int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};
int n,m;


void dfs(int x,int y, int type){
	FOR(i,0,4){
		int tx = x+dx[i], ty = y+dy[i], ttype = (type+1)%4;
		if(tx<0 || tx>=n || ty<0 || ty>=m) continue;
		if(state[tx][ty][ttype]==-1) continue;
		if(dist[tx][ty][ttype]>dist[x][y][type]+1){
			dist[tx][ty][ttype] = dist[x][y][type]+1;
			dfs(tx,ty,ttype);
		}
	}
}

void solve(){
	scanf("%d%d",&n,&m);
	FOR(i,0,n)
		scanf("%s",s[i]);
	
	PII start,meta;

	FOR(i,0,n)
		FOR(j,0,m){
			if(s[i][j]=='S') start = mp(i,j);
			if(s[i][j]=='G') meta = mp(i,j);
			FOR(k,0,5) state[i][j][k] = 0;
		}
	
	FOR(i,0,n) FOR(j,0,m) if(mp(i,j)!=start) state[i][j][4] = -1;	
	
	FOR(i,0,n) FOR(j,0,m) 
		if(s[i][j]!='.' && mp(i,j)!=start && mp(i,j)!=meta)
			FOR(k,0,4) state[i][j][k] = -1;

	FOR(i,0,n)
		FOR(j,0,m)
			FOR(k,0,4)
				if(s[i][j]==ruchy[k]){
					int x = i, y = j;
					int nr = k;
					FOR(sh,0,4){
						while(1){
							state[x][y][sh] = -1;
							x+=dx[nr]; y+=dy[nr];
							if(x<0 || x>=n || y<0 || y>=m) break;
							if(s[x][y]!='.' && s[x][y]!='S' && s[x][y]!='G') break;
						}
						x = i; y = j; nr = (nr+1)%4;
					}
				}

	FOR(i,0,n) FOR(j,0,m) FOR(k,0,5) dist[i][j][k] = 1e9;
	dist[start.st][start.nd][4] = 0;	
	dfs(start.st,start.nd,4);
	
	int ans = 1e9;
	FOR(i,0,4) if(state[meta.st][meta.nd][i]==0) ans = min(ans,dist[meta.st][meta.nd][i]);
	if(ans>=1e9) printf("impossible\n");
	else printf("%d\n",ans);
}


int main(){
	FOR(i,0,4) pos[ruchy[i]] = i;
	make(t);
	FOR(tt,1,t+1){
		printf("Case #%d: ",tt);
		solve();
	}
}


