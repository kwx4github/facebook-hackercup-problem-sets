#include <stdio.h>
#include <queue>
#define FOR(i,n,m) for (int i=(n);i<=(m);i++)
#define INF 2147483647
FILE *in=fopen("input.txt","r"),*out=fopen("output.txt","w");
//FILE *in=stdin,*out=stdout;
int n,m;
char a[105][105];
int block[4][105][105];
int di[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
int sx,sy,ex,ey;
int dy[4][105][105];
struct LIST{
	int x,y,cnt;
};
void input(){
	fscanf(in,"%d %d",&n,&m);

	FOR (k,0,4) FOR (i,1,n) FOR (j,1,m) block[k][i][j]=dy[k][i][j]=0;

	FOR (i,1,n) fscanf(in,"%s",&a[i][1]);
	for (int k=0;k<4;k++){
		FOR (i,1,n) FOR (j,1,m){
			if (a[i][j]=='#') block[k][i][j]=1;
			int dir=5;
			if (a[i][j]=='>') dir=0;
			if (a[i][j]=='v') dir=1;
			if (a[i][j]=='<') dir=2;
			if (a[i][j]=='^') dir=3;
			if (a[i][j]=='S') sx=i,sy=j;
			if (a[i][j]=='G') ex=i,ey=j;
			if (dir==5) continue;
			dir=(dir+k)%4;
			for (int X=i,Y=j;X>=1 && X<=n && Y>=1 && Y<=m;X+=di[dir][0],Y+=di[dir][1]){
				if (a[X][Y]=='#') break;
				block[k][X][Y]=1;
			}

		}
	}
}
void pro(){
	FOR (k,0,4) FOR (i,1,n) FOR (j,1,m) dy[k][i][j]=INF;

	std::queue<LIST>Q;
	LIST imsi,imsi2;
	imsi.cnt=0; imsi.x=sx; imsi.y=sy;
	dy[0][sx][sy]=0;
	Q.push(imsi);
	while (!Q.empty()){
		imsi=Q.front(); Q.pop();
		for (int k=0;k<4;k++){
			int X=imsi.x+di[k][0];
			int Y=imsi.y+di[k][1];
			int type=(imsi.cnt+1)%4;
			if (X<=0 || Y<=0 || X>n || Y>m) continue;
			if (block[type][X][Y]) continue;
			if (dy[type][X][Y]!=INF) continue;
			imsi2.x=X;
			imsi2.y=Y;
			imsi2.cnt=imsi.cnt+1;
			dy[type][X][Y]=imsi2.cnt;
			Q.push(imsi2);
		}
	}
	int min=INF;
	for (int k=0;k<4;k++) min=min<dy[k][ex][ey]?min:dy[k][ex][ey];
	if (min!=INF) fprintf(out,"%d\n",min);
	else fprintf(out,"impossible\n");
}
int main(){
	int T;
	fscanf(in,"%d",&T);
	for (int TT=1;TT<=T;TT++){
		input();
		fprintf(out,"Case #%d: ",TT);
		pro();
	}
	return 0;
}
