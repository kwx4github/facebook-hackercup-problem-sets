#include<bits/stdc++.h>
using namespace std;
int m,n,a[102][102],vis[102][102][4],sx,sy,ex,ey;
int dx[] = {-1,1,0,0};
int dy[] = {0,0,-1,1};
bool safe(int tx, int ty,int v){
    if(tx< 0 || tx >=m) return 0;
    if(ty< 0 || ty >=n) return 0;
    if(a[tx][ty] > 0) return 0;
    int temp;
    for(int i=tx-1;i>=0;i--){
        if(a[i][ty]){
            if(a[i][ty] > 1){
                temp = (a[i][ty]-2+v)%4;
                if(temp==3) return 0;
            }
            break;
        }
    }
    for(int i=tx+1;i<m;i++){
        if(a[i][ty]){
            if(a[i][ty] > 1){
                temp = (a[i][ty]-2+v)%4;
                if(temp==1) return 0;
            }
            break;
        }
    }
    for(int i=ty-1;i>=0;i--){
        if(a[tx][i]){
            if(a[tx][i] > 1){
                temp = (a[tx][i]-2+v)%4;
                if(temp==2) return 0;
            }
            break;
        }
    }
    for(int i=ty+1;i<n;i++){
        if(a[tx][i]){
            if(a[tx][i] > 1){
                temp = (a[tx][i]-2+v)%4;
                if(temp==0) return 0;
            }
            break;
        }
    }
    return 1;
}

int bfs(){
//    if(!safe(sx,sy,0)) return -1;
    queue<pair<pair<int,int>,pair<int,int> > > q;
    pair<pair<int,int>,pair<int,int> > top;
    q.push(make_pair(make_pair(sx,sy),make_pair(0,0)));
    vis[sx][sy][0] = 1;
    while(!q.empty()){
        top = q.front();
        q.pop();
        int tx = top.first.first, ty = top.first.second;
        int v = top.second.first, d = top.second.second;
        if(tx==ex && ty==ey) return d;
        for(int i=0;i<4;i++){
            if(safe(tx+dx[i],ty+dy[i],(v+1)%4)){
                if(!vis[tx+dx[i]][ty+dy[i]][(v+1)%4]){
                    vis[tx+dx[i]][ty+dy[i]][(v+1)%4] = 1;
                    q.push(make_pair(make_pair(tx+dx[i],ty+dy[i]), make_pair((v+1)%4,d+1)));
                }
            }
        }
    }
        
    return -1;
}
int main(){
    int test;
    char c;
    cin >> test;
    for(int ts=0;ts<test;ts++){
        memset(vis,0,sizeof vis);
        cin >> m >> n;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                cin >> c;
                if(c=='#') a[i][j] = 1;
                else if(c=='<') a[i][j] = 2;
                else if(c=='^') a[i][j] = 3;
                else if(c=='>') a[i][j] = 4;
                else if(c=='v') a[i][j] = 5;
                else {
                    a[i][j] = 0;
                    if(c == 'S') sx = i, sy=j;
                    else if(c == 'G') ex=i, ey=j;
                }
            }
        }
        int ans = bfs();
        cout << "Case #" << ts+1 << ": " ; 
        if(ans == -1) cout << "impossible\n";
        else cout << ans << "\n";
    }
}
