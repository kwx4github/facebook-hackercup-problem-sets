
#include <fstream>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <map>
#include <iostream>
#include <iomanip>
#include <cmath>
using namespace std;

int max(int a,int b){
    return a < b ? b : a;
}
int min(int a,int b){
    return a > b ? b : a;
}

int M,N;
vector<vector<int>> intmaze(1);
vector<vector<int>> intmaze1(1);
vector<vector<int>> intmaze2(1);
vector<vector<int>> intmaze3(1);
vector<vector<int>> intmaze4(1);


int kuhakuhantei(int p,int i,int j,int x,int y){
    if(p%4==0){
        if(intmaze[i][j]==-1 && intmaze1[i][j]==-1){
            return p;
        }else if(intmaze[i][j]==-1 && intmaze1[i][j]==100000){
            if(intmaze3[i][j]==-1){
                if(x+1<M && intmaze2[x+1][y]==-1){
                    return p+2;
                }else if(x-1>=0 && intmaze2[x-1][y]==-1){
                    return p+2;
                }else if(y+1<N && intmaze2[x][y+1]==-1){
                    return p+2;
                }else if(y-1>=0 && intmaze2[x][y-1]==-1){
                    return p+2;
                }
                return 88888;
            }else{
                return 88888;
            }
        }else{
            return -1;
        }
    }else if(p%4==1){
        if(intmaze[i][j]==-1 && intmaze2[i][j]==-1){
            return p;
        }else if(intmaze[i][j]==-1 && intmaze2[i][j]==100000){
            if(intmaze4[i][j]==-1){
                if(x+1<M && intmaze3[x+1][y]==-1){
                    return p+2;
                }else if(x-1>=0 && intmaze3[x-1][y]==-1){
                    return p+2;
                }else if(y+1<N && intmaze3[x][y+1]==-1){
                    return p+2;
                }else if(y-1>=0 && intmaze3[x][y-1]==-1){
                    return p+2;
                }
                return 88888;
            }else{
                return 88888;
            }
        }else{
            return -1;
        }
    }else if(p%4==2){
        if(intmaze[i][j]==-1 && intmaze3[i][j]==-1){
            return p;
        }else if(intmaze[i][j]==-1 && intmaze3[i][j]==100000){
            if(intmaze1[i][j]==-1){
                if(x+1<M && intmaze4[x+1][y]==-1){
                    return p+2;
                }else if(x-1>=0 && intmaze4[x-1][y]==-1){
                    return p+2;
                }else if(y+1<N && intmaze4[x][y+1]==-1){
                    return p+2;
                }else if(y-1>=0 && intmaze4[x][y-1]==-1){
                    return p+2;
                }
                return 88888;
            }else{
                return 88888;
            }
        }else{
            return -1;
        }
    }else if(p%4==3){
        if(intmaze[i][j]==-1 && intmaze4[i][j]==-1){
            return p;
        }else if(intmaze[i][j]==-1 && intmaze4[i][j]==100000){
            if(intmaze2[i][j]==-1){
                if(x+1<M && intmaze1[x+1][y]==-1){
                    return p+2;
                }else if(x-1>=0 && intmaze1[x-1][y]==-1){
                    return p+2;
                }else if(y+1<N && intmaze1[x][y+1]==-1){
                    return p+2;
                }else if(y-1>=0 && intmaze1[x][y-1]==-1){
                    return p+2;
                }
                return 88888;
            }else{
                return 88888;
            }
        }else{
            return -1;
        }
    }else{
        return -1;
    }
}

int golehantei(int p,int i,int j){
    if(p%4==0){
        if(intmaze[i][j]==88888 && intmaze1[i][j]==88888){
            return 1;
        }else{
            return -1;
        }
    }else if(p%4==1){
        if(intmaze[i][j]==88888 && intmaze2[i][j]==88888){
            return 1;
        }else{
            return -1;
        }
    }else if(p%4==2){
        if(intmaze[i][j]==88888 && intmaze3[i][j]==88888){
            return 1;
        }else{
            return -1;
        }
    }else{
        if(intmaze[i][j]==88888 && intmaze4[i][j]==88888){
            return 1;
        }else{
            return -1;
        }
    }
}

int solve(vector<string> maze){
    int ans=0;
    
    intmaze.resize(M);
    intmaze.clear();
    //99999壁
    //88888ゴール
    
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            if(maze[i][j]=='S'){
                intmaze[i].push_back(0);
            }else if(maze[i][j]=='G'){
                intmaze[i].push_back(88888);
            }else if(maze[i][j]=='#'){
                intmaze[i].push_back(99999);
            }else if(maze[i][j]=='v'){
                intmaze[i].push_back(100010);
            }else if(maze[i][j]=='<'){
                intmaze[i].push_back(101000);
            }else if(maze[i][j]=='>'){
                intmaze[i].push_back(100001);
            }else if(maze[i][j]=='^'){
                intmaze[i].push_back(100100);
            }else{
                intmaze[i].push_back(-1);
            }
        }
    }
    
    intmaze1.resize(M);
    intmaze1.clear();
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            intmaze1[i].push_back(intmaze[i][j]);
        }
    }
    
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            if(intmaze1[i][j]==100010){//v
                for(int p=i+1;p<M;p++){
                    if(intmaze1[p][j]==-1 || intmaze1[p][j]==88888 || intmaze1[p][j]==0){
                        intmaze1[p][j]=100000;
                    }else if(intmaze1[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze1[i][j]==101000){//<
                for(int p=j-1;p>=0;p--){
                    if(intmaze1[i][p]==-1 || intmaze1[i][p]==88888 || intmaze1[i][p]==0){
                        intmaze1[i][p]=100000;
                    }else if(intmaze1[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze1[i][j]==100001){//>
                for(int p=j+1;p<N;p++){
                    if(intmaze1[i][p]==-1 || intmaze1[i][p]==88888 || intmaze1[i][p]==0){
                        intmaze1[i][p]=100000;
                    }else if(intmaze1[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze1[i][j]==100100){//^
                for(int p=i-1;p>=0;p--){
                    if(intmaze1[p][j]==-1 || intmaze1[p][j]==88888 || intmaze1[p][j]==0){
                        intmaze1[p][j]=100000;
                    }else if(intmaze1[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }
        }
    }
    //vector<vector<int>> intmaze2(M);
    intmaze2.resize(M);
    intmaze2.clear();
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            intmaze2[i].push_back(intmaze[i][j]);
        }
    }
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            if(intmaze2[i][j]==100001){//v
                for(int p=i+1;p<M;p++){
                    if(intmaze2[p][j]==-1 || intmaze2[p][j]==88888 || intmaze2[p][j]==0){
                        intmaze2[p][j]=100000;
                    }else if(intmaze2[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze2[i][j]==100010){//<
                for(int p=j-1;p>=0;p--){
                    if(intmaze2[i][p]==-1 || intmaze2[i][p]==88888 || intmaze2[i][p]==0){
                        intmaze2[i][p]=100000;
                    }else if(intmaze2[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze2[i][j]==100100){//>
                for(int p=j+1;p<N;p++){
                    if(intmaze2[i][p]==-1 || intmaze2[i][p]==88888 || intmaze2[i][p]==0){
                        intmaze2[i][p]=100000;
                    }else if(intmaze2[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze2[i][j]==101000){//^
                for(int p=i-1;p>=0;p--){
                    if(intmaze2[p][j]==-1 || intmaze2[p][j]==88888 || intmaze2[p][j]==0){
                        intmaze2[p][j]=100000;
                    }else if(intmaze2[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }
        }
    }
    //vector<vector<int>> intmaze3(M);
    intmaze3.resize(M);
    intmaze3.clear();
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            intmaze3[i].push_back(intmaze[i][j]);
        }
    }
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            if(intmaze3[i][j]==100100){//v
                for(int p=i+1;p<M;p++){
                    if(intmaze3[p][j]==-1 || intmaze3[p][j]==88888 || intmaze3[p][j]==0){
                        intmaze3[p][j]=100000;
                    }else if(intmaze3[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze3[i][j]==100001){//<
                for(int p=j-1;p>=0;p--){
                    if(intmaze3[i][p]==-1 || intmaze3[i][p]==88888 || intmaze3[i][p]==0){
                        intmaze3[i][p]=100000;
                    }else if(intmaze3[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze3[i][j]==101000){//>
                for(int p=j+1;p<N;p++){
                    if(intmaze3[i][p]==-1 || intmaze3[i][p]==88888 || intmaze3[i][p]==0){
                        intmaze3[i][p]=100000;
                    }else if(intmaze3[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze3[i][j]==100010){//^
                for(int p=i-1;p>=0;p--){
                    if(intmaze3[p][j]==-1 || intmaze3[p][j]==88888 || intmaze3[p][j]==0){
                        intmaze3[p][j]=100000;
                    }else if(intmaze3[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }
        }
    }
    //vector<vector<int>> intmaze4(M);
    intmaze4.resize(M);
    intmaze4.clear();
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            intmaze4[i].push_back(intmaze[i][j]);
        }
    }
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            if(intmaze4[i][j]==101000){//v
                for(int p=i+1;p<M;p++){
                    if(intmaze4[p][j]==-1 || intmaze4[p][j]==88888 || intmaze4[p][j]==0){
                        intmaze4[p][j]=100000;
                    }else if(intmaze4[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze4[i][j]==100100){//<
                for(int p=j-1;p>=0;p--){
                    if(intmaze4[i][p]==-1 || intmaze4[i][p]==88888 || intmaze4[i][p]==0){
                        intmaze4[i][p]=100000;
                    }else if(intmaze4[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze4[i][j]==100010){//>
                for(int p=j+1;p<N;p++){
                    if(intmaze4[i][p]==-1 || intmaze4[i][p]==88888 || intmaze4[i][p]==0){
                        intmaze4[i][p]=100000;
                    }else if(intmaze4[i][p]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }else if(intmaze4[i][j]==100001){//^
                for(int p=i-1;p>=0;p--){
                    if(intmaze4[p][j]==-1 || intmaze4[p][j]==88888 || intmaze4[p][j]==0){
                        intmaze4[p][j]=100000;
                    }else if(intmaze4[p][j]==100000){
                        ;
                    }else{
                        break;
                    }
                }
            }
        }
    }
    /*for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            std::cout << intmaze1[i][j] << " ";
        }
        std::cout << std::endl;
    }
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            std::cout << intmaze2[i][j] << " ";
        }
        std::cout << std::endl;
    }
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            std::cout << intmaze3[i][j] << " ";
        }
        std::cout << std::endl;
    }
    for(int i=0;i<M;i++){
        for(int j=0;j<N;j++){
            std::cout << intmaze4[i][j] << " ";
        }
        std::cout << std::endl;
    }*/
    
    int p=0;
    while(p<10000){
        for(int i=0;i<M;i++){
            for(int j=0;j<N;j++){
                if(intmaze[i][j]==p){
                    if(i+1<M){
                        if(golehantei(p+1,i+1,j)!=-1){//ゴールなら終ゴールでもビームが来る可能性があるので時刻分割
                            ans=p+1;
                            break;
                        }else if(kuhakuhantei(p+1,i+1,j,i,j)!=-1){
                            intmaze[i+1][j]=kuhakuhantei(p+1,i+1,j,i,j);
                        }
                    }
                    if(i-1>=0){
                        if(golehantei(p+1,i-1,j)!=-1){//ゴールなら終
                            ans=p+1;
                            break;
                        }else if(kuhakuhantei(p+1,i-1,j,i,j)!=-1){
                            intmaze[i-1][j]=kuhakuhantei(p+1,i-1,j,i,j);
                        }
                    }
                    if(j+1<N){
                        if(golehantei(p+1,i,j+1)!=-1){//ゴールなら終
                            ans=p+1;
                            break;
                        }else if(kuhakuhantei(p+1,i,j+1,i,j)!=-1){
                            intmaze[i][j+1]=kuhakuhantei(p+1,i,j+1,i,j);
                        }
                    }
                    if(j-1>=0){
                        if(golehantei(p+1,i,j-1)!=-1){//ゴールなら終
                            ans=p+1;
                            break;
                        }else if(kuhakuhantei(p+1,i,j-1,i,j)!=-1){
                            intmaze[i][j-1]=kuhakuhantei(p+1,i,j-1,i,j);
                        }
                    }
                }
            }
        }
        p++;
        /*for(int i=0;i<M;i++){
            for(int j=0;j<N;j++){
                std::cout << intmaze[i][j] << " ";
            }
            std::cout << std::endl;
        }*/
        if(ans!=0){
            break;
        }
    }

    return ans;
}


int main(int argc, const char * argv[])
{
    
    std::ifstream ifs( "a.txt" );
    
    int T;
    ifs >> T;
    int t=1;
    while(t<=T){

        //int M,N;
        ifs >> M >> N;
        
        vector<string> maze;
        maze.clear();
        for(int i=0;i<M;i++){
            string tmp;
            ifs >> tmp;
            maze.push_back(tmp);
        }
        
        int ret = solve(maze);
        std::cout << "Case #" << t << ": " << ret << std::endl;
        
        t++;
    }
    return 0;
    
}