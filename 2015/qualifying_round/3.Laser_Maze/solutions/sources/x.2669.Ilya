__author__ = 'Ilya Tsimokhin'


def go(field, x, y, dx, dy, n, m):
    while x in range(n) and y in range(m) and field[x][y]:
        field[x][y] = False
        x += dx
        y += dy


def main():
    test = []
    with open("input.txt", "r") as f:
        cases_cnt = int(f.readline())
        for i in range(cases_cnt):
            test.append({})
            tmp = f.readline().split()
            test[i]['n'] = int(tmp[0])
            test[i]['m'] = int(tmp[1])
            test[i]['field'] = []
            for j in range(test[i]['n']):
                test[i]['field'].append(f.readline())
    ans = [False for _ in range(cases_cnt)]
    for case in range(cases_cnt):
        # Data preparing
        n = test[case]['n']
        m = test[case]['m']
        field = [[[True for _ in range(m)] for _ in range(n)] for _ in range(4)]
        for i in range(n):
            for j in range(m):
                if test[case]['field'][i][j] == '#':
                    for k in range(4):
                        field[k][i][j] = False
                elif test[case]['field'][i][j] == 'S':
                    start = (i, j)
                elif test[case]['field'][i][j] == 'G':
                    goal = (i, j)
        for i in range(n):
            for j in range(m):
                if test[case]['field'][i][j] == '^':
                    go(field[0], i, j, -1, 0, n, m)
                    go(field[1], i, j, 0, 1, n, m)
                    go(field[2], i, j, 1, 0, n, m)
                    go(field[3], i, j, 0, -1, n, m)
                elif test[case]['field'][i][j] == '>':
                    go(field[0], i, j, 0, 1, n, m)
                    go(field[1], i, j, 1, 0, n, m)
                    go(field[2], i, j, 0, -1, n, m)
                    go(field[3], i, j, -1, 0, n, m)
                elif test[case]['field'][i][j] == 'v':
                    go(field[0], i, j, 1, 0, n, m)
                    go(field[1], i, j, 0, -1, n, m)
                    go(field[2], i, j, -1, 0, n, m)
                    go(field[3], i, j, 0, 1, n, m)
                elif test[case]['field'][i][j] == '<':
                    go(field[0], i, j, 0, -1, n, m)
                    go(field[1], i, j, -1, 0, n, m)
                    go(field[2], i, j, 0, 1, n, m)
                    go(field[3], i, j, 1, 0, n, m)
        # Calculation
        visited = [[[False for _ in range(m)] for _ in range(n)] for _ in range(4)]
        Q = [(start[0], start[1], 0, 0)]
        qBeg = 0
        steps = [(0, 1), (0, -1), (1, 0), (-1, 0)]
        while qBeg < len(Q):
            for step in steps:
                next = (Q[qBeg][0] + step[0], Q[qBeg][1] + step[1], (Q[qBeg][2] + 1) % 4, Q[qBeg][3] + 1)
                if next[0] in range(n) and next[1] in range(m) and field[next[2]][next[0]][next[1]] and not \
                visited[next[2]][next[0]][next[1]]:
                    visited[next[2]][next[0]][next[1]] = True
                    Q.append(next)
                    if next[0] == goal[0] and next[1] == goal[1]:
                        ans[case] = next[3]
                        qBeg = len(Q) + 5
                        break
            qBeg += 1
    with open("output.txt", "w") as f:
        first_line = True
        for i, item in enumerate(ans):
            if not first_line:
                f.write('\n')
            first_line = False
            f.write("Case #" + str(i + 1) + ": ")
            if not item:
                f.write("impossible")
            else:
                f.write(str(item))
    print ans


if __name__ == "__main__":
    main()