#include <iostream>
#include <string.h>
#include <algorithm>
#include <stdio.h>
#include <string>
#include <queue>
using namespace std;
int inf;
char mp[110][110];
int Mp[4][110][110],dist[4][110][110];
int n,m,sx,sy,tx,ty;
int dir[4][2]={1,0,0,1,-1,0,0,-1};
int Dir[255];
int check(int x,int y)
{
    if(x<1||y<1||x>n||y>m||mp[x][y]!='.')return false;
    return true;
}
void goforward(int x,int y,int t,int d)
{
    do
    {
        Mp[t][x][y]=1;
        x+=dir[d][0];
        y+=dir[d][1];
    }while(check(x,y));
}
void init()
{
    Dir['v']=0;
    Dir['>']=1;
    Dir['^']=2;
    Dir['<']=3;
    memset(Mp,0,sizeof(Mp));
    memset(dist,1,sizeof(dist));
    inf=dist[0][0][0];
    for(int k=0;k<4;k++)
    {
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(mp[i][j]=='#')
                Mp[k][i][j]=1;
                else if(mp[i][j]=='.')
                continue;
                else{
                    goforward(i,j,k,(Dir[mp[i][j]]+3*k)%4);
                }
            }
        }
    }
}
struct node{
    int x,y,id;
    node(){}
    node(int a,int b,int c){
        x=a,y=b,id=c;
    }
};
void bfs()
{
    queue<node> q;
    q.push(node(sx,sy,0));
    dist[0][sx][sy]=0;
    while(!q.empty())
    {
        node now=q.front();
        q.pop();
        int x=now.x,y=now.y,id=(now.id+1)%4;
        if(x==tx&&y==ty)
        {
            printf("%d\n",dist[now.id][x][y]);
            return;
        }
        for(int i=0;i<4;i++)
        {
            int xx=x+dir[i][0],yy=y+dir[i][1];
            if(check(xx,yy))
            {
                if(dist[id][xx][yy]==inf&&Mp[id][xx][yy]==0)
                {
                    dist[id][xx][yy]=dist[now.id][x][y]+1;
                    q.push(node(xx,yy,id));
                }
            }
        }
    }
    printf("impossible\n");
}
int main()
{
    freopen("dd.txt","r",stdin);
    freopen("out.txt","w+",stdout);
    int ncase,T=0;
    scanf("%d",&ncase);
    while(ncase--)
    {
       printf("Case #%d: ",++T);
       scanf("%d%d",&n,&m);
       for(int i=1;i<=n;i++)
       {
           scanf("%s",mp[i]+1);
       }
       for(int i=1;i<=n;i++)
       {
           for(int j=1;j<=m;j++)
           {
               if(mp[i][j]=='S')
               sx=i,sy=j,mp[i][j]='.';
               if(mp[i][j]=='G')
               tx=i,ty=j,mp[i][j]='.';
           }
       }
       init();
       /*for(int k=0;k<4;k++)
       {
           for(int i=1;i<=n;i++)
           {
               for(int j=1;j<=m;j++)
               {
                   printf("%d",Mp[k][i][j]);
               }
               printf("\n");
           }
           printf("\n");
       }*/
       bfs();
    }
    return 0;
}
