tests = int(raw_input().strip())
for test in xrange(tests):
    m, n = tuple(map(int, raw_input().strip().split()))
    s = []
    for i in xrange(m):
        s.append(raw_input().strip())

    p = [[[True for k in xrange(4)] for j in xrange(n)] for i in xrange(m)]
    di = {'<': 0, '^': 1, '>': 2, 'v': 3}
    mo = [(0, -1), (-1, 0), (0, 1), (1, 0)]

    for k in xrange(4):
        for i in xrange(m):
            for j in xrange(n):
                if s[i][j] == '#':
                    p[i][j][k] = False
                elif s[i][j] in di:
                    d = mo[(di[s[i][j]] + k) % 4]
                    inew = i
                    jnew = j
                    while 0 <= inew < m and 0 <= jnew < n and s[inew][jnew] != '#':
                        p[inew][jnew][k] = False
                        inew, jnew = inew + d[0], jnew + d[1]

    v = [[[float('inf') for k in xrange(4)] for j in xrange(n)] for i in xrange(m)]
    q = []
    qhead = 0
    for i in xrange(m):
        for j in xrange(n):
            if s[i][j] == 'S':
                v[i][j][0] = 0
                q.append((i, j, 0))

    ans = float('inf')
    while qhead < len(q):
        i, j, k = q[qhead]
        qhead += 1
        if s[i][j] == 'G':
            ans = v[i][j][k]
            break
        for d in mo:
            inew, jnew, knew = d[0] + i, d[1] + j, (k + 1) % 4
            if 0 <= inew < m and 0 <= jnew < n:
                if v[inew][jnew][knew] == float('inf') and p[inew][jnew][knew]:
                    v[inew][jnew][knew] = v[i][j][k] + 1
                    q.append((inew, jnew, knew))

    if ans == float('inf'):
        ans = 'impossible'
    print 'Case #' + str(test + 1) + ':', ans
