#include <stdlib.h>
#include <cstdio>
#include <cstring>
#include <string>
#include <iostream>
using namespace std;
int n, m;
string map[4][103];
int f[4][104][104];
int z[4 * 100 * 100 + 100][3];
const int dir[4][2] = {0, 1, 1, 0, -1, 0, 0, -1};

bool check(int k, int i, int j) {
    if (i < 0 || i >= n || j < 0 || j >= m) {
        return false;
    }
    if (map[k][i][j] == '.') return true;
    return false;
}

int formatmap(int k) {
    int dirx, diry;
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < m; ++j) {
            if (map[k][i][j] == '^') {
                dirx = -1; diry = 0;
            } else if (map[k][i][j] == '>') {
                dirx = 0; diry = 1;
            } else if (map[k][i][j] == 'v') {
                dirx = 1; diry = 0;
            } else if (map[k][i][j] == '<'){
                dirx = 0; diry = -1;
            } else {
                continue;
            }
            map[k][i][j] = '#';
            for (int l = 0; l < n + m; l++){
                if (check(k, i + dirx * l, j + diry * l)) {
                    map[k][i + dirx * l][j + diry *l] = '#';
                }
            }
        }
    return 0;
}

int main() {
    int testcase;
    cin >> testcase;
    int stx, sty, edx, edy;
    for (int tt = 1; tt <= testcase; ++tt) {
        cin >> n >> m;
        for (int i = 0; i < n; ++i)
            cin >> map[0][i];
        for (int i = 0; i < n; ++i)
            for (int j = 0; j < m; ++j) 
            if (map[0][i][j] == 'S') {
                stx = i; sty = j;
                map[0][i][j] = '.';
            } else if (map[0][i][j] == 'G') {
                edx = i; edy = j;
                map[0][i][j] = '.';
            }
        for (int k = 0; k < 3; ++k) {
            for (int i = 0; i < n; ++i) {
                map[k + 1][i] = map[k][i];
                for (int j = 0; j < m; ++j) 
                switch (map[k][i][j]) {
                    case '^': map[k + 1][i][j] = '>'; break;
                    case '>': map[k + 1][i][j] = 'v'; break;
                    case 'v': map[k + 1][i][j] = '<'; break;
                    case '<': map[k + 1][i][j] = '^'; break;
                    default: map[k + 1][i][j] = map[k][i][j];
                }
            }
            formatmap(k);
        }
        formatmap(3);
        for (int i = 0; i < 4; ++i)
            for (int j = 0; j < n; ++j) 
                for (int k = 0; k < m; ++k)
                f[i][j][k] = 10000000;
        f[0][stx][sty] = 0;
        z[0][0] = 0; z[0][1] = stx; z[0][2] = sty;
        int h = 0, t = 1;
        while (h < t) {
            int k = z[h][0], x = z[h][1], y = z[h][2];
            for (int i = 0; i < 4; ++i) {
                if (check((k + 1)%4, x + dir[i][0], y + dir[i][1])) {
                    if (f[k][x][y] + 1 < f[(k + 1)%4][x + dir[i][0]][y + dir[i][1]]) {
                        f[(k + 1)%4][x + dir[i][0]][y + dir[i][1]] = f[k][x][y] + 1;
                        z[t][0] = (k + 1) % 4; z[t][1] = x + dir[i][0]; z[t][2] = y + dir[i][1];
                        ++t;
                    }
                }
            }
            h++;
        }
        int min = 10000000;
        for (int i = 0; i < 4; ++i) {
            if (f[i][edx][edy] < min) min = f[i][edx][edy];
        }
        if (min == 10000000) {
            cout << "Case #" << tt << ": impossible" << endl;
        } else {
            cout << "Case #" << tt << ": " << min << endl;
        }
    }
}

