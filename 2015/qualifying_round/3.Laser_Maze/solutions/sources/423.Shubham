#include<bits/stdc++.h>
#define MAX 99999999
using namespace std;

ofstream out("oo.txt");
ifstream in("in.txt");
int M,N;
int isValid(char arr[][110], int x, int y, int count)
{
	if(arr[x][y] == '#' || arr[x][y] == '^' || arr[x][y] == '>' || arr[x][y] == 'v' || arr[x][y] == '<')
	{
		return 0;
	}	
	else
	{
		int flag = 0;
		char a,b,c,d;
		
		if(count%4 == 0)
		{a = 'v';b = '^';c = '>';d = '<';}
		else if(count%4 == 1)
		{a = '>';b = '^';c = 'v';d = '<';}
		else if(count%4 == 2)
		{a = '^';b = 'v';c = '>';d = '<';}
		else if(count%4 == 3)
		{a = '<';b = '^';c = '>';d = 'v';}
			
		for(int i=x-1;i>=0;i--)
		{
			if(arr[i][y] == a)
			{
				flag = 1;
				break;
			}
			if(arr[i][y] == '#' ||arr[i][y] == b || arr[i][y] == c || arr[i][y] == d)
			{
				break;
			}
		}
			
			
		if(count%4 == 0)
		{a = '>';b = '^';c = 'v';d = '<';}
		else if(count%4 == 1)
		{a = '^';b = '>';c = 'v';d = '<';}
		else if(count%4 == 2)
		{a = '<';b = 'v';c = '>';d = '^';}
		else if(count%4 == 3)
		{a = 'v';b = '^';c = '>';d = '<';}
			
		for(int i=y-1;i>=0;i--)
		{
			if(arr[x][i] == a)
			{
				flag = 1;
				break;
			}
			if(arr[x][i] == '#' ||arr[x][i] == b || arr[x][i] == c || arr[x][i] == d)
			{
				break;
			}
		}
			
			
		if(count%4 == 0)
		{a = '^';b = 'v';c = '>';d = '<';}
		else if(count%4 == 1)
		{a = '<';b = '^';c = 'v';d = '>';}
		else if(count%4 == 2)
		{a = 'v';b = '^';c = '>';d = '<';}
		else if(count%4 == 3)
		{a = '>';b = '^';c = '<';d = 'v';}
			
		for(int i=x+1;i<M;i++)
		{
			if(arr[i][y] == a)
			{
				flag = 1;
				break;
			}
			if(arr[i][y] == '#' ||arr[i][y] == b || arr[i][y] == c || arr[i][y] == d)
			{
				break;
			}
		}
			
		if(count%4 == 0)
		{a = '<';b = '^';c = '>';d = 'v';}
		else if(count%4 == 1)
		{a = 'v';b = '^';c = '>';d = '<';}
		else if(count%4 == 2)
		{a = '>';b = 'v';c = '^';d = '<';}
		else if(count%4 == 3)
		{a = '^';b = '<';c = '>';d = 'v';}
			
		for(int i=y+1;i<N;i++)
		{
			if(arr[x][i] == a)
			{
				flag = 1;
				break;
			}
			if(arr[x][i] == '#' ||arr[x][i] == b || arr[x][i] == c || arr[x][i] == d)
			{
				break;
			}
		}
		if(flag)
		return 0;
		else return 1;
	}	
}

int check[110][110][4];
int soln[110][110][4];
struct pos
{
	int x;
	int y;
	int count;
	int mov;
};


void func(char arr[][110], int x, int y)
{
	pos s;
	s.x = x;
	s.y = y;
	s.count = s.mov = 0;
	queue<pos> myqueue;
	myqueue.push(s);
	int mov = 0;
	soln[x][y][0] = 0;
	int k = 0;
	while(!myqueue.empty())
	{
		k++;
		//out<<"hi"<<endl;
		pos temp = myqueue.front();
		//out<<"x :"<<temp.x<<" y: "<<temp.y<<" "<<temp.count<<endl;
		myqueue.pop();
		int mov = temp.mov + 1;
		int count = (temp.count + 1)%4;
		//out<<"Pushed"<<endl;
		if(temp.x - 1 >= 0 && check[temp.x-1][temp.y][count] && soln[temp.x-1][temp.y][count] == MAX)
		{
			
			pos temp2;
			temp2.x = temp.x - 1;
			temp2.y = temp.y;
			temp2.count = count;
			temp2.mov = mov;
			myqueue.push(temp2);
			soln[temp2.x][temp2.y][count] = mov;
			//out<<temp2.x<<" "<<temp2.y<<endl;
			//out<<"countpp : "<<temp2.count<<endl;
		}
		
		if(temp.y - 1 >= 0 && check[temp.x][temp.y-1][count] && soln[temp.x][temp.y - 1][count] == MAX)
		{
			pos temp2;
			temp2.x = temp.x ;
			temp2.y = temp.y - 1;
			temp2.count = count;
			temp2.mov = mov;
			myqueue.push(temp2);
			soln[temp2.x][temp2.y][count] = mov;
			//out<<temp2.x<<" "<<temp2.y<<endl;
			//out<<"countpp : "<<temp2.count<<endl;
		}
		
		if(temp.y + 1 < N && check[temp.x][temp.y+1][count] && soln[temp.x][temp.y +1][count] == MAX)
		{
			pos temp2;
			temp2.x = temp.x ;
			temp2.y = temp.y + 1;
			temp2.count = count;
			temp2.mov = mov;
			myqueue.push(temp2);
			soln[temp2.x][temp2.y][count] = mov;
			//out<<temp2.x<<" "<<temp2.y<<endl;
			//out<<"countpp : "<<temp2.count<<endl;
		}
		
		if(temp.x + 1 < M && check[temp.x + 1][temp.y][count] && soln[temp.x + 1][temp.y][count] == MAX)
		{
			pos temp2;
			temp2.x = temp.x+1;
			temp2.y = temp.y ;
			temp2.count = count;
			temp2.mov = mov;
			myqueue.push(temp2);
			
			
			soln[temp2.x][temp2.y][count] = mov;
			//out<<temp2.x<<" "<<temp2.y<<endl;
			//out<<"countpp : "<<temp2.count<<endl;
		}
		//out<<"Hello"<<endl;
	}
}

int main()
{
	int t;
	in>>t;
	int k = 0;
	while(t--)
	{
		k++;
		out<<"Case #"<<k<<": ";
		in>>M>>N;
		char arr[110][110];
		int x,x1,y,y1;
		for(int i=0;i<M;i++)
		{
			for(int j=0;j<N;j++)
			{
				in>>arr[i][j];
				if(arr[i][j] == 'S')
				{
					x = i;
					y = j;
				}
				if(arr[i][j] == 'G')
				{
					x1 = i;
					y1 = j;
				}
			}
		}
		for(int i=0;i<M;i++)
		{
			for(int j=0;j<N;j++)
			{
				for(int k=0;k<4;k++)
				{
					check[i][j][k] = isValid(arr,i,j,k);
					soln[i][j][k] = MAX;
				}
			}
		}
		func(arr,x,y);
		
		/*for(int i=0;i<M;i++)
		{
			for(int j=0;j<N;j++)
			{
				out<<soln[i][j][0]<<" ";
			}
			out<<endl;
		}
		
		out<<endl;
		
		for(int i=0;i<M;i++)
		{
			for(int j=0;j<N;j++)
			{
				out<<soln[i][j][1]<<" ";
			}
			out<<endl;
		}
		
		out<<endl;
		
		for(int i=0;i<M;i++)
		{
			for(int j=0;j<N;j++)
			{
				out<<soln[i][j][2]<<" ";
			}
			out<<endl;
		}
		
		out<<endl;
		
		for(int i=0;i<M;i++)
		{
			for(int j=0;j<N;j++)
			{
				out<<soln[i][j][3]<<" ";
			}
			out<<endl;
		}*/
		int ans = min(min(soln[x1][y1][0],soln[x1][y1][1]),min(soln[x1][y1][2],soln[x1][y1][3]));
		if(ans == MAX)
		out<<"impossible"<<endl;
		else
		out<<ans<<endl;
		cout<<"Done"<<endl;
	}
	cout<<"ALl DONE"<<endl;
	cin>>t;
	return 0;
}
