#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>
#define N 107
using namespace std;
bool grid[4][N][N];
char mp[N][N];
const int dx[]={0,1,0,-1};
const int dy[]={1,0,-1,0};
int r,c;
void init()
{
    memset(grid,1,sizeof grid);
    for (int t=0;t<4;++t)
    {
        for (int i=0;i<r;++i)
            for (int j=0;j<c;++j)
            {
                if (mp[i][j]=='#')
                    grid[t][i][j]=false;
                int d=-1;
                if (mp[i][j]=='>') d=0;
                if (mp[i][j]=='v') d=1;
                if (mp[i][j]=='<') d=2;
                if (mp[i][j]=='^') d=3;
                if (d>=0)
                {
                    d=(d+t)%4;
                    int x=i,y=j;
                    do
                    {
                        grid[t][x][y]=false;
                        //printf("%d %d %d\n",t,x,y);
                        x+=dx[d];
                        y+=dy[d];
                    }
                    while (0<=x&&x<r&&0<=y&&y<c&&(mp[x][y]=='.'
                           ||mp[x][y]=='G'||mp[x][y]=='S'));
                }
            }
    }
}
struct info
{
    int x,y,s;
};
int bfs()
{
    int edX,edY;
    info a;
    for (int i=0;i<r;++i)
        for (int j=0;j<c;++j)
            if (mp[i][j]=='S')
                a.x=i,a.y=j;
            else if (mp[i][j]=='G')
                edX=i,edY=j;
    queue<info> q;
    a.s=0;
    q.push(a);
    while (!q.empty())
    {
        int x=q.front().x,y=q.front().y,s=q.front().s,x1,y1,s1;
        //printf("--%d %d %d\n",x,y,s);
        if (x==edX&&y==edY) return s;
        q.pop();
        for (int i=0;i<4;++i)
        {
            x1=x+dx[i];
            y1=y+dy[i];
            if (x1<0||x1>=r||y1<0||y1>=c) continue;
            s1=(s+1)%4;
            if (grid[s1][x1][y1])
            {
                a.x=x1;
                a.y=y1;
                a.s=s+1;
                grid[s1][x1][y1]=false;
                q.push(a);
            }
        }
    }
    return 0;
}
int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int cas,run=0;
    scanf("%d",&cas);
    while (cas--)
    {

        scanf("%d%d",&r,&c);
        for (int i=0;i<r;++i)
            scanf("%s",mp[i]);
        init();
        int ans=bfs();
        if (ans>0)
            printf("Case #%d: %d\n",++run,ans);
        else
            printf("Case #%d: impossible\n",++run);
    }
    return 0;
}
