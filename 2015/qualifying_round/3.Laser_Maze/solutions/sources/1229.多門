#include<iostream>
#include<cstring>
#include<queue>
#define endl '\n'
using namespace std;
typedef long long ll;
struct P{int k,i,j;};
int n,m;
string og[110];
bool g[4][110][110];
int dis[4][110][110];
int si,sj,gi,gj;
void shoot(int k,int i,int j,int mvi,int mvj)
{
	i+=mvi; j+=mvj;
	while(i<n && j<m && i>=0 && j>=0 && og[i][j]=='.')
	{
		g[k][i][j]=1;
		i+=mvi; j+=mvj;
	}
}
inline bool check(int k,int i,int j)
{
	return i<n && j<m && i>=0 && j>=0 && g[k][i][j]==0 && dis[k][i][j]==-1;
}
int bfs()
{
	queue<P> q;
	q.push({0,si,sj});
	memset(dis,-1,sizeof dis);
	dis[0][si][sj]=0;
	while(!q.empty())
	{
		int k=q.front().k, i=q.front().i, j=q.front().j;
		q.pop();
		int nk=(k+1)%4;
		vector<P> v;
		if(check(nk,i-1,j))
			v.push_back({nk,i-1,j});
		if(check(nk,i,j+1))
			v.push_back({nk,i,j+1});
		if(check(nk,i+1,j))
			v.push_back({nk,i+1,j});
		if(check(nk,i,j-1))
			v.push_back({nk,i,j-1});
		for(P &t:v)
		{
			dis[t.k][t.i][t.j]=dis[k][i][j]+1;
			if(t.i==gi && t.j==gj)
				return dis[t.k][t.i][t.j];
			q.push(t);
		}
	}
	return -1;
}
int main()
{
	ios::sync_with_stdio(0);
	//cin.tie(0);
	
	int T;
	cin>>T;
	for(int no=1;no<=T;no++)
	{
		cin>>n>>m;
		for(int i=0;i<n;i++)
		{
			cin>>og[i];
			for(int j=0;j<m;j++)
				if(og[i][j]=='S')
					si=i, sj=j, og[i][j]='.';
				else if(og[i][j]=='G')
					gi=i, gj=j, og[i][j]='.';
		}
		memset(g,0,sizeof g);
		for(int k=0;k<4;k++)
			for(int i=0;i<n;i++)
				for(int j=0;j<m;j++)
				{
					if(og[i][j]=='#')
						g[k][i][j]=1;
					else if(og[i][j]!='.')
					{
						g[k][i][j]=1;
						int urdl;
						if(og[i][j]=='^')
							urdl=0;
						else if(og[i][j]=='>')
							urdl=1;
						else if(og[i][j]=='v')
							urdl=2;
						else if(og[i][j]=='<')
							urdl=3;
						urdl+=k, urdl%=4;
						if(urdl==0)
							shoot(k,i,j,-1,0);
						else if(urdl==1)
							shoot(k,i,j,0,1);
						else if(urdl==2)
							shoot(k,i,j,1,0);
						else if(urdl==3)
							shoot(k,i,j,0,-1);
					}
				}
		
		//debug
//		for(int k=0;k<4;k++)
//		{
//			for(int i=0;i<n;i++)
//				for(int j=0;j<m;j++)
//					cout<<g[k][i][j]<<" \n"[j==m-1];
//			cout<<endl;
//		}
		
		int ans=bfs();
		if(ans!=-1)
			cout<<"Case #"<<no<<": "<<ans<<'\n';
		else
			cout<<"Case #"<<no<<": impossible\n";
	}
}

