
// Author : Vivek Hamirwasia (viv001)
#include<bits/stdc++.h>
using namespace std;

#define CLR(a,x) memset(a,x,sizeof(a))
#define PB push_back
#define INF 1000000000
#define MOD 1000000007
#define LET(x,a) __typeof(a) x(a)
#define MP make_pair
#define tr(container , it) for(LET(it,container.begin) ; it!=container.end() ; it++)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) FOR(i,0,a)
#define LLD long long
#define VI vector < int >
#define PII pair < int , int >
#define MAX 1000000000

//_____starts____here_______
int dis[101][101][4];
bool vis[101][101][4];
int di[] = {0,0,1,-1};
int dj[] = {1,-1,0,0};
map<string, int> mp;
string s[103];
string rmp[5];
int n,m;
bool valid(int i, int j)
{
	if(i>=0 && j>=0 && i<n && j<m)
		return true;
	return false;
}
bool dead(int i, int j, int g)
{
	int ti = i;
	int tj = j;
	while(ti>=0)
	{
		if(s[ti][tj]=='#')
			break;
		if(s[ti][tj]=='.' || s[ti][tj]=='S' || s[ti][tj]=='G')
		{
			ti--;
			continue;
		}
		string lsr;
		lsr+=s[ti][tj];
		int lol = mp[lsr];
		lol = (lol+g)%4;
		string z = rmp[lol];
		if(z=="v")
			return true;
		else
			break;
		ti--;
	}

	ti = i;
	tj = j;
	while(ti<n)
	{
		if(s[ti][tj]=='#')
			break;
		if(s[ti][tj]=='.' || s[ti][tj]=='S' || s[ti][tj]=='G')
		{
			ti++;
			continue;
		}
		string lsr;
		lsr+=s[ti][tj];
		int lol = mp[lsr];
		lol = (lol+g)%4;
		string z = rmp[lol];
		if(z=="^")
			return true;
		else
			break;
		ti++;
	}

	ti=i;
	tj=j;
	while(tj>=0)
	{
		if(s[ti][tj]=='#')
			break;
		if(s[ti][tj]=='.' || s[ti][tj]=='S' || s[ti][tj]=='G')
		{
			tj--;
			continue;
		}
		string lsr;
		lsr+=s[ti][tj];
		int lol = mp[lsr];
		lol = (lol+g)%4;
		string z = rmp[lol];
		if(z==">")
			return true;
		else
			break;
		tj--;
	}
	
	ti=i;
	tj=j;
	while(tj<m)
	{
		if(s[ti][tj]=='#')
			break;
		if(s[ti][tj]=='.' || s[ti][tj]=='S' || s[ti][tj]=='G')
		{
			tj++;
			continue;
		}
		string lsr;
		lsr+=s[ti][tj];
		int lol = mp[lsr];
		lol = (lol+g)%4;
		string z = rmp[lol];
		if(z=="<")
			return true;
		else
			break;
		tj++;
	}
	return false;
}
int main()
{

	mp["<"] = 0;
	mp["^"] = 1;
	mp[">"] = 2;
	mp["v"] = 3;

	rmp[0] = "<";
	rmp[1] = "^";
	rmp[2] = ">";
	rmp[3] = "v";

	int t;
	cin>>t;
	int kase = 0;
	while(t--)
	{
		kase++;
		cin>>n>>m;
		queue<pair<PII, int> > Q;
		for(int i=0;i<n;i++)
			cin>>s[i];

		for(int i=0;i<n;i++)
			for(int j=0;j<m;j++)
				for(int k=0;k<4;k++)
				{
					dis[i][j][k] = INF;
					vis[i][j][k] = false;
				}

		int si,sj,gi,gj;
		for(int i=0;i<n;i++)
			for(int j=0;j<m;j++)
			{
				if(s[i][j]=='S')
				{
					si=i;
					sj=j;
				}
				if(s[i][j]=='G')
				{
					gi=i;
					gj=j;
				}
			}

		Q.push(MP(MP(si, sj), 0));
		vis[si][sj][0] = true;

		while(!Q.empty())
		{
			int ci = Q.front().first.first;
			int cj = Q.front().first.second;
			int steps = Q.front().second;
			Q.pop();
			int gg = steps%4;

			if(steps!=0 && dead(ci,cj,gg)) continue;

			dis[ci][cj][gg] = steps;

			if(s[ci][cj]=='G')
				break;

			for(int k=0;k<4;k++)
			{
				int ni = ci+di[k];
				int nj = cj+dj[k];
				int nsteps = steps+1;
				if(valid(ni,nj) && (s[ni][nj]=='.' || s[ni][nj]=='S' || s[ni][nj]=='G') && !vis[ni][nj][nsteps%4])
				{
					vis[ni][nj][nsteps%4] = true;
					Q.push(MP(MP(ni,nj),nsteps));
				}
			}
		}

		cout<<"Case #"<<kase<<": ";
		int ans = INF;
		for(int k=0;k<4;k++)
			ans = min(ans, dis[gi][gj][k]);
		if(ans==INF)
			cout<<"impossible\n";
		else
			cout<<ans<<endl;

	}
	return 0;
}
