#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <cstdlib>
#include <string>
#include <algorithm>
#include <iostream>
using namespace std;
#define rep(i, n) for (int i = 0; i < n; i++)
#define kep(i, n) for (int i = 1; i <=n; i++)
#define N 111

const int dx[] = {0, 1, 0,-1};
const int dy[] = {1, 0,-1, 0};
// right -> down -> left -> up

int T, n, m, x, y, tx, ty, cx, cy, f, r;
string p[N];
int dist[N][N][4];
int oo[1111];
struct node {
	int x, y, z;
} Q[N*N*4];

const int inf = 1<<30;

bool check(int x, int y, int t) {
	for (int i = 1; y+i < m; i++) {
		if (p[x][y+i] == '#') break;
		if (oo[p[x][y+i]]) {
			if ((oo[p[x][y+i]]+t) % 4 == 2) return false; else break;
		}
	}
	for (int i = 1; x+i < n; i++) {
		if (p[x+i][y] == '#') break;
		if (oo[p[x+i][y]]) {
			if ((oo[p[x+i][y]]+t) % 4 == 3) return false; else break;
		}
	}
	for (int i = 1; y-i >= 0; i++) {
		if (p[x][y-i] == '#') break;
		if (oo[p[x][y-i]]) {
			if ((oo[p[x][y-i]]+t) % 4 == 0) return false; else break;
		}
	}
	for (int i = 1; x-i >=0; i++) {
		if (p[x-i][y] == '#') break;
		if (oo[p[x-i][y]]) {
			if ((oo[p[x-i][y]]+t) % 4 == 1) return false; else break;
		}
	}
	return true;
}

void solve() {
	cin >> n >> m;
	rep(i, n) cin >> p[i];
	rep(i, n) rep(j, m) {
		if (p[i][j] == 'S') {
			Q[1].x = x = i; Q[1].y = y = j; Q[1].z = 0;
			f = 0; r = 1;
			p[i][j] = '.';
		} else
		if (p[i][j] == 'G') {
			tx = i; ty = j;
			p[i][j] = '.';
		}
	}
	rep(i, n) rep(j, m) rep(k, 4) dist[i][j][k] = inf;
	dist[x][y][0] = 0;
	while (++f <= r) {
		x = Q[f].x; y = Q[f].y;
		rep(i, 4) {
			cx = x + dx[i]; cy = y + dy[i];
			if (cx < 0 || cx >= n || cy < 0 || cy >= m) continue;
			if (p[cx][cy] != '.' || dist[cx][cy][(Q[f].z+1)%4] <= Q[f].z+1) continue;
			if (check(cx, cy, Q[f].z+1)) {
				Q[++r].x = cx;
				Q[r].y = cy; Q[r].z = Q[f].z+1;
				dist[cx][cy][Q[r].z%4] = Q[r].z;
				if (cx == tx && cy == ty) {
					printf("%d\n", Q[r].z);
					return;
				}
			}
		}
	}
	puts("impossible");
}

int main() {
    freopen("C.in", "r", stdin);
    freopen("C.ou", "w", stdout);
	memset(oo, 0, sizeof(oo));
	oo['>'] = 4; oo['v'] = 1; oo['<'] = 2; oo['^'] = 3;
	ios::sync_with_stdio(false);
	cin >> T;
	kep(_, T) {
		printf("Case #%d: ", _);
		solve();
	}
}
