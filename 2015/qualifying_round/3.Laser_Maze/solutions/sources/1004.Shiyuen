#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<iostream>
#include<vector>
#include<queue>
#define x first
#define y second
#define p pair<int,int>
using namespace std;
const int d[4][2]={-1,0,1,0,0,-1,0,1};
char map[101][100];
bool vis[110][110][4];
p q[41000];
int step[41000];
int main()
{
    freopen("laser_maze.txt","r",stdin);
    freopen("laser_maze.out","w",stdout);
    int t,m,n,cas=0;
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
        int dx,dy;
        for(int i=0;i<n;i++)
            scanf("%s",&map[i]);
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
            if(map[i][j]=='S') q[0].x=i,q[0].y=j,map[i][j]='.';
            else if(map[i][j]=='G') dx=i,dy=j,map[i][j]='.';
            else if(map[i][j]=='^') map[i][j]=0;
            else if(map[i][j]=='>') map[i][j]=1;
            else if(map[i][j]=='v') map[i][j]=2;
            else if(map[i][j]=='<') map[i][j]=3;
        int head=0,tail=0;
        memset(vis,0,sizeof(vis));
        memset(step,0,sizeof(step));
        vis[q[0].x][q[0].y][0]=1;
        int ans=-1;
        cout<<"Case #"<<++cas<<": ";
        while(head<=tail)
        {
            for(int i=0;i<4;i++)
            {
                int x=q[head].x+d[i][0],y=q[head].y+d[i][1];
                if(x>=0 && x<n && y>=0 && y<m && !vis[x][y][(step[head]+1)%4] && map[x][y]=='.')
                {
                    int k=x;
                    while(k>=0 && map[k][y]=='.') k--;
                    if(k>=0 && map[k][y]<=3 && (map[k][y]+step[head]+1)%4==2) continue;
                    k=x;
                    while(k<n && map[k][y]=='.') k++;
                    if(k<n && map[k][y]<=3 && (map[k][y]+step[head]+1)%4==0) continue;
                    k=y;
                    while(k>=0 && map[x][k]=='.') k--;
                    if(k>=0 && map[x][k]<=3 && (map[x][k]+step[head]+1)%4==1) continue;
                    k=y;
                    while(k<m && map[x][k]=='.') k++;
                    if(k<m && map[x][k]<=3 && (map[x][k]+step[head]+1)%4==3) continue;
                    q[++tail]=make_pair(x,y);
                    step[tail]=step[head]+1;
                    vis[x][y][step[tail]%4]=1;
                    if(x==dx && y==dy)
                    {
                        ans=step[tail];
                        break;
                    }
                }
            }
            if(ans>=0) break;
            head++;
        }
        if(ans>0) cout<<ans<<endl;
        else puts("impossible");
    }
}
