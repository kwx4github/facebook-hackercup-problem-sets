package codeforces;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

	public static int[] readInts(String cad) {
		String read[] = cad.split(" ");
		int res[] = new int[read.length];
		for (int i = 0; i < read.length; i++) {
			res[i] = Integer.parseInt(read[i]);
		}
		return res;
	}

	public static long[] readLongs(String cad) {
		String read[] = cad.split(" ");
		long res[] = new long[read.length];
		for (int i = 0; i < read.length; i++) {
			res[i] = Long.parseLong(read[i]);
		}
		return res;
	}

	static void printArrayInt(int[] array) {
		if (array == null || array.length == 0)
			return;
		for (int i = 0; i < array.length; i++) {
			if (i > 0)
				System.out.print(" ");
			System.out.print(array[i]);
		}
		System.out.println();
	}

	static void printMatrixInt(int[][] array) {
		if (array == null || array.length == 0)
			return;
		for (int i = 0; i < array.length; i++) {
			for (int j = 0; j < array[0].length; j++) {
				if (j > 0)
					System.out.print(" ");
				System.out.print(array[i][j]);
			}
			System.out.println();
		}

	}

	public static int max(int arr[]) {
		int max = arr[0];
		for (int i = 1; i < arr.length; i++) {
			max = Math.max(max, arr[i]);
		}
		return max;
	}

	public static int min(int arr[]) {
		int min = arr[0];
		for (int i = 1; i < arr.length; i++) {
			min = Math.min(min, arr[i]);
		}
		return min;
	}

	public static void main(String[] args) throws IOException {
		BufferedReader in;
		StringBuilder out = new StringBuilder();
		File f = new File("entrada");
		if (f.exists()) {
			in = new BufferedReader(new FileReader(f));
		} else
			in = new BufferedReader(new InputStreamReader(System.in));

		int n = Integer.parseInt(in.readLine());
		for (int i = 0; i < n; i++) {
			boolean a = false, b = false;
			char c[] = in.readLine().toCharArray();
			out.append("Case #" + (i + 1) + ": ");
			o: for (int j = 0; j < c.length; j++) {
				for (int k = j + 1; k < c.length; k++) {
					if ((j == 0 && c[k] != '0') || j > 0) {
						if (c[j] > c[k]) {
							char t = c[j];
							c[j] = c[k];
							c[k] = t;
							for (int res = 0; res < c.length; res++) {
								out.append(c[res]);
							}
							t = c[k];
							c[k] = c[j];
							c[j] = t;
							a = true;
							out.append(" ");
							break o;
						}
					}
				}
			}
			if (!a) {
				for (int res = 0; res < c.length; res++) {
					out.append(c[res]);
				}
				out.append(" ");
			}

			g: for (int j = 0; j < c.length; j++) {
				for (int k = j + 1; k < c.length; k++) {
					if (c[j] < c[k]) {
						char t = c[j];
						c[j] = c[k];
						c[k] = t;
						for (int res = 0; res < c.length; res++) {
							out.append(c[res]);
						}
						b = true;
						break g;
					}
				}
			}

			if (!b) {
				for (int res = 0; res < c.length; res++) {
					out.append(c[res]);
				}
			}

			out.append("\n");

		}
		System.out.print(out);

	}
}
