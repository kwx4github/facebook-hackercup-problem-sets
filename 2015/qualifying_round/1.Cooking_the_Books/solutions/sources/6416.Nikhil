#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int max(char *a,int i,int j)
    {
    int k,max=-1,x=i;
    for(k=i;k<=j;k++)
        {
        if(a[k]>=max)
            {
            max=a[k];
            x=k;
        }
    }
    if(a[x]==a[i])
        return -1;
    else
        return x;
}
int min(char *a,int i,int j)
    {
    int k,min=1000,x=i;
    for(k=i;k<=j;k++)
        {
        if(a[k]<=min)
            {
            min=a[k];
            x=k;
        }
    }
    if(a[x]==a[i])
        return -1;
    else
        return x;
}
int min0(char *a,int i,int j)
    {
    int k,min=1000,x=i;
    for(k=i;k<=j;k++)
        {
        if(a[k]<=min)
            {
            if(a[k]=='0')
                continue;
            min=a[k];
            x=k;
        }
    }
    if(a[x]==a[i])
        return -1;
    else
        return x;
}
int main() {

    int t,n,i,x,y,u;
    char a[100],b,c[100];
    scanf("%d",&t);
    for(u=1;u<=t;u++)
        {
        scanf("%s",a);
        n=strlen(a);
        strcpy(c,a);
        for(i=0;a[i]!='\0';i++)
            {
            x=max(a,i,n-1);
            if(x!=-1)
                {
                b=a[x];
                a[x]=a[i];
                a[i]=b;
                break;
            }
        }
        for(i=0;c[i]!='\0';i++)
            {
            x=min(c,i,n-1);
            //printf("%d %d\n",i,x);
            if(x!=-1)
                {
                if(c[x]=='0'&&i==0)
                    {
                    y=min0(c,i,n-1);
                    if(y!=-1)
                        {
                        b=c[y];
                        c[y]=c[i];
                        c[i]=b;
                        break;
                    }
                }
                else
                    {
                    b=c[x];
                    c[x]=c[i];
                    c[i]=b;
                    break;
                }
            }
        }
        printf("Case #%d: %s %s\n",u,c,a);
    }
    return 0;
}
