
//  main.cpp
//  Practice
//
//  Created by Tapan on 31/12/14.
//  Copyright (c) 2014 Tapan. All rights reserved.
//

#include <stdio.h>
#include <vector>
#include <iostream>
#include <queue>
#include <set>
#include <algorithm>
#include <math.h>
#include <string>
#include <string.h>
#include <stdlib.h>
#include <map>
using namespace std;
#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define mem(a,b) memset(a,b,sizeof(a))
#define f(a,b) for(int i=a;i<b;i++)
#define maX(a,b) ((a)>(b)?a:b)
#define miN(a,b) ((a)<(b)?a:b)
#define  ll  long long
#define fill(a,v) memset(a, v, sizeof a)
#define mod 1000000007
typedef pair<int, int> ii;
typedef pair<int, ii > iii;
ll modpow(ll base, ll exponent,ll modulus)
{
    ll result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
int main(int argc, const char * argv[])
{
  ios_base::sync_with_stdio(0);
    int t;
    cin>>t;
    int Number=1;
    while(t--){
        string a,b;
        cin>>a;
        b=a;
        if(a.length()==1){
            cout<<"Case #"<<Number<<": "<<a<<" "<<a<<endl;
          }
        else {
            string check[1003];int s1=0;
            check[s1]=a;
            s1++;
            for(int i=0;i<b.length();i++){
            for(int j=i+1;j<b.length();j++){
                b=a;
                swap(b[i],b[j]);
                check[s1]=b;
                s1++;
            }
}
            sort(check,check+s1);
            int i1=0,i2=0;
            for(int i=0;i<s1;i++){
                if(check[i][0]!='0'){
                    i1=i;
                    break;
                }
            }
            for(int i=s1-1;i>=0;i--){
                if(check[i][0]!='0'){
                    i2=i;
                    break;
                }
            }
            
    cout<<"Case #"<<Number<<": "<<check[i1]<<" "<<check[i2]<<endl;
        }
      Number++;
    }
   
    return 0;
    
}