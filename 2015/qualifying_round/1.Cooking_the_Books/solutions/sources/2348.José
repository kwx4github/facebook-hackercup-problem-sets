var fs  = require('fs');
var filename = process.argv.splice(2);
var fileContents = fs.readFileSync(filename[0], 'UTF-8');
var lines = fileContents.split('\n');

var T = +lines[0];
var rest = lines.slice(1, 1 + T);

function findMinAndmax(number) {
  var min = number,
      max = number;

  var chars = number.split('');

  for (var i = 0; i < chars.length - 1; i++) {
    for (var j = i + 1; j < chars.length; j++) {
      if (i === 0 && chars[j] === '0') {
        // we don't want 0 as the first char
        continue;
      }

      if (chars[i] === chars[j]) {
        // swapping wouldn't make any difference
        continue;
      }

      var newNumber = number.slice().split('');
      var aux = newNumber[i];
      newNumber[i] = newNumber[j];
      newNumber[j] = aux;

      var num = +(newNumber.join(''));
      if (num < min) {
        min = num;
      }
      if (num > max) {
        max = num;
      }
    }
  }

  return {
    min: min,
    max: max
  };

}

/*function permute(array) {
  var results = [];
  if (array.length <= 1) {
    results.push(array);
    return results;
  }

  array.forEach(function(n, index) {
    var main = n;
    var numberWithoutMain = array.slice(0, index).concat(array.slice(index +1));
    var permutations = permute(numberWithoutMain);
    if (permutations) {
      permutations.forEach(function(p) {
        results.push([main].concat(p));
      });
    }
  });
  return results;
}

function calculateMin(number) {
  // first, calculate all the permutations
  var permutations = permute(number.split(''));
  var min = Infinity;
  permutations.forEach(function(p) {
    if (p[0] == 0) return;
    var num = +(p.join(''));
    if (num < min) min = num;
  });

  return min;
}

function calculateMax(number) {
  // first, calculate all the permutations
  var permutations = permute(number.split(''));
  var max = 0;
  permutations.forEach(function(p) {
    if (p[0] == 0) return;
    var num = +(p.join(''));
    if (num > max) max = num;
  });

  return max;
}*/

rest.forEach(function(n, index) {
  var result = findMinAndmax(n);
  process.stdout.write('Case #' + (index+1) + ': ' + result.min + ' ' + result.max + '\n');
});
