#include <stdio.h>
#include <string.h>
char max_output[100][20];
char min_output[100][20];
#define CONVERT_CHAR_TO_DIGIT(x) (x-48)
//#define DEBUG
#ifdef DEBUG
#define LOG printf
#else
#define LOG //
#endif

void swap(char *c,char *d)
{
  char temp = *c;
 *c = *d;
 *d = temp;
}
int main(int argc, char *argv[])
{
  int NumofTestCases = 0;
  char input[100][20];
  scanf("%d",&NumofTestCases);
  int counter = 0 ,i=0;
  while(counter < NumofTestCases)
  {
    scanf("%s",input[i]);
    calculate_minmax(input[i],i);
    i++;
    counter++;
  }  
  for(counter= 0 ; counter < NumofTestCases ; counter++)
  {
    printf("case #%d: %s %s \n", counter+1,min_output[counter],max_output[counter]);
  } 
  return 0;
}

int calculate_minmax(char *str,int testcase)
{
  int len = 0 ;
  int min_index = -1;
  int max_index = -1;
  int max_swap_indexes[2]={-1,-1};
  int min_swap_indexes[2]={-1,-1};
  int i,j = 0;
  len = strlen(str);
  int min_digit = 10 , max_digit = -1 ;
  int min_done=0,max_done=0;
//  min_digit = max_digit = str[0] - 48 ; 

 strncpy(max_output[testcase],str,strlen(str));
  for(i = 0;i < strlen(str) ; i++ )
  {
    LOG("using swap index %d\n",i);
     max_swap_indexes[0] =  i;
     max_digit = CONVERT_CHAR_TO_DIGIT(str[i]) ;   
    for(j=i+1; j < strlen(str) ; j++)
    {
      if( max_digit <= CONVERT_CHAR_TO_DIGIT(str[j]) && CONVERT_CHAR_TO_DIGIT(str[i]) <  CONVERT_CHAR_TO_DIGIT(str[j]))
        {
           max_swap_indexes[1] = j ;
           max_digit = CONVERT_CHAR_TO_DIGIT(str[j]) ;
        }

    } 
   
   if(max_swap_indexes[1] != -1) 
   {
    LOG("Obtained max swap index %d \n",max_swap_indexes[1]);
    break;
   } 
  }
 if(max_swap_indexes[1] != -1 ) 
    swap(&(max_output[testcase][max_swap_indexes[0]]),&(max_output[testcase][max_swap_indexes[1]]));
 
 strncpy(min_output[testcase],str,strlen(str));
  for(i = 0;i < strlen(str) ; i++ )
  {
    LOG("using swap index %d\n",i);
    min_swap_indexes[0] =  i;
    min_digit = CONVERT_CHAR_TO_DIGIT(str[i]) ;   

    for(j=i+1; j < strlen(str) ; j++)
    {
      if(min_digit  >= CONVERT_CHAR_TO_DIGIT(str[j]) && CONVERT_CHAR_TO_DIGIT(str[i]) > CONVERT_CHAR_TO_DIGIT(str[j]))
        {
           LOG("min digit %d \n" , min_digit); 
           min_swap_indexes[1] = j ;
           min_digit = CONVERT_CHAR_TO_DIGIT(str[j]) ;
        }
    }

   if(min_swap_indexes[1] != -1 )
   {
     if((min_swap_indexes[0] == 0 && CONVERT_CHAR_TO_DIGIT(str[min_swap_indexes[1]]) != 0  || ( min_swap_indexes[0] != 0 )))
      {
          LOG("Obtained min swap index %d \n",min_swap_indexes[1]);
          break;
      }
      else
      {
        min_swap_indexes[1] = -1;
      }
  }
 }

 if(min_swap_indexes[1] != -1 ) 
    swap(&(min_output[testcase][min_swap_indexes[0]]),&(min_output[testcase][min_swap_indexes[1]]));
 
}


