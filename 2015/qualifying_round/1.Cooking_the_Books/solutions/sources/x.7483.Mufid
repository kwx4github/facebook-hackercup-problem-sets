#!/usr/bin/env ruby

file_name = ARGV.first

$first_line = true
iteration = 0
$total = 0

class Swap
  attr_accessor :x1
  attr_accessor :x2

  def initialize
    self.x1 = 0
    self.x2 = 0
  end
end

File.open(file_name, "r") do |fh|
  begin
while (line = fh.readline) != nil
  if $first_line
    $first_line = false
    $total = line.to_i
    next
  end
  iteration += 1

  # Read per character
  chars = []
  line.chomp.chars.to_a.each do |c|
    chars << c.to_i
  end

  swap_min = Swap.new
  swap_max = Swap.new

  
  #puts "case: #{line}"
  ignore_max = true
  last_ignore = chars.first

  # Find idx2
  chars.each_with_index do |c, index|
    if chars[swap_min.x2] >= c and c != 0
      swap_min.x2 = index
      swap_min.x1 = index
      #puts "idx min: #{index}"
    end

    if chars[swap_max.x2] <= c or ignore_max
      swap_max.x2 = index
      swap_max.x1 = index
    end

    if index > 0 and last_ignore != c
      ignore_max = false
    end

  end

  # Find idx1
  chars.each_with_index do |c, index|
    if index < swap_min.x2 and c > chars[swap_min.x2] and swap_min.x2 == swap_min.x1
      swap_min.x1 = index if not (index == 0 and chars[swap_min.x2] == 0)
    end
    if index < swap_max.x2 and chars[swap_max.x2] > c and swap_max.x2 == swap_max.x1
      swap_max.x1 = index
    end
  end

  res_min = chars.dup
  res_max = chars.dup

  res_min[swap_min.x1], res_min[swap_min.x2] = res_min[swap_min.x2], res_min[swap_min.x1]
  res_max[swap_max.x1], res_max[swap_max.x2] = res_max[swap_max.x2], res_max[swap_max.x1]

  res_min   = res_min.join
  res_max   = res_max.join

  puts "Case ##{iteration}: #{res_min} #{res_max}"
end
rescue EOFError

end
end