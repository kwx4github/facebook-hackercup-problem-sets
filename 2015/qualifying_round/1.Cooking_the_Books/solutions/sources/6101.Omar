/* 
 * File:   main.cpp
 * Author: Rechard3
 *
 * Created on January 9, 2015, 8:01 PM
 */

#include <vector>
#include <algorithm>
#include <string>
#include <cstring>
#include <deque>
#include <queue>
#include <map>
#include <iostream>
#include <cstdio>
#include <cstdlib>

#define repi(i,f,l) for(int i=f ; i<(l) ; ++i)
#define repd(i,f,l) for(int i=f ; i>=(l) ; --i)
#define CONCAT(x,y) x##y
#define UNIQUENAME(x, y) CONCAT(x, y)
#define forall(i,n) int UNIQUENAME(_size_,__LINE__) = (n).size(); repi(i,0,UNIQUENAME(_size_,__LINE__))
#define all(s) (s).begin(), (s).end()
#define OO 0x7fffffff
#define clr(memory, val) memset(memory,val, sizeof(memory))
#define read(file) freopen(file, "r", stdin)
#define write(file) freopen(file, "w", stdout)
#define IO(In, Out) freopen(In, "r", stdin); freopen(Out, "w", stdout)
#define xx first
#define yy second
#define setBit(x,i)  ((x)|=(1<<i))
#define clrBit(x,i)  ((x)&=(~(1<<i)))
#define chkBit(x,i)  ((x)&(1<<i))


using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<pair<int, int> >  vii;

/*
 * 
 */
ll stringToInteger(const string& s)
{
    ll res = 0;
    forall(i,s)
    {
        res += s[i] - '0';
        res *= 10;
    }
    return res/=10;
}

int main(int argc, char** argv) {

    // Redirect IO :
    freopen("cooking_the_books.txt", "r", stdin);
    freopen("output.txt" , "w", stdout);
    
    
    int c=0; cin >> c; c++;
    string s, temp;
    s.reserve(20); temp.reserve(20);
    repi(cc,1,c)
    {
        cin >> s;
        
        // Brute force :
        ll _min = stringToInteger(s), _max = stringToInteger(s);
        // Process first digit :
        forall(i,s)
        {
            temp = s;
            swap(temp[0], temp[i]);
            ll x = stringToInteger(temp);
            _max = max(_max, x);
            if(temp[0]!='0')
            {
                _min = min(_min, x);
            }
        }
        // Process remaining digits :
        repi(i,1,s.length())
        {
            repi(j,i,s.length())
            {
                temp = s;
                swap(temp[i], temp[j]);
                ll x = stringToInteger(temp);
                _max = max(_max, x);
                _min = min(_min, x);
            }
        }
        
        // Output result :
        cout << "Case #" << cc << ": " << _min << " " << _max << endl;
    }
    return 0;
}

