#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

string solveMax(string n, int posFor) {
  if (posFor == n.length() - 1) {
    return n;
  }

  char max = n[posFor];
  int maxPos = posFor;

  for (int i = n.length() - 1; i > posFor; i--) {
    if (max < n[i]) {
      max = n[i];
      maxPos = i;
    }
  }

  if (maxPos == posFor) {
    return solveMax(n, posFor + 1);
  } else {
    n[maxPos] = n[posFor];
    n[posFor] = max;
    return n;
  }
}

string solveMin(string n, int posFor) {
  if (posFor == n.length() - 1) {
    return n;
  }

  char min = n[posFor];
  int minPos = posFor;

  for (int i = posFor + 1; i < n.length(); i++) {
    if (min > n[i] && (posFor != 0 || n[i] != '0')) {
      min = n[i];
      minPos = i;
    }
  }

  if (minPos == posFor) {
    return solveMin(n, posFor + 1);
  } else {
    n[minPos] = n[posFor];
    n[posFor] = min;
    return n;
  }
}

int main() {
  int T;
  cin >> T;

  for (int i = 1; i <= T; i++) {
    string N;
    cin >> N;
    
    cout << "Case #" << i << ": " << solveMin(N, 0) << " " << solveMax(N, 0) << endl;
  }

  return 0;
}
