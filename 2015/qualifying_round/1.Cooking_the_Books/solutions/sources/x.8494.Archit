
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;


public class hello {

    static class FastScanner{
        BufferedReader s;
        StringTokenizer st;
        
        public FastScanner(){
            st = new StringTokenizer("");
            s = new BufferedReader(new InputStreamReader(System.in));
        }
        
      
        public int nextInt() throws IOException{
            if(st.hasMoreTokens())
                return Integer.parseInt(st.nextToken());
            else{
                st = new StringTokenizer(s.readLine());
                return nextInt();
            }
        }
        
      public double nextDouble() throws IOException{
            if(st.hasMoreTokens())
                return Double.parseDouble(st.nextToken());
            else{
                st = new StringTokenizer(s.readLine());
                return nextDouble();
            }
        }
      
      
        
        public String nextString() throws IOException{
            if(st.hasMoreTokens())
                return st.nextToken();
            else{
                st = new StringTokenizer(s.readLine());
                return nextString();
            }
            
        }
        public String readLine() throws IOException{
            return s.readLine();
        }
        
        public void close() throws IOException{
            s.close();
        }
        
    }
      private static FastScanner s = new FastScanner();   
      private static PrintWriter ww = new PrintWriter(new OutputStreamWriter(System.out));

     public static void main(String[] args) throws IOException 
     {
       
         int tst=s.nextInt();int cas=1;
         while(tst-->0)
         {     
             String ss= s.nextString();long in=Long.parseLong(ss);long a[] = new long[ss.length()];int i=0;
             String arc=ss;
               while (in>0)
               {
                 long lastdigit = in%10;
                 a[i]=lastdigit;
                 in =in/10;
                 i++;
               }
                Arrays.sort(a);
               long max = a[ss.length()-1];
                long min=archit(a);
                String maxx=""+max;String minn=""+min;
                //ww.println("--> "+maxx+" --> "+min);
                char p = ss.charAt(0);
                
                   int im =ss.indexOf(maxx);
                  arc=arc.replace(arc.charAt(0),arc.charAt(im));
                  StringBuilder my = new StringBuilder(arc);
                   my.setCharAt(im, p);
                 
                  im=ss.indexOf(minn);
                  ss=ss.replace(ss.charAt(0),ss.charAt(im));//ww.println("\\"+ss);
                  StringBuilder my1 = new StringBuilder(ss);
                  my1.setCharAt(im, p);
                 System.out.print("Case #"+cas+": "+my1.toString());
                 System.out.print(" "+my.toString());
                 cas++;
                  System.out.println("");
         }
         s.close();
         ww.close();
     }
     public static long archit(long a[])
     { 
        long fb =a[0];int i=1;
         while(fb==0 && i<a.length)
         {
             fb=a[i];
             i++;
            
         }
             
             
      return fb;
     }
     public static int gcd(int a, int b){
        return b == 0 ? a : gcd(b,a%b);
    }

}
