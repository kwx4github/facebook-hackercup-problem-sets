<?php

function getNumbers() {
  $arr = explode("\n", file_get_contents("cooking_the_books.txt"));
  $count = $arr[0];
  unset($arr[0]);
  return array_chunk($arr, $count)[0];
}

function orderNumber($str) {
    $split = str_split($str);
    arsort($split);
    return $split;
}

function swap($str, $i, $j) {
    $tmp = $str[$i];
    $str[$i] = $str[$j];
    $str[$j] = $tmp;
    return $str;
}


function work($n) {
  echo workLowest($n), " ";
  echo workHighest($n);
}

function workLowest($n) {
  $order = orderNumber($n);
  asort($order); // Sort ascending now
  while (current($order) == 0 && count($order) > 0) {
    unset($order[key($order)]); // ignore 0, since we don't put it in front
  }
  while(count($order) > 0) { // Try every number to swap from right to left
    $lowest = current($order);
    $lowestpos = key($order);
    for($i = 0; $i < strlen($n); ++$i) {
      if ($n[$i] > $lowest && $i < $lowestpos) {
        return swap($n, $i, $lowestpos);
      }
    }
    unset($order[key($order)]);
  }
  // We get here? => no number != 0 can be swapped
  // Try 0 now
  $order = orderNumber($n);
  asort($order);
  
  while(count($order) > 0) {
    $lowest = current($order);
    $lowestpos = key($order);
    for($i = 0; $i < strlen($n); ++$i) {
      if ($n[$i] > $lowest && $i < $lowestpos) {
        if ($i == 0 && $lowest == 0) continue; // But not at the first position
        return swap($n, $i, $lowestpos);
      }
    }
    unset($order[key($order)]);
  }

  return $n;
}

function workHighest($n) {
  $order = orderNumber($n);
  while(count($order) > 0) {
    $highest = current($order);
    $highestpos = key($order);
    for($i = 0; $i < strlen($n); ++$i) {
      if ($n[$i] < $highest && $i < $highestpos) {
        return swap($n, $i, $highestpos);
      }
    }
    unset($order[key($order)]);
  }
  return $n;
}

$numbers = getNumbers();

foreach ($numbers as $k => $n) {
  echo "Case #" . ($k + 1) . ": ";
  work($n);
  echo PHP_EOL;
}
