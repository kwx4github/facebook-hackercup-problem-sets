package program;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class CookTheBooks {

	public static void main(String[] args) {
		List<String> input = getInput("input.txt");
		getResults(input);

	}
	
	public static List<String> getInput(String fileName){
		List<String> res = new ArrayList<String>();
		
		File f = new File(fileName);
		Scanner scan;
		try{
			scan = new Scanner(f);
		}
		catch(FileNotFoundException e){
			System.out.println("I could not find the file "+fileName);
			return null;
		}
	
		
		int numInputs = Integer.parseInt(scan.nextLine());
		for(int i = 0; i < numInputs; i++){
			res.add(scan.nextLine());
		}
		scan.close();
		
		return res;
	}
	
	public static void getResults(List<String> input){
		int caseCt = 1;
		PrintWriter writer = null;
		try {
			writer = new PrintWriter("output.txt", "UTF-8");
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		for(String str : input){
			char[] strArr = str.toCharArray();
			//get the first digit's number
			int numAtFront = -1;
			if(strArr.length > 0){
				numAtFront = Character.getNumericValue(strArr[0]);
			}
			else
				continue;
			
			int highNum = numAtFront;
			int hIdx = 0;
			int lowNum = numAtFront;
			int lIdx = 0;
			
			for(int i = 1; i < strArr.length; i++){
				if(Character.getNumericValue(strArr[i]) > highNum && Character.getNumericValue(strArr[i]) > 0){
					highNum = Character.getNumericValue(strArr[i]);
					hIdx = i;
				}	
			}
			
			for(int i = 1; i < strArr.length; i++){
				if( Character.getNumericValue(strArr[i]) < lowNum &&  Character.getNumericValue(strArr[i]) > 0){
					lowNum =  Character.getNumericValue(strArr[i]);
					lIdx = i;
				}	
			}
			
			String highNumStr;
			String lowNumStr;
			
			//build the high string
			StringBuilder highStrBld = new StringBuilder(str);
			highStrBld.setCharAt(0, (char)(highNum + 48));
			highStrBld.setCharAt(hIdx, (char)(numAtFront + 48));
			highNumStr = highStrBld.toString();
			
			//build the low string
			StringBuilder lowStrBld = new StringBuilder(str);
			lowStrBld.setCharAt(0, (char)(lowNum + 48));
			lowStrBld.setCharAt(lIdx, (char)(numAtFront + 48));
			lowNumStr = lowStrBld.toString();
			
			//print to the file
			writer.println("Case #" + caseCt + ": " + lowNumStr + " " + highNumStr);
			caseCt ++;
			
		}
		writer.close();
		
	}
}
