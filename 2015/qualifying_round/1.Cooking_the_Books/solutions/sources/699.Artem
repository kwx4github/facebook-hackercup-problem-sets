import java.io.*;
import java.util.*;

public class CookingBooks {

	FastScanner in;
	PrintWriter out;

	void solve() {
		long n = in.nextLong();
		char[] c = Long.toString(n).toCharArray();

		long min = n, max = n;
		for (int i = 0; i < c.length; i++) {
			for (int j = i + 1; j < c.length; j++) {
				if (i == 0 && c[j] == '0') {
					continue;
				}
				
				{
					char tmp = c[i];
					c[i] = c[j];
					c[j] = tmp;
				}
				
				long value = Long.parseLong(new String(c));
				min = Math.min(min, value);
				max = Math.max(max, value);
				
				{
					char tmp = c[i];
					c[i] = c[j];
					c[j] = tmp;
				}
			}
		}
		out.println(min + " " + max);
	}

	void run() {
		try {
			in = new FastScanner("input.txt");
			out = new PrintWriter("output.txt");
			int T = in.nextInt();
			for (int test = 1; test <= T; test++) {
				out.print(String.format("Case %d: ", test));
				solve();
			}
			out.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	class FastScanner {
		BufferedReader br;
		StringTokenizer st;

		public FastScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		public FastScanner(String s) {
			try {
				br = new BufferedReader(new FileReader(s));
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}

		String nextToken() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(nextToken());
		}

		long nextLong() {
			return Long.parseLong(nextToken());
		}

		double nextDouble() {
			return Double.parseDouble(nextToken());
		}
	}

	public static void main(String[] args) {
		new CookingBooks().run();
	}
}
