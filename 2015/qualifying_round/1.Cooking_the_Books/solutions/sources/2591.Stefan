#include<stdio.h>

int T;
int nr[20],nr2[20],n,cif;

void process(int n)
{
    cif=0;
    do
    {
        nr[cif]=n%10;
        n/=10;
        cif++;
    }while(n>0);
}

void swap_cif(int cif1,int cif2)
{
    nr2[cif1]=nr2[cif1]^nr2[cif2];
    nr2[cif2]=nr2[cif1]^nr2[cif2];
    nr2[cif1]=nr2[cif1]^nr2[cif2];
}

int find_min(int poz,bool find_0=true)
{
    int mn=99999999;
    int ret=-1;
    for(int i=poz;i>=0;i--)
    {
        if(find_0==false&&nr[i]==0)continue;
        if(nr[i]<=mn)
        {
            mn=nr[i];
            ret=i;
        }
    }
    return ret;
}

int find_max(int poz)
{
    int mx=-1;
    int ret=-1;
    for(int i=poz;i>=0;i--)
        if(nr[i]>=mx)
    {
        mx=nr[i];
        ret=i;
    }
    return ret;
}

int get_nr()
{
    int nr=0;
    for(int i=cif-1;i>=0;i--)nr=nr*10+nr2[i];
    return nr;
}

int get_min()
{
    for(int i=0;i<cif;++i)nr2[i]=nr[i];
    int ok=true;
    if(nr[cif-1]!=1)
        {
            int p=find_min(cif-2,false);
            if(p>-1&&nr[p]<nr[cif-1])
            {
                ok=false;
                swap_cif(cif-1,p);
            }
        }
    if(ok)
    {
        for(int i=cif-2;i>=0&&ok;i--)
            if(nr[i]>0)
            {
                int p=find_min(i-1);
                if(p>-1&&nr[p]<nr[i])
                {
                    ok=false;
                    swap_cif(i,p);
                }
            }
    }
    return get_nr();
}


int get_max()
{
    for(int i=0;i<cif;++i)nr2[i]=nr[i];
    int ok=true;
    for(int i=cif-1;i>=0&&ok;i--)
        if(nr[i]<9)
        {
            int p=find_max(i-1);
            if(p>-1&&nr[p]>nr[i])
            {
                ok=false;
                swap_cif(i,p);
            }
        }

    return get_nr();
}

int main()
{
    freopen("input","r",stdin);
    freopen("output","w",stdout);
    scanf("%d",&T);
    for(int t=1;t<=T;++t)
    {
        scanf("%d",&n);
        process(n);
        printf("Case #%d: %d %d\n",t,get_min(),get_max());
    }
    return 0;
}
