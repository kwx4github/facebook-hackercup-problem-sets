#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <ctime>
#include <string>

using namespace std;

#ifdef _WIN32
#define LLD "%I64d"
#else
#define LLD "%lld"
#endif

typedef long double ld;
typedef long long ll;

ll rdtsc() {
  ll tmp;
  asm("rdtsc" : "=A"(tmp));
  return tmp;
}

inline int myrand() {
  return abs((rand() << 15) ^ rand());
}

inline int rnd(int x) {
  return myrand() % x;
}

#define TASKNAME "text"
#define pb push_back
#define mp make_pair
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#define sz(x) ((int)(x).size())

const int INF = (int)1e9 + 1;
const ld EPS = 1e-9;

bool solve() {
  string s;
  if (!(cin >> s))
    return 0;

  string maxs = s, mins = s;
  int n = sz(s);
  for (int i = 0; i < n; ++i) {
    for (int j = (i + 1); j < n; ++j) {
      swap(s[i], s[j]);
      if (s[0] != '0') {
        if (mins > s)
          mins = s;
        if (maxs < s)
          maxs = s;
      }
      swap(s[i], s[j]);
    }
  }

  cout << mins << " " << maxs << endl;
  return 1;
}

int main() {
  srand(rdtsc());
#ifdef DEBUG
  freopen(TASKNAME".in", "r", stdin);
  freopen(TASKNAME".out", "w", stdout);
#endif

  int t;
  while (scanf("%d", &t) == 1) {
    for (int i = 0; i < t; ++i) {
      printf("Case #%d: ", i + 1);
      assert(solve());
    }
#ifdef DEBUG
    eprintf("%.18lf\n", (double)clock() / CLOCKS_PER_SEC);
#endif
  }
  return 0;
}
