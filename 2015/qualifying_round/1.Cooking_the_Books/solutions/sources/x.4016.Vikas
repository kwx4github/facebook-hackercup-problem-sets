import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;


public class Qual2015_CookingTheBooks {
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		String inputPath = "c:\\facebook\\input.txt";
		String outputPath = "c:\\facebook\\output.txt";

		BufferedReader in = new BufferedReader(new FileReader(inputPath));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(
				outputPath)));
		
//		InputStream inputStream = System.in;
//		BufferedReader in = new BufferedReader(new InputStreamReader(inputStream));
		int testCases = Integer.parseInt(in.readLine());
		StringBuilder result = new StringBuilder();
		for(int t=1;t<=testCases;t++) {
			String str = in.readLine();
			result.append("Case #"+t+": "+getMinimum(str) + " "+ getMaximum(str)+"\n");
//			result.append(getMinimum(str) + " "+ getMaximum(str)+"\n");
		}
		
		out.print(result.toString());
		out.close();
		in.close();
	}
	
	private static String getMaximum(String str) {
		StringBuilder result = new StringBuilder(str);
		
		for(int i=0;i<str.length();i++) {
			char max = str.charAt(i);
			int index=0;
			for(int j=i+1;j<str.length();j++) {
				if(str.charAt(j)>max) {
					max = str.charAt(j);
					index=j;
				}
			}
			if(max > str.charAt(i)) {
				result.setCharAt(i, max);
				result.setCharAt(index, str.charAt(i));
				return result.toString();
			}
			
		}
		return str;
	}
	
	private static String getMinimum(String str) {
		StringBuilder result = new StringBuilder(str);
		for(int i=0;i<str.length();i++) {
			char min = str.charAt(i);
			int index=0;
			for(int j=i+1;j<str.length();j++) {
				if((str.charAt(j)<min)) {
					if((i==0&&(str.charAt(j)!='0'))||(i!=0)) {
						min = str.charAt(j);
						index=j;
					}
					
				}
			}
			if(min < str.charAt(i)) {
				result.setCharAt(i, min);
				result.setCharAt(index, str.charAt(i));
				return result.toString();
			}
			
		}
		return str;
	}

}
