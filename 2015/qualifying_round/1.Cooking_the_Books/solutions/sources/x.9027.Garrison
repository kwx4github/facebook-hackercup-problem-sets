import java.util.*;
import java.io.*;
import static java.lang.System.*;

public class CookinTheBooks {
	public static void main(String[] args) throws IOException
	{
		Scanner in = new Scanner(new File("cooking_the_books.txt"));
		int t = in.nextInt();
		in.nextLine();
		for(int i = 1; i<=t; i++)
		{
			String numtocook = in.nextLine();
			int[] ns = new int[numtocook.length()];
			for(int a = 0; a<ns.length; a++)
			{
				ns[a]= (int)numtocook.charAt(a)-48;
			}
			
			
			out.println("Case #"+i+": "+getb(ns,0,Integer.parseInt(numtocook))+" "+gets(ns,0,Integer.parseInt(numtocook)));
		}
	}
	public static int getb(int[] n, int fromindex, int biggest) //n is changing when it shoudn't
	{	
		if(n.length<=1)
			return n[0];
		
		while(fromindex<n.length)
		{ 
		int tocomp=n[fromindex];
		int[] copy=Arrays.copyOf(n, n.length);
		for(int i = 0; i<n.length; i++)
		{
			
			int temp= n[i];
			copy[i]=tocomp;
			copy[fromindex]=temp;
			
			
			if(getnum(copy)>biggest && copy[0]!=0 )
			{
				biggest=getnum(copy);
				
			}
			
			 tocomp=n[fromindex];copy=Arrays.copyOf(n, n.length);
		
			
		}
		++fromindex;
		}
		return biggest;
	
		
	}
	public static int gets(int[] n, int fromindex, int smallest)
	{
	
		if(n.length<=1)
			return n[0];
		while(fromindex!=n.length)
		{
			int[] copy=Arrays.copyOf(n, n.length);
			int tocomp=n[fromindex];
		
		for(int i = 0; i<n.length; i++) //account for 0's
		{
		
			
				int temp= n[i];
				copy[i]=tocomp;
				copy[fromindex]=temp;
				if(getnum(copy)<smallest && copy[0]!=0)
				{
					smallest=getnum(copy);
				
				}
				copy=Arrays.copyOf(n, n.length); tocomp=n[fromindex];
			
		}
		fromindex++;
		}
		return smallest;
	}
	public static int getnum(int[] pos)
	{
		String x = "";
		for(int i: pos)
		{
			x+=i;
		}
		return Integer.parseInt(x);
	}
}
