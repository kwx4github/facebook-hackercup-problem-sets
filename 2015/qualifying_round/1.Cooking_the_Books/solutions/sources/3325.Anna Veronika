#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <deque>
#include <iostream>
#include <limits>
#include <numeric>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define MP make_pair
#define all(v) (v).begin(), (v).end()
#define PROBLEM_ID "1"

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<bool> vb;
typedef long long ll;
typedef pair<int, int> pii;

void FindMinMax(const string& input, int* min_int, int* max_int) {
	*min_int = atoi(input.c_str());
	*max_int = *min_int;

	if (input.length() < 2) {
		return;
	}

	for (int first_digit = 0; first_digit < input.length(); ++first_digit) {
		for (int second_digit = first_digit + 1; second_digit < input.length(); ++second_digit) {
			string result = input;
			swap(result[first_digit], result[second_digit]);
			if (result[0] == '0')
				continue;

			int result_int = atoi(result.c_str());
			if (result_int < *min_int) {
				*min_int = result_int;
			}
			if (result_int > *max_int) {
				*max_int = result_int;
			}
		}
	}
}

int FindMin(const string& input) {
	int min, max;
	FindMinMax(input, &min, &max);
	return min;
}

int FindMax(const string& input) {
	int min, max;
	FindMinMax(input, &min, &max);
	return max;
}

void Check() {
	if (FindMin("900") != 900)
		assert(false);

	if (FindMin("123") != 123)
		assert(false);

	if (FindMin("120") != 102)
		assert(false);

	if (FindMin("1101") != 1011)
		assert(false);

	if (FindMin("912") != 192)
		assert(false);
	
	if (FindMin("0") != 0)
		assert(false);

	if (FindMin("2222") != 2222)
		assert(false);

	if (FindMin("312") != 132)
		assert(false);

	if (FindMin("1101") != 1011)
		assert(false);

	if (FindMax("203") != 302)
		assert(false);
	
	if (FindMax("123") != 321)
		assert(false);

	if (FindMax("321") != 321)
		assert(false);
}

void CheckSpeed() {
	for (int i = 0; i < 100; ++i) {
		int min, max;
		FindMinMax("999999999", &min, &max);
	}
}

int main() {
	// Check();
	// CheckSpeed();

  freopen(PROBLEM_ID".in", "r", stdin);
  freopen(PROBLEM_ID".out", "w", stdout);
  int tests;
  cin >> tests;

  string number;
  getline(cin, number);

  for (int test_index = 0; test_index < tests; ++test_index) {
	  getline(cin, number);
      cout << "Case #" << test_index + 1 << ": " << FindMin(number) << " " << FindMax(number) << endl;
  }
  return 0;
}
