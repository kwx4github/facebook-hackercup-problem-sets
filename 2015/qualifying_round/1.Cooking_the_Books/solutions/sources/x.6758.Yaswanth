#include <cstdlib>
#include <iostream>
#include <conio.h>

using namespace std;

int findNumOfDigits(long);
long findMin(long,int);
long findMax(long,int);

int findNumOfDigits(long accountValue){
    long a = accountValue;
    int digits = 1;
    while( a > 9){
           a /= 10;
           digits++;                 
    }      
    return digits;         
}

long findMax(long accountValue, int digits){     
     int digitsInA[digits];     
     long a = accountValue;
     for(int i = digits-1 ; i >= 0 ; i--){             
             int rem = a % 10;
             digitsInA[i] = rem;             
             a /= 10;
     }
     int greatestDigit = digitsInA[digits-1];
     int greatestDigitIndex = digits-1;        
     for(int i = digits-1 ; i >= 0; i--){                           
             if(digitsInA[i] > greatestDigit && digitsInA[i] != greatestDigit){
                 greatestDigit = digitsInA[i];
                 greatestDigitIndex = i;                 
             }                          
     }     
     for(int i = 0; i < digits; i++){
             if(digitsInA[i] == greatestDigit){
                   continue;
             }else{
                   int tmp = digitsInA[i];
                   digitsInA[i] = greatestDigit;
                   digitsInA[greatestDigitIndex] = tmp;  
                   break;                 
             }
     }
     long maxValue = 0;     
     for(int i = 0; i < digits; i++){
             maxValue = (maxValue * 10) + digitsInA[i];                                       
     }                  
     return maxValue;
}

long int findMin(long int accountValue, int digits){
     int digitsInA[digits];     
     long a = accountValue;
     int ascArray[digits];     
     for(int i = digits-1 ; i >= 0 ; i--){             
             int rem = a % 10;
             digitsInA[i] = rem;
             a /= 10;
     }       
     
     int leastDigit = 10;
     int leastDigitIndex = digits-1;
     bool leastDigitZero = false;
     int leastDigitZeroIndex = digits-1;
             
     for(int i = digits-1; i >= 0; i--){                                                   
             if(digitsInA[i] < leastDigit && digitsInA[i] != leastDigit){
                             if(digitsInA[i] == 0){  
                                          if(leastDigitZero){
                                                             continue;
                                          }   
                                          leastDigitZero = true;
                                          leastDigitZeroIndex = i;
                             }else{
                                   leastDigit = digitsInA[i];
                                   leastDigitIndex = i;
                             }  
             }                                       
     }     
     for(int i = 0; i < digits; i++){             
             if(leastDigitZero && i != 0 && digitsInA[i] != 0 && leastDigitZeroIndex > i){
                                   int tmp = digitsInA[i];
                                   digitsInA[i] = 0;
                                   digitsInA[leastDigitZeroIndex] = tmp;        
                                   break; 
             }else if(digitsInA[i] != leastDigit && digitsInA[i] != 0 && leastDigitIndex > i){
                                   int tmp = digitsInA[i];
                                   digitsInA[i] = leastDigit;
                                   digitsInA[leastDigitIndex] = tmp;        
                                   break;             
             }
     }
     long minValue = 0;     
     for(int i = 0; i < digits; i++){
             minValue = (minValue * 10) + digitsInA[i];                                       
     }                  
     return minValue;          
}

int main()
{
    int count, numOfDigits;
    long int accountValues[100];
    long int minVal;
    long int maxVal;
    
    cin>>count;
    
    for(int i = 0; i < count; i++){
            cin>>accountValues[i];
    }  
    
    for(int i = 0; i < count; i++){
            
            if(accountValues[i] > 10){
                numOfDigits = findNumOfDigits(accountValues[i]);                
            }
            else{
                 numOfDigits = 1;
            }                   
            
            if(numOfDigits > 1 && accountValues[i] != 10){                                         
                minVal = findMin(accountValues[i],numOfDigits);
                maxVal = findMax(accountValues[i],numOfDigits);                   
            }
            else{
                 minVal = accountValues[i];
                 maxVal = accountValues[i];
            } 
                                
            int j = i+1;
            cout<<"Case #"<<j<<": "<<minVal<<" "<<maxVal<<endl;
    }    
    
    getch();
    return 0;
}
