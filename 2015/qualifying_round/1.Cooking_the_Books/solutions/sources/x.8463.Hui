import java.io.File;
import java.util.Arrays;
import java.util.Scanner;

public class CookBook {
	public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(new File("cooking_the_books.txt"));
		int T = sc.nextInt();
		for (int i = 0; i < T; i++) {
			String N = sc.next();
			char[] origin = N.toCharArray();
			char[] sorted = N.toCharArray();
			int length = N.length();
			Arrays.sort(sorted);
			// small
			for (int j = 0; j < length; j++) {
				if (sorted[j] == '0')
					continue;
				else {
					swap(sorted, 0, j);
					break;
				}
			}
			int j = 0;
			for (; j < length; j++) {
				if (sorted[j] != origin[j]) {
					break;
				}
			}
			if (j < length) {
				// found the small one in sorted
				// then find the one in origin
				for (int k = length - 1; k > j; k--) {
					if (origin[k] == sorted[j]) {
						// swith the current loc with a large one
						origin[k] = origin[j];
						// swith j with the small one in sorted
						origin[j] = sorted[j];
						break;
					}
				}
			}
			if (new String(origin).compareTo(N) > 0) {
				System.out.print("Case #" + (i+1) + ": " + N);
			} else {
				System.out.print("Case #" + (i+1) + ": " + new String(origin));
			}
			// large
			origin = N.toCharArray();
			sorted = N.toCharArray();
			Arrays.sort(sorted);
			for (int k = 0; k < sorted.length / 2; k++) {
				swap(sorted, k, sorted.length - 1 - k);
			}
			j = 0;
			for (; j < length; j++) {
				if (sorted[j] != origin[j]) {
					break;
				}
			}
			if (j < length) {
				for (int k = length - 1; k > j; k--) {
					if (origin[k] == sorted[j]) {
						origin[k] = origin[j];
						origin[j] = sorted[j];
						break;
					}
				}
			}
			if (new String(origin).compareTo(N) < 0) {
				System.out.println(" " + N);
			} else {
				System.out.println(" " + new String(origin));
			}
		}
	}

	private static void swap(char[] arr, int i, int j) {
		char tmp = arr[i];
		arr[i] = arr[j];
		arr[j] = tmp;
	}
}
