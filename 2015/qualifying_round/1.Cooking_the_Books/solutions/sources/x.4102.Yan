
#include <cstdio>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <list>
#include <stack>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <set>
#include <cmath>
#include <sstream>
using namespace std;

int swapDigit(int input, int firstDigit, int firstW, int secondDigit, int secondW){
    if(firstDigit<0)
        return input;
    if(firstDigit > secondDigit){
        int gap = firstDigit - secondDigit;
        return input - gap*firstW + gap*secondW;
    }
    else{
        int gap = secondDigit - firstDigit;
        return input + gap*firstW - gap*secondW;
    }
}
void getExtremes(int input, int &L, int &R){
    if(input ==0)
        return;
    int number = input, len=1,tmp,last;
    int highest = INT_MIN, lowest = INT_MAX;
    int firstDigitA = -1, firstWA, secondDigitA, secondWA; // for largest
    int firstDigitB = -1, firstWB, secondDigitB, secondWB; // for smallest
    unordered_map<int, int> mm;
    while(number){
        tmp = number%10;
        // update swap pair first
        if(tmp<highest){
            firstDigitA = tmp; // get highest
            firstWA = len;
            secondDigitA = highest;
            secondWA = mm[secondDigitA];
        }
        if(tmp>lowest){
            firstDigitB = tmp; // get lowest
            firstWB = len;
            secondDigitB = lowest;
            secondWB = mm[secondDigitB];            
        }
        // update extreme value
        if(tmp>0 && tmp<lowest) {
            lowest = tmp;
            mm[lowest] = len;
        }
        if(tmp>highest){
            highest = tmp;
            mm[highest] = len;
        }
        //cout<<"tmp: "<<tmp<<", lowest: "<<lowest<<", highest: "<<highest<<endl; 
        len*=10;
        number /=10;
    }
    R = swapDigit(input, firstDigitA, firstWA, secondDigitA, secondWA);
    L = swapDigit(input, firstDigitB, firstWB, secondDigitB, secondWB);
}

int main(int argc, char** argv) {
    freopen("cooking_the_books.txt","r",stdin);//redirects standard input
    int n, tmp;
    scanf("%d\n", &n);
    for(int i=0;i<n;i++){
        scanf("%d", &tmp);
        int L=0,R=0;
        getExtremes(tmp, L, R);
        cout<<"Case #"<<i+1<<": "<<L<<" "<<R<<endl;
    }

}