def construct_line(index, line):
    return "Case #{0}: {1} {2}\n".format(index, find_min(line), find_max(line))

def find_min(number):
    to_replace = list(number)

    lowest_digit = number[-1]
    lowest_index = 0
    for index, digit in enumerate(reversed(number)):
        if (digit < lowest_digit and digit != '0') or lowest_digit == '0':
            lowest_digit = digit
            lowest_index = index

    reversed_lowest_index = -lowest_index - 1

    for index, digit in enumerate(number):
        if digit > lowest_digit:
            if reversed_lowest_index + len(number) > index:
                to_replace[index] = lowest_digit
                to_replace[reversed_lowest_index] = digit
            break

    return ''.join(to_replace)

def find_max(number):
    to_replace = list(number)

    highest_digit = number[-1]
    highest_index = 0
    for index, digit in enumerate(reversed(number)):
        if digit > highest_digit:
            highest_digit = digit
            highest_index = index

    reversed_highest_index = -highest_index - 1

    for index, digit in enumerate(number):
        if digit < highest_digit and digit != '0':
            to_replace[index] = highest_digit
            to_replace[reversed_highest_index] = digit
            break

    return ''.join(to_replace)


f = open('input.txt')

modified_lines = []

index_to_stop = None

for index, line in enumerate(f):
    if index == 0:
        index_to_stop = int(line.strip())
    else:
        modified_lines.append(construct_line(index, line.strip()))

    if index == index_to_stop:
        break

f.close()

output = open('output.txt', 'w')

for line in modified_lines:
    output.write(line)

output.close()
