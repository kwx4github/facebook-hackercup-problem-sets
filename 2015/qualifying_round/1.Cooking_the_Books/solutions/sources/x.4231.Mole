#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX	100

char buf[MAX], min_buf[MAX], max_buf[MAX];

void swap(char *a, char *b) {
	char tmp = *a;
	*a = *b;
	*b = tmp;
}

void one_case(int t) {
	int len, i = 0, target, found, pos;
	fgets(buf, MAX, stdin);
	buf[strlen(buf)-1] = '\0';
	len = strlen(buf);
	strcpy(min_buf, buf);
	strcpy(max_buf, buf);

	printf("Case #%d: ", t+1);

	if(len == 1) {
		printf("%s %s\n", min_buf, max_buf);
		return;
	}

	// generate max value
	found = 0;
	for(target = 0; target < len-1; target++) {
		pos = target;
		for(i = target+1; i < len; i++) {
			if(max_buf[pos] < max_buf[i]) {
				pos = i;
				found = 1;
			}
		}
		if(found)
			break;
	}
	if(found)
		swap(max_buf + target, max_buf + pos);


	// generate min value
	found = 0;
	for(target = 0; target < len-1; target++) {
		pos = target;
		for(i = target+1; i < len; i++) {
			if(target == 0) {	// min value cannot be 0;
				if(min_buf[i] != '0') {
					// printf("Oops1! %d min_buf[%d]:%d min_buf[%d]:%d\n", target, pos, min_buf[pos], i, min_buf[i]);
					if(min_buf[pos] >= min_buf[i] && min_buf[i] != min_buf[target]) {
						pos = i;
						found = 1;
					}
				}
			}
			else {
				// printf("Oops2! %d min_buf[%d]:%d min_buf[%d]:%d\n", target, pos, min_buf[pos], i, min_buf[i]);
				if(min_buf[pos] >= min_buf[i] && min_buf[i] != min_buf[target]) {
					pos = i;
					found = 1;
				}
			}
		}
		// printf("target: %d; found: %d\n", target, found);
		if(found)
			break;
	}
	if(found)
		swap(min_buf + target, min_buf + pos);

	printf("%s %s\n", min_buf, max_buf);
}

int main(void) {
	int t, i;
	fgets(buf, MAX, stdin);
	sscanf(buf, "%d", &t);
	for(i = 0; i < t; i++)
		one_case(i);
	return 0;
}