using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Cooking_the_Books
{
    class Program
    {
        static void Main(string[] args)
        {
            Int32 l = 0;
            String line;
            StreamReader file = new StreamReader("E:\\Projects\\Facebook Hacker Cup 2015\\Cooking the Books\\cooking_the_books.txt");
            System.IO.StreamWriter outFile = new System.IO.StreamWriter("E:\\test.txt");
            Int32 numRows = Convert.ToInt32(file.ReadLine());
            while ((line = file.ReadLine()) != null)
            {
                l++;
                outFile.Write("Case #" + l + ": ");
                outFile.Write(smallestNumber(line));
                outFile.Write(" ");
                outFile.WriteLine(largestNumber(line));
            }
            outFile.Close();
            Console.ReadLine();
        }

        static String smallestNumber(String number)
        {
            int smallestIndex = 0;
            int smallestNumber = 10;

            for(int i = 0; i < number.Length; i++)
            {
                int currentNum = (int)Char.GetNumericValue(number[i]);
                if (currentNum <= smallestNumber && number[i] != '0')
                {
                    smallestNumber = currentNum;
                    smallestIndex = i;
                }
            }

            if (smallestIndex == 0)
            {
                return number;
            }

            String output = number[smallestIndex] + number.Substring(1, smallestIndex - 1) + number[0];
            if(smallestIndex != number.Length - 1)
            {
                output += number.Substring(smallestIndex + 1);
            }

            return  output;
        }

        static String largestNumber(String number)
        {
            int largestIndex = 0;
            int largestNumber = -1;

            for (int i = 0; i < number.Length; i++)
            {
                int currentNum = (int)Char.GetNumericValue(number[i]);
                if (currentNum >= largestNumber && number[i] != '0')
                {
                    largestNumber = currentNum;
                    largestIndex = i;
                }
            }

            if (largestIndex == 0)
            {
                return number;
            }

            String output = number[largestIndex] + number.Substring(1, largestIndex - 1) + number[0];
            if (largestIndex != number.Length - 1)
            {
                output += number.Substring(largestIndex + 1);
            }

            return output;
        }
    }
}
