package main;


import java.io.*;
import java.util.*;

/**
 * Created by felegy on 1/11/2015.
 */
class InputReader {

    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

    public long nextLong(){
        return Long.parseLong(next());
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

}
public class Solution {

    public static void main(String[] args) throws IOException {
        InputReader in = new InputReader(new FileInputStream(new File("cooking_the_books.txt")));
        BufferedWriter out = new BufferedWriter(new FileWriter(new File("output.txt")));
        long n = in.nextLong();

        for (int i = 1; i <= n; i++){
            String s = in.next();
            if (Integer.parseInt(s) < 10){
                out.write("Case #" + i + ": " + s +" "+ s);
            }else {
                out.write("Case #" + i + ": " + findSolution(s));
            }
            out.newLine();
        }
        out.close();
    }

    private static String findSolution(String x) {
        List<Integer> r = new ArrayList<Integer>();

        int[] a = getArray(x);

        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a.length; j++) {
                int[] tmp =  Arrays.copyOfRange(a, 0, a.length);
                int z = tmp[i];
                tmp[i] = tmp[j];
                tmp[j] = z;
                int nr = getNumber(tmp);
                if ( nr > 0 ) {
                    r.add(nr);
                }
            }
        }
        Collections.sort(r);
        return r.get(0)+ " " + r.get(r.size() - 1);
    }

    private static int getNumber(int[] a) {
        int x = 0;
        if (a[0] == 0){
            return -1;
        }
        for (int d : a){
            x = x * 10 + d;
        }
        return x;
    }

    private static int[] getArray(String x) {
        char[] chars = x.toCharArray();
        int[] tmp = new int[chars.length];

        for (int i = 0; i < chars.length; i++){
            tmp[i] = chars[i] - 48;
        }

        return tmp;
    }

}
