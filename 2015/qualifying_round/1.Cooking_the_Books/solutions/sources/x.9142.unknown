/**
 * @author Satyavolu Jyothi Swaroop
 *
 */
public class CookingTheBooks {

	public static void main(String[] args) {
		String [] inputArr = args;
		
		if(args.length == 0 || !isNumber(inputArr[0])) {
			System.exit(0);
		}
		
		int t = Integer.valueOf(inputArr[0]);
		int inputSize = inputArr.length - 1;
		
		inputSize = (inputSize < t) ? inputArr.length - 1 : t;
		
		for(int i=1; i<=inputSize; i++) {
			String n = inputArr[i];
			
			if(!isNumber(n)) {
				break;
			}
			
			if(Integer.valueOf(n.trim()) % 10 == 0) {
				System.out.println("Case #"+i+": "+n.trim()+" "+n.trim());
			} else {
				int [] arr = toIntegerArray(n.trim());
				int minInx = minIndexOf(arr);
				int maxInx = maxIndexOf(arr);
				
				int [] smallestNumArr = arr.clone();
				int [] largestNumArr = arr.clone();
				
				if(minInx != 0) {
					int aux = smallestNumArr[0];
					smallestNumArr[0] = smallestNumArr[minInx];
					smallestNumArr[minInx] = aux;
				}
				
				if(maxInx != 0) {
					int aux = largestNumArr[0];
					largestNumArr[0] = largestNumArr[maxInx];
					largestNumArr[maxInx] = aux;
				}
				
				System.out.println("Case #"+i+": "+concatArrayElements(smallestNumArr)+" "+concatArrayElements(largestNumArr));
			}
		}

	}
	
	private static int concatArrayElements(int [] a) {
		int i = 0;
		String number = "";
		while(i < a.length) {
			number += a[i++];
		}
		return Integer.valueOf(number);
	}
	
	
	private static int minIndexOf(int [] a) {
		int minIndex = -1;
		if(null != a && a.length != 0) {
			minIndex = 0;
			int min = a[minIndex];
			for(int i=1; i<a.length; i++) {
				if(a[i] < min) {
					minIndex = i;
					min = a[i];
				}
			}
		}
		return minIndex;
	}
	
	private static int maxIndexOf(int [] a) {
		int maxIndex = -1;
		if(null != a && a.length != 0) {
			maxIndex = 0;
			int max = a[maxIndex];
			for(int i=1; i<a.length; i++) {
				if(a[i] > max) {
					maxIndex = i;
					max = a[i];
				}
			}
		}
		return maxIndex;
	}
	
	private static int[] toIntegerArray(String literal) {
		int size = literal.length();
		int [] array = new int[size];
		int number = Integer.parseInt(literal);
		while(number != 0) {
			array[--size] = number % 10;
			number = number / 10;
		}
		return array;
	}
	
	private static boolean isNumber(String literal) {
		try {
			if(null != literal && !"".equals(literal)) {
				if(literal.length() > 1 && literal.indexOf("0") == 0) {
					return false;
				}
				Integer.valueOf(literal.trim());
				return true;
			} else {
				return false;
			}
		} catch(NumberFormatException nfex) {
			return false;
		}
	}

}
