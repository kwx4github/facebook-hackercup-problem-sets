#include<bits/stdc++.h>
using namespace std;
int ndig(int x){
  int ans=0;
  while(x){ans++;x/=10;}
  return ans;
}
vector<int> int2digs(int x){
  vector<int> ret;
  while(x){
    ret.push_back(x%10);
    x/=10;
  }
  reverse(ret.begin(),ret.end());
  return ret;
}
int digs2int(vector<int> digs){
  int x=0;
  for(int i=0;i<digs.size();i++){x*=10;x+=digs[i];}
  return x;
}
int ndigs;
int swapval(int x, int i, int j, int di, int dj){
  int ri=ndigs-1-i, rj=ndigs-1-j;
  int itoj=0, afterj=0; // digs in [i+1,j-1] and [j+1,ndigs-1] in reversed form
  for(int cnt=0;cnt<rj;cnt++){
    afterj*=10;
    afterj+=x%10;
    x/=10;
  }
  x/=10;
  for(int cnt=0;cnt<ri-rj-1;cnt++){
    itoj*=10;
    itoj+=(x%10);
    x/=10;
  }
  x/=10;
  x=x*10+di;
  for(int cnt=0;cnt<ri-rj-1;cnt++){
    x=x*10+(itoj%10);
    itoj/=10;
  }
  x=x*10+dj;
  for(int cnt=0;cnt<rj;cnt++){
    x=x*10+(afterj%10);
    afterj/=10;
  }
  return x;
}
int main(){
  int T,x;
  cin>>T;
  for(int TT=0;TT<T;TT++){
    scanf("%d",&x);
    int bestmin=x,bestmax=x;
    ndigs=ndig(x);
    vector<int> xdigs=int2digs(x);
    if(ndigs>1){
      for(int i=0;i<ndigs;i++){
	for(int j=1+i;j<ndigs;j++){
	  int tryval=swapval(x,i,j,xdigs[j],xdigs[i]);
	  if(i!=0 || xdigs[j]!=0)bestmin=min(tryval, bestmin);
	  bestmax=max(bestmax, tryval);
	}
      } 
    }
    printf("Case #%d: %d %d\n",TT+1,bestmin,bestmax);
  }
  return 0;
}
