#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

class cmp {
  public:
bool operator () (const char lhs, const char rhs) {
  if (lhs == '0') {
    return false;
  } else if (rhs == '0') {
    return true;
  } else {
    return lhs < rhs;
  }
}
};

int main() {
  int t;
  string n;
  cin >> t;

  for (int Case = 1; Case <= t; ++ Case) {
    cin >> n;
    //replace(n.begin(), n.end(), '0', (char)('9'+1));
    string n_min = n, n_max = n;
    auto max_it = max_element(n_max.rbegin(), n_max.rend());//, cmp());
    auto min_it = min_element(n_min.rbegin(), n_min.rend(), cmp());
    //cout << max_it - n_max.rbegin() << endl;
    iter_swap(max_it, n_max.begin());
    iter_swap(min_it, n_min.begin());
    //cout << n << endl;
    cout << "Case #" << Case << ": " << n_min << " " << n_max << endl;
  }

  return 0;
}
