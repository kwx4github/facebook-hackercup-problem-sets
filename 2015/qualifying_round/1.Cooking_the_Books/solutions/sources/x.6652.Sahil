/*Sahil Sondhi*/
 
#include <iostream>
#include<vector>
#include<cmath>
#include <iomanip>
#include<string>
#include<algorithm>
#include<sstream>
#include<cstdio>
#include<queue>
#include<stack>
#include<list>
#include<map>
#include<cctype>
#include<limits.h>
 
#define scan(x) scanf("%d",&x)
#define forall(i,x,n) for(int i=x;i<n;i++)
#define forl(i,x,n) for(long i=x;i<n;i++)
#define forequal(i,x,n) for(int i=x;i<=n;i++)
#define scanl(x) scanf("%ld", &x)
#define scanll(x) scanf("%lld", &x)
#define minimum(a,b) (a>=b?b:a)
#define maximum(a,b) (a<=b?b:a)
#define scanfloat(x) scanf("%f", &x)
//#define mod 1000000007
#define swap(xxx,yyy) { xxx=xxx+yyy; yyy=xxx-yyy; xxx=xxx-yyy; }
#define MAXARRAY 730000
#define gcd(a,b) __gcd(a,b)
#define LL long long
#define LD long double
//#define sqroot(x) (exp(log(x)/2)) //square root without sqrt function
//#define cbroot(x) (exp(log(x)/3)) //cube root without pow function
#define ULL unsigned long long
/*#define p(x) cout<< x ;
#define ps(x) cout<< x <<" ";
#define ps() cout<<" ";
#define pn(x) cout<< x <<endl;
#define pn() cout<<endl;
*/
#define countbits1(x) __builtin_popcount(x) //counts number of bits in a x that are 1.
 
 
using namespace std;





int main()
{

freopen("in.txt","r",stdin);
freopen("out.txt","w",stdout);

int t;
cin>>t;

forall(p,1,t+1)
	{
      int a[100];
	  LL num;
	  
	  cin>>num;
	  
	  int len=0;
	  
	  LL temp=num;
	  
	  while(temp)
	  {
		a[len++]=temp%10;
		temp=temp/10;
	  }

	  LL maxnum=num,minnum=num;
	  
		forall(i,0,len)
		 forall(j,i+1,len)
		  {
			if(a[i]!=0 && a[j]!=0)
			swap(a[i],a[j]);
			temp=0;
			LL powten=1;
			 forall(k,0,len)
			  {
				temp+= (a[k]*powten);
				powten*=10;
			  }
			maxnum=max(maxnum,temp);  
			minnum=min(minnum,temp);
			
			if(a[i]!=0 && a[j]!=0)
			swap(a[i],a[j]);
			
		  
		  }
		  
		  cout<<"Case #"<<p<<": "<<minnum<<" "<<maxnum<<endl;
		  
	  

	}	

	return 0;
}
