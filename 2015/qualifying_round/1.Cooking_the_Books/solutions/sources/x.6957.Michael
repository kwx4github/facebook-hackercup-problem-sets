# Cooking the Books

import operator
import sys

# Let f(x) be the function that finds the largest number
def f(x):
    
    if len(set(x)) == 1:
        return x
    
    numbers = [(value, index) for index, value in enumerate(x)]
    numbers = sorted(numbers, key = lambda x : (x[0], x[1]), reverse = True)
    
    y = list(x)
    for value, index in numbers:
        if index == 0:
            continue
        for i in range(index):
            if int(x[index]) > int(x[i]):
                y[index], y[i] = x[i], x[index]
                return "".join(y)
    
    return "".join(y)

# Let g(x) be the function that finds the smallest number
def g(x):
    
    if len(set(x)) == 1:
        return x
    
    numbers = [(value, index) for index, value in enumerate(x)]
    numbers = sorted(numbers, key = lambda x : (x[0], -x[1]))
    
    y = list(x)
    for value, index in numbers:
        if index == 0:
            continue
        for i in range(index):
            if i == 0 and int(x[index]) == 0:
                continue
            if int(x[index]) < int(x[i]):
                y[index], y[i] = x[i], x[index]
                return "".join(y)
                
    return "".join(y)

if __name__ == '__main__':
    
    if len(sys.argv) == 2:
        rfilename = sys.argv[1]
    else:
        rfilename = raw_input("> ")
        
    wfilename = (rfilename[:rfilename.find("input")] + "output.txt")
    
    with open(rfilename, 'r') as rfile, open(wfilename, 'w') as wfile:
        for line, content in enumerate(rfile):
            case = content.strip()
            if line == 0:
                continue
            wfile.write("Case #%d: %s %s\n" % (line, g(case), f(case)))
