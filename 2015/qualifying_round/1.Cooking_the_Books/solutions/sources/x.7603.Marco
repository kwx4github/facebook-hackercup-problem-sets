#include <iostream>
#include <stdio.h>
#include <vector>

using namespace std;

void print_min(vector<int> V, int o, int size) {
	if (o + 1 == size) {
		cout << V[o];
		return;
	}
	
	int min = o;

	for (int i = o + 1; i < size; i++) {
		if (o == 0 && V[i] == 0) continue;

		if (V[i] <= V[min]) {
			min = i;
		}
	}
	
	if (o == min || V[o] == V[min]) {
		cout << V[o];
		print_min(V, o + 1, size);
	}
	else {
		int temp = V[o];
		V[o] = V[min];
		V[min] = temp;

		for (int i = o; i < size; i++) {
			cout << V[i];
		}
	}
}

void print_max(vector<int> V, int o, int size) {
	if (o + 1 == size) {
		cout << V[o];
		return;
	}
	
	int max = o;

	for (int i = o + 1; i < size; i++) {
		if (V[i] > V[max]) {
			max = i;
		}
	}
	
	if (o == max || V[o] == V[max]) {
		cout << V[o];
		print_max(V, o + 1, size);
	}
	else {
		int temp = V[o];
		V[o] = V[max];
		V[max] = temp;

		for (int i = o; i < size; i++) {
			cout << V[i];
		}
	}
}

int main() {
	int T;
	
	cin >> T;
	getchar();
	
	for (int t = 1; t <= T; t++) {
		vector<int> min = vector<int>(10, -1);
		vector<int> max = vector<int>(10, -1);
		int L = 0;

		while (1) {
			char c = getchar();
			if (c == '\n' || c == EOF) break;
			
			min[L] = c - 48;
			max[L] = c - 48;
			L += 1;
		}
		
		cout << "Case #" << t << ": ";
		print_min(min, 0, L);
		cout << " ";
		print_max(max, 0, L);
		cout << endl;
	}
	
	return 0;
}