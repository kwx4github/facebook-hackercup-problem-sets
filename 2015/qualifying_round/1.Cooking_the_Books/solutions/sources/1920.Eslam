#include<set>
#include<map>
#include<list>
#include<iomanip>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<complex>
#include<sstream>
#include<iostream>
#include<fstream>
#include<algorithm>
#include<numeric>
#include<utility>
#include<functional>
#include<stdio.h>
#include<assert.h>
#include<memory.h>
#include<bitset>
using namespace std;

#define all(v)				((v).begin()), ((v).end())
#define sz(v)				((int)((v).size()))
#define clr(v, d)			memset(v, d, sizeof(v))
#define rep(i, v)		for(int i=0;i<sz(v);++i)
#define lp(i, n)		for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)	for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)	for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;

const double EPS = (1e-7);
int dcmp(double x, double y) {	return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;	}

#define pb					push_back
#define MP					make_pair
#define P(x)				cout<<#x<<" = { "<<x<<" }\n"
typedef long double   	  ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;

const int MAX = 100;
bool valid(int i, int j) { 	return 1;	}
char maze[MAX][MAX];
bool vis[MAX][MAX];

string maximum(string s)
{
	for(int l=0 ; l<s.size() ; l++)
	{
	ll idx=l;
	lpi(i,idx+1 , s.size())
	{
		if(s[idx]<=s[i])
			idx=i;
	}
	   if(l!=idx && s[l]!=s[idx])
	     {
	          swap(s[l],s[idx]);
	          break;
	     }
	}

	return s;
}
string minimum(string s)
{
	
	for(int l=0 ; l<s.size() ; l++)
	{
	ll idx=l;
	lpi(i,idx+1 , s.size())
	{
		if(s[idx]>=s[i] && (s[i]!='0'||l!=0))
			idx=i;
	}
	   if(l!=idx && s[l]!=s[idx])
	     {
	          swap(s[l],s[idx]);
	          break;
	     }
	}

	return s;
}
int main()
{
	freopen("cooking_the_books_example_input.txt" , "r",stdin);
	freopen("cooking_the_books_example_output.txt" , "w",stdout);
	int t; cin>>t;
	long long n;
	string mystring ,lol ,res1 , res2;
	for(int i=0;i<t; i++)
	{
	  cin>>n;
	  stringstream ss;
	  ss<<n;
	  ss>>mystring;
	  res1= minimum(mystring);
	  res2= maximum(mystring);
	  cout<<"Case #"<<i+1<<": "<<res1 <<" "<<res2;
	}
}