#include <iostream>
#include <sstream>
#include <iomanip>
#include <iosfwd>
#include <algorithm>
#include <iterator>
#include <vector>
#include <list>
#include <deque>
#include <map>
#include <set>
#include <numeric>
#include <limits>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <climits>
using namespace std;

#define MP(a,b) make_pair((a),(b))
#define FOR(i,n) for(int i = 0;i <(int)(n); i++)
#define REP(i,n,m) for(int i =(int)(n);i<(int)(m);i++)
#define MF(a,b) memset((a), (b), sizeof((a)))
typedef pair<int,int> ipair;
typedef pair<double,double> dpair;
typedef long long int64;

vector<int> int2vec(int n){
    vector<int> vec;
    while (n!=0) {
        vec.push_back(n%10);
        n=n/10;
    }
    return vec;
}

void minNum(vector<int> num){
    int len = (int)num.size();
    int minV,minPos;
    minV = 9;
    minPos = -1;
    FOR(i, len - 1)if(minV > num[i] && num[i] != 0){
        minV = num[i];
        minPos = i;
    }
    if(minV < num.back() && minPos != -1){
        swap(num[minPos], num[len-1]);
    }
    
    for(int i = len - 1; i >= 0 ;--i)cout<<num[i];
}

void maxNum(vector<int> num){
    int len = (int)num.size();
    vector<int> masks(len, 0);
    int maxV,maxPos;
    maxV = 0;
    maxPos = -1;
    FOR(i, len - 1)if(maxV < num[i]){
        maxV = num[i];
        maxPos = i;
    }
    if (maxPos != -1 && maxV > num[len - 1]) {
        masks[maxPos] = 1;
        swap(num[len - 1], num[maxPos]);
    }
    for(int i = len - 1; i >= 0 ;--i)cout<<num[i];
}

int main(int argc, const char * argv[])
{
#ifndef ONLINE_JUDGE
    freopen("//Users//lebinjiang//Project//input.txt", "r", stdin);
    freopen("//Users//lebinjiang//Project//output.txt", "w", stdout);
#endif
    std::ios::sync_with_stdio(false);
    int T;
    cin>>T;
    FOR(t, T){
        int n;
        cin>>n;
        cout<<"Case #"<<t+1<<": ";
        if (n==0) {
            cout<<"0 0";
        }else{
            vector<int> num = int2vec(n);
            minNum(num);
            cout<<" ";
            maxNum(num);

        }
        cout<<endl;
    }
    return 0;
}

