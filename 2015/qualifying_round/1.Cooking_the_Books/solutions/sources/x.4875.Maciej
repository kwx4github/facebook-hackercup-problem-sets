package com.koziel;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int cases = in.nextInt();

        for (int i = 0; i < cases; i++) {
            int number = in.nextInt();
            solve(number, i+1);
        }
    }

    private static void solve(int number, int caseNo) {
        int min = solveMin(number);
        int max = solveMax(number);

        System.out.println("Case #" + caseNo + ": " + min + " " + max);
    }

    private static int solveMin(int number) {
        String strNum = String.valueOf(number);
        char[] digits = strNum.toCharArray();

        if (digits.length < 2) return number;

        char min = Character.MAX_VALUE;
        int minIndex = digits.length-1;

        for (int i = digits.length-1; i >= 0; i--) {
            if (min > digits[i] && digits[i] != '0') {
                min = digits[i];
                minIndex = i;
            }
        }

        if (minIndex > 0) {
            char tmp = digits[0];
            digits[0] = digits[minIndex];
            digits[minIndex] = tmp;
        }

        return Integer.valueOf(String.valueOf(digits));
    }

    private static int solveMax(int number) {
        String strNum = String.valueOf(number);
        char[] digits = strNum.toCharArray();

        if (digits.length < 2) return number;

        char max = Character.MIN_VALUE;
        int maxIndex = digits.length-1;

        for (int i = 0; i < digits.length; i++) {
            if (max < digits[i] && digits[i] != '0') {
                max = digits[i];
                maxIndex = i;
            }
        }

        if (maxIndex > 0) {
            char tmp = digits[0];
            digits[0] = digits[maxIndex];
            digits[maxIndex] = tmp;
        }

        return Integer.valueOf(String.valueOf(digits));
    }
}
