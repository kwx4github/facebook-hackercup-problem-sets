#define _CRT_SECURE_NO_WARNINGS

#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <iomanip>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <list>
#include <set>
#include <tuple>
#include<iterator>
#include<numeric>
#include <utility>
using namespace std;

typedef long long ll;

const int INF = 1 << 31;
const int N = (int)1e7;
const int MODULO = (int)1e9 + 7;


void task() {
	ios_base::sync_with_stdio(0);
	int T;
	cin >> T;
	for (int k = 1; k <= T; k++) {
		string s, s1;
		cin >> s1;
		s = s1;
		cout << "Case #" << k << ": ";
		//min
		int mn = '9' + 1, pos = -1;
		for (int j = 1; j < s.length(); j++) {
			if (s[j] <= mn && s[j] != '0') {
				mn = s[j];
				pos = j;
			}
		}
		if (mn < s[0]) {
			swap(s[pos], s[0]);
		} else {
			for (int i = 1; i < s.length() - 1; i++) {
				mn = '9' + 1, pos = -1;
				for (int j = i + 1; j < s.length(); j++) {
					if (s[j] <= mn) {
						mn = s[j];
						pos = j;
					}
				}
				if (mn < s[i]) {
					swap(s[pos], s[i]);
					break;
				}
			}
		}
		cout << s << ' ';
		//max
		s = s1;
		for (int i = 0; i < s.length() - 1; i++) {
			int mx = '0' - 1, pos = -1;
			for (int j = i + 1; j < s.length(); j++) {
				if (s[j] >= mx) {
					mx = s[j];
					pos = j;
				}
			}
			if (mx > s[i]) {
				swap(s[pos], s[i]);
				break;
			}
		}
		cout << s << endl;
	}
	
	return;

}

int main() {
	/*
	freopen("input.txt", "w", stdout);
	cout << "1000000000" << endl;
	//code here

	for (int i = 1; i <= 1000000000; i++)
	cout << i << endl;
	return 0;
	// */
	freopen("nsp.in", "r", stdin);
	freopen("nsp.out", "w", stdout);
#ifdef LUNAWYLL
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	task();



	return 0;
}