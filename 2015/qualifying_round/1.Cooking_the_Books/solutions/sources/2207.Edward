def swap(n, pos1, pos2):
    '''
    pos1 < pos2
    '''
    if(len(n) == 1): return n
    return n[:pos1] + n[pos2] + n[pos1+1:pos2] + n[pos1] + n[pos2+1:]

def giveSmallLarge(n, isInitial):
    '''
    n is a string. returns a tuple of strings
    '''
    smallestDigit = "9" #last instance
    smallestDigitIndex = -1
    largestDigit = "0" #last instance
    largestDigitIndex = -1
    for index in range(len(n)):
        if(n[index] <= smallestDigit and not (isInitial and n[index] == "0")):
            smallestDigit = n[index]
            smallestDigitIndex = index
        if(n[index] >= largestDigit):
            largestDigit = n[index]
            largestDigitIndex = index
    if(n[0] == smallestDigit and len(n) > 1):
        small = n[0] + giveSmallLarge(n[1:], False)[0]
    else:
        small = swap(n, 0, int(smallestDigitIndex))
    if(n[0] == largestDigit and len(n) > 1):
        large = n[0] + giveSmallLarge(n[1:], False)[1]
    else:
        large = swap(n, 0, int(largestDigitIndex))
    return (small, large)


T = int(raw_input()) #test 0, single digit, etc
for i in range(1, T+1):
    n = raw_input()
    small, large = giveSmallLarge(n, True)
    print "Case #" + str(i) + ": " + small + " " + large
