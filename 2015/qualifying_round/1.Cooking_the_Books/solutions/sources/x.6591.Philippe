#include <cstdio>
#include <string.h>

char s[25];
char o[25];

int main() {
  freopen("in", "r", stdin);
  freopen("out", "w", stdout);
  int cases;
  scanf("%d", &cases);
  for (int c = 1; c <= cases; c++) {
    printf("Case #%d: ", c);
    unsigned long n;
    scanf("%lu", &n);
    sprintf(s, "%lu", n);
    sprintf(o, "%lu", n);

    int i = strlen(s) - 1;
    int j = i;

    while (i > 0) {
        if (s[i] == '0') {
            i -= 1;
        } else {
            break;
        }
    }


   int max_low = i, min_low = i, guess_low = i, flag_low = -1, index_low = i;
   int max_high = j, min_high = j, guess_high = j, flag_high = -1, index_high = j;
   i = strlen(s) - 1;
   j = strlen(s) - 1;

   while (i >= 0 && j >= 0) {
       if (s[i] > s[guess_low]) max_low = i, min_low = guess_low;
       if ((s[i] < s[min_low]) && s[i] != '0') guess_low = i;
       if (s[i] == '0' && flag_low == -1) flag_low = i;
       if (s[i] != '0' && i > 0) index_low = i;
       i -= 1;

       if (s[j] < s[guess_high]) min_high = j, max_high = guess_high;
       if ((s[j] > s[min_high]) && s[j] != '0') guess_high = j;
       if (s[j] == '0' && flag_high == -1) flag_high = j;
       if (s[j] != '0' && j > 0) index_high = j;
       j -= 1;
    }


   if (flag_low != -1 && max_low !=0 && max_low < flag_low){
       min_low = flag_low;
       i = index_low;
       max_low = i;
   } else if (max_low == min_low && flag_low != -1) {
       i = index_low;
       if (i < flag_low) min_low = flag_low, max_low = i;
   }

   if (flag_high != -1 && min_high !=0 && min_high > flag_high){
       max_high = flag_high;
       j = index_high;
       min_high = j;
   } else if (min_high == max_high && flag_high != -1) {
       j = index_high;
       if (j > flag_high) max_high = flag_high, min_high = j;
   }

   int v = s[min_low];
   s[min_low] = s[max_low];
   s[max_low] = v;
   if(s[0]=='0'){
       printf("%s ",o);
    }
    else {
        printf("%s ",s);
    }

    int w = o[max_high];
    o[max_high] = o[min_high];
    o[min_high] = w;
    puts(o);

  }
  return 0;
}