#include<stdio.h>

long long int get_min(long long int a[],int n)
{
	int i,x=-1,max=-1;
	for(i=0;i<n;i++)
	{
		if(a[i]>max)
		{
			max=a[i];
			x=i;
		}
	}
	long long int min=max;
	int v=x,temp;
	for(i=0;i<n-1;i++)
	{
		if(a[i]<min && a[i]!=0)
		{
			min=a[i];
			v=i;
		}
	}
	if(min<a[n-1])
	{
		temp=a[n-1];
		a[n-1]=a[v];
		a[v]=temp;
	}
	else
	{
		int p=n-1;
		while(1 && p>0)
		{
			p--;
			if(a[p]>min)
			{
				temp=a[p];
				a[p]=a[v];
				a[v]=temp;
				break;
			}
			else
			{
				min=a[0];
				v=0;
				for(i=0;i<p;i++)
				{
					if(a[i]<min)
					{
						min=a[i];
						v=i;
					}
				}
			}
		}
	}
	long long int r=0;
	int j;
	for(j=n-1;j>=0;j--)
		r=(r*10) + a[j];
	return r;
}

long long int get_max(long long int b[],int n)
{
	int i,j,max=b[0],u=0,temp;
	for(i=1;i<n-1;i++)
	{
		if(b[i]>max)
		{
			max=b[i];
			u=i;
		}
	}
	if(b[n-1]<max)
	{
	//	printf("invnn\n");
		temp=b[n-1];
		b[n-1]=b[u];
		b[u]=temp;
	}
	else
	{
		int p=n-1;
		while(1 && p>0)
		{
			p--;
			if(max>b[p])
			{
				temp=b[p];
				b[p]=b[u];
				b[u]=temp;
				break;
			}
			else
			{
				int j;
				max=b[0];
				u=0;
				for(j=0;j<p;j++)
				{
					if(b[j]>max)
					{
						max=b[j];
						u=j;
					}
				}
			}
		}
	}
	long long int s=0;
//	for(i=0;i<n;i++)
//		printf("a[i] %lld \n",b[i]);
	for(i=n-1;i>=0;i--)
		s=(s*10)+b[i];
	return s;
}

int main()
{
	int t,o=0;
	scanf("%d",&t);
	while(t--)
	{
		o++;
		long long int n,a[10],min,max,b[10];
		int i=0;
		scanf("%lld",&n);
		while(n!=0)
		{
			a[i]=n%10;
			b[i]=a[i];
			i++;
			n=n/10;
		}
		min=get_min(a,i);
		max=get_max(b,i);
		printf("Case #%d: %lld %lld\n",o,min,max);
	}
	return 0;
}