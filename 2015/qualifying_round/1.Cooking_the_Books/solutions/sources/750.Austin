import java.util.*;

public class Main
{

	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		int cases = sc.nextInt();
		

		for (int cNum = 1; cNum <= cases; cNum++)
		{
			String orig = sc.next();
			StringBuffer min = new StringBuffer(orig);
			StringBuffer max = new StringBuffer(orig);
			int[] lastMins = new int[orig.length()];
			int[] lastMaxes = new int[orig.length()];
			lastMins[orig.length()-1] = lastMaxes[orig.length()-1] = orig.length()-1;
			
			int nonZeroMin = (orig.charAt(orig.length()-1) != '0') ? orig.length()-1 : -1;
			if (orig.length() == 2 && nonZeroMin == -1)
			{
				lastMins[orig.length()-1] = -1;
			}
			
			for (int i = orig.length() - 2; i > 0; i--)
			{
				int tmp = orig.charAt(i);
				int lastMax = orig.charAt(lastMaxes[i+1]);
				int lastMin = orig.charAt(lastMins[i+1]);
				
				lastMins[i] = (tmp < lastMin) ? i : lastMins[i+1];
				lastMaxes[i] = (tmp > lastMax) ? i : lastMaxes[i+1];
				
				if (nonZeroMin == -1)
				{
					nonZeroMin = (tmp != '0') ? i : -1;
				}
				else 
				{
					nonZeroMin = (tmp < orig.charAt(nonZeroMin) && tmp != '0') ? i : nonZeroMin;
				}
				
				// if no nonzero min exists this will be -1
				if (i == 1 && lastMin == '0')
				{
					lastMins[i] = nonZeroMin;
				}
			}
			/*
			for (int i = 0; i < orig.length(); i++)
			{
				System.out.println("index: " + i + " lastMin: " + lastMins[i] + " lastMax: " + lastMaxes[i] + " nonZeroMin: " + nonZeroMin);
			}
			*/
			
			boolean maxDone = false, minDone = false;
			
			// Only happens if no nonZeroMin exists
			if (lastMins.length > 1 && lastMins[1] == -1) {
				minDone = true;
			}
			
			for (int i = 0; i <= orig.length() - 2; i++) 
			{
				if (!minDone && min.charAt(lastMins[i+1]) < min.charAt(i) )
				{
					char tmp = min.charAt(i);
					min.setCharAt(i, min.charAt(lastMins[i+1]) );
					min.setCharAt(lastMins[i+1], tmp);
					minDone = true;
				}
				
				if (!maxDone && max.charAt(lastMaxes[i+1]) > max.charAt(i) )
				{
					char tmp = max.charAt(i);
					max.setCharAt(i, max.charAt(lastMaxes[i+1]));
					max.setCharAt(lastMaxes[i+1], tmp);
					maxDone = true;
				}
			}
			
			System.out.println("Case #" + cNum + ": " + min.toString() + " " +  max.toString());
		}
	}
}

