#include <cstdio>
#include <string>
#include <algorithm>
#include <vector>
#include <iostream>

using namespace std;

string approach(string s, string goal) {
	int pos = 0;
	while (pos < (int) s.size() && s[pos] == goal[pos])
		pos++;

	if (pos < (int) s.size()) {
		char to = goal[pos];
		int orig = pos;
		while (s[pos] != to)
			pos++;
		swap(s[pos], s[orig]);
	}

	return s;
}

int main() {
	int tests;
	scanf("%d", &tests);

	for (int t = 1; t <= tests; t++) {
		string s;
		cin >> s;

		if (s == string("0")) {
			printf("Case #%d: 0 0\n", t);
			continue;
		}

		string lower = s, upper = s;

		vector < char > digs;
		for (int i = 0; i < (int) s.size(); i++)
			digs.push_back(s[i]);

		sort(digs.rbegin(), digs.rend());

		string best;
		for (int i = 0; i < (int) digs.size(); i++)
			best += digs[i];

		upper = approach(s, best);

		sort(digs.begin(), digs.end());
		int pos = 0;
		while (digs[pos] == '0')
			pos++;
		swap(digs[0], digs[pos]);

		best = "";
		for (int i = 0; i < (int) digs.size(); i++)
			best += digs[i];

		lower = approach(s, best);

		printf("Case #%d: %s %s\n", t, lower.c_str(), upper.c_str());
	}

	return 0;
}