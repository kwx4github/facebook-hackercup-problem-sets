import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Main {
	/**
         *
    */
	static boolean esValido(String a, String b){
		int cont = 0;
		for(int i = 0; i < a.length(); i++){
			if(a.charAt(i) == b.charAt(i)){
				cont++;
			}
		}
		if(cont >= a.length()-2)
			return true;
		else
			return false;
		
	}
	static void permute(int level, String permuted, boolean used[],
			String original) {
		int length = original.length();
		if (level == length) {
			if(esValido(original, permuted)){
				long ori = Long.parseLong(original);
				long per = Long.parseLong(permuted);
				max = Math.max(max, per);
				min = Math.min(min, per);
			}
		} else {
			for (int i = 0; i < length; i++) {
				if (!used[i]) {
					used[i] = true;
					permute(level + 1, permuted + original.charAt(i), used,
							original);
					used[i] = false;
				}
			}
		}
	}
	static long max;
	static long min;
	public static void main(String[] args) {
		Scanner sc = new Scanner (System.in);
		int t = sc.nextInt();
		for(int caso = 1; caso <= t; caso++){
			String s = sc.next();
			boolean used[] = new boolean[s.length()];
			Arrays.fill(used, false);
			max = Long.MIN_VALUE;
			min = Long.MAX_VALUE;
			permute(0, "", used, s);
			String ma = Long.toString(max);
			String mi = Long.toString(min);
			if(ma.length() == s.length() && mi.length() == s.length()){
				System.out.println("Case #"+caso+": "+min+" "+max);
			}else{
				if(mi.length() != s.length() && ma.length() == s.length()){
					System.out.println("Case #"+caso+": "+s+" "+max);
				}else{
					if(ma.length() != s.length() && mi.length() == s.length()){
						System.out.println("Case #"+caso+": "+min+" "+s);
					}else{
						if(ma.length() != s.length() && mi.length() != s.length()){
							System.out.println("Case #"+caso+": "+s+" "+s);
						}
					}
				}	
			}	
		}
	}
}