#include<stack>
#include<vector>
#include<iostream>
#include<string>
#include<string.h>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<vector>
#include<stdlib.h>
#include<ctype.h>
using namespace std;
// typedef struct node
// {
//     int index,height;
// }node;
// typedef struct node {
//     int open,close;
// }node;
// node a[100005];
// int sortbyopen(const void *a,const void *b) 
// {
//     node *p = (node *) a;
//     node *q = (node *) b;
//     if(p->open==q->open)
//         return p->close - q->close;
//     else 
//         return p->open - q->open;
// }    
//int search(char b[100],int i,int j)
//{
//  int mid=(i+j)/2;
//  if(strcmp(a[mid].first,b)>0)
//  {
//      return search(b,i,mid);
//      
//  }
//  else if(strcmp(a[mid].first,b)<0)
//  {
//      return search(b,mid+1,j);
//      
//  }
//  else if(strcmp(a[mid].first,b)==0)
//      return mid;
//}
// int gcd(int a,int b)
// {
//     if(a<b)
//     {
//         swap(a,b);
//     }
//     int t;
//     while(b!=0)
//     {
//         t=b;
//         b=a%b;
//         a=t;
//     }
//     return a;
// }
int gcd(int a,int b)
{
    if(a<b)
    {
        swap(a,b);
    }
    int t;
    while(b!=0)
    {
        t=b;
        b=a%b;
        a=t;
    }
    return a;
}
int main() {
    // your code goes here
    char a[1000],b[1000],c[1000];
    char min,max;
    int t,l,m;
    cin>>t;
    for (int i = 1; i <= t; ++i)
    {
        cin>>a;
        min=a[0];
        l=0;
        //min
        for(int j=1;j<strlen(a);j++)
        {
            if(a[j]<min&&a[j]!='0')
            {
                l=j;
                min=a[j];
            }
        }

        strcpy(b,a);
        swap(b[0],b[l]);


        //minax
        m=0,max=a[0];
        for(int j=strlen(a)-1;j>=1;j--)
        {
            if(a[j]>max&&a[j]!='0')
            {
                m=j;
                max=a[j];
            }
        }
        strcpy(c,a);
        swap(c[0],c[m]);

        printf("Case #%d: %s %s\n",i,b,c);
        /* code */
    }
    
}  