def highest(n)
  return n if (n == '0' || n == '')
  split_num = n.split('')
  max = split_num.max
  if n[0] == max
    return (max + highest(n[1..-1]))
  else
    max_index = 0
    split_num.each_with_index {|num, idx| max_index = idx if num == max}
    n[max_index], n[0] = n[0], n[max_index]
  end
  n
end

def lowest(n)
  return n if (n == '0' || n == '')
  split_num = n.split('')
  min = split_num.min
  if @iter == 0
    @iter += 1
    return (n[0] + lowest(n[1..-1])) if n[0] == '1'
    min = (split_num - ['0']).min if min == '0'
  end
  if n[0] == min
    return (n[0] + lowest(n[1..-1]))
  else
    min_index = 0
    split_num.each_with_index {|num, idx| min_index = idx if num == min}
    n[min_index], n[0] = n[0], n[min_index]
  end
  n
end

File.open("/Users/ajay/Downloads/cooking_the_books.txt").readlines.each_with_index do |line, idx|
  next if idx == 0	
  n = line.chomp
  @iter = 0
  print "Case ##{idx}: #{lowest(n.dup)} #{highest(n)}\n"
end