/*
PROG:Cooking the Books
LANG: C++11 
*/
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <cstdlib>
#include <climits>
#include <ctype.h>
#include <queue>
#include <stack>
#include <vector>
#include <utility>
#include <deque>
#include <set>
#include <map>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <time.h>

using namespace std;
#define mst(a,b) memset(a,b,sizeof(a))

typedef long long ll;
const int N = 100010;
const ll MOD = 1000000007;
const int INF = 0x7fffffff;

ll num;

void solve(int t){
    ll small = num, large = num;
    if(num <= 10){
        printf("Case #%d: %lld %lld\n", t, num, num);
        return;
    }
    vector<int> vec;
    while(num > 0){
        vec.push_back(num%10);
        num /= 10;
    }
    int i, j, n = vec.size(), index1,index2, maxx = 0;
    // generate large
    for(i = n-1; i >= 0; i--){
        index1 = -1;
        maxx = -1;
        for(j = i-1; j >= 0; j--){
            if(vec[j] > vec[i] && vec[j] > maxx){
                maxx = vec[j];
                index1 = j;
            }
        }
        if(index1 != -1){
            large = 0;
            index2 = i;
            swap(vec[i], vec[index1]);
        // make large
            for(i = n-1; i >= 0; i--){
                large *= 10;
                large += vec[i];
            }
            swap(vec[index1], vec[index2]);
            break;
        }
    }
    int minn;
    for(i = n-1; i >= 0; i--){
        index1 = -1; minn = 11;
        for(j = i-1; j >= 0; j--){
            if(vec[j] != 0 && vec[j] < vec[i] && vec[j] <= minn){
                index1 = j;
                minn = vec[j];
            }
        }
        if(index1 != -1){
            small = 0;
            swap(vec[i],vec[index1]);
             for(i = n-1; i >= 0; i--){
                small *= 10;
                small += vec[i];
            }
            break;
        }
    }

    printf("Case #%d: %lld %lld\n", t, small, large);

}

int main()
{
    int t;
    cin >> t;
    for(int tt = 1; tt <= t ; tt++){
        cin >> num;
        solve(tt);
    }
    return 0;
}

