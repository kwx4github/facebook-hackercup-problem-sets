#include <algorithm>
#include <cstdio>
#include <iostream>
#include <string>

using namespace std;

const int MAXP = 40;

string possible[MAXP];
int p_count;

bool isValid(const string& str) {
    return str[0] != '0';
}

string swapped(const string& str, const int i, const int j) {
    string res(str);
    
    char tmp;
    
    tmp = res[i];
    res[i] = res[j];
    res[j] = tmp;
    
    return res;
}

void solve() {
    string orig;
    cin >> orig;
    
    p_count = 0;
    
    int p = orig.length();
    string str;
    
    for (int i = 0; i < p - 1; ++i) {
        for (int j = i + 1; j < p; ++j) {
            str = swapped(orig, i, j);
            
            if (isValid(str)) {
                possible[p_count++] = str;
            }
        }
    }
    
    possible[p_count++] = orig;
    sort(possible, possible+p_count);
    cout << possible[0] << " " << possible[p_count-1] << endl;
}

int main() {
    int T;
    cin >> T;
    for (int case_num = 1; case_num <= T; ++case_num) {
        printf("Case #%d: ", case_num);
        solve();
    }

    return 0;
}