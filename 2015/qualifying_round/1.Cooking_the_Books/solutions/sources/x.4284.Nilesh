#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
#include<utility> //pair
#include<climits>
#define ll long long
using namespace std;
typedef pair<int,int> intPair;
void swap(int *a, int *b){
	int temp = *a;
	*a = *b;
	*b = temp;
}
int num(int a[], int size){
	int num = 0;
	for(int i = size-1;i>=0;i--)
		num = num*10+a[i];
	return num;
}
int main(){
	int n;
	cin>>n;
	int a;
	int copyA;
	int k = 1;
	vector<intPair> output;	
	while(k<=n){
		intPair op;
		cin>>a;
		int t[9] = {0};
		copyA = a;
		int tIndex = 0;
		while(a>0){
			t[tIndex] = a%10;
			a = a/10;
			tIndex++;	
		}
		int l[9]= {-1};
		int ind[9] = {-1};
		l[0] = -1;
		ind[0] = -1;
		for(int i = 1;i<tIndex;i++){
			if( ind[i-1]!=-1 && l[i-1]<t[i-1]) {
				l[i] = l[i-1];
				ind[i] = ind[i-1];
			} else {
				l[i] = t[i-1];
				ind[i] = i-1;
			}
		}
		int minIndex = -1;
		int subIndex = -1;
		for(int i = tIndex-1;i>=0;i--){
			if(l[i]<t[i] && ind[i]!=-1){
				minIndex = i;
				subIndex = ind[i];
				break;
			}
		}
		if(minIndex == tIndex-1 && t[subIndex] == 0){
			//cout<<"SubIndex = "<<t[subIndex]<<endl;
			int i = minIndex-1;
			subIndex = minIndex;
			while(i>=0){
				if(t[i]<t[subIndex] && t[i]!=0)
					subIndex = i;
				i--;
			}
			if(subIndex == minIndex){
				int j = minIndex;
				for(int j = minIndex-1;j>=0;j--){
					if(ind[j]!=-1 && l[j]<t[j]){
						subIndex = ind[j];
						break;
					}
				}
				if(j<0){
					minIndex = -1;
				}else{
					minIndex = j;
				}
			}
		}
		while(minIndex!=-1 && minIndex<tIndex-1 && t[minIndex] == t[minIndex+1])				minIndex++;
		while(subIndex!=-1 && subIndex>0 && t[subIndex]== t[subIndex-1])
					subIndex--;
		if(minIndex == -1)
			op.first = copyA;
		else{
			swap( &t[minIndex], &t[subIndex]);
			op.first = num(t,tIndex);
		}
		swap(&t[minIndex], &t[subIndex]);
		a = copyA;
		l[0] = -1;
		ind[0] = -1;
		for(int i = 1;i<tIndex;i++ ){
			if(t[i-1]>l[i-1]){
				l[i] = t[i-1];
				ind[i]= i-1;
			} else {
				l[i] = l[i-1];
				ind[i] = ind[i-1];
			}
		}
		int maxIndex = -1;
		subIndex = -1;
		for(int i = tIndex-1;i>=0;i--){
			if(l[i] > t[i] && ind[i]!=-1){
				maxIndex = i;
				subIndex = ind[i];
				break;
			}
		}
		//cout<<"maxIndex = "<<maxIndex<<" subIndex = "<<subIndex<<endl;
		
		while(maxIndex!=-1 && maxIndex<tIndex-1 && t[maxIndex] == t[maxIndex+1])				maxIndex++;
		while(subIndex!=-1 && subIndex>0 && t[subIndex]== t[subIndex-1])
					subIndex--;
		if(maxIndex == -1)
			op.second = copyA;
		else{
			swap( &t[maxIndex], &t[subIndex]);
			op.second = num(t,tIndex);
		}
		output.push_back(op);
		k++;
		
	}	
	for(int i = 0;i<output.size();i++)
		cout<<"Case #"<<i+1<<": "<<output[i].first<<" "<<output[i].second<<endl;
	return 0;
}		
