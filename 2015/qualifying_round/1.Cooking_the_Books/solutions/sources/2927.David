package fbhack_round1;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;

public class CookingTheBooks
{
	public static void main(String args[])
	{
		BufferedReader br = null;
		BufferedWriter bw = null;
		
		try
		{
			br = new BufferedReader(new FileReader("/Users/dogirala/Documents/workspace/fbhack_round1/files/cooking_the_books.txt"));
			bw = new BufferedWriter(new FileWriter("/Users/dogirala/Documents/workspace/fbhack_round1/files/cooking_the_books_out.txt"));

			int i, j, k;
			int t = Integer.parseInt(br.readLine());
			
			for(i = 1; i <= t; i++)
			{
				String s = br.readLine();
				int len = s.length();
				char[] ca = s.toCharArray();
				
				// Min number
				for(j = 0; j < len-1; j++)
				{
					char min = ca[j];
					int mini = j;
					
					if('0' == ca[j]) continue;
					
					for(k = j+1; k < len; k++)
					{
						if(ca[k] <= min)
						{
							if(0 == j && '0' == ca[k]) continue;
							min = ca[k];
							mini = k;
						}
					}
					
					if(min < ca[j])
					{
						char swap = ca[j];
						ca[j] = ca[mini];
						ca[mini] = swap;
						break;
					}
				}
				
				bw.write("Case #" + i + ": " + new String(ca) + " ");
				
				// Max number
				ca = s.toCharArray();
				for(j = 0; j < len-1; j++)
				{
					char max = ca[j];
					int maxi = j;
					
					for(k = j+1; k < len; k++)
					{
						if(ca[k] >= max)
						{
							max = ca[k];
							maxi = k;
						}
					}
					
					if(max > ca[j])
					{
						char swap = ca[j];
						ca[j] = ca[maxi];
						ca[maxi] = swap;
						break;
					}
				}
				
				bw.write(new String(ca));
				if(i < t) bw.write("\n");
			}
			
			br.close();
			bw.close();
		}
		catch(FileNotFoundException fne)
		{
			fne.printStackTrace();
		}
		catch(NumberFormatException nfe)
		{
			nfe.printStackTrace();
		}
		catch(IOException ioe)
		{
			ioe.printStackTrace();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
}
