/**
 * User: kh
 * Date: 09.01.15
 * Time: 10:44
 * To change this template use File | Settings | File Templates.
 */

import java.io.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;


public class ProblemSolver1
{
    public static void main(String[] args) throws IOException
    {
        if(args.length != 1)
        {
            printUsage();
            return;
        }

        ArrayList<String> inputData = null;

        File output = new File("output1.txt");
        FileWriter writer = new FileWriter(output);

        File in = new File(args[0]);
        BufferedReader rd = new BufferedReader(new FileReader(in));
        String line;
        while ((line = rd.readLine()) != null)
        {
            if(inputData == null)
            {
                inputData = new ArrayList<String>();
            }
            inputData.add(line);
        }
        List<String> outputData = handleInputData(inputData);
        for(String outputLine : outputData)
        {
            writer.append(outputLine);
            writer.flush();
        }
        rd.close();
        writer.close();

    }

    private static List<String> handleInputData(ArrayList<String> inputData)
    {
        List<String> ret = new ArrayList<String>();
        for(int i = 1; i<inputData.size(); i++)
        {
            List<Long> allSwapped = null;
            try
            {
                allSwapped = allSwapped(Long.parseLong(inputData.get(i)));
            }
            catch(NumberFormatException e)
            {
                continue;
            }
            ret.add("Case #" + i + ": " + allSwapped.get(0) + " " + allSwapped.get(allSwapped.size()-1) + "\n");
        }
        return ret;
    }

    private static void printUsage()
    {
        System.out.println("Usage: ProblemSolverMaster <INPUT_FILE_NAME>");
    }


    private static List<Long> allSwapped(long input)
    {
        ArrayList<Long> ret = new ArrayList<Long>();
        ArrayList<Long> inputDigits = getDigits(input);

        ret.add(getLongFromDigits(inputDigits));
        for(int i = 0; i<inputDigits.size(); i++)
        {
            for(int j = i+1; j<inputDigits.size();j++)
            {
                List<Long> swapped = new ArrayList<Long>(inputDigits);
                Collections.swap(swapped, i, j);
                if(swapped.get(0) == 0)
                {
                    continue;
                }
                ret.add(getLongFromDigits(swapped));
            }
        }
        Collections.sort(ret);
        return ret;
    }

    private static ArrayList<Long> getDigits(long input)
    {
        ArrayList<Long> inputDigits = new ArrayList<Long>();
        while(input > 0)
        {
            Long digit = input % 10;
            input = input/10;
            inputDigits.add(0,digit);
        }
        return inputDigits;
    }

    private static Long getLongFromDigits(List<Long> digits)
    {
        long ret = 0;
        int where = 1;
        for(int i = digits.size()-1; i >= 0; i--)
        {
            ret += digits.get(i) * where;
            where = where * 10;
        }
        return ret;
    }
}
