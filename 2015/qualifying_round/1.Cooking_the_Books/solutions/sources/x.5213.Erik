#include <iostream>
#include <fstream>

using namespace std;

int main() {
    ofstream output;
    ifstream input;
    string line;
    input.open("input.txt");
    output.
    if(input.is_open()){
        getline(input,line);

        long long numberOfCases = stoll(line);
        int counter = 1;
        while(getline(input,line) && counter <= numberOfCases) {
            int i;
            long long smallestElement = -1;
            int smallestElementIndex ;
            long long BiggestElement = -1;
            int biggestElementIndex;
            long long smallestOption = 0;
            long long biggestOption = 0;
            if (line.length() > 1) {
                for (i = 0; i < line.length(); i++) {
                    long long tmp = line[i] - '0';
                    if ( tmp > 9) {
                        continue;
                    }
                    if (smallestElement == -1) {
                        smallestElement = tmp;
                        smallestElementIndex = i;
                    } else if (tmp < smallestElement) {
                        smallestElement = tmp;
                        smallestElementIndex = i;
                    }

                    if (BiggestElement == -1) {
                        BiggestElement = tmp;
                        biggestElementIndex = i;
                    } else if (tmp > BiggestElement) {
                        BiggestElement = tmp;
                        biggestElementIndex = i;
                    }
                }
                if(biggestElementIndex == smallestElementIndex){
                    smallestOption = biggestOption = stoll(line);
                }else {
                    //smallest option
                    string Small = line;
                    string Bigg = line;
                    char smallestEl;
                    char biggestEl;
                    if (smallestElement != 0) {
                        smallestEl = line[smallestElementIndex];
                        biggestEl = line[0];
                        Small[smallestElementIndex] = biggestEl;
                        Small[0] = smallestEl;

                        smallestOption = stoll(Small);
                    } else {
                        smallestEl = line[smallestElementIndex];
                        biggestEl = line[1];
                        Small[smallestElementIndex] = biggestEl;
                        Small[1] = smallestEl;
                        smallestOption = stoll(Small);
                    }
                    //biggest option
                    if (BiggestElement != 0 && BiggestElement != ((int)line[0]-'0')){
                        smallestEl = line[0];
                        biggestEl = line[biggestElementIndex];
                        Bigg[0] = biggestEl;
                        Bigg[biggestElementIndex] = smallestEl;
                        biggestOption = stoll(Bigg);
                    }else if(BiggestElement == line[0]-'0'){
                        smallestEl = line[smallestElementIndex];
                        biggestEl = line[line.length()-1];
                        Bigg[smallestElementIndex]= biggestEl;
                        Bigg[line.length()-1]=smallestEl;
                        biggestOption = stoll(Bigg);

                    }
                }
            }else {
                smallestOption = biggestOption = line[0]-'0';
            }
            cout << "Case #"<<counter<<": " << smallestOption << " "<< biggestOption << "\n";
            counter ++;
        }
        input.close();
    }else {
        cout << "Unable to open file";
    }
    return 0;
}