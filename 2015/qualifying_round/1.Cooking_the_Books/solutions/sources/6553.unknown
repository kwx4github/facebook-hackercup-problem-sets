#include <iostream>
#include <fstream>
#include <string.h>

using namespace std;

string* numbers;


int findMax(int start,int index){
    int maxDigit=0;
    for(int i=start;i<numbers[index].length();i++){
        int digit=numbers[index].at(i)-'0';
        if(digit>=maxDigit){
            maxDigit=digit;
        }
    }
    return maxDigit;
}

int getIndex(int num,int index){
    for(int i=numbers[index].length()-1;i>=0;i--){
        if(num==numbers[index].at(i)-'0'){
            return i;
        }
    }

}

void swapMax(int index){
    int count=1;
    int maxDigit=findMax(0,index);
    int digit=numbers[index].at(0)-'0';
    while(digit==maxDigit && count<numbers[index].length()){
        maxDigit= findMax(count,index);
        digit=numbers[index].at(count)-'0';
        count++;
    }
    char tmp=numbers[index].at(count-1);
    int sw=getIndex(maxDigit, index);
    numbers[index].at(count-1)=numbers[index].at(sw);
    numbers[index].at(sw)=tmp;
}


int findMin(int start,int index){
    int minDigit=9;
    for(int i=start;i<numbers[index].length();i++){
        int digit=numbers[index].at(i)-'0';
        if(digit<=minDigit){
            minDigit=digit;
        }
    }
    return minDigit;
}

int _findMin(int start,int index){
    int minDigit=9;
    for(int i=start;i<numbers[index].length();i++){
        int digit=numbers[index].at(i)-'0';
        if(digit<=minDigit && digit!=0){
            minDigit=digit;
        }
    }
    return minDigit;
}


void swapMin(int index){
    int count=1;
    int minDigit=_findMin(0,index);
    int digit=numbers[index].at(0)-'0';
    while(digit==minDigit && count<numbers[index].length()){
        minDigit= findMin(count,index);
        digit=numbers[index].at(count)-'0';
        count++;
    }
    char tmp=numbers[index].at(count-1);
    int sw=getIndex(minDigit, index);
    numbers[index].at(count-1)=numbers[index].at(sw);
    numbers[index].at(sw)=tmp;
}




int main() {
    ifstream fin("/home/ozan/Downloads/cooking_the_books.txt");
    ofstream fout("/home/ozan/Downloads/cooking_the_books_result.txt");
    int T;
    fin>>T;
    string tmp;
    numbers = new string[T];
    for(int i=0;i<T;i++){
        fin>>numbers[i];
        tmp=numbers[i];
        swapMin(i);
        fout<<"Case #"<<(i+1)<<": "<<numbers[i]<<" ";
        numbers[i]=tmp;
        swapMax(i);
        fout<<numbers[i]<<endl;
    }



    return 0;
}