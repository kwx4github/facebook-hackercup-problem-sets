#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
//int flag=0;
int olen;
void max(char numc[], char* maxn, int* index,int len)
{
	int i;
	*maxn=numc[0];
	*index=0;
	for(i=1;i<len;i++)
	{
		if(*maxn<=numc[i] && numc[0]!=numc[i])
		{
			*maxn=numc[i];
			*index=i;
		}
	}
}
void min(char numc[], char* minn, int* index,int len)
{
	int i;
	*minn=numc[0];
	*index=0;
	for(i=1;i<len;i++)
	{
		if(*minn>=numc[i] && numc[0]!=numc[i] )
		{
			if(olen==len)
			{
				if(numc[i]!='0')
				{
					*minn=numc[i];
					*index=i;
				}
			}
			else
			{
				*minn=numc[i];
				*index=i;
			}
		}
	}
}
void swap(char numc[],int index)
{
	char temp;
	temp=numc[0];
	numc[0]=numc[index];
	numc[index]=temp;
}
int findmax(char* numc,int len)
{
	int index;
	//char numc[15];
	char maxn;
	int tempnum;
	//int p=pow(10,len-1);
	if(len==1)
		return atoi(numc);
	else
	{
		//itoa(num,numc,10);
		//snprintf(numc, 15,"%d",num); 
		//printf("%d\n",num); 
		max(numc,&maxn,&index,len);
		if(index==0)
		{
			tempnum=findmax(&numc[1],len-1);
			return atoi(numc);
		}
		else
		{
			swap(numc,index);
			return atoi(numc);
		}
	}
}
int findmin(char* numc,int len)
{
	int index;
	//char numc[15];
	char minn;
	int tempnum;
	//int p=pow(10,len-1);
	if(len==1)
		return atoi(numc);
	else
	{
		//itoa(num,numc,10);
		//snprintf(numc, 15,"%d",num); 
		//printf("%d\n",num); 
		min(numc,&minn,&index,len);
		//flag=1;
		if(index==0)
		{
			tempnum=findmin(&numc[1],len-1);
			return atoi(numc);
		}
		else
		{
			swap(numc,index);
			return atoi(numc);
		}
	}
}
int main()
{
	int T;
	int count;
	char maxnumc[15];
	char minnumc[15];
	char numc[15],numc1[15];
	int num;
	int maxnum,minnum;
	
	int len;
	scanf("%d",&T);
	for(count=1;count<=T;count++)
	{
		scanf("%s",numc);
		len=strlen(numc);
		olen=len;
		strcpy(numc1,numc);
		//num=atoi(numc);
		maxnum = findmax(numc,len);
		minnum = findmin(numc1,len);
		//printf("min=%d\n",minnum);
		//printf("max=%d\n",maxnum);
		printf("Case #%d: %d %d\n",count,minnum,maxnum);

	}
}
