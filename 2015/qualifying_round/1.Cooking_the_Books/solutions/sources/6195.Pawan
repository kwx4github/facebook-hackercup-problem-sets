#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <string>
#include <iostream>
#include <sstream>
using namespace std;

void swap(long long *a,long long i, long long j){
	long long temp;
	temp = a[i];
	a[i] = a[j];
	a[j] = temp;
}

long long GetNumberOfDigits(long long i)
{
	return i > 0 ? (long long)log10((double)i) + 1 : 1;
}

int main() {
	freopen("output.txt", "w", stdout);
	freopen("cooking_the_books.txt", "r", stdin);
	long long T; cin >> T;
	for (long long t = 0; t < T; t++){
		long long N; cin >> N;
		long long max = N, min = N;
		long long n = GetNumberOfDigits(N);
		if (n == 1) { cout << "case #" << t + 1 << ":" << N << " " << N << endl; }
		else{
			long long i = n - 1;
			long long *a = new long long[n];
			long long nn = N;
			while (nn) {
				a[i] = nn % 10;
				i--;
				nn /= 10;
			}
			//cout<<"*"<<a[0]<<a[1]<<endl;

			for (long long i = 0; i < n; i++){
				for (long long j = i + 1; j < n; j++){
					swap(a, i, j);
					//for (long long z = 0; z < n; z++){
						//cout << a[z]<<"*";
					//}
					//cout << endl;
					if (a[0] == 0) {
						swap(a, i, j); continue;
					}
					std::stringstream ss;
					for (long long k = 0; k < n; ++k)
						ss << a[k];

					int result;
					ss >> result;
					//cout << result<<endl;
					if (result <= min && !(i == 0 && j == 0)) min = result;
					if (result >= max) max = result;
					swap(a, i, j);
				}
			}
			cout << "case #" << t + 1 << ":" << min << " " << max << endl;
		}
	}

	/* Enter your code here. Read input from STDIN. Prlong long output to STDOUT */
	return 0;
}
