#include <iostream>
#include <string>
#include <cstdlib>
using namespace std;
typedef unsigned long long int LLU;
int main()
{
    int t,r,i,x=0,y=10,sIndex,bIndex,c=1;
    LLU n;
    char temp;
    cin >> t;
    while(t--)
    {
        cin >> n;
        x = 0;
        y = 10;
        string s = to_string(n);
        string s1 = to_string(n);
        int len = s.length();
        int cnt = 0;
        i = 1;
		while(i<len)
		{
			if(s[i]==s[0])
				cnt++;
			i++;
		}
		//cout << " Count " << cnt << endl;
		i=0;
        while(n > 0)
        {
           r = n % 10;
           if(r < y)
           {
           		y = r;
           		sIndex = len - i - 1;
           }
           if(r > x)
           {
           		x = r;
           		bIndex = len - i - 1;
           }
           n = n/10;
           i++;
        }
       
      // cout << sIndex << " " << s[sIndex] << endl;
       //cout << bIndex << " " << s1[bIndex] << endl;
        int flag = 1;
        i=0;
        //get bigger
        if(cnt > 0)
        {
        	while(i<len)
    		{
	        	if(s[i]!=s[bIndex] && s[bIndex]!=0)
	        	{
	        		temp = s[bIndex];
	        		s[bIndex] = s[i];
	        		s[i] = temp;
	        		flag = 0;
	        	}
	        	if(flag==0)
	        		break;
	        	i++;
	        }
        }
        else if(s[bIndex]!='0')
        {
    			 	temp = s[bIndex];
	        		s[bIndex] = s[0];
	        		s[0] = temp;
        }
        flag = 1;
       //get smaller
        i=0;
        if(cnt > 0)
        {
        	 while(i<len)
        	{
	       		//cout << s1[i] << " " << s1[bIndex] << endl;
	        	if(s1[i]!=s1[sIndex] && s1[sIndex]!=0)
	        	{
	        		temp = s1[sIndex];
	        		s1[sIndex] = s1[i];
	        		s1[i] = temp;
	        		flag = 0;
	        	}
	        	if(flag==0)
	        		break;
	        	i++;
    		 }
        }
        else if(s1[sIndex]!='0')
        {#include <iostream>
#include <string>
#include <cstdlib>
using namespace std;
typedef unsigned long long int LLU;
int main()
{
    int t,r,i,x=0,y=10,sIndex,bIndex,c=1;
    LLU n;
    char temp;
    cin >> t;
    while(t--)
    {
        cin >> n;
        x = 0;
        y = 10;
        string s = to_string(n);
        string s1 = to_string(n);
        int len = s.length();
        int cnt = 0;
        i = 1;
		while(i<len)
		{
			if(s[i]==s[0])
				cnt++;
			i++;
		}
		//cout << " Count " << cnt << endl;
		i=0;
        while(n > 0)
        {
           r = n % 10;
           if(r < y)
           {
           		y = r;
           		sIndex = len - i - 1;
           }
           if(r > x)
           {
           		x = r;
           		bIndex = len - i - 1;
           }
           n = n/10;
           i++;
        }
       
      // cout << sIndex << " " << s[sIndex] << endl;
       //cout << bIndex << " " << s1[bIndex] << endl;
        int flag = 1;
        i=0;
        //get bigger
        if(cnt > 0)
        {
        	while(i<len)
    		{
	        	if(s[i]!=s[bIndex] && s[bIndex]!='0')
	        	{
	        		temp = s[bIndex];
	        		s[bIndex] = s[i];
	        		s[i] = temp;
	        		flag = 0;
	        	}
	        	if(flag==0)
	        		break;
	        	i++;
	        }
        }
        else if(s[bIndex]!='0')
        {
    			 	temp = s[bIndex];
	        		s[bIndex] = s[0];
	        		s[0] = temp;
        }
        flag = 1;
       //get smaller
        i=0;
        if(cnt > 0)
        {
        	 while(i<len)
        	{
	       		//cout << s1[i] << " " << s1[bIndex] << endl;
	        	if(s1[i]!=s1[sIndex] && s1[sIndex]!='0')
	        	{
	        		temp = s1[sIndex];
	        		s1[sIndex] = s1[i];
	        		s1[i] = temp;
	        		flag = 0;
	        	}
	        	if(flag==0)
	        		break;
	        	i++;
    		 }
        }
        else if(s1[sIndex]!='0')
        {
        			//cout << "In small " << s1[sIndex] << " and s1[0] " << s1[0] << endl;
        			temp = s1[sIndex];
	        		s1[sIndex] = s1[0];
	        		s1[0] = temp;
        }
       
        cout << "Case #" << c++ <<" : " << s1 << " " << s << endl;
    }
    return 0;
}

        			//cout << "In small " << s1[sIndex] << " and s1[0] " << s1[0] << endl;
        			temp = s1[sIndex];
	        		s1[sIndex] = s1[0];
	        		s1[0] = temp;
        }
       
        cout << "Case #" << c++ <<" : " << s1 << " " << s << endl;
    }
    return 0;
}
