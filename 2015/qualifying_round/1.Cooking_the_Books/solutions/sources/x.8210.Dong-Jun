def makeSmall(s):
	orgs = s
	if len(s) == 1:
		return s
		
	s = map(int, list(s))
	head = s[0]		
	cand = head
	ans = 0
	for i in range(1, len(s)):
		
		if s[i] < head and s[i] != 0:
			if s[i] < cand:
			
				cand = s[i]
				ans = i
	#print cand, ans
	
	
	if cand == head:
		s = ''.join(map(str, s))
	else:
		s[0] = cand
		s[ans] = head
		s = ''.join(map(str, s))
	if s < orgs: return s
	else: return s[0] + makeSmall(s[1:])
	
		
def makeBig(s):
	#base case
	orgs = s
	if len(s) == 1:	return s
	
	s = map(int, list(s))
	head = s[0]
	
	cand = head
	ans = 0
	for i in range(1, len(s)):
		
		if s[i] > head:
			if s[i] > cand:
			
				cand = s[i]
				ans = i
	#print cand, ans
	
	
	if cand == head:
		s = ''.join(map(str, s))
	else:
		s[0] = cand
		s[ans] = head
		s = ''.join(map(str, s))
	if s > orgs: return s
	else:
		return s[0] + makeBig(s[1:])
		
inp = open('cooking_the_books2.txt', 'r')
output = open('output.txt', 'w')

n = int(inp.readline())
print n
for i in xrange(n):
	num = inp.readline().rstrip()
	print num, makeSmall(num), makeBig(num)
	ans = 'Case #' + str(i + 1) + ': ' + makeSmall(num) + ' ' + makeBig(num)+'\n'
	if i == n - 1: ans.rstrip()
	output.write(ans)
output.close()