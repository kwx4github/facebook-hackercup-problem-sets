#pragma comment(linker, ”/STACK:10000000“)

#include <string>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <cstring>
#include <numeric>
using namespace std;
typedef long long ll;
#define F0(i,n) for (int i = 0; i < n; i++)
#define F1(i,n) for (int i = 1; i <= n; i++)
#define CL(a,x) memset(x, a, sizeof(x));
#define SZ(x) ((int)x.size())
typedef pair<int,int> pii;
const double eps = 1e-10;
const int inf = 1000000009;
const int MOD = 1000000007;
int C[1005][1005]; void comb() { for (int i = 0; i <= 1000; i++) { C[i][0] = C[i][i] = 1; for (int j = 1; j < i; j++) { C[i][j] = (C[i-1][j] + C[i-1][j-1]) % MOD; } } }
ll gcd(ll x, ll y) { return y ? gcd (y,x%y) : x; }

int i, j, k, m, n, l;
ll ans;
char c;

int d[1000];


int main() {
    freopen("x.in", "r", stdin);
    freopen("a.txt", "w", stdout);

    int tn; cin >> tn; F1(tt,tn) {
        cin>>n;
        k = 0;
        int minans = n, maxans = n;
        do {
            d[k++] = n % 10;
            n /= 10;
        } while (n > 0);
        F0(i,k) F0(j,i) if (i != k-1 || d[j] != 0) {
            swap(d[i], d[j]);
            int s = 0; F0(z,k) s = s * 10 + d[k-z-1];
            swap(d[i], d[j]);
            minans = min(minans, s);
            maxans = max(maxans, s);
        }
        printf("Case #%d: %d %d\n", tt, minans, maxans);
    }

    return 0;
}
