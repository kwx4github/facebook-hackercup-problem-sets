using System.IO;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.SqlClient;

namespace FB1
{
    class Program
    {
        static void Main(string[] args)
        {
            int x;
            string insertsql;

            SqlConnection con = new SqlConnection();
            con.ConnectionString = @"Data Source=XENON\DEV2012;Initial Catalog=testdb;Integrated Security=SSPI;Pooling=False";
            string path = @"C:\Users\Arpit\Desktop\cooking_the_books.txt";
            using (StreamReader sr = new StreamReader(path))
            {
                while (sr.Peek() >= 0)
                {
                    x = Convert.ToInt32(sr.ReadLine());
                    insertsql = "insert into FB1 (amount) values (" + x + ")";
                    SqlCommand cmd1 = new SqlCommand(insertsql, con);
                    con.Open();
                    cmd1.ExecuteNonQuery();
                    con.Close();
                }
            }

            string del = "delete from FB1 where id=1";
            SqlCommand cmd2 = new SqlCommand(del, con);
            con.Open();
            cmd2.ExecuteNonQuery();
            con.Close();

            string sqlselect = "select amount from FB1";
            SqlCommand x1 = new SqlCommand(sqlselect, con);
            con.Open();
            SqlDataReader x2 = x1.ExecuteReader();
            int count = 1;
            StreamWriter stw = new StreamWriter(@"C:\Users\Arpit\Desktop\output.txt");
            while (x2.Read())
            {
                int x3 = small1(Convert.ToInt32(x2[0]));
                int x4 = big1(Convert.ToInt32(x2[0]));
                stw.WriteLine("Case #" + count + ": " + x3.ToString() + " " + x4.ToString());
                count = count + 1;
            }
            stw.Close();
        }
        public static int big1(int x)
        {
            List<int> list = new List<int>();
            int[] org;
            int n = x;
            int r;
            int q;
            while (n > 9)
            {
                r = n % 10;
                q = n / 10;
                n = q;
                list.Add(r);
            }
            list.Add(n);
            list.Reverse();
            org = list.ToArray();

            int a = list.Max();
            int m = list.LastIndexOf(a);

            if (list.First() != list.Max())
            {
                org[m] = list.First();
                org[0] = list.Max();
            }
            else
            {
                int check = 0;
                while ((list.First() == list.Max()) && (list.Count() > 2))
                {
                    list.Remove(list.First());
                    check = check+1;
                }
                if ((list.First() != 0) && (check==1))
                {
                    int g = list.First();
                    list.Clear();
                    foreach (int i in org)
                    {
                        list.Add(i);
                    }
                    int l = list.LastIndexOf(list.Max());
                    org[list.IndexOf(g)] = list.Max();
                    org[list.LastIndexOf(list.Max())] = g;
                }
            }


            int final = 0;
            for (int i = 0; i < org.Length; i++)
            {
                final += org[i] * Convert.ToInt32(Math.Pow(10, org.Length - i - 1));
            }

            return final;
        }
        public static int small1(int x)
        {
            List<int> list = new List<int>();
            int[] org;
            int n = x;
            int r;
            int q;
            while (n > 9)
            {
                r = n % 10;
                q = n / 10;
                n = q;
                list.Add(r);
            }
            list.Add(n);
            list.Reverse();
            org = list.ToArray();

            int a = list.Min();
            int m = list.LastIndexOf(a);

            if ((list.First() != list.Min()) && (list.Min() != 0))
            {
                org[m] = list.First();
                org[0] = list.Min();
            }

            int final = 0;
            for (int i = 0; i < org.Length; i++)
            {
                final += org[i] * Convert.ToInt32(Math.Pow(10, org.Length - i - 1));
            }

            return final;
        }
    }
}
