/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author Luan
 */
public class SwapNumber {

    /**
     * @param args the command line arguments
     */
    public static int numTestCases;

    public static void main(String[] args) throws FileNotFoundException, IOException {
        // TODO code application logic here
        //read num test cases
        BufferedReader bfr = new BufferedReader(new FileReader(new File("cooking_the_books.txt")));
        
        BufferedWriter bw = new BufferedWriter(new FileWriter(new File("output.txt")));
        numTestCases = Integer.valueOf(bfr.readLine().trim());
        for (int i = 1; i <= numTestCases; i++) {
            String str = bfr.readLine().trim();
            char[] digits = str.toCharArray();
            int index_max = 0, index_min = 0;
            char max = '0', min = '9';
            //find the index of max and min 
            for (int j = 0; j < digits.length; j++) {
                if (digits[j] > max) {
                    max = digits[j];
                    index_max = j;
                }
                if (digits[j] < min && digits[j] > '0') {
                    min = digits[j];
                    index_min = j;
                }
            }
            
            //print max and min
            
            char temp = digits[0];
            digits[0] = digits[index_min];
            digits[index_min] = temp;

            bw.write("Case #" + i + ": ");
            for ( int j = 0; j< digits.length; j++ ) {
                bw.write(digits[j]);
            }
            bw.write(" ");
            digits[index_min] = digits[0];
            digits[0] = temp;
            temp = digits[0];
            digits[0] = digits[index_max];
            digits[index_max] = temp;
            for(int j = 0; j< digits.length; j++){
                bw.write(digits[j]);
            }
            bw.write("\n");
        }
        bfr.close();
        bw.close();

    }

}
