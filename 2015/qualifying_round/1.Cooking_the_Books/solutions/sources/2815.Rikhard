#include <iostream>
#include <fstream>
#include <string>
using namespace std;

template <class Comp>
string get_min(string &&num, const Comp &comp) {
    for (int start = 0; start < num.length(); ++start) {
        int pos = num.length() - 1;
        int min_digit = num[pos] - '0';
        if (start == 0) {
            while (min_digit == 0 && pos > start) {
                --pos;
                min_digit = num[pos] - '0';
            }
        }
        for (int i = pos - 1; i >= start; --i) {
            int digit = num[i] - '0';
            if (start == 0) {
                if (comp(digit, min_digit) && digit != 0) pos = i, min_digit = digit;
            } else {
                if (comp(digit, min_digit)) pos = i, min_digit = digit;
            }
        }
        if (num[pos] != num[start]) {
            if (start != 0) {
                swap(num[start], num[pos]);
                return num;
            } else if (min_digit != 0) {
                swap(num[start], num[pos]);
                return num;
            }
        }
    }
    return num;
}


int main() {
    ifstream inf("input.txt");
    ofstream outf("output.txt");
    int T; inf >> T;
    for (int i = 0; i < T; ++i) {
        outf << "Case #" << i + 1 << ": ";
        int N; inf >> N;
        outf << get_min(to_string(N), less<int>()) << " ";
        outf << get_min(to_string(N), greater<int>()) << "\n";
    }
}

