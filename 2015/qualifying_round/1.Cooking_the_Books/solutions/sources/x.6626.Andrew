//Andrew Turner
//Facebook HackerCup 2015

import java.util.Scanner;
import java.util.Stack;

public class CookingTheBooks {
	
	public static String Min(String input)
	{
		if(input.length() == 1)
		{
			return input;
		}	
		int[] inputArray = new int[input.length()];	
		int number = Integer.parseInt(input); 
		Stack<Integer> sk = new Stack<Integer>();
		while (number > 0) 
		{
		    sk.push( number % 10 );
		    number = number / 10;
		}
		int k = 0;
		while (!sk.isEmpty()) 
		{
		    inputArray[k] = sk.pop();
		    k++;
		}			
		int min = input.length() - 1;
		int nextMin = min;
		for(int i = input.length() - 1; i >= 0; i--)
		{
			if(inputArray[i] < inputArray[min])
			{
				min = i;
			}
		}
			for(int i = input.length() - 1; i >= 0; i--)
			{
				if(inputArray[i] < inputArray[nextMin] && inputArray[i] != inputArray[min])
				{
					nextMin = i;
				}
				else if(inputArray[nextMin] == inputArray[min])
				{
					nextMin = i;
				}
			}
					
		int swapPt = 0;
		boolean done = false;
		while(!done)
		{
			if(inputArray[min] != inputArray[swapPt] )
			{
				done = true;	
			}
			else if(swapPt == input.length()-1)
			{
				done = true;
			}
			else
			{
				swapPt++;
			}
		}
		if(inputArray[min] == 0)
		{
			if(inputArray[0] == inputArray[nextMin])
			{
				swapPt++;
			}
			if(inputArray[swapPt] == inputArray[min])
			{
				swapPt++;
			}
			
		}
		if(swapPt >= input.length())
		{
			swapPt = input.length() - 1;
		}
		if((inputArray[min] != 0 && nextMin > min) || inputArray[min] == 0 && nextMin < min)
		{
			while(inputArray[swapPt] == inputArray[nextMin] || inputArray[swapPt] == inputArray[min])
			{
				swapPt++;
				if(swapPt == input.length())
				{
					break;
				}
			}
		}
		
		if(swapPt >= input.length())
		{
			swapPt = input.length() - 1;
		}
		
		if(swapPt > min && swapPt > nextMin)
		{
			do
			{
			if(min < nextMin)
			{
				min = nextMin;
			}
			nextMin = input.length() - 1;
			for(int i = input.length() - 1; i > min; i--)
			{
				if(inputArray[i] < inputArray[nextMin])
				{
					nextMin = i;
				}
			}
			for(int i = min; i < nextMin; i++)
			{
				if(inputArray[swapPt] < inputArray[i])
				{
					swapPt = i;
				}
			}
			if(swapPt == input.length()-1)
			{
				break;
			}
			}while((nextMin - min) <= 1);
		}
	
		//System.out.println(min +", " + nextMin);
		//System.out.println(swapPt);
		if(inputArray[swapPt] > inputArray[min] && swapPt < min)
		{
			if(inputArray[min] == 0 && swapPt == 0)
			{
				inputArray = swap(inputArray, swapPt, nextMin);
			}
			else
			{
				inputArray = swap(inputArray, swapPt, min);
			}
		}
		else if(inputArray[swapPt] > inputArray[nextMin] && swapPt < nextMin)
		{	
			inputArray = swap(inputArray, swapPt, nextMin);
		}
		
		//inputArray = swap(inputArray, swapPt, min);
		String output = "";
		for(int i = 0; i < input.length(); i++)
		{
			output += inputArray[i];
		}
		
		return output;
	}
	
	public static String Max(String input)
	{
		if(input.length() == 1)
		{
			return input;
		}	
		int[] inputArray = new int[input.length()];	
		int number = Integer.parseInt(input); 
		Stack<Integer> sk = new Stack<Integer>();
		while (number > 0) {
		    sk.push( number % 10 );
		    number = number / 10;
		}
		int k = 0;
		while (!sk.isEmpty()) {
		    inputArray[k] = sk.pop();
		    k++;
		}			
		int max = input.length() - 1;
		int nextMax = max;
		for(int i = input.length() - 1; i >= 0; i--)
		{
			if(inputArray[i] > inputArray[max])
				max = i;
		}	
		for(int i = input.length() - 1; i >= 0; i--)
		{
			if(inputArray[i] > inputArray[nextMax] && inputArray[i] != inputArray[max])
			{
				nextMax = i;
			}
			else if(inputArray[nextMax] == inputArray[max])
			{
				nextMax = i;
			}
		}
		
		//System.out.println(inputArray[max] +", " + inputArray[nextMax]);
		//System.out.println(max +", " + nextMax);
			
		int swapPt = 0;
		boolean done = false;
		while(!done)
		{
			if(inputArray[max] != inputArray[swapPt] )
			{
				done = true;
				
			}
			else if(swapPt == input.length()-1)
			{
				done = true;
			}
			else
			{
				swapPt++;
			}
		}
		
		//System.out.println(swapPt);
		if(inputArray[swapPt] < inputArray[max] && swapPt < max)
		{
			inputArray = swap(inputArray, swapPt, max);
		}
		else if(inputArray[swapPt] < inputArray[nextMax] && swapPt < nextMax)
		{		
			inputArray = swap(inputArray, swapPt, nextMax);
		}
		
		String output = "";
		for(int i = 0; i < input.length(); i++)
		{
			output += inputArray[i];
		}
		
		return output;
	}
	
	public static int[] swap(int[] input, int a, int b)
	{
		int temp;
		temp = input[a];
		input[a] = input[b];
		input[b] = temp;
		//System.out.println("swaped");
		return input;
	}

	public static void main(String[] args) {
		int T = 0;
			
		Scanner in = new Scanner(System.in);
		T = in.nextInt();
		
		if(T < 1)
		{
			T = 1;
		}
		else if(T > 100)
		{
			T = 100;
		}
		
		String[] N = new String[T];
		for(int i = 0; i < T; i++)
		{
			N[i] = in.next();	
			if(N[i].length() > 9)
			{
				N[i] = N[i].substring(0, 9);
			}
		}

		for(int i = 0; i < T; i++)
		{
			System.out.println("Case #" +(i+1)+": " + Min(N[i]) + " " + Max(N[i]));
		}
	
		in.close();
	}
}