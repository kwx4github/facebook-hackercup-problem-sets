#!/usr/bin/env python
import sys
def swap(digits, pos1, pos2):
  num = 0
  weight = 1
  for i in reversed(range(len(digits))):
    if i == pos1:
      d = digits[pos2]
    elif i == pos2:
      d = digits[pos1]
    else:
      d = digits[i]
    num = num + int(d) * weight
    weight = weight * 10
  return num

def solve(digits):
  num = int(digits)
  if len(digits) < 1:
    return (num, num)
  maxdig = -1
  mindig = 10
  maxi = -1
  mini = -1
  for i, d in enumerate(digits):
    dig = int(d)
    if dig > maxdig:
      maxdig = dig
      maxi = i
    if dig < mindig and dig != 0:
      mindig = dig
      mini = i
  maxcook = num
  mincook = num
  if maxi > 0:
    maxcook = swap(digits, maxi, 0)
  if mini > 0:
    mincook = swap(digits, mini, 0)
  return (mincook,maxcook)

if len(sys.argv) != 2:
  sys.stderr.write("Usage: %s FILE\n" %(sys.argv[0]))
  sys.exit(1)

infile = open(sys.argv[1], 'r')
cases = int(infile.readline().strip())
for i in range(cases):
    num = infile.readline().strip()
    ans = solve(num)
    print "Case #%d: %d %d" %(i + 1, ans[0], ans[1]) 
