fin = open("cooking.in", "r")
fout = open("cooking.out", "w")

cases = int(fin.readline())

def arise(l, max_index):
	l[0], l[max_index] = l[max_index], l[0]
	return l

def lie(l, min_index):
	if l[min_index] != 0:
		l[0], l[min_index] = l[min_index], l[0]
	return l

for case in xrange(cases):
	result = "Case #" + str(case + 1) + ": "
	sequence = [int(unit) for unit in list(fin.readline()) if unit != "\n"]

	max_index = min_index = 0
	maxi = 0
	mini = 999999999
	for index, number in enumerate(sequence):
		if number > maxi:
			max_index = index
			maxi = number
		if number < mini:
			min_index = index
			mini = number

	result += str("".join([str(n) for n in lie(sequence[:], min_index)])) + " "
	result += str("".join([str(n) for n in arise(sequence[:], max_index)])) + "\n"
	fout.write(result)

fout.close()
fin.close()