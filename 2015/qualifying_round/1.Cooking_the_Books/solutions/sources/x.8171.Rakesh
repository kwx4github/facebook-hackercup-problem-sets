#include <stdio.h>
#include <stdlib.h>
char *getln(FILE *fp);
int swapper(char *line,int pos1,int pos2);
int main()
{
    FILE *ifp, *ofp;
char *mode = "r";
int T,n;
char *str1=" ";
int smallloc=0,count=0;
int small=0,big=0;
ifp = fopen("in.txt", "r");

if (ifp == NULL) {
  fprintf(stderr, "Can't open input file in.txt!\n");
  getch();
}
fscanf(ifp, "%d\n", &T) ;
count = T;
ofp = fopen("out.txt", "w");
while(count>0 && strlen(str1)!=0)
{

   str1 = getln(ifp);
   small = findsmallbig(str1,"small");
   big =  findsmallbig(str1,"false");
//fprintf(ofp,"%s","asdasdsda");

 fprintf(ofp,"Case #%d: %d %d\n",T-count+1,small,big);

    count--;
}




}
 int findsmallbig(char *n,char flag[5])
 {

  int smallest=0,big=0;
   unsigned long changeloc=0;
   int i=0;
   printf("%s - ",n);
if(strlen(n)<=1)
{
    return atoi(n);
}
   if(flag=="small")
   {

           //1.find the smallest
           smallest = n[0];

            for (i = 0; n[i]!='\0'; i++) {
                if (n[i] < smallest && n[i]!='0') {
                    smallest = n[i];
                    changeloc = i;
                }
            }

    }
   else
   {
            big = n[0];

            for (i = 0; n[i]!='\0'; i++) {
                if (n[i] > big && n[i]!='0') {
                    big = n[i];
                    changeloc = i;
                }
            }

   }
   return swapper(n,0,changeloc);


 }

 char *getln(FILE *fp)
{
    char *line = NULL, *tmp = NULL;
    size_t size = 0, index = 0;
    int ch = EOF;
    int CHUNK=3;

    while (ch) {
        ch = fgetc(fp);

        /* Check if we need to stop. */
        if (ch == EOF || ch == '\n')
            ch = 0;

        /* Check if we need to expand. */
        if (size <= index) {
            size += CHUNK;
            tmp = realloc(line, size);
            if (!tmp) {
                free(line);
                line = NULL;
                break;
            }
            line = tmp;
        }

        /* Actually store the thing. */
        line[index++] = ch;
    }

    return line;
}

 int swapper(char *n,int pos1,int pos2)
 {
     char line[strlen(n)];
     strcpy(line,n);
     char temp;
     temp = line[pos1];
     line[pos1]=line[pos2];
     line[pos2] = temp;
     return atoi(line);

 }

