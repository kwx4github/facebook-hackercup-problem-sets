//============================================================================
// Name        : Facebook_hack_cup_2015_Q1.cpp
// Author      : jackson huang
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================


#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <string>
#include <vector>
#include <iostream>
#include <map>
#include <set>
#include <algorithm>
#include <queue>
#include <stack>
#include <sstream>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define all(x) x.begin() , x.end()
#define SZ(x) (int)(x.size())
#define STRLEN(x) (int)(strlen(x))
#define F0(i,n) for(i=0;i<n;i++)
#define F1(i,n) for(i=1;i<=n;i++)
ll gcd(ll x, ll y) { return y ? gcd(y, x%y) : x; }

const int maxn = 1000 ;
char line[maxn] ;
int cnt ;
int i,j,k,m,n,x,y,z;
int tt, tn;

template <class T>
void printAll(vector<T> vecs){
	for(int i = 0 ; i< SZ(vecs) ; i++){
		cout << vecs[i] << " " ;
	}
	cout << endl;
}
template <class T>
void printAll( T vecs[] , int length){
	for(int i = 0 ; i< length ; i++){
		cout << vecs[i] << " " ;
	}
	cout << endl;
}
int nCr(int n, int r) {
   if(r>n) {printf("FATAL ERROR"); return 0;}
   if(n==0 || r==0 || n==r) {
      return 1;
   } else {
      return (int)lround( ((double)n/(double)(n-r)/(double)r) * exp(lgamma(n) - lgamma(n-r) - lgamma(r)));
   }
}
int nPr(int n, int r) {
   if(r>n) {printf("FATAL ERROR"); return 0;}
   if(n==0 || r==0) {
      return 1;
   } else {
      if (n==r) {
         r = n - 1;
      }
      return (int)lround( ((double)n/(double)(n-r)) * exp(lgamma(n) - lgamma(n-r)));
   }
}

string swap(string str ,int  l , int r){
	string new_str = str;
	char c = str[l] ;

	new_str[l] = new_str[r];
	new_str[r] = c;

	return new_str;
}

void main2(){

	string str;
	cin >> str;

	int max_l = 0 , max_r = 0 , min_l = 0 , min_r = 0 ;

	for(int i = 1 ; i < str.length() ; i++){
		if(str[i] >= str[max_r]){
			max_r = i ;
		}

		if(str[i] <= str[min_r]  && str[i] != '0'){
			min_r = i ;
		}
	}

	string min_str = swap(str, min_l , min_r) ;
	string max_str = swap(str, max_l , max_r) ;


	cout << min_str << " " << max_str << endl;

}

int main() {
//	    freopen("test.in", "r", stdin);

	    freopen("cooking_the_books.txt", "r", stdin);
	    freopen("result.txt", "w", stdout);

//	    freopen("C-large-practice.in", "r", stdin);
//	    freopen("C-large.out", "w", stdout);

	    scanf("%d\n" , &tn) ;

	    F1(tt,tn) {
	    	printf("Case #%d: ", tt);
	    	main2();

	    }

	return 0;
}




