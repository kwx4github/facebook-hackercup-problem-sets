import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.InputMismatchException;



class CookingTheBooks {
	static class InputReader {
		 
		private InputStream stream;
		private byte[] buf = new byte[1024];
		private int curChar;
		private int numChars;
		private SpaceCharFilter filter;
 
		public InputReader(InputStream stream) {
			this.stream = stream;
		}
 
		public int read() {
			if (numChars == -1)
				throw new InputMismatchException();
			if (curChar >= numChars) {
				curChar = 0;
				try {
					numChars = stream.read(buf);
				} catch (IOException e) {
					throw new InputMismatchException();
				}
				if (numChars <= 0)
					return -1;
			}
			return buf[curChar++];
		}
 
		public int readInt() {
			int c = read();
			while (isSpaceChar(c))
				c = read();
			int sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = read();
			}
			int res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = read();
			} while (!isSpaceChar(c));
			return res * sgn;
		}
                
                public long readLong() {
			int c = read();
			while (isSpaceChar(c))
				c = read();
			long sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = read();
			}
			long res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = read();
			} while (!isSpaceChar(c));
			return res * sgn;
		}
 
		public String readString() {
			int c = read();
			while (isSpaceChar(c))
				c = read();
			StringBuilder res = new StringBuilder();
			do {
				res.appendCodePoint(c);
				c = read();
			} while (!isSpaceChar(c));
			return res.toString();
		}
 
		public boolean isSpaceChar(int c) {
			if (filter != null)
				return filter.isSpaceChar(c);
			return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
		}
 
		public String next() {
			return readString();
		}
 
		public interface SpaceCharFilter {
			public boolean isSpaceChar(int ch);
		}
    }
	public static void main(String[] args){
		int t;
		InputReader in= new InputReader(System.in);
		PrintWriter out = new PrintWriter(System.out);
		
		t = in.readInt();
		int count=0;
		while(t-->0){
			count+=1;
			String s = in.readString();
			String lb=s,ub=s;
			int break_flag = 0;
			for(int i=0;i<s.length();i++){
				int curr = s.charAt(i)-48;
				int smallest = s.charAt(i)-48;
				int smallest_j = i;
				for(int j=i+1;j<s.length();j++){
					int curr_j = s.charAt(j)-48;
					if(curr_j<=smallest ){
						if(i==0 &&curr_j==0){
							//System.out.println("came here");
						}
						else{
							smallest=curr_j;
							smallest_j = j;
						}
					}
				}
				if(smallest < curr){
					if(i<smallest_j){
						String start="",mid="",end="";
						if(i>0)start = s.substring(0,i);
						if(smallest_j!=i+1)mid = s.substring(i+1,smallest_j);
						if(smallest_j<s.length()-1)end = s.substring(smallest_j+1,s.length());
						lb = start + smallest + mid + curr + end;
						break;
					}
					else{
						String start="",mid="",end="";
						if(smallest_j>0)start = s.substring(0,smallest_j);
						if(i!=smallest_j+1)mid = s.substring(smallest_j+1,i);
						if(i<s.length()-1)end = s.substring(i+1,s.length());
						lb = start + smallest + mid + curr + end;
						break;
					}
				}
				
			}
			for(int i=0;i<s.length();i++){
				int curr = s.charAt(i)-48;
				int smallest = s.charAt(i)-48;
				int smallest_j = i;
				for(int j=i+1;j<s.length();j++){
					int curr_j = s.charAt(j)-48;
					if(curr_j>=smallest){
						smallest=curr_j;
						smallest_j = j;
					}
				}
				if(smallest > curr){
					if(i<smallest_j){
						String start="",mid="",end="";
						if(i>0)start = s.substring(0,i);
						if(smallest_j!=i+1)mid = s.substring(i+1,smallest_j);
						if(smallest_j<s.length()-1)end = s.substring(smallest_j+1,s.length());
						ub = start + smallest + mid + curr + end;
						break;
					}
					else{
						String start="",mid="",end="";
						if(smallest_j>0)start = s.substring(0,smallest_j);
						if(i!=smallest_j+1)mid = s.substring(smallest_j+1,i);
						if(i<s.length()-1)end = s.substring(i+1,s.length());
						ub = start + smallest + mid + curr + end;
						break;
					}
				}
				
			}
			System.out.println("Case #"+count+": "+lb+ " "+ ub);
		}
		out.flush(); out.close();
	}
}

