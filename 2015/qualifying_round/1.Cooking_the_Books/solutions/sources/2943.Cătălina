/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package hack_qualif_1;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;

/**
 *
 * @author Catalina
 */

class Number {
    char[] no_char;
    int len;

    private void switch_char(int i, int j) {
        char aux;
        aux = no_char[i];
        no_char[i] = no_char[j];
        no_char[j] = aux;

    }
    public Number(String number) {

        this.no_char = number.toCharArray();
        this.len = number.length();

        //System.out.println("original: " + String.valueOf(no_char) + " len = " + len + " array_size =  "+ no_char.length);
    }

    public String getMax() {
        if (len == 1)
            return new String(no_char);

        String max = null;
        boolean found = false;
        int i = 0;
        int j = 0;
        int max_pos = i;
        int max_digit = no_char[i];

        while (!found && i < len) {
            max_pos = i;
            max_digit = no_char[i] - '0';
            for (j = len - 1; j>i; j--) {
                if(max_digit < (no_char[j] - '0')) {
                    max_digit = no_char[j] - '0';
                    max_pos = j;
                }
            }
            if (max_pos == i)
                i++;
            else {
                found = true;
            }
        }

        //System.out.println("no_char = " + String.valueOf(no_char)+" i = " + i + " j = " + j + " found =" + found);
        //switch
        if (found)
            switch_char(i, max_pos);
        max = new String(no_char);
        //switch bac
        if (found)
            switch_char(i, max_pos);
        
        return max;
    }

    public String getMin() {
        if(len == 1)
            return new String(no_char);

        String min = null;
        boolean found = false;
        int i = 0;
        int j = 0;
        int min_pos = i;
        int min_digit = no_char[i];

        while (!found && i < len){
            min_pos = i;
            min_digit = no_char[i] - '0';
            for (j = len - 1; j>i; j--) {
                if(min_digit > (no_char[j] - '0') && ((i == 0 && no_char[j] != '0') || i != 0)) {
                    min_digit = no_char[j] - '0';
                    min_pos = j;
                }
            }
            if (min_pos == i)
                i++;
            else {
                found = true;
            }
        }

        //switch
        if (found)
            switch_char(i, min_pos);
        min = new String(no_char);
        //switch bac
        if (found)
            switch_char(i, min_pos);

        return min;

    }

    public static ArrayList<Number> readFromFile() {

        try {
            String strLine;
            FileInputStream in = new FileInputStream("input.txt");
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            ArrayList<Number> testCases = new ArrayList<Number>();

            //get no of tests
            strLine = br.readLine();
            String temp[] = strLine.split(" ");
            int testCasesNo = Integer.parseInt(temp[0]);
            //System.out.println("testCasesNo = " + testCasesNo);
            for (int testIdx = 1; testIdx <= testCasesNo; testIdx++) {
                strLine = br.readLine();
                Number testCase = new Number(strLine);
                testCases.add(testCase);
            }
            return testCases;
        } catch (IOException e) {
            System.out.println(e);
        }
        return null;
    }


        public static void writeToFile(ArrayList<String> labels) {
        PrintWriter printWriter = null;
        try {
            printWriter = new PrintWriter("output.txt");
            for (int i = 1; i <= labels.size(); i++) {
                printWriter.print("Case #" + i + ": " + labels.get(i - 1) + "\n");
            }
            printWriter.close();
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } finally {
            printWriter.close();
        }
    }
}

public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        ArrayList<Number> testCases = Number.readFromFile();
        ArrayList<String> results = new ArrayList<String>();
        for (int i = 0; i < testCases.size(); i++) {
            String result = testCases.get(i).getMin() + " " + testCases.get(i).getMax();
            results.add(result);
        }
        Number.writeToFile(results);
    }

}
