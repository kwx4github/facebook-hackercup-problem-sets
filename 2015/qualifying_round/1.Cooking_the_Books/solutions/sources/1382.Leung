#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <cmath>
#include <iostream>
#include <set>
#include <fstream>
#include <string>
#include <vector>

using namespace std;
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s); i>=(e); i--)
#define LL long long
#define eps 1e-6
#define pi acos(-1.0)
#define fail {printf("Impossible\n"); return 0;}
LL max(LL a,LL b){if (a>b){return a;} else {return b;}}
LL min(LL a,LL b){if (a<b){return a;} else {return b;}}

struct P{
    double x, y;
    P(){}
    P(double x, double y):x(x) , y(y){}
    P operator+ (const P &a) const {return P(x+a.x, y+a.y);}
    P operator- (const P &a) const {return P(x-a.x, y-a.y);}
    double operator^ (const P &a) const {return x*a.x+y*a.y;}
    void in(){scanf("%lf%lf", &x, &y);}
    void out(){printf("REQUIRED %.7f %.7f\n", x, y);}
    double dist(P a, P b) {return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}
    double sqdist(P a, P b) {return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);}

};

#define N 300001
#define M 1000001



void solve(int tc){
    printf("Case #%d: ", tc);
    string w;
    cin>>w;
    if (w.length() == 1){
        cout<<w<<" "<<w<<endl;
        return;
    }

    string sma = w;
    int n = w.length();
    FOR(i, 0, n) FOR(j, 0, n - 1){
        if (sma[j] > sma[j+1]){
            char temp = sma[j]; sma[j] = sma[j+1]; sma[j+1] = temp;
        }
    }
    if (sma[0] == '0'){
        int id = 0;
        while (sma[id] == '0') id++;
        char temp = sma[id]; sma[id] = sma[0]; sma[0] = temp;
    }
    int dif = -1;
    string ans1 = w;
    FOD(i, n-1, 0) if (sma[i] != w[i]) dif = i;
    if (dif != -1){
        int tiny = 10, pos;
        FOR(i, dif, n){
            if ((int)(w[i] - '0') <= tiny && (w[i] != '0' || dif != 0)){
                tiny = (int)(w[i] - '0');
                pos = i;
            }
        }
        char temp = ans1[pos];
        ans1[pos] = ans1[dif];
        ans1[dif] = temp;
    }
    cout<<ans1<<" ";
    string lar = w;
    FOR(i, 0, n) FOR(j, 0, n - 1){
        if (lar[j] < lar[j+1]){
            char temp = lar[j]; lar[j] = lar[j+1]; lar[j+1] = temp;
        }
    }
    dif = -1;
    string ans2 = w;
    FOD(i, n-1, 0) if (lar[i] != w[i]) dif = i;
    if (dif != -1){
        int big = 0, pos;
        FOR(i, dif, n){
            if ((int)(w[i] - '0') >= big){
                big = (int)(w[i] - '0');
                pos = i;
            }
        }
        char temp = ans2[pos];
        ans2[pos] = ans2[dif];
        ans2[dif] = temp;
    }
    cout<<ans2<<endl;
}

int main(){
freopen("FB_A.txt", "r", stdin);
freopen("out.ans", "w", stdout);
    int t;
    scanf("%d", &t);
    FOE(i, 1, t) solve(i);
    return 0;
}
