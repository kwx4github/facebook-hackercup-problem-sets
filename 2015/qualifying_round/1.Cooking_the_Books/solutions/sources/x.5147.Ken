#!/usr/bin/env python

def swap_then_to_int(in_list, x, y):
    if x == y:
        tmp_list = in_list
    else:
        tmp_list = [in_list[x] if i == y else in_list[y] if i == x else in_list[i] for i in range(len(in_list))]
    return int(''.join([str(m) for m in tmp_list]))

if __name__ == '__main__':
    no_of_tests = int(raw_input())

    for test_case_id in range(1, no_of_tests+1):
        num_digit_list = [int(x) for x in list(raw_input())]
        be_swapped_max_idx = to_swapped_max_idx = 0
        be_swapped_min_idx = to_swapped_min_idx = 0

        # find max
        for x in range(len(num_digit_list)):
            max_d = max(num_digit_list[x:])
            if max_d == num_digit_list[x]:
                continue
            submax_idx_list = [m for m in range(x+1, len(num_digit_list)) if num_digit_list[m] == max_d]
            be_swapped_max_idx, to_swapped_max_idx = x, submax_idx_list[-1]
            break

        # find min
        for y in range(len(num_digit_list)):
            if num_digit_list[y] == 0:
                continue
            tmp_list = num_digit_list[y:]
            min_d = min([m for m in tmp_list if m != 0])
            has_0 = True if 0 in tmp_list else False
            if min_d == num_digit_list[y]:
                continue
            if y != 0:
                if has_0:
                    submin_idx_list = [m for m in range(y+1, len(num_digit_list)) if num_digit_list[m] == 0]
                    be_swapped_min_idx, to_swapped_min_idx = y, submin_idx_list[-1]
                else:
                    submin_idx_list = [m for m in range(y+1, len(num_digit_list)) if num_digit_list[m] == min_d]
                    be_swapped_min_idx, to_swapped_min_idx = y, submin_idx_list[-1]
            else:
                    submin_idx_list = [m for m in range(y+1, len(num_digit_list)) if num_digit_list[m] == min_d]
                    be_swapped_min_idx, to_swapped_min_idx = y, submin_idx_list[-1]
            break
        print "Case #%d: %d %d" % (test_case_id, swap_then_to_int(num_digit_list, be_swapped_min_idx, to_swapped_min_idx), swap_then_to_int(num_digit_list, be_swapped_max_idx, to_swapped_max_idx))
