#include <bits/stdc++.h>
using namespace std;

ifstream in("cooking_the_books_example_input.txt");
ofstream out("fbhackercup1.txt");
vector<int> num1 ; 
vector<int> num2 ; 

void printnum(vector<int> n)
{
    for(int i = n.size()-1; i > -1 ; i--)
        out << n[i] ;
}

void swap(bool vect,int a,int b)
{
    if(vect == false)
    {
        int digit = num1[a] ;
        num1[a]  = num1[b];
        num1[b] = digit ; 
    }
    else
    {
        int digit = num2[a] ;
        num2[a]  = num2[b];
        num2[b] = digit ;
    }
}

int main()
{
    int t;
    in >> t ;
    unsigned long long int a;
    int max_index,min_index,digit,if_zero;
    for(int  i = 0 ; i < t ; i++ )
    {
        in >> a ;
        if(a == 0)
        {
            out << "Case #" << i+1 << ": " << 0 << " " << 0 << endl ;
            continue;
        }
        while(a != 0)
        {
            digit = a%10 ; 
            num1.push_back(digit);
            num2.push_back(digit);
            a = a/10 ; 
        }
        min_index = num1.size() -1;
        max_index = num1.size() -1;
        if_zero = -1 ;
        for(int j = 0 ; j < num1.size() ;j++)
        {
            if(num1[j] < num1[min_index] && num1[j] > 0)
                min_index = j ; 
            else if(num1[j] > num1[max_index])
                max_index = j ;
        }
        
        out << "Case #" << i+1 <<": ";
        if(num1[min_index] == num1[num1.size()-1])
        {
            for(int j = 0 ; j < num1.size() ; j++)
                if(num1[j] == 0)
                {
                    if_zero =  j ;
                    break ;
                }
            if(if_zero != -1)
                swap(0,if_zero,num1.size()-2);
        }
        else
            swap(0,min_index,num1.size()-1);
        printnum(num1);

        if(num2[max_index] == num2[num2.size()-1])
        {
            for(int j = num2.size()-2 ; j > -1 ; j--)
            {
                if(num2[j] < num2[num2.size()-1])
                {
                    int max = num2[j] ; 
                    int max_ind = j; 
                    for(int k = j-1 ; k > -1 ; k-- )
                        if(num2[k] >= max )
                        {
                            max = num2[k]; max_ind = k ; 
                        }
                    if(max > num2[j])
                    {   
                        swap(1,max_ind,j); 
                        break;
                    }
                }

            }
        }
        else
            swap(1,max_index,num2.size()-1);
        out << " ";
        printnum(num2); out << endl ;
        num1.clear();
        num2.clear();
    }
    return 0 ;
}