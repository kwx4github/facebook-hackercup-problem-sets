/*
Try Try & Try until you solve the problem...
Nothing is impossible for the problem solvers... :)
*/
/*

*/
#include <iostream>
#include <string>
#include <cstring>
#include <sstream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <utility>
#include <numeric>

#include <cmath>
#include <cstdio>

#define IP(n) for(i=0;i<n;i++)
#define JP(n) for(j=0;j<n;j++)
#define KP(n) for(k=0;k<n;k++)

#define vi vector<int>
#define vi2 vector<vector<int>>
#define vs vector<string>

#define pb push_back
#define TC int t,check=1;cin>>t;while(check<=t)
#define FORIT(i,m) for(__typeof((m).begin()) i=(m).begin();i!=(m).end();i++)
#define ms(x,a) memset(x,a,sizeof(x))
#define read(a) freopen(a,"r",stdin)
#define write(a) freopen(a,"w",stdout)

using namespace std;

string str,mn,mx,tmp;

void swap(int i,int j)
{
    char ch=tmp[i];
    tmp[i]=tmp[j];
    tmp[j]=ch;
}

void solveIt()
{
    if(str.size()==1)
    {
        mn=str,mx=str;
    }

    int sz=str.size();

    vector<string> v;
    v.pb(str);

    for(int i=0;i<sz;i++)
    {
        for(int j=i+1;j<sz;j++)
        {
            tmp=str;
            swap(i,j);

            if(tmp[0]!='0')
            v.pb(tmp);
        }
    }

    mn=*min_element(v.begin(),v.end());
    mx=*max_element(v.begin(),v.end());
}

int main()
{
    //read("a_in.txt");
    //write("a_out.txt");

    int t,check=1;
    cin>>t;
    while(t--)
    {
        cin>>str;

        solveIt();

        cout<<"Case #"<<check++<<": "<<mn<<" "<<mx<<endl;
    }

    return 0;
}
