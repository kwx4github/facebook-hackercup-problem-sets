#include <map>
#include <set>
#include <cmath>
#include <queue>
#include <stack>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

#define PB push_back
#define MP make_pair

typedef double DB;
typedef long long LL;
typedef pair <int, int> PI;

const DB eps = 1e-8;
const int N = 1e5 + 7;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;

char s[100], t[100];

int Gao(char *s, int i, int j){
    int n = strlen(s);
    for (int k = 0; k < n; k++)
    if (k == i) t[k] = s[j]; else if (k == j) t[k] = s[i]; else t[k] = s[k];
    if (t[0] == '0') return -1;
    int ret = 0;
    for (int k = 0; k < n; k++)
        ret = ret * 10 + (t[k] - '0');
    return ret;
}

int main(){
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    int CAS;
    scanf("%d", &CAS);
    for (int cas = 1; cas <= CAS; cas++){
        scanf("%s", &s);
        int n = strlen(s);
        if (n == 1 && s[0] == '0'){
            printf("Case #%d: %d %d\n", cas, 0, 0);
            continue;
        }
        int mx = Gao(s, 0, 0), mn = Gao(s, 0, 0);
        for (int i = 0; i < n; i++)
        for (int j = i + 1; j < n; j++){
            int t = Gao(s, i, j);
            if (t == -1) continue;
            mx = max(mx, t);
            mn = min(mn, t);
        }
        printf("Case #%d: %d %d\n", cas, mn, mx);
    }
}



