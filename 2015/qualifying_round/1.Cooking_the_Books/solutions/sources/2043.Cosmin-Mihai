#include <cstdio>
#include <vector>
#include <algorithm>
#define infile "cooking.in"
#define outfile "cooking.out"

using namespace std;

vector <int> intToVector(int x) {
    vector<int> v;

    while(x) {
        v.push_back(x%10);
        x /= 10;
    }

    return v;
}

int vectorToInt(vector<int> v) {
    int x = 0;

    for (int i = v.size() - 1; i >= 0; --i) {
        x *= 10;
        x += v[i];
    }

    return x;
}

int smallest(int x) {
    vector <int> v = intToVector(x);
    int best = x;

    for (size_t i = 0; i < v.size(); ++i) {
        for (size_t j = i + 1; j < v.size(); ++j) {
            swap(v[i], v[j]);
            if (v[v.size() - 1] != 0) {
                best = min(best, vectorToInt(v));
            }
            swap(v[i], v[j]);
        }
    }

    return best;
}

int highest(int x) {
    vector <int> v = intToVector(x);
    int best = x;

    for (size_t i = 0; i < v.size(); ++i) {
        for (size_t j = i + 1; j < v.size(); ++j) {
            swap(v[i], v[j]);
            if (v[v.size() - 1] != 0) {
                best = max(best, vectorToInt(v));
            }
            swap(v[i], v[j]);
        }
    }

    return best;
}

int main() {
    freopen(infile, "r", stdin);
    freopen(outfile, "w", stdout);

    int t;
    scanf("%d", &t);

    for (int i = 0; i < t; ++i) {
        int x;
        scanf("%d", &x);
        printf("Case #%d: %d %d\n", i+1, smallest(x), highest(x));
    }

    fclose(stdin);
    fclose(stdout);
    return 0;
}
