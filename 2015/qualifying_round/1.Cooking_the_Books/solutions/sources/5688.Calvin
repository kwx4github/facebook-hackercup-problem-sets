import itertools
T = int(raw_input())

def swap(s, i, j):
    if (i== j): return s
    return s[:i] + s[j] + s[i+1: j] + s[i] + s[j+1:]

def ans(s):
    if (s=='0'): return '0', '0'
    mi = min(swap(s, i, j) for i,j in itertools.combinations_with_replacement(xrange(len(s)), 2) if swap(s, i, j)[0] !='0')
    ma = max(swap(s, i, j) for i,j in itertools.combinations_with_replacement(xrange(len(s)), 2) if swap(s, i, j)[0] !='0')
    return mi, ma
def adjusted(s):
    if s == '0': return s
    chars = list(s)
    leading_char = min(i for i in chars if i != '0')
    chars.remove(leading_char)
    return leading_char + ''.join(sorted(chars))

for i in range(T):
    tt = raw_input()
    print "Case #%d: %s %s" % ((i+1,) + ans(tt)) 

