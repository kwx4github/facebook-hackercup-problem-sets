#include<iostream>
#include<sstream>
#include<string>
#include<cstdlib>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<cmath>
#include<cctype>
#include<set>
#include<bitset>
#include<algorithm>
#include<list>

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<ctype.h>

using namespace std;
#define print1(a)    cout<<a<<endl
#define print2(a,b) cout<<a<<" "<<b<<endl
#define print3(a,b,c) cout<<a<<" "<<b<<" "<<c<<endl
#define oo          (1<<30)
#define PI          3.141592653589793
#define pi          (2.0*acos(0.0))
#define ERR         1e-5
#define PRE         1e-8
#define SZ(s)       ((long long)s.size())
#define LL          long long
#define ISS         istringstream
#define OSS         ostringstream
#define VS          vector<string>
#define VI          vector<long long>
#define VD          vector<double>
#define VLL         vector<long long>
#define SII         set<long long>::iterator
#define SI          set<long long>
#define mem(a,b)    memset(a,b,sizeof(a))
#define fr(i,a,b)   for(i=a;i<=b;i++)
#define frn(i,a,b)  for(i=a;i>=b;i--)
#define fri(a,b)    for(i=a;i<=b;i++)
#define frin(a,b)   for(i=a;i>=b;i--)
#define frj(a,b)    for(j=a;j<=b;j++)
#define frjn(a,b)   for(j=a;j>=b;j--)
#define frk(a,b)    for(k=a;k<=b;k++)
#define frkn(a,b)   for(k=a;k>=b;k--)
#define frl(a,b)    for(l=a;l<=b;l++)
#define frln(a,b)   for(l=a;l>=b;l--)
#define REP(i,n)    for(i=0;i<n;i++)
#define EQ(a,b)     (fabs(a-b)<ERR)
#define all(a,b,c)  for(long long I=0;I<b;I++)    a[I] = c
#define CROSS(a,b,c,d) ((b.x-a.x)*(d.y-c.y)-(d.x-c.x)*(b.y-a.y))
#define sqr(a)      ((a)*(a))
#define FORE(i,a)   for(typeof((a).begin())i=(a).begin();i!=(a).end();i++)
#define typing(j,b) typeof((b).begin()) j=(b).begin();
#define BE(a)       a.begin(),a.end()
#define rev(a)      reverse(BE(a));
#define sorta(a)    sort(BE(a))
#define pb          push_back
#define popb        pop_back
#define mp          make_pair
#define round(i,a)  i = ( a < 0 ) ? a - 0.5 : a + 0.5;
#define makelong long(n,s)  istringstream(s)>>n
#define inpow(a,x,y) long long i; a=x;fri(2,y)  a*=x
#define cntbit(mask) __builtin_popcountll(mask)
//0 based print
#define debug_array(a,n) for(long long i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define debug_matrix(mat,row,col) for(long long i=0;i<row;i++) {for(long long j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}

#define csprnt printf("Case %d: ", ++cas);
#define mod         1000000007
#define eulerconstant 0.5772156649

template<class T1> void debug(T1 e){cout<<e<<endl;}
template<class T1,class T2> void debug(T1 e1,T2 e2){cout<<e1<<"\t"<<e2<<endl;}
template<class T1,class T2,class T3> void debug(T1 e1,T2 e2,T3 e3){cout<<e1<<"\t"<<e2<<"\t"<<e3<<endl;}
template<class T1,class T2,class T3,class T4> void debug(T1 e1,T2 e2,T3 e3,T4 e4){cout<<e1<<"\t"<<e2<<"\t"<<e3<<"\t"<<e4<<endl;}
template<class T1,class T2,class T3,class T4,class T5> void debug(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5){cout<<e1<<"\t"<<e2<<"\t"<<e3<<"\t"<<e4<<"\t"<<e5<<endl;}
template<class T1,class T2,class T3,class T4,class T5,class T6> void debug(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5,T6 e6){cout<<e1<<"\t"<<e2<<"\t"<<e3<<"\t"<<e4<<"\t"<<e5<<"\t"<<e6<<endl;}
template<class T> void debug(vector< vector<T> > e,long long row,long long col){long long i,j;REP(i,row) {REP(j,col) cout<<e[i][j]<<" ";cout<<endl;} cout<<endl;}
template<class T> void debug(vector< basic_string<T> > e,long long row,long long col){long long i,j;REP(i,row) {REP(j,col) cout<<e[i][j];cout<<endl;} cout<<endl;}
template<class T> void debug(T e[110][110],long long row,long long col){long long i,j;REP(i,row) {REP(j,col) cout<<e[i][j]<<" ";cout<<endl;}}
template<class T> string toString(T n){ostringstream oss;oss<<n;oss.flush();return oss.str();}
long long toint(string s){long long r=0;istringstream sin(s);sin>>r;return r;}
bool isVowel(char ch){ch=tolower(ch);if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u')return true;return false;}
bool isUpper(char c){return c>='A' && c<='Z';}
bool isLower(char c){return c>='a' && c<='z';}
/***************************************************code starts from here*************************************************************************************************/

int main()
{
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int tCase,nCase;
    cin>>tCase;
    fr(nCase,1,tCase)
    {
        char num[10];
        cin>>num;
        int len=strlen(num);
        len--;
        int maximum=num[0];
        int minimum=num[0];
        int minPos=0,maxPos=0;
        int i;
        char temp[10];
        mem(temp,'\0');
        fr(i,0,len)
            temp[i]=num[i];
        //cout<<temp<<endl;
        sort(num,num+len+1);
        //cout<<num[0]<<endl;
        int j;
        cout<<"Case #"<<nCase<<": ";
        int flag=0;
        fr(i,0,len)
        {
            j=i;
            flag=0;
            while(j<=len && flag==0)
            {
                //printf("%c %c\n",num[j],temp[i]);
                if(num[j]>=temp[i])
                {
                    //cout<<"1\n";
                    break;
                }
                else if(num[j]<temp[i])
                {
                    //cout<<"2\n";
                    //cout<<num[j]<<" "<<i<<endl;
                    if(num[j]=='0' && i==0)
                    {
                        //cout<<"3\n";
                        //printf("%c %c\n",num[j],temp[i]);
                    }
                    else
                    {
                        //cout<<"4\n";
                        minPos=i;
                        maxPos=j;
                        flag=1;
                        break;
                    }
                }
                j++;
            }
            if(flag==1)
                break;
        }
        if(flag==1)
        {
            minimum=num[maxPos];
        frn(i,len,0)
        {
            if(temp[i]==minimum)
            {
                maxPos=i;
                break;
            }
        }
        //cout<<minPos<<" "<<maxPos<<endl;
        swap(temp[minPos],temp[maxPos]);
        }
        cout<<temp<<" ";
        if(flag==1)
            swap(temp[minPos],temp[maxPos]);

        fr(i,0,len)
        {
            j=len-i;
            flag=0;
            while(j>=0 && flag==0)
            {
                //printf("%c %c\n",num[j],temp[i]);
                if(num[j]<=temp[i])
                    break;
                else if(num[j]>temp[i])
                {
                    minPos=i;
                    maxPos=j;
                    flag=1;
                    break;
                }
                j--;
            }
            if(flag==1)
                break;
        }
        if(flag==1)
        {

        maximum=num[maxPos];
        frn(i,len,0)
        {
            if(temp[i]==maximum)
            {
                maxPos=i;
                break;
            }
        }
        }
        //cout<<minPos<<" "<<maxPos<<endl;
        swap(temp[minPos],temp[maxPos]);
        cout<<temp<<endl;
    }

    return 0;
}

