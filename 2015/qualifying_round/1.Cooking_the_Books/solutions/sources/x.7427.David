#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <string>
 
using namespace std;

void swap(char *a, char *b, bool *fail){
	char temp;
	
	if(*a!=*b){
		temp=*a;
		*a=*b;
		*b=temp;
		*fail=false;
	}
}

//Will never return 0
int IdxMin(string N, int a){
	int min;
	int lastidx, minidx;
	int i;
	
	lastidx= N.length()-1;
	min=N[a]; minidx=a;
	for (i=lastidx; i>=a; i--){
		if(N[i]<min){
			minidx=i;
			min= N[i];
		}
		if(min=='1'){
			break;
		}
	}
	return minidx;
}

int IdxMax(string N, int a){
	int max;
	int lastidx, maxidx;
	int i;
	
	lastidx= N.length()-1;
	max=N[a]; maxidx=a;
	for (i=a; i<=lastidx; i++){
		if(N[i]>max){
			maxidx=i;
			max= N[i];
		}
		if(max=='9'){
			break;
		}
	}
	return maxidx;
}


int main(){
	string N,min,max;
	int i,T,a;
	bool fail;
	
	cin>>T;
	for (i=1; i<=T; i++) {
		cin>>N;
		min=N;
		max=N;
		if(N=="0") {
			/*Do nothing*/
		}
		else{
			a=0;
			fail=true;
			while (fail && a<=N.length()-1){
				if(!(a==0 && min[IdxMin(N,a)]=='0'))
					swap(&min[a], &min[IdxMin(N,a)], &fail);
				a++;
			}
			a=0;
			fail=true;
			while (fail && a<=N.length()-1){
				swap(&max[a], &max[IdxMax(N,a)], &fail);
				a++;
			}
		}
		cout<<"Case #"<<i<<": "<<min<<" "<<max<<endl;
	}
	
    return 0;
}