#include <iostream>
#include <algorithm>
#include <functional>
#include <cstring>
#include <cassert>
using namespace std;

int solve(int n, function<bool(int, int)> comp)
{
    int res = n;

    char buf[20];
    sprintf(buf, "%d", n);
    int len = (int) strlen(buf);

    for (int i = 0; i < len; i++)
        for (int j = i + 1; j < len; j++)
        {
            swap(buf[i], buf[j]);

            if (buf[0] != '0')
            {
                int x;
                sscanf(buf, "%d", &x);
                if (comp(x, res))
                    res = x;
            }

            swap(buf[i], buf[j]);
        }

    return res;
}

int main()
{
#ifdef LOCAL
    assert(freopen("input.txt", "r", stdin) == stdin);
    assert(freopen("output.txt", "w", stdout) == stdout);
#endif

    int tests;
    assert(scanf("%d", &tests) == 1);

    for (int i = 0; i < tests; i++)
    {
        int n;
        assert(scanf("%d", &n) == 1);

        printf("Case #%d: %d %d\n", i + 1,
                solve(n, less<int>()),
                solve(n, greater<int>()));
    }

    return 0;
}
