/**
Tuan Tran
1/9/14
*/

#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#define DEBUG 1

#include <iostream>
#include <cstdlib>
#include <deque>
using namespace std;

#define FLUSH while(getchar() != '\n')


int dequeToInt(deque<int> myDeque){
	int multiplier = 1;
	int ret = 0;
	while (!myDeque.empty()){
		ret += myDeque.back() * multiplier;
		multiplier *= 10;
		myDeque.pop_back();

	}
	return ret;
}


int swap(deque<int> myDeque, int index){
	int temp = myDeque[0];
	myDeque[0] = myDeque[index];
	myDeque[index] = temp;
	return dequeToInt(myDeque);
}

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);

	int numCases, num, digit, largestIndex, smallestIndex, largest, smallest;
	deque<int> myDeque;
	cin >> numCases;
	FLUSH;

	for (int i = 1; i <= numCases; i++){
		cout << "Case #" << i << ": ";
		myDeque.clear();
		cin >> num;
		if (num == 0)
			myDeque.push_back(0);
		while (num != 0){
			digit = num % 10;
			num /= 10;
			myDeque.push_front(digit);
		}

		smallest = largest = myDeque[0];
		if (myDeque.size() > 1){
			largestIndex = smallestIndex = 0;
			for (int j = 1; j < myDeque.size(); j++){
				if (myDeque[j] >= myDeque[largestIndex]) largestIndex = j;
				if (myDeque[j] <= myDeque[smallestIndex] && myDeque[j] != 0) smallestIndex = j;
			}
			largest = largestIndex != 0 ? swap(myDeque, largestIndex) : dequeToInt(myDeque);
			smallest = smallestIndex != 0 ? swap(myDeque, smallestIndex) : dequeToInt(myDeque);
		}
		cout << smallest << " " << largest << endl;
	}

	system("pause");
	return 0;
}