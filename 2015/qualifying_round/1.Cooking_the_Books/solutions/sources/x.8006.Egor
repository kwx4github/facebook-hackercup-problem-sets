__author__ = 'Egor'

input_file = open('cooking_the_books.txt')
output_file = open('cooking_the_books_example_output.txt', 'w')

opened_mas = [int(line) for line in input_file]
int_t = opened_mas[0]
mas_n = opened_mas[1:]


def find_min(inp_number):
    number = [int(i) for i in str(inp_number)]
    clear_number = [int(i) for i in str(inp_number) if int(i) > 0]
    try:
        min_number = min(clear_number)
        index_number = number.index(min_number)
    except:
        index_number = 0
    #print(min_number, index_number)
    left_numbers = number[0: (index_number+1)]
    left_numbers.reverse()
    right_number = number[index_number+1:]
    str_out = ''.join([str(i) for i in left_numbers + right_number])
    return str_out


def find_max(inp_number):
    number = [int(i) for i in str(inp_number)]
    clear_number = [int(i) for i in str(inp_number) if int(i) > 0]
    try:
        min_number = max(clear_number)
        index_number = number.index(min_number)
    except:
        index_number = 0
    #print(min_number, index_number)
    left_numbers = number[0: (index_number+1)]
    left_numbers.reverse()
    right_number = number[index_number+1:]
    str_out = ''.join([str(i) for i in left_numbers + right_number])
    return str_out


for etap in range(1, int_t + 1):
    int_temp = mas_n[etap-1]
    output_file.write('Case #'+ str(etap) + ': ' + find_min(int_temp) + ' ' + find_max(int_temp) + '\n')
    print('Case #'+ str(etap) + ':', find_min(int_temp), find_max(int_temp))


output_file.close()