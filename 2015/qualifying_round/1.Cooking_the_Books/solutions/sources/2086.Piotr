def swap(s, i, j):
    s = list(s)
    s[i], s[j] = s[j], s[i]
    return "".join(s)

def findMin(s):
    for i in range(len(s)):
        rest = s[i+1:]
        if i == 0 and set(rest) == set(["0"]):
            continue
        if rest:
            val = min(rest) if i > 0 else min(set(rest) - set(["0"]))
            if val < s[i]:
                j = s.rfind(val)
                return swap(s, i, j)
    return s

def findMax(s):
    for i in range(len(s)):
        rest = s[i+1:]
        if rest:
            val = max(rest)
            if val > s[i]:
                j = s.rfind(val)
                return swap(s, i, j)
    return s

def solve(s):
    if len(s) == 1: return "%s %s" % (s, s)
    min_s = findMin(s)
    max_s = findMax(s)
    return "%s %s" % (min_s, max_s)

def main():
    T = [raw_input() for _ in xrange(int(raw_input()))]
    for i, t in enumerate(T):
        print "Case #%d: %s" % (i + 1, solve(t))

if __name__ == '__main__':
    main()
