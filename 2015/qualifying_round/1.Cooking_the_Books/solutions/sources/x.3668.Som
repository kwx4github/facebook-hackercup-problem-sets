package yesyoucan;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.text.Collator;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;
 
 
 
 
 
 class TestClass {
 
static int[] dist ;	
static int[] vis;
static ArrayList<Integer>[] resu;
static int[][] graph;
static int max;
static int max2;
static int[][] dp;
static int[] som;

 


public static void main(String args[] ) throws IOException  {
 
 // BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
 //BufferedReader in = new BufferedReader(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
//Scanner in = new Scanner(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
 PrintWriter pw = new PrintWriter(new FileWriter("C:\\Users\\Sompathak\\Desktop\\output.txt"));
	//InputStream inputStream = System.in;
	//InputReader in = new InputReader(inputStream);
//Scanner in = new Scanner(new InputStreamReader(System.in));
Scanner in = new Scanner(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
int t =in.nextInt();
for(int i=1;i<=t;i++){
pw.print("Case #"+i+": ");
	String S = in.next();
	int min = Integer.MAX_VALUE;
	int l = -1;
	int r =-1;
	for(int j=0;j<S.length();j++){
		int xx = Character.getNumericValue(S.charAt(j));
		for(int k=j+1;k<S.length();k++){
			
			int yy = Character.getNumericValue(S.charAt(k));
			
			if(yy==0 && j==0) continue;
			
			if(xx>yy){
		       l =j ;
		       r=k;
		       xx=yy;
			}
			
		}
		if(l!=-1) break;
		
	}
	if(l==-1)
		pw.print(S+" ");
	else{
		int temp = Character.getNumericValue(S.charAt(l));
		int temp2 = Character.getNumericValue(S.charAt(r)); 
		for(int j=0;j<S.length();j++)
			if(j==l) pw.print(temp2);
			else if(j==r) pw.print(temp);
			else
			pw.print(Character.getNumericValue(S.charAt(j)));
		
		pw.print(" ");
		
	}
	
	l = -1;
	r = -1;
	for(int j=0;j<S.length();j++){
		int xx = Character.getNumericValue(S.charAt(j));
		for(int k=j+1;k<S.length();k++){
			
			int yy = Character.getNumericValue(S.charAt(k));
			
			
			
			if(xx<yy){
		       l =j ;
		       r=k;
		       xx=yy;
			}
			
		}
		if(l!=-1) break;
		
	}
	if(l==-1)
		pw.println(S);
	else{
		int temp = Character.getNumericValue(S.charAt(l));
		int temp2 = Character.getNumericValue(S.charAt(r)); 
		for(int j=0;j<S.length();j++)
			if(j==l) pw.print(temp2);
			else if(j==r) pw.print(temp);
			else
			pw.print(Character.getNumericValue(S.charAt(j)));
		
		pw.println();
		
	}
   pw.flush();
		


}
}
 }
 class InputReader {
	    public BufferedReader reader;
	    public StringTokenizer tokenizer;
 
	    public InputReader(InputStream stream) {
	        reader = new BufferedReader(new InputStreamReader(stream), 32768);
	        tokenizer = null;
	    }
 
	    public String next() {
	        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
	            try {
	                tokenizer = new StringTokenizer(reader.readLine());
	            } catch (IOException e) {
	                throw new RuntimeException(e);
	            }
	        }
	        return tokenizer.nextToken();
	    }
 
	    public int nextInt() {
	        return Integer.parseInt(next());
	    }
 
	}  