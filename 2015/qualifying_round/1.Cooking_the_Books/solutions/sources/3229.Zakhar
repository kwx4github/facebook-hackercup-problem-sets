#pragma comment(linker, "/STACK:16777216")
#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <cstdio>
#include <cmath>
#include <cctype>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <utility>
#include <string>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <ctime>
#include <stack>
#include <algorithm>
#include <numeric>
#include <complex>
#include <functional>
#include <list>
#include <iostream>
using namespace std;

#define C(_a, _v) memset(_a,_v,sizeof(_a))
#define ALL(_obj) (_obj).begin(),(_obj).end()
#define FORB(_i,_a,_b) for((_i)=(_a);(_i)<(_b);++(_i))
#define FORE(_i,_a,_b) for((_i)=(_a);(_i)<=(_b);++(_i))
#define FOR(_i,_n) FORB(_i,0,_n)
#define FORS(_i,_obj) FOR(_i,(_obj).size())
#define ADJ(_i,_v) for((_i)=kick[_v];(_i)>=0;(_i)=foll[_i])
#define X first
#define Y second
#define I64 "%lld"
#define pb push_back
#define ppb pop_back
#define mp make_pair

typedef long long i64;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef pair<i64, i64> pii64;
typedef vector<pii> vpii;

template<typename T>inline bool remin(T&c,const T&n){if(n<c){c=n;return 1;}return 0;}
template<typename T>inline bool remin2(T&c,const T&n){if(c<0||n<c){c=n;return 1;}return 0;}
template<typename T>inline bool remax(T&c,const T&n){if(c<n){c=n;return 1;}return 0;}
template<typename T>inline void addmod(T&c,const T&n,const T&m){c = (c + n) % m;}

int _in;int in(){scanf("%d",&_in);return _in;}

const double EPS = 1e-6;
const int INF = ~(1 << 31);
const i64 LINF = ~(1LL << 63);

#define sqr(x) (x)*(x)

// stuff cutline

//int d[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};

int binpow (int a, int n) {
	int ans = 1;
	while (n) {
		if (n & 1)
			ans *= a;
		a *= a;
		n >>= 1;
	}
	return ans;
}

int powerIndex (int a) {
	int ans = 0;
	while (a /= 10) ans++;
	return ans + 1;
}

int digitAt (int a, int index) {
	return a % binpow(10, index + 1) / binpow(10, index);
}

int swapDigits (int a, int p1, int p2) {
	int ans = a;
	int d1 = digitAt(ans, p1), d2 = digitAt(ans, p2);
	ans = ans - d1 * binpow(10, p1) + d2 * binpow(10, p1);
	ans = ans - d2 * binpow(10, p2) + d1 * binpow(10, p2);
	return ans;
}

int main(){
#ifndef _DEBUG
    //freopen("cows.in", "r", stdin);
    //freopen("cows.out", "w", stdout);
#endif
	freopen("output.txt", "w", stdout);
	int t;
	scanf("%d", &t);
	for (int n = 1; n <= t; n++) {
		int a;
		scanf("%d", &a);
		int pi = powerIndex(a);
		int maxx = a, minn = a;
		for (int i = 0; i < pi; i++) {
			for (int j = i + 1; j < pi; j++) {
				if (!(j == pi - 1 && digitAt(a, i) == 0)) {
					int tmp = swapDigits(a, i, j);
					maxx = max(maxx, tmp);
					minn = min(minn, tmp);
				}
			}
		}
		printf("Case #%d: %d %d\n", n, minn, maxx);	
	}
	return 0;
} 