

def max_swapped(num): 
  num_arr = [int(x) for x in str(num)]
  if len(num_arr) < 2:
    return num

  for i in xrange(len(num_arr)-1):
   dig = num_arr[i]
   max_pos = i
   max_val = dig
   for j in xrange(i+1, len(num_arr)):
     if num_arr[j] > max_val:
       max_pos = j
       max_val = num_arr[j]

   if max_val > dig:
     num_arr[i], num_arr[max_pos] = num_arr[max_pos], num_arr[i]
     return int("".join([str(x) for x in num_arr]))
      
  return num

def min_swapped(num):
  num_arr = [int(x) for x in str(num)]
  if len(num_arr) < 2:
    return num

  for i in xrange(len(num_arr)-1):
   dig = num_arr[i]
   min_pos = i
   min_val = dig
   for j in xrange(i+1, len(num_arr)):
     if num_arr[j] < min_val and (i != 0 or num_arr[j] != 0):
       min_pos = j
       min_val = num_arr[j]

   if min_val < dig:
     num_arr[i], num_arr[min_pos] = num_arr[min_pos], num_arr[i]
     return int("".join([str(x) for x in num_arr]))
      
  return num

if __name__ == '__main__':
  T = int(raw_input())
  for i in xrange(T):  
     num = int(raw_input())
     print "Case %s: %s %s" % (i+1, min_swapped(num), max_swapped(num)) 
