const INF = round(1e18);
var answer1, answer2, n, cur : int64;
    a:array[0..111] of int64;
    test, tst : longint;

procedure swap(var t, y : int64);
var u : int64;
begin
 u := t; t := y; y := u;
end;


procedure solve(n:int64);
var cnt, i, k, j : longint;
begin
 cnt := 0;
 answer1 := n;
 answer2 := n;
 while n > 0 do
  begin
   cnt := cnt + 1;
   a[cnt] := n mod 10;
   n := n div 10;
  end;
 for i:= 1 to cnt div 2 do
  begin
   a[0] := a[i];
   a[i] := a[cnt - i + 1];
   a[cnt - i + 1] := a[0];
  end;
 for i:= 1 to cnt do
  for j:= 1 to cnt do
   begin
    swap(a[i], a[j]);
    if (A[1] = 0) then 
     begin
      swap(a[i], a[j]);
      continue;
     end;
    cur := 0;
    for k := 1 to cnt do cur := cur * 10 + a[k];
    if (cur > answer2) then answer2 := cur;
    if (cur < answer1) then answer1 := cur;
    swap(a[i], a[j]);
   end;
end;


begin
 assign(input,'input.txt');
 reset(input);
 assign(output,'output.txt');
 rewrite(output);
 readln(test); 
 for tst := 1 to test do
  begin
   readln(n);
   solve(n);
   writeln('Case #',tst,': ',answer1,' ', answer2);
  end;
end.