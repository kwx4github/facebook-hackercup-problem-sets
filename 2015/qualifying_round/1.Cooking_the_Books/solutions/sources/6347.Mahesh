
 import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.Paths;
 import java.nio.file.StandardOpenOption;
 class cookbook
 {
     public void fun()throws IOException
     {
         int i=0,ctr=0,ctr1=0;
         String s=new String(Files.readAllBytes(Paths.get("input.txt")));
         String a="";
         while(i<s.length())
         {
             if(s.charAt(i)=='\n')
             ctr++;
             i++;
         }
         int arr[]=new int[ctr+1];
         String split[]=s.split("\n");
         for(i=0;i<ctr;i++)
         {
             arr[i]=Integer.parseInt(split[i]);
            }
            ctr=0;
           String boo="";
           for(i=1;i<=arr[0];i++)
           {
               a=largesmall(arr[i]);
               boo+="Case #"+i+": "+a+'\n';
            }
         Files.write(Paths.get("output.txt"), boo.getBytes(), StandardOpenOption.CREATE);
        }
        public String largesmall(int n)
        {
            int i=0,j=0,k=0,a=0,ctr=(Integer.toString(n)).length();
            int arr[]=new int[ctr];
            int arr1[]=new int[ctr];
            for(i=ctr-1;i>=0;i--)
            {
                arr[i]=n%10;
                arr1[i]=n%10;
                n/=10;
            }
            for(i=0;i<ctr;i++)
            {
                a=arr1[i];
                for(j=ctr-1;j>i;j--)
                {
                    if((i==0&&arr1[j]!=0||i!=0)&&a!=Math.min(a,arr1[j]))
                    {
                        a=Math.min(a,arr1[j]);
                        k=j;
                    }
                }
                if(arr1[i]!=a)
                {
                    arr1[k]=arr1[i];
                    arr1[i]=a;
                    break;
                }
            }
            for(i=ctr-1;i>=0;i--)
            n+=arr1[i]*Math.pow(10,ctr-1-i);
            String s=Integer.toString(n);
            n=0;
            k=0;
            a=0;
            for(i=0;i<ctr;i++)
            {
                a=arr[i];
                for(j=ctr-1;j>i;j--)
                {
                    if(a!=Math.max(a,arr[j]))
                    {
                        a=Math.max(a,arr[j]);
                        k=j;
                    }
                }
                if(arr[i]!=a)
                {
                    arr[k]=arr[i];
                    arr[i]=a;
                    break;
                }
            }
            for(i=ctr-1;i>=0;i--)
            n+=arr[i]*Math.pow(10,ctr-1-i);
            s+=" "+Integer.toString(n);
            return s;
        }
    }
         