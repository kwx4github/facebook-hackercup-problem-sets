class SwapManager
  def self.execute
    num = gets.to_i

    inputs = []
    num.times do
      inputs << gets.to_i
    end

    outputs = []
    inputs.each do |input|
      calc = SwapCalc.new(input)
      outputs << [calc.get_min, calc.get_max]
    end

    outputs.each_with_index do |result, i|
      puts "Case ##{i+1}: #{result[0]} #{result[1]}"
    end

  end
end

class SwapCalc
  def initialize(num)
    @result = swap_nums num
  end

  def get_max
    @result.max
  end

  def get_min
    @result.min
  end

  def swap_nums(target)
    return [0] if target == 0
    string_num = target.to_s
    length = string_num.length
    swaps = []
    for i in (0...length) do
      for j in (i...length) do
        num = string_num.dup
        tmp = num[i]
        num[i] = num[j]
        num[j] = tmp
        swaps << num.to_i unless num.start_with? "0"
      end
    end
    swaps
  end
end

SwapManager.execute

