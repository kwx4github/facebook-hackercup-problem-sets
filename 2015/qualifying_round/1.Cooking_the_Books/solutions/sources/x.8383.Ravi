#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <deque>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <stack>
#include <queue>
#include <algorithm>
#include <functional>
#include <iterator>
#include <numeric>
#include <utility>
using namespace std;

template< class T > T _abs(T n) { return (n < 0 ? -n : n); }
template< class T > T _max(T a, T b) { return (!(a < b) ? a : b); }
template< class T > T _min(T a, T b) { return (a < b ? a : b); }
template< class T > T sq(T x) { return x * x; }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > bool inside(T a, T b, T c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }

#define ALL(c) c.begin(), c.end()
#define PB(x) push_back(x)
#define UB(s, e, x) upper_bound(s, e, x)
#define LB(s, e, x) lower_bound(s, e, x)
#define REV(s, e) reverse(s, e);
#define SZ(c) c.size()
#define SET(p) memset(p, -1, sizeof(p))
#define CLR(p) memset(p, 0, sizeof(p))
#define MEM(p, v) memset(p, v, sizeof(p))
#define CPY(d, s) memcpy(d, s, sizeof(s))
#define ll long long
#define ff first
#define ss second
#define DEBUG if(0)

#define si(x) scanf("%d",&x)
#define pi(x) printf("%d\n",x)
#define siz 100100

int main()
{
     freopen("input.txt","r",stdin);
     freopen("output.txt","w",stdout);
     
     
     int t,x=0;
     cin>>t;
     while(t--)
     {
               x++;
               ll int n,no1,no2;
               int l,i,max=-1,min=10,digit,pos_max,pos_min;
               char buff[25];
               cin>>n;
               
               sprintf(buff,"%lld",n);
               l=strlen(buff);
               for(i=0;i<l;i++)
               {
                   digit=buff[i]-'0';
                   if(digit>max)
                   {max=digit;
                    pos_max=i;
                    }
                   
                   if(digit !=0 && digit<min)
                  { min=digit;
                    pos_min=i;
                    }
               }   
               
               char p=buff[0];
                buff[0]=buff[pos_max];
                buff[pos_max]=p;
                
                sscanf(buff,"%lld",&no1);
               
                p=buff[0];
                buff[0]=buff[pos_max];
                buff[pos_max]=p;
                
                
                 p=buff[0];
                buff[0]=buff[pos_min];
                buff[pos_min]=p;
               
                sscanf(buff,"%lld",&no2);
                
                cout<<"Case #"<<x<<": "<<no2<<" "<<no1<<"\n";
                }             
return 0;
}
