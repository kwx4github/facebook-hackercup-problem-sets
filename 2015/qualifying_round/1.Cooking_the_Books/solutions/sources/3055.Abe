#include <iostream>
#include <vector>
using namespace std;

long long pow(long long a, long long p) {
    long long r=1;
    while(p--) r*=a;
    return r;
}

long long getDigit(long long n, long long a) {
    return (n/pow(10,a))%10;
}

long long swapDigits(long long n, long long a, long long b) {
    long long da=getDigit(n,a);
    long long db=getDigit(n,b);
    return n-da*pow(10,a)-db*pow(10,b)+db*pow(10,a)+da*pow(10,b);
}

long long getLength(long long n) {
    long long length=0;
    for(; pow(10,length)<=n; length++);
    return length;
}

int main() {
    long long t;
    cin >> t;
    long long n;
    
    for(long long it=0; it<t; it++) {
        cin >> n;
        long long min=n, max=n;
        for(int i=0; pow(10,i)<=n; i++)
        for(int j=0; pow(10,j)<=n; j++) {
            long long res=swapDigits(n,i,j);
            if(getLength(res) < getLength(n)) continue;
            if(res < min) min=res;
            if(res > max) max=res;
        }
        
        cout << "Case #" << it+1 << ": " << min << " " << max << endl;        
    }

    return 0;
}
