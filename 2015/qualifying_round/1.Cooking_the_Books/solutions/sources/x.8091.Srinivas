//
//  main.cpp
//  Facebook Hack Cup 2015 : Cooking the books
//
//  Created by Srinivas rao Jojigiri on 1/10/15.
//  Copyright (c) 2015 Srinivas rao Jojigiri. All rights reserved.
//

#include <iostream>
using namespace std;
long findhigh(long number);
long findlow(long number);

int main(int argc, const char * argv[]) {
    // insert code here...
    int numberCount=0,count=0;
    long int *numbers=nullptr;
    do {
        cout<<"Enter Total Number count:\n"<<endl;
        cin>>numberCount;
    } while (numberCount<1 || numberCount>100);

    cout<<"Enter numbers one after other\n";
    numbers = new long[numberCount];
    while(count<numberCount)
    {
        cin>>numbers[count];
        if (numbers[count]<0 || numbers[count]>999999999)
        {
            cout<<"number is Invalid, Please try again";
            continue;
        }
        count++;
    }
   /* cout<<"you Entered\n"<<endl;
    for (count=0; count<numberCount;count++) {
        cout<<numbers[count]<<", ";
    }*/
    cout<<"\n";
    for (count=0; count<numberCount;count++) {
        cout<<"Case #"<<count+1<<": "<<findhigh(numbers[count]);
        cout<<"\n";             //<<" "<<findlow(numbers[count])<<endl;
    }
   
    delete numbers;
    return 0;
}
int findDigits(long number)
{
    int digits = 0;
    while (number>0) {
        number=number/10;
        digits++;
    }
    return digits;
}


long findhigh(long number)
{
    int pos=0,val,digits=0,high=0,low=9,first=0,poslow=0;
    long temp=number;
    digits = findDigits(number);
    int *digit = new int[digits];
    val = digits-1;
    while (val>=0) {
        digit[val]=temp%10;
        temp=temp/10;
            if ( high<digit[val])
            {
                    high = digit[val];
                    pos = val;
            }
        if (low>digit[val])
        {
            
            if (digit[val]==0)
                low = low;
            else
            {
                low = digit[val];
                poslow = val;
            }
        }
        
        val--;
        
    }
    
        first = digit[0];
        digit[pos] = first;
        digit[0] = high;
    
    //cout<<"\n"<<pos<<" "<<low<<"high"<<high<<endl;
    
    number = 0;
    for (int i=0;i<digits;i++)
    {
        number *=10;
        number += digit[i];
    }
//  -------------------------------------
    
    digit[pos] = digit[0];
    digit[0] = first;
    
    digit[poslow] = first;
    digit[0] =low;
    
    temp = 0;
    for (int i=0;i<digits;i++)
    {
        temp *=10;
        temp += digit[i];
        
    }
    cout<<" "<<temp<<" ";
    return number;
}
long findlow(long number)
{

    return number;
}