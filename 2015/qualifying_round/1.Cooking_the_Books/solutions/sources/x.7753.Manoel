import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;

public class CookingTheBooks {

  public static void main(String args[]) {


    try {
      BufferedReader file = new BufferedReader(new FileReader("D:/Desktop/cooking_the_books.txt"));
      int numberOfCases = Integer.valueOf(file.readLine()); // number of test cases
      for (int i = 0; i < numberOfCases; i++) {
        String testCase = file.readLine();
        int[] testCaseArray = new int[testCase.length()];
        for (int j = 0; j < testCase.length(); j++)
          // create the array
          testCaseArray[j] = Integer.parseInt(String.valueOf(testCase.charAt(j)));
        System.out.print("Case #" + (i + 1) + ": ");
        System.out.print(makeBiggest(Arrays.copyOf(testCaseArray, testCaseArray.length)));
        System.out.print(" ");
        System.out.println(makeSmallest(Arrays.copyOf(testCaseArray, testCaseArray.length)));


      }
    } catch (FileNotFoundException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    } catch (NumberFormatException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    } catch (IOException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
  }

  public static String makeBiggest(int[] array) {
    if (array.length > 1) {
      int biggestNumber = array[0];
      int biggestNumberIndex = 0;
      for (int k = 1; k < array.length; k++) {
        if (array[k] >= biggestNumber) {
          biggestNumber = array[k];
          biggestNumberIndex = k;
        }
      }
      for (int k = 0; k < biggestNumberIndex; k++) {
        if (biggestNumber > array[k]) {
          int temp = array[k];
          array[k] = biggestNumber;
          array[biggestNumberIndex] = temp;
          break;
        }
      }
    }
    String result = "";
    for (int i = 0; i < array.length; i++)
      result += array[i];
    return result;

  }

  public static String makeSmallest(int[] array) {
    if (array.length > 1) {
      int smallestNumber = array[0];
      int smallestNumberIndex = 0;
      for (int k = 1; k < array.length; k++) {
        if (array[k] <= smallestNumber) {
          smallestNumber = array[k];
          smallestNumberIndex = k;
        }
      }
      for (int k = 0; k < smallestNumberIndex; k++) {
        if (smallestNumber < array[k]) {
          if (array[k] > smallestNumber) {
            if (k == 0 && smallestNumber == 0)
              continue;
            int temp = array[k];
            array[k] = smallestNumber;
            array[smallestNumberIndex] = temp;
            break;
          }
        }
      }
    }
    String result = "";
    for (int i = 0; i < array.length; i++)
      result += array[i];
    return result;

  }
}
