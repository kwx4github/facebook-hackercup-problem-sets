fs = require 'fs'

fs.readFile 'testCases.txt',(err, data) ->
  if err then console.log err else cookTheBooks data.toString().split('\r\n')


cookTheBooks = (data)->
  smallerComparator = (aNumber, anotherNumber) -> aNumber < anotherNumber
  biggerComparator = (aNumber, anotherNumber) -> aNumber > anotherNumber
  for index in [1..data.length - 1]
    smallestCookedNumber = findCookedNumber(data[index], smallerComparator)
    biggestCookedNumber = findCookedNumber(data[index], biggerComparator)
    outputResult index, smallestCookedNumber, biggestCookedNumber

outputResult = (testCaseNumber, smallestPossible, biggestPossible) ->
  console.log "Case ##{testCaseNumber}: #{smallestPossible} #{biggestPossible}"

findCookedNumber = (number, comparator) ->
  return number unless number.length
  numbersInNumber = number.split('')
  fistNumberInNumber = numbersInNumber[0]
  digitToSwap = number: fistNumberInNumber, index:0

  numbersInNumber.forEach (numberInNumber, index) ->
    digitToSwap = number: numberInNumber, index: index if parseInt(numberInNumber) isnt 0 and comparator numberInNumber , digitToSwap.number

  return number unless digitToSwap.index
  numbersInNumber[digitToSwap.index] = fistNumberInNumber
  numbersInNumber[0] = digitToSwap.number
  numbersInNumber.join('')

