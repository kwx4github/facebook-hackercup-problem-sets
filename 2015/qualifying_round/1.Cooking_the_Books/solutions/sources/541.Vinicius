#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

#define max(a,b) ((a)>(b)) ? (a) : (b)
#define min(a,b) ((a)<(b)) ? (a) : (b)

int T,C,n;
char num[32];

char *best(char *cur, bool type){
  if(n==1) return cur;
  char *aux = (char*)malloc((n+2)*sizeof(char));
  memcpy(aux,cur,(n+2)*sizeof(char));
  long long int best = atoll(aux);
  long long int op;
  for(int i=0;i<n;i++){
    for(int j=i+1;j<n;j++){
      if(i==0 and aux[j]=='0'){
        op = atoll(aux);
        best = type ? max(best,op) : min(best,op);
        continue;
      }
      swap(aux[i],aux[j]);
      op = atoll(aux);
      best = type ? max(best,op) : min(best,op);
      swap(aux[i],aux[j]);
    }
  }
  sprintf(aux,"%lld",best);
  return aux;
}

int main(){

  scanf("%d",&T);
  int C=0;
  while(C<T){
    scanf("%s",num);
    n = strlen(num);
    printf("Case #%d: ",++C);
    printf("%s ",best(num,false));
    printf("%s\n",best(num,true));
  }

  return 0;
}
