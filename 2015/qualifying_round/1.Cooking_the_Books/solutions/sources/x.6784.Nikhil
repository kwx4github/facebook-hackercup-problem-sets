import math, random, string
def myProgram(text):
	text = text.split()
	totalToManipulate = int(text[0])
	text = text[1:]
	outputStr = "\n"
	counter = 0
	for i in xrange(totalToManipulate):
		counter += 1
		theNum = text[i]
		if len(theNum) == 1:
			outputStr += "Case #%d: %s %s" %(counter, theNum, theNum)
		else:
			numToShiftInFront, position = largestDigit(theNum)
			assert(type(numToShiftInFront) == str)
			if position != None and theNum[0] != numToShiftInFront:
				largestPossibleNum = numToShiftInFront + theNum[1:position] + theNum[0] + theNum[position+1:]
			else:
				largestPossibleNum = theNum
			numToShiftBehind, otherPosition = smallestDigit(theNum)
			if otherPosition != None and theNum[0] != numToShiftBehind:
				smallestPossibleNum = numToShiftBehind + theNum[1:otherPosition] + theNum[0] + theNum[otherPosition+1:]
			else:
				smallestPossibleNum = theNum
			outputStr += "Case #%d: %s %s" %(counter, smallestPossibleNum, largestPossibleNum)
		outputStr += "\n"
	return outputStr

def largestDigit(someNum):
	largestSoFar = position = None
	for i in xrange(len(someNum)):
		if someNum[i] > largestSoFar:
			largestSoFar = someNum[i]
			position = i
	return largestSoFar, position

def smallestDigit(someNum):
	smallestSoFar = 10
	position = None
	for i in xrange(len(someNum)):
		currNum = someNum[i]
		if int(currNum) < smallestSoFar and int(currNum) != 0:
			smallestSoFar = int(currNum)
			position = i
	if smallestSoFar == 10:
		return None, None
	return str(smallestSoFar), position


text = """20
999999999
773452111
216793189
470695573
640187092
869841756
9990999
71429777
339027548
983606612
691917617
364669874
31524
181355259
444558727
545178093
123
675905967
0
10
"""
print myProgram(text)
