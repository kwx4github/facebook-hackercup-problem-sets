#include<iostream>
#include<vector>

using namespace std;

int lengthNumber(int N)
{
    int c=0,k=N;
    while(k!=0)
    {
        c++;
        k=k/10;
    }
    return c;
}


void swap_max(int digits[],int l)
{
    int max_i,min_i,pot_i,z_i,nz_i,v;
    int i=l-1;
    while(i>0)
    {
        if(digits[i]==0)
            i=i-1;
        else
            break;

    }
    max_i = i;
    min_i = i;
    pot_i = i;
    z_i   = -1;
    nz_i  = i;
    i=l-1;
    while(i>=0)
    {
        if(digits[i]>digits[pot_i])
        {
            max_i = i;
            min_i = pot_i;
        }
        if(digits[i] < digits[pot_i] && digits[i] != 0)
        {
            pot_i = i;
        }
        if(digits[i] == 0 && z_i == -1)
            z_i = i;
        if(digits[i] != 0 and i > 0)
            nz_i = i;

        i=i-1;
    }

    if(z_i!=-1 && max_i!=0 && max_i<z_i)
    {
        min_i=z_i;
        i=nz_i;
        max_i=i;
    }
    else if(max_i==min_i and z_i!=-1)
    {
        i=nz_i;
        if(i<z_i)
        {
            min_i=z_i;
            max_i=i;
        }

    }
     v = digits[min_i];
    digits[min_i] = digits[max_i];
    digits[max_i] = v;

    for(int j=0;j<l;j++)
    {
        cout<<digits[j];
    }
}


void getMax(vector<int>& input, int k, vector<int>& maxi){
 if (k == 0) {
  int flag=0;
  for(int i=0;i<input.size();i++)
  {
   if(input[i]<maxi[i])
   {
    flag=0;break;
   }
   else if(input[i]>maxi[i])
   {
    flag=1; break;
   }
  }
  if(flag)
  {
   for (int i = 0; i < input.size(); i ++) {
    maxi[i]=input[i];
   }
  }
  return;
 }

 for (int i = 0; i < input.size() - 1; i ++) {
  for (int j = i + 1; j < input.size(); j ++) {
   swap(input[i], input[j]);
   getMax(input, k - 1, maxi);
   swap(input[i], input[j]);
  }
 }
 return;
}

void swap2max(vector<int> input, int k) {
 if (input.size() < 2) {

  cout <<input[0]<<endl;
  return ;
 }
 vector<int> maxi;
 maxi = input;
 for (int i = 0; i < input.size(); i ++) {
  maxi[i]=0;
 }
 getMax(input, k, maxi);


 for (int i = 0; i < maxi.size(); i ++) {
  cout << maxi[i];
 }
 cout<<endl;
 return;
}

int main()
{

int T,N,k,l,al;
cin>>T;
for(int j=1;j<=T;j++)
{
    cin>>N;
    if(N==0)
    cout<<"Case #"<<j<<": 0 0"<<endl;
    else if(N==10)
        cout<<"Case #"<<j<<": 10 10"<<endl;
    else
    {
    k=N;
    vector<int> input1 ;
    l=lengthNumber(k);
    int a[l];
    al=l-1;
    while(k!=0)
    {
        input1.insert(input1.begin(),k%10);
        a[al]=k%10;
        al--;
        k=k/10;
    }

    cout<<"Case #"<<j<<": ";
     swap_max(a,l);
     cout<<" ";
     swap2max(input1, 1);
}
}

 return 0;
}
