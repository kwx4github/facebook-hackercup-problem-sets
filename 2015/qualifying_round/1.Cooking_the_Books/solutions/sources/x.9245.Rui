#include <fstream>
#include <cstdlib>
#include <cmath>
using namespace std;

int main(){
	ifstream fin;
	ofstream fout;
	int T;
	fin.open("input.txt");
	fout.open("output.txt");


	fin >> T;
	for (int i = 1; i <= T; i++){
		long long readNum;
		fin >> readNum;
		if (readNum){
			long long largestP = floor(log10(readNum));
			long long firstDigit = readNum / ((long long)pow(10, largestP));
			long long largestDigit = firstDigit;
			long long smallestDigit = firstDigit;
			long long remaining = readNum % ((long long)pow(10, largestP));
			long long p = largestP - 1;
			long long smallestDigitPower = largestP;
			long long largestDigitPower = largestP;
			while (remaining){
				long long digit = remaining / ((long long)pow(10, p));
				if (digit != 0){
					if (digit < smallestDigit){
						smallestDigit = digit;
						smallestDigitPower = p;
					}
					if (digit > largestDigit){
						largestDigit = digit;
						largestDigitPower = p;
					}
				}
				remaining = remaining % ((long long)pow(10, p));
				p--;
			}
			//swap
			long long smallestNum = readNum - firstDigit*pow(10, largestP) + smallestDigit*pow(10, largestP) - smallestDigit*pow(10, smallestDigitPower) + firstDigit*pow(10, smallestDigitPower);
			long long largestNum = readNum - firstDigit*pow(10, largestP) + largestDigit*pow(10, largestP) - largestDigit*pow(10, largestDigitPower) + firstDigit*pow(10, largestDigitPower);
			fout << "Case #" << i << ": " << smallestNum << ' ' << largestNum << endl;
		}
		else fout << "Case #" << i << ": " << 0 << ' ' << 0 << endl;
	}


	fin.close();
	fout.close();
	return 0;
}
