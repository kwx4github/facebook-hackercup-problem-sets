# -*- coding: utf-8 -*-
"""
Created on Sat Jan 10 11:21:21 2015

@author: pavitrakumar
"""
"""
swap 2 digits such that the number is 1. max 2. min
cant swap first num with zero.
"""

def find_mm_num(a,index):
    # find the max digit from [index..n]
    s = str(a)
    mi = 9
    mx = 0
    mi_index = 0
    mx_index = 0
    for i in range(index,len(s)):
        c = s[i]
        if int(c) >= mx:
            mx = int(c)
            mx_index = i;
        if int(c) <= mi:
            mi = int(c)
            mi_index = i;
    #print mi
    #print mx
    #print len(s)
    return [[mx,mx_index],[mi,mi_index]]
    

def conv(numList):         # [1,2,3]
    s = map(str, numList)   # ['1','2','3']
    s = ''.join(s)          # '123'
    s = int(s)              # 123
    return s

def find_max(a):
    s = []
    r = str(a)
    s += r
    max_list = []
    for i in range(len(s)):
        temp = find_mm_num(a,i)
        t = list(s)
        #print s
        if t[i] is not temp[0][0]:
            #first digit is not the max digit so swap and add to a list
            tm = t[i]
            t[i] = temp[0][0]
            t[temp[0][1]] = tm
            max_list.append(t)
    #print max_list
    tmp = 0
    for l in max_list:
        k = conv(l)
        #print k
        if k > tmp:
            tmp = k
    #print tmp
    return tmp;
            
            
def find_min(a):
    s = []
    r = str(a)
    s += r
    min_list = []
    for i in range(len(s)):
        temp = find_mm_num(a,i)
        t = list(s)
        #print s       
        #if the nim number to be replaced at 0th position is 0,
        # we need to find the next min number
        if i==0 and temp[1][0] == 0:
            temp_min = temp
            t_i = i
            while True :
                #print "asdad"
                temp_min = find_mm_num(a,t_i)
                t_i += 1
                if temp_min[1][0] > 0:
                    break
            temp = temp_min
        #print "i: ",i,"min: ",temp[1][0]
        if t[i] is not temp[1][0]:
            #ith digit is not the max digit so swap and add to a list
            tm = t[i]
            t[i] = temp[1][0]
            t[temp[1][1]] = tm
            min_list.append(t)
    #print min_list
    tmp = 999999999
    for l in min_list:
        k = conv(l)
        if len(str(k)) == len(s):
        #print k
            if k < tmp:
                tmp = k
    #print tmp 
    return tmp           

    

    
f = open('test1.txt','r')
no_of_cases = int(f.readline())
for i in range(no_of_cases):
    mm = int(f.readline())
    #print "Case #",(i+1),":",find_min(mm)," ",find_max(mm)
    print 'Case #{0}: {1} {2}'.format(i+1,find_min(mm),find_max(mm))
