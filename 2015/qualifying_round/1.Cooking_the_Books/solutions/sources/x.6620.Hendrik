from copy import copy

input_file_name = "cooking_the_books.txt"
output_file_name = "cooking_the_books_out.txt"

file_in = open(input_file_name, "r")
file_out = open(output_file_name, "w")
      
T = int(file_in.readline())

print "%d entries found." %(T)
print "Start processing..."

for i in range(1,T+1):
    
    line_in = file_in.readline().strip()
    
    #print "Original: " + "".join(map(str,N))
                   
    if len(line_in) > 1:
    
        N = map(int,list(line_in))
        
        # create two copies of N that will contain the final outputs
        N_max = copy(N)
        N_min = copy(N)
        
        # create a sorted list to determine min and max values
        N = sorted(list(set(N)))
                
        max_val = N[-1]        
        min_val = N[0]
        
        # get the index of the LAST maximum     
        max_indices = [m for m, n in enumerate(N_max) if n == max_val]
        index_max = max_indices[-1]

        # get the index of the LAST minimum
        min_indices = [m for m, n in enumerate(N_min) if n == min_val]
        index_min = min_indices[-1]

        #print "Max value: %d (%d)" %(max_val, index_max)
        #print "Min value: %d (%d)" %(min_val, index_min)
        
        if index_min > 0:
            swap_min_index = 0        
            if min_val == 0:
                swap_min_index = 1
            else:
                swap_min_index = 0
            
            N_min[swap_min_index], N_min[index_min] = N_min[index_min], N_min[swap_min_index]
            
        if index_max > 0:
            swap_max_index = 0
            while (N_max[swap_max_index] == max_val) and (swap_max_index < len(N_max)-1): 
                swap_max_index += 1
                                                
            N_max[swap_max_index], N_max[index_max] = N_max[index_max], N_max[swap_max_index]
        
    
        #print "Maximum: " + "".join(map(str,N_max))
        #print "Minimum: " + "".join(map(str,N_min))    
    
        line_out = "Case #%d: %s %s\n" %(i, "".join(map(str,N_min)), "".join(map(str,N_max)))
            
    # trivial case 
    else:
        #print "trivial"
        line_out = "Case #%d: %s %s\n" %(i, line_in, line_in)
    
    file_out.write(line_out)
    
        
file_in.close()
file_out.close()

print "ALL DONE!"