#include "cstdio"
#include "cstdlib"
#include "cmath"
#include "iostream"
using namespace std;

class numero
{
public:
    numero(){}
    void separar(int);
    int unir(int[]);
    void verificarMayor();
    void verificarMenor();
    void mostrarResutado()
    {
        cout<<menor<<" "<<mayor<<endl;
    }
    int longitud();
private:
    int mayor;
    int menor;
    int cantidad;
    int digitos[9];
};
int i;
void numero::separar(int cantidad)
{
    int temp = 10;
    int temp2 = 10;
    bool bloqueo = true;
    numero::cantidad = cantidad;
    digitos[0] = cantidad % temp;
    temp = temp * 10;
    for (i = 1; i < 9; i ++)
    {
        digitos[i] = (cantidad % temp - cantidad % temp2 ) / temp2;
        temp2 = temp2 * 10;
        temp = temp * 10;
    }
    for(i = 8; i >= 0; i --)
    {
        if(digitos[i] == 0 && bloqueo)
        {
            digitos[i] = -1;

        }
        else
            bloqueo = false;
    }

}
int numero::longitud()
{
    int cont = 0;
    for(i = 0; i < 9; i++)
    {
        if(digitos[i] != -1)
            cont++;
    }
    cont --;
    return cont;
}
int numero::unir(int digitos[])
{
    float limite = longitud();
    int multiplicador = pow(10, limite);
    int resultado = 0;
    for(i = limite; i >= 0; i --)
    {
       resultado = resultado + digitos[i] * multiplicador;
       limite --;
       multiplicador = pow(10, limite);
    }
    return resultado;
}
void numero::verificarMayor()
{
    int limite = longitud();
    int posicion = limite;
    int nmayor = digitos[posicion];
    int temp;
    for(i = limite; i >= 0; i --)
    {
        if(digitos[i] > nmayor)
        {
            nmayor = digitos[i];
            posicion = i;
        }
    }
    temp = digitos[limite];
    digitos[limite] = nmayor;
    digitos[posicion] = temp;
    mayor = unir(digitos);
    digitos[limite] = temp;
    digitos[posicion] = nmayor;
}
void numero::verificarMenor()
{
    int limite = longitud();
    int posicion = limite;
    int nmenor = digitos[posicion];
    int temp;
    for(i = limite; i >= 0; i --)
    {
        if(digitos[i] < nmenor && digitos[i] > 0)
        {
            nmenor = digitos[i];
            posicion = i;
        }
    }
    temp = digitos[limite];
    digitos[limite] = nmenor;
    digitos[posicion] = temp;
    menor = unir(digitos);
}
int main()
{
    int T;
    numero *caso;
    int cantidad;
    int x;
    cin>> T ;
    caso = new numero[T];
    for(x = 0; x < T; x ++)
    {
        cin>>cantidad;
        caso[x].separar(cantidad);
        caso[x].verificarMayor();
        caso[x].verificarMenor();
    }
    for(x = 0; x < T; x++)
    {
        cout<<"Case #"<<x+1<<": ";
        caso[x].mostrarResutado();
    }
}
