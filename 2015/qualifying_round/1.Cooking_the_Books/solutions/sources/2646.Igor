#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <stack>
#include <utility>
#include <fstream>

using namespace std;

typedef long long ll;

int T;
ll N;
vector<int> a;
vector<int> b;
int main()
{
    ifstream fin("cooking_the_books.txt");
    ofstream fout("cooking_the_books_output.txt");

    fin >> T;
    //cout << T << "\n";
    for(int t=0; t<T; t++)
    {
        fin >> N;
        a.clear();
        b.clear();
        //cout << N << "\n";

        if(N == 0)
            a.push_back(0), b.push_back(0);
        else
        {
            while(N > 0)
            {
                a.push_back(N%10), b.push_back(N%10);
                N/=10;
            }
        }

        reverse(a.begin(),a.end());
        reverse(b.begin(), b.end());

        bool overG = false;
        bool overS = false;
        for(int i=0; i<a.size(); i++)
        {
            int minInd = i;
            int maxInd = i;
            for(int j=i+1; j<a.size(); j++)
            {

                if((i!=0 || a[j] != 0) && a[minInd] >= a[j])
                {

                     minInd = j;
                }

                if(b[maxInd] <= b[j])
                    maxInd = j;
            }

            if(a[minInd] != a[i] && !overS)
            {
                overS = true;
                swap(a[minInd], a[i]);
            }
            if(b[maxInd] != b[i] && !overG)
            {
                overG = true;
                swap(b[maxInd], b[i]);
            }
        }

        ll greatest = 0;
        ll smallest = 0;

        for(int i=0; i<a.size(); i++)
        {
            smallest*=10;
            smallest+=a[i];

            greatest*=10;
            greatest+=b[i];
        }
        fout << "Case #" << t + 1 << ": " << smallest << " " << greatest << "\n";
    }

    return 0;
}
