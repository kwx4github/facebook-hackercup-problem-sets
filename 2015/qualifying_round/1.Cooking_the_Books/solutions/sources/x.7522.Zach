package round_0;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class CookedBooks {
	
	static int[] n;

	public static void main(String[] args) {
		String output = "";
		try {
			FileReader input = new FileReader("cooking_the_books.txt");
			Scanner	s = new Scanner(input);
			int t = s.nextInt();
			s.nextLine();
			
			for (int i = 0; i < t; i++) {
				output += "Case #" + (i+1) + ": "; 
				String number = s.nextLine();
				stringToIntArray(number);
				output += "" + getSmallest();
				stringToIntArray(number);
				output += " " + getLargest() + "\n";
			}
			
			s.close();
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		
		printOut(output);		
		
	}
	
	public static void printOut(String output) {
		try {
			FileOutputStream out = new FileOutputStream("cooking_books_output.txt");
			out.write(output.getBytes());
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static void stringToIntArray(String number) {
		n = new int[number.length()];
		String[] digits = number.split("");
		for (int i = 0; i < number.length(); i++) {
			n[i] = Integer.parseInt(digits[i]);
		}
	}
	
	public static String getSmallest() {
		int smallestIndex = 0;
		for (int i = 1; i < n.length; i++) {
			if (n[i] < n[smallestIndex]) {
				if (n[i] != 0) 
				smallestIndex = i;
			}
		}
		swap(smallestIndex);
		return printArray();
	}
	
	public static String getLargest() {
		int largestIndex = 0;
		for (int i = 1; i < n.length; i++) {
			if (n[i] > n[largestIndex]) {
				largestIndex = i;
			}
		}
		swap(largestIndex);
		return printArray();
	}
	
	public static String printArray() {
		String result = "";
		for (int i = 0; i < n.length; i++) {
			result += n[i];
		}
		return result;
	}
	
	public static void swap(int i) {
		int temp = n[0];
		n[0] = n[i];
		n[i] = temp;
	}
}
