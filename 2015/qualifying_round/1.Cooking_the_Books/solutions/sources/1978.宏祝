//
//  .cpp
//
//
//  Created by 赵宏祝 on //.
//
//

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <set>
#include <iterator>

#define FOR0(i, n) for(int (i) = 0; (i) < (n); i++)
#define FOR1(i, n) for(int (i) = 1; (i) <= (n); i++)
#define FOR(i, l, r) for(int (i) = (l); (i) <= (r); i++)
#define lowbit(x) (x)&(-x)

using namespace std;
//============================
int T, n;
//============================
bool cmp1(int a, int b) {
    return a < b;
}
bool cmp2(int a, int b) {
    return a > b;
}
int main(){
    cin >> T;
    int number = 0;
    while (T--) {
        number++;
        
        int len = 0;
        int s[10], st[10], stemp[10];
        
        cin >> n;
        
        int tmp = n;
        while (tmp) {
            int tt = tmp % 10;
            tmp /= 10;
            s[len] = tt;
            
            len++;
        }
        memcpy(stemp, s, sizeof(s));
        cout << "Case #" << number <<": ";
        if (!n) {
            cout << "0 0" << endl;
            continue;
        }
        memcpy(st, s, sizeof(s));
        
        sort(st, st + len, cmp2);
        
        for (int i = len - 1; i >= 0; i--) {
            if (st[i]) {
                swap(st[len - 1], st[i]);
                break;
            }
        }
        
        for (int i = len - 1; i >= 0; i--) {
            if (st[i] != s[i]) {
                int smaller = st[i];
                int big = s[i];
                for (int j = 0; j < len; j++) {
                    if (s[j] == smaller) {
                        swap(s[j], s[i]);
                        break;
                    }
                }
                break;
            }
        }
        for (int i = len - 1; i >= 0; i--) {
            cout << s[i];
        }
        cout << " ";
        memcpy(s, stemp, sizeof(s));
        
        memcpy(st, s, sizeof(s));
        sort(st, st + len, cmp1);
        
        for (int i = len - 1; i >= 0; i--) {
            if (st[i] != s[i]) {
                int smaller = st[i];
                int big = s[i];
                for (int j = 0; j < len; j++) {
                    if (s[j] == smaller) {
                        swap(s[j], s[i]);
                        break;
                    }
                }
                break;
            }
        }
        
        
        
        for (int i = len - 1; i >= 0; i--) {
            cout << s[i];
        }
        cout << endl;
    }
    return 0;
}