#include<iostream>#include<algorithm>#include<cstdio>#include<vector>#include<cstring>#include<string>#include<cstdlib>#include<math.h>#include<cctype>#include<map>#include<set>#include<stack>#include<queue>#include<cassert>#include<sstream> using namespace std; #define L long#define LL long long#define ULL unsigned long long//#define D double#define LD long double#define MOD 1000000007#define f first#define s second#define pb push_back#define mp make_pair#define ULL unsigned long long#define pll pair <L,L>#define INF ((1<<30)+(1<<29))  LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}LL lcm(LL a,LL b){return (a*b)/gcd(a,b);}LL modpow(LL n ,LL k,LL mod){LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans%mod;}LL max(LL a,LL b){return (a>b)?a:b;}LL min(LL a,LL b){return (a<b)?a:b;}LL ab(LL a){return (a>0)?a:-a;} L max(L a,L b){return (a>b)?a:b;}L min(L a,L b){return (a<b)?a:b;}L ab(L a){return (a>0)?a:-a;}   LL A[15]={},B[15]={};LL f(LL n){ LL i=0,j,t; while(n) {  A[i]=n%10;  i++;  n/=10; } for(j=0;j<i/2;j++)  t=A[i-j-1],A[i-j-1]=A[j],A[j]=t; return i;}LL f1(LL l){ LL i,ans=0; for(i=0;i<l;i++)  ans*=10,ans+=A[i]; return ans;}int main(){ ios::sync_with_stdio(false); LL T,tt=0,i,l,n,flag,k,j; cin>>T; while(T--) {tt++;  cin>>n;  for(i=0;i<10;i++)A[i]=0;  l=f(n);  for(i=0;i<l;i++)B[i]=A[i];  flag=0;  for(i=0;flag==0&&i<l-1;i++)  {   k=i+1;   for(j=i+2;j<l;j++)   {    if(A[j]<A[k])	{	 k=j;	}   }   if(A[k]<A[i]&&((A[k]!=0&&i==0)||i!=0))   {    flag=1;	j=A[i],A[i]=A[k],A[k]=j;   }  }  cout<<"Case #"<<tt<<": "<<f1(l)<<" ";  for(i=0;i<l;i++)A[i]=B[i];  flag=0;  for(i=0;flag==0&&i<l-1;i++)  {   k=i+1;   for(j=i+2;j<l;j++)   {    if(A[j]>A[k])	 k=j;   }   if(A[k]>A[i])   {    flag=1;	j=A[i],A[i]=A[k],A[k]=j;   }  }  cout<<f1(l)<<endl; } return 0;}