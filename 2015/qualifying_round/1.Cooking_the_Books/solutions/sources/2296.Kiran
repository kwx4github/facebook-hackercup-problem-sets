#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
typedef unsigned long long ull;

vector<int> getDigits(ull input)
{
    vector<int> result;
    while(input!=0)
    {
        int rem=input%10;
        result.push_back(rem);
        input/=10;
    }
    reverse(result.begin(),result.end());
    return result;
}

ull toNumber(vector<int> input)
{
    ull result;
    result=0;
    for(int i=0;i<input.size();i++)
    {
        result*=10;
        result+=input[i];
    }
    return result;
}

int main()
{
    int t;
    cin>>t;
    for(int counter=1;counter<=t;counter++)
    {
        ull number;
        cin>>number;
        vector<int> digits=getDigits(number);

        //Perform brute force on swaps
        vector<int> tmp;
        tmp=digits;
        ull large=number;
        ull small=number;
        for(int i=0;i<digits.size();i++)
        {
            for(int j=0;j<digits.size();j++)
            {
                tmp=digits;
                //swap digits at i and j
                int t=tmp[i];
                tmp[i]=tmp[j];
                tmp[j]=t;
                //cout<<i<<" "<<j<<" "<<large<<" "<<small<<" "<<toNumber(tmp)<< "\n";
                if(tmp[0]!=0&&number!=0)
                {
                    //generate digit
                    ull d=toNumber(tmp);
                    if(d>large)
                        large=d;
                    if(d<small)
                        small=d;
                }
            }
        }

        cout<<"Case #"<<counter<<": "<<small<<" "<<large<<"\n";
    }
}
