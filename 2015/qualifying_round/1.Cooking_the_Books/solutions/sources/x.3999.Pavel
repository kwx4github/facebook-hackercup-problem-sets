#!/usr/bin/python
import sys
from functools import partial

lines = sys.stdin.readlines()
result = {}


for line in lines:
    number = line.strip()
    if number == '0':
        continue
    digits = list(enumerate(line.strip()))
    minmax = []
    for f in map(lambda f: partial(f, key=lambda x: x[1]), [min, max]):
        num = map(lambda x: x[1], digits[:])
        for i, digit in digits:
            try:
                if i == 0:
                    (index, value) = f(filter(lambda x: x[1] is not '0', digits[i:]))
                else:
                    (index, value) = f(digits[i:])
                if value != digits[i]:
                    num[i], num[index] = num[index], num[i]
                    break
            except ValueError:
                continue
        minmax.append("".join(num))
    result[minmax[0]] = minmax[1]

for i, (m, M) in enumerate(sorted(result.iteritems(), key=lambda x: int(x[1]))[::-1]):
    print "Case #%s: %s %s" % (i+1, m, M)

