package main

import (
	"fmt"
	"strconv"
)

func solve(N string, buf chan string) {
	v := []byte(N)
	min := N
	max := N
	for i := 0; i < len(v); i++ {
		for j := i + 1; j < len(v); j++ {
			if v[i] == '0' || v[j] == '0' {
				continue
			}
			v[i], v[j] = v[j], v[i]
			A := string(v)
			if min > A {
				min = A
			}
			if max < A {
				max = A
			}
		}
	}
	buf <- fmt.Sprintf("%s %s", min, max)
}

func main() {
	var s string
	fmt.Scan(&s)

	T, _ := strconv.Atoi(s)
	buf := make(chan string, T)

	for t := 0; t < T; t++ {
		var N string
		fmt.Scan(&N)
		go solve(N, buf)
	}

	for t := 1; t <= T; t++ {
		out := <-buf
		fmt.Println("Case #" + strconv.Itoa(t) + ": " + out)
	}

}
