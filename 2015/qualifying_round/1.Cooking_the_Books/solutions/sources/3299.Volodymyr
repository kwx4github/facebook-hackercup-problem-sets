#include <cstdio>
#include <iostream>
#include <fstream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctime>
#define rep(i,n) for(int i=0;i<n;i++)

using namespace std;

int T;
long long N;
long long Nmin, Nmax;
//vector<int> digi;

vector<int> NtoDigi(long long number) {
	vector<int> ret(0);
	if (number==0) ret.push_back(0);
	while (number>0) {
		ret.push_back(number%10);
		number /= 10;
	}
	reverse(ret.begin(), ret.end());
	return ret;
}

long long DigitoN(const vector<int> & digs) {
	long long ret = 0;
	rep(i,digs.size())
	{
		ret = ret*10. + digs[i];
	}
	return ret;
}

void Solve() {
	vector<int> digi = NtoDigi(N);
	Nmin = Nmax = N;
	for(int i1=0;i1<digi.size()-1;++i1)
		for(int i2=i1+1;i2<digi.size();++i2) {
			if (i1!=0 || digi[i2]!=0) {
				swap(digi[i1], digi[i2]);
				long long tnum = DigitoN(digi);
				Nmin = min(Nmin, tnum);
				Nmax = max(Nmax, tnum);
				swap(digi[i1], digi[i2]);
			}
		}
}

int main()
{
    fstream fin("cooking_the_books.in",ifstream::in);
    fstream fout("cooking_the_books.out",ofstream::out);
    fin >> T;
	char sstr[1000];
    for(int jj=1;jj<=T;jj++)
    {
        fin >> N;
		Solve();
		if (N==0) Nmin = Nmax = N;
        cout << "Case #" << jj << ": " << Nmin << " " << Nmax << "\n";
		fout << "Case #" << jj << ": " << Nmin << " " << Nmax << "\n";
    }
    fin.close();
    fout.close();
    cout << "running time=" << clock()/(double)CLOCKS_PER_SEC << "\n";
    system("PAUSE");
    return 0;
}
