#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<fstream>

using namespace std;

vector<int> ans_low;
vector<int> ans_hi;

vector<int> low_no;
vector<int> hi_no;

void lowest_n(int n) {
int k = n;
int dig;
while(k != 0) {
    dig=k%10;
    k=k/10;
    low_no.push_back(dig);
}

reverse(low_no.begin(), low_no.end());
hi_no = low_no;

vector<int>::iterator it;
vector<int>::iterator bg;
int temp = 0;

vector<int>::iterator it1;
vector<int>::iterator bg1;
int temp1 = 0;

bg = low_no.begin();

while(bg!= low_no.end()) {
    it = min_element(bg,low_no.end());
    if(bg == low_no.begin() && *it == 0 ) {
	bg++;
    }else{
	if(it != bg ) {
	    temp = *it;
	    *it = *bg;
	    *bg = temp;
	    break;
	}
	bg++;
    }
} 

bg1 = hi_no.begin();

while(bg1!= hi_no.end()) {
    it1 = max_element(bg1,hi_no.end());
    {
	if(it1 != bg1 ) {
	    temp1 = *it1;
	    *it1 = *bg1;
	    *bg1 = temp1;
	    break;
	}
	bg1++;
    }
}
int b=0;
int b1 = 0;
for(it = low_no.begin(); it != low_no.end(); ++it) {
    b = b*10+ *it;
}

for(it = hi_no.begin(); it != hi_no.end(); ++it) {
    b1 = b1*10+ *it;
}
ans_low.push_back(b);
ans_hi.push_back(b1);
}

int main() 
{
ifstream myfile("input.txt");
int t, n;
while(myfile >> t){
    vector<int> v(10, 0);
    for(int i=0; i < t; ++i) {
        myfile >> n;
	lowest_n(n);
	low_no.clear();
	hi_no.clear();
    }
}
for(int i=0; i<t; ++i) {
cout<<"Case #"<<i+1<<": "<<ans_low[i]<<" "<<ans_hi[i]<<"\n";
}

return 0;
}
