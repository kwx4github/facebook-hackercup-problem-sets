/* package whatever; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
public class Accountant
{
	public static void main (String[] args) throws java.lang.Exception
	{
		String fileName = args[0];
		List<Integer> inputLines = readLines(fileName);
		
		FileOutputStream f = new FileOutputStream("cooking_the_books_output.txt");
		PrintStream ps = new PrintStream(f);
		
		for(int i=1; i<inputLines.size(); i++)
		{
			int n =inputLines.get(i);
			
			Integer swappedMax = n;
			Integer swappedMin =n;
			
			if(n>10)
			{
				List<Integer> list = digitList(n);
				List<Integer> maxList = getMax(list);
				swappedMax = numberFromDigits(maxList);
				
				List<Integer> list2 = digitList(n);
				List<Integer> minList = getMin(list2);
				swappedMin = numberFromDigits(minList);
			}
			
			ps.printf("Case #%d: %d %d",i,swappedMin,swappedMax);
			ps.println(); //this writes your new line
			
		}
		ps.close();
	}
	
	public static List<Integer> readLines(String filename) throws IOException {
        FileReader fileReader = new FileReader(filename);
        BufferedReader bufferedReader = new BufferedReader(fileReader);
        List<Integer> lines = new ArrayList<Integer>();
        String line = null;
        while ((line = bufferedReader.readLine()) != null) {
            lines.add(Integer.parseInt(line));
        }
        bufferedReader.close();
        return lines;//.toArray(new Integer[lines.size()]);
    }
    
    public static List<Integer> digitList(Integer n)
    {
    	int x = (int)Math.log10(n);
    	//System.out.println(x);
    	
    	List<Integer> lines = new ArrayList<Integer>();
    	
    	for (int i =x; i>0 ;i--)
    	{
    		Integer d = (int) (n/(Math.pow(10,i)));
    		n = (int) (n%(Math.pow(10,i)));
    		
    		//System.out.println(d);
    		//System.out.println(n);
    		lines.add(d);
    	}
    	lines.add(n);
    	return lines;
    }
    
    public static Integer numberFromDigits(List<Integer> list)
    {
    	Integer n = 0;
    	int size = list.size();
    	for(int i=0; i<size; i++)
    	{
        	n += list.get(size-i-1)*(int)Math.pow(10,i);
        }
        
        return n;
    }
    
    public static List<Integer> getMin(List<Integer> list)
    {
    	int min = Integer.MAX_VALUE;
    	
    	int firstDigitX = list.get(0);
    	
    	if(firstDigitX == 1)
    	{
    		int minIndex = 1;
    	    int firstDigit = list.get(1);
    		//move the smallest or 0 to the 2nd position
    		for(int i=1; i<list.size(); i++)
	    	{
	        	if(list.get(i) < min )
	        	{
	            	min = list.get(i);
	            	minIndex = i;
	            }
	        }
	        
	        list.set(1,min);
        	list.set(minIndex,firstDigit);
    	}
    	else
    	{
    		int minIndex = 0;
    	    int firstDigit = list.get(0);
    	    
	    	for(int i=0; i<list.size(); i++)
	    	{
	        	if(list.get(i) < min && list.get(i) !=0)
	        	{
	            	min = list.get(i);
	            	minIndex = i;
	            }
	        }
	        
	        list.set(0,min);
        	list.set(minIndex,firstDigit);
    	}
        
        //System.out.println(min);
        
        //list.set(0,min);
        //list.set(minIndex,firstDigit);
        
    	return list;
    }
    
    public static List<Integer> getMax(List<Integer> list)
    {
    	int max = Integer.MIN_VALUE;
    	int maxIndex = 0;
    	int firstDigit = list.get(0);
    	for(int i=0; i<list.size(); i++)
    	{
        	if(list.get(i) > max)
        	{
            	max = list.get(i);
            	maxIndex = i;
            }
        }
        
        //System.out.println(max);
        
        list.set(0,max);
        list.set(maxIndex,firstDigit);
        
    	return list;
    }
}