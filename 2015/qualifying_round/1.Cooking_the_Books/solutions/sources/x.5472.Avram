def readData(fileName):
    result = []
    with open(fileName) as file:
        numberOfLines = int(file.readline().split()[0]) # citesc numarul de linii
        for line in file: # pentru restul liniilor
            result.append(int(line))
    return result

def generateDigitList(number): # returneaza o lista fiecare element din lista fiind o cifra din numarul respectiv
    result = []
    while number != 0:
        number, modulus = divmod(number, 10)
        result.append(modulus)
    return result


def myMin(list):
    newList = []
    for digit in list:
        if digit != 0:
            newList.append(digit)
    if len(newList) == 0:
        return -1
    return min(newList)



def generateNumberFromDigitList(listDigits):
    result = 0
    for digit in listDigits:
        result *= 10
        result += digit  
    return result

def generateBiggestSmallest(number, option = 0): # daca option != 0, trebuie generat cel mai mic numar
    digitList = generateDigitList(number) # lista cu cifrele pt. nr. respectiv
    digitList.reverse() # inversez lista

    i = 0
    while i < (len(digitList) - 1):
        j = i + 1
        newList = digitList[j::] # fac o noua lista cu toate elementele de dupa elementul la care sunt
        if option != 0:
            maxMinFromNewList = myMin(newList)
        else:
            maxMinFromNewList = max(newList)
        if maxMinFromNewList not in digitList:
            i += 1
            continue
        indexMaxMinFromNewList = newList.index(maxMinFromNewList) + i + 1
        conditionIsSatisfied = False # daca e satisfacuta conditia de  a se face interschimbarea
        if option != 0:
            if maxMinFromNewList < digitList[i]:
                conditionIsSatisfied = True
        else:
            if maxMinFromNewList > digitList[i]:
                conditionIsSatisfied = True
        if conditionIsSatisfied == True: # am de facut intershimbarea
            listAux = digitList[:] # fac o copie a primei liste
            auxNumber = listAux[i]
            listAux[i] = maxMinFromNewList
            listAux[indexMaxMinFromNewList] = auxNumber
            newNumber = generateNumberFromDigitList(listAux)
            oldLen = len(str(number))
            newLen = len(str(newNumber))
            if newLen == oldLen:
                return newNumber # returnez numarul maxim/minim
        i += 1
    return number # daca nu s-a returnat nimic pana in prezent, inseamna ca nu s-a gasit un numar mai mare




def main():
    numbersToBeModified = readData("cooking_the_books.txt")
    i = 0
    for number in numbersToBeModified:
        bNr = generateBiggestSmallest(number)
        sNr = generateBiggestSmallest(number, 1)
        print("Case #{}: {} {}".format(i + 1, sNr, bNr))
        i += 1
        

if __name__ == "__main__": main()