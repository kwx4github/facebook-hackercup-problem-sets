#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstdio>
#include <cstring>
#include <set>
#include <map>
#include <queue>
using namespace std;

#define BARSUK_ALEXEY_PSKOV


vector<int> getDigits(long long num)
{
    vector<int> result;
    if (!num)
    {
        result.push_back(0);
        return result;
    }
    while (num)
    {
        result.push_back(num % 10);
        num /= 10;
    }

    reverse(result.begin(), result.end());

    return result;
}

long long getNumber(vector<int> & digits, int i, int j)
{
    long long result = 0;
    for (int k = 0; k < (int)digits.size(); k++) {
        if (k == i)
            result = result * 10 + digits.at(j);
        else if (k == j)
            result = result * 10 + digits.at(i);
        else
            result = result * 10 + digits.at(k);
    }
    return result;
}

int getDigCount(long long num)
{
    return (int)getDigits(num).size();
}

int main()
{
#ifdef BARSUK_ALEXEY_PSKOV
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif

    int tests;
    cin >> tests;
    for (int t = 1; t <= tests; t++)
    {
        long long num;
        cin >> num;
        vector<int> digits = getDigits(num);
        int digitsCount = getDigCount(num);
        set<long long> numbers;
        for (int i = 0; i < (int)digits.size(); i++) {
            for (int j = i; j < (int)digits.size(); j++) {
                long long number = getNumber(digits, i, j);
                if (getDigCount(number) == digitsCount)
                    numbers.insert(number);
            }
        }
        cout << "Case #" << t << ": " << (*numbers.begin()) << " " << (*numbers.rbegin()) << endl;
    }

    return 0;
}

