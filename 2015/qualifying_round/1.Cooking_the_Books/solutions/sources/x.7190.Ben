#include <iostream>
#include <fstream>
#include <array>
//#include <string>
#include <vector>
//#include <algorithm>
//#include <map>
using namespace std;

//#include "user.h"

struct node {
    int data;
    node* next;
};

int main(int argc, char** argv) {
    ifstream fo;
    string line;
    fo.open("cooking_the_books.txt");
    
    if(fo.is_open()) {
        
        //create a count
        string count;
        
        //get the count
        getline(fo, count);
        
        //count up the times
        int counter = 1;
        
        //while there are lines to get
        while( getline(fo, line) ) {
            
            cout << "Case #" << counter << ": ";
            counter++;
            
            //create a blank vector
            vector<int> intArray;
            vector<int> maxArray;
            vector<int> minArray;
            
            //go through each number in the vector
            for(unsigned long i = 0; i < line.length(); i++) {
                int num = line[i] - '0';
                intArray.push_back(num);
                maxArray.push_back(num);
                minArray.push_back(num);
                
                //cout << "line: " << num << endl;
            }
            
            sort(intArray.begin(), intArray.end());
            
            unsigned long swap_spot = 0;
            
            while(intArray[swap_spot] == 0) {
                swap_spot++;
            }
            
            unsigned long minSwapSpot = line.find(to_string(intArray[swap_spot]));
            
            int tempVal = minArray[0];
            minArray[0] = intArray[swap_spot];
            minArray[minSwapSpot] = tempVal;
            
            for(unsigned long i = 0; i < minArray.size(); i++) {
                cout << minArray[i];
            }
            
            cout << " ";
            
            unsigned long top_swap = intArray.size() - 1;
            
            unsigned long maxSwapSpot = line.find(to_string(intArray[top_swap]));
            
            int topVal = maxArray[maxSwapSpot];
            maxArray[maxSwapSpot] = maxArray[0];
            maxArray[0] = topVal;
            
            
            for(unsigned long i = 0; i < maxArray.size(); i++) {
                cout << maxArray[i];
            }
            
            cout << endl;
            
        }
        fo.close();
    } else {
        cout << "can't open file";
    }
}