package cookingthebooks;

import java.io.*;

public class CookingTheBooks {

    public static void main(String[] args) {
        if (args.length != 2) {
            System.out.println("Incorrect arguments number");
            return;
        }

        String inputFilePath = args[0];
        String outputFilePath = args[1];

        try (BufferedReader input = new BufferedReader(new FileReader(inputFilePath));
             BufferedWriter output = new BufferedWriter(new FileWriter(outputFilePath))
        ) {
            CookingTheBooks application = new CookingTheBooks();
            String line = input.readLine();
            int size = Integer.parseInt(line);

            for (int i = 0; i < size; i++) {
                line = input.readLine();
                String result = application.process(line, i + 1);
                output.write(result);
                output.write("\n");

                System.out.println(result);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public String process(String line, int caseNumber) {
        if (line.length() == 1) {
            return "Case #" + caseNumber + ": " + line + " " + line;
        }

        int length = line.length();
        int[] minNumber = new int[line.length()];
        int[] maxNumber = new int[line.length()];

        // prepare arrays
        for (int i = 0; i < length; i++) {
            int digit = Character.getNumericValue(line.charAt(i));
            maxNumber[i] = minNumber[i] = digit;
        }

        // find minimal
        for (int i = 0; i < length - 1; i++) {
            int min = Integer.MAX_VALUE;
            int minIndex = Integer.MAX_VALUE;

            for (int j = length - 1; j > i; j--) {
                if (minNumber[j] < min && !(i == 0 && minNumber[j] == 0)) {
                    min = minNumber[j];
                    minIndex = j;
                }
            }

            if (min < minNumber[i]) {
                minNumber[minIndex] = minNumber[i];
                minNumber[i] = min;
                break;
            }
        }

        // find maximal
        for (int i = 0; i < length - 1; i++) {
            int max = Integer.MIN_VALUE;
            int maxIndex = Integer.MIN_VALUE;

            for (int j = length - 1; j > i; j--) {
                if (maxNumber[j] > max) {
                    max = maxNumber[j];
                    maxIndex = j;
                }
            }

            if (max > maxNumber[i]) {
                maxNumber[maxIndex] = maxNumber[i];
                maxNumber[i] = max;
                break;
            }
        }

        return "Case #" + caseNumber + ": " + arrayToString(minNumber) + " " + arrayToString(maxNumber);
    }

    private static String arrayToString(int[] array) {
        StringBuilder sb = new StringBuilder();
        for (int i : array) {
            sb.append(i);
        }
        return sb.toString();
    }
}
