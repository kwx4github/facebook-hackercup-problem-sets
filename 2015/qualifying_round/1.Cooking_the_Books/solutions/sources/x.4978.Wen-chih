import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class CookingBook {
	public static void main( String args[]) {
		try {
			new CookingBook().read();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void read() throws IOException {
		BufferedReader reader = new BufferedReader(new FileReader("input.txt"));
		int data = Integer.parseInt(reader.readLine());
		for (int c = 0; c < data; c++) {
			String line = reader.readLine();
			int array[] = new int[line.length()];
			for (int i = 0; i < line.length(); i++) {
				char a = line.charAt(i);
				array[i] = Character.getNumericValue(a);

				
			}
			solve(c, array);
		}

		reader.close();
	}

	public void solve(int c, int array[]) {
		int max = 1;
		int maxIndex = -1;
		int min = 9;
		int minIndex = -1;
		int size = array.length;
		for (int i = 0; i < size; i++) {
			int k = array[i];
			if (k > max) {
				maxIndex = i;
				max = k;
			}
			if (k < min && k > 0) {
				min = k;
				minIndex = i;
			}
		}
		int largest[] = copy(array, size);
		int smallest[] = copy(array, size);
		if (array[0] < max && maxIndex > 0) {
			swap(largest, 0, maxIndex);
		}
		if (array[0] > min&& minIndex >=0) {
			swap(smallest, 0, minIndex);
		}
		String smallestStr = "";
		String largestStr = "";
		for (int i = 0; i < size; i++) {
			smallestStr += "" + smallest[i];
			largestStr += "" + largest[i];
		}

		System.out.println(String.format("Case #%d: %s %s", c+1, smallestStr,
				largestStr));
	}

	public int[] copy(int array[], int size) {
		int copy[] = new int[size];
		for (int i = 0; i < size; i++) {
			copy[i] = array[i];
		}
		return copy;
	}

	public void swap(int array[], int i, int j) {
		int hold = array[i];
		array[i] = array[j];
		array[j] = hold;
	}
}
