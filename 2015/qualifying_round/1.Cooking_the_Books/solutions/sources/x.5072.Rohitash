# include<iostream>
# include<vector>
# include<string>
# include<algorithm>
using namespace std;

inline int to_int(char c) {
  return c - '0';
}

int main() {
  int t;
  cin >> t;
  int k= 1; 
  while ( t-- ) {
    string num;
    cin >> num;

    string max_ans = num, min_ans = num;
    int max_digit = - 1, min_digit = 1<<20;
    for (int i=0; i<num.size(); i++) {
      int d = to_int(num[i]);

      max_digit = max(max_digit, d);
      min_digit = min(min_digit, d);
    }
    
    if ( max_digit != -1 ) {
      bool done = false;
      for (int i=0; !done && i<num.size(); i++) {
	if ( to_int(num[i]) != max_digit ) {
	  for (int j=i+1; !done && j<num.size(); j++) {
	    if ( i == 0 && to_int(num[j]) == 0) continue;
	    if ( to_int(num[j]) == max_digit) {
	      swap(max_ans[i], max_ans[j]);
	      break;
	    }
	  }
	}
      }
    }

    // cout << max_digit << " " << min_digit <<"\n";
    if ( min_digit != -1 ) {
      bool done = false;
      for (int i=0; !done && i<num.size(); i++) {
	if ( to_int(num[i]) != min_digit ) {
	  for (int j=i+1; !done && j<num.size(); j++) {
	    if ( i == 0 && to_int(num[j]) == 0) continue;
	    if ( to_int(num[j]) == min_digit) {
	      swap(min_ans[i], min_ans[j]);
	      break;
	    }
	  }
	}
      }

    }

    
    
    cout <<"Case #"<<k<<": " << min_ans << " " << max_ans << "\n";
    k++;
  } 
  return 0;
}
