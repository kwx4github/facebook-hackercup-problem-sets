#include<iostream>
#include<math.h>

using namespace std;

//Function used : main

int main()
{
	int NoOfNumbers;
	cin>>NoOfNumbers;
	if(NoOfNumbers>=1 && NoOfNumbers<=100)
	{
	for(int i=0;i<NoOfNumbers;i++)
	{
		int NoOfDigits=0;
		long int Number,temp;
		cin>>Number;
		if (Number>999999999 || Number<0)
		{
			cout<<"Invalid Number\n";
			continue;
		}
		if(Number==0)
		{
			cout<<"Case #"<<i+1<<": 0 0\n";
			continue;
		}
	
		temp=Number;
		while(temp)
		{
			temp=temp/10;
			NoOfDigits++;
		}
		int n=1,Digits[NoOfDigits];
		Digits[0]=Number%10;
		Number=Number/10;
		while(Number)
		{
			Digits[n]=Number%10;
			Number=Number/10;
			n++;
		}
		
		
		//Finding smallest and largest its position
		int pos=0;
		for(int p=0;p<NoOfDigits;p++)
		{
			if(Digits[p]!=0)
			{
				pos=p;
			}
		}

		int PositionOfSmallest=pos,PositionOfLargest=pos;
		
		for (int j=0;j<NoOfDigits;j++)
		{
			if((Digits[j]<Digits[PositionOfSmallest])&&(Digits[j]!=0))
			{
				PositionOfSmallest=j;
			}
	    
			if(Digits[j]>Digits[PositionOfLargest])
			{
				PositionOfLargest=j;
			}
		}
		//exchanging poitions for the smallest
		int temp1;
		temp1=Digits[NoOfDigits-1];
		Digits[NoOfDigits-1]=Digits[PositionOfSmallest];
		Digits[PositionOfSmallest]=temp1;

		//Case #1: 13524 51324		
		cout<<"Case #"<<i+1<<": ";
		for(int p=NoOfDigits-1;p>=0;p--)
		{
			cout<<Digits[p];
		}
		//Getting back to original
		temp1=Digits[NoOfDigits-1];
		Digits[NoOfDigits-1]=Digits[PositionOfSmallest];
		Digits[PositionOfSmallest]=temp1;
		
		//exchanging poitions for the largest
		temp1=Digits[NoOfDigits-1];
		Digits[NoOfDigits-1]=Digits[PositionOfLargest];
		Digits[PositionOfLargest]=temp1;
		
		cout<<" ";
		for(int p=NoOfDigits-1;p>=0;p--)
		{
			cout<<Digits[p];
		}
		
		cout<<"\n";
		
		
	}
	}
	return 0;
}
