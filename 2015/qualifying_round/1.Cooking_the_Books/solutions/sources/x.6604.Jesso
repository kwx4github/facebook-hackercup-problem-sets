import multiprocessing


def read_input():
    with open('input.txt') as fp:
        n = int(fp.readline())
        inp_list = fp.readlines()

    inp_list = [x.strip() for x in inp_list]
    return inp_list


def swapper(str1, check_func):
    str1 = list(str1)
    first_char = str1[0]
    elem = first_char
    pos = 0
    for i, x in enumerate(str1):
        if check_func(x, elem) and x != '0':
            elem = x
            pos = i

    str1[pos] = first_char
    str1[0] = elem
    return ''.join(str1)


min_check = lambda x, y: int(x) < int(y)
max_check = lambda x, y: int(x) > int(y)


def processor(q):
    return (swapper(q, min_check),  swapper(q, max_check))


if __name__ == '__main__':
    pool = multiprocessing.Pool(4)

    questions = read_input()
    answers = pool.map(processor, questions)
    for i, ans in enumerate(answers):
        print 'Case', '#' + str(i+1) + ':', ans[0], ans[1]
