//template
#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <utility>
#include <cstdio>
#include <cmath>
#include <cstring>                                                                                      
#include <queue>
#include <sstream>
#include <iomanip>
#include <limits>
using namespace std;
//cout << fixed << setprecision(4);
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define putl(n) cout << n << endl
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()



int main(){
    //freopen("input.txt", "r", stdin);
    geti(T);
    rep(i,T){
    	geti(N);
    	vi number;
    	vi greater;
    	if(N==0){
    		number.pb(0);
    		greater.pb(0);
    	}
    	while(N!=0){
    		int tmp=N%10;
    		number.pb(tmp);
            greater.pb(tmp);   		    		
    		N/=10;
    		
    	}

    	reverse(number.begin(),number.end());
    	reverse(greater.begin(),greater.end());
        

    	//loop for smallest
    	rep(j,number.size()){
    		int _min=number[j];
    		int pos=j;
    		fu(k,j+1,number.size()){
    			if(number[k]==0 && j==0) continue;

    			if(_min >= number[k]  && number[k] != number[j]){
    				_min=number[k];
    				pos=k;
    			}
    			
    		}
    		if(pos !=j){
    			swap(number[j],number[pos]);
    			break;
    		}
    	}
    	
    	//loop for graetest
    	rep(j,greater.size()){
	        int _max=greater[j];
	        int pos=j;
    		
    		fu(k,j+1,greater.size()){

    			if(_max <= greater[k]  && greater[k] !=greater[j]){
    				_max=greater[k];
    				pos=k;
    			}
    		}
    		if(pos !=j){
    			swap(greater[j],greater[pos]);
    			break;
    		}

    	}



    	printf("Case #%d: ",i+1);
    	rep(j,number.size()){
    		printf("%d",number[j]);
    	}
    	printf(" ");
    	rep(j,number.size()){
    		printf("%d",greater[j]);
    	}
    	printf("\n");


    }



	return 0;

}