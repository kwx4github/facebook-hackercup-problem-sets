#include <iostream>
#include <cstring>

using namespace std;

int find_max_pos(string N)
{
	int i, pos = 0;
	char max;

	if (N.size() <= 1)
		return 0;

	max = N[0];
	
	for (i = 1; i < N.size(); i++) {
		if (N[i] >= max) {
			max = N[i];
			pos = i;
		}
	}

	return pos;
}

int find_min_pos(string N)
{
	int i, pos = 0;
	char min;

	if (N.size() <= 1)
		return 0;

	min = N[0];

	for (i = 0; i < N.size(); i++) {
		if (N[i] != '0' && N[i] <= min) {
			min = N[i];
			pos = i;
		}
	}
	return pos;
}

void find(string N, string &M, int (*find_pos)(string))
{
	int ret;
	
	M = N;

	ret = find_pos(N);
	if (ret) {
		M[0] = N[ret];
		M[ret] = N[0];
	}
}


	
int main(void)
{
	string N, max, min;
	int T, i;
	
	cin >> T;

	for (i = 1; i <= T; i++) {
		cin >> N;
		find(N, max, find_max_pos);
		find(N, min, find_min_pos);
		
		cout << "Case #"<<i<<": "<<min<<" "<<max << endl;
	}
	return 0;
}
	
