input = ""

File.open("cooking_the_books.txt", "r") do |inputFile|
  while line = inputFile.gets
    input += line
  end
end

lines = input.lines

numCases = lines.shift.to_i

counter = 0
output = ""

numCases.times do
  smallest = ""
  largest = ""

  num = lines.shift
  digitsSmall = num.to_s.split('').map {|num| num.to_i}
  discard = digitsSmall.pop
  digitsLarge = Array.new(digitsSmall)

  smallToLarge = digitsSmall.sort
  smallToLargeNoZeros = Array.new(smallToLarge)
  largeToSmall = digitsLarge.sort.reverse

  ## Largest possible
  while (digitsLarge[0] == largeToSmall[0]) && digitsLarge.length > 1 #remove digits already in order
    largest += digitsLarge.shift.to_s
    discard = largeToSmall.shift
  end

  if digitsLarge.length > 1 #if any are left
    temp = digitsLarge.shift #store current next digit
    swapPlace = digitsLarge.index(largeToSmall.shift) #find where we'll swap
    middle = digitsLarge.slice!(0, swapPlace) #hold whatever's between
    largest += digitsLarge.shift.to_s #shift what is the earliest largest digit
    while middle.length > 0
      largest += middle.shift.to_s #replace what was between
    end
    largest += temp.to_s #swap in the earlier character
    while digitsLarge.length > 0
      largest += digitsLarge.shift.to_s
    end
  else # otherwise, just concat whatever is left. Handles empty array gracefully
    largest += digitsLarge.shift.to_s
  end

  ## Smallest possible

  smallToLargeNoZeros = Array.new(smallToLarge)

  while smallToLargeNoZeros[0] == 0
    discard = smallToLargeNoZeros.shift
  end

  underConsideration = smallToLargeNoZeros[0]

  while (digitsSmall[0] == underConsideration) && digitsSmall.length > 1 #remove digits already in order
    smallest += digitsSmall.shift.to_s
    discard = smallToLarge.shift
    underConsideration = smallToLarge[0]
  end

  if digitsSmall.length > 1 #if any are left
    temp = digitsSmall.shift #store current next digit
    if(smallest.length == 0)
      swapPlace = digitsSmall.rindex(smallToLargeNoZeros.shift) #find where we'll swap
    else
      swapPlace = digitsSmall.rindex(smallToLarge.shift)
    end
    if (swapPlace != nil)
      middle = digitsSmall.slice!(0, swapPlace) #hold whatever's between
    end
    smallest += digitsSmall.shift.to_s #shift what is the earliest largest digit
    if (swapPlace != nil)
      while middle.length > 0
        smallest += middle.shift.to_s #replace what was between
      end
    end
    smallest += temp.to_s #swap in the earlier character
    while digitsSmall.length > 0
      smallest += digitsSmall.shift.to_s
    end
  else # otherwise, just concat whatever is left. Handles empty array gracefully
    smallest += digitsSmall.shift.to_s
  end

  counter += 1
  output += "Case #" + counter.to_s + ": " + smallest + " " + largest + "\n"

end

File.open("output.txt", "w") do |file|
  file.puts output
end
