import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Cooking {

    private BufferedReader in;
    private StringTokenizer st;
    private PrintWriter out;

    void solve() throws IOException {

        int t = nextInt();
        int kase = 0;
        while (t-- > 0) {
            kase++;
            out.print("Case #" + kase + ": ");
            String a = next();
            char[] str = a.toCharArray();

            String minStr = a;
            for (int i = 0; i < str.length; i++) {
                char min = '9';
                int minIndex = 0;
                for (int j = i + 1; j < str.length; j++) {
                    if (str[j] < min) {
                        min = str[j];
                        minIndex = j;
                    }
                }
                if (i == 0 && min == '0') {
                    continue;
                }
                if (min < str[i]) {
                    char tmp = str[i];
                    str[i] = min;
                    str[minIndex] = tmp;
                    minStr = String.valueOf(str);
                    break;
                }
            }
            out.print(minStr + " ");
            str = a.toCharArray();
            String maxStr = a;

            for (int i = 0; i < str.length; i++) {
                char max = '0';
                int maxIndex = 0;
                for (int j = i + 1; j < str.length; j++) {
                    if (str[j] > max) {
                        max = str[j];
                        maxIndex = j;
                    }
                }
                if (max > str[i]) {
                    char tmp = str[i];
                    str[i] = max;
                    str[maxIndex] = tmp;
                    maxStr = String.valueOf(str);
                    break;
                }
            }
            out.println(maxStr);

        }
    }

    Cooking() throws IOException {
        in = new BufferedReader(new FileReader("in"));
        out = new PrintWriter(new FileWriter("out"));
        eat("");
        solve();
        out.close();
    }

    private void eat(String str) {
        st = new StringTokenizer(str);
    }

    String next() throws IOException {
        while (!st.hasMoreTokens()) {
            String line = in.readLine();
            if (line == null) {
                return null;
            }
            eat(line);
        }
        return st.nextToken();
    }

    int nextInt() throws IOException {
        return Integer.parseInt(next());
    }

    long nextLong() throws IOException {
        return Long.parseLong(next());
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(next());
    }

    public static void main(String[] args) throws IOException {
        new Cooking();
    }

    int gcd(int a, int b) {
        if (b > a)
            return gcd(b, a);
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }

}
