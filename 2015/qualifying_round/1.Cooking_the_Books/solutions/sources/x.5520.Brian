#include <iostream>
#include <vector>
#include <utility>
#include <algorithm>

using namespace std;

int main() {
  int case_number = 1;
  int T; cin >> T;
  while (T--) {
    int N; cin >> N;

    if (N < 10) {
      cout << "Case #" << case_number << ": " << N << " " << N << endl;
      case_number++;
      continue;
    }

    cout << "Case #" << case_number << ": ";

    vector<int> V;
    int n = N;
    while (n > 0) { V.push_back(n % 10); n /= 10; }

    auto min = min_element(V.begin(), V.end()-1);
    bool swap = *min != 0 && *min < V.back();

    if (swap) { int tmp = *min; *min = V.back(); V.back() = tmp; }
    reverse(V.begin(), V.end());
    for (auto e : V) cout << e;
    reverse(V.begin(), V.end());
    if (swap) { int tmp = *min; *min = V.back(); V.back() = tmp; }

    cout << " ";

    auto max = max_element(V.begin(), V.end()-1);
    swap = *max > V.back();

    if (swap) { int tmp = *max; *max = V.back(); V.back() = tmp; }
    reverse(V.begin(), V.end());
    for (auto e : V) cout << e;
    reverse(V.begin(), V.end());
    if (swap) { int tmp = *max; *max = V.back(); V.back() = tmp; }

    cout << endl;

    case_number++;
  }
  return 0;
}
