package Facebook;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class CookingTheBooks {
	public static void main(String[] args) throws IOException {
		CookingTheBooks cb = new CookingTheBooks();
		String check = cb.readFile();
		FileWriter wr=new FileWriter("/Users/saaishasingh/Downloads/songs/fbHackerCup/op.txt");
		String arr[] = check.split("\n");
		for(int i=1;i<arr.length;i++){
			String max = max(arr[i]);
			String min = min(arr[i]);
			wr.append("Case #" + i + ": " + min + " " + max);
			wr.append("\n");
		}
		wr.close();
	}

	private static String min(String string) {
		char[] digits = string.toCharArray();
		int i,min, minIndex=0;
		char minChar;
		min = Character.getNumericValue(digits[0]);
		minChar = digits[0];
		minIndex = 0;

		for (i = 0; i < digits.length; i++) {
			int digit = Character.getNumericValue(digits[i]);
			if (digit == 0)
				continue;
			if (digit < min) {
				min = digit;
				minChar = digits[i];
				minIndex = i;
			}

		}
		
		char swapChar = digits[0];
		digits[0] = minChar;
		digits[minIndex] = swapChar;

		return String.valueOf(digits);
	}

	private static String max(String string) {
		char[] digits = string.toCharArray();
		int i,max, maxIndex=0;
		char maxChar;
		max = Character.getNumericValue(digits[0]);
		maxChar = digits[0];
		maxIndex = 0;

		for (i = 0; i < digits.length; i++) {
			int digit = Character.getNumericValue(digits[i]);
			if (digit > max) {
				max = digit;
				maxChar = digits[i];
				maxIndex = i;
			}

		}

		char swapChar = digits[0];
		digits[0] = maxChar;
		digits[maxIndex] = swapChar;
		
		return String.valueOf(digits);
	}

	private String readFile() {
		String line = "";
		String finalLine = "";
		try (BufferedReader br = new BufferedReader(new FileReader(
				"/Users/saaishasingh/Downloads/songs/fbHackerCup/inp.txt"))) {
			while ((line = br.readLine()) != null) {
				finalLine = finalLine + line + "\n";
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return finalLine;
	}
}
