#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

int main() {
  int T;
  scanf("%d", &T);
  for (int i = 1; i <= T; i++) {
    int a;
    vector<int> digits, n, d;
    scanf("%d", &a);
    printf("Case #%d: ", i);

    int mini = 9, maxi = 0;
    digits.push_back(a%10);
    if (a%10)
      mini = min(mini, a%10);
    maxi = max(maxi, a%10);
    a /= 10;
    while(a) {
      digits.push_back(a%10);
      if (a%10)
        mini = min(mini, a%10);
      maxi = max(maxi, a%10);
      a /= 10;
    }

    reverse(digits.begin(), digits.end());

    d = vector<int>(digits);

    for (int i = 0; i < d.size() - 1; i++) {
      if (d[i] > mini) {
        int m = d[i + 1], ind = i + 1;
        for (int j = i + 1; j < d.size(); j++) {
          if (d[j] < m) {
            m = d[j];
            ind = j;
          }
        }
        for (int j = d.size() - 1; j >= i + 1; j--) {
          if (d[j] == d[ind]) {
            ind = j;
            break;
          }
        }
        if (d[i] > d[ind])
          swap(d[i], d[ind]);
        break;
      }
    }
    for (int k = 0; k < d.size(); k++)
      printf("%d", d[k]);
    printf(" ");

    d = vector<int>(digits);

    for (int i = 0; i < d.size() - 1; i++) {
      if (d[i] < maxi) {
        int m = d[i + 1], ind = i + 1;
        for (int j = i + 1; j < d.size(); j++) {
          if (d[j] > m) {
            m = d[j];
            ind = j;
          }
        }
        for (int j = d.size() - 1; j >= i + 1; j--) {
          if (d[j] == d[ind]) {
            ind = j;
            break;
          }
        }
        swap(d[i], d[ind]);
        break;
      }
    }
    for (int k = 0; k < d.size(); k++)
      printf("%d", d[k]);
    printf("\n");

  }
  return 0;
}
