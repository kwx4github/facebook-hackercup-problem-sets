#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <sstream>
#include <string>

using namespace std;
long long get_min(long long num);
long long get_max(long long num);
int main()
{
    freopen("cooking_the_books.txt","r",stdin);
    freopen("outputfie.txt","w",stdout);
    long long num , min_num , max_num , in ;
    cin >> in ;

    for (int i=0 ; i< in ; i++)
    {
        cin >> num ;
        min_num = 0;
        max_num = 0;
        min_num = get_min(num);
        max_num = get_max(num);
        cout <<  "Case #"<< i+1 <<": " << min_num << " "<< max_num <<endl;;
    }
    fclose (stdin);
    fclose (stdout);
    return 0;
}
long long get_min(long long num)
{
    long long min_n=0;
    string snum;
    ostringstream  numToString;
    numToString << num;
    snum=numToString.str(); // number in string

    if (snum.size()==1)
        return num;
    string test=snum;
    for (int i=0 ; i<snum.size()-1 ; i++)
    {
        bool flag=false;
        char fletter= test[i];
        int firstNumber= fletter-48 ;
        int lowestSoFar=firstNumber ;
        int index;
        if (firstNumber==0)
            continue;
        for (int j=i+1 ; j<snum.size() ; j++)
        {
            char letter= test[j];
            int current = letter-48 ;
            if (current == 0 )
                continue;
            if (current < firstNumber)
            {
                if (current <= lowestSoFar)
                {
                    flag =true;
                    index = j;
                    lowestSoFar = current ;
                }
            }
        }
        if (flag)
        {
            swap(test[i],test[index]);
            min_n = atoll(test.c_str());
            return min_n;
        }
    }
    return num;
}
long long get_max(long long num)
{
    long long max_n=0;
    string snum;
    ostringstream  numToString;
    numToString << num;
    snum=numToString.str(); // number in string

    if (snum.size()==1)
        return num;
    string test=snum;
    for (int i=0 ; i<snum.size()-1 ; i++)
    {
        bool flag=false;
        char fletter= test[i];
        int firstNumber= fletter-48 ;
        int largestSoFar=firstNumber ;
        int index;
        if (firstNumber==0)
            continue;
        for (int j=i+1 ; j<snum.size() ; j++)
        {
            char letter= test[j];
            int current = letter-48 ;
            if (current == 0 )
                continue;
            if (current > firstNumber)
            {
                if (current >= largestSoFar)
                {
                    flag =true;
                    index = j;
                    largestSoFar = current ;
                }
            }
        }
        if (flag)
        {
            swap(test[i],test[index]);
            max_n = atoll(test.c_str());
            return max_n;
        }
    }
    return num;
}
