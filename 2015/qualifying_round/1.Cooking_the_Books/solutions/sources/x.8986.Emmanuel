import java.util.*;
import java.io.*;

import static java.lang.System.*;

public class cooking {
	public static void main(String[] args)throws FileNotFoundException{
		
		Scanner scan = new Scanner(new File("cooking_the_books.txt"));
		
		int times = scan.nextInt();
		scan.nextLine();
		
		for(int i=0; i<times; i++){
			String s = scan.nextLine();
			int[] nums = new int[s.length()];
			for(int x=0; x<nums.length; x++)
				nums[x] = Integer.parseInt(s.charAt(x) +"");
			
			//if(nums.length == 1)
				//out.println("Case #" + i + ": " + nums[0] +"  "+nums[0] );
			//else
			
			out.println(finalAns(solve(nums),i,s));

			//largest(nums);
		}
	}
	
	static ArrayList<String> solve(int[] nums){
		int[] u = Arrays.copyOf(nums, nums.length);
		int[] copy = nums;
		ArrayList<String> ans= new ArrayList<>(); 
		for(int i=0; i<=nums.length; i++){
			copy=Arrays.copyOf(nums, nums.length);
			for(int x=i+1; x<nums.length; x++){
				copy=Arrays.copyOf(nums, nums.length);
				int temp = copy[x];
				int tem = copy[i];
				copy[i] = temp;
				copy[x] = tem;
				
				//out.println(copy[i]+" : "+copy[x]);
				//out.println(Arrays.toString(copy));
				ans.add(Arrays.toString(copy));
				copy=Arrays.copyOf(nums, nums.length);
				
			}
			//copy=Arrays.copyOf(nums, nums.length);
		}
		////Backwards
		
		for(int i=nums.length-1; i>=0; i--){
			//copy=Arrays.copyOf(nums, nums.length);
			for(int x=i-1; x>=0;x--){
				int temp = copy[x];
				int tem = copy[i];
				copy[i] = temp;
				copy[x] = tem;
				ans.add(Arrays.toString(copy));
				copy=Arrays.copyOf(nums, nums.length);
				
			}
		}
		return ans;
	}
	static String finalAns(ArrayList<String>arr, int index,String s){
		ArrayList<String> ar = new ArrayList<>();
		
		//removing unneeded characters from strings 
		for(String str: arr){
			str = str.replace(",", "").trim();
			str = str.replace(" ", "");
			str = (str.substring(1, str.length()-1));
			if(str.charAt(0) != '0')
				ar.add(str);
		}
		//out.println(ar);
		//remove numbers that were swapped incorrectly		
		for(int o=0; o<ar.size(); o++){
			int c=0;
			String j = ar.get(o);
			for(int q=0; q<s.length(); q++){
				if(j.charAt(q) != s.charAt(q))
					c+=1;
				else
					continue;
			}
			if(c  > 2){
				ar.set(o, " ");
			}
		}	
		Set<String> fin = new TreeSet<>(ar);
	//////////////////
		int[] nums = new int[s.length()];
		for(int x=0; x<nums.length; x++)
			nums[x] = Integer.parseInt(s.charAt(x) +"");
		//////////////////////////////////////
		fin.add(largest(nums));
		fin.add(smallest(nums));

		
		
		ArrayList<String> copy = new ArrayList<>(fin);
	
		for(int i =0; i<copy.size(); i++)
			if(copy.get(i)==" ")
				copy.remove(i);
		
		
	
		
		
		
		//out.println(copy);
		return"Case #" +(index+1) +": " + copy.get(0) + " " + copy.get(copy.size()-1);
		
	}
	
	static String largest(int[] num){
		int[] copy = Arrays.copyOf(num, num.length);
		Arrays.sort(copy);
		int largest = copy[copy.length-1];
		int index = 0;
		for(int i=0; i<num.length; i++){
			if(num[i] == largest){
				index = i;
				break;
			}
		}
		
		int temp = num[0];
		num[0] = largest;
		num[index] = temp;
		
		String s = Arrays.toString(num);
		s = s.replace(",", "");
		s= s.replace(" ","");
		s= s.substring(1, s.length()-1);
		//out.println(largest + " "+s);
		
		return s;
	}
	static String smallest(int[] num){
		int[] copy = Arrays.copyOf(num, num.length);
		Arrays.sort(copy);
		int smallest = 0;
		for(int i=0; i<copy.length; i++){
			if(copy[i] != 0){
				smallest = copy[i];
				break;
			}
		}
		int index = 0;
		for(int i=0; i<num.length; i++){
			if(num[i] == smallest){
				index = i;
				break;
			}
		}
		if(index != 0){
			int temp = num[0];
			num[0] = smallest;
			num[index] = temp;
		//out.println(Arrays.toString(num));
		}
		String s = Arrays.toString(num);
		s = s.replace(",", "");
		s= s.replace(" ","");
		s= s.substring(1, s.length()-1);
		//out.println(largest + " "+s);
		return s;
	}

}
