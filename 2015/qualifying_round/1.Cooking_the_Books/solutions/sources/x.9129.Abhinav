#include<stdio.h>

int largest(int large[], int j);
int smallest(int small[],int j);

int main(){

    int total,i,arr[100],dig[9],j,k,l,number,a,large[9],small[9],cnt;
    scanf("%d",&total);
    for(i=0;i<total;i++){
        scanf("%d",&arr[i]);
        number = arr[i];
        if(number!=0){
            j = 0;
            while(number>0){
                dig[j] = number%10;
                number = number/10;
				large[j] = dig[j];
				small[j] = dig[j];
                ++j;
            }
            //finding largest
			l = 0;
			k = j;
			cnt = largest(dig,j);
			while(l==0 &&  k!=0)		
				if(cnt == --k)		//check largest at first position
					cnt = largest(dig,k);
				else 
					l=1;  
			a = large[k];
			large[k] = large[cnt];
			large[cnt] = a;
			
			//finding smallest
			l = 0;
			k = j;
			cnt = smallest(dig,j);
			while(l==0 && k!=0)		
				if(cnt == --k)		//check smallest at first position
					cnt = smallest(dig,k);
				else 
					l=1;
			if(!(small[cnt]==0 && k==j-1)){		//check if 0 shifts to first place
				a = small[k];
				small[k] = small[cnt];
				small[cnt] = a;
			}else{
				for(l=j-2;l>cnt;l--){	//finding first non-zero no. after first place
					if(small[l]!=0){
						a = small[l];
						small[l] = small[cnt];
						small[cnt] = a;
						break;
					}
				}
			}

            printf("Case #%d: ",i+1);
            for(k=j-1;k>=0;k--){
                printf("%d",small[k]);
            }
            printf(" ");
            for(k=j-1;k>=0;k--){
                printf("%d",large[k]);
            }
            printf("\n");
        }
        else printf("Case #%d: 0 0\n",i+1);
    }
    return 0;
}

int largest(int large[], int j) {
	      int k,cnt=0,lar,m=0,d=0;
	      lar = large[0];
	      for(k=1;k<j;k++){
			if(large[k]>=lar){
				if(large[k]==lar){
					m++;			//check repetition and store the first repeated index
					if(m==1) 
						d = cnt;
				}
				lar = large[k];
				cnt = k;
			}		
	      }
	      if(m!=0 && cnt!=j-1)		//if repetition then check if largest is at first place
			cnt = d;
		  return cnt; 
}

int smallest(int small[],int j) {
	      int k,cnt=0,sma,m=0,d=0;
	      sma = small[0];
	      for(k=1;k<j;k++){
			if(small[k]<sma){
				if(small[k]==sma){		
					m++;			//check repetition and store the first repeated index
					if(m==1) 
						d = cnt;
				}
				sma = small[k];
				cnt = k;
			}				
		  }
		  if(m!=0 && cnt!=j-1)		//if repetition then check if smallest is at first place
			cnt = d;
	      return cnt;
}
