/*This is by Technical Bangla from University of Dhaka*/
#include <bits/stdc++.h>
using namespace std;

#define pi acos(-1.0)
#define e 2.7182818284590451
#define eps 1e-19
#define in_d(x) scanf("%d",&x)
#define nl printf("\n")
#define MAX 301
#define MOD(a,m) ((a)%(m)+(m))%(m)
#define filein freopen("input.txt","r",stdin)
#define fileout freopen("output.txt","w",stdout)
typedef long long int ll;
typedef unsigned long long int llu;

double sqr(double x) {return x*x;}
double distsqr(double x,double y,double a,double b) {return sqr((x-a))+sqr((y-b));}
double cosine_angle(double a,double b,double c) {return (double)(sqr(a)+sqr(b)-sqr(c))/((double)2.0*a*b);}

template <class T> T Max(T a, T b) {return a>b?a:b;}
template <class T> T Min(T a, T b) {return a<b?a:b;}
template <class T> T GCD(T a, T b) {if(!b) return a;return GCD(b,a%b);}
template <class T> void SWAP(T &a, T &b) {T temp=a;a=b;b=temp;return ;}
/*
bool pr[MAX];
int prime[MAX/10];
void PrimeGen()
{
    int i,j,k,l=sqrt(MAX)+1;pr[0]=pr[1]=1;for(i=4;i<MAX;i+=2) pr[i]=1;
    for(i=3;i<l;i+=2)
    {
        if(!pr[i]) for(j=i*i,k=i<<1;j<MAX;j+=k) pr[j]=1;
    }
    for(i=j=0;i<MAX;i++) if(!pr[i]) prime[j++]=i;
}
int ExtendedEuclid(int a,int b,int c) {if(!a) return 0;return (b*ExtendedEuclid(b%a,a,-c)+c)/a;}
int ModInverse(int a,int m) {return MOD(ExtendedEuclid(a,m,1),m);}*/

char a[15],b[15];
int len;

void Solving(int len)
{
    int i,maxindex=0,minindex=len-1,maxx,minn;
    for(i=maxx=0,minn=100;i<len;i++)
    {
        if(maxx<a[i]&&a[i]!='0')
        {
            maxx=a[i];
            maxindex=i;
        }
        if(minn>a[i]&&a[i]!='0')
        {
            minn=a[i];
            minindex=i;
        }
    }
    SWAP(a[0],a[minindex]);
    SWAP(b[0],b[maxindex]);
}

int main()
{
    filein;
    fileout;
    int i,t,caseno=0;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%s",b);
        for(len=0;b[len];len++) a[len]=b[len];a[len]=b[len];
        Solving(len);
        printf("Case #%d: %s %s\n",++caseno,a,b);
    }
    return 0;
}
