import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.*;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;
import java.math.*;
class ModScanner {
	BufferedReader br;
	StringTokenizer st;
 
	public ModScanner() throws Exception {
		br = new BufferedReader(new FileReader("D:\\fbhc\\input.txt"));
	}
 
	String nextToken() throws Exception {
		while (st == null || !st.hasMoreElements()) {
				st = new StringTokenizer(br.readLine());
			
		}
		return st.nextToken();
	}
 
	int nextInt() throws Exception, Exception {
		return Integer.parseInt(nextToken());
	}
 
	long nextLong() throws Exception {
		return Long.parseLong(nextToken());
	}
 
	double nextDouble() throws Exception {
		return Double.parseDouble(nextToken());
	}
}
class solve{
	void sol() throws Exception{
		ModScanner m=new ModScanner();
		PrintWriter pw=new PrintWriter("D://fbhc//output.txt"); 
		int tc=m.nextInt();
		for(int t=1;t<=tc;t++){
	     String inpt=m.nextToken();
		{
			int swpIndex=0;
			char[] str=inpt.toCharArray();
			int min=str[0],minIndex=0;
			boolean got=false;
			if(str.length==1)
				got=true;
			for(int i=1;i<str.length;i++){
				if(str[i]<min && str[i]!='0'){
					got=true;
					swpIndex=i;
				    min=str[i];
				}
				else
					   if(str[i]==min && got){
						   swpIndex=i;
						   min=str[i];
					   }
			}
			if(got){
				char temp=str[swpIndex];
				str[swpIndex]=str[minIndex];
				str[minIndex]=temp;
				System.out.print(new String(str)+" ");
				pw.print("Case #"+t+": "+new String(str)+" ");
			}
			else{
			   for(int i=1;i<str.length;i++){
				   got=false;
				   min=str[i];
				   minIndex=i;
				   swpIndex=i;
				   for(int j=i+1;j<str.length;j++){
					   if(str[j]<min){
						   got=true;
						   swpIndex=j;
						   min=str[j];
					   }
					   else
						   if(str[j]==min && got){
							   swpIndex=j;
							   min=str[j];
						   }
				   }
				   if(got)
					   break;
			   }
			   char temp=str[swpIndex];
				str[swpIndex]=str[minIndex];
				str[minIndex]=temp;
				System.out.print(new String(str)+" ");
				pw.print("Case #"+t+": "+new String(str)+" ");
		    }
		}
		{
			int swpIndex=0;
			char[] str=inpt.toCharArray();
			int min=str[0],minIndex=0;
			boolean got=false;
			if(str.length==1)
				got=true;
			for(int i=1;i<str.length;i++){
				if(str[i]>min && str[i]!='0'){
					got=true;
					swpIndex=i;
					min=str[i];
				}
				else
					   if(str[i]==min && got){
						   swpIndex=i;
						   min=str[i];
					   }
			}
			if(got){
				char temp=str[swpIndex];
				str[swpIndex]=str[minIndex];
				str[minIndex]=temp;
				System.out.println(new String(str));
				pw.println(new String(str));
			}
			else{
			   for(int i=1;i<str.length;i++){
				   got=false;
				   min=str[i];
				   minIndex=i;
				   swpIndex=i;
				   for(int j=i+1;j<str.length;j++){
					   if(str[j]>min){
						   got=true;
						   swpIndex=j;
						   min=str[j];
					   }
					   else
					   if(str[j]==min && got){
						   swpIndex=j;
						   min=str[j];
					   }
				   }
				   if(got)
					  break;
			   }
			   char temp=str[swpIndex];
				str[swpIndex]=str[minIndex];
				str[minIndex]=temp;
				System.out.println(new String(str));
				pw.println(new String(str));
		    }
		}
		}
		pw.flush();
		pw.close();
	}
}
public class hackerCup1 {

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		new solve().sol();
	}

}
