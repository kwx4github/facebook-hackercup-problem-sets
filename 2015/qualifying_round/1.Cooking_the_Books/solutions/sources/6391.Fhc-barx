#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys

def swap(orig, index1, index2):
	if index1 >= len(orig) or index2 >= len(orig):
		print "***** internal error ****"
		return ""
	
	newstr=""
	for i in range(len(orig)):
		if i == index1:
			newstr += orig[index2]
		elif i == index2:
			newstr += orig[index1]
		else:
			newstr += orig[i]

	return newstr

#print swap("abbbb", 0, 0)
#print swap("bbbba", 0, 4)
#print swap("bbabb", 0, 2)


f=open(sys.argv[1], "r")
first=True
ctr=1
for line in f.readlines():
	if first:
		first=False
		continue
	# easier to manipulate a string
	orig=line.strip()
	smallest=orig
	biggest=orig

	# looking for the smallest
	# special care must be taken when swap_index=0 because we can't switch a 0 in Most Significant Digit
	for swap_index in range(len(orig)-1):
		#print("swap_index: "+str(swap_index))
		mymin=[swap_index, orig[swap_index]]
		for index in range(swap_index+1, len(orig)):
			if swap_index==0 and int(orig[index])==0:
				continue
				
			#print("index: "+str(index))
			if int(orig[index]) < int(orig[swap_index]) and int(orig[index]) <= int (mymin[1]):
				mymin=[index, orig[index]]
		# if found
		if mymin[0] != swap_index:
			#print("swap"+str(swap_index)+" "+str(mymin[0]))
			smallest = swap(orig, swap_index, mymin[0])
			break

	# looking for the biggest
	for swap_index in range(len(orig)-1):
		#print("swap_index: "+str(swap_index))
		mymax=[swap_index, orig[swap_index]]
		for index in range(swap_index+1, len(orig)):
			#print("index: "+str(index))
			if int(orig[index]) > int(orig[swap_index]) and int(orig[index]) >= int (mymax[1]):
				mymax=[index, orig[index]]
		# if found
		if mymax[0] != swap_index:
			#print("swap"+str(swap_index)+" "+str(mymax[0]))
			biggest = swap(orig, swap_index, mymax[0])
			break
	
	print("Case #"+str(ctr)+": "+smallest+" "+biggest )

	ctr += 1
