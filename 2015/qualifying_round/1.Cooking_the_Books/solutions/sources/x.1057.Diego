#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

struct Counter
{
	static int k;
	Counter() {k++;}
	~Counter() {k--;}
};

int Counter::k = 0;

template<typename T>
void pr(const string& name, T t)
{
    cout << name << " = " << t << endl;
}

template<typename T, typename ... Types>
void pr(const string& names, T t, Types ... rest)
{
    auto comma_pos = names.find(',');
    cout << names.substr(0, comma_pos) << " = " << t << ", ";

    auto next_name_pos = names.find_first_not_of(" \t\n", comma_pos + 1);
    pr(string(names, next_name_pos), rest ...);
}

void mod(ll &a, ll b)
{
    a %= b;
    if(a < 0) a += b;
}

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define trace(...) pr(#__VA_ARGS__, __VA_ARGS__);
#define tracea(x) {string s = #x; Counter c##x; cout<<s.substr(0,1+s.find('['))<<Counter::k<<"]="<<x<<'\n';}
#define vii vector<pair<int,int>>

const ll MOD = 1000000007;

// ----------------------------------------------------------------------------------------------------------

ifstream fin("in.txt");
ofstream fout("out.txt");

int T;

string toString(int n)
{
    if(n == 0) return "0";
    string ret = "";
    while(n > 0)
    {
        int d = n%10;
        ret += (char) (d + '0');
        n /= 10;
    }
    reverse(all(ret));
    return ret;
}

string getLow(string s)
{
    f(i,0,SZ(s)-1)
    {
        char m = '9';
        int idx = -1;

        f(j,i+1,SZ(s)-1) if(s[j] < m)
        {
            idx = j;
            m = s[j];
        }

        if(s[i] > m && (m > '0' || i > 0))
        {
            swap(s[i],s[idx]);
            return s;
        }
    }

    return s;
}

string getHigh(string s)
{
    f(i,0,SZ(s)-1)
    {
        char m = '0';
        int idx = -1;

        f(j,i+1,SZ(s)-1) if(s[j] > m)
        {
            idx = j;
            m = s[j];
        }

        if(s[i] < m)
        {
            swap(s[i],s[idx]);
            return s;
        }
    }

    return s;
}

int main()
{
    fin >> T;
    f(t,1,T)
    {
        int n;
        fin >> n;
        string s = toString(n);
        string lo = getLow(s);
        string hi = getHigh(s);
        fout << "Case #" << t << ": " << lo << " " << hi << "\n";
    }
}
