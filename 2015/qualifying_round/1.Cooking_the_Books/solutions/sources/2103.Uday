#include<iostream>
#include<cstdio>
using namespace std;

int numberOfDigits(unsigned long l){
    int digits = 0;
    while(l != 0){
        digits++;
        l /= 10;
    }
    return digits;
}

int main(){

    unsigned long number;
    int t;
    freopen("in.txt","r", stdin);
    freopen("out.txt","w", stdout);
    cin>>t;
    int caseNo = 1;
    while(t--){
        cin>>number;
        if((number / 10) == 0){ // number is between 0 and 9 then print the number as it is
            cout<<"Case #"<<caseNo<<": "<<number<<" "<<number;
        }else{
            int digits = numberOfDigits(number);
            int maxi = 0;
            int mini = 0;
            int *array = new int[digits];
            int lastOccurranceIndexes[10] = {11,11,11,11,11,11,11,11,11,11};
            unsigned long power= 1;
            for(int i = 0; i < digits; i++){
                power *= 10;
            }
            power /= 10;
            for(int i = 0; i < digits; i++){
                array[i] = number / power;
                number = number % power;
                power /= 10;
            }
            lastOccurranceIndexes[array[0]] = 0;
            for(int i = 1; i < digits; i++){
                lastOccurranceIndexes[array[i]] = i;
                if(array[i] != 0 && array[i] <= array[mini]){
                    mini = i;
                }
                if(array[i] >= array[maxi]){
                    maxi = i;
                }
            }
            // copy array to mutate for max and min separately
            int *newArray = new int[digits];
            for(int i = 0; i < digits; i++){
                newArray[i] = array[i];
            }
            //find maximum
            for(int i = 0; i <= maxi; i++){
                if(array[i] < array[maxi] && (maxi != 0)){
                    int temp = array[maxi];
                    array[maxi] = array[i];
                    array[i] = temp;
                    break;
                }
            }
            // find minimum
            for(int i = 0; i < digits; i++){
                int flag = 1;
                for(int j = (i == 0? 1 : 0); j < newArray[i]; j++){
                    if(lastOccurranceIndexes[j] < 11)
                        if(lastOccurranceIndexes[j] > i && j < newArray[i]){
                            int temp = newArray[lastOccurranceIndexes[j]];
                            newArray[lastOccurranceIndexes[j]] = newArray[i];
                            newArray[i] = temp;
                            flag = 0;
                            break;
                        }
                }
                if(flag == 0){
                    break;
                }
            }
            unsigned long max = 0;
            unsigned long min = 0;
            for(int i = 0; i < digits; i++){
                max = max * 10 + array[i];//cout<<array[i]<<" ";
                min = min * 10 + newArray[i];
            }
            //cout<<"array[maxi="<<maxi<<"]="<<array[maxi]<<" array[mini="<<mini<<"]="<<newArray[mini]<<" ";
            cout<<"Case #"<<caseNo<<": "<<min<<" "<<max;
        }
        caseNo++;
        if(t > 0){
            cout<<endl;
        }
    }
    return 0;
}
