import java.io.InputStreamReader;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.*;
import java.io.InputStream;

public class Main {

    public static void main(String[] args) throws Exception {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);


        FaceBook solver = new FaceBook();

        //while (solver.solve(1, in, out)) {

        int T = in.nextInt();
        for (int i = 0; i < T; i++) {
            solver.solve(i+1, in, out);
        }

        out.close();

    }
}

class FaceBook {
    public void solve(int testNumber, InputReader in, PrintWriter out) {
        out.print("Case #" + testNumber + ": ");
        String s = in.next();
        int max_idx = 0;
        int min_idx = 0;
        int max_val = s.charAt(0) - '0';
        int min_val = max_val;
        int len = s.length();
        for (int i = 1; i < len; i++) {
            int val = s.charAt(i) - '0';
            if (val == 0) continue;
            if (val > max_val) {
                max_val = val;
                max_idx = i;
            }
            if (val < min_val) {
                min_val = val;
                min_idx = i;
            }
        }
        if (min_idx != 0) {
            out.print(s.charAt(min_idx));
            for (int i = 1; i < len; i++) {
                if (i == min_idx) out.print(s.charAt(0));
                else out.print(s.charAt(i));
            }
        } else {
            out.print(s);
        }
        out.print(' ');
        if (max_idx != 0) {
            out.print(s.charAt(max_idx));
            for (int i = 1; i < len; i++) {
                if (i == max_idx) out.print(s.charAt(0));
                else out.print(s.charAt(i));
            }
        } else {
            out.print(s);
        }
        out.println();
    }
}

class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream));
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }
}