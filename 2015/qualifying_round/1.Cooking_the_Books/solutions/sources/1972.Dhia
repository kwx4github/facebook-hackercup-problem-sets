def index_of_min(l)
  min = 0
  for i in (0...(l.length)).to_a.reverse
    if l[i]< l[min]
      min = i
    end
  end
  min
end

def index_of_min_no_0(l)
  min = 0
  for i in (0...(l.length)).to_a.reverse
    if l[i]< l[min] && l[i] != 0
      min = i
    end
  end
  min
end

def index_of_max(l)
  max = 0
  for i in (0...(l.length)).to_a.reverse
    if l[i]> l[max]
      max = i
    end
  end
  max
end

count = gets.chomp.to_i

count.times do |i|
  n = gets.chomp.split('').map { |e| e.to_i }

  #getting min
  swept = false
  min = n.clone
  ind = index_of_min_no_0(min)
  if (ind != 0)
    a = min[0]
    min[0] = min[ind]
    min[ind] = a
    swept = true
  end
  c = 1
  while(!swept && c < min.length)
    ind = index_of_min(min[c,min.length])
    if (ind != 0)
      a = min[c]
      min[c] = min[ind+c]
      min[ind+c] = a
      swept = true
    end
    c += 1
  end
  min

  #getting max
  swept = false
  max = n.clone
  c = 0
  while(!swept && c < max.length)
    ind = index_of_max(max[c,max.length])
    if (ind != 0)
      a = max[c]
      max[c] = max[ind+c]
      max[ind+c] = a
      swept = true
    end
    c += 1
  end
  max

  puts "Case ##{i+1}: #{min.join} #{max.join}"
end