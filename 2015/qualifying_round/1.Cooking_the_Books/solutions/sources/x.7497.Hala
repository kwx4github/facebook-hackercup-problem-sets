//4:10
#include <cstdio>
#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
#include <vector>
#include <sstream>
#include <iterator>
#include <math.h>
using namespace std;

// function to split by space
vector<string> strtoarr(string str){
    istringstream buf(str);
    istream_iterator<string> beg(buf), end;
    vector<string> tokens(beg, end);
    return tokens;
}


// function to split string by identifire

vector<string> str2arr(string str, char sep){

	string s;
	stringstream stream(str);
	vector<string> v;
	    while( getline(stream, s, sep) ){
	    	v.push_back(s);
	    }
	    return v;	        
}


// convert string to integer
int strtoint(string str){
	istringstream buffer(str);
	int value;
	buffer >> value; 
	return value;
}

// max number in array

int maxint(vector<int> arr){
    int temp = 0;
    int c = arr.size();
    for(int i=0;i< c;i++)
    {
        if(arr[i]>temp)
        temp=arr[i];
    }
    return temp;
}

// min number in array 

int smallest(vector<int> arr){
	arr.erase(std::remove(arr.begin(), arr.end(), 0), arr.end()); 
	int smallest = arr[0] ;
    for ( int i=1;  i < arr.size();  ++i )
        if ( arr[i] < smallest)
             smallest = arr[i] ;

    return smallest;
}
int main(){
	fstream input; 
	string line;
	input.open("input.txt");
	getline(input, line); 
	vector<string>aar;
	std::vector<int> a;
	int counter = 0;
	while(getline(input, line)){
		counter++;
		vector<int> digits;
		for (int i = 0; i < line.length(); ++i)
		{
			stringstream ss;
			string s;
			ss << line[i];
			ss >> s;
			digits.push_back(strtoint(s));
		}
		// finad the biggest
		cout<<"Case #"<<counter<<": ";
		int max = maxint(digits);
		int min = smallest(digits);
		vector<int> tmpd = digits;
		for (int i = 0; i < digits.size(); ++i)
		{
			if (tmpd[i] == min)
			{
				int r = tmpd[0];
				tmpd[0] = min;
				tmpd[i] = r;
			}
		}
		for (int i = 0; i < digits.size(); ++i)
		{
			cout<<tmpd[i];
		}
		cout<<" ";
		tmpd.clear();
		tmpd = digits;
		for (int i = 0; i < digits.size(); ++i)
		{
			if (tmpd[i] == max)
			{
				int r = tmpd[0];
				tmpd[0] = max;
				tmpd[i] = r;
			}
		}
		for (int i = 0; i < digits.size(); ++i)
		{
			cout<<tmpd[i];
		}
		cout<<endl;
	}
	
	input.close();
	return 0;
}