#include <iostream>
using namespace std;

void merge(int *,int, int , int );

void mergesort(int *a, int low, int high)

{

    int mid;

    if (low < high)

    {

        mid=(low+high)/2;

        mergesort(a,low,mid);

        mergesort(a,mid+1,high);

        merge(a,low,high,mid);

    }

    return;

}

void merge(int *a, int low, int high, int mid)

{

    int i, j, k, c[50];

    i = low;

    k = low;

    j = mid + 1;

    while (i <= mid && j <= high)

    {

        if (a[i] < a[j])

        {

            c[k] = a[i];

            k++;

            i++;

        }

        else

        {

            c[k] = a[j];

            k++;

            j++;

        }

    }

    while (i <= mid)

    {

        c[k] = a[i];

        k++;

        i++;

    }

    while (j <= high)

    {

        c[k] = a[j];

        k++;

        j++;

    }

    for (i = low; i < k; i++)

    {

        a[i] = c[i];

    }

}

int main(){
	int t,a=1,i,j,l,digits[9],order[9];
	int maxindex,minindex;
	long long int num,temp;
	
	cin >> t;
	
	while(a<=t){
		cin >> num;
		temp = num;
		
		i = 0;
		while(temp/10!=0){
			temp = temp/10;
			i++;
		}
		i+=1;
	
		temp = num;
		for(int k = 0; k<i;k++){
			digits[i-k-1]=temp%10;
			order[i-k-1]=digits[i-k-1];
			temp/=10;
		}
		
		mergesort(digits,0,i-1);
		if(digits[0]==digits[i-1]){
			cout<< "Case #"<<a<<": "<<num<<" "<<num<<endl;
			a++;
			continue;
		}
		j = 0;
		
		if(digits[0]==0)while(digits[j]==0)j++;
		
		for(int k = 0; k<i;k++){
			if(order[k]==digits[j])minindex = k;
		}
	
		l = order[minindex];
		order[minindex] = order[0];
		order[0] = l;
		
		cout<< "Case #"<<a<<": ";
		for(int k = 0; k<i;k++){
			cout<<order[k];
		}
		cout<<" ";
		
		l = order[0];
		order[0] = order[minindex];
		order[minindex] = l;
		
		j=i-1;
		for(int k = 0; k<i;k++){
			if(order[k]==digits[j])maxindex = k;
		}
		
		l = order[maxindex];
		order[maxindex] = order[0];
		order[0] = l;
		
		for(int k = 0; k<i;k++){
			cout<<order[k];
		}
		cout<<endl;
		
		a++;
	}
	
	return 0;
}
