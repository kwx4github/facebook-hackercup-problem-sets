#include <algorithm>
#include <cassert>
#include <fstream>
#include <iostream>
#include <sstream>

std::string test(const std::string & line) {
	if (line == "0") {
		return "0 0";
	}

	std::string max = line;
	for (auto it = std::begin(max); it != std::end(max); ++it) {
		auto maxIt = std::max_element(it, std::end(max));
		if (*maxIt != *it) {
			std::iter_swap(it, maxIt);
			break;
		}
	}

	std::string min = line;
	auto specialMinIt = std::min_element(std::begin(min), std::end(min), [](const char & a, const char & b){
		return a == '0' ? false : a < b;
	});
	if (*specialMinIt != *std::begin(min)) {
		std::iter_swap(std::begin(min), specialMinIt);
	} else {
		for (auto it = std::next(std::begin(min)); it != std::end(min); ++it) {
			auto minIt = std::min_element(it, std::end(min));
			if (*minIt != *it) {
				std::iter_swap(it, minIt);
				break;
			}
		}
	}

	return min + ' ' + max;
}

int main() {
	std::ifstream inFile("cooking_the_books.txt");
	inFile.exceptions(std::ifstream::failbit);

	std::string line;
	std::getline(inFile, line);
	std::size_t testCaseCount{std::stoull(line)};

	for (std::size_t testCase = 1; testCase <= testCaseCount; ++testCase) {
		std::getline(inFile, line);
		std::cout << "Case #" << testCase << ": " << test(line) << std::endl;
	}
}
