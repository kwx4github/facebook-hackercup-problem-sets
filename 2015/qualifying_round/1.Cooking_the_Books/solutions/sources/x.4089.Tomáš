<?php



function getDigitsHistogram($number) {
	$digits = array();
	for ($i=0, $len=strlen($number); $i<$len; $i++) {
		if (!isset($digits[$number[$i]])) {
			$digits[$number[$i]] = array('count' => 0, 'positions' => array());
		}

		$digits[$number[$i]]['count']++;
		$digits[$number[$i]]['positions'][] = $i;
	}
	ksort($digits);
	return $digits;
}

function findMin($number, $digits) {
	if (count($digits) === 1) {
		return $number;
	}

	for ($i=0, $len=strlen($number); $i < $len - 1; $i++) {
		foreach ($digits as $digit => $data) {
			if ($data['count'] === 0) {
				continue;
			}

			if (($i > 0 || $digit != 0) && $digit < $number[$i]) {
				$digitPosition = array_shift($digits[$digit]['positions']);

				$number[$digitPosition] = $number[$i];
				$number[$i] = $digit;

				return $number;
			}
		}

		// not switch this $i-th digit in future
		$digits[$number[$i]]['count']--;
		array_shift($digits[$number[$i]]['positions']);
	}

	return $number;
}

function findMax($number, $digits) {
	if (count($digits) === 1) {
		return $number;
	}

	krsort($digits);

	for ($i=0, $len=strlen($number); $i < $len - 1; $i++) {
		foreach ($digits as $digit => $data) {
			if ($data['count'] === 0) {
				continue;
			}

			if ($digit > $number[$i]) {
				$digitPosition = array_shift($digits[$digit]['positions']);

				$number[$digitPosition] = $number[$i];
				$number[$i] = $digit;

				return $number;
			}
		}

		// not switch this $i-th digit in future
		$digits[$number[$i]]['count']--;
		array_shift($digits[$number[$i]]['positions']);
	}

	return $number;
}

$file = $argv[1];
$lines = file($file);

$fh = fopen('output.txt', 'w');

for ($i=1, $len=(int) $lines[0]; $i<=$len; $i++) {
	$number = trim($lines[$i]);

	$digits = getDigitsHistogram($number);

	$max = findMax($number, $digits);
	$min = findMin($number, $digits);

	print 'Case #' . $i . ': ' . $min . ' ' . $max . "\n";
	fwrite($fh, 'Case #' . $i . ': ' . $min . ' ' . $max . "\n");
}

fclose($fh);
