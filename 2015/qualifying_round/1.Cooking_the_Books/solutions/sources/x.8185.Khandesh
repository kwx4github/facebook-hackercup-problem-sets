#include<iostream>
#include<stdlib.h>
#include<stdio.h>
#include<string>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<math.h>
#include<assert.h>
#include<assert.h>

using namespace std;
#define mod 1000000007
typedef  long long ll;

int main(){
    int ts;
    scanf("%d",&ts);
    for(int tst=1;tst<=ts;tst++)
    {
        char s[1000];
        scanf("%s",s);
        int min=9,max=1;
        int n=strlen(s);
//        printf("len %d\n",n);
        if(n==1){
            printf("Case #%d: %s %s\n",tst,s,s);
            continue;
        }
        int mini=0,maxi=0;
        for(int i=0;i<n;i++){
            if(min>=s[i]-'0'){
                min=s[i]-'0'; mini=i;
            }
            if(max<=s[i]-'0'){
                maxi=i; max=s[i]-'0';
            }
            
        }
//        printf("LOL %s max %d maxi=%d min=%d mini=%d\n",s,max,maxi,min,mini);
        
        // finding min number
        int flg=1;
        int k=0;
        while(k<n){
            if(s[k]-'0'<=min){
                k++;
            }else{
                flg=0;
                break;
            }
        }
        char tt;
        if((s[mini]=='0' && k==0) || flg==1)
        {
        }
        else{
            tt=s[mini];
            s[mini]=s[k];
            s[k]=tt;
        }
        printf("Case #%d: %s ",tst,s);
        
        if((s[mini]=='0' && k==0) || flg==1)
    {
        }
        else{
        tt=s[mini];
        s[mini]=s[k];
        s[k]=tt;
        
        }
        
        
        k=0;
        flg=1;
        while(k<n && k<maxi){
            if(s[k]-'0'>=max){
                k++;
            }else{
                flg=0;
                break;
            }
        }
        if((s[maxi]=='0' && k==0) || flg==1)
        {
        }
        else{

        tt=s[maxi];
        s[maxi]=s[k];
        s[k]=tt;
        }
        printf("%s\n",s);
        
        if((s[maxi]=='0' && k==0) || flg==1)
        {
        }
        else{
            tt=s[maxi];
            s[maxi]=s[k];
            s[k]=tt;
        }
        
        
        
    }
    
    return 0;
}