
#include<vector>
#include<fstream>
#include<iostream>

using namespace std;

int main()
{
	ifstream input;
	input.open("cooking_the_books.txt");
	fstream output;
	output.open("output.txt", ios::out);
	int time = 0;
	input >> time;
	for(int j = 0; j != time; j++ )
	{
		int num = 0;
		input >> num;
		if(num == 0){
			output << "CASE #" << j+1 << ": " << num << " " << num << endl;
			continue;
		}
		vector<int> digit;
		do
		{
			digit.push_back(num % 10);
			num = num /10;
		}while( num % 10 != 0 || num != 0 );
		vector<int> max_digit = digit;
		vector<int> min_digit = digit;
		int digit_num = digit.size();
		int max = 0;
		int min = 10;
		int max_pos = 0;
		int min_pos = 0;
		
		for(int i = 0; i != digit_num; i++ )
		{
			if( min_digit[i] < min && min_digit[i] != 0 )
			{
				min = min_digit[i];
				min_pos = i;
			}
			if( max_digit[i] > max )
			{
				max = max_digit[i];
				max_pos = i;
			}

		}
		min_digit[min_pos] = min_digit[digit_num-1];
		min_digit[digit_num-1] = min;
		max_digit[max_pos] = max_digit[digit_num-1];
		max_digit[digit_num-1] = max;
		int max_num = 0;
		for( vector<int>::reverse_iterator iter = max_digit.rbegin(); iter != max_digit.rend(); iter++ )
		{
			max_num = max_num * 10;
			max_num += *iter;
		} 
		int min_num = 0;
		for( vector<int>::reverse_iterator iter = min_digit.rbegin(); iter != min_digit.rend(); iter++ )
		{
			min_num = min_num * 10;
			min_num += *iter;
		}
		output << "CASE #" << j+1 << ": " << min_num << " " << max_num << endl;

	}
	input.close();
	output.close();
	return 0;
}