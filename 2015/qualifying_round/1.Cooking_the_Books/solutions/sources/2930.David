#include<stdio.h>
#include<math.h> 

int* getGreater(int* num, int size){
	int q, max, maxP,temp;	
	if(size<=1){
		return num;
	}

	max=-1;
	for (q=0;q<size-1;q++){
		if (num[q]>max){
			max=num[q];
			maxP=q;
		}
	}

	if (max>num[size-1]){
		temp=num[maxP];
		num[maxP]=num[size-1];
		num[size-1]=temp;		

		return num;
	}
	else {
		return getGreater(num, size-1);
	}
}

int* getSmaller(int* num,int size, bool f){
	int q, min, minP,temp;
	if(size<=1){
		return num;
	}

	min=10;
	for (q=0;q<size-1;q++){
		if (f){
			if (num[q]!=0 && num[q]<min){
				min=num[q];
				minP=q;
			}
		}
		else {
			if (num[q]<min){
				min=num[q];
				minP=q;
			}
		}
	}

	


	if (min<num[size-1] && min!=10){
		
		temp=num[minP];
		num[minP]=num[size-1];
		num[size-1]=temp;

		return num;
	}
	else {

		return getSmaller(num, size-1,0);
	}
}


int main(){
	int q,n,x,size,N,s,b,w;
	int small[10];
	int big[10];
	int num[10];
	int num1[100];
	int* p1;
	int* p2;
	scanf("%d", &x);

	for (q=1;q<=x;q++){
		scanf("%d", &n);

		size=0;
 		N=n;
		while(N!=0){
			num[size]=N%10;
			N/=10;
			size++;
		}
		size=0;
		N=n;
		while(N!=0){
			num1[size]=N%10;
			N/=10;
			size++;
		
		}

		
		p1=getSmaller(num,size,1);
		s=0;
		for (w=0;w<size;w++){
			s+=*(p1++) * pow(10.0,w);
		}



		p2=getGreater(num1,size);
		b=0;
		for (w=0;w<size;w++){
			b+=*(p2++) * pow(10.0,w);
		}




		printf("Case #%d: %d %d\n", q,s, b);
	}
	return 0;
}