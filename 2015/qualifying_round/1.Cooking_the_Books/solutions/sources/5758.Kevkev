/*
ID: kzeng101
LANG: JAVA
TASK: cookingthebooks
*/
import java.io.*;
import java.util.*;
import java.lang.*;

public class cookingthebooks {
	static int t, min, max;
	static String n;
	static char[] digits;
	public static void main(String[] args) throws IOException{
		BufferedReader input = new BufferedReader (new FileReader ("cooking_the_books.txt"));
		PrintWriter output = new PrintWriter(new BufferedWriter(new FileWriter("cookingthebooks.out")));
		StringTokenizer s1 = new StringTokenizer(input.readLine());
		t = Integer.parseInt(s1.nextToken());
		for(int i = 1; i<=t; i++) {
			n = input.readLine();
			if(n.length() == 1) {
				min = max = Integer.parseInt(n);
			}
			// else if (n.length() == 2) {
			// 	min = Math.min(Integer.parseInt(n), Integer.parseInt(new StringBuilder(n).reverse().toString()));
			// 	max = Math.max(Integer.parseInt(n), Integer.parseInt(new StringBuilder(n).reverse().toString()));
			// }
			else{
				min = max = Integer.parseInt(n);
				digits = n.toCharArray();
				solve(-1);
			}
			if(i==t) {output.print("Case #" + i + ": " + min + " " + max);}
			else {output.println("Case #" + i + ": " + min + " " + max);}
			
		}
		output.close();
		input.close();
	}

	public static void solve(int first) {
		if(first==-1) {
			for(int i = 0; i<n.length()-1; i++) {
				solve(i);
			}
		}
		else{
			for(int i = first+1; i<n.length(); i++) {
				if(first==0 && digits[i]=='0') continue;
				//switch i and first
				char temp = digits[i];
				digits[i] = digits[first];
				digits[first] = temp;
				int a = Integer.parseInt(String.valueOf(digits));
				min = Math.min(a,min);
				max = Math.max(a,max);
				digits[first] = digits[i];
				digits[i] = temp;
			}
		}
	}


}