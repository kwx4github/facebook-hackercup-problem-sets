/**
 * Created by smclean on 08-Jan-15.
 */
fs = require('fs')
fs.readFile('input.txt', 'utf8', function (err,data) {
    if (err) {
        return console.log(err);
    }
    var lines = data.split('\n');
    var T = parseInt(lines[0]);

    var output = "";
    for(var n = 1; n <= T; n++){
        var min = findMin(lines[n]);
        var max = findMax(lines[n]);
        output += 'Case #'+n+':' +min + ' ' + max + '\n';
    }
    console.log(output);

    fs.writeFile("cooking_the_books_output.txt", output, function(err) {
        if(err) {
            console.log(err);
        } else {
            console.log("The file was saved!");
        }
    });
});

function swapVal(val, i, minIndex) {
    var swap = Array.prototype.slice.call(val, 0);
    var temp = val[i];
    swap[i] = swap[minIndex];
    swap[minIndex] = temp;
    return swap.join('');
}
function findMin(val){
    for (var i = 0, len = val.length; i < len; i++) {
        var minIndex = i;
        for(var x = i+1; x < len; x++){
            if(val[x] < val[minIndex] && val[x] != 0){
                minIndex = x;
            }
        }
        if(val[i] > val[minIndex]) {
            val = swapVal(val, i, minIndex);
            break;
        }
    }
    return val;
}
function findMax(val){
    for (var i = 0, len = val.length; i < len; i++) {
        var minIndex = i;
        for(var x = i+1; x < len; x++){
            if(val[x] > val[minIndex] && val[x] != 0){
                minIndex = x;
            }
        }
        if(val[i] < val[minIndex]){
            val = swapVal(val, i, minIndex);
            break;
        }
    }
    return val;
}