//
//  main.swift
//  FHC1
//
//  Created by Christian H. Roman Mendoza on 1/10/15.
//  Copyright (c) 2015 Christian Roman. All rights reserved.
//

import Foundation

let location = "~/Downloads/cooking_the_books.txt".stringByExpandingTildeInPath
let content = String(contentsOfFile: location, encoding: NSUTF8StringEncoding, error: nil)!
var lines = split(content, { $0 == "\n"}, maxSplit: Int.max, allowEmptySlices: false)
let cases = lines.removeAtIndex(0)
for (i, n) in enumerate(lines) {
    let digits = map(n) { String($0).toInt()! }
    var (minSwap, maxSwap) = (digits, digits)
    
    let numMin = digits.filter({ $0 != 0 }).reduce(Int.max, { min($0, $1) })
    let numMax = digits.reduce(Int.min, { max($0, $1) })
    
    if let index = find(digits, numMin) {
        swap(&minSwap[index], &minSwap[0])
    }
    
    if let index = find(digits, numMax) {
        swap(&maxSwap[index], &maxSwap[0])
    }
    
    let result = "".join(minSwap.map({ "\($0)" })) + " " + "".join(maxSwap.map({ "\($0)" }))
    println("Case #\(i + 1): \(result)")
}
