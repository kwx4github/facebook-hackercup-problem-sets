/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hcup;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Angel
 */
public class HCup {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        File archivo = new File("input.txt");
        FileReader fr = null;
        BufferedReader br = null;
        FileWriter fw= null;
        PrintWriter pw = null;
        try {
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            fw = new FileWriter("output.txt");
            pw = new PrintWriter(fw);
            String linea ="";
            int contador = 0;
            int cuentas =0;
            String cMenor="" , cMayor="";
            while((linea=br.readLine())!=null){
                cMenor = linea;
                cMayor = linea;
                if(contador==0){
                    // PRIMER CASO
                    //AQUI ENCONTRAREMOS QUE SON LOS NUMEROS DE CASOS QUE DEBEN DE APARECER
                    cuentas = Integer.valueOf(linea);
                }else{
                    char [] cadena = linea.toCharArray();
                    char [] c2;
                    char [] c3;
                    for(int i=0; i<cadena.length; i++){
                        for(int j=0; j<cadena.length; j++){
                            c2 = linea.toCharArray();
                            c2[i] = cadena[j];
                            c2[j] = cadena[i];
                            if(c2[0] != '0'){
                                String auxil = new String(c2);
                                if(Integer.parseInt(auxil) < Integer.parseInt(cMenor)){
                                    cMenor = new String(auxil);
                                    
                                }
                            }
                        }
                    }
                    for(int i=0; i<cadena.length; i++){
                        for(int j=0; j<cadena.length; j++){
                            c3 = linea.toCharArray();
                            c3[i] = cadena[j];
                            c3[j] = cadena[i];
                            String auxil = new String(c3);
                            if(Integer.parseInt(auxil) > Integer.parseInt(cMayor)){
                                cMayor = new String(auxil);        
                            }
                        }
                    }
                    
                }
                if(contador!= 0){
                    pw.println("Case #"+(String.valueOf(contador))+": "+cMenor+" "+cMayor);
                }
                contador++;
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(HCup.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(HCup.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            try {
                fr.close();
                pw.close();
            } catch (IOException ex) {
                Logger.getLogger(HCup.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    
    public static boolean comparaMenor(String original, String nuevo){ // regresa true si la nueva es menor que la original
        int pn = Integer.parseInt(original);
        int sn = Integer.parseInt(nuevo);
        if( pn > sn){
            System.out.println("Es mayor "+pn+" que "+sn);
            return true;
        }
        return false;
    }
    
    public static int comparaStringsMayor(String original, String nuevo){
        char [] ori = original.toCharArray();
        char [] nue = nuevo.toCharArray();
        int i;
        for(i=0; i<ori.length; i++){
            if(ori[i] < nue[i]){
                break;
            }
        }
        if(i < ori.length) {//Señal de que es mas grande la neu que ori
            return -1;
        }else // señal de que es mas chico nue que ori
            return 0;
    }
    
}
