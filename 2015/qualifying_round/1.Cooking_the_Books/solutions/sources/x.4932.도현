//
//  main.cpp
//  cooking_the_book
//
//  Created by dohyun.lee on 2015. 1. 11..
//  Copyright (c) 2015ë…„ dohyun.lee. All rights reserved.
//

#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

vector<string> cookingNumbers(int number) {
    string ss(to_string(number));
    
    vector<string> res;
    if (ss.length() == 1 || (ss.length() == 2 and number % 10 == 0)) {
        res.push_back(ss);
        res.push_back(ss);
        return res;
    }
    
    char min = '9';
    char max = '0';
    int minp = 0, maxp = 0;
    const int N = int(ss.length());
    for (int i = 0; i < N; ++i) {
        if (ss[i] >= max) {
            max = ss[i];
            maxp = i;
        }
        if (ss[i] != '0' && ss[i] <= min) {
            min = ss[i];
            minp = i;
        }
    }
    
    string mins(ss);
    swap(mins[0], mins[minp]);
    
    string maxs(ss);
    swap(maxs[0], maxs[maxp]);
    
    res.push_back(mins);
    res.push_back(maxs);
    
    return res;
}

int main(int argc, const char * argv[]) {
    
    FILE *ofp = fopen(argv[1], "r");
    
    int numCase;
    fscanf(ofp, "%d", &numCase);
    
    int num;
    for (int ii = 0; ii < numCase; ++ii) {
        // read number
        fscanf(ofp, "%d", &num);
        
        // get the min, max modified number
        vector<string> res(cookingNumbers(num));
        
        // output number
        cout << "Case #" << ii + 1 << ": " << res[0] << " " << res[1] << endl;
    }
    
    return 0;
}
