//
//  main.cpp
//  fbhacker1/Users/petr/Desktop/fbhacker1/fbhacker1/main.cpp
//
//  Created by Petr Jirouš on 09/01/15.
//  Copyright (c) 2015 Petr Jirouš. All rights reserved.
//

#include <iostream>
#include <string>


std::string process_biggest(std::string);
std::string process_lowest(std::string);

int main(int argc, const char * argv[]) {


    // read it from std input
    int cases;
    std::cin >> cases;
    
    for (int i = 0; i < cases; i++) {
        std::string case_number;
        std::cin >> case_number;
        
        std::cout << "Case #" << i+1 << ": " << process_lowest(case_number) << " " << process_biggest(case_number) << std::endl;
        
    }
    
    return 0;
}


std::string process_lowest(std::string input)
{
    if (input.length() > 1) {
        int min_index = 0;
        
        for (int i = 0; i < input.length(); i++) {
            if (input.at(i) != '0' && input.at(i) - '0' < input.at(min_index) - '0') {
                min_index = i;
            }
        }
        
        if (min_index != 0) {
            char tmp = input.at(0);
            input[0] = input[min_index];
            input[min_index] = tmp;
        }
        
    }
    
    return input;
}

std::string process_biggest(std::string input)
{
    if (input.length() > 1) {
        int max_index = 0;
        
        for (int i = 0; i < input.length(); i++) {
            if (input.at(i) - '0' > input.at(max_index) - '0') {
                max_index = i;
            }
        }
        
        if (max_index != 0) {
            char tmp = input.at(0);
            input[0] = input[max_index];
            input[max_index] = tmp;
        }
        
    }
    
    return input;
}