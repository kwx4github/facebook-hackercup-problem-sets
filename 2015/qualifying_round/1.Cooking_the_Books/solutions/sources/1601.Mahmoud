#define  _CRT_SECURE_NO_WARNINGS

#include <bits/stdc++.h>
/*#include <algorithm>
#include <vector> */
#define fr first 
#define sc second 
#define OO 1000000000
#define mp make_pair
#define mem(a, b) memset(a, b, sizeof a)
#define SZ(a) (int)a.size()
#define ii pair<int, int> 
#define vi vector<int>
#define ll long long
#define FOR(i, a, b) for(int i = a; i < b; i++)

using namespace std;

int ch[10];
string st;
int count() {
	int res = 0;
	for (int i = 0; i < SZ(st); i++)
		res = res * 10 + ch[i];

	return res; 
}
void swap(int i, int j) {
	char t = ch[i];
	ch[i] = ch[j];
	ch[j] = t;
}
int main() {
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	int t, i = 1;
	for (scanf("%d", &t); i <= t; i++) {
		int n; scanf("%d", &n);
		int lw = n, hg = n;
		if (n == 0) printf("Case %d: 0 0\n", i);
		else {
			st = to_string(n);
			for (int j = 0; j < SZ(st); j++) {
				ch[j] = int(st[j] - '0'); 
			}
			for (int j = 0; j < SZ(st); j++)
				for (int k = 0; k < SZ(st); k++) {
					swap(j, k);
					int  x = count();
					if (x > n) {
						if (SZ(to_string(x)) == SZ(st))
							hg = max(hg, x); 
					}
					else if (x < n) {
						if (SZ(to_string(x)) == SZ(st))
							lw = min(lw, x); 
					}
					swap(k, j);
				}
			printf("Case %d: %d %d\n", i, lw, hg);
		}
	}
}

/*
bitset<10000010> bs;
vector<int> primes;
void sieve() {
int n = 1000000;
bs.set();
bs[0] = bs[1] = 0;
for (int i = 2; i < n; i++) {
if (bs[i]) {
for (int j = i * i; j <= n; j += i)  bs[j] = 0;
primes.push_back(i);
}
}
}

int numDiv(int n) {
int in = 0, pf = primes[in];
int ans = n;
while (n != 1 && pf * pf <= n) {
if (n % pf == 0) ans -= ans / pf;
while (n % pf == 0) n /= pf;
pf = primes[++pf];
}
if (n != 1) ans -= ans / n;
return ans;
}

int main() {
sieve();
int t; scanf("%d", &t);
while (t--) {
int n; scanf("%d", &n);
printf("%d\n", numDiv(n));
}

system("pause");
}
*/