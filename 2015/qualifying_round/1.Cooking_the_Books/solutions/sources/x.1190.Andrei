// FMI - Grupa 135 - Semigrupa 2 - Hareza Andrei
// Include
#include <fstream>
#include <cstring>
#include <algorithm>
using namespace std;

// Functii
int getMin(int value);
int getMax(int value);

// Variabile
ifstream in("fbh.in");
ofstream out("fbh.out");

int num, current;

// Main
int main()
{
	in >> num;
	for(int i=1 ; i<=num ; ++i)
	{
		in >> current;
		out << "Case #" << i << ": " << getMin(current) << ' ' << getMax(current) << '\n';
	}
	
	in.close();
	out.close();
	return 0;
}

int getMin(int value)
{
	int num[10];
	memset(num, 0, sizeof(num));
	
	int current = 0;
	while(value)
	{
		num[++current] = value%10;
		value /= 10;
	}
	
	int size = current;
	for(int i=1 ; i<current ; ++i, --current)
		swap(num[i], num[current]);
	
	for(int currentDigit=1 ; currentDigit<=size ; ++currentDigit)
	{
		int minDigit = 10;
		int minPos;
		for(int i=currentDigit ; i<=size ; ++i)
		{
			if(currentDigit == 1 && !num[i])
				continue;
			if(num[i] <= minDigit)
			{
				minDigit = num[i];
				minPos = i;
			}
		}
		
		if(minPos == currentDigit)
			continue;
		
		swap(num[currentDigit], num[minPos]);
		break;
	}
	
	for(int i=1 ; i<=size ; ++i)
		value = value*10 + num[i];
	
	return value;
}

int getMax(int value)
{
	int num[10];
	memset(num, 0, sizeof(num));
	
	int current = 0;
	while(value)
	{
		num[++current] = value%10;
		value /= 10;
	}
	
	int size = current;
	for(int i=1 ; i<current ; ++i, --current)
		swap(num[i], num[current]);
	
	for(int currentDigit=1 ; currentDigit<=size ; ++currentDigit)
	{
		int maxDigit = -1;
		int maxPos;
		for(int i=currentDigit ; i<=size ; ++i)
		{
			if(num[i] >= maxDigit)
			{
				maxDigit = num[i];
				maxPos = i;
			}
		}
		
		if(maxPos == currentDigit)
			continue;
		
		swap(num[currentDigit], num[maxPos]);
		break;
	}
	
	for(int i=1 ; i<=size ; ++i)
		value = value*10 + num[i];
	
	return value;
}
