import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class CookingBooks {

	public static void main(String[] args) {
		BufferedReader read = null;
		BufferedWriter bw = null;
		int n;
		try {
			File file = new File("C:\\java\\output.txt");
			if (!file.exists()) {
				file.createNewFile();
			}

			FileWriter fw = new FileWriter(file.getAbsoluteFile());
			bw = new BufferedWriter(fw);

			InputStream in = new FileInputStream(new File("C:\\java\\cooking_the_books.txt"));
			read = new BufferedReader(new InputStreamReader(in));
			n = Integer.parseInt(read.readLine());
			if (n < 1)
				return;
			for (int i = 0; i < n; i++) {
				bw.write(smallAndBig(i + 1, read.readLine()) + "\n");
			}
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (read != null)
				try {
					read.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			if (bw != null) {
				try {
					bw.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}

	}

	public static String smallAndBig(int ncase, String val) {
		String small = "", big = "";
		char[] chars = val.toCharArray();
		if (chars.length == 1) {
			small = big = chars[0] + "";
		} else {
			int smallest = 0;
			int biggest = 0;
			for (int i = 1; i < chars.length; i++) {
				if (Character.getNumericValue(chars[i]) < Character
						.getNumericValue(chars[smallest]) && chars[i] != '0') {
					smallest = i;
				} else if (Character.getNumericValue(chars[i]) > Character
						.getNumericValue(chars[biggest])) {
					biggest = i;
				}
			}
			char temp = chars[0];
			small = chars[smallest] + "";
			big = chars[biggest] + "";
			for (int i = 1; i < chars.length; i++) {
				//System.out.println(small + " " + big);
				if (i == smallest) {
					small += temp + "";
					big += (chars[i] + "");
				} else if (i == biggest) {
					big += temp + "";
					small += (chars[i] + "");
				} else {
					big += (chars[i] + "");
					small += (chars[i] + "");
				}
			}
		}
		return "Case #" + ncase + ": " + small + " " + big;
	}
}
