'''
HackerCup problem: books
@author: franovic
'''
class HackerCup_books(object):
    def solve(self):
        N = list(self.getString())
        minpos=0
        maxpos=0
        for i in xrange(len(N)):
            if N[minpos]>N[i] and N[i]>'0':
                minpos=i
            if N[maxpos]<N[i]:
                maxpos=i
        minn=N[:]
        minn[0]=N[minpos]
        minn[minpos]=N[0]
        maxn=N[:]
        maxn[0]=N[maxpos]
        maxn[maxpos]=N[0]
        return ''.join(minn) + ' ' + ''.join(maxn)

#I/O code start
    def __init__(self, fName):
        self.fNameIn = fName
        self.fNameOut = '.'.join(fName.split('.')[:-1]+ ['out'])
        self.input = open(fName, 'r')
        self.line=[]
        self.tCases = self.getInt()

    def writeSolution(self):
        out=''
        for t in xrange(1,self.tCases+1):
            out+="Case #%d: %s\n" % (t, str(self.solve()))
        fout = open(self.fNameOut, 'w+')
        fout.write(out.rstrip())

    def getString(self):
        if len(self.line)==0:
            self.line=self.input.readline().rstrip().split( )
        ret = self.line.pop(0)
        return ret
    def getInt(self):
        return int(self.getString())
    def getFloat(self):
        return float(self.getString())
    def getStrings(self):
        if len(self.line)==0:
            self.line=self.input.readline().rstrip().split( )
        ret = self.line[:]
        self.line=[]
        return ret
    def getInts(self):
        return [int(x) for x in self.getStrings()]
    def getFloats(self):
        return [float(x) for x in self.getStrings()]

import sys
if __name__ == '__main__':
    hc = HackerCup_books(sys.argv[1])
    hc.writeSolution()
#I/O code end