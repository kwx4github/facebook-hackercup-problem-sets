#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define SIZE 10

void swp(char *a, char *b);

void swap(char a[], char b[],char c[], char d[], int n);

void empty(char a[], char b[], char c[], char d[], int s) {

    int i = 0;
    for( i = 0; i < s; i++) {
	a[i] = b[i] = c[i] = d[i] = 0;
    }

    return;
}


int copy(char b[], char a[], int n) {

   int i = 0;
    for( i = 0; i < n && a[i] != '\0'; i++)
	b[i] = a[i];

   return 0;
}

int Sort(char A[], int n) {
	
   int i, j;

   for( i = 1; i < n; i++) {
	for( j = 0; j < i; j++) {
		if( A[j] > A[i]) {
	           int k = A[i];
                   A[i] = A[j];
                   A[j] = k;
                 
                }
         }
    
    }

   return 0;
}

int Search( char a[], int n, char key) {

   int i = 0;
   for( i = 0; i < n; i++) {
	if( a[i] == key)
		return i;
   }
   return -1;
}



int main(void){


     FILE *input = fopen("/home/Izak/Desktop/FHC/input.txt", "r+");
     if (input == NULL) {
	fprintf(stderr,"Can't open input file");
	exit(EXIT_SUCCESS);
     }

    FILE *output = fopen("/home/Izak/Desktop/FHC/output.txt", "w+");
    if( output == NULL) {
	fprintf(stderr,"Can't open output file");;
	exit(EXIT_SUCCESS);
    }

     int T,N, i = 0;

     fscanf(input," %d", &T);

     while (i < T) {
	char n[SIZE];
	fscanf(input," %d", &N);	
	sprintf(n, "%d", N);
	
	int s = strlen(n);

	char sorted[s];
        char small[s], large[s];
	copy(sorted, n, s);
	Sort(sorted, s);
	swap(n, sorted, small, large, s);
	fprintf(output,"\nCase #%d: %s %s",i+1, small, large);
	
	empty(n, sorted, small, large, s);
	i++;	
    }
    fclose(input);

    return 0;
}

void swap(char i[], char s[], char small[], char large[], int n) {

    int size = n;

    if( size == 1) {
	copy(small,i, size);
	copy(large,i, size);
        return;
    } else {
	int sm, la;
	sm = Search(i, size, s[0]);
	la = Search(i, size,s[size-1]);
	if( i[sm] == '0') {
	   copy(small, i, size);
        } else {
		swp(&i[sm],&i[0]);
		copy(small, i, size);
		swp(&i[sm], &i[0]);
        }

	swp(&i[la], &i[0]);
	copy(large, i, size);
	return ;
   }    

}

void swp( char *a, char *b) {

   char c = *a;
   *a = *b;
   *b = c;
}
