#!/usr/bin/env python
# -*- coding: utf-8 -*-

def swap_digs(line, i1, i2):
    l = list(line)
    l[i1], l[i2] = l[i2], l[i1]
    return ''.join(l)

def main():
    in_file = open('A_in.txt')
    out_file = open('A_out.txt', 'w')
    index = 0
    lines = in_file.readlines()
    count = int(lines[0].rstrip('\n'))
    for i in xrange(count):
        line = lines[i + 1].rstrip('\n')
        min = '0'
        max = '0'
        if len(line) == 1:
            min = line
            max = line
        else:
            max_dig = -1
            max_dig_pos_max = -1
            max_dig_pos_min = -1
            have_zero = False
            zero_max = -1
            zero_min = -1
            min_dig = 10
            min_dig_pos_max = -1
            min_dig_pos_min = -1
            for d_ind in xrange(len(line) - 1):
                if int(line[1 + d_ind]) == 0:
                    if not have_zero:
                        have_zero = True
                        zero_min = 1 + d_ind
                    else:
                        zero_max = 1 + d_ind
                if int(line[1 + d_ind]) < min_dig and int(line[1 + d_ind]) != 0:
                    min_dig = int(line[1 + d_ind])
                    min_dig_pos_min = 1 + d_ind
                if int(line[1 + d_ind]) > max_dig and int(line[1 + d_ind]) != 0:
                    max_dig = int(line[1 + d_ind])
                    max_dig_pos_min = 1 + d_ind
                
                if int(line[1 + d_ind]) == min_dig and int(line[1 + d_ind]) != 0:
                    min_dig_pos_max = 1 + d_ind
                if int(line[1 + d_ind]) == max_dig and int(line[1 + d_ind]) != 0:
                    max_dig_pos_max = 1 + d_ind

                if int(line[min_dig_pos_min]) == min_dig:
                    min_dig_pos_max = min_dig_pos_min
                if int(line[max_dig_pos_max]) == max_dig:
                    max_dig_pos_max = max_dig_pos_min

            # min
            if min_dig > 9:
                min = line
            else:
                set_min = False
                pos = 0
                while not set_min and pos < len(line):
                    if pos != 0 and have_zero:
                        if int(line[pos]) > 0:
                            set_min = True
                            min = swap_digs(line, pos, zero_max)
                    else:
                        if int(line[pos]) > min_dig:
                            set_min = True
                            min = swap_digs(line, pos, min_dig_pos_max)
                        

                    if not set_min:
                        pos += 1
            # max
            if max_dig < 0:
                max = line
            else:
                set_max = False
                pos = 0
                while not set_max and pos < len(line):
                    if int(line[pos]) < max_dig:
                        set_max = True
                        max = swap_digs(line, pos, max_dig_pos_max)
                    if not set_max:
                        pos += 1
        out_file.write('Case #' + str(index + 1) + ': ' + min + ' ' + max + '\n')
        index += 1
    in_file.close()
    out_file.close()

if  __name__ ==  "__main__" :
    main()
