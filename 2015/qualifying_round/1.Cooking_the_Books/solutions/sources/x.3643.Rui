import itertools
from copy import deepcopy
def solve(case):
	caseSt=str(case)
	if len(caseSt)==1:
		return ' '.join([caseSt,caseSt])
	aI = list(range(len(caseSt)))
	combs = itertools.combinations(aI,2)
	ret = [case]
	for comb in combs:
		tmp = list(deepcopy(caseSt))
		if tmp[comb[1]]=='0':
			continue
		tmp[comb[0]],tmp[comb[1]]=tmp[comb[1]],tmp[comb[0]]
		ret.append(int(''.join(tmp)))
	tmp1 = str(min(ret))
	tmp2 = str(max(ret))
	return ' '.join([tmp1, tmp2])

def run(fname):
	with open(fname,"rb") as inf, open (fname[:fname.rfind(".txt")]+'_output.txt','wb') as a_out:
		n = int(inf.readline().strip().replace("/n",''))
		for i in range(n):
			case= int(inf.readline().strip().replace("/n",''))
			ret=solve(case)
			res="Case #"+str(i+1)+": "+str(ret)
			a_out.write(res+'\n')
run("cooking_the_books.txt")