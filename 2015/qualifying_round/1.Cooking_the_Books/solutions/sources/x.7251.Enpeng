import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintStream;
import java.util.Collections;
import java.util.LinkedList;
import java.util.Stack;

public class Main {
	public static void main(String argv[]) throws Exception {
		Main main = new Main();
		main.facebook1();
	}

	public void facebook1() {
		try {
			BufferedReader reader = new BufferedReader(new FileReader(
					"f:\\temp\\input.txt"));
			PrintStream outp = new PrintStream("f:\\temp\\output.txt");
			String temp = null;
			temp = reader.readLine();
			int n = Integer.parseInt(temp);
			for (int c = 0; c < n; c++) {
				temp = reader.readLine();
				int num = Integer.parseInt(temp);
				System.out.println(num);
				LinkedList<Integer> digs = new LinkedList<Integer>();
				while (num > 0) {
					digs.add(num % 10);
					num /= 10;
				}
				int mind = 10, maxd = 0;
				int minp = -1, maxp = -1;
				for (int i = 0; i < digs.size(); i++) {
					int dig = digs.get(i);
					if (dig > maxd) {
						maxd = dig;
						maxp = i;
					}
					if (dig < mind && dig != 0) {
						mind = dig;
						minp = i;
					}
				}
				System.out.println(minp + ":" + mind+" "+maxp + ":" + maxd);
				int max = 0, min = 0;
				if (digs.size() > 0) {
					swap(digs, digs.size() - 1, maxp);
					for (int i = digs.size()-1; i >=0 ; i--)
						max = max * 10 + digs.get(i);
					swap(digs, digs.size() - 1, maxp);
					swap(digs, digs.size() - 1, minp);
					for (int i = digs.size()-1; i >=0 ; i--)
						min = min * 10 + digs.get(i);
				}
				outp.println("Case #" + (c + 1) + ": " + min + " " + max);
			}
			outp.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void swap(LinkedList<Integer> digs, int i, int j) {
		int temp = digs.get(i);
		digs.set(i, digs.get(j));
		digs.set(j, temp);
	}
}
