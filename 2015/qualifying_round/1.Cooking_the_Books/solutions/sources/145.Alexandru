//
//  main.cpp
//  facebook_cooking_the_books
//
//  Created by Alexandru Andronache on 09/01/15.
//  Copyright (c) 2015 Alexandru Andronache. All rights reserved.
//

#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

FILE *f = fopen("input.in", "r");
FILE *g = fopen("output.out", "w");

int N;
long long nr;

long long minim = 0;
long long maxim = 0;

long long change(long long number, int pos, int digit)
{
    return (number / (long long)pow(10, pos + 1)) * (long long)pow(10, pos + 1) + digit * (long long)pow(10, pos) + number % (long long)pow(10, pos);
}

int numberOfDigits(long long n)
{
    int rez = 0;
    while (n)
    {
        n = n / 10;
        rez++;
    }
    return rez;
}

void calculateMinMax(long long n)
{
    long long tmp = n;
    int i = 0;
    vector<int> v;
    while (tmp)
    {
        v.push_back(tmp % 10);
        tmp = tmp / 10;
        i++;
    }
    
    minim = n, maxim = n;
    
    int t = v.size() - 1;
    for (int i = 0; i < v.size(); ++i)
    {
        for (int j = 0; j < v.size(); ++j)
        {
            if (i != j)
            {
                if ((i == t && v[j] == 0) || (j == t && v[i] == 0))
                {
                    
                }
                else
                {
                    long long tmp = n;
                    tmp = change(tmp, i, v[j]);
                    tmp = change(tmp, j, v[i]);
                    if (tmp > maxim && numberOfDigits(tmp) == t + 1) maxim = tmp;
                    if (tmp < minim && numberOfDigits(tmp) == t + 1) minim = tmp;
                }
            }
        }
    }
}

int main(int argc, const char * argv[])
{
    fscanf(f, "%d", &N);
    for (int n = 1; n <= N; ++n)
    {
        fscanf(f, "%lld", &nr);
        calculateMinMax(nr);
        if (n != N) fprintf(g, "Case #%d: %lld %lld\n", n, minim, maxim);
        else fprintf(g, "Case #%d: %lld %lld", n, minim, maxim);
    }
    
    fclose(f);
    fclose(g);
    
    return 0;
}
