using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Hackercup
{
    public static class CookingTheBooks
    {
        public static String Calculate(List<String> input)
        {
            Dictionary<int,object> output = new Dictionary<int,object>();
            Int32 lenght = Convert.ToInt32(input[0]);
            input.RemoveAt(0);

            Int32 count = 0;
            foreach (var line in input)
            {
                count++;

                output.Add(count,Cook(line));
            }

            if (output.Count != lenght)
            {
                throw new Exception("Output Count != Expected Lenght");
            }

            return string.Join("\r\n",output.Select(pair => string.Format("Case #{0}: {1}", pair.Key, pair.Value)));
        }

        private static string Cook(string line)
        {
            var charList = line.ToCharArray();
            var combinations = new List<String>();
            combinations.Add(line);

            for (int i = 0; i < charList.Length; i++)
            {
                for (int j = i + 1; j < charList.Length - i; j++)
                {
                    var copyCharList = (char[])charList.Clone();
                    var a = charList[i];
                    var b = charList[j];

                    copyCharList[i] = b;
                    copyCharList[j] = a;

                    String meth = new string(copyCharList);
                    if (!meth.StartsWith("0"))
                    {
                        combinations.Add(meth);
                    }
                }                
            }

            List<Int32> intList = combinations.Select(c => Convert.ToInt32(c)).ToList();
            return String.Format("{0} {1}",intList.Min(),intList.Max());
        }
    }
}
