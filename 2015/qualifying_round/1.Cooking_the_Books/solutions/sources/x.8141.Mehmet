#include<iostream>
#include <vector>
#include <algorithm> 
#include <stdio.h>
#include <stdlib.h>
#include <fstream>

using namespace std;


int main()
{
	

	 
	int temp1;
	vector<int> maxa;
	vector<int> mina;
	vector<int> number;
	vector<int> number_t;
	vector<int> number_t1;

	std::vector<int> v;
	int i;
	int res;
	
	FILE *myFile;
    myFile = fopen("cooking_the_books.txt", "r");
    ofstream outputFile;
	outputFile.open("outputa.txt");

unsigned long long int a;
    fscanf(myFile, "%d", &i);
    


    for ( int j = 0; j < i ; j++)
    {
        fscanf(myFile, "%d", &res);
        v.push_back(res);
        a = res ;
   

unsigned long long int temp =a ;
   


	if(a < 10)
	{
		
		mina.push_back(a);
	
		maxa.push_back(a);
		

	}

	else if (a >= 10 && a < 100)
	{
		if(a == 10)
		{
			
			mina.push_back(a);
			
			maxa.push_back(a);
			
			
		}

		else
		{
			if (a % 10 >  int(a/10) )
			{
				
				mina.push_back(a); 
				
				maxa.push_back( (a%10)*10 + int(a/10));

				
			}

			else
			{
				
				maxa.push_back(a);
				
				mina.push_back((a%10)*10 + int(a/10));
				
			}
		}
	}

	else
	{

		
		while(a > 0)
		{
			temp1 = a % 10;
			

			number.push_back(temp1);
			number_t.push_back(temp1);
			number_t1.push_back(temp1);
			a = (a - temp1) / 10 ;

		}
		


		if (*max_element(number.begin(),number.end()) > *--number.end()) // swap for max
		{
			int r = *max_element(number.begin(),number.end());
			
			unsigned j=0;
			for (j=0; j<number.size(); j++)
			{

				if(number[j] == *max_element(number.begin(),number.end()) )
					break;

			}

			unsigned int temps;
			temps = number[j] ;
			number[j] = number[number.size()-1] ;
			number[number.size()-1] = temps ;  

			unsigned  l = 1;
			a= 0 ;
			for (std::vector<int>::iterator it = number.begin(); it != number.end(); ++it)
	    	{
	    		
    			a = a+ *it*l;
    			l *=10;
    			
    			
    		}
    		

		}


		
		maxa.push_back(a);


		a = temp ;		
		
		sort (number_t1.begin(), number_t1.end());

		while(*number_t1.begin() == 0)
		{
			number_t1.erase(number_t1.begin());
		}
		
		unsigned j;

		
		if(*number_t1.begin() <  *--number_t.end())
		{
			
			for (j=0; j<number_t.size(); j++)
			{

				if(number_t[j] == *number_t1.begin() )
					break;

			}


			unsigned int temps_m;
			temps_m = number_t[j] ;
			number_t[j] = number_t[number_t.size()-1] ;
			number_t[number_t.size()-1] = temps_m ; 
			unsigned  l = 1;
			a= 0 ; 
			for (std::vector<int>::iterator it = number_t.begin(); it != number_t.end(); ++it)
	    	{
	    		
    			a = a+ *it*l;
    			l *=10;
    			
    		}

    		

		}

			
    		mina.push_back(a);

    		number.clear();
			number_t.clear();
			number_t1.clear();

    		

	}

}



	for (unsigned kl = 0 ; kl<maxa.size();++kl)
	{

		outputFile << "Case #" << kl+1 << ": "<< mina[kl] << " "<< maxa[kl] << endl ; 
	}
    

}