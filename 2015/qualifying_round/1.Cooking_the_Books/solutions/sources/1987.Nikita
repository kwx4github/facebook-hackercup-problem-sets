#include <cstdio>
#include <cassert>
#include <ctime>
#include <algorithm>
#include <cstring>

#define eprintf(...) fprintf(stderr, __VA_ARGS__)

int main() {
    clock_t start = clock();
    int tests;
    assert(scanf("%d", &tests) == 1);
    for (int test = 1; test <= tests; test++) {
        eprintf("Test %d\n", test);
        clock_t testStart = clock();
        int N;
        assert(scanf("%d", &N) == 1);
        int min = N;
        int max = N;
        char s[13];
        sprintf(s, "%d", N);
        for (int i = 0; s[i]; i++) {
            for (int j = i + 1; s[j]; j++) {
                if (i == 0 && s[j] == '0') {
                    continue;
                }
                std::swap(s[i], s[j]);
                int cur = atoi(s);
                if (min > cur) min = cur;
                if (max < cur) max = cur;
                std::swap(s[i], s[j]);
            }
        }
        printf("Case #%d: %d %d\n", test, min, max);
        eprintf("Test %d end: %.2f\n", test, (double)(clock() - testStart) / CLOCKS_PER_SEC);
    }
    eprintf("Total: %.2f\n", (double)(clock() - start) / CLOCKS_PER_SEC);
    return 0;
}
