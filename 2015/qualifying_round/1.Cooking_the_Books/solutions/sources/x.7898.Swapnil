import java.io.BufferedReader;
import java.io.InputStreamReader;

public class CookingTheBooks {
	static int tempTestCase, temp, j, k, i, T, n1, n2;
	static int testCases[] = new int[10000];
	static int lengTh[] = new int[10000];
	static int solutionSet;
	static int minAnswer[] = new int[10000];
	static int maxAnswer[] = new int[10000];
	static String line;

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		line = br.readLine();
		T = Integer.parseInt(line);

		for (i = 0; i < T; i++) {
			line = br.readLine();
			testCases[i] = Integer.parseInt(line);
		}
		for (i = 0; i < T; i++) {
			temp = 0;
			tempTestCase = minAnswer[i] = testCases[i];
			for (j = String.valueOf(testCases[i]).length() - 1; j >= 0; j--) {
				n1 = (int) (tempTestCase / (Math.pow(10, j)));
				n1 %= 10;
				for (k = String.valueOf(testCases[i]).length() - 1; k >= 0; k--) {
					n2 = (int) (tempTestCase / (Math.pow(10, k)));
					n2 %= 10;
					if (n1 != 0 && n2 != 0) {
						solutionSet = (int) (tempTestCase - n1
								* Math.pow(10, j));
						solutionSet = (int) (solutionSet + n2 * Math.pow(10, j));
						solutionSet = (int) (solutionSet - n2 * Math.pow(10, k));
						solutionSet = (int) (solutionSet + n1 * Math.pow(10, k));
					}
					if (minAnswer[i] > solutionSet) {
						minAnswer[i] = solutionSet;
					}
					if (maxAnswer[i] < solutionSet) {
						maxAnswer[i] = solutionSet;
					}
				}
			}
		}

		for (i = 0; i < T; i++) {
			System.out.println("Case # " + (i + 1) + " " + minAnswer[i] + " "
					+ maxAnswer[i]);
		}

	}
}
