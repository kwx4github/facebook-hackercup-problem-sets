#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <stack>
#include <queue>
#include <vector>
#include <cstdio>
#include <string>
#include <bitset>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <utility>
#include <sstream>
#include <iostream>
#include <algorithm>
#define sqr(x) ((x)*(x))
#define MIN(a, b) (((a) < (b)) ? (a) : (b))
#define MAX(a, b) (((a) > (b)) ? (a) : (b))
#define ABS(a) (((a) > (0)) ? (a) : (-(a)))
#define eps (1e-9)
#define mp make_pair
#define pb push_back
#define Pair pair<int,int> //V W
#define xx first
#define yy second
#define equal(a,b) (ABS(a-b)<eps)
using namespace std;

template<class T> string tostring(T x) { ostringstream out; out<<x; return out.str();}
long long toint(string s) { istringstream in(s); long long x; in>>x; return x; }
#define Max 2001
/////////////////////////////////////////////////////////////////////////////////////////////////////
struct cmp{
   bool operator()(const string &a, const string &b)const{
       return a.compare(b)>0;
   }
};
priority_queue<string, vector<string > ,cmp >q;
int n;
string dig,ma;
char c;
int main(){
//	freopen("test.in","r",stdin);
//	freopen("test.out","w",stdout);
		scanf("%d",&n);
		for (int i=0;i<n;i++){
			cin>>dig;
			int l=dig.size();
			for (int j=0;j<l;j++){
				for(int k=j+1;k<l;k++){
					ma=dig;
					ma[j]=dig[k];
					ma[k]=dig[j];
					q.push(ma);
					
				}
			}
			q.push(dig);
			bool f=true;
			printf("Case #%d: ",i+1);
			
			while(!q.empty()){
				ma=q.top();
				if (ma[0]!='0' && f){
				
				cout<<ma<<" ";
				f=false;
				}
				
				q.pop();
				
			}	
			cout<<ma<<endl;
			
		}
			
	
	return 0;
}


