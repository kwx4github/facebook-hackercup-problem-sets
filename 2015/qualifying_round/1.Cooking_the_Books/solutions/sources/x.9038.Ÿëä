#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

int main(){
    //freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    string input, largest, smallest, numbers;
    int t, temp, cs = 0, large[13], small[13], check[13], mx, ind;
    cin >> t;
    while(t--){
        input.clear(), numbers.clear(), largest.clear(), smallest.clear();
        cin >> input;
        largest = input;
        smallest = input;
        int sz = input.size();
        int cnt = 0;
        memset(check, 0, sizeof(check));
        memset(large, 0, sizeof(large));
        memset(small, 0, sizeof(small));
        for(int i = 0; i < sz; i++){
            if(!check[input[i]-'0'])numbers.push_back(input[i]);
            check[input[i]-'0']++;
            if(input[i] >= '1' && input[i] <= '9')cnt++;
        }
        if(cnt <= 1 || numbers.size() == 1){
            cout << "Case #" << ++cs << ": " << input << " " << input << endl;
            continue;
        }
        for(int i = 0; i <= 9; i++)large[i] = check[i], small[i] = check[i];
        sort(numbers.begin(), numbers.end());
        int nmz = numbers.size(), flag = 0;
        if(numbers[0] == '0'){
            if(smallest[0] == numbers[1]){
                small[numbers[1]-'0']--;
                for(int i = 1, j = 0; i < sz; i++){
                    if(small[numbers[j]-'0'] == 0){
                        j++, i--;
                        continue;
                    }
                    if(smallest[i] == numbers[j])small[numbers[j]-'0']--;
                    else{
                        for(int z = sz-1; z >= 0; z--){
                            if(smallest[z] == numbers[j]){
                                swap(smallest[i], smallest[z]);
                                flag = 1;
                                break;
                            }
                        }
                    }
                    if(flag)break;
                }
            }
            else{
                for(int k = sz-1; k >= 0; k--){
                    if(smallest[k] == numbers[1]){
                        swap(smallest[0], smallest[k]);
                        break;
                    }
                }
            }
        }
        else{
            for(int i = 0, j = 0; i < sz; i++){
                if(small[numbers[j]-'0'] == 0){
                    j++, i--;
                    continue;
                }
                if(smallest[i] == numbers[j])small[numbers[j]-'0']--;
                else{
                    for(int z = sz-1; z >= 0; z--){
                        if(smallest[z] == numbers[j]){
                            swap(smallest[i], smallest[z]);
                            flag = 1;
                            break;
                        }
                    }
                }
                if(flag)break;
            }
        }
        flag = 0;
        reverse(numbers.begin(), numbers.end());
        for(int i = 0, j = 0; i < sz; i++){
            if(large[numbers[j]-'0'] == 0){
                j++, i--;
                continue;
            }
            if(largest[i] == numbers[j])large[input[i]-'0']--;
            else{
                for(int z = sz-1; z >= 0; z--){
                    if(largest[z] == numbers[j]){
                        swap(largest[i], largest[z]);
                        flag = 1;
                        break;
                    }
                }
            }
            if(flag)break;
        }
        cout << "Case #" << ++cs << ": " << smallest << " " << largest << endl;
    }
    return 0;
}
