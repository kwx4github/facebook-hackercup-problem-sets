def read_ints(file):
    line = file.readline().strip().split()
    result = tuple(map(int, line))
    if len(result) == 1:
        result = result[0]
    return result


def input():
    filename = __file__.split('.')[0] + '.in'
    with open(filename) as file:
        tests_count = int(file.readline().strip())

        for test_index in xrange(tests_count):
            number = read_ints(file)
            yield number


def output():
    filename = __file__.split('.')[0] + '.out'
    with open(filename, 'w') as file:
        i = 0
        while True:
            value = (yield)
            if value is None:
                return

            minimum, maximum = value

            i += 1
            file.write('Case #%d: %s %s\n' % (i, minimum, maximum))


def solve(number):
    minimum = number
    maximum = number

    number = list(str(number))

    for i, digit1 in enumerate(number):
        for j, digit2 in enumerate(number):
            if i != j:
                swapped = number[:]
                swapped[i] = digit2
                swapped[j] = digit1

                if swapped[0] == '0':
                    continue

                new_number = int(''.join(swapped))

                minimum = min(minimum, new_number)
                maximum = max(maximum, new_number)

    return minimum, maximum


def main():
    results = output()
    results.next()

    for number in input():
        results.send(solve(number))

    try:
        results.next()
    except StopIteration:
        pass


if __name__ == '__main__':
    main()
