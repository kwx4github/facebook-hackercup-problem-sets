using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FCB_CookingTheBooks
{
	class Input
	{
		public int NumberOfTests { get; set; }
		public List<string> Tests { get; set; }
		public Input()
		{
			this.Tests = new List<string>();
		}
	}
	class InputParser
	{
		public string FilePath { get; set; }
		public InputParser(string FilePath)
		{
			this.FilePath = FilePath;
		}
		public Input Parse()
		{
			Input input = new Input();

			StreamReader sr = new StreamReader(this.FilePath);
			input.NumberOfTests = int.Parse(sr.ReadLine());

			for (int j = 0; j < input.NumberOfTests; j++)
			{
				input.Tests.Add(sr.ReadLine());
			}

			return input;
		}
	}
	class Program
	{
		static void Main(string[] args)
		{
			Input input = (new InputParser("input.txt")).Parse();

			for (int t = 0; t < input.NumberOfTests; t++)
			{
				Console.WriteLine("Case #{0}: {1} {2}", t + 1, getLower(input.Tests[t]), getBigger(input.Tests[t]));
			}
		}

		private static string getBigger(string s)
		{
			char[] array = s.ToCharArray();
			char[] max = s.ToCharArray();

			for (int i = 0; i < array.Length; i++)
			{
				for (int j = i + 1; j < array.Length; j++)
				{
					char[] temp = s.ToCharArray();
					
					char c = temp[i];
					temp[i] = temp[j];
					temp[j] = c;

					for (int k = 0; k < array.Length; k++)
					{
						if(temp[k] > max[k])
						{
							max = temp;
							break;
						}
						else
						{
							break;
						}
					}
				}
			}

			return new string(max);
		}

		private static string getLower(string s)
		{
			char[] array = s.ToCharArray();
			char[] min = s.ToCharArray();

			for (int i = 0; i < array.Length; i++)
			{
				for (int j = i + 1; j < array.Length; j++)
				{
					char[] temp = s.ToCharArray();

					char c = temp[i];
					temp[i] = temp[j];
					temp[j] = c;

					if(temp[0] == '0')
					{
						break;
					}

					for (int k = 0; k < array.Length; k++)
					{
						if (temp[k] < min[k])
						{
							min = temp;
							break;
						}
						else
						{
							break;
						}
					}
				}
			}

			return new string(min);
		}
	}
}
