/*Author :rednivrug15 */
#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define rep(i,n) for(int i=0; i<n ; i++)
using namespace std;
//#define long double double

#define REP(i,n) for (int i = 1; i <= n; i++)
#define ll long long
#define mod (int)(1e9+7)
const int base = 1000100000;
const int base_digits = 9;

long long power(ll a,ll b)
{
    ll ret=1;
    while(b)
    {
        if(b%2==1)
            ret=(ret*a)%mod;
        a=(a*a)%mod;
        b/=2;
    }
    return ret;
}
int hashe[10];

int main()
{
   freopen("inp.txt","r",stdin);
   freopen("op.txt","w",stdout);
   int t;
   cin>>t;

   for(int test=1; test<=t; test++)
   {
        printf("Case #%d: ",test);
        string small,large,str;
        cin>>str;
        small=str;
        large=str;

        bool flags=0,flagl=0;
        int bests=0,bestl=0;

        for(int i=1; i<str.size(); i++)
        {
            if(str[i]<=str[bests] && str[i]!='0')
            {
                flags=1;
                bests=i;
            }
        }
        swap(small[bests],small[0]);

        if(flags==0)
        {
            for(int i=1; i<str.size();i++)
            {
                if(flags==1)
                    break;
                bests=i;
                for(int j=i+1; j<str.size(); j++)
                {
                    if(str[j]<=str[bests])
                    {
                        bests=j;
                        flags=1;
                    }
                }
                if(flags==1)
                    swap(small[i],small[bests]);
            }
        }


        for(int i=1; i<str.size(); i++)
        {
            if(str[i]>=str[bestl])
            {
                flagl=1;
                bestl=i;
            }
        }
        swap(large[bestl],large[0]);

        if(flagl==0)
        {
            for(int i=1; i<str.size();i++)
            {
                if(flagl==1)
                    break;
                bestl=i;
                for(int j=i+1; j<str.size(); j++)
                {
                    if(str[j]>=str[bestl])
                    {
                        bestl=j;
                        flagl=1;
                    }
                }
                if(flagl==1)
                    swap(large[i],large[bestl]);
            }
        }

        cout<<small<<" "<<large<<endl;
   }
   return 0;
}
