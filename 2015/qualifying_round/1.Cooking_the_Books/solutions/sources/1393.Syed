#include <iostream>
#include <iomanip>
#include <cstdio>
#include <set>
#include <vector>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <utility>
#include <iterator>
#include <cmath>
#include <algorithm>
#include <memory.h>
#include <string>
#include <cstring>
#include <sstream>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <cctype>
#include <fstream>
#include <climits>
#include <numeric>
#include <bitset>
#include <complex>
#include <functional>
#include <list>
using namespace std;
typedef long long int LL;
typedef unsigned long long int uLL;
inline int _Int() { char INPUT[15]; scanf("%s",INPUT); return atoi(INPUT); }
inline LL _LL() { char INPUT[70]; scanf("%s",INPUT); return atoll(INPUT); }
LL bigMod(LL A,LL P,int M){ LL R=1; for(A%=M; P; P>>=1) { if(P&1) R=(R*A)%M; A=(A*A)%M; } return R; } /** (A^P) % M **/
LL bigMul(LL A,LL B,LL M) { LL R=0; for(A%=M; B; B>>=1) { if(B&1) R=(R+A)%M; A=(A+A)%M; } return R; } /** (A*B) % M **/
LL _bigMod(LL A,LL P,LL M){ LL R=1; for(A%=M; P; P>>=1) { if(P&1) R=bigMul(R,A,M); A=bigMul(A,A,M); } return R; } /** advance bigMod **/
template<class T>T GCD(T x, T y) { while(x) x^=y^=x^=y%=x; return y; } /** GCD(a,b) **/
#define pb  push_back
#define pob pop_back
#define pi  acos(-1)
/*************************************************************************************************************************
**                                            Syed Zafrul Lipu (ShockProof)                                              *
**                                            CSE, University of Asia Pacific                                            *
**************************************************************************************************************************/


int main()
{
    freopen("cooking_the_books.txt","r",stdin);
    freopen("cooking_the_books_out.txt","w",stdout);
    string s,mn,mx,temp;
    int t=_Int(),tc=0;
    while(t--) {

        cin>>s;
        mn=s;
        mx=s;
        int sz=s.size();
        for(int i=0; i<sz; i++) {
            for(int j=0; j<sz; j++) {
                temp=s;
                swap(temp[i],temp[j]);
                if(temp[0]!='0') {
                    mn=min(mn,temp);
                    mx=max(mx,temp);
                }
            }
        }
        printf("Case #%d: ",++tc);
        cout<<mn<<" "<<mx<<endl;
    }

    return 0;
}
