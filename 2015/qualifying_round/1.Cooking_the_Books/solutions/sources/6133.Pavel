def smallest_num(num)

	if num.size > 1
	
		catch :breakouter do
	
			for i in (0...num.size - 1)
				minPos = i
				
				for j in (num.size-1).downto(i)
					if num[j] < num[minPos]				
						next if i == 0 && num[j] == "0"
						
						minPos = j				
					end
				end
				
				if i != minPos
					tmp = num[i]
					num[i] = num[minPos]
					num[minPos] = tmp				
					
					throw :breakouter
				end
			end			
		end
	end
	
	return num
end

def largest_num(num)

	if num.size > 1
	
		catch :breakouter do
	
			for i in (0...num.size - 1)
				maxPos = i
				
				for j in (num.size-1).downto(i)
					if num[j] > num[maxPos]				
						
						maxPos = j				
					end
				end
				
				if i != maxPos
					tmp = num[i]
					num[i] = num[maxPos]
					num[maxPos] = tmp	
					
					throw :breakouter			
				end
			end
		end
	end
	
	return num
end

cnt = 0

$stdin.each_line do |num|
  unless cnt == 0 then
	
	num = num.to_s.strip
	
	smallest = smallest_num(num.dup)
	largest = largest_num(num.dup)
	
	puts "Case ##{cnt}: #{smallest} #{largest}"
	
  end
  
  cnt += 1
end
