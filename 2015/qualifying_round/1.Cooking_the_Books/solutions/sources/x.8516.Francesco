//
//  main.cpp
//  Facebook Hacker Cup 2015
//
//  Created by Francesco Infante on 09/01/15.
//  Copyright (c) 2015 Francesco Infante. All rights reserved.
//

#include <iostream>

using namespace std;

int main(int argc, const char * argv[]) {
    int t;
    cin >> t;
    for (int i = 1; i<=t; i++) {
        string num, small, big;
        cin >> num;
        small = "";
        big = "";
        if (num.length() == 1) {
            small = num;
            big = num;
        } else {
            for (int k = 0; k<num.length(); k++) {
                char min = num[k];
                char min_j = k;
                for (int j = k + 1; j<num.length(); j++) {
                    if (num[j] < min) {
                        if (k !=0 || num[j] >'0') {
                            min = num[j];
                            min_j = j;
                        }
                    }
                }
                if (min == num[k]) {
                    small+=num[k];
                } else {
                    small+=min;
                    for (int l = k + 1; l< min_j; l++) {
                        small+=num[l];
                    }
                    small+=num[k];
                    for (int l = min_j + 1; l< num.length(); l++) {
                        small+=num[l];
                    }
                    break;
                }
            }
            
            for (int k = 0; k<num.length(); k++) {
                char max = num[k];
                char max_j = k;
                for (int j = k + 1; j<num.length(); j++) {
                    if (num[j] > max) {
                        max = num[j];
                        max_j = j;
                    }
                }
                if (max == num[k]) {
                    big+=num[k];
                } else {
                    big+=max;
                    for (int l = k + 1; l< max_j; l++) {
                        big+=num[l];
                    }
                    big+=num[k];
                    for (int l = max_j + 1; l< num.length(); l++) {
                        big+=num[l];
                    }
                    break;
                }
            }
        }
        cout << "Case #" << i << ": " << small << " " << big << endl;
    }
    return 0;
}
