#include <iostream>
#include <stdio.h>
#include <vector>
#include <climits>
#include <algorithm>
#include <map>
#include <math.h>
#include <utility>
#include <queue>
#include <string.h>

using namespace std;

int n;
string s,sMinimo,sMaximo;
char c,temp;
pair<int,char> minimo,maximo;
int mayor;
bool hayMayor=false;
bool fHayMayor(int inicio,char o)
{
    for(int i=inicio;i<sMaximo.size();i++)
        {
            if(o<sMaximo[i])
            {
                hayMayor=true;
                mayor = i;
                o = sMaximo[i];
            }
        }
    return hayMayor;
}
int main()
{
    
    cin >> n;
    
    for(int i=0;i<n;i++)
    {
        cin >> s;
        sMinimo = s;
        sMaximo = s;
        c = s[0];
        hayMayor = false;
        //------------------------MINIMO------------------------
        minimo.first = 0;
        minimo.second = s[0];
        bool hayCero=false,hayNoCero=false;
        int cero=0,noCero=0;
        for(int k=0;k<sMinimo.size();k++)
        {
            if(sMinimo[k] == '0')
            {
                cero = k;
                hayCero=true;
                break;
            }
        }
        for(int k=1;k<sMinimo.size();k++)
        {
            if(sMinimo[k] != '0')
            {
                noCero = k;
                hayNoCero=true;
                break;
            }
        }
        if(!hayCero)
        {
            for(int j=1;j<sMinimo.size();j++)
            {
                if(minimo.second>=sMinimo[j] && sMinimo[j] != '0')
                {
                    minimo.first = j;
                    minimo.second = sMinimo[j];
                }
            }
            for(int k=0;k<minimo.first;k++)
            {
                if(sMinimo[k]>minimo.second)
                {
                    temp = sMinimo[k];
                    sMinimo[k] = minimo.second;
                    sMinimo[minimo.first] = temp;
                    break;
                }
            }
         }
         else
         {
            if(hayNoCero)
            {
                
                sMinimo[cero] = sMinimo[noCero];
                sMinimo[noCero] = '0';
            }
         }
        
        cout << "Case #" << i+1 << ": " << sMinimo;
        //------------------------FIN MINIMO------------------------
        
        //------------------------MAXIMO------------------------
        
        /*maximo.first = 0;
        maximo.second = s[0];*/
        for(int u=0;u<sMaximo.size();u++)
        {
            if(fHayMayor(u,sMaximo[u]))
            {
                for(int j=0;j<sMaximo.size();j++)
                {
                    if(sMaximo[mayor] == sMaximo[j])
                    {
                        mayor = j;
                    }
                }
                temp = sMaximo[u];
                sMaximo[u] = sMaximo[mayor];
                sMaximo[mayor] = temp;
                break;
            }
        }
        
        cout << " " << sMaximo << endl;
        //------------------------FIN MAXIMO------------------------
        
    }
}
