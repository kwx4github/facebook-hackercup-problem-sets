import java.io.InputStreamReader;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.io.InputStream;
import java.util.ArrayList;

public class Main {

        public static void main(String[] args) {
                InputStream inputStream = System.in;
                OutputStream outputStream = System.out;
                InputReader in = new InputReader(inputStream);
                PrintWriter out = new PrintWriter(outputStream);
                TaskA solver = new TaskA();
                solver.solve(1, in, out);
                out.close();
        }
}

class TaskA {
    long t, highest, lowest;
    ArrayList<Integer> nums = new ArrayList<>();
    ArrayList<Integer> numsCopy = new ArrayList<>();
    String num;
    String  comparator = "";
    public void solve(int caseNum, InputReader in, PrintWriter out) {
        t = in.nextInt();
        for (int i=0;i<t;i++){
            num = in.next();
            lowest = Long.parseLong(num);
            highest = Long.parseLong(num);
            
            for (int j=0;j<num.length();j++)
                nums.add(Integer.parseInt(""+ num.charAt(j)));
            
            swaping();
            
            out.println("Case #" + (i+1) + ": " + lowest + " " + highest);
            
            nums.clear();
        }
    }   
    
    public void swaping(){
        for (int i=0;i<nums.size();i++){
            for (int j=i;j<nums.size();j++){
                int first = nums.get(i);
                int second = nums.get(j);
                
                if (i==0 && second==0)
                    break;
                
                nums.set(i, second);
                nums.set(j, first);
                for (int k=0;k<nums.size();k++){
                    comparator += Integer.toString(nums.get(k));
                }
                long compare = Long.parseLong(comparator);
                if (lowest>compare)
                    lowest = compare;
                if (highest<compare)
                    highest = compare;
                
                nums.set(i, first);
                nums.set(j, second);
                comparator = "";
            }
        }
    }
}


class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;
 
    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }
 
    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }
 
    public int nextInt() {
        return Integer.parseInt(next());
    } 
    
    public Long nextLong() {
        return Long.parseLong(next());
    }
    
}
