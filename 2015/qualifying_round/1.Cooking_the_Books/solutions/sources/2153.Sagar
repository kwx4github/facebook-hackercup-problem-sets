#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <cmath>
#include <cassert>
#include <cctype>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <algorithm>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

#define TYPE(m,a) __typeof(a) m = a
#define ALL(x) x.begin(), x.end()
#define SORT(x) sort(x.begin(),x.end())
#define PB(x) push_back((x))
#define FORALL(it,v) for(TYPE(it, (v).begin()); it != (v).end(); ++it)
#define PRINT1D(array, max_index) cout<<endl<<#array<<":   "; for(int i=0; i < (max_index); i++) cout<<array[i]<<"  ";
#define PRINT2D(array, maxr, maxc) cout<<endl<<#array<<":   "; for(int i=0; i < (maxr); i++) { for(int j=0;j<(maxc);j++) cout<<array[i][j]<<"  "; if(i!=(maxr) - 1)cout<<endl<<#array<<":   ";}

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef vector<VI> VVI;
typedef vector<VD> VVD;
typedef vector<VS> VVS;
typedef vector<long long> VL;
typedef vector<VL> VLL;
typedef vector<bool> VB;
typedef vector<VB> VBB;

void fileIO(){freopen("input.txt","r",stdin);
freopen("output.txt","w",stdout);
}
string char_to_string(char c){
    string s = " ";
    s[0] = c;
    return s;
}
string removeFromString(string s, char c){
    string ret = "";
    for(int i=0;i<s.size();i++){
        if(s[i]!=c){
            ret += char_to_string(s[i]);
        }
    }

    return ret;
}

long long factorial(int x){
    long long ret = 1;
    for(int i=1;i<=x;i++){
        ret = ret*i;
    }
    return ret;
}
long long power(long long x, int n){
    long long y=1;
    for(int i=0;i<n;i++){
            if(LLONG_MAX/x < y)
                return -1ll;
        y = y*x;
    }
    return y;
}
long long comb_of_length[100];

long long num1 = 0;
int num_of_letters(long long num, int n, int p){
        num1 = num;
        long long comb = power(n, p);
        if(comb<0ll)
        {
            //cout<<comb<<"  "<<p;
            comb_of_length[p] = -1;
            return p;
        }
        comb_of_length[p] = comb;
        if(comb>=num) return p;
        else return num_of_letters(num - comb, n, p+1);

}

long long returnNum(vector<int> digits){
    long long ans = 0;
    for(int i=0;i<digits.size();i++){
        ans = ans*10 + digits[i];
    }
    return ans;
}

int main()
{
    fileIO();
    int t=0;
    cin>>t;
    int q = 1;
    while(t--){
        long long n;
        cin>>n;
        long long retMin = n;
        long long retMax = n;
        vector<int> digits;
        while(n){
            digits.PB(n%10);
            n = n /10;
        }
        reverse(digits.begin(), digits.end());
        int sz = digits.size();
        for(int i=0;i<sz;i++){
            for(int j=0;j<sz;j++){
                if((i==0 || j==0) && (digits[i]==0 || digits[j]==0))
                    continue;
                if(i==j)
                    continue;
                iter_swap(digits.begin()+i, digits.begin()+j);
                long long p = returnNum(digits);
                retMin = min(retMin, p);
                retMax = max(retMax, p);
                iter_swap(digits.begin()+j, digits.begin()+i);
            }
        }

        cout<<"Case #"<<q<<": "<<retMin<<" "<<retMax<<endl;
        q++;

    }
    return 0;

}
