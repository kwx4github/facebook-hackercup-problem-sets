#include<stdio.h>
#include<math.h>
#include<malloc.h>


int n=999999999;
int t,i,j,k;
int ar[10];

int * toArray(int number)
{
    int n = log10(number) + 1;
    int i;
    int *numberArray = calloc(n, sizeof(int));
    for ( i = n-1; i >=0; --i, number /= 10 )
    {
        numberArray[i] = number % 10;
    }
	
    return numberArray;
}	

void min(int* orig,int* ne,int l)
{

	int t1,t2;

int flag=0;

	for(i=0;i<l;i++){
		if(orig[i]!=ne[i])
		{
			t1=orig[i];
			t2=ne[i];
			orig[i]=ne[i];
			flag=1;
			break;
		}
	}
			if(flag==1)
			for(j=l-1;j>=0;j--){
			if(orig[j]==ne[i])
			{
				orig[j]=t1;
				break;
			}
		}
	
	
	for(i=0;i<l;i++)
	printf("%d",orig[i]);	
}



void max(int* orig,int* ne,int l)
{
	int t1,t2;
int in;
int flag=0;
	for(i=0;i<l;i++){
		if(orig[i]!=ne[i])
		{
			t1=orig[i];
			t2=ne[i];
			orig[i]=ne[i];
			in=i;
			flag=1;
					break;
		}
	}
/*			if(flag==1)
			for(j=in+1;j<l;j++){
			if(orig[j]==t2&&t1==ne[j])
			{
						orig[j]=t1;
			break;	
			}
			*/
						if(flag==1)
			for(j=l-1;j>=0;j--){
			if(orig[j]==ne[i])
			{
				orig[j]=t1;
				break;
			}
		}

		
	
	
	for(i=0;i<l;i++)
	printf("%d",orig[i]);	
}

int in;

int main()
{
scanf("%d",&t);

for(in=0;in<t;in++)
{
	for(j=0;j<10;j++)
	ar[j]=0;
	
	scanf("%d",&n);
	//Case #1:
		printf("Case #%d: ",in+1);
	if(n==0)
	{
			printf("0 0\n");
			continue;	
	}
	
int * nx=toArray(n);

	int n1=n;
	int l=0;

	while(n1!=0)
	{
		l++;
		int v=n1%10;
		ar[v]++;
		n1=n1/10;
	}
	
	int num=0;
	for(j=1;j<=10;j++)
	{
			if(j==10)
			{
							for(k=0;k<ar[0];k++){
				num=num*10;
			}
			break;
			}
			for(k=0;k<ar[j];k++){
				num=num*10+j;
			}
	}
	int num1=num;
	int p =(int)pow(10.0,l-1);
	int p1=(int)pow(10.0,ar[0]);
	num=(num1/p)*p+(num1%p)/p1;

int * arr1=toArray(num);


min(nx,arr1,l);

num=0;

		for(j=9;j>=0;j--)
	{
			for(k=0;k<ar[j];k++){
					num=num*10+j;
	}
}

			printf(" ");

int * arr2=toArray(num);

nx=toArray(n);

max(nx,arr2,l);

			printf("\n");
	
}	

    return 0;
}
