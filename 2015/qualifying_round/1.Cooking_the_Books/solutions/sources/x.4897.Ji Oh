package fhc2015.qual;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class A {

	public static void main(String[] args) throws Exception {
		String DIR = "src/fhc2015/qual/";
		String READ_FILE = null;
		String WRITE_FILE = null;

		      READ_FILE = "a.in";
		      WRITE_FILE = "a.out";

		if(READ_FILE != null){
			System.setIn(new BufferedInputStream(new FileInputStream(new File(DIR+READ_FILE))));
		}
		if(WRITE_FILE != null){
			System.setOut(new PrintStream(new File(DIR+WRITE_FILE)));
		}
		precalc();
		new A().run();
	}

	boolean DEBUG = false;
	Scanner sc;
	static void precalc(){}

	void run(){
		sc = new Scanner(System.in);
		int caseCnt = sc.nextInt();
		for (int caseNum = 1; caseNum <= caseCnt; caseNum++) {
			System.out.print("Case #" + caseNum + ": ");
			solve();
			System.out.flush();
		}
	}
	void debug(Object... o){
		if (DEBUG) System.out.println(Arrays.deepToString(o));
	}

	void solve(){
		String str = sc.next();
		if (str.equals("0")) {
			System.out.println("0 0");
			return;
		}



		int n = str.length();

		int[] orig = new int[n];
		for (int i = 0 ; i < n ; i++) {
			orig[i] = str.charAt(i) - '0';
		}
		
		int[] o2 = Arrays.copyOf(orig, n);
		
		int[] nums = Arrays.copyOf(orig, n);
		Arrays.sort(nums);
		if (nums[0] == 0) {
			for (int i = 0 ; i < n ; i++) {
				if (nums[i] > 0) {
					swap(nums, 0, i);
					break;
				}
			}
		}

		for (int i = 0 ; i < n ; i++) {
			if (o2[i] != nums[i]) {
				for (int j = 0 ; j < n; j++) {
					if (nums[i] == o2[j]) {
						swap(o2, i, j);
						break;
					}
				}
				break;
			}
		}
		
		for (int i = 0 ; i < n ; i++) {
			System.out.print(o2[i]);
		}
		System.out.print(" ");
		
		
		
		nums = Arrays.copyOf(orig, n);
		o2 = Arrays.copyOf(orig, n);
		Arrays.sort(nums);
		for (int i = 0 ; i < n/2 ; i++) {
			swap(nums, i, n-1-i);
		}
		for (int i = 0 ; i < n ; i++) {
			if (orig[i] != nums[i]) {
				for (int j = n-1 ; j >= 0 ; j--) {
					if (nums[i] == o2[j]) {
						swap(o2, i, j);
						break;
					}
				}
				break;
			}
		}

		for (int i = 0 ; i < n ; i++) {
			System.out.print(o2[i]);
		}
		System.out.println();
	}
	public void swap(int[] arr, int a, int b) {
		int tmp = arr[a];
		arr[a] = arr[b];
		arr[b] = tmp;
		//		System.out.println(Arrays.toString(arr));
	}

}
/**
5
31524
897
123
10
5
Case #1: 13524 51324
Case #2: 798 987
Case #3: 123 321
Case #4: 10 10
Case #5: 5 5
 */
