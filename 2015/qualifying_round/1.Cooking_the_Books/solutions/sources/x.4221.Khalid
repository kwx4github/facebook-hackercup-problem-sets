#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<time.h>
#define ll long long

#ifndef ONLINE_JUDGE
#define gc getchar
#define pc putchar
#else
#define gc getchar_unlocked
#define pc putchar_unlocked
#endif

int read_int() {
    char c = gc();
    while((c < '0' || c > '9') && c != '-') c = gc();
    int ret = 0, neg = 0;
    if (c == '-') neg = 1, c = gc();
    while(c >= '0' && c <= '9') {
        ret = 10 * ret + c - 48;
        c = gc();
    }
    return neg ? -ret : ret;
}

#define MOD 1000000007
#define MUL(a, b) (int)((((ll)(a))*((ll)(b)))%MOD)

int pow_mod(int b, int e) {
    int res = 1;
    b = b%MOD;
    while(e) {
        if (e&1) res = MUL(res, b);
        e >>= 1;
        b = MUL(b, b);
    }
    return res;
}

int cmp(void* a, void* b) {
    return (int)(*(char*)a) - (int)(*(char*)b);
}

int main() {

#ifndef ONLINE_JUDGE
    freopen("testcase.in", "r", stdin);
    freopen("out.out", "w", stdout);
#endif

    int T, k, N, i, j, L, min, max; char S[20], S2[20], temp;

    scanf("%d", &T);
    for(k=1;k<=T;k++) {
        scanf("%d", &N);
        if (N < 10) printf("Case #%d: %d %d\n", k, N, N);
        else {
            sprintf(S, "%d", N);
            L = strlen(S);
            min = 0; i = 0;
            for(j=1;j<L;j++)
                if (S[j] != '0' && S[j] < S[min])
                    min = j;
            if (min == 0) {
                for(i=1;i<L;i++) {
                    min = i;
                    for(j=i+1;j<L;j++)
                        if (S[j] < S[min])
                            min = j;
                    if (min != i) break;
                }
            }
            if (i < L) { temp = S[min]; S[min] = S[i]; S[i] = temp; }
            printf("Case #%d: %s ", k, S);
            if (i < L) { temp = S[i]; S[i] = S[min]; S[min] = temp; }
            for(i=0;i<L;i++) {
                max = i;
                for(j=i+1;j<L;j++)
                    if (S[j] > S[max])
                        max = j;
                if (max != i) break;
            }
            if (i < L) { temp = S[max]; S[max] = S[i]; S[i] = temp; }
            printf("%s\n", S);
        }
    }

    return 0;
}
