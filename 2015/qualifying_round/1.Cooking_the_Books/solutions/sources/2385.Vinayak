#include <iostream>
#include <vector>
#include <algorithm>
#include <sstream>

using namespace std;

bool desc(int i, int j)
{
	return i > j;
}

int main()
{
	int n;
	int i = 1;
	cin >> n;
	while (i <= n)
	{
		int num;
		vector<int> digits;
		cin >> num;
		int a = num;
		while (a != 0)
		{
			int dig = a % 10;
			a /= 10;
			digits.push_back(dig);
		}

		if (digits.empty())
		{
			cout << "Case #" << i << ": 0 0" << endl;
			i++;
			continue;
		}
		ostringstream s;
		s << num;
		string min(s.str());
		string max(s.str());
		sort(digits.begin(), digits.end(), desc);
		int size = digits.size();
		bool minset = false, maxset = false;
		int j = 0, z = size - 1, y = size - 1;
		while (digits[y] == 0)
			y--;
		while (!maxset || !minset)
		{
			if (j == digits.size())
				break;
			if ((max[j] - '0' < digits[j]) && !maxset)
			{
				char c = '0' + digits[j];
				int p = max.rfind(c);
				swap(max[j], max[p]);
				maxset = true;
			}
			int w = j == 0 ? y : z;
			if ((min[j] - '0' > digits[w]) && !minset)
			{
				char c = '0' + digits[w];
				int p = min.rfind(c);
				swap(min[j], min[p]);
				minset = true;
			}
			if (j != 0 || y == z)
				z--;
			j++;
		}
		cout << "Case #" << i << ": " << min << " " << max << endl;
		i++;
	}
}