#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;

long long get_number(vector<int> &digits)
{
  long long num = 0LL;
  for(int i=0;i<digits.size();++i){
    num=num*10+digits[i];
  }
  return num;
}

void swap(vector<int> &digits, int idx1, int idx2){
  if(idx1==idx2) return;
  digits[idx1]^=digits[idx2];
  digits[idx2]^=digits[idx1];
  digits[idx1]^=digits[idx2];
}
void print_result(int case_num, long long num)
{
  vector<int> digits;
  while(num > 0LL) {
    digits.push_back(num%10);
    num /= 10LL;
  }
  reverse(digits.begin(), digits.end());
  long long max=-1LL;
  long long min=0LL;  
  
  int min_idx = 0;
  int max_idx = 0;
  for(int i=0;i<digits.size();++i){
    if(max ==-1LL || digits[i] > max) {
      max=digits[i];
      max_idx=i;
    }
    if(min==0LL || (digits[i]>0 && digits[i]<min)){
      min=digits[i];
      min_idx=i;
    }
  }
  swap(digits, 0, max_idx);
  max = get_number(digits);
  swap(digits, 0, max_idx);
  
  swap(digits, 0, min_idx);
  min = get_number(digits);
  swap(digits, 0, min_idx);
  printf("Case #%d: %lld %lld\n", case_num, min, max);
}

int main()
{
  int T;
  long long num;
  scanf("%d", &T);
  for(int i=1;i<T+1;++i) {
    scanf("%lld", &num);
    print_result(i, num);
  }
  return 0;
}
