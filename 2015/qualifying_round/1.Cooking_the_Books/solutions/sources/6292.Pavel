def min(str, number)
  str.each_with_index do |c, i|
    substr = str[i+1..-1]
    if i == 0
      sub = substr.select{|k| k!= "0"}.sort.first
      if sub
        tmp = str.dup
        ind = substr.rindex(sub)+str.length - substr.length
        tmp[i], tmp[ind] = tmp[ind], tmp[i]
        return tmp.join if c.to_i > sub.to_i
      end
    else
      sub = substr.sort.first
      if sub
        tmp = str.dup
        ind = substr.rindex(sub)+str.length - substr.length
        tmp[i], tmp[ind] = tmp[ind], tmp[i]
        return tmp.join if c.to_i > sub.to_i
      end
    end
  end
  return number
end

def max(str,number)
  str.each_with_index do |c, i|
    substr = str[i+1..-1]
    if i == 0
      sub = substr.select{|k| k!= "0"}.sort.reverse.first
      if sub
        tmp = str.dup
        ind = substr.rindex(sub)+str.length - substr.length
        tmp[i], tmp[ind] = tmp[ind], tmp[i]
        return tmp.join if c.to_i < sub.to_i
      end
    else
      sub = substr.sort.reverse.first
      if sub
        tmp = str.dup
        ind = substr.rindex(sub)+str.length - substr.length
        tmp[i], tmp[ind] = tmp[ind], tmp[i]
        return tmp.join if c.to_i < sub.to_i
      end
    end
  end
  return number
end

lines = File.open('input.txt').readlines
numbers = lines[1..-1].map(&:chomp)
File.open('output.txt', 'w') { |file|
numbers.each_with_index do |number, index|
  str = number.split(//)
  if number.to_i < 12
    file.puts "Case ##{index+1}: #{number} #{number}"
  elsif str.uniq.count == 1
    file.puts "Case ##{index+1}: #{number} #{number}"
  else
    file.puts "Case ##{index+1}: #{min(str, number)} #{max(str, number)}"
  end
end

}
