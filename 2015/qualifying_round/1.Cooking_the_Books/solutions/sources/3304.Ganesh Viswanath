import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class CookingTheBooks {

	public static void main(String[] args) {

		// long time = System.currentTimeMillis();

		CookingTheBooks instance = new CookingTheBooks();

		BufferedReader bfr;
		int n = -1;
		try {
			bfr = new BufferedReader(new InputStreamReader(System.in));
			String line = "";
			if ((line = bfr.readLine()) != null) {
				n = Integer.parseInt(line);
			}
			int count = 0;

			while ((line = bfr.readLine()) != null) {
				int num = Integer.parseInt(line);
				count++;
				if (count > n) {
					throw new Exception("Too many inputs");
				}
				instance.process(count, num);

			}
			if (count < n) {
				throw new Exception("Too less inputs");
			}

		} catch (Throwable t) {
			t.printStackTrace();
			System.exit(-1);
		}
		// long delta = System.currentTimeMillis() - time;
		// System.out.println("Time in millis:" + delta);
	}

	public void process(int i, int n) {
		System.out.println("Case #" + i + ": " + smallestSwap(n) + " "
				+ largestSwap(n));
	}

	private List<Integer> getDigits(int n) {
		List<Integer> d = new ArrayList<Integer>();
		if (n == 0)
			d.add(0);
		while (n > 0) {
			d.add(0, n % 10);
			n = n / 10;
		}
		return d;
	}

	public int smallestSwap(int orig) {
		List<Integer> d = getDigits(orig);

		int n = 0;
		boolean flag = false;

		for (int i = 0; i < d.size(); i++) {
			int mindj = Integer.MAX_VALUE;
			int minjIndex = -1;

			int di = d.get(i);

			for (int j = i + 1; j < d.size(); j++) {
				int dj = d.get(j);
				if (dj < di && !(i == 0 && dj == 0)) {
					flag = true;
					if (dj <= mindj) {
						mindj = dj;
						minjIndex = j;
					}
				}
			}
			if (flag) {
				d.set(i, mindj);
				d.set(minjIndex, di);
				break;
			}
		}
		for (Integer e : d) {
			n *= 10;
			n += e;
		}
		return n;
	}

	public int largestSwap(int orig) {
		List<Integer> d = getDigits(orig);

		int n = 0;
		boolean flag = false;

		for (int i = 0; i < d.size(); i++) {
			int maxdj = Integer.MIN_VALUE;
			int maxjIndex = -1;

			int di = d.get(i);

			for (int j = i + 1; j < d.size(); j++) {
				int dj = d.get(j);
				if (dj > di) {
					flag = true;
					if (dj >= maxdj) {
						maxdj = dj;
						maxjIndex = j;
					}
				}
			}
			if (flag) {
				d.set(i, maxdj);
				d.set(maxjIndex, di);
				break;
			}
		}
		for (Integer e : d) {
			n *= 10;
			n += e;
		}
		
		return n;
	}

}
