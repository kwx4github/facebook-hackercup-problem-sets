import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.Scanner;
import java.util.Arrays;

public class ABooks {

	public static void main(String[] args) {
		try (Scanner input = new Scanner(new File("cooking_the_books.txt"))){
			try (PrintStream output = new PrintStream(new File("cooking_the_books_output.txt"))) {
				int testCases = input.nextInt();
				for (int i = 1; i <= testCases; i++) {
					int[] number = toArray(input.next());
					printNumbers(output, i, compMin(number), compMax(number));
				}
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	private static int[] toArray(String number) {
		int[] numArray = new int[number.length()];
		for (int i = 0; i < numArray.length; i++) {
			numArray[i] = Character.getNumericValue((number.charAt(i)));
		}
		return numArray;
	}
	
	private static void swap(int[] array, int i, int j) {
		int tmp = array[i];
		array[i] = array[j];
		array[j] = tmp;
	}
	
	private static int[] compMax(int[] number) {
		int currMaxIndex = 0;
		int toSwap = 0;
		for (int i = 0; i < number.length; i++) {
			for (int j = i + 1; j < number.length; j++) {
				if (number[j] > number[i] && number[j] > number[currMaxIndex]) {
					currMaxIndex = j;
					toSwap = i;
				}
			}
			if (currMaxIndex != 0) {
				break;
			}
		}
		
		int[] maxNumber = Arrays.copyOf(number, number.length);
		swap(maxNumber, toSwap, currMaxIndex);
		return maxNumber;
	}
	
	private static int[] compMin(int[] number) {
		int currMinIndex = 0;
		int toSwap = 0;
		for (int i = 0; i < number.length; i++) {
			for (int j = i + 1; j < number.length; j++) {
				if (number[j] < number[i] && number[j] <= number[currMinIndex] && !(i == 0 && number[j] == 0)) {
					currMinIndex = j;
					toSwap = i;
				}
			}
			if (currMinIndex != 0) {
				break;
			}
		}
		
		int[] minNumber = Arrays.copyOf(number, number.length);
		swap(minNumber, toSwap, currMinIndex);
		return minNumber;
	}
	
	private static void printNumbers(PrintStream output, int caseNumber, int[] min, int[] max) {
		output.print("Case #" + caseNumber + ": ");
		for (int figure : min) {
			output.print(figure);
		}
		output.print(" ");
		for (int figure : max) {
			output.print(figure);
		}
		output.println();
	}

}
