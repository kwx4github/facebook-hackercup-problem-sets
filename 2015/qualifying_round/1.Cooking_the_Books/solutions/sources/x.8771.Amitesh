//FHC Cook The Book
#include<iostream>
#include<fstream>
#define STRSIZE 10
#include <string.h>

int findLarge(char* str);
int findLow(char* str);
int integerMaker(char* str);
void swapper(char* str, int index, char* temp);

int main()
{
	int inputSize = 0;
	std::ifstream inFile;
	std::ofstream outFile;
	char str[STRSIZE];
	int indexLarge = 0;
	int indexSmall = 0;	
	char tempLarge[STRSIZE];
	char tempSmall[STRSIZE];	
	int counter = 0;
	
	inFile.open("temp.txt");
	if(inFile)
	{
		outFile.open("otemp.txt");
		if(outFile)
		{
			inFile.getline(str, STRSIZE, '\n');
			inputSize = integerMaker(str);
			while(inputSize > 0)
			{
				inFile.getline(str, STRSIZE, '\n');
				indexLarge = findLarge(str);
				indexSmall = findLow(str);
				swapper(str, indexLarge, tempLarge);
				swapper(str, indexSmall, tempSmall);
				
				outFile << "Case #" << (++counter) << ": " << (tempSmall) << " " << (tempLarge) << "\n";
				inputSize--;
			}
		}
		else
		{
			std::cout << "Error in opening output file\n";
		}
	}
	else
	{
		std::cout << "Error in opening the input file\n";
	}

	return 0;
}

int findLarge(char* str)
{
	int indexRet = 0;
	char match = str[0];

	for(int index = 0; str[index] != '\0'; index++)
	{
		if(str[index] >= match)
		{
			match = str[index];
			indexRet = index;
		}
	}
	return indexRet;
}

int findLow(char* str)
{
	int indexRet = 0;
	char match = str[0];

	for(int index = 0; str[index] != '\0'; index++)
	{
		if(str[index] <= match && str[index] != '0')
		{
			match = str[index];			
			indexRet = index;
		}
	}
	return indexRet;
}

int integerMaker(char* str)
{
	int val = 0;
	
	for(int index = 0; str[index] !='\0'; index++)
	{
		if(str[index] >= 48 && str[index] <= 57)
		{
			val = (val*10) + (str[index] - 48);
		}
	}

	return val;
}

void swapper(char* str, int index, char* temp)
{
	char ctemp;

	ctemp = str[index];	
	strcpy(temp, str);
	temp[index] = temp[0];
	temp[0] = ctemp;
}
