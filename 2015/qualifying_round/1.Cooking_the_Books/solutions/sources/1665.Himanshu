/*
Template belongs to : Himanshu Jaju [himanshujaju]
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     c.size()
#define clr(c)    c.clear()
#define msi       map<string,int>
#define msit      map<string,int>::iterator
#define pb        push_back
#define mp        make_pair

#define FOR(i,a,b)      for(int i=(a);i<(b);i++)
#define RFOR(i,a,b)     for(int i=b-1;i>=a;i--)

#define gcd(a,b)  __gcd(a,b)
#define MOD       1000000007

#define GI(x)     scanf("%d",&x)
#define CASE(x)   fout<<"Case #"<<x<<": "

string getMax(string s)
{
      if(sz(s) == 1) return s;
      string ret = s;
      FOR(i,0,sz(s))
      {
            string temp = s;
            FOR(j,0,sz(s))
            {
                  swap(temp[i],temp[j]);
                  if(temp[0] != '0')
                  ret = max(ret,temp);
                  swap(temp[i],temp[j]);
            }
      }
      return ret;
}

string getMin(string s)
{
      if(sz(s) == 1) return s;
      string ret = s;
      FOR(i,0,sz(s))
      {
            string temp = s;
            FOR(j,0,sz(s))
            {
                  swap(temp[i],temp[j]);
                  if(temp[0] != '0')
                  ret = min(ret,temp);
                  swap(temp[i],temp[j]);
            }
      }
      return ret;
}

int main()
{
      inp_s;
      ifstream fin("A.txt");
      ofstream fout("output.txt");
      int p = 0;
      int t;
      fin>>t;
      while(t--)
      {
            ++p;
            string s;
            fin>>s;
            string mx = getMax(s);
            string mn = getMin(s);
            CASE(p);
            fout<<mn<<" "<<mx<<endl;
      }
      return 0;
}
