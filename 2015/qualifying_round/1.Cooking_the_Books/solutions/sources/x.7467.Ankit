#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <string>
#include <array>

using namespace std;

int t;
string n, maxString, minString;

// minValue is from 1-9
short maxValue, minValue;

bool zeroExists;

typedef string::iterator Iterator;

Iterator maxValueIterator, minValueIterator, zeroValueIterator;

void process(int testCaseIndex) {
    zeroExists = false;
    maxValue =  minValue = *(n.begin()) - 48;
    maxValueIterator = minValueIterator = n.begin();

    minString.clear();
    maxString.clear();

    if( stol(n) < 10 ) {
        cout << "Case #" << testCaseIndex << " " << n << " " << n << endl;
        return;
    }

    for( Iterator it = n.begin()+1; it != n.end(); it++) {
        int i = *it - 48;
        // maxvalue is recommended to be from as right as possible
        if( i >= maxValue ) {
            maxValue = i;
            maxValueIterator = it;
        }

        // minvalue is recommended to be from as right as possible
        if( i <= minValue && i > 0 ) {
            minValue = i;
            minValueIterator = it;
        }

        if( i == 0 ) {
            zeroExists = true;
            zeroValueIterator = it;
        }

    }
    // LOOP OVER, GOT ALL DATA

    Iterator maxSwapFromLeft = n.begin();

    // e.g. 77777 or 3333 etc.
    if( maxValue == minValue && !zeroExists ) {
        cout << "Case #" << testCaseIndex << " " << n << " " << n << endl;
        return;
    }

    // character to be swapped is to the left to the maxValueIterator
    if( maxSwapFromLeft <= maxValueIterator ) {

        // search for 6 in 999969999
        while( *maxSwapFromLeft-48 == maxValue && maxSwapFromLeft != maxValueIterator ) {
            maxSwapFromLeft++;
        }
        if( maxSwapFromLeft == maxValueIterator ) {
        } else {
            iter_swap( maxValueIterator, maxSwapFromLeft );
            maxString = n;
            iter_swap( maxValueIterator, maxSwapFromLeft );
        }
    }

    Iterator minSwapFromLeft = n.begin();

    // for 707 or 444044444 etc.
    if( ( (minValue == maxValue)||(minValueIterator<maxValueIterator&&minValue>*(n.begin())) ) && zeroExists ) {
        minValue = 0;
        minValueIterator = zeroValueIterator;
        minSwapFromLeft++;
    }
    // character to be swapped is to the left to the minValueIterator
    if( minSwapFromLeft <= minValueIterator ) {

        // search for 6 in 999969999
        while( *minSwapFromLeft-48 == minValue && minSwapFromLeft != minValueIterator ) {
            minSwapFromLeft++;
        }
        if( minSwapFromLeft == minValueIterator ) {
            minString = n;
        } else {
            iter_swap( minValueIterator, minSwapFromLeft );
            minString = n;
            iter_swap( minValueIterator, minSwapFromLeft );
        }
    }

    cout << "Case #" << testCaseIndex << " " << minString << " " << maxString << endl;
}

int main() {

    cin >> t;
    for( int i = 0; i < t; i++ ) {
        n.clear();
        cin >> n;
        process(i+1);
    }
    return 0;
}
