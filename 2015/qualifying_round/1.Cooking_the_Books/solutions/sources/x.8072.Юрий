<?php

$default = "cooking_the_books.txt";//"input.txt";
// get and import the input file
if(isset($_GET['file'])) { $file = $_GET['file']; } else { $file=$default; }
$input = file("/test/".$file);
$test_cases = reset($input);
$debug =0 ;

//Skip key 0 as it is the number of test cases!, start looping from 1
$line_counter=0;
$data ='';
for ($i=1; $i<count($input); $i++) {
	$line_counter++;
	//get number of graphic lines
    $line = intval($input[$i]);
	echo "Analyzing line ".$line_counter."<br />";
	$t = analyze($line);
	 $data .= "Case #{$i}".($debug?"({$line})":'').": ".$t['lowest'].' '.$t['highest'];
	 if($i<$test_cases) {
		 $data .="\n";
	 }
	 
}

if($line_counter==$test_cases) { 
	echo "number of lines mached first line!"; 
}
else {
	echo "number of lines did not mached first line!"; 
}
// Save results to output file
file_put_contents('output.txt', $data);
echo "DONE!";


function analyze($number) {
	$number = intval($number);
	$numbers = str_split($number);

	if(count($numbers)==1) {
		return [
			'highest'=>$number,
			'lowest'=>$number
		];
	}
	//$asc = $numbers; sort($asc, SORT_NUMERIC); 
	$desc = $numbers; rsort($desc, SORT_NUMERIC); 	
	$highest = $numbers;//used for creating highest number
	$lowest = $numbers;//used for creating lowest number

	foreach($highest as $k=>$char) {
		if($desc[$k]!==$highest[$k]) {
			$temp = array_keys($highest,$desc[$k]);
			$key_m = array_pop($temp);
			$highest[$key_m]=$highest[$k];			
			$highest[$k]=$desc[$k];
			break;
		}
	}

	$highest = implode('',$highest);
	
	/*
	if($asc[0]==0) {
		foreach($asc as $k=>$v) {
			if($v!==0) {
				$asc[0]=$v;
				$asc[$k]=0;
				break;
			}
		}
	}*/
	
	//1000222551
	foreach($numbers as $k=>$char) {
		echo $number."-----";
		if($k==0) {
			$m = getMin($numbers,0);
			if($char>$m) {

				 
					$first_digit_value = $numbers[0];
					$keys_containing_m = array_keys($numbers,$m);
					$m_key = array_pop($keys_containing_m);
					$numbers[0] = $m;
					$numbers[$m_key] = $first_digit_value;
					echo "swapped first digit with ".($m_key+1)."th<br />";
					break;		 
			} 
		}else {
			$m = getMin($numbers,-1,$k);	
			if($char==$m ) {
				continue; 
			}
			if($char>$m) {
				$value = $numbers[$k];
				$keys_containing_m = array_keys($numbers,$m);
				$m_key = array_pop($keys_containing_m);
				if($m_key<$k) continue;
				$numbers[$k] = $m;
				$numbers[$m_key] = $value;
				echo "swapped ".($k+1)." with ".($m_key+1)."th<br />";
				break;	
			}
		}
		
		
	
	}
	$lowest = implode('',$numbers);

	
	return [
		'highest'=>$highest,
		'lowest'=>$lowest
	];
}

function getMin($arr, $min=0, $key=0) {

	$r=$arr[0];
	foreach($arr as $k=>$v) {
		if($v>$min && $v<$r && $key<$k) {
			$r=$v;	
		}
	}
	return $r;
}
