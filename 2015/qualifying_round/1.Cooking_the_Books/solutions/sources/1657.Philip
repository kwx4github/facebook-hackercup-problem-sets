#include <cstdio>
#include <algorithm>
#include <iostream>
#include <climits>

using namespace std;

char d[10];
int length;

int toInt()
{
	int result = 0;
	for(int i=0; i<length; i++){ result *= 10; result += d[i] - '0'; }
	return result;
}

int main()
{
	FILE *in, *out;

	in = fopen("cooking.in", "r");
	out = fopen("cooking.out", "w");

	int T;
	fscanf(in, "%d", &T);

	char c;
	fscanf(in, "%c", &c);

	for(int i=0; i<T; i++)
	{
		length = 0;
		while(true)
		{
			
			if(fscanf(in, "%c", &c) == EOF) break;
			if(c == '\n') break;
			d[length] = c;
			length++;
		}
		

		int mn = toInt();
		int mx = mn;

		pair<int,int> mnp, mxp;

		for(int j=0; j<length; j++)
			for(int k=j; k<length; k++)
			{
				swap(d[j], d[k]);
				int num = toInt();
				if(mn > num && d[0] != '0')
				{
					mn = num;
					mnp.first = j;
					mnp.second = k;
				}
				if(mx < num)
				{
					mx = num;
					mxp.first = j;
					mxp.second = k;
				}
				swap(d[j], d[k]);
			}

		fprintf(out, "Case #%d: ", i+1);

		for(int j=0; j<length; j++)
		{
			if(j == mnp.first) fprintf(out, "%c", d[mnp.second]);
			else if(j == mnp.second) fprintf(out, "%c", d[mnp.first]);
			else fprintf(out, "%c", d[j]);
		}
		fprintf(out, " ");

		for(int j=0; j<length; j++)
		{
			if(j == mxp.first) fprintf(out, "%c", d[mxp.second]);
			else if(j == mxp.second) fprintf(out, "%c", d[mxp.first]);
			else fprintf(out, "%c", d[j]);
		}
		fprintf(out, "\n");
						

	}
			

	return 0;
}
