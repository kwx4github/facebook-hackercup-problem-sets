import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.StreamTokenizer;

public class CookingTheBooks {

	public static void main(String[] args) throws Exception {
		CookingTheBooks object = new CookingTheBooks();
		String className = object.getClass().getSimpleName();

		FileReader fileReader = new FileReader(new File(className.toLowerCase()
				+ ".in"));
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(fileReader));

		FileWriter wr = new FileWriter(className.toLowerCase() + ".out");

		st.nextToken();
		int testCases = (int) st.nval;

		for (int tc = 1; tc <= testCases; tc++) {
			st.nextToken();
			int N = (int) st.nval;

			int smallest = object.smallest(N);
			int largest = object.largest(N);
			wr.write("Case #" + tc + ": " + smallest + " " + largest + "\r\n");
		}

		wr.close();
	}

	private int smallest(int n) {

		String number = String.valueOf(n);

		int result = n;

		for (int i = 0; i < number.length(); i++)
			for (int j = i + 1; j < number.length(); j++) {
				StringBuilder sb = new StringBuilder(number);
				sb = swap(sb, i, j);

				if (sb.charAt(0) == '0' && number.charAt(0) != '0')
					continue;
				
				result = Math.min(result, Integer.valueOf(sb.toString()));
			}

		return result;
	}

	private int largest(int n) {

		String number = String.valueOf(n);

		int result = n;

		for (int i = 0; i < number.length(); i++)
			for (int j = i + 1; j < number.length(); j++) {
				StringBuilder sb = new StringBuilder(number);
				sb = swap(sb, i, j);

				if (sb.charAt(0) == '0' && number.charAt(0) != '0')
					continue;
				
				result = Math.max(result, Integer.valueOf(sb.toString()));
			}

		return result;
	}

	private static StringBuilder swap(StringBuilder sb, int ind1, int ind2) {
		char ch1 = sb.charAt(ind1);
		char ch2 = sb.charAt(ind2);
		sb.setCharAt(ind1, ch2);
		sb.setCharAt(ind2, ch1);

		return sb;
	}

}
