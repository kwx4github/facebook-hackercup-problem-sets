import java.io.*;
import java.util.*;

public class FacebookA {
   BufferedReader in;
   StringTokenizer str;
   PrintWriter out;
   String SK;
   String next() throws IOException {
      while ((str == null) || (!str.hasMoreTokens())) {
         SK = in.readLine();
         if (SK == null) return null;
         str = new StringTokenizer(SK);
      }
      return str.nextToken();
   }
   String nexts() throws IOException {
      return in.readLine();
   }
   int nextInt() throws IOException {
      return Integer.parseInt(next());
   }
   double nextDouble() throws IOException {
      return Double.parseDouble(next());
   }
   long nextLong() throws IOException {
      return Long.parseLong(next());
   }
   public static void main(String[] args) throws IOException {
      new FacebookA().run();
   }
   void run() throws IOException {
     //in = new BufferedReader(new InputStreamReader(System.in));
     // out = new PrintWriter(System.out);
     in = new BufferedReader(new FileReader("cooking_the_books.txt"));
     out = new PrintWriter("cooking_the_books_output.txt");
     solve();
     out.close();
     in.close();
   }
   void solve() throws IOException {
      int T = nextInt();
      for (int i = 0; i < T; i++) {
         String c=next();
         char nums[]=c.toCharArray();
         int nmax=Integer.parseInt(c);
         int nmin=nmax;
         boolean max=false;
         boolean min=false;

         for (int j = 0; j < nums.length; j++) {
            if(!max){
               char temp=nums[j];
               int loc=0;
               for (int k = j+1; k < nums.length; k++) {
                  if(temp<nums[k]){
                     temp=nums[k];
                     loc=k;
                  }
               }
               if(loc>0){
                  max=true;
                  nums[loc]=nums[j];
                  nums[j]=temp;
                  nmax=Integer.parseInt(String.valueOf(nums));
                  nums[j]=nums[loc];
                  nums[loc]=temp;
               }
            }
            if(!min){
               char temp=nums[j];
               int loc=0;
               for (int k = j+1; k < nums.length; k++) {
                  if(temp>nums[k] && !(nums[k]=='0' && j==0)){
                     temp=nums[k];
                     loc=k;
                  }
               }
               if(loc>0){
                  min=true;
                  nums[loc]=nums[j];
                  nums[j]=temp;
                  nmin=Integer.parseInt(String.valueOf(nums));
                  nums[j]=nums[loc];
                  nums[loc]=temp;
               }
            }
            if(min && max) break;
         }
         out.println("Case #"+(i+1)+": "+nmin+" "+nmax);

      }
   }
}

