// question1.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"

#include<iostream>
#include<fstream>
#include<vector>
#include<time.h>
#include<algorithm>

#include <sstream> 
#include <string>
using namespace std;



class FinNumber {
private:
	int m_min;
	int m_max;
	int m_number;
public:
	FinNumber(int number) {
		m_number = number;
		m_min = 0;
		m_max = 0;
	}
	void findMinAndMax();
	int getMin() const{
		return m_min;
	}
	int getMax() const{
		return m_max;
	}
};

void FinNumber::findMinAndMax() {
	if(m_number <= 10) {
		m_min = m_number;
		m_max = m_number;
		return;
	}
	int minNum = 10;
	int maxNum = 0;
	vector<int> digit;
    vector<int> digitM;
	int positionMin = 0;
	int positionMax = 0;

	while(m_number > 0) {
		int temp = m_number % 10;
		digit.insert(digit.begin(),temp);
		digitM.insert(digitM.begin(),temp);
		m_number = m_number / 10;
	}
	int first = digit[0];
	for(int i = 1; i < digit.size(); i++) {
		if(digit[i] > first && digit[i] > maxNum) {
			maxNum = digit[i];
			positionMax = i;
		}
		if(digit[i] < first && digit[i] < minNum) {
			minNum = digit[i];
			positionMin = i;
		}
	}
	swap(digit[0],digit[positionMin]);
	swap(digitM[0], digitM[positionMax]);
	for(int j = 0; j < digit.size(); j++) {
		 m_min = 10 * m_min + digit[j];
	
	}
	
	for( j = 0; j < digitM.size(); j++){
		  m_max = 10 * m_max + digitM[j];
	}
}

int main()
{

	int start=clock();
 
	fstream input;
	input.open("cooking_the_books.txt");
	//input.open("3.txt");
    ofstream out("a-large.txt"); 
	
	int n = 0;//number of test case n
	input>>n;

	for(int i=0;i<n;i++)
	{
	
		int number =0;
		
		input>>number;
	    
		FinNumber num(number);
		num.findMinAndMax();
		out << "Case #"<<i + 1 <<": " <<num.getMin() <<" " <<num.getMax() <<endl;

	}
	input.close();
	out.close();
    int end=clock();
	cout<<"the total time of running is :"<<end-start<<endl;
	return 0;
}

