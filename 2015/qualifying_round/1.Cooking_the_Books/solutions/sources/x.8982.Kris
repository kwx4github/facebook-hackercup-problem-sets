package com.hackerrank;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class CookingBooks {

	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new FileReader(
				"/Users/karthik/Downloads/cooking_the_books.txt"));
		try {
			String line = "";
			List<Integer> maxintList = new ArrayList<Integer>();
			List<Integer> minintList = new ArrayList<Integer>();
			while (line != null) {
				line = br.readLine();
				if (line != null) {
					maxintList.add(maxDigit(Integer.valueOf(line)));
					minintList.add(minDigit(Integer.valueOf(line)));
				}
			}

			File fac = new File("/Users/karthik/output.txt");
			if (!fac.exists()) {
				fac.createNewFile();
			}
			System.out.println("The file has been created.");
			FileWriter write = new FileWriter(fac);
			write.write("");

			for (int i = 0; i < maxintList.size(); i++) {
				write.append("Case#" + i + " " + maxintList.get(i)  + " " + minintList.get(i) + "\n");
			}

			write.flush();
			write.close();

		} finally {
			br.close();
		}
	}

	private static int minDigit(int valueOf) {

		String number = String.valueOf(valueOf);

		int[] arr = new int[number.length()];

		int length = (int) (Math.log10(valueOf) + 1);

		for (int i = 0; i < length; i++) {
			arr[i] = number.charAt(i) - '0';
		}

		int var = arr[0];
		int index = 0;
		int startIndex = 0;
		boolean changed = false;

		while (startIndex < arr.length - 1) {
			var = arr[startIndex];
			for (int i = startIndex + 1; i < arr.length; i++) {
				int temp = arr[i];
				if (temp < var) {
					var = temp;
					index = i;
					changed = true;
				}
			}
			if (changed)
				break;
			startIndex++;
		}

		// this is the swap part
		int tmp = arr[index];
		arr[index] = arr[startIndex];
		arr[startIndex] = tmp;

		int k = 0;
		for (int i = 0; i < arr.length; i++) {
			k = 10 * k + arr[i];
		}

		return k;
	}

	private static int maxDigit(int line) {

		String number = String.valueOf(line);

		int[] arr = new int[number.length()];

		int length = (int) (Math.log10(line) + 1);

		for (int i = 0; i < length; i++) {
			arr[i] = number.charAt(i) - '0';
		}

		int var = arr[0];
		int index = 0;
		int startIndex = 0;
		boolean changed = false;

		while (startIndex < arr.length - 1) {
			var = arr[startIndex];
			for (int i = startIndex + 1; i < arr.length; i++) {
				int temp = arr[i];
				if (temp > var) {
					var = temp;
					index = i;
					changed = true;
				}
			}
			if (changed)
				break;
			startIndex++;
		}

		// this is the swap part
		int tmp = arr[index];
		arr[index] = arr[startIndex];
		arr[startIndex] = tmp;

		int k = 0;
		for (int i = 0; i < arr.length; i++) {
			k = 10 * k + arr[i];
		}

		return k;
	}
}