package test;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Test
{
	public static void main(String[] args)
	{
		BufferedOutputStream ou = null;
		try
		{
			ou = new BufferedOutputStream(new FileOutputStream(new File("out.txt")));
		} catch (FileNotFoundException e2)
		{
			e2.printStackTrace();
		}
		BufferedReader br = null;
		try
		{
			br = new BufferedReader(new FileReader(new File("test.txt")));
		} catch (FileNotFoundException e1)
		{
			e1.printStackTrace();
		}
		String st = "";
		boolean flag = false; 
		int casenum = 0;
		while (true)
		{
			
			try
			{
				st = br.readLine();
			} catch (IOException e)
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			if (flag == false) 
			{
				flag = true;
				continue;
			}
			if (st == null) break;
			casenum++;
			StringBuilder big = new StringBuilder(st);
			StringBuilder small = new StringBuilder(st);
			int n = st.length();
			int minnum = -1;
			char MIN = '9' + 1;
			char MAX = '0' - 1;
			char min = '9' + 1;
			char minfront = '0' - 1;
			int maxnum = -1;
			char max = '0' - 1;
			char maxfront = '9' + 1;
			boolean haszero = false;
			int zeroplace = 0;
			for (int i = 0; i < n; ++i)
			{
				char c = st.charAt(i);
				if (c == '0')
				{
					haszero = true;
					zeroplace = i;
				}
				if (c < minfront && c <= min && c != '0')
				{
					min = c;
					minnum = i;
				}
				if (c == min) minnum = i;
				minfront = c;
				if (c > maxfront && c >= max)
				{
					max = c;
					maxnum = i;
				}
				if (c == max) maxnum = i;
				maxfront = c;
			}
			for (int i = 0; i < n; ++i)
			{
				if (big.charAt(i) < max)
				{
					char tmp = big.charAt(maxnum);
					big.replace(maxnum, maxnum + 1, "" + big.charAt(i));
					big.replace(i, i + 1, "" + tmp);
					break;
				}
			}
			for (int i = 0; i < n; ++i)
			{
				if (i != 0 && haszero)
				{
					minnum = zeroplace;
				}
				if (small.charAt(i) > min)
				{
					char tmp = small.charAt(minnum);
					small.replace(minnum, minnum + 1, "" + small.charAt(i));
					small.replace(i, i + 1, "" + tmp);
					break;
				}
			}
			try
			{
				ou.write("Case #".toString().getBytes());
				ou.write((""+casenum).toString().getBytes());
				ou.write(": ".toString().getBytes());
				ou.write(small.toString().getBytes());
				ou.write(" ".getBytes());
				ou.write((big+"\n").toString().getBytes());
				ou.flush();
			} catch (IOException e)
			{
				e.printStackTrace();
			}
		}
	}
}
