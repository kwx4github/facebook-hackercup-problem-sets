#!/usr/bin/env python
# -*- coding: utf-8 -*-

import itertools

def getTrueData(dg):
    sdg = list(str(dg))
    mn = str(dg)
    mx = str(dg)
    for i in itertools.permutations(sdg):
        cr = ''.join(i)
        if (cr > mx) or (cr < mn):
            if (cr[0] == '0') or not isSingleSwaps(sdg, i):
                continue
            if cr > mx:
                mx = cr
            if cr < mn:
                mn = cr
    return mn, mx

def isSingleSwaps(sdg, cr):
    dct = {}
    passed = set()
    perms = 0
    for idx, val in enumerate(sdg):
        dct[val] = idx
    for idx, val in enumerate(cr):
        if (val != sdg[idx]) and (cr[dct[val]] == sdg[idx]) and (idx not in passed):
            passed.add(dct[val])
            perms += 1
        elif (val == sdg[idx]) or (idx in passed):
            continue
        else:
            return False
    return perms == 1

if __name__ == '__main__':
    testCasesCount = input()
    for i in xrange(0, testCasesCount):
        dg = input()
        minval, maxval = getTrueData(dg)
        print 'Case #' + str(i + 1) + ': ' + minval + ' ' + maxval
