// codeforces HC01 2015-01-12
#include<iostream>
#include<string>
#include<algorithm>
#include<fstream>
#include<map>
#include<stack>
#include<list>
#include<set>
#include<vector>
#include<queue>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<cmath>
using namespace std;

#define INF                         (int)1e9
#define EPS                         1e-9
#define forall(i,a,b)               for(int i=a;i<b; i++)
#define forallr(j,a,b)              for(int j=a;j>=b;j--)
#define foreach(v, c)               for(typeof((c).begin()) v = (c).begin(); v!=(c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ((b).find(a) != (b).end())
#define pb                          push_back
#define mp                          make_pair
#define fi                          first
#define se                          second
#define ll                          long long

template <typename T1, typename T2> inline std::ostream& operator << (std::ostream& os, const std::pair<T1, T2>& p) { return os << "(" << p.first << ", " << p.second << ")"; } template <typename T> inline std::ostream& operator << (std::ostream& os, const std::vector<T>& v) { bool first = true; os << "["; for(unsigned int i=0; i<v.size(); i++) { if(!first) os << ", "; os << v[i]; first = false; } return os << "]"; } template <typename T> inline std::ostream& operator << (std::ostream& os, const std::set<T>& v) { bool first = true; os << "["; for(typename std::set<T>::const_iterator ii=v.begin(); ii!=v.end(); ++ii) { if(!first) os << ", "; os << *ii; first = false; } return os << "]"; } template <typename T1, typename T2> inline std::ostream& operator << (std::ostream& os, const std::map<T1, T2>& v) { bool first = true; os << "["; for(typename std::map<T1, T2>::const_iterator ii=v.begin(); ii!=v.end(); ++ii) { if(!first) os << ", "; os << *ii; first = false; } return os << "]"; } 

void replace(string& s, int l, int z, char c)
{
    int ri = l-1;
    while(s[ri] != c) ri--;
    char t = s[z]; s[z] = s[ri]; s[ri] = t;
}

bool is_in(char c, string& s, int l)
{
    forall(i, 0, l) if(s[i] == c) return true; return false;
}

int main()
{
    int n; cin >> n;
    forall(j, 1, n+1)
    {
        string s; cin >> s;
        int l = s.size();

        if(l == 1)
        {
            cout << "Case #" << j << ": " << s << " " << s << endl; continue;
        }

        string p(s), q(s);
        sort(p.begin(), p.end());
        sort(q.begin(), q.end());
        forall(i, 0, l/2) {char t = q[i]; q[i] = q[l-1-i]; q[l-1-i] = t;}
        
        int z = 0;
        if(is_in('0', s, l))
        {
            while(p[z] == '0') z++;
            p[0] = p[z]; p[z] = '0';
        }

        string small(s), large(s);

        z = 0;
        while(z < l && p[z] == small[z]) z++; replace(small, l, z, p[z]);
        z = 0;
        while(z < l && q[z] == large[z]) z++; replace(large, l, z, q[z]);

        cout << "Case #" << j << ": " << small << " " << large << endl;
    }
    return 0;
}
