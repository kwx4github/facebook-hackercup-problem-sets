
import java.util.Scanner;

class Solution {
    public static void main(String args[]) {
        Scanner inp = new Scanner(System.in);
        int num;
        int t = inp.nextInt();
        for (int z = 1; z <= t; z++) {
            num = inp.nextInt(); // check for the limits
            System.out.println("Case #"+z+": "+small(num)+" " + large(num));
        }
    }

    private static int small(int num) {
        String snum = ""+num;
        int len = snum.length();
        for (int i = 0; i < len; i++) {
            int cur = getInt(snum.charAt(i));
            int findex = i;
            int fnum = cur;
            
            for (int j = i+1; j < len; j++) {
                int cnum = getInt(snum.charAt(j));
                if (fnum >= cnum) {
                    if (cnum == 0 && i==0){
                    }
                    else {
                        findex = j;
                        fnum = cnum;
                    }
                }
            }
            if (fnum != cur) {
                char[] temp = snum.toCharArray();
                temp[findex] = (char) (cur+48);
                temp[i] = (char) (fnum+48);
                return Integer.parseInt(String.copyValueOf(temp));
            }
        }
        return num;
    }

    private static int large(int num) {
        String snum = ""+num;
        int len = snum.length();
        for (int i = 0; i < len; i++) {
            int cur = getInt(snum.charAt(i));
            int findex = i;
            int fnum = cur;
            for (int j = i+1; j < len; j++) {
                int cnum = getInt(snum.charAt(j));
                if (fnum <= cnum) {
                    findex = j;
                    fnum = cnum;
                }
            }
            if (fnum != cur) {
                char[] temp = snum.toCharArray();
                temp[findex] = (char) (cur+48);
                temp[i] = (char) (fnum+48);
                return Integer.parseInt(String.copyValueOf(temp));
            }
        }
        return num;
    }
    
    private static int getInt(char ch) {
        return ((int) ch) - 48;
    }
}