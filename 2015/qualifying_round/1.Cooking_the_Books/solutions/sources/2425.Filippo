#!/usr/bin/env pypy
#-*- coding:utf-8 -*-

from __future__ import absolute_import, division, print_function, \
    unicode_literals

import sys
import operator

def func(num, op):
    best = None
    for pos, c in enumerate(num):
        number_to_beat = int(c)

        # Traverse the string in reverse looking for the best swap if any
        for other_pos, other_c in list(enumerate(num))[:pos:-1]:
            if pos == 0 and other_c == '0': continue
            if op(int(other_c), number_to_beat):
                best = (pos, other_pos)
                number_to_beat = int(other_c)

        if best: break

    if best:
        pos, other_pos = best
        n = list(num)
        n[pos], n[other_pos] = n[other_pos], n[pos]
        return ''.join(n)

    return num

maximize = lambda num: func(num, operator.gt)
minimize = lambda num: func(num, operator.lt)

def main():
    if len(sys.argv) == 1:
        for line in sys.stdin:
            print(line.strip(), maximize(line.strip()), minimize(line.strip()))
        sys.exit(0)

    if len(sys.argv) == 2:
        with open(sys.argv[1]) as f:
            with open('cooking_the_books_output.txt', 'w') as out:
                T = int(next(f).strip())
                for i in range(T):
                    num = next(f).strip()
                    print("Case #%i: %s %s" %
                        (i+1, minimize(num), maximize(num)),
                        file=out)
        sys.exit(0)

    sys.exit(1)

if __name__ == '__main__':
    main()
