//
//  main.cpp
//  Timus
//
//  Created by Anton Ovcharenko on 1/8/15.
//  Copyright (c) 2015 Anton Ovcharenko. All rights reserved.
//

#include <cmath>
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#include <fstream>

using std::vector;
using std::map;
using std::pair;
using std::cin;
using std::cout;
using std::endl;
using std::stable_sort;
using std::string;
using std::to_string;
using std::ifstream;
using std::ofstream;
using std::reverse;
using std::swap;

vector<int> split(long number)
{
    vector<int> splitted;
    while (number > 0)
    {
        splitted.push_back(number % 10);
        number /= 10;
    }
    reverse(splitted.begin(), splitted.end());
    return splitted;
}

long compose(vector<int> splitted)
{
    long number = 0;
    for (auto digit : splitted)
    {
        number = number * 10 + digit;
    }
    return number;
}

void solve_case(long number, long caseNumber)
{
    vector<int> splitted = split(number);
    long minPossible = number, maxPossible = number;
    for (int i = 0; i < splitted.size(); i++)
    {
        for (int j = 0; j < splitted.size(); j++)
        {
            if (i != j)
            {
                if (!(i == 0 && splitted[j] == 0) && !(j == 0 && splitted[i] == 0))
                {
                    vector<int> newVec = splitted;
                    swap(newVec[i], newVec[j]);
                    long newNum = compose(newVec);
                    if (newNum > maxPossible)
                    {
                        maxPossible = newNum;
                    }
                    if (newNum < minPossible)
                    {
                        minPossible = newNum;
                    }
                }
            }
        }
    }
    
    cout << "Case #" << caseNumber << ": " << minPossible << " " << maxPossible << endl;

}
    
int main(int argc, const char * argv[])
{
    ifstream in("./in.txt");
    cin.rdbuf(in.rdbuf());
    
    ofstream out("./out.txt");
    cout.rdbuf(out.rdbuf());
    
    long n;
    cin >> n;
    
    for (long i = 0; i < n; i++)
    {
        long number;
        cin >> number;
        solve_case(number, i + 1);
    }
    
    return 0;
}
