def MaxNumber(number):
    TotalDigits = len(number)
    i = 0
    NotFinished = 1
    while i<TotalDigits-1 and NotFinished==1:
        MaxDigit = int(number[i])
        j = TotalDigits - 1
        while j > i:
            if int(number[j])>MaxDigit:
                MaxDigit = int(number[j])
                DigitPosition = j
            j = j - 1
        if MaxDigit!=int(number[i]):
            NotFinished = 0
            HighestValue = number[DigitPosition]
            number[DigitPosition] = number[i]
            number[i] = HighestValue
        else:
            i = i + 1
    return "".join(number)

def MinNumber(number):
    TotalDigits = len(number)
    i = 0
    NotFinished = 1
    while i<TotalDigits-1 and NotFinished==1:
        MinDigit = int(number[i])
        j = i + 1
        while j < TotalDigits:
            if i != 0 or number[j]!='0':
                if int(number[j]) <= MinDigit:
                    MinDigit = int(number[j])
                    DigitPosition = j
            j = j + 1
        if MinDigit!=int(number[i]):
            NotFinished = 0
            LowestValue = number[DigitPosition]
            number[DigitPosition] = number[i]
            number[i] = LowestValue
        else:
            i = i + 1
    return "".join(number)

input_file = open("input.txt", "r")
# break file into rows
input_rows = input_file.read().split("\n")
output = ""

# scan first row to find number of cases
cases = int(input_rows[0])
a = 1
while cases > a-1:
    output += "Case #" + str(a) + ": " + MinNumber(list(input_rows[a])) + " " + MaxNumber(list(input_rows[a])) + "\n"
    a = a + 1
        
print output

outputFile = open("output.txt", "w")
outputFile.write(output)
outputFile.close()
