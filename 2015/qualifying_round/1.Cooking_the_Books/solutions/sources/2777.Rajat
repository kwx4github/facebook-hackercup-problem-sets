import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

class MinMax 
{

    public static void main(String[] args) throws IOException 
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        int n = Integer.parseInt(br.readLine());
        for(int k=0;k<n;k++)
        {
            pw.print("Case #"+(k+1)+": ");
            String num=br.readLine();//String.valueOf(k*999999/23);
            //System.out.print("{ "+num+" } ");
            int minI=0, minJ=0, maxI=0, maxJ=0;
            int max=0,min=0;
            for(int i=0;i<num.length();i++)
            {
                for(int j=0;j<num.length();j++)
                {
                    if(!((i==0) || (j==0) && ((Character.getNumericValue(num.charAt(i))==0)||(Character.getNumericValue(num.charAt(j))==0))))
                    {
                        int temp=profit(num,i,j);
                        if(temp>max)
                        {
                            max=temp;
                            maxI=i;
                            maxJ=j;
                        }
                        if(temp<min)
                        {
                            min=temp;
                            minI=i;
                            minJ=j;
                        }
                    }
                }
            }
            //System.out.println("Max is "+max+" Min is "+min);
            //System.out
            pw.print(swap_and_restore(num,minI,minJ)+" ");
            //System.out
            pw.println(swap_and_restore(num,maxI,maxJ));
        }
        pw.flush();
        
    }
    
    public static int profit(String num, int i, int j)
    {
        int init = (int) ( Character.getNumericValue(num.charAt(i))*Math.pow(10, num.length() -i-1)+
                            Character.getNumericValue(num.charAt(j))*Math.pow(10, num.length() -j-1));
        
        
        int fin = (int) ( Character.getNumericValue(num.charAt(i))*Math.pow(10, num.length() -j-1)+
                            Character.getNumericValue(num.charAt(j))*Math.pow(10, num.length() -i-1));
        
        //System.out.println(fin-init);
        return(fin-init);
    }
    
    public static String swap_and_restore(String arr, int i, int j)
    {
        StringBuilder myName = new StringBuilder(arr);
        //System.out.println("I is "+i+" J is "+j);
        myName.setCharAt(i, arr.charAt(j));
        myName.setCharAt(j, arr.charAt(i));
        return myName.toString();
    }
}
