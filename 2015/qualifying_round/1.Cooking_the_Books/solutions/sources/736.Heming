#include <cstdio>
#include <iostream>
#include <vector>
#include <tuple>
#include <fstream>
using namespace std;

vector<int> make_digit(long long n) {
	vector<int> ret;
	while (n > 0) {
		ret.push_back((int)(n % 10));
		n /= 10;
	}
	int len = ret.size();
	for (int i = 0; i < len / 2; i++) {
		int t = ret[i]; ret[i] = ret[len-1-i]; ret[len-1-i] = t;
	}
	return ret;
}

void find_max_min(vector<int> digit, long long &ma, long long &mi) {
	int n = digit.size(), tmp;
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			if (i == 0 && digit[j] == 0) continue;
			tmp = digit[i]; digit[i] = digit[j]; digit[j] = tmp;
			long long s = 0;
			for (int k = 0; k < n; k++) {
				s = s * 10 + digit[k];
			}
			if (s > ma) ma = s;
			if (s < mi) mi = s;
			tmp = digit[i]; digit[i] = digit[j]; digit[j] = tmp;
		}
	}
}

int main() {
	ifstream fin("A_sub.in");
	ofstream fout("A_sub.out");
	int T;
	fin >> T;
	for (int ti = 1; ti <= T; ti ++) {
		long long n;
		fin >> n;
		vector<int> digit = make_digit((long long)n);
		long long mi = n, ma = n;
		find_max_min(digit, ma, mi);
		fout << "Case #" << ti << ": " << mi << " " << ma << endl;
	}
	return 0;
}