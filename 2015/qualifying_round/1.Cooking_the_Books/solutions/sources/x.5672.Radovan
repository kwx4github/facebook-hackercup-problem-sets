#include <iostream>

using namespace std;

#define REP(i,n) for(int i=0;i<n;i++)


int idigit(int num, int i) {
    while(i-->0) num /= 10;
    return num % 10;
}

int numlen(int num) {
    int len = 1;
    while(num / 10 != 0) {
        len++;
        num /= 10;
    }
    return len;
}

int swapdigits(int num, int i, int j) {
    int ipow=1, jpow=1;
    REP(x,i) ipow *=10;
    REP(x,j) jpow *=10;
    int idig = idigit(num, i);
    int jdig = idigit(num, j);
    int diff = idig - jdig;
    return num - diff * ipow +  diff * jpow;
}

void process(int caseNum) {
    int n;
    cin >> n;

    int nlen = numlen(n);
    int max = n, min = n;

    //compute max;
    for(int i = nlen-1; i >= 0;i--) {
        int dig = idigit(n, i);
        int maxd = dig+1;
        int maxp = -1;

        for(int j = i-1; j >= 0;j--) {
            int jdig = idigit(n, j);
            if(jdig >= maxd && jdig != 0) {
                maxd = jdig;
                maxp = j;
            }
        }
        if(maxp != -1) {
            // cout << i << ' ' << maxp << endl;
            max = swapdigits(n, i, maxp);
            break;
        }
    }

     //compute max;
    for(int i = nlen-1; i >= 0;i--) {
        int dig = idigit(n, i);
        int mind = dig-1;
        int minp = -1;

        for(int j = i-1; j >= 0;j--) {
            int jdig = idigit(n, j);
            if(jdig <= mind && jdig != 0) {
                mind = jdig;
                minp = j;
            }
        }
        if(minp != -1) {
            // cout << i << ' ' << minp << endl;
            min = swapdigits(n, i, minp);
            break;
        }
    }





    cout << "Case #" << caseNum << ": " << min << " " << max << endl;
}

int main() {
    int n;
    cin >> n;
    REP(i,n) process(i+1);
    return 0;
}