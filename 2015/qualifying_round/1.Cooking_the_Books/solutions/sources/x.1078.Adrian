import java.io.*;
import java.util.*;

public class Hacker {
    
    private static int N, smallest, largest;
    
    public static void main(String[] args) {        
        
        // open file to read
        FileReader srcFile = null;
        try {              
            srcFile = new FileReader("cooking_the_books.txt");            
        } catch (FileNotFoundException ex) {            
            System.out.println("Error");
        }
        
        // open file to write
        PrintWriter writer = null;
        try {
            writer = new PrintWriter("cooking_the_books_output.txt", "UTF-8");
        } catch (FileNotFoundException ex) {
            System.out.println("Error");
        } catch (UnsupportedEncodingException ex) {
            System.out.println("Error");
        }
        
        //Scanner sc = new Scanner(System.in);
        Scanner sc = new Scanner(srcFile);
        int T = sc.nextInt();        
        int c = 1;
        while(T-- > 0) {
            String s = sc.next();
            N = Integer.parseInt(s);
            smallest = largest = N;
            char[] arr = s.toCharArray();
            for(int i = 0; i < arr.length; i++)                
                for(int j = i + 1; j < arr.length; j++) {
                    swap(arr, i, j);
                    int aux = getNum(arr);
                    if(aux == -1) continue;
                    smallest = Math.min(smallest, aux);
                    largest = Math.max(largest, aux);
                    swap(arr, i, j);
                }
            writer.println("Case #" + (c++) + ": " + smallest + " "+
                    largest);
        }
        writer.close();
        System.exit(0);
    }    

    private static void swap(char[] arr, int i, int j) {
        char tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
    }

    private static int getNum(char[] arr) {
        int ans = 0;
        if(arr[0] == '0' && N != 0) return -1;
        for(int i = 0; i < arr.length; i++) {
            ans *= 10;
            ans += (arr[i] - '0');            
        }
        return ans;
    }
}
