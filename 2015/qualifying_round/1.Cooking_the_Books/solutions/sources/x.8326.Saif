#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <map>
#include <algorithm>
#include<stdio.h>

using namespace std ;

int main(){
	freopen("input.in" , "rt" , stdin);
	freopen ("out.txt","w",stdout);
	int cases , maxpos , minpos ;
	string num , max , min;
	char first , smax , smin;
	vector<char>work;
	vector<char>work1;
	vector<char>work2;
	cin >> cases;
	for(int i = 1; i <= cases; i++){
		cin >> num;
		if(num.length() == 1 || num.length() == 2){
			max = num;
			min = num;
			cout << "Case #" << i << ": " << min << " " << max << endl;
		}else{
			for(int y = 0; y < num.length(); y++){
				work.push_back(num[y]);
				work1.push_back(num[y]);
				work2.push_back(num[y]);
			}
			smax = work[0];
			smin = work[0];
			for(int n = 0; n < work.size(); n++){
				if(work[n] >= smax){
					maxpos = n;
					smax = work[n];
				}
				if(work[n] <= smin){
					minpos = n;
					smin = work[n];
				}
			}
			first = work[0];
			work1[0] = smax;
			work1[maxpos] = first;
			work2[0] = smin;
			work2[minpos] = first;
			cout << "Case #" << i << ": ";
			for(int z = 0; z < work2.size(); z++){
				cout << work2[z];
			}
			cout << " ";
			for(int x = 0; x < work1.size(); x++){
				cout << work1[x];
			}
			cout << endl;
		}
		work.clear();
		work1.clear();
		work2.clear();
	}
	return 0; 
}