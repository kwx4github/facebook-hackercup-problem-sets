//
//  main.cpp
//  Cooking the Books
//
//  Created by David Benitez on 1/10/15.
//  Copyright (c) 2015 David Benitez. All rights reserved.
//

#include <iostream>
#include <string>

using namespace std;

int main()
{
    int cases, max_digit_Index, min_digit_Index;
    string number;
    
    cin >> cases;
    
    for(int i = 1; i <= cases; i++){
        cin >> number;
        
        max_digit_Index = min_digit_Index = 0; //First digit
        
        for(int j = 1; j < number.length(); j++){
            if(number[j] != '0' && number[j] < number[min_digit_Index]) //Finds leftmost smallest non-zero digit
                min_digit_Index = j;
            
            if(number[j] >= number[max_digit_Index])//Finds rightmost largest digit
                max_digit_Index = j;
        }
        
        //Create smallest number, swapping positions
        string min_number(number);
        min_number[0] = number[min_digit_Index];
        min_number[min_digit_Index] = number[0];
        
        //Create largest number, swapping positions
        string max_number(number);
        max_number[0] = number[max_digit_Index];
        max_number[max_digit_Index] = number[0];
        
        cout << "Case #" << i << ": " << min_number << " " << max_number << endl;
    }
    return 0;
}