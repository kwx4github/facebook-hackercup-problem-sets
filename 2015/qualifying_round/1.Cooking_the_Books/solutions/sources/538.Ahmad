import java.io.*;
import java.util.*;


public class SolutionA {
	public void solve(){
		int t = nextInt();
		for (int k = 0; k < t; k++) {
			String s = nextString();
			int min = Integer.parseInt(s), max = min;
			char[] ar = s.toCharArray();
			for(int i = 0 ; i < ar.length ; i++){
				for(int j = i+1 ; j < ar.length ; j++){
					char c = ar[i];
					ar[i] = ar[j];
					ar[j] = c;
					String ts = new String(ar);
					if(ts.charAt(0)!= '0'){
						int x = Integer.parseInt(ts);
						min = Math.min(min, x);
						max = Math.max(max, x);
					}
					c = ar[i];
					ar[i] = ar[j];
					ar[j] = c;
				}
			}
//			System.out.println("Case #"+(k+1)+": "+min+" "+max);
			out.println("Case #"+(k+1)+": "+min+" "+max);
		}
	}
	public void run(){
		try {
			bf = new BufferedReader(new InputStreamReader(new FileInputStream("cooking_the_books.txt")));
			out = new PrintWriter(new File("out.txt")); 
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		solve();
		out.close();
	}
	public static void main(String args[]){
		new SolutionA().run();
	}
	BufferedReader bf;
	PrintWriter out;
	String line;
	StringTokenizer st;
	public String nextLine(){
		try {
			line = bf.readLine();
			st = new StringTokenizer(line);
		} catch (IOException e) {
			return null;
		}
		return line;
	}
	public String nextString(){
		while (st == null || !st.hasMoreElements()) {
            try {
                line = bf.readLine();
                st = new StringTokenizer(line);
            } catch (IOException e) {
                return null;
            }
        }
        return st.nextToken();
	}
	public int nextInt(){
		return Integer.parseInt(nextString());
	}
	public long nextLong(){
		return Long.parseLong(nextString());
	}
	public double nextDouble(){
		return Double.parseDouble(nextString());
	}
}
