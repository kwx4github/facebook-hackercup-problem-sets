#include <list>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <vector>
#include <string>
  
using namespace std;
  
#define ABS(a) (((a) > 0)? (a): -(a))
#define MIN(a, b) (((a) < (b))? (a): (b))
#define MAX(a, b) (((a) < (b))? (b): (a))
#define FOR(i, a, n) for (int i = (a); i <= (n); i++)
#define DFOR(i, a, n) for (int i = (a); i >= (n); i--)
#define SORT(a, first_element, last_element) sort(&(a)[(first_element)], &(a)[(last_element) + 1])
#define SQR(a) (a) * (a)
#define PI 3.14159265358979323846264
#define MEMS(a, b) memset((a), (b), sizeof(a))
#define MP make_pair
#define PB push_back
#define endl '\n'
#define LL long long
#define UN unsigned
#define Or ||
#define And &&
/////////////////////////////////////////////

char num[20];
LL mp[20];

void solution()
{
	int T;
	cin >> T;
	FOR(t, 1, T)
	{
		LL n;
		cin >> n;
		LL mn = n, mx = n;
		int ln = 0;
		mp[1] = 1;
		while (n != 0)
		{
			ln++;
			num[ln] = n % 10;
			n /= 10;
			mp[ln + 1] = mp[ln] * 10;
		}
		n = mx;

		FOR(i, 1, ln)
		{
			FOR(j, i + 1, ln)
			{
				if (j != ln Or num[i] != 0)
				{
					LL now = n - num[i] * (mp[i] - mp[j]) - num[j] * (mp[j] - mp[i]);
					if (now > mx)
						mx = now;
					if (now < mn)
						mn = now;
				}
			}
		}

		printf("Case #%d: ", t);
		cout << mn << " " << mx << endl;
	}

}
     
/*-------------------*/ 
  
int main()
{
#ifdef Files
freopen("input.txt", "r", stdin);
freopen("output.txt", "w", stdout);
/*Test*/
//freopen("input.txt", "w", stdout);
double OcZ2X = clock();
#endif
  
solution();
  
#ifdef Time
cout << endl;
double P2HxQ = clock();
printf("*** Total time = %.3f sec ***", (P2HxQ - OcZ2X) / CLOCKS_PER_SEC);
#endif
}  