import numpy as np

with open('input.txt') as f:
    data = f.readlines()


def restore(l):
    l = [int(x)*10**(len(l) - 1 - i) for i, x in enumerate(l)]
    return sum(l)


ans = []
for digits in data[1:]:
    digits = np.array([int(x) for x in digits.rstrip()])
    if len(digits) == 1:
        temp = (restore(digits))
        ans.append((temp, temp))
    else:
        max_index = np.argmax(digits)
        min_index = np.argwhere(digits == digits[digits > 0].min())[0][0]

        # cook min
        digits[0], digits[min_index] = digits[min_index], digits[0]
        min_cook = restore(digits)
        # reverse cook
        digits[0], digits[min_index] = digits[min_index], digits[0]
        # cook max
        digits[0], digits[max_index] = digits[max_index], digits[0]
        max_cook = restore(digits)
        ans.append((min_cook, max_cook))


# prepare answer
answer = ""
for i, a in enumerate(ans):
    min_cook, max_cook = a
    answer += "Case #%d: %s %s\n" % (i+1, min_cook, max_cook)


with open('ans_cook.txt', 'w') as f:
    f.write(answer)