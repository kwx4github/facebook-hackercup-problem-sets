#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define Foreach(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define For(i,a,b) for(int (i)=(a);(i) < (b); ++(i))
#define rof(i,a,b) for(int (i)=(a);(i) > (b); --(i))
#define rep(i, c)	for(auto &(i) : (c))
#define x     first
#define y     second
#define pb  push_back
#define PB  pop_back()
#define iosfal  ios_base::sync_with_stdio(false)
#define mp(a,b) make_pair(a,b)
#define sqr(a)  ((1LL * (a) * (a)))
#define all(a)  a.begin() , a.end()
#define error(x) cerr << #x << " = " << (x) <<endl                                                                 
#define Error(a,b) cerr<<"( "<<#a<<" , "<<#b<<" ) = ( "<<(a)<<" , "<<(b)<<" )\n";
#define errop(a) cerr<<#a<<" = ( "<<((a).x)<<" , "<<((a).y)<<" )\n";
#define coud(a,b) cout<<fixed << setprecision((b)) << (a) << endl
#define dis(a,b)	(point(a.x - b.x, a.y - b.y))
#define L(x)	((x)<<1)
#define R(x)	(((x)<<1)+1)
#define mt	make_tuple
#define get(a,b)	get<b>(a)
typedef long long ll;
typedef pair<int,int>pii;
typedef pair<ll,int> pl;
typedef tree<pl, null_type, less<pl>, rb_tree_tag, tree_order_statistics_node_update>	os;
const int inf = 1e9 + 10;
inline int toi(string s){
	int n = 0;
	rep(c, s)
		n = 10 * n + c - '0';
	return n;
}
inline void solve(string s){
	int mn = inf, mx = -inf;
	if(s == "0"){
		cout << "0 0\n";
		return ;
	}
	For(i,0,s.size())
		For(j,i,s.size())
			if(i or s[j] != '0'){
				string t = s;
				swap(t[i], t[j]);
				mn = min(mn, toi(t));
				mx = max(mx, toi(t));
			}
	cout << mn << ' ' << mx << endl;
}
int main(){
	iosfal;
	int t;
	cin >> t;
	string s;
	For(i,1,t+1){
		cout << "Case #"<<i<<": ";
		cin >> s;
		solve(s);
	}
}

