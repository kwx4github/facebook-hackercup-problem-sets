package facebook;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class CookingTheBooks {
	public static void main(String[] args) throws IOException {
		File  file  = new File("input.txt");
		Scanner scanner = new Scanner(file);
		BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("output.txt"));
		String number = scanner.nextLine();
		int data = Integer.valueOf(number);
		for (int i = 0; i < data; i++) {
			int seq = i+1;
			bufferedWriter.write("Case "+"#"+seq+":"+" "+results(scanner.nextLine()));
			if(i != data-1){
				bufferedWriter.newLine();
			}
			
		}
		
		bufferedWriter.close();
		scanner.close();
		
		System.out.println("done");
		
	}
	
	public static String results(String input){
		List<Integer>  dataList = new ArrayList<>();
		for (int i = 0; i < input.length(); i++) {
			dataList.add(Integer.valueOf(String.valueOf(input.charAt(i))));
		}
		
		int max= Collections.max(dataList);
		int min= Collections.min(dataList);
		
		List<Integer> minList = new ArrayList<>();
		List<Integer> maxList = new ArrayList<>();
		
		for (int i = 0; i < dataList.size(); i++) {
			if(dataList.get(i)== min){
				minList.add(i);
			}
			if(dataList.get(i)== max){
				maxList.add(i);
			}
		}
		
		int indexMin = 0;
		if(minList.size() > 0){
			indexMin= minList.get(minList.size()-1);
			
		}else{
			indexMin= minList.get(minList.get(0));
		}
				
				
		int indexMax = maxList.get(0);
		
		String result ="";
		if(input.length()== 1){
			result = input+" "+input;
			return result;
		}else{
			char[] minResult = input.toCharArray();
			char[] maxResult = input.toCharArray();
			
			char minChar = minResult[indexMin];
			char minCharZero = minResult[0];
			
			if(Integer.valueOf(String.valueOf(minChar) ) >  0){
				minResult[0] = minChar;
				minResult[indexMin] = minCharZero;
			}
			
			
			
			char maxChar = maxResult[indexMax];
			char maxCharZero = maxResult[0];
			maxResult[0] = maxChar;
			maxResult[indexMax] = maxCharZero;
			
			
			result = String.valueOf(minResult)+" "+String.valueOf(maxResult);
			return result;
			
		}
	}
	
	

}
