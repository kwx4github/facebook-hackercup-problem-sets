#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<vector>
# define SIZE 100000
using namespace std;
int main()
{
    freopen("cooking_the_books.txt","r",stdin);
    freopen("cooking_the_books_output.txt","w",stdout);
        
    int T;
    long long N;
    scanf("%d",&T);
    int r = T;
    
    while(T--){
        printf("Case #%d: ",r-T);
        scanf("%lld",&N);
        
        int botIndex, topIndex;
        vector<int> botVec, topVec;
        
        long long number = N;
        while(number)
        {
             int temp = number%10;
             botVec.push_back(temp);
             topVec.push_back(temp);
             
             number /= 10;
        }
        reverse(botVec.begin(), botVec.end());
        reverse(topVec.begin(), topVec.end());
        
        //First task
        int indic = 0;
        int bot, top;
        while(true){
             int index = indic;
             bot = 9, top = 0;
             botIndex = indic;
             for(int i=indic; i<botVec.size(); i++){
                  int temp = botVec[i];
                  if(temp <= bot){
                       bot = temp; 
                       botIndex = index;       
                  }
                  index++;
             }
             if(N>0){
                  if(botVec[botIndex] != botVec[indic]){
                       if(indic == 0 && bot == 0){botVec[botIndex] = botVec[indic+1];    
                       botVec[indic+1] = bot;}
                       else{botVec[botIndex] = botVec[indic];    
                       botVec[indic] = bot;}
                  }
                  else{
                       if(indic != botVec.size()-1){indic++;
                       continue;}
                  }
                  for(int i=0; i<botVec.size(); i++) printf("%d", botVec[i]);
                  printf(" ");
                  break;
             } 
             else {printf("0 "); break;}        
        }      
        //Second task
        indic = 0;
        while(true){
             int index = indic;
             bot = 9, top = 0;
             topIndex = indic;
             for(int i=indic; i<topVec.size(); i++){
                  int temp = topVec[i];
                  if(temp >= top){
                       top = temp;
                       topIndex = index; 
                  }
                  index++;
             }
             if(N>0){
                  if(topVec[topIndex] != topVec[indic]){
                       topVec[topIndex] = topVec[indic];
                       topVec[indic] = top;
                  }
                  else{
                       if(indic != botVec.size()-1){indic++;       
                       continue;}
                  } 
                  for(int i=0; i<topVec.size(); i++) printf("%d", topVec[i]);
                  printf("\n");
                  break;
             }      
             else {printf("0\n"); break;}      
        }  
        
        
    }
    
}
