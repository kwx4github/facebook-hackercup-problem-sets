//Cooking the books

#include<stdio.h>
#include<stdlib.h>
#include<ctype.h>
#include<stddef.h>
#include <inttypes.h>


int main()
{
	//Declaration and Initialization	
	int i,n,k,h1,count=0,j,s,t,l,c,h,p,counter,ptr1,ptr2,ptr3,ptr4,l1,l2,i1,i2,index1,index2,y1,y2,u[20],j1=1,x,small1,ptr5,true=0,pos=1,u1;
	int a[99],d[99],d1[99],large=0,small=9,swap1,swap2,flag1,flag2,flag3,flag4=0,*m,*z;
	

	
	//Enter the number of test cases
 	scanf("%d",&t);
	
	

	for(i=0;i<t;i++)
	{
		scanf("%d",&a[i]);
		d[i]=a[i];
		d1[i]=a[i];
	}
	
	
	




	for(i=0;i<t;i++)
	{			
		printf("Case #%d: ",i+1);
				while(a[i]!=0)
				{
					a[i]/=10;
					++count;
				}
									
				c=count;
				j=count-1;
				s=c-1;
				l=count-1;
		
		if(count>1)
		{
					
				ptr1=l+1;
				ptr2=l+1;
				ptr3==l+1;
				ptr4=l+1;

				m=(int*)malloc(count*sizeof(int));
				z=(int*)malloc(c*sizeof(int));	
                                                                        
				//Large value
					while(d[i]!=0)
  					{
      						n=d[i]%10 ;
						*(m+j)=n;
						--j;
						           
     		                  				if(large<=n)
							{	
								large=n;
								flag1=(count-1);
							}
															
						d[i]=d[i]/10;
						--count;
  					}


					

					if(flag1==0)
					{
						for(counter=1;counter<l;counter++)
						{
							u1=*(m+counter);
							for(y2=(counter+1);y2<=l;y2++)
							{			
								if(u1<=*(m+y2))
								{
							
									u1=*(m+y2);
									  pos=y2;
										
								}
								
							}
							if(counter>pos)
							pos++;	
							if(*(m+counter)<*(m+pos))
							{
								swap1=*(m+counter);
								*(m+counter)=*(m+pos);
								*(m+pos)=swap1;				

								break;

							}
					
						}
					}
							


					if(flag1!=0 )
					{	

						for(y2=0;y2<=l;y2++)
						{
							if(large==*(m+y2))
							{
								index2=y2;			
							}			
			
						}				
						swap1=*(m+0);
						*(m+0)=*(m+index2);
						*(m+index2)=swap1;				
					}





				//Small value
					while(d1[i]!=0)
  					{
      						p=d1[i]%10 ;
						*(z+s)=p;
						--s;	
							if(small>=p)
							{	
								small=p;	
								flag2=(c-1);
							}																	
						d1[i]=d1[i]/10;
						--c;
  					}



				if(small==0)	
				{	
				                  h1=*(z+0);
					for(counter=1;counter<=l;counter++)
					{
						if(h1>*(z+counter)  &&  *(z+counter)!=0)
						{		
					      		ptr2=counter;
							h1=*(z+counter);
						}
					}
					if(h1!=*(z+0))	
					{
						
						swap2=*(z+ptr2);
						*(z+ptr2)=*(z+0);
						*(z+0)=swap2;

						goto label;

					}						
					for(y1=1;y1<=l;y1++)
					{
							
						if(*(z+y1)!=0)
						{
							ptr2=y1;
							break;	   	
						}					
				   	}
						if(ptr2==l+1)
						goto label;	
						
						for(y1=1;y1<=l;y1++)
						{
							
							if(*(z+y1)==0 ||*(z+y1)<*(z+ptr2))
							{
								ptr3=y1;
									   	
							}
											
						}
							if(ptr3==l+1) 
								goto label; 
							
							if(ptr2 != l+1)
							{	
								if(ptr2<=ptr3)
								{			
									swap2=*(z+ptr2);
									*(z+ptr2)=*(z+ptr3);
									*(z+ptr3)=swap2;				
								}							
							}
						true=1;				
						goto label;
						

					}
	


				if(flag2!=0 )
				{
					for(y1=0;y1<=l;y1++)
					{
					
						if(small==*(z+y1))
						{
							index1=y1;			
						}			
		
					}					
					swap2=*(z+0);
					*(z+0)=*(z+index1);
					*(z+index1)=swap2;				
				}
			

			if(flag2==0)
			{
				for(counter=1;counter<=l;counter++)
				{
					if(*(z+counter)!=small && *(z+counter)!=0)
					{		
					      ptr2=counter;break;
					}
				}
				if(ptr2==l+1)
				{
					goto label;
				}	
				small=9;	
				for(i2=ptr2;i2<=l;i2++)
				{
						if(*(z+i2)!=0)
						{
							if(small>=*(z+i2))
							{	
								small=*(z+i2);
								flag3=i2;
							}							
						}				
					
				}
				swap2=*(z+ptr2);
				*(z+ptr2)=*(z+flag3);
				*(z+flag3)=swap2;				
			
			}

			


				label :
			for(h=0;h<=l;h++)
			{
				printf("%d",*(z+h));
			}
		


			printf(" ");


					
	
			for(k=0;k<=l;k++)
			{
				printf("%d",*(m+k));
			}	
			

		
			large=0;small=9;	
			printf("\n");					

		}
			



	else
		printf("%d %d\n",d[i],d1[i]);
	}	
	
return 0;
}