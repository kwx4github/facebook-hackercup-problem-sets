//
// What:    Cooking the Books Entry Solution
// Why:     Facebook Hacker Cup 2015 Qualification Round
// Who:     Brandon Holland (bholland@brandon-holland.com)
// When:    January 8, 2015
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <limits.h>
#include <math.h>

uint32_t calc_test(int value, int place)
{
	uint32_t test = value;
	if(place > 0)
	{ test = value * pow(10, place); }
	return test;
}

int main(int argc, char *argv[])
{
	FILE *file = fopen(argv[1], "r");
	if(!file)
	{
		fprintf(stderr, "cooking_books: failed to open input file.\n");
		return -1;
	}
	
	int t = 0;
	fscanf(file, "%d\n", &t);
	
	int c;
	for(c = 1; c <= t; c++)
	{
		uint32_t n = 0;
		fscanf(file, "%d\n", &n);
		
		uint32_t n_list[9];
		uint32_t n_sml = n;
		uint32_t n_big = n;
		uint32_t n_block = n;
		uint32_t n_count = 0;
		
		while(n_block > 0)
		{
			n_list[n_count] = n_block % 10;
			n_block /= 10;
			n_count++;
		}
		
		if(n_count > 1)
		{
			for(int i = 0; i < n_count; i++)
			{
				uint32_t in = n_list[i];
				for(int j = 0; j < n_count; j++)
				{
					uint32_t jn = n_list[j];
					
					if((i == (n_count - 1) && jn == 0) ||
					   (j == (n_count - 1) && in == 0) ||
					   in == jn)
					{ continue; }
					
					uint32_t test = 0;
					for(int k = 0; k < n_count; k++)
					{
						uint32_t kn = n_list[k];
						if(k == i)
						{ test += calc_test(jn, i); }
						else if(k == j)
						{ test += calc_test(in, j); }
						else
						{ test += calc_test(kn, k); }
					}
					
					if(test < n_sml)
					{ n_sml = test; }
					
					if(test > n_big)
					{ n_big = test; }
				}
			}
		}
		printf("Case #%d: %d %d\n", c, n_sml, n_big);
	}
	return 0;
}
