#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <deque>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

void solve(int numCase)
{
	char data[10], minData[10], maxData[10], temp;
	int min, max, minIndex, maxIndex, i, curData;

	min = 100;
	max = -1;
	minIndex = maxIndex = -1;

	scanf(" %s ", data);
	for (i = 0; data[i]; i++)
	{
		minData[i] = data[i];
		maxData[i] = data[i];

		curData = data[i] - '0';

		if (curData <= min && curData != 0)
		{
			min = curData;
			minIndex = i;
		}

		if (curData >= max && curData != 0)
		{
			max = curData;
			maxIndex = i;
		}
	}
	minData[i] = maxData[i] = 0;

	if (minIndex > 0)
	{
		temp = min + '0';
		for (i = 0; i <= minIndex; i++)
		{
			if (minData[i] > temp)
			{
				minData[minIndex] = minData[i];
				minData[i] = temp;
				break;
			}
		}		
	}

	if (maxIndex > 0)
	{
		temp = max + '0';
		for (i = 0; i <= maxIndex; i++)
		{
			if (maxData[i] < temp)
			{
				maxData[maxIndex] = maxData[i];
				maxData[i] = temp;
				break;
			}
		}
	}

	printf("Case #%i: %s %s\n", numCase, minData, maxData);
}

int main()
{
	int numCase, cases;

	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	scanf("%i", &cases);
	for (numCase = 1; numCase <= cases; numCase++)
		solve(numCase);

	return 0;
}