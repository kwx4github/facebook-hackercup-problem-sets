#include <iostream>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

void solve(int tc) {
	cout << "Case #" << tc << ": ";
	int n;
	cin >> n;
	if (!n) {
		cout << "0 0" << endl;
		return;
	}
	int origN = n;
	vector<int> digits;
	while (n) {
		digits.push_back(n % 10);
		n /= 10;
	}
	reverse(digits.begin(), digits.end());
	int lo = origN, hi = origN;
	for (int i = 0; i < digits.size(); ++i) {
		for (int j = 0; j <= i; ++j) {
			swap(digits[i], digits[j]);
			if (digits.front() != 0) {
				int tmp = 0;
				for (int k = 0; k < digits.size(); ++k) {
					tmp = tmp * 10 + digits[k];
				}
				if (tmp < lo) {
					lo = tmp;
				}
				if (tmp > hi) {
					hi = tmp;
				}
			}
			swap(digits[i], digits[j]);
		}
	}
	cout << lo << " " << hi << endl;
}

int main() {
	freopen("C:/Users/jsannemo/Downloads/cooking_the_books.txt", "r", stdin);
	freopen("C:/Users/jsannemo/Downloads/cooking_the_books_output.txt", "w", stdout);
	int T;
	scanf("%d", &T);
	for (int tc = 1; tc <= T; ++tc) {
		solve(tc);
	}
}