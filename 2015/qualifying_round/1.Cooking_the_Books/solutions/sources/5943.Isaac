import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class Solution {
  
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int CASES;
    CASES = sc.nextInt();
    int num;
    String numString;
    Integer[] minGoal;
    Integer[] maxGoal;
    int[] minArray;
    int[] maxArray;
    boolean swap;
    int index;
    int length;
    int tmp;
    int current;

    for (int i = 1; i <= CASES; i++) {
      num = sc.nextInt();
      numString = String.valueOf(num);
      length = numString.length();
      minGoal = new Integer[length];
      maxGoal = new Integer[length];
      maxArray = new int[length];
      minArray = new int[length];
      minGoal[0] = minArray[0] = Character.getNumericValue(numString.charAt(0));
      maxGoal[0] = maxArray[0] = Character.getNumericValue(numString.charAt(0));

      for (int j = 1; j < length; j++) {
        current = Character.getNumericValue(numString.charAt(j));
        
        if (current < minGoal[0] && current != 0) {
          minGoal[j] = minGoal[0];
          minGoal[0] = current;
        } else {
          minGoal[j] = current;
        }
        
        maxGoal[j] = maxArray[j] = minArray[j] = current;
      }

      // sort to get min with nonzero leading int
      Arrays.sort(minGoal, 1, length);
      Arrays.sort(maxGoal, Collections.reverseOrder());

      // change minArray
      swap = false;
      index = 0;
      while (!swap && index < length) {
        if (minArray[index] != minGoal[index]) {
          swap = true;
          tmp = minArray[index];
          for (int k = length - 1; k > index; k--) {
            if (minArray[k] == minGoal[index]) {
              minArray[index] = minArray[k];
              minArray[k] = tmp;
              break;
            }
          }
        }
        index++;
      }

      // change maxArray
      swap = false;
      index = 0;
      while (!swap && index < length) {
        if (maxArray[index] != maxGoal[index]) {
          swap = true;
          tmp = maxArray[index];
          for (int k = length - 1; k > index; k--) {
            if (maxArray[k] == maxGoal[index]) {
              maxArray[index] = maxArray[k];
              maxArray[k] = tmp;
              break;
            }
          }
        }
        index++;
      }
      
      System.out.printf("Case #%d: %s %s\n", i, printArray(minArray), printArray(maxArray));
    }
    sc.close();
  }

  public static String printArray(int[] source) {
    StringBuffer sb = new StringBuffer();

    for (int i = 0; i < source.length; i++) {
      sb.append(String.valueOf(source[i]));
    }

    return sb.toString();
  }
}