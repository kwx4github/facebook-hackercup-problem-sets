#include <stdio.h>
#include <string.h>

int T, u, pos_r, pos_l, tam;
char num1[100];
char num2[100];
bool found;

int find_right(char* num, char c){
	for(int i=tam-1; i>=0; i--){
		if(num[i]==c) return i;
	}
	return -1;
}

int find_lower_left(char* num, char c){
	for(int i=0; i<tam; i++){
		if(num[i]<c) return i;
	}
	return -1;
}

int find_higher_left(char* num, char c){
	for(int i=0; i<tam; i++){
		if(c=='0' && i==0) continue;
		if(num[i]>c) return i;
	}
	return -1;
}

int main(){
	scanf(" %d", &T);
	u=0;
	while(u<T){
		u++;
		scanf(" %s", num1);
		strcpy(num2, num1);
		tam = strlen(num1);
		
		found = false;
		for(char c='9'; c>'0'; c--){
			pos_r = find_right(num1, c);
			if(pos_r == -1) continue;
			
			pos_l = find_lower_left(num1, c);
			if(pos_l < 0 || pos_l > pos_r) continue;
			
			found = true;
			break;
		}
		
		if(found){
			char temp = num1[pos_r];
			num1[pos_r] = num1[pos_l];
			num1[pos_l] = temp;
		}
		
		
		found = false;
		for(char c='0'; c<='9'; c++){
			pos_r = find_right(num2, c);
			if(pos_r == -1) continue;
			
			pos_l = find_higher_left(num1, c);
			if(pos_l < 0 || pos_l > pos_r) continue;
			
			found = true;
			break;
		}
		
		if(found){
			char temp = num2[pos_r];
			num2[pos_r] = num2[pos_l];
			num2[pos_l] = temp;
		}
		
		printf("Case #%d: %s %s\n", u, num2, num1);
	}
	return 0;
}
