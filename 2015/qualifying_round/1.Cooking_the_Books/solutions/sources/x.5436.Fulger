#include<stdio.h>
#include<stdlib.h>

#define MINT 1
#define MANT 0

int arr[20];

void split(int number, int* n) {
  int tmp, i = 0;
  tmp = number;
  while (tmp > 0) {
    i++;
    tmp /= 10;
  }

  *n = i;
  tmp = number;
  i--;
  while (tmp > 0) {
    arr[i] = tmp % 10;
    i--;
    tmp /= 10;
  }
}

int join(int n) {
  int result = 0, i;
  for (i = 0; i < n; i++) {
    result = result * 10 + arr[i];
  }
  return result;
}

void print(int* a, int n) {
  int i;
  for (i = 0; i < n; i++) {
    printf("%d ", a[i]);
  }
  printf("\n");
}

int max(int nr, int type) {
  int n, ind, first;
  split(nr, &n);
  int i, start, m;
  start = 0;

  while (start < n) {
    m = (type == MANT) ? -1 : 10;
    for (i = start; i < n; i++) {
      if (((type == MANT) && m < arr[i]) || ((type == MINT) && m > arr[i])) {
        if (start != 0 || arr[i] != 0) {
          m = arr[i];
        }
      }
    }
    if (arr[start] != m) {
      break;
    } else {
      start++;
      while(arr[start] == m && start < n) {
        start++;
      }
    }
  }

  if (start == n || (m == ((type == MANT) ? -1 : 10))) {
    return nr;
  }

  for (i = 0; i < n; i++) {
    if (arr[i] == m) {
      ind = i;
    }
  }

  arr[ind] = arr[start];
  arr[start] = m;

  return join(n);
}

int main() {
  int t, nr, i;
  scanf("%d", &t);
  for (i = 0; i < t; i++) {
    scanf("%d", &nr);
    int minim = max(nr, MINT);
    int maxim = max(nr, MANT);
    printf("Case #%d: %d %d\n", i+1, minim, maxim);
  }
}
