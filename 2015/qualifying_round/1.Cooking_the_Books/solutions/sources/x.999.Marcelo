#include <bits/stdc++.h>

#define pb                 push_back
#define VISITED            1
#define UNVISITED          0
#define all(x)             (x).begin(), (x).end()
#define rall(x)            (x).rbegin(), (x).rend()
#define inttochar(x)       (char(x + '0'))
#define chartoint(x)       (int(x - '0'))
#define sqr(x)             (x)*(x)
#define mset0(a)           memset(a, 0, sizeof a)
#define mset1(a)           memset(a, 1, sizeof a)
#define msetm1(a)          memset(a, -1, sizeof a)
#define inrange(lo,i,hi)   ((lo) <= (i) && (i) <= (hi))
#define inrangex(lo,i,hi)  ((lo) < (i) && (i) < (hi))
#define sz(x)              (int)(x).size()
#define fastio             ios::sync_with_stdio(false); cin.tie(0);
#define foreach(it,A)      for(__typeof((A).begin())it=(A).begin();it!=(A).end();it++)
#define hashit(x)          (char(x) - char('a') + 1)
#define read(file)         freopen(file, "r", stdin);
#define write(file)        freopen(file, "w", stdout);


using namespace std;

const int inf = int(1e9+7);
typedef long long          i64;
typedef unsigned long long u64;

int main()
{
	#ifndef ONLINE_JUDGE
		read("cooking_the_books.txt");
		write("cooking_the_books_out.txt");
	#endif

	int cases, reps = 1; cin >> cases;
	string num;

	while(cases--)
	{
		cin >> num;

		char mini = '9', maxi = '0';
		int pmi, pma;

		for(int i = 0; i < (int)num.size(); i++)
		{
			if(num[i] != '0')
			{
				if(maxi < num[i])
				{
					maxi = num[i];
					pma = i;
				}
				if(mini > num[i])
				{
					mini = num[i];
					pmi = i;
				}
			}
		}

		string a = num, b = num;
		string cpy;

		for(int i = 0; i < (int)num.size(); i++)
		{
			cpy = num;
			if(i != pma)
				swap(cpy[i],cpy[pma]);

			if(cpy[0] != '0')
				a = max(a, cpy);
		}

		for(int i = 0; i < (int)num.size(); i++)
		{
			cpy = num;
			if(i != pmi)
				swap(cpy[i],cpy[pmi]);
			if(cpy[0] != '0')
				b = min(b,cpy);
		}

		cout << "Case #" << reps << ": " << b << " " << a << endl;

		reps++;

	}
	return 0;
}