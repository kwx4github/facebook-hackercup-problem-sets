import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;


public class main {
	static int index=0;
	static int minindex=0;
 public static void main(String args[]){
	 try{
	 BufferedReader input=new BufferedReader(new FileReader("cooking_the_books(1).txt"));
	 FileWriter ba=new FileWriter("outputfile.txt");
	 BufferedWriter outputstreak=new BufferedWriter(ba);
	 int testcases=Integer.parseInt(input.readLine());
	 for(int i=0;i<testcases;i++){
		 String cases=input.readLine();
		 char inputs[]=cases.toCharArray();
		 char mininputs[]=cases.toCharArray();
		 int maximum= max(cases,-1);
		 System.out.println(maximum);
		 for(int j=0;j<cases.length();j++){
			if(j<index & Character.getNumericValue(inputs[j])!=maximum){
				char a=inputs[j];
				String max=""+maximum;
				inputs[j]=max.charAt(0);
				inputs[index]=a;
				break;
			}else if(j>=index){
				maximum=max(cases,maximum);					
			}
			
		 } minindex=-1;
		 int minimum=min(cases,-1);
		 if(minimum==0){
		   int nextmin=min(cases,0);
		     if(nextmin<Character.getNumericValue(mininputs[0])){minimum=nextmin;System.out.println(nextmin+"nextmin");}
		 }
		 for(int j=0;j<cases.length();j++){
				if(j<minindex & Character.getNumericValue(mininputs[j])>minimum){
					if(j==0 && minimum==0)continue;
					char a=mininputs[j];
					String max=""+minimum;
					mininputs[j]=max.charAt(0);
					mininputs[minindex]=a;
					break;
				}else if(j>=minindex){
					minimum=min(cases,minimum);					
				}
				
			 }
			 String max=String.copyValueOf(inputs);
			 String min=String.copyValueOf(mininputs);
		 String output="Case #"+(i+1)+": "+min+" "+max+"\n";
		 System.out.println(output);
		 outputstreak.append(output);
		 index=-1;minindex=-1;
	 }
	 input.close();
	 outputstreak.close();
	 System.out.println("output");
	 }catch(Exception e){
		 
	 }
 }
 public static int max(String input,int earliermax){
	 int max=Character.getNumericValue(input.charAt(0));
	 if(earliermax!=-1)max=min(input,-1);
	 for(int i=0;i<input.length();i++){
		 if(earliermax==-1){if(Character.getNumericValue(input.charAt(i))>=max){ max=Character.getNumericValue(input.charAt(i));index=i;
		 }}
		 else if(earliermax!=-1){
		     if(Character.getNumericValue(input.charAt(i))>=max && Character.getNumericValue(input.charAt(i))<=earliermax && i!=index ){
			 max=Character.getNumericValue(input.charAt(i));
			 index=i;
		 }}
	 }
	 return max;
 }
 public static int min(String input,int earliermax){
	 int min=max(input,-1);
	 for(int i=0;i<input.length();i++){
		 if(earliermax==-1){if(Character.getNumericValue(input.charAt(i))<=min){ min=Character.getNumericValue(input.charAt(i));minindex=i;}}
		 else if(earliermax!=-1 && earliermax!=0){if(Character.getNumericValue(input.charAt(i))<=min && Character.getNumericValue(input.charAt(i))>=earliermax && i!=minindex){
			 min=Character.getNumericValue(input.charAt(i));
			 minindex=i;
		 }}else if(earliermax==0){
		 if(Character.getNumericValue(input.charAt(i))<=min && Character.getNumericValue(input.charAt(i))>earliermax){
			 min=Character.getNumericValue(input.charAt(i));
			 minindex=i;
		 }}    
		 
	 }//System.out.println(min);
	 return min;
 }
}
