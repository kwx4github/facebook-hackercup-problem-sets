#include<stdio.h>
#include<iostream>
#include<string>
#include<algorithm>
#define STOP system("pause")
using namespace std;
int k = 0;
string larg(string dig, int start, int len)
{
	if (start >= len)
		return dig;
	int i, max = -1;
	for (i = start; i < len; ++i)
	{
		if (dig[i]>max && dig[i] > dig[start])
			max = dig[i];
	}
	if (max == -1)
		return larg(dig, start + 1, len);
	else {
		for (i = len - 1; i >= start; --i)
		{
			if (dig[i] == max)
				break;
		}
		std::swap(dig[i], dig[start]);
		return dig;
	}
}
string small(string dig, int start, int len)
{
	if (start >= len)
		return dig;
	int i, min = 256;
	for (i = start; i < len; ++i)
	{
		if (dig[i] < min && dig[i] < dig[start] && dig[i] != '0')
		{
			if (i == 0 && dig[i] != '0')
			min = dig[i];
			else if (i!=0)
				min = dig[i];
		}
	}
	if (min == 256)
		return small(dig, start + 1, len);
	else {
		for (i = len - 1; i >= start; --i)
		{
			if (dig[i] == min)
				break;
		}
		std::swap(dig[i], dig[start]);
		return dig;
	}
}
string small2(string &dig,int start, int len)
{
	if (start >= len)
		return dig;
	int i,min = dig[start];
	for (i = start+1; i < len; ++i)
	{
		if (dig[i] < min)
			min = dig[i];
	}
	if (min == dig[start])
		return small2(dig, start + 1, len);
	else if (start == 0 && min == '0')
		return small2(dig, start + 1, len);
	else
	{
		for (i = len - 1; i >= start; --i)
		{
			if (dig[i] == min)
				break;
		}
		std::swap(dig[i], dig[start]);
		return dig;
	}
}
int main()
{
	int n, test = 0; string a;
	scanf("%d", &n); getchar();
	for (test = 1; test <= n; ++test)
	{
		cin >> a;
		cout << "Case " << test << ": " << small2(a, 0, a.length())<<" " << larg(a, 0, a.length()) << endl;
	}
 
 
	return 0;
}