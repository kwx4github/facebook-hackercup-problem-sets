#include <cstdio>
#include <iostream>
#include <algorithm>
#include <climits>
#include <vector>
#include <string>

#define from(x,a,b) for(int x=(a); x<=(b);x++)
#define iter(x,a,b) for(int x=(a); x< (b);x++)
using namespace std;
typedef long long ll;
typedef vector<ll> vec;
typedef vector<vec> mat;

#define LEN 10
int digits[LEN];

int digitalize(int n){
  iter(i,0,LEN) digits[i] = 0;
  int i = 0;
  while(n>0){
    digits[i++] = n % 10;
    n /= 10;
  }
  return i;
}

int undigitalize(int l){
  int t=0;
  for(int i=l-1; i >= 0; i--){
    t = 10*t + digits[i];
  }
  return t;
}

int findMax(int n){
  int l = digitalize(n);
  for(int i=l-1; i>0; i--){
    int ix = i;
    int ref = digits[i];
    for(int j=0; j<i;j++){
      if( digits[j] > ref && (i != l-1 || digits[j] != 0) ){
        ix = j;
        ref = digits[j];
      }
    }
    if( ix != i ){
      int t = digits[ix];
      digits[ix] = digits[i];
      digits[i] = t;
      return undigitalize(l);
    }

  }
  return n; 

}

int findMin(int n){
  int l = digitalize(n);

  // cout << "l = " << l << endl;
  // iter(i,0,l) cout << digits[i] << ' ';
  // cout << endl;

  for(int i=l-1; i>0; i--){
    int ix = i;
    int ref = digits[i];
    for(int j=0; j<i;j++){
      if( digits[j] < ref && (i != l-1 || digits[j] != 0) ){
        ix = j;
        ref = digits[j];
      }
    }
    if( ix != i ){
      int t = digits[ix];
      digits[ix] = digits[i];
      digits[i] = t;
      return undigitalize(l);
    }

  }
  return n;
}

int main(){
  int ntc; 
  cin >> ntc;
  from(tc,1,ntc){
    int n;
    cin >> n;
    printf("Case #%d: %d %d\n", tc, findMin(n), findMax(n));
  }
  return 0;
}