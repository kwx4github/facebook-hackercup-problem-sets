package fb.hacker_cup;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;

public class CookingTheBooks {
	
	public static void main(String[] args) throws FileNotFoundException {
		
		Scanner in = new Scanner(new File("cooking_the_books.txt"));
		PrintWriter out = new PrintWriter(new File("cooking_the_books_solution.txt"));
		int T = in.nextInt();

		for(int t=0;t<T;t++){
			int input = in.nextInt();
			if(input < 10){
				out.println(String.format("Case %d: %d %d", (t+1), input, input));
				continue;
			}
			
			String min = solveMin(input);
			String max = solveMax(input);
			out.println(String.format("Case %d: %s %s", (t+1), min, max));
		}
		
		in.close();
		out.close();
	}
	
	private static String solveMax(int input){
		char[] inputChars = Integer.toString(input).toCharArray();
		
		int[] maxDigit = new int[inputChars.length];maxDigit[maxDigit.length-1] = maxDigit.length-1;
		int max = input%10;
		int temp = input/10;
		for (int i= inputChars.length-2;i>=0;i--){
			int lastDigit = temp%10;
			int maxIndex = maxDigit[i+1];
			if(lastDigit > max){
				max = lastDigit;
				maxIndex = i;
			}
			maxDigit[i] = maxIndex;
			temp= temp/10;
		}
		
		for(int i = 0;i<maxDigit.length;i++){
			if (i!= maxDigit[i] && inputChars[i] != inputChars[maxDigit[i]]){
				char tempChar = inputChars[i];
				inputChars[i] = inputChars[maxDigit[i]];
				inputChars[maxDigit[i]] = tempChar;
				break;
			}
		}
		return String.valueOf(inputChars);
	}
	
	private static String solveMin(int input){
		char[] inputChars = Integer.toString(input).toCharArray();
		
		int[] minDigit = new int[inputChars.length];minDigit[minDigit.length-1] = minDigit.length-1;
		int min = input%10;
		int temp = input/10;
		for (int i= inputChars.length-2;i>=0;i--){
			int lastDigit = temp%10;
			int minIndex = minDigit[i+1];
			if(lastDigit < min && lastDigit!=0 || min == 0){
				min = lastDigit;
				minIndex = i;
			}
			minDigit[i] = minIndex;
			temp= temp/10;
		}
		
		for(int i = 0;i<minDigit.length;i++){
			if (i!= minDigit[i] && inputChars[i] != inputChars[minDigit[i]]){
				char tempChar = inputChars[i];
				inputChars[i] = inputChars[minDigit[i]];
				inputChars[minDigit[i]] = tempChar;
				break;
			}
		}
		return String.valueOf(inputChars);
	}
}
