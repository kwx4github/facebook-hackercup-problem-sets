#include <fstream>
#include <iostream>
#include <cstdio>
#include <sstream>
#include <string>
#include <map>
#include <vector>

#include <cstdlib>
#include <algorithm>

using namespace std;


int main (int argc, char* argv[]) 
{
ifstream infile(argv[1]);
    string line;

    getline(infile, line);

    int count = atoi(line.c_str());

    for (int i = 0; i < count; i++)
    {
        vector< pair<char,int> > digits;

        string readline;

        getline(infile, readline);

        printf("Case #%d: ", i+1);
        
        for (int j = 0; j < readline.size(); j++)
        {
            digits.push_back(make_pair(readline[j],j));
        }

        sort(digits.begin(), digits.end());
        
        /* largest */
        int sel = digits.size() - 1;
        int position = 0;
        line = readline;

        while (position < sel )
        {
            /* if it is in right position, try next */
            if (digits[sel].first > line[position])
            {
                swap(line[position], line[digits[sel].second]);
                break;
            }
            else
            {
                position++;
            }
        }
        cout << line << " ";


        /* smallest */   
        int selz = 0;
        int selnz = 0;
        position = 0;
        line = readline;

        /* smallest number, highest pos */
        for (int j = 1; j < digits.size(); j++)
        {
            if(digits[j].first == digits[selz].first)
            {
                selz = j;
            }
            else
            {
               break; 
            }
        }
        /* smallest number nz, highest pos */
        for (int j = 1; j < digits.size(); j++)
        {
            if(digits[selnz].first == '0'
                || digits[j].first == digits[selnz].first)
            {
                selnz = j;
            }
            else
            {
               break; 
            }
        }


        while (position < digits.size() )
        {

            if (position == 0 )
            {
                if(digits[selnz].first < line[position])
                {   
                    swap(line[position], line[digits[selnz].second]);
                    break;
                }
                else
                {
                    position++;
                }
            }
            else
            {
                if(digits[selz].first < line[position])
                {   
                    swap(line[position], line[digits[selz].second]);
                    break;
                }
                else
                {
                    position++;
                }                

            }
        }
        cout << line << " ";

        cout << endl;
    }   

    cout << endl;
}