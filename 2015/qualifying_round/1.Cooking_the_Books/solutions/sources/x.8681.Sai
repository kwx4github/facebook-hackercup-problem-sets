#include <cstdio>
using namespace std;
#include <cmath>

#define MAX 100
#define LENGTH 9

int FindMax(int digit[], int k)
{
	int Max = digit[0];
	int place = 0;
	for(int i = 1; i <k; i++)
	{
		if(Max < digit[i])
		{
			Max = digit[i];
			place = i;
		}
	}
	if(place == k-1 && k > 0)
		place = FindMax(digit, k-1);
	else if(k==0)
		return 0;
	return place;
}

int FindMin(int digit[], int k)
{
	int Min = digit[k-1];
	int place = k-1;
	for(int i = 1; i < k; i++)
	{
		if(Min > digit[i] && digit[i] != 0)
		{
			Min = digit[i];
			place = i;
		}
	}
	if(place == k-1 && k > 0)
		place = FindMin(digit, k-1);
	else if(k==0)
		return 0;
	return place;
}

int main() {
	int n;
	int a[MAX];
	int digit[LENGTH];
	scanf("%d", &n);
	for(int i=0;i<n;i++)
	{
		scanf("%d", &a[i]);
		if(a[i] == 0)
			printf("Case #%d: 0 0\n", i+1);
		else
		{
			int k = 0;
			int number = a[i];
			int place1 = 0, place2 = 0, place3 = 0, place4 = 0;
			int l = a[i];
			int Max = a[i]%10, Min = a[i]%10;
			while(1)
			{
				if((l != 0))
				{
					l = l/10;
					k++;
				}
				else
					break;
			}
			for(int j = 0; j < k; j++)
			{
				digit[j] = a[i]%10;
				a[i] = a[i]/10;
			}
			place1 = FindMax(digit, k);
			for(int j = k-1; j >=0; j--)
			{
				if(digit[j] < digit[place1])
				{
					place2 = j;
					break;
				}
			}
			place3 = FindMin(digit, k);
			for(int j = k-1; j >=0; j--)
			{	
				if(digit[place3] == 0)
				{
					place4 = 0;
					break;
				}
				if(digit[j] > digit[place3])
				{
					place4 = j;
					break;
				}
			}
			int MaxNumber = number + digit[place1] * pow(10, (place2)) - digit[place1] * pow(10, place1) - digit[place2] * pow(10, (place2)) +  digit[place2] * pow(10, (place1));
			int MinNumber = number + digit[place3] * pow(10, (place4)) - digit[place3] * pow(10, place3) - digit[place4] * pow(10, (place4)) +  digit[place4] * pow(10, (place3));
			printf("Case #%d: %d %d\n", i+1, MaxNumber, MinNumber);
		}
	}
	return 0;
}