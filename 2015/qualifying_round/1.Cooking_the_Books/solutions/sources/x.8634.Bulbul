/*Conquer The World
                 by
          Knowledge && Humanity
                 ///->"lonely_point"*/
#include<bits/stdc++.h>
#define F(i,a,b) for(int i = a; i<=b; i++)
#define FF(i,a,b) for(int i = a; i<b; i++)
#define RF(i,a,b) for(int i = a; i>=b; i--)
#define PC(cs)  printf("Case %d: ",cs++)
#define PCN(cs) printf("Case %d:\n",cs++)
#define mset(ar,v) memset(ar,v,sizeof(ar))
#define RT return
#define pb push_back
#define clr clear()
#define ins insert
#define WH while
#define NL cout << endl
#define M 5000
#define IM int main
#define inf (1<<30)
#define X first
#define Y second
#define BB begin
#define EE end
#define rbeg rbegin
#define LL long long
#define UI unsigned
#define UL unsigned long
#define ULL unsigned long long
#define sng string
#define LO long
#define I int
#define  DB  double
#define itr  iterator
#define ritr reverse_iterator
#define ST struct
#define IA(n) scanf("%d",&n)
#define IB(n,m) scanf("%d%d",&n,&m)
#define IC(n,m,l) scanf("%d%d%d",&n,&m,&l)
#define ID(n,m,l,k) scanf("%d%d%d%d",&n,&m,&l,&k)
#define LA(n) scanf("%ld",&n)
#define LB(n,m) scanf("%ld%ld",&n,&m)
#define LC(n,m,l) scanf("%ld%ld%ld",&n,&m,&l)
#define LD(n,m,l,k) scanf("%ld%ld%ld%ld",&n,&m,&l,&k)
#define LLA(n) scanf("%lld",&n)
#define LLB(n,m) scanf("%lld%lld",&n,&m)
#define LLC(n,m,l) scanf("%lld%lld%lld",&n,&m,&l)
#define LLD(n,m,l,k) scanf("%lld%lld%lld%lld",&n,&m,&l,&k)
#define IPA(n)  printf("%d\n",n)
#define LPA(n)  printf("%lld\n",n)
#define gcd(a, b)   __gcd(a, b)
#define FI ios_base::sync_with_stdio(0);cin.tie(0);
#define lcm(a, b) ((a)*((b)/gcd(a,b)))
#define all(v) v.begin(), v.end()
#define no_ones __builtin_popcount // count 1's in a number's binary representation
#define eps 10e-7

///          0123456789
#define MX   100000



using namespace std;



IM()
{


    freopen("cooking_the_books.txt","r",stdin);
    freopen("aout.txt","w",stdout);
    int tc;

    cin>>tc;
    int cs = 1;


    WH(tc--)
    {
        string sa;

        cin>>sa;

        int N = sa.length();

        int m = 12;
        int n = -1;

        int mn = 0,mx = 0,sp,bp;

        int ar[20],br[20];

        F(i,0,N-1)
        {
            ar[i+1] = sa[i] - '0';

            mx = mx*10 + ar[i+1];
            mn = mn*10 + ar[i+1];
            if(ar[i+1]<=m)
            {
                m = ar[i+1];
                sp = i+1;

            }

            if(ar[i+1]>=n)
            {
                bp = i+1;
                n = ar[i+1];
            }

        }

//        cout << "sp : " << sp << endl;
////
//        cout << "bp : " << bp << endl;
        F(i,1,bp-1)
        {
            F(j,1,N)
            {
                br[j] = ar[j];
            }


            swap(br[bp],br[i]);

            int n_mx = 0;

            F(k,1,N)
            {
                n_mx = n_mx *10 + br[k];
            }

            if(n_mx>mx)
                mx = n_mx;

            //cout << "n_mx : " << n_mx << endl;
        }

        //cout << "mx : " << mx << endl;


        //cout << "sp : " << sp << endl;


//        F(i,1,sp-1)
//        {
//
//        }


        F(i,1,sp-1)
        {
            F(j,1,N)
            {
                br[j] = ar[j];
            }

            if(ar[sp] == 0)
            {
                if(i!=1)
                    swap(br[sp],br[i]);
                //else swap(br[sp],br[i]);
            }
            else
            swap(br[sp],br[i]);

            int n_mn = 0;

            F(k,1,N)
            {
                n_mn = n_mn *10 + br[k];
            }

            if(n_mn<mn)
                mn = n_mn;

           // cout << "n_mx : " << n_mn << endl;
        }

        //cout << "mn : " << mn << endl;

        //Case #1:


            cout << "Case #" << cs++ << ":" << " " << mn << " " << mx << endl;



    }

    RT 0;
}
///*Conquer The World
//                 by
//          Knowledge && Humanity
//                 ///->"lonely_point"*/
//#include<bits/stdc++.h>
//#define F(i,a,b) for(int i = a; i<=b; i++)
//#define FF(i,a,b) for(int i = a; i<b; i++)
//#define RF(i,a,b) for(int i = a; i>=b; i--)
//#define PC(cs)  printf("Case %d: ",cs++)
//#define PCN(cs) printf("Case %d:\n",cs++)
//#define mset(ar,v) memset(ar,v,sizeof(ar))
//#define RT return
//#define pb push_back
//#define clr clear()
//#define ins insert
//#define WH while
//#define NL cout << endl
//#define M 5000
//#define IM int main
//#define inf (1<<30)
//#define X first
//#define Y second
//#define BB begin
//#define EE end
//#define rbeg rbegin
//#define LL long long
//#define UI unsigned
//#define UL unsigned long
//#define ULL unsigned long long
//#define sng string
//#define LO long
//#define I int
//#define  DB  double
//#define itr  iterator
//#define ritr reverse_iterator
//#define ST struct
//#define IA(n) scanf("%d",&n)
//#define IB(n,m) scanf("%d%d",&n,&m)
//#define IC(n,m,l) scanf("%d%d%d",&n,&m,&l)
//#define ID(n,m,l,k) scanf("%d%d%d%d",&n,&m,&l,&k)
//#define LA(n) scanf("%ld",&n)
//#define LB(n,m) scanf("%ld%ld",&n,&m)
//#define LC(n,m,l) scanf("%ld%ld%ld",&n,&m,&l)
//#define LD(n,m,l,k) scanf("%ld%ld%ld%ld",&n,&m,&l,&k)
//#define LLA(n) scanf("%lld",&n)
//#define LLB(n,m) scanf("%lld%lld",&n,&m)
//#define LLC(n,m,l) scanf("%lld%lld%lld",&n,&m,&l)
//#define LLD(n,m,l,k) scanf("%lld%lld%lld%lld",&n,&m,&l,&k)
//#define IPA(n)  printf("%d\n",n)
//#define LPA(n)  printf("%lld\n",n)
//#define gcd(a, b)   __gcd(a, b)
//#define FI ios_base::sync_with_stdio(0);cin.tie(0);
//#define lcm(a, b) ((a)*((b)/gcd(a,b)))
//#define all(v) v.begin(), v.end()
//#define no_ones __builtin_popcount // count 1's in a number's binary representation
//#define eps 10e-7
//
/////          0123456789
//#define MX   100000
//
//
//
//using namespace std;
//
//
//
//IM()
//{
//
//
////    freopen("a.txt","r",stdin);
////    freopen("aout.txt","w",stdout);
//    int tc;
//
//    cin>>tc;
//    int cs = 1;
//
//
//    WH(tc--)
//    {
//        string sa;
//
//        cin>>sa;
//
//        int N = sa.length();
//
//        int m = 12;
//        int n = -1;
//
//        int mn = 0,mx = 0,sp,bp;
//
//        int ar[20],br[20];
//
//        F(i,0,N-1)
//        {
//            ar[i+1] = sa[i] - '0';
//
//            mx = mx*10 + ar[i+1];
//            mn = mn*10 + ar[i+1];
//            if(ar[i+1]<=m)
//            {
//                m = ar[i+1];
//                sp = i+1;
//
//            }
//
//            if(ar[i+1]>=n)
//            {
//                bp = i+1;
//                n = ar[i+1];
//            }
//
//        }
//
////        cout << "sp : " << sp << endl;
//////
////        cout << "bp : " << bp << endl;
//        F(i,1,bp-1)
//        {
//            F(j,1,N)
//            {
//                br[j] = ar[j];
//            }
//
//
//            swap(br[bp],br[i]);
//
//            int n_mx = 0;
//
//            F(k,1,N)
//            {
//                n_mx = n_mx *10 + br[k];
//            }
//
//            if(n_mx>mx)
//                mx = n_mx;
//
//            //cout << "n_mx : " << n_mx << endl;
//        }
//
//        //cout << "mx : " << mx << endl;
//
//
//        //cout << "sp : " << sp << endl;
//
//
////        F(i,1,sp-1)
////        {
////
////        }
//
//
//        F(i,1,sp-1)
//        {
//            F(j,1,N)
//            {
//                br[j] = ar[j];
//            }
//
//            if(ar[sp] == 0)
//            {
//                if(i!=1)
//                    swap(br[sp],br[i]);
//                //else swap(br[sp],br[i]);
//            }
//            else
//            swap(br[sp],br[i]);
//
//            int n_mn = 0;
//
//            F(k,1,N)
//            {
//                n_mn = n_mn *10 + br[k];
//            }
//
//            if(n_mn<mn)
//                mn = n_mn;
//
//           // cout << "n_mx : " << n_mn << endl;
//        }
//
//        //cout << "mn : " << mn << endl;
//
//        //Case #1:
//
//
//            cout << "Case #" << cs++ << ":" << " " << mn << " " << mx << endl;
//
//
//
//    }
//
//    RT 0;
//}
