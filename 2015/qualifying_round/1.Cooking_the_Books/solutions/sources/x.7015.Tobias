/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.sun.org.apache.bcel.internal.generic.L2D;
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;


/**
 *
 * @author trauter
 */
public class Solution {

    
    public static String swap(String l, int start, boolean max)
    {
        if(start >= l.length() - 1)
            return l;
        int maxPos = start;
        
        for(int i = start; i < l.length(); i++)
        {
            
            if((max && l.charAt(i) > l.charAt(maxPos)) 
                    || !max && l.charAt(maxPos) > l.charAt(i) && !(start == 0 && l.charAt(i) == '0'))
                maxPos = i;
        }
        
        if(maxPos == start)
        {
            return swap(l, start + 1, max);
        }
        
       char[] c = l.toCharArray();
       char tmp = c[start];
       c[start] = c[maxPos];
       c[maxPos] = tmp;
      //  System.err.println("len: "+((int)Math.log10(l) + 1));
        return new String(c);
    }
    
    public static void start(Scanner s)
    {
        
        int num = s.nextInt();
      //  System.err.println("N=" + num);
        for (int i = 0; i < num; i++)
        {
            //find max:
            long l = s.nextLong();
            System.out.println("Case #" + (i+1)+": " +swap(""+l, 0, false) + " " + swap(""+l, 0, true));
        }
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        
        Scanner s;
        boolean files = false;
        if(files)
        {
            String outputFileName = "output.txt";


            FilenameFilter f = new FilenameFilter() {

                @Override
                public boolean accept(File arg0, String name) {
                    return name.matches(".*\\.in$");
                }
            };
            String list[] = new File("tests").list(f);
            for(String file : list )
            {
       
                System.err.println("Processing file: " +    file);
                System.setOut(new PrintStream(
                        new FileOutputStream(outputFileName, false)));
                s = new Scanner(new File("tests/"+file));     
                long mills = System.currentTimeMillis();
                start(s);
                System.err.println("Time:" + (System.currentTimeMillis() - mills));
                List<String> reference = readFile("tests/" + file+".out");
                
                List<String> myOut = readFile("output.txt");
                boolean ok = true;
                
                for(int i = 0; ok && i < reference.size(); i++)
                {
                    
                    if(myOut.size() <= i)
                    {
                        ok = false;
                        System.err.println(
                                "Reference line not in output(output truncated): " 
                                        + reference.get(i));
                    }
                    else if(!reference.get(i).equals(myOut.get(i)))
                    {
                        System.err.println("Output mismatch: \nReference: " +
                                reference.get(i) + "\nOutput: " + myOut.get(i));
                        
                    }
                }
                
                if (reference.size() != myOut.size() )
                    System.err.println("Reference Size does not match output");

            }
           
        }
        else
        {
            System.setOut(new PrintStream(
                        new FileOutputStream("tests/ranked.in.out", false)));
            s = new Scanner(new File("tests/ranked.in"));
            start(s);
        }
        
        // TODO code application logic here
    }
    
    
    public static List<String> readFile(String name) throws FileNotFoundException, IOException
    {
        BufferedReader bis = new BufferedReader(new FileReader(name));
        List<String> lines = new LinkedList<>();
        
        String line = null;
        while((line = bis.readLine()) != null)
            lines.add(line);
        
        bis.close();
        return lines;
    }
}