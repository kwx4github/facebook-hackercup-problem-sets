/*
  Cooking the Books

   cases=T
   n=N
*/
#include<stdio.h>
#include<stdlib.h>
#include<errno.h>
#include<math.h>
#include<string.h>
int minmax(long n,long* min,long *max);
int main(int argc, char* argv[])
{
  FILE *fptr;
  int i=0,cases;
  long n;
  char num[10];
  char num_case[3];
  int *t;
  long min, max;
  if(argc<2){
    fprintf(stderr,"\n Usage:./%s <input-file>",argv[0]);
    exit(1);
  }
  fptr=fopen(argv[1],"r");
  if (fptr == NULL) {
    fprintf(stderr, "Value of errno: %d\n", errno);
  }
  fscanf(fptr,"%s",num_case);
  cases=atoi(num_case);
  if(1 > cases ) exit(2);
  if(cases>100) cases=100;

//N will never begin with a leading 0 unless N = 0
 // printf("\n cases=%d",cases);
  
  while(cases){
    i++;
    strcpy(num,"");
    fscanf(fptr,"%s",num);
    if(!strcmp(num,"")){
      //printf("Input file does not follow the required constraint\n");
      exit(10);
    }
    n=atoi(num);
    if(0 > n|| n > 999999999) exit(3);
    minmax(n,&min,&max);
    printf("Case #%d: %ld  %ld\n",i,min,max); 
    cases--;
  }
 
  fclose(fptr);
return 0;
}

int minmax(long n,long* min,long *max)
{
  int mindigit=10, maxdigit=0;
  int min_index,max_index;
  long m=n,least;
  int i=0,k,t;
 
    *min=n;
    *max=n;
 if(n==0) return 0;
  
   while(n){
     i++;
     k=n%10;
     if(k!=0){
       if(mindigit>k){mindigit=k;min_index=i;}
       if(maxdigit<k){maxdigit=k;max_index=i;}
     }
    n/=10;
   }
  t=m/pow(10,i-1);//most significant digit
  *min=mindigit*(long)pow((double)10,i-1)+(m%(long)pow((double)10,i-1));
  //printf("\n min=%d",(m%(int)pow((double)10,i-1)));
//printf("\n min=%d",*min);
  
  least=t*(long)pow(10,min_index-1)+(*min)%(long)pow(10,min_index-1);
  *min=*min-(*min)%(long)pow(10,min_index);
//printf("\n min=%d",*min);
  *min=*min+least;


  t=m/pow(10,i-1);//most significant digit
  *max=maxdigit*(long)pow((double)10,i-1)+(m%(long)pow((double)10,i-1));
  
  least=t*(long)pow(10,max_index-1)+(*max)%(long)pow(10,max_index-1);
  *max=*max-(*max)%(long)pow(10,max_index);
  *max=*max+least;

}


 
