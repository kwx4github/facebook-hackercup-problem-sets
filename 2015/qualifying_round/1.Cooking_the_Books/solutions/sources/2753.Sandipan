#include<stdio.h>
int t,j,pos,pos1,i,n;
char min,max,s[10004],temp,p[10004];
struct book{

int pos;
char c;

}b[26];
int compare(const void* a, const void* b)
{
    struct book s_a = *((struct book*)a);
    struct book s_b = *((struct book*)b);

   return s_a.c> s_b.c ? 1 : -1;
}
int compare1(const void* a, const void* b)
{
    struct book s_a = *((struct book*)a);
    struct book s_b = *((struct book*)b);

   return s_a.c> s_b.c ? -1 : 1;
}
int main()
{
    scanf("%d",&t);
    for(j=1;j<=t;j++)
    {
        scanf("%s",s);
        for(i=0;s[i]!='\0';i++)
        {
           b[i].c=s[i];
           b[i].pos=i;
        }
         qsort(b,strlen(s),sizeof(struct book),compare);
         strcpy(p,s);
         n=strlen(s);
         for(i=0;i<n;i++)
         {
             if(b[i].c=='0')
             {
                 if(p[i+1]=='0')
                 {
                     continue;
                 }
                 else
                 {
                     if(i+1!=n)
                     {
                     temp=p[i+1];
                     p[i+1]=p[b[i].pos];
                     p[b[i].pos]=temp;
                     }
                     break;
                 }
             }
             else
             {
                if(p[i]==b[i].c)
                 {
                     continue;
                 }
                 else
                 {
                      if(p[i]=='0')
                     {
                         continue;
                     }
                     else
                    {


                     temp=p[i];
                     p[i]=p[b[i].pos];
                     p[b[i].pos]=temp;
                      break;
                     }

                 }
             }
         }
         printf("Case #%d %s ",j,p);
         for(i=0;s[i]!='\0';i++)
        {
           b[i].c=s[i];
           b[i].pos=i;
        }
         qsort(b,strlen(s),sizeof(struct book),compare1);
         strcpy(p,s);
         n=strlen(s);
         for(i=0;i<n;i++)
         {
             if(b[i].c=='0')
             {
                 if(p[i+1]=='0')
                 {
                     continue;
                 }
                 else
                 {
                     if(i+1!=n)
                     {
                     temp=p[i+1];
                     p[i+1]=p[b[i].pos];
                     p[b[i].pos]=temp;
                     }
                     break;
                 }
             }
             else
             {
                if(p[i]==b[i].c)
                 {
                     continue;
                 }
                 else
                 {

                     if(p[i]=='0'&&b[i].pos==0)
                     continue;
                     else
                     {


                     temp=p[i];
                     p[i]=p[b[i].pos];
                     p[b[i].pos]=temp;

                     break;
                     }
                 }
             }
         }
         printf("%s\n",p);
    }
}
