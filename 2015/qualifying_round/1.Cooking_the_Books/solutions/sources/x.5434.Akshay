#include<iostream>
#include<vector>
#include<algorithm>
#include<cmath>
using namespace std;

int main(){
	std::ios_base::sync_with_stdio(false);
	
	freopen("cooking_the_books.txt","r",stdin);
	freopen("cooking_the_books_output.txt","w",stdout);
	
	typedef vector<int> vec;
	int t;
	cin>>t;
	for(int i=1; i<=t; i++){
		int n, temp, length = 0, smallest = 0, largest = 0;
		cin>>n;
		temp = n;
		vec a;
		while(temp){
			a.insert(a.begin(),temp%10);
			temp /= 10;
			length++;
		}
		//cout<<"Length: "<<length<<endl;
		if(length == 1){
			smallest = largest = n;
		}
		else{
			int i=0;
			
			vec a_temp(a);
			
			for(i=0; i<length; i++){
				vec::iterator max = max_element(a.begin()+i, a.end());
				if(a[i] != *max){ // The first element is not max, swap with the max
					//cout<<"Max: "<<*max<<" a["<<i<<"]: "<<a[i]<<endl;
					iter_swap(a.begin()+i, max);
					break;
				}
			}

			for(int i=0; i<length; i++)
				largest = largest*10 + a[i];	
			
			a = a_temp;	
			
			for(int i=0; i<length; i++){
				vec::iterator min = min_element(a.begin()+i, a.end());
				if(a[i] != *min){ // The first element is not min, swap with the min
					
					if(i==0 && *min == 0) //Dont substitute first with 0
						continue;
						
					iter_swap(a.begin()+i, min);
					break;
				}
			}
				
			for(int i=0; i<length; i++)
				smallest = smallest*10 + a[i];	
	}
		
		cout<<"Case #"<<i<<": "<<smallest<<" "<<largest<<endl;
	}
	return 0;
}

