#include <iostream>
using namespace std;

int A[9];
int B[9];

void swap(int x,int y) {
	int temp = A[x];
	A[x]=A[y]; A[y] = temp;
}

void compute_max(int start) {
	if (start>=8) return;
	int max_index = start, max = A[start];
	for(int i=start+1;i<9;i++) {
		if (A[i]>=max) {
			max = A[i]; max_index = i;
		}
	}
	int swap_index = start;
	for (int i=start;i<9;i++) {
		if (A[i]==max) swap_index++;
		else break;
	}
	if (max_index>swap_index) swap(max_index,swap_index);
	else compute_max(swap_index);  
}

void compute_min(int start) {
	if (start>=8) return;
	int min_index = start, min = A[start],zero_index=-1;
	for (int i=start+1;i<9;i++) {
		if (A[i]<=min && A[i]) {
			min = A[i]; min_index = i;
		}
		if (A[i]==0) {
			zero_index = i;
		}
	}
	int swap_index = start;
	if (A[start]==min) swap_index++;
	if (zero_index>0 && swap_index>0) {
		min_index = zero_index;
		min = 0;
	}
	for (int i=swap_index;i<9;i++) {
		if (A[i]==min) swap_index++;
		else break;
	}
	if (min_index>swap_index) swap(min_index,swap_index);
	else compute_min(swap_index);
}

int main() {
	int T,N;
	cin>>T;
	for (int t=0;t<T;t++) {
		int i =8; //int max_index = i;
		cin>>N;
		if (!N) {
			cout<<"Case #"<<t+1<<": 0 0\n";
			continue;
		}
		while(N) {
			int t = N%10;
			A[i] = t; B[i]=t;
			i--;
			N/=10;
		}

		cout<<"Case #"<<t+1<<": ";
		compute_min(i+1);
		for (int j=i+1;j<9;j++) {
			cout<<A[j]; A[j]=B[j];
		} 
		cout<<" ";
		compute_max(i+1);
		for (int j=i+1;j<9;j++) cout<<A[j]; cout<<"\n";
		
	}
	return 0;
}