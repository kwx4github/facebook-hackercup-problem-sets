#include<stdio.h>
#include<stdlib.h>

int power_10(int num)
{
  int i,power=1;
  for(i=1;i<=num;i++)
  {
    power=power*10;
  }
  if(num==0)
    return 1;
  else
    return power;
}

int max(int number)
{
  int clone_1,clone_2,max_num,digit,max_digit,count=0,total_digits=0;
  clone_1=number;
  clone_2=number;
  digit=0;
  max_digit=digit;

  //finding the number of digits and the maximum digit
  while(number>0)
  {
    digit=number%10;
    if((digit>max_digit) && digit>0)
    {
      max_digit=digit;
    }
    number=number/10;
    total_digits++;
  }

  //finding the position of the max digit
  while(clone_1>0)
  {
    digit=clone_1%10;
    if(max_digit==digit)
    {
      break;
    }
    clone_1=clone_1/10;
    count++;
  }

  //finding the first digit of original number
  digit=clone_2/power_10(total_digits-1);

  //finding the first digit of max_number and generating intermediate number.
  max_num=(max_digit*power_10(total_digits-1))+clone_2-(clone_2/power_10(total_digits-1))*power_10(total_digits-1);

  //generating max number
  max_num=max_num-(max_digit*power_10(count))+(digit*power_10(count));
  if(clone_2==0)
    return 0;
  else
    return max_num;
}

int min(int number)
{
  int clone_1,clone_2,min_num,digit,min_digit,count=0,total_digits=0;
  clone_1=number;
  clone_2=number;
  digit=10;
  min_digit=digit;

  //finding the number of digits and the maximum digit
  while(number>0)
  {
    digit=number%10;
    if((digit<min_digit) && digit>0)
    {
      min_digit=digit;
    }
    number=number/10;
    total_digits++;
  }

  //finding the position of the max digit
  while(clone_1>0)
  {
    digit=clone_1%10;
    if(min_digit==digit)
    {
      break;
    }
    clone_1=clone_1/10;
    count++;
  }

  //finding the first digit of original number
  digit=clone_2/power_10(total_digits-1);

  //finding the first digit of max_number and generating intermediate number.
  min_num=(min_digit*power_10(total_digits-1))+clone_2-(clone_2/power_10(total_digits-1))*power_10(total_digits-1);

  //generating max number
  min_num=min_num-(min_digit*power_10(count))+(digit*power_10(count));

  if(clone_2==0)
    return 0;
  else
    return min_num;
}

int main()
{
  int max_num,min_num,N,T,i;
  scanf("%d",&T);
  for(i=0;i<T;i++)
  {
    scanf("%d",&N);
    max_num=max(N);
    min_num=min(N);
    printf("Case #%d: %d %d\n",i+1,min_num,max_num);
  }
  return 0;
}
