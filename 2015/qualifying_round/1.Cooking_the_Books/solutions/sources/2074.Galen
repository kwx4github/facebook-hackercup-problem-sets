#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

const int MAXN = 16;
const int inf = 1000000000;

int n;

void read() {
	scanf ( "%d", &n );
}

int getNum ( int x, int y,  vector < int > v ) {
	int i, sz = ( int ) v.size();
	int num = 0, d = 1;

	swap ( v[x], v[y] );

	if ( v[sz - 1] == 0 ) return inf;

	for ( i = 0; i < sz; ++ i ) {
		num += d * v[i];
		d *= 10;
	}

	return num;

}

void solve ( int test ) {
	vector < int > v;

	int i, j, mn = n, mx = n;

	while ( n ) {
		v.push_back ( n % 10 );

		n /= 10;
	}

	int sz = ( int ) v.size();

	printf ( "Case #%d: ", test );

	for ( i = 0; i < sz; ++ i ) {
		for ( j = 0; j < sz; ++ j ) {
			int num = getNum ( i, j, v );

			if ( num == inf ) continue;

			mn = min ( mn, num );
			mx = max ( mx, num );

		}

	}

	printf ( "%d %d\n", mn, mx );

}

int main() {
	freopen ( "cooking_the_books.txt", "r", stdin );
	freopen ( "cooking_the_books_output.txt", "w", stdout );

	int tests;

	scanf ( "%d", &tests );

	for ( int i = 1; i <= tests; ++ i ) {
		read();
		solve( i );
	}

	return 0;

}