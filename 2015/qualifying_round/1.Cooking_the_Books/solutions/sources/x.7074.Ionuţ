/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Facebook;

import java.util.Scanner;

/**
 *
 * @author hec
 */

public class Facebook {
    public static int[] minim;
    public static int[] maxim;
    
    public static void outmax(int x, int pos, int start) {
        if (x == 0) {
            maxim[pos] = 0;
            return;
        }
        
        String temp = Integer.toString(x);
        
        if (temp.length() == 1) {
            maxim[pos] = x;
        }
        
        int[] digits = new int[temp.length()];
        
        for (int i = 0; i < digits.length; i++) {
            digits[i] = temp.charAt(i) - '0';
        }
        
        int indexMax = start;
        
        int max = digits[start];
        
        for (int i = start; i < digits.length; i++) {
            if (digits[i] > max) {
                max = digits[i];
                indexMax = i;
            }
        }
        
        // recursive call starting from the next digit
        if (max == digits[start] && start < digits.length - 1) {
            outmax(x, pos, start + 1);
            return;
        }
        
        // swapping the two elements
        int swap;
        swap = digits[start];
        digits[start] = digits[indexMax];
        digits[indexMax] = swap;
        
        String out = "";
        
        for (int i = 0; i < digits.length; i++) {
            out += digits[i];
        }

        maxim[pos] = Integer.parseInt(out);
    }
    
    public static void outmin(int x, int pos, int start) {
        if (x == 0) {
            minim[pos] = 0;
            return;
        }
        
        String temp = Integer.toString(x);
        
        if (temp.length() == 1) {
            minim[pos] = x;
        }
        
        int[] digits = new int[temp.length()];
        
        for (int i = 0; i < digits.length; i++) {
            digits[i] = temp.charAt(i) - '0';
        }
        
        int indexMin = start;
        
        int min = digits[start];
        
        for (int i = start; i < digits.length; i++) {
            if (digits[i] < min) {
                min = digits[i];
                indexMin = i;
            }
        }
        
        // recursive call starting from the next digit
        if (min == digits[start] && start < digits.length - 1) {
            outmin(x, pos, start + 1);
            return;
        }
        
        // recursive call starting from the next digit
        if (min == 0 && start == 0 && start < digits.length - 1) {
            outmin(x, pos, start + 1);
            return;
        }
        
        int swap;
        
        String out = "";
        
        swap = digits[indexMin];
        digits[indexMin] = digits[start];
        digits[start] = swap;
        
        for (int i = 0; i < digits.length; i++) {
            out += digits[i];
        }

        minim[pos] = Integer.parseInt(out);
    }
        
    public static void cooking() {
        Scanner in;
        int T;
        int N;
        int[] v;
        
        in = new Scanner(System.in);
        
        T = in.nextInt();
        v = new int[T];
        
        
        for (int i = 0; i < T; i++) {
            v[i] = in.nextInt();
        }
        
        minim = new int[T];
        maxim = new int[T];
        
        for (int i = 0; i < T; i++) {
            outmin(v[i], i, 0);
            outmax(v[i], i, 0);
        }
        
        
        for (int i = 0; i < T; i++) {
            System.out.println("Case #" + (i + 1) + ": " + minim[i] + " " + maxim[i]);
        }
        
    }
    
    public static void main(String[] args) {
        cooking();
    }
}
