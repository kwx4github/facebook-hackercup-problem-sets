#include<iostream>
#include<math.h>
#include<limits.h>
using namespace std;

int getSize(int n)
{
    if(n==0)
        return 1;
    int cnt=0;
    while(n>0)
    {
        n=n/10;
        cnt++;
    }
    return cnt;
}

void swap(int *a,int *b)
{
    int temp=*a;
    *a=*b;
    *b=temp;
}

int main()
{
    int t;
    cin>>t;
    for(int cnt=0;cnt<t;cnt++)
    {
        long long int n,num;
        cin>>n;
        long long int min=n,max=n;
        num=n;
        int size=getSize(n);
        int *arr=new int[size];
        for(int i=size-1;i>=0;i--)
        {
            arr[i]=n%10;
            n=n/10;
        }
        int minpos=0,maxpos=0;
        for(int j=0;j<size;j++)
        {
            minpos=maxpos=j;
            for(int i=j+1;i<size;i++)
            {
                if(arr[i]<=arr[minpos]&&arr[i]!=0)
                {
                    minpos=i;
                }
                if(arr[i]>=arr[maxpos]&&arr[i]!=0)
                {
                    maxpos=i;
                }
            }
           if(minpos!=j)
            {
                swap(&arr[j],&arr[minpos]);
               long long int num1=0;
               for(int i=size-1;i>=0;i--)
               {
                   num1=num1+(arr[i]*pow(10,size-i-1));
               }
               if(num1<min)
               {
                   min=num1;
               }
                swap(&arr[j],&arr[minpos]);
            }
            if(maxpos!=j)
            {
                swap(&arr[j],&arr[maxpos]);
                long long int num1=0;
                for(int i=0;i<size;i++)
               {
                   num1+=arr[i]*pow(10,size-i-1);
               }
               if(num1>max)
               {
                   max=num1;
               }
                swap(&arr[j],&arr[maxpos]);
            }

        }
        cout<<"Case #"<<cnt+1<<": "<<min<<" "<<max;
        cout<<endl;
    }
}
