using System;
using System.IO;

class Problem1
{    
    static void Main()
    {
        int numEntries;
        string[] entryStrings;
        int[][] entryNums;
        using(StreamReader sr = new StreamReader("cooking_the_books.txt"))
        {
            numEntries = int.Parse(sr.ReadLine());
            
            entryStrings = new string[numEntries];
            entryNums = new int[numEntries][];
            
            for(int i = 0; i < numEntries; i++)
            {
                entryStrings[i] = sr.ReadLine();
            }
        }
        
        for(int i = 0; i < entryStrings.Length; i++)
        {
            entryNums[i] = new int[entryStrings[i].Length];
            for(int j = 0; j < entryStrings[i].Length; j++)
            {
                entryNums[i][j] 
                    = (int) Char.GetNumericValue(entryStrings[i][j]);
            }            
        }
        
        using(StreamWriter sw = new StreamWriter("output.txt"))
        {
            for(int i = 0; i < numEntries; i++)
            {
                sw.Write("Case #{0}: ", i + 1);
                FindMinMax(entryNums[i], sw);
            }
        }        
    }
    
    static void FindMinMax(int[] ia, StreamWriter sw)
    {
        int[] iaMin = new int[ia.Length];
        for(int i = 0; i <= 9; i++)
        {
            int minDigit = FindMinDigit(ia, i);
            bool finished;
            finished = FindMinNumber(ia, iaMin, minDigit);
            if(finished) break;
        }
        
        int[] iaMax = new int[ia.Length];
        for(int i = 9; i >= 0; i--)
        {
            int maxDigit = FindMaxDigit(ia, i);
            bool finished;
            finished = FindMaxNumber(ia, iaMax, maxDigit);
            if(finished) break;
        }
        
        string min = "";
        foreach(int i in iaMin)
        {
            min += Convert.ToString(i);
        }
        string max = "";
        foreach(int i in iaMax)
        {
            max += Convert.ToString(i);
        }
        
        sw.WriteLine("{0} {1}", min, max);
    }
    
    // Returns the index of the right most minimum digit that is greater than or 
    // equal to a lower bound.
    static int FindMinDigit(int[] ia, int lowerBound)
    {   
        int min;
        if(ia[ia.Length - 1] >= lowerBound)
            min = ia.Length - 1;
        else
            return FindMinDigit(ia, lowerBound - 1);
            
        for(int i = ia.Length - 1; i >= 0; i--)
            if(ia[i] < ia[min] && ia[i] >= lowerBound)
                min = i;
                
        return min;
    }
    
    // Returns the position of the right most position maximum digit that is 
    // less than or equal to an upper bound.
    static int FindMaxDigit(int[] ia, int upperBound)
    {   
        int max;
        if(ia[ia.Length - 1] <= upperBound)
            max = ia.Length - 1;
        else
            return FindMaxDigit(ia, upperBound + 1);
        
        for(int i = ia.Length - 1; i >= 0; i--)
            if(ia[i] > ia[max] && ia[i] <= upperBound)
                max = i;
                
        return max;
    }
    
    static bool FindMinNumber(int[] ia, int[] iaMin, int minDigit)
    {
        for(int i = 0; i < ia.Length; i++)
            iaMin[i] = ia[i];

        if(ia[minDigit] == 0)
        {
            int nld; // next lowest digit
            nld = FindMinDigit(ia, 1);            
            if(ia[nld] < ia[0])
                minDigit = nld;
        }
        
        int j = 0;
        if(ia[minDigit] == 0)
            j++;
        while(j < minDigit)
        {
            if(ia[j] > ia[minDigit])
            {
                Swap(iaMin, j, minDigit);
                return true;
            }
            j++;
        }
        return false;
    }
    
    static bool FindMaxNumber(int[] ia, int[] iaMax, int maxDigit)
    {
        for(int i = 0; i < ia.Length; i++)
        {
            iaMax[i] = ia[i];
        }        
        
        int j = 0;
        while(j < maxDigit)
        {
            if(ia[j] < ia[maxDigit])
            {
                Swap(iaMax, j, maxDigit);
                return true;
            }
            j++;
        }
        return false;
    }
    
    static void Swap(int[] ia, int a, int b)
    {
        int temp = ia[a];
        ia[a] = ia[b];
        ia[b] = temp;
    }
}