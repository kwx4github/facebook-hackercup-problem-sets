//============================================================================
// Name        : QualifiedRound.cpp
// Author      : hams
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <queue>
#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <stdlib.h>
using namespace std;




void swap(char *a,char *b){
	char temp = *b;
	*b =*a;*a=temp;
}

char* nMin(char* str){
	char* small=str;
	for(int ni=0; ni < strlen(str); ni++){
		if(str[ni]-'0' != 0 && *small-'0' > str[ni]-'0'){
			small = str+ni;
		}	
	}
	return small; 
}
char* nMax(char* str){
	char* large=str;
	for(int ni=0; ni < strlen(str); ni++){
		if(*large-'0' < str[ni]-'0'){
			large = str+ni;
		}	
	}
	return large; 
}

int main(){
    
    int T;
    long N,R;
    cin>>T;
	char digits[100] = {0};
	char smalls[100] = {0};
	char larges[100] = {0};
	for(int ni=0; ni<T;ni++){
		cin>>N;
		sprintf(digits,"%ld",N);
		//cout<<"small:"<<*nMin(digits)<<",large:"<<*nMax(digits)<<"\n";
		strcpy(smalls,digits);
		strcpy(larges,digits);
		if(nMin(digits) != nMax(digits)){
			if(nMin(digits) != digits){
				swap(smalls,nMin(smalls));
			}
			if(nMax(digits) != digits){
				swap(larges,nMax(larges));
			}
		}
		cout<<"Case #"<<ni+1<<": "<<smalls;
		cout<<" "<<larges<<"\n";
	}
    
	return 0;
}
