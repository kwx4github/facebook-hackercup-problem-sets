#include<bits/stdc++.h>
using namespace std;

template <class ForwardIterator>
  std::size_t min_element_index ( ForwardIterator first, ForwardIterator last )
{
  ForwardIterator lowest = first;
  std::size_t index = 0;
  std::size_t i = 0;
  if (first==last) return index;
  while (++first!=last) {
    ++i;
    if (*first<=*lowest) {
      lowest=first;
      index = i;
    }
  }
  return index;
}

template <class ForwardIterator>
  std::size_t max_element_index ( ForwardIterator first, ForwardIterator last )
{
  ForwardIterator highest = first;
  std::size_t index = 0;
  std::size_t i = 0;
  if (first==last) return index;
  while (++first!=last) {
    ++i;
    if (*first>=*highest) {
      highest=first;
      index = i;
    }
  }
  return index;
}

template <class ForwardIterator>
  char min_element_value( ForwardIterator first, ForwardIterator last )
{
  ForwardIterator lowest = first;
  std::size_t index = 0;
  std::size_t i = 0;
  if (first==last) return *lowest;
  while (++first!=last) {
    ++i;
    if (*first<*lowest) {
      lowest=first;
      index = i;
    }
  }
  return *lowest;
}

template <class ForwardIterator>
  char max_element_value ( ForwardIterator first, ForwardIterator last )
{
  ForwardIterator highest = first;
  std::size_t index = 0;
  std::size_t i = 0;
  if (first==last) return *highest;
  while (++first!=last) {
    ++i;
    if (*first>*highest) {
      highest=first;
      index = i;
    }
  }
  return *highest;
}

int main()
{
    int t,tt,imin,imax,l,i;
    char m;
    cin>>t;
    for(tt=1;tt<=t;tt++)
    {
        string n,s,sm,la,st;
        cin>>n;
        int len=n.length();
        if(len==1)
        {
            cout<<"Case #"<<tt<<": "<<n<<' '<<n<<'\n';
            continue;
        }
        s=n;
        st=s;
        for(i=0;i<st.length();i++)
        {
            if(st[i]=='0')st[i]='Z';
        }
        m=min_element_value(st.begin(),st.end());
        if(s[0]==m && s[0]!='\0')
        {
            sm+=m;
            s=s.substr(1);
            m=min_element_value(s.begin(),s.end());
            //min_element_value(s.begin(),s.end());
            while(s[0]==m && s[0]!='\0')
            {
                //cout<<"in min loop";
                sm+=m;
                s=s.substr(1);
                m=min_element_value(s.begin(),s.end());
            }
            imin=min_element_index(s.begin(),s.end());
            swap(s[0],s[imin]);
            sm=sm+s;
        }
        else
        {
            imin=min_element_index(st.begin(),st.end());
            swap(s[0],s[imin]);
            sm=sm+s;
        }

        s=n;
        m=max_element_value(s.begin(),s.end());
        while(s[0]==m && s[0]!='\0')
        {
            la+=m;
            s=s.substr(1);
            m=max_element_value(s.begin(),s.end());
        }
        imax=max_element_index(s.begin(),s.end());
        swap(s[0],s[imax]);
        la=la+s;

        cout<<"Case #"<<tt<<": "<<sm<<' '<<la<<'\n';
    }
    return 0;
}
