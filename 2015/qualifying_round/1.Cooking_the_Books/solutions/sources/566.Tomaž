#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <iostream>
#include <sstream>
#include <vector>
#include <string>
#include <math.h>
#include <queue>
#include <list>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <ctime>
using namespace std;

#define ALL(c) (c).begin(),(c).end()
#define IN(x,c) (find(c.begin(),c.end(),x) != (c).end())
#define REP(i,n) for (int i=0;i<(int)(n);i++)
#define FOR(i,a,b) for (int i=(a);i<=(b);i++)
#define INIT(a,v) memset(a,v,sizeof(a))
#define SORT_UNIQUE(c) (sort(c.begin(),c.end()), c.resize(distance(c.begin(),unique(c.begin(),c.end()))))
template<class A, class B> A cvt(B x) { stringstream ss; ss<<x; A y; ss>>y; return y; }

typedef pair<int,int> PII;
typedef long long int64;

#define MOD 1000000007

int tests;

int main() {
	freopen("cooking_the_books.txt","r",stdin);
	freopen("cooking_the_books.out","wb",stdout);
	scanf("%d",&tests);
	FOR (test,1,tests) {
		int x;
		string s;
		scanf("%d",&x);
		s = cvt<string>(x);
		int m=x, M=x;
		FOR (i,0,s.size()-1) FOR (j,i+1,s.size()-1) {
			swap(s[i],s[j]);
			int y=cvt<int>(s);
			if (s[0]!='0') {
				m=min(m,y);
				M=max(M,y);
			}
			swap(s[i],s[j]);
		}
		printf("Case #%d: %d %d\n",test,m,M);
	}
	return 0;
}
