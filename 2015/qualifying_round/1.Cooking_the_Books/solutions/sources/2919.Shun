#include <bits/stdc++.h>
using namespace std;

typedef ostringstream OSS;
typedef istringstream ISS;

typedef long long LL;
typedef pair<int, int> PII;

typedef vector<int> VI;
typedef vector<VI> VVI;
typedef vector<LL> VLL;
typedef vector<VLL> VVLL;
typedef vector<string> VS;
typedef vector<VS> VVS;
typedef vector<bool> VB;
typedef vector<VB> VVB;

typedef vector<PII> VPII;

#define fst first
#define snd second
#define MP make_pair
#define PB push_back
#define ALL(x) (x).begin(),(x).end()
#define RANGE(x,y,maxX,maxY) (0 <= (x) && 0 <= (y) && (x) < (maxX) && (y) < (maxY))
#define DUMP( x ) cerr << #x << " = " << ( x ) << endl

template < typename T > inline T fromString(const string &s) { T res; ISS iss(s); iss >> res; return res; };
template < typename T > inline string toString(const T &a) { OSS oss; oss << a; return oss.str(); };

const int INF = 0x3f3f3f3f;
const LL INFL = 0x3f3f3f3f3f3f3f3fLL;
const int DX[]={1,0,-1,0},DY[]={0,-1,0,1};

int main(void) {
	int T;
	cin >> T;

	for (int i = 1; i <= T; i++) {
		string s;
		cin >> s;
		int N = s.size();
		
		int mini = fromString<int>(s);
		int maxi = fromString<int>(s);
		
		for (int j = 0; j < N; j++) {
			for (int k = j + 1; k < N; k++) {
				string t(s);
				swap(t[j], t[k]);

				if (t[0] == '0') continue;
				
				int num = fromString<int>(t);
				
				mini = min(mini, num);
				maxi = max(maxi, num);
			}
		}
		
		cout << "Case #" << i << ": ";
		cout << mini << " " << maxi << endl;
	}

	return 0;
}
