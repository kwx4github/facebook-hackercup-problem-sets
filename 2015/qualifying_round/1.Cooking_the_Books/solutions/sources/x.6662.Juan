#include<stdio.h>
#include<vector>
using namespace std;

main()
{
	long long int TC, num, max, min, MIN, MAX, maxNum, minNum, temp;
	int flg1, flg2;
	vector<long long int> grid;
	scanf("%lld", &TC);		
	for(int k=1; TC--; k++)
	{
		grid.clear();
		minNum = maxNum = 0;
		scanf("%lld", &num);
		if(num<=11)	
		{
			printf("Case #%d: %lld %lld\n", k, num, num);
			continue;
		}
		while(num!=0)
		{
			temp=num%10;
			num/=10;
			grid.push_back(temp);
		}
		flg1 = flg2 = 0;
		min=grid.size();
		MAX=grid.size();
		for(long long int i=grid.size()-1, j=grid.size()-2; j>=0 && (flg1==0 || flg2==0); i--, j--)
		{
			if(grid[i]>grid[j] && flg1==0)
			{
				min=j;
				flg1=1;
			}	
			if(grid[i]<grid[j] && flg2==0)
			{
				MAX=j;
				flg2=1;
			}
		}
		for(long long int i=min; i>=0; i--)
		{
			if(grid[i]<=grid[min])
				min=i;	
		}
		for(long long int i=MAX; i>=0; i--)
		{
			if(grid[i]>=grid[MAX])
				MAX=i;
		}	
		max=min;
		MIN=MAX;
		for(long long int i=min; i<grid.size(); i++)
		{
			if(grid[i]>grid[min])
				max=i;
		}
		if(grid[min]==0)
		{
			max--;
			for(long long int i=max; grid[max]==0 && i>=0; i--)
				max--;
		}		
		temp=grid[min];
		grid[min]=grid[max];
		grid[max]=temp;
		for(long long int i=grid.size()-1; i>=0; i--)
			minNum=(minNum*10)+grid[i];
		temp=grid[min];
		grid[min]=grid[max];
		grid[max]=temp;		
		for(long long int i=MAX; i<grid.size(); i++)
		{
			if(grid[i]<grid[MAX])
				MIN=i;
		}
		temp=grid[MAX];
		grid[MAX]=grid[MIN];
		grid[MIN]=temp;
		for(long long int i=grid.size()-1; i>=0; i--)
			maxNum=(maxNum*10)+grid[i];
		printf("Case #%d: %lld %lld\n", k, minNum, maxNum);
	}
	return 0;
}