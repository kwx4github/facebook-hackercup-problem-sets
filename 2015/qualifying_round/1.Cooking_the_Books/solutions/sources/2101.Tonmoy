
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <stdlib.h>
#include <iterator>
#include <sstream>
#include <numeric>
#include <fstream>
#include <numeric>
#include <vector>
#include <cctype>
#include <math.h>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
//#include <windows.h>
using namespace std;

#define FRE(i,a,b)  for(i = a; i <= b; i++)
#define FRL(i,a,b)  for(i = a; i < b; i++)
#define mem(t, v)   memset ((t) , v, sizeof(t))
#define sqr(x)      (x)*(x)
#define all(x)      x.begin(),x.end()
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c) scanf("%d %d %d", &a, &b, &c)
#define D(x)        cout<<#x " = "<<(x)<<endl
#define pf          printf
#define VI          vector <int>
#define pii         pair <int, int>
#define pll         pair <LL, LL>
#define pb          push_back
#define mp          make_pair
#define sz          size()
#define ins         insert
#define fi          first
#define se          second
#define xx          first
#define yy          second
#define inf         (1<<29)
#define MOD         100007
#define eps         1e-8
#define MAX         100000

typedef long long int LL;
typedef double db;

//int dx[] = {+0,+1,+0,-1};
//int dy[] = {+1,+0,-1,+0};
//int dx[] = {-1,-1,-1,+0,+0,+1,+1,+1};
//int dy[] = {-1,+0,+1,-1,+1,-1,+0,+1};
//bool check(int n, int pos) {return (bool) (n & (1<<pos));}
//int Set(int n, int pos) {return n | (1<<pos); }

string str, cpy;


int main()
{
    freopen("cooking_the_books.txt", "r", stdin);
    freopen("out.txt", "w", stdout);

    int i, j, k, t, cs, n, mx, cnt, val, st, ed, mn, len, idx;
    char ch;

    sf(t);
    FRE(cs,1,t)
    {
        cin >> str;
        len = str.sz;

        pf("Case #%d: ", cs);

        if(len == 1)
            cout << str << " " << str << endl;

        else
        {
            cpy = str;
            FRL(i,0,len)
            {
                idx = -1;
                ch = 'a';

                FRL(j,i+1,len)
                    if( (str[j] != '0' || i) && str[j] < str[i])
                        if(str[j] <= ch)
                            ch = str[j], idx = j;

                if(idx+1)
                {
                    swap(cpy[i], cpy[idx]);
                    break;
                }
            }

            cout << cpy << " ";

            cpy = str;
            FRL(i,0,len)
            {
                idx = -1;
                ch = 0;
                FRL(j,i+1,len)
                    if(str[j] > str[i] && ch <= str[j])
                        ch = str[j], idx = j;

                if(idx+1)
                {
                    swap(cpy[i], cpy[idx]);
                    break;
                }
            }

            cout << cpy << endl;
        }
    }

    return 0;
}

