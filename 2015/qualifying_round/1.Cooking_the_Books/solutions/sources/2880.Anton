#define _CRT_SECURE_NO_DEPRECATE
#define _SECURE_SCL 0
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

#define MOD 1000000007

using namespace std;

int main(){
    freopen( "input.txt", "r", stdin );
    freopen( "output.txt", "w", stdout );
    
    int tc; scanf( "%d", &tc );
    
    for ( int _ = 0; _ < tc; _++ ) {
        string s, res_min, res_max;
        cin >> s;
        res_min = res_max = s;
        
        if ( s.length() > 1 ) {
            for ( int i = 0; i < s.length() - 1; i++ ) {
                int max_pos = -1;
                for ( int j = i + 1; j < s.length(); j++ ) {
                    if ( max_pos == -1 || (s[max_pos] < s[j]) ) {
                        max_pos = j;
                    }
                }
                if ( max_pos > -1 && s[max_pos] > s[i] ) {
                    swap( res_max[ i ], res_max[max_pos] );
                    break;
                }
            }
            for ( int i = 0; i < s.length() - 1; i++ ) {
                int min_pos = -1;
                for ( int j = i + 1; j < s.length(); j++ ) {
                    if ( min_pos == -1 || (s[min_pos] > s[j]) ) {
                        if ( i != 0 || s[j] != '0' ) {
                            min_pos = j;
                        }
                    }
                }
                if ( min_pos > -1 && s[min_pos] < s[i] ) {
                    swap( res_min[ i ], res_min[min_pos] );
                    break;
                }
            }
        }
        printf( "Case #%d: %s %s\n", _+1, res_min.c_str(), res_max.c_str() );
    }

    return 0;
}
