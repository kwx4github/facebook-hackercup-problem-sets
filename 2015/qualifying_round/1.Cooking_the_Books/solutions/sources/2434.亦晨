#include <iostream>
#include <string>

using namespace std;

int ctoi(char c) {
    int i = (int)(c - '0');
    return i;
}

void swap(string a, string b) {
    if (a == b) {
        return;
    }
    string temp;
    temp = a;
    a = b;
    b = temp;
}

int main(int argc, char const* argv[])
{
    int t, digit_max, digit_min, max_axis, min_axis;
    int max_start_axis, min_start_axis, string_length;
    string n[100];

    cin >> t;
    for (int i = 0; i < t; i++) {
        cin >> n[i];

        digit_min = 9;
        digit_max = 0;
        max_axis = min_axis = max_start_axis = min_start_axis = 0;
        string_length = n[i].length();

        for (int j = 0; j < string_length; j++) {
            if (n[i].length() == 0 && n[i] == "0") {
                break;
            }

            if (digit_max <= ctoi(n[i][j])) {
                digit_max = ctoi(n[i][j]);
                max_axis = j;
            }
            if (j == string_length - 1 && n[i][max_axis] == n[i][max_start_axis]) {
                j = max_start_axis;
                max_start_axis++;

                digit_max = 0;
            }

            if (max_start_axis == string_length) {
                max_start_axis--;
            }
            //cout << digit_max << ' ' << max_axis << ' ' << max_start_axis << endl;
            //cout << n[i][max_axis] << ' ' << n[i][max_start_axis] << endl;
        }

        for (int j = 0; j < string_length; j++) {
            if (n[i].length() == 0 && n[i] == "0") {
                break;
            }

            if (min_start_axis == 0) {
                if (digit_min >= ctoi(n[i][j]) && n[i][j] != '0') {
                    digit_min = ctoi(n[i][j]);
                    min_axis = j;
                }
                if (j == string_length - 1 && n[i][min_axis] == n[i][min_start_axis]) {
                    j = min_start_axis;
                    min_start_axis++;

                    digit_min = 9;
                }
            } else {
                if (digit_min >= ctoi(n[i][j])) {
                    digit_min = ctoi(n[i][j]);
                    min_axis = j;
                }
                if (j == string_length - 1 && n[i][min_axis] == n[i][min_start_axis]) {
                    j = min_start_axis;
                    min_start_axis++;

                    digit_min = 9;
                }
            }

            if (min_start_axis == string_length) {
                min_start_axis--;
            }
            //cout << digit_min << ' ' << min_axis << ' ' << min_start_axis << endl;
        }

        cout << "Case #" << i + 1 << ": ";
        swap(n[i][min_start_axis], n[i][min_axis]);
        cout << n[i];
        swap(n[i][min_start_axis], n[i][min_axis]);
        swap(n[i][max_start_axis], n[i][max_axis]);
        cout << " " << n[i] << endl;
    }

    return 0;
}
