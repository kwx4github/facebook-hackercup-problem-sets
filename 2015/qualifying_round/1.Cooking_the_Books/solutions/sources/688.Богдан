import java.io.*;
import java.util.*;

public class Main {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(System.out, true);
    static StringTokenizer st;

    public static void main(String[] args) throws Exception {
        int tests = nextInt();
        for(int t = 1;t <= tests;t++) {
            char[] s = nextToken().toCharArray();
            int min = 1000000000;
            int max = 0;
            for(int i = 0;i < s.length;i++) {
                for(int j = 0;j < s.length;j++) {
                    swap(s, i, j);
                    if(s[0] != '0') {
                        min = Math.min(min, Integer.parseInt(String.valueOf(s)));
                        max = Math.max(max, Integer.parseInt(String.valueOf(s)));
                    }
                    swap(s, i, j);
                }
            }
            out.println("Case #"  + t + ": " + min + " " + max);
        }
    }

    public static void swap(char[] arr, int i, int j) {
        char c = arr[i];
        arr[i] = arr[j];
        arr[j] = c;
    }

    public static int nextInt() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Integer.parseInt(st.nextToken());
    }

    public static long nextLong() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Long.parseLong(st.nextToken());
    }

    public static double nextDouble() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Double.parseDouble(st.nextToken());
    }

    public static String nextToken() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return st.nextToken();
    }

}