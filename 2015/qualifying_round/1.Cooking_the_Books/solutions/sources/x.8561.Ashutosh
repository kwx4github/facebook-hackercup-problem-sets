import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.LineNumberReader;

/**
 *
 * @author Ashu
 */
public class CookingTheBooks {

    private static File f = new File("C:\\Users\\Ashu\\Desktop\\SolutionCTB.txt");
    
    public static String smallest(int[] xray) {

        int temp, x, y, z, t, s = -1;
        int i = xray.length - 1;
        while (i > 0) {
            if (xray[i] == 0) {
                i -= 1;
            } else {
                break;
            }
        }
        x = y = z = t = i;
        i = xray.length - 1;

        while (i >= 0) {
            if (xray[i] > xray[z]) {
                x = i;
                y = z;
            }
            if (xray[i] < xray[y] && xray[i] != 0) {
                z = i;
            }
            if (xray[i] == 0 && s == -1) {
                s = i;
            }
            if (xray[i] != 0 && i > 0) {
                t = i;
            }
            i -= 1;
        }
        if (s != -1 && x != 0 && x < s) {
            y = s;
            i = x = t;
        } else if (x == y && s != -1) {
            i = t;
            if (i < s) {
                y = s;
                x = i;
            }
        }
        /* SWAPPING !! */
        temp = xray[y];
        xray[y] = xray[x];
        xray[x] = temp;

        String result = "";
        
        for (int k = 0; k < xray.length; k++) {
            result += xray[k];
        }
        /* to handle cases like 10, 100, 1000, 10000 etc */
        for (int k = 10; k <= 100000000; k *= 10) {
            if (Integer.parseInt(result) % k == 1) {
                String kkString = "";
                for (int p = result.length()-1; p >= 0; p--) {
                    kkString += result.charAt(p);
                }
                return kkString;
            }
        }
        
        return result;
    }

    public static String largest(int[] xray) {

        boolean isOne = false;
        for (int i : xray) {
            if (i == 1 || i == 0) {
                isOne = true;
            } else if (i > 1) {
                isOne = false;
                break;
            }
        }

        if (isOne == true) {
            int i = 0;
            int j = xray.length;

            while (i < j) {
                if (xray[i] == 0) {
                    i++;
                } else {
                    xray[i] = xray[--j];
                    xray[j] = 1;
                }
            }
        } else {
            int max = xray[0], index, loc = -1;
            for (index = 0; index < xray.length; index++) {
                if (xray[index] >= max) {
                    max = xray[index];
                    loc = index;
                }
            }
            
            for (int m = 0; m < xray.length; m++) {
                if (max == xray[m] && m < loc) {}
                else {
                    /* SWAPPING !! */
                    int t = xray[m];
                    xray[m] = xray[loc];
                    xray[loc] = t;
                    break;
                }
            }
        }

        String result = "";
        if (isOne == true) {
            for (int k = xray.length - 1; k >= 0; k--) {
                result += xray[k];
            }
        } else {
            for (int k = 0; k < xray.length; k++) {
                result += xray[k];
            }
        }

        return result;
    }

    
    public static void main(String[] args) throws IOException {
        FileReader fr = new FileReader("C:\\Users\\Ashu\\Downloads\\cooking_the_books.txt");
        LineNumberReader lnr = new LineNumberReader(fr);
        int t = Integer.parseInt(lnr.readLine().trim());
        FileWriter fw = new FileWriter(f);

        for (int i = 0; i < t; i++) {
            String str = lnr.readLine().trim();
            int[] arr1 = new int[str.length()];
            int[] arr2 = new int[str.length()];
            for (int j = 0; j < str.length(); j++) {
                arr1[j] = Integer.parseInt(String.valueOf(str.charAt(j)));
                arr2[j] = arr1[j];
            }
            String res = "" + smallest(arr1);
            res += " " + largest(arr2);
            fw.write("Case #" + (i+1) + ": " + res + "\n");
        }
        fw.flush();
    }
}
