// {{{ Boilerplate Code <--------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define ALL(A)     (A).begin(), (A).end()

using namespace std;

// }}}

int getNum(string N, int pos1, int pos2){
	char tmp=N[pos1];
	N[pos1]=N[pos2];
	N[pos2]=tmp;

	int ret=0;

	FOR(i,0,N.length()){
		ret=ret*10+(N[i]-'0');
	}
	return ret;

}

int main(){
	int T;
	cin>>T;


	for(int iter=0; iter<T; iter++){
		string N;
		cin>>N;
		cout<<"Case #"<<(iter+1)<<": ";



		int mi=0;

		FOR(i,0,N.length()){
			mi=mi*10+(N[i]-'0');
		}

		int ma=mi;

		FOR(i,0,N.length()){
			FOR(j,i+1,N.length()){
				if(i==0 && N[j]=='0')
					continue;

				int tmp=getNum(N,i,j);
				mi=min(mi,tmp);
				ma=max(ma,tmp);
			}
		}
		


		cout<<mi<<" "<<ma<<endl;

	}

}
