import Control.Monad

solve (<>) xs =
    foldr (<>) xs [set i1 a2 $ set i2 a1 xs | (i1, a1) <- ys, (i2, a2) <- ys, i1 < i2, i1 /= 0 || a2 /= '0']
  where
    ys = zip [0..] xs  
    set pos value list = take pos list ++ [value] ++ drop (pos + 1) list

main = do
    input <- getContents
    forM_ (zip [1..] $ drop 1 $ lines $ input) $ \(id, x) -> do
        putStrLn $ "Case #" ++ show id ++ ": " ++ solve min x ++ " " ++ solve max x
