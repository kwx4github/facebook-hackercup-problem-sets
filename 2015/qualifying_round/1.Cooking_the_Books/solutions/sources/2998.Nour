#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <fstream>

using namespace std;

#define INF 1e12
#define ll long long
#define vi vector<ll>

void p(vi v){
    for(int i = 0; i < v.size(); i++) cout <<  v[i] << " "; cout << endl;
}

vi breakIntoVector(ll n){

    vi digits;
    while(n){
        digits.push_back(n%10);
        n /= 10;
    }
    return digits;
}

ll combineIntoVar(vi v){
    int len = v.size();
    ll res = 0;
    for(int i = 0; i < len; i++)
        res += v[i] * pow(10,i);
    return res;
}

vi calAllSwaps(ll n){
    vi allSwaps, curNum = breakIntoVector(n);
    int len = curNum.size();

    allSwaps.push_back(n);
    for(int i = 0; i < len-1; i++)
        for(int j = i+1; j < len; j++){
            swap(curNum[i],curNum[j]);
            if(curNum[curNum.size()-1] != 0)
                allSwaps.push_back(combineIntoVar(curNum));
            swap(curNum[j],curNum[i]);
        }
    return allSwaps;
}

int main()
{
    //ifstream cin("cooking_the_books.txt");
    //ofstream cout("cooking_output.txt");
    int t; cin >> t;
    for(int i = i; i <= t; i++){
        ll n; cin >> n;
        if(n == 0){
            cout << "Case #" << i << ": 0 0" << endl;
            continue;
        }
        if(n/10 == 0){
            cout << "Case #" << i << ": " << n << " " << n << endl;
            continue;
        }
        vi allSwaps = calAllSwaps(n);
        cout << "Case #" << i << ": " <<  *min_element(allSwaps.begin(),allSwaps.end()) << " " << *max_element(allSwaps.begin(),allSwaps.end()) << endl;
    }

    return 0;
}
