#include<iostream>
#include<cstring>
#include<vector>
#include<algorithm>
using namespace std;
typedef int i;
typedef unsigned long long int ul;
#define sz(a) int ((a).size())
#define all(c) (c).begin(),(c).end()
unsigned int index(string s, char c){
	for(i j=sz(s)-1;j>=0;j--){
		if(c==s[j]) return j;
	}
}
int main(){
	i t,tmp;
	ul n;
	char mn,mx;
	string s;
	cin>>t;
	for(i k=1;k<=t;k++)
	{
		cin>>s;
		string tm(s);
		string sm(s);
		sort(all(tm));
		mn=tm[0];
		mx=*(tm.end()-1);
		i c,cnt =count(all(tm),mx);
		c=cnt;
		i mc,mcnt=count(all(tm),mn);
		mc=mcnt;
		i mind=0;
		i ind=sz(tm)-1;
		for(i j=0;j<sz(s);j++)
		{
			if(mx==s[j]){ 
				c--;
				ind--;
				if(c==0) {
					mx=tm[ind];
					cnt=c=count(all(tm),mx);
				}
			}
			else if(mx>s[j])
			{
				swap(s[j],s[index(s,mx)]);
				break;
			}
		}
		char nmn=tm[mcnt];
		for(i j=0;j<sz(sm);j++)
		{	
			if(mn==sm[j]){ 
				mc--;
				mind++;
				if(mc==0) {
					mn=tm[mind];
					mcnt=mc=count(all(tm),mn);
				}
			}
			else if(mn<sm[j])
			{	if(j==0 && mn=='0'){
				 	if(sm[j]==nmn)
						continue;
					else{
						swap(sm[j],sm[index(sm,nmn)]);
						break;
						}
				}
				swap(sm[j],sm[index(sm,mn)]);
				break;
			}
		}
		cout<<"Case #"<<k<<": "<<sm<<" "<<s<<endl;
	}
return 0;
}
