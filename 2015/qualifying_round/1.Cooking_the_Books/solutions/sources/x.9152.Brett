import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;


public class Cookingthebooks
{
    public static void main(String[] args)
    {
    	Queue<String> st = new LinkedList<String>();
        @SuppressWarnings("resource")
		Scanner obj = new Scanner(System.in);
        int totalNums = Integer.valueOf(obj.nextLine());
        int i = 1;
        while(totalNums-- != 0)
        {
            String numberInList = obj.nextLine();
            st.add(numberInList);
        }
        
        while(!st.isEmpty())
        {
        	String holder = st.remove();
            char val1[] = new char[holder.length()];
            val1 = new String(holder).toCharArray();
            char val2[] = new char[holder.length()];
            val2 = new String(holder).toCharArray();
        
            System.out.print("Case #"+ i++ +": ");
            swapLow(val1);
            System.out.print(" ");
            swapHigh(val2);
            totalNums--;
        }
    }
    
    public static void swapLow(char[]arr)
    {
        int index = 0;
        int lowVal = index;
        int secondLow = 1;
        int thirdLow = 2;
        char tmp;
        boolean isSwap = false;
        
        for(int i = 1; i < arr.length; i++)
        {
            if(Integer.valueOf(arr[i]) < Integer.valueOf(arr[lowVal]))
            {
                if(i > 1)
                {
                    thirdLow = secondLow;
                }
                secondLow = lowVal;
                lowVal = i;
                isSwap = true;
            }
            
            else if(Integer.valueOf(arr[i]) < Integer.valueOf(arr[secondLow]))
            {
                if(i > 1)
                {
                    thirdLow = secondLow;
                }
                secondLow = i;
                isSwap = true;
            }
        }
        
        if(isSwap && arr[lowVal] != '0'&& arr[lowVal] != arr[0])
        {
            tmp = arr[0];
            arr[0] = arr[lowVal];
            arr[lowVal] = tmp;
        }
        
        else if(isSwap && arr[lowVal] == '0')
        {
            tmp = arr[0];
            arr[0] = arr[secondLow];
            arr[secondLow] = tmp;
        }
        
        else if(isSwap)
        {
            tmp = arr[secondLow];
            arr[secondLow] = arr[thirdLow];
            arr[thirdLow] = tmp;
        }
        System.out.print(arr);
    }
    
    public static void swapHigh(char arr2[])
    {
        int index = 0;
        int highVal = index;
        int secondHigh = 0;
        int lowest = index;
        char tmp;
        boolean isSwap = false;
        
        for(int i = 1; i < arr2.length; i++)
        {
            if(Integer.valueOf(arr2[i]) < Integer.valueOf(arr2[lowest]))
            {
                lowest = i;
                isSwap = true;
            }
            
            if(Integer.valueOf(arr2[i]) > Integer.valueOf(arr2[highVal]))
            {
                
                secondHigh = highVal;
                highVal = i;
                isSwap = true;
            }
            
            else if(Integer.valueOf(arr2[i]) > Integer.valueOf(arr2[secondHigh]))
            {
                secondHigh = i;
            }
        }
        
        if(isSwap && arr2[0] != arr2[highVal])
        {
            tmp = arr2[0];
            arr2[0] = arr2[highVal];
            arr2[highVal] = tmp;
        }
        
        else if(isSwap && arr2[0] == arr2[highVal])
        {
            tmp = arr2[arr2.length-1];
            arr2[arr2.length-1] = arr2[lowest];
            arr2[lowest] = tmp;
        }
        
        System.out.println(arr2);
    }
}