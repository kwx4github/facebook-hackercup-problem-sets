#!/usr/bin/env python
import sys
from collections import Counter


def solve_large_foo(N):
    N = list(N)

    # Quick sanity check
    if sorted(N)[::-1] == N: return ''.join(map(str, N))
            
    # Get the counts...
    counter = Counter(N)
    
    # Find the swappable
    for index, value in enumerate(N):
        counter[value] -= 1

        if value == 9: continue

        swap_for = None
        for y in range(9, value, -1):
            if counter[y]:
                swap_for = y
                break

        if swap_for:
            for x in xrange(len(N) - 1, index, -1):
                if N[x] == swap_for:
                    N[index], N[x] = N[x], N[index]
            break
            
    return "".join(map(str, N))


def solve_small_foo(N):
    N = list(N)
    
    # Quick sanity check
    if sorted(N) == N: return ''.join(map(str, N))
            
    # Get the counts...
    counter = Counter(N)
   
    # Find the swappable
    for index, value in enumerate(N):

        counter[value] -= 1

        if value == 0: continue

        swap_for = None
        if index == 0: start = 1
        else: start = 0
        for y in range(start, value):
            if counter[y]:
                swap_for = y
                break

        if swap_for is not None:
            for x in xrange(len(N) - 1, index, -1):
                if N[x] == swap_for:
                    N[index], N[x] = N[x], N[index]
            break
    
    return "".join(map(str, N))


def main():
    T = int(sys.stdin.readline().strip())

    for t in xrange(T):
        N = map(int, sys.stdin.readline().strip())
        print "Case #%d: %s %s" % (t + 1, solve_small_foo(N), solve_large_foo(N))
       

if __name__ == '__main__':
    main()
