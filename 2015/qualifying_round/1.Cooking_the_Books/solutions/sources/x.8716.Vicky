#include<iostream>
#include <algorithm>    
#include <vector>
#define max 9

using namespace std ;
inline void swap(int& i, int& j) {int t = i;i = j;j = t;}
inline int print2Smallest(long long  arr[], long long  arr_size){
int i, fi, se ;
    
if (arr_size < 2) return 1;
    fi = se = arr[0];
    for (i = 0; i < arr_size ; i ++){
        if (arr[i] < fi) {
            se = fi; fi = (int)arr[i];}
        else if (arr[i] < se && arr[i] != fi)
            se = (int)arr[i]; }
    
  return se;
}

bool myfn(int i, int j) { return i<j; }

int main() {
long long num , T;
cin>>T;
long long k=1;
while (k<=T)
{
cin>>num;

long long dup =num;
long long rev[max] ; 
long long norm1[max];
long long norm2[max];
int digits=0 ;
for(;dup>0;digits++)
{  
   rev[digits]=dup%10;
   dup=dup/10;
}

int copy=digits-1;
long long min ,ma , secmin;

for(int i=0;i<digits;i++,copy--) norm1[i]=rev[copy];

for(int i=0;i<digits;i++) norm2[i]=norm1[i];

min=*std::min_element(norm1,norm1+digits,myfn);
ma=*std::max_element(norm2,norm2+digits,myfn);
secmin=print2Smallest(norm1,digits);
for(int i=0;i<digits;i++) {
     if(min!=0) {
     if(norm1[i]==min) swap(norm1[i],norm1[0]);
         
     }
     else if(min==0) {
        if(norm1[i]==secmin) swap(norm1[i],norm1[0]);
      
     }
          
}
cout<<"Case #"<<k<<": ";
for(int i=0;i<digits;i++)
{
        cout<<norm1[i];
}
cout<<" ";
for(int i=0;i<digits;i++)
{
     if(norm2[i]==ma) swap(norm2[i],norm2[0]);
        
}

for(int i=0;i<digits;i++) cout<<norm2[i];

cout<<endl;
k++;
}
return 0;
}
