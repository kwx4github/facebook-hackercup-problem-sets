#define _CRT_SECURE_NO_DEPRECATE
#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include <stdio.h>

#define LL long long
using namespace std;
vector<int>v, max, min;
int p;

LL convert_num(vector<int>nm)
{
	LL nam=0;
	for (int i = 0;i<=::p; i++)
		nam = (nam * 10) + nm[i];
	return nam;
}
pair<int, int> min_right(int s)
{
	pair<int, int>val;
	int _max = v[s], pos = s, tmp, flag =1;
	if (s == 1)
	{
		if (_max == 0)
		{
			tmp = _max;
			_max = 10;
		}
		for (int i = (s + 1); i <= p; i++)
		{
			if (v[i] <= _max && v[i]!=0)
			{
				_max = v[i];
				pos = i;
				flag = 0;
			}
		}
	}
	else
	{
		for (int i = (s + 1); i <= p; i++)
		{
			if (v[i] <= _max)
			{
				_max = v[i];
				pos = i;
			}
		}
	}
	val.first = _max;
	val.second = pos;
	return val;
}
pair<int, int> max_right(int s)
{
	pair<int, int>val;
	int _max = v[s], pos = s;
	for (int i = (s + 1); i <= p; i++)
	{
		if (v[i] >= _max)
		{
			_max = v[i];
			pos = i;
		}
	}
	val.first = _max;
	val.second = pos;
	return val;
}
int main()
{
	pair<int, int> p1, p2;
	LL num, num_min, num_max;
	int T, j=1, temp;
	//freopen("input.txt", "r",stdin);
	//freopen("out.txt", "w", stdout);
	cin >> T;
	while (j <= T)
	{
		v.clear();
		::max.clear();
		::min.clear();
		cin >> num;
		if (num < 10)
		{
			num_min = num;
			num_max = num;
		}
		else
		{
			while (num)
			{
				v.push_back(num % 10);
				num /= 10;
			}
			reverse(v.begin(), v.end());
			::max = ::min = v;
			::p = v.size() - 1;

			for (int i = 0; i < ::p; i++)
			{
				p2 = min_right(i + 1);
				if (p2.first<v[i])
				{
					temp = ::min[i];
					::min[i] = ::min[p2.second];
					::min[p2.second] = temp;
					break;
				}
			}

			for (int i = 0; i < ::p; i++)
			{
				p1 = max_right(i + 1);
				if (p1.first>v[i])
				{
					temp = ::max[i];
					::max[i] = ::max[p1.second];
					::max[p1.second] = temp;
					break;
				}
			}
			num_min = convert_num(::min);
			num_max = convert_num(::max);
		}
		cout << "Case " << "#" << j << ": " << num_min << " " << num_max << "\n";
		j++;
	}
	return 0;
}
