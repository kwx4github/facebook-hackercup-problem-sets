/*kee template*/
#include<bits/stdc++.h>
using namespace std;

#define pb emplace_back
#define ll long long
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define FOR(i,k,n) for(decltype(n) (i) = (k);(i)<(n);(i)++)
#define all(v) v.begin(),v.end()
#define SORT(v) sort(all(v))
#define SORTd(v) sort(v.rbegin(),v.rend())
#define minv(v) min_element(all(v))
#define maxv(v) max_element(all(v))
#define V vector

string binary( ll n ){
	string result;
	do result+= '0' + (n & 1);
	while (n >>= 1) ;
	reverse( result.begin(), result.end() );
	return result;
}
int countSubstr(const string& str, const string& sub){
	if (sub.length() == 0) return 0;
	int count = 0;
	for (size_t offset = str.find(sub); offset != string::npos;
			offset = str.find(sub, offset + sub.length())){
		++count;
	}
	return count;
}
/***********************************************/
/* Dear GCC compiler:
 * If my code doesn't compile, this doesn't mean it's wrong.
 * It just mean that you don't understand what I want.
 * Here's my safety pig, I hope my code compile and get accepted.
 * _._ _..._ .-',     _.._(`))
 *'-. `     '  /-._.-'    ',/
 *   )         \            '.
 *  / _    _    |             \
 * |  a    a    /              |
 * \   .-.     /               ;
 *  '-('' ).-'       ,'       ;
 *     '-;           |      .'
 *        \           \    /
 *        | 7  .__  _.-\   \
 *        | |  |  ``/  /`  /
 *       /,_|  |   /,_/   /
 *          /,_/      '`-'
 */
string output(string input){
	int imax = 0,imin = 0;
	bool min, max;
	min = max = true;
	string res = input+ " "+ input;
	for(int k = 0;k<(int)input.size()-1;k++){
		imin = imax = k;
		for(int i = k+1;i<(int)input.size();i++){
			if(max && input[i] > input[imax])imax = i;
			if(min && input[i] < input[imin] && !(input[i]=='0' && k == 0))imin = i;
		}
		if(imin!=k){
			min = false;
			swap(res[k],res[imin]);
		}
		if(imax!=k){
			max = false;
			swap(res[input.size()+1+imax],res[input.size()+1+k]);
		}
		if(!max && !min)break;
	}
	return res;
}
int main (){
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	freopen ("input.txt","r+",stdin);
	freopen ("myfile.txt","w+",stdout);
	int t = 0;
	string cur;
	cin>>t;
	for(int p = 1;p<=t;p++){
		cin>>cur;
		cout<<"Case #"<<p<<": "<<output(cur);
		if(p!=t)cout<<endl;
	}
	return 0;
}
/**/
