#include<iostream>
#include<vector>
#include<string>
#include<math.h>
#include<climits>
using namespace std;
int findmax(int arr[],int curr,int len)
{
	int max=INT_MIN;
	int index;
	for(int i=curr;i<len;i++)
	{
		if(arr[i]>=max)
		{
			max=arr[i];
			index=i;
		}
	}
	return index;
}
int findmin(int arr[],int curr,int len)
{
	int min=INT_MAX;
	int index;
	for(int i=curr;i<len;i++)
	{
		if(arr[i]<min)
		{
			min=arr[i];
			index=i;
		}
	}
	return index;
}
int findmin_(int arr[],int curr,int len)
{
	int min=INT_MAX;
	int index;
	for(int i=curr;i<len;i++)
	{
		if(arr[i]!=0)
		{
			if(arr[i]<min)
			{
				min=arr[i];
				index=i;
			}
		}
	}
	return index;
}
int main()
{	
	int cases;
	int num;
	int len;
	
	cin>>cases;
	for(int i=0;i<cases;i++)
	{
		cin>>num;
		if(num!=0)
		{
			len=log10(num);
			len++;
			int large=num,small=num;;
			if(len!=1)
			{
				int maxarr[len],minarr[len];
				int temp=num;
				int l=len;
				int curr=-1;
				int max_in;
				int min_in;
				int flag=0;
				large=0;
				small=0;
				while(temp)
				{
					l--;
					minarr[l]=maxarr[l]=temp%10;
					if(minarr[l]==0)
					{
						if(flag==0)
						{
							flag=l;
						}
					}	
				
					temp=temp/10;
				}
				do
				{	
					curr++;
					if(curr==len)
					{
						break;
					}
					max_in=findmax(maxarr,curr,len);
				}while(maxarr[max_in]==maxarr[curr]);
				if(curr!=len)
				{	
					temp=maxarr[curr];
					maxarr[curr]=maxarr[max_in];
					maxarr[max_in]=temp;
				}
				for(int j=0;j<len;j++)
				{
					large=large*10+maxarr[j];
				}
				curr=-1;
				if(flag==0)
				{
					do
					{	
						curr++;
						if(curr==len)
						{
							break;
						}
						min_in=findmin(minarr,curr,len);
				
					}while(min_in==curr);
					if(curr!=len)
					{	
						temp=minarr[curr];
						minarr[curr]=minarr[min_in];
						minarr[min_in]=temp;
					}
					for(int j=0;j<len;j++)
					{
						small=small*10+minarr[j];
					}
			
				}
				else
				{
					curr++;
					min_in=findmin_(minarr,curr,len);
					if(min_in==curr)
					{
						do
						{	
							curr++;
							if(curr==len)
							{
								break;
							}
							min_in=findmin(minarr,curr,len);
				
						}while(min_in==curr);	
						if(curr!=len)
						{	
							temp=minarr[curr];
							minarr[curr]=minarr[flag];
							minarr[flag]=temp;
						}
					}
					else
					{
						curr++;
						min_in=findmin_(minarr,curr,len);
						temp=minarr[0];
						minarr[0]=minarr[min_in];
						minarr[min_in]=temp;
					}
					for(int j=0;j<len;j++)
					{
						small=small*10+minarr[j];
					}
				}
			}
			cout<<"Case #"<<i+1<<": "<<small<<" "<<large<<endl;
		}
		else
		{
			cout<<"Case #"<<i+1<<": 0 0"<<endl;
		}
		/*len=log10(num);
		len++;
		int large=num,small=num;;
		if(len!=1)
		{
			int maxarr[len],minarr[len];
			int temp=num;
			int l=len;
			int curr=-1;
			int max_in;
			int min_in;
			int flag=0;
			large=0;
			small=0;
			while(temp)
			{
				l--;
				minarr[l]=maxarr[l]=temp%10;
				if(minarr[l]==0)
				{
					if(flag==0)
					{
						flag=l;
					}
				}
				
				temp=temp/10;
			}
			do
			{	
				curr++;
				if(curr==len)
				{
					break;
				}
				max_in=findmax(maxarr,curr,len);
				
			}while(max_in==curr);
			if(curr!=len)
			{	temp=maxarr[curr];
				maxarr[curr]=maxarr[max_in];
				maxarr[max_in]=temp;
			}
			for(int j=0;j<len;j++)
			{
				large=large*10+maxarr[j];
			}
			curr=-1;
			if(flag==0)
			{
				do
				{	
					curr++;
					if(curr==len)
					{
						break;
					}
					min_in=findmin(minarr,curr,len);
				
				}while(min_in==curr);
				if(curr!=len)
				{	
					temp=minarr[curr];
					minarr[curr]=minarr[min_in];
					minarr[min_in]=temp;
				}
				for(int j=0;j<len;j++)
				{
					small=small*10+minarr[j];
				}
			
			}
			else
			{
				curr++;
				min_in=findmin_(minarr,curr,len);
				if(min_in==curr)
				{
					do
					{	
						curr++;
						if(curr==len)
						{
							break;
						}
						min_in=findmin(minarr,curr,len);
				
					}while(min_in==curr);	
					if(curr!=len)
					{	
						temp=minarr[curr];
						minarr[curr]=minarr[flag];
						minarr[flag]=temp;
					}
				}
				else
				{
					curr++;
					min_in=findmin_(minarr,curr,len);
					temp=minarr[0];
					minarr[0]=minarr[min_in];
					minarr[min_in]=temp;
				}
				for(int j=0;j<len;j++)
				{
					small=small*10+minarr[j];
				}
			}
		}
		cout<<"Case #"<<i+1<<": "<<small<<" "<<large<<endl;*/	
	}
	return 0;
}

