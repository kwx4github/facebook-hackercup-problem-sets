T = int(raw_input())

def findSwap(N, N_char, last_pos, func):
	swapped = False
	size = len(N)
	s=0
	while not swapped and s < size:
		e = N[s]
		if func == "min": 
			if s == 0: seq = range(1,e)
			else: seq = range(0,e)
		else: seq = range(9,e,-1)
		for f in seq:
			if last_pos[f] > -1 and last_pos[f] > s:
				p = last_pos[f]
				newnum = N_char[:s] + N_char[p]+N_char[s+1:p]+N_char[s]+N_char[p+1:]
				swapped = True
				break
		s += 1
	if not swapped: newnum = N_char
	return newnum

for i in range(T):
	N_char = raw_input().strip()
	N = map(int,N_char)
	last_pos = [-1 for _ in range(10)]
	for j,n in enumerate(N):
		if last_pos[n] < j: last_pos[n] = j
	print "Case #%d: %s %s" % (i+1, findSwap(N,N_char,last_pos,"min"), findSwap(N,N_char,last_pos,"max"))
	
