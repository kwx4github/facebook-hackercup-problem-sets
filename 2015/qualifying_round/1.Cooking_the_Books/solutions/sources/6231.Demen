#include <stdio.h>
#include <assert.h>

void get_vector (int *v, int n)
{
  int aux[20] = {0};

  int i;
  for (i = 0; n != 0; ++i)
    {
      aux[i] = n % 10;
      n /= 10;
    }

  v[0] = i;
  int j;
  for (j = 1; j <= i; ++j)
    v[j] = aux [i - j];
}

void swap (int *a, int *b)
{
  int tmp = *a;
  *a = *b;
  *b = tmp;
}

void print_min (int *v)
{
  int min = 1; int vechi_min = v[min];

  int i;
  for (i = 1; i <= v[0]; ++i)
    if (v[i] <= v[min] && v[i] != 0)
      min = i;

  if (min != 1 && vechi_min != v[min])
    {
      int poz = min;
      swap (&v[1], &v[poz]);
      
      for (i = 1; i <= v[0]; ++i)
	printf ("%d", v[i]);
      printf (" ");
      
      swap (&v[1], &v[poz]);
    }
  else
    {
      int k = 1;
      while (v[k++] == v[min]);

      int min2 = k - 1;
      for (i = k - 1; i <= v[0]; ++i)
	if (v[i] <= v[min2])
	  min2 = i;

      swap (&v[k - 1], &v[min2]);
      
      for (i = 1; i <= v[0]; ++i)
	printf ("%d", v[i]);
      printf (" ");
      
      swap (&v[k - 1], &v[min2]);
    }
  
}

void print_max (int *v)
{
  int max = 1; int vechi_max = v[max];

  int i;
  for (i = 1; i <= v[0]; ++i)
    if (v[i] >= v[max])
      max = i;

  if (max != 1 && vechi_max != v[max])
    {
      int poz = max;
      swap (&v[1], &v[poz]);
      
      for (i = 1; i <= v[0]; ++i)
	printf ("%d", v[i]);
      printf (" ");
      
      swap (&v[1], &v[poz]);
    }
  else
    {
      int k = 1;
      while (v[k++] == v[max]);

      int max2 = k - 1;
      for (i = k - 1; i <= v[0]; ++i)
	if (v[i] >= v[max2])
	  max2 = i;

      swap (&v[k - 1], &v[max2]);
      
      for (i = 1; i <= v[0]; ++i)
	printf ("%d", v[i]);
      printf (" ");
      
      swap (&v[k - 1], &v[max2]);
    }
}

int main ()
{
  int t;
  assert (scanf ("%d", &t) == 1);

  int nr_of_test;
  for (nr_of_test = 1; nr_of_test <= t; ++nr_of_test)
    {
      long long n;
      assert (scanf ("%lld", &n) == 1);

      if (n == 0)
	{
	  printf ("Case %d: 0 0\n", nr_of_test);
	  continue;
	}

      int v[20];
      get_vector (v, n);

      printf ("Case %d: ", nr_of_test);
      print_min (v);
      print_max (v);
      printf ("\n");
    }
  
  return 0;
}
