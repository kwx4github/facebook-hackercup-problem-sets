#include <iostream>
#include <stdio.h>
#include <fstream>
using namespace std;
ofstream outfile;
char ch;
void writeAmt(string str,int startIndex,int caseIndex);
int main(int argc, const char * argv[]){
    outfile.open("/Users/vivekshivam/Desktop/DecietfulWar.txt");
    fstream fin("/Users/vivekshivam/Desktop/cooking_the_books.txt", fstream::in);
    char *ch1 = new char[10];
    int startIndex = 0,testCase = 0;
    while (fin >> noskipws >> ch) {
        if(ch == ' ' || ch == '\n'){
            ch1[startIndex] = '\0';
            testCase = atoi(ch1);
            break;
        }
        else{
            ch1[startIndex] = ch;
            startIndex++;
        }
    }
    delete [] ch1;
    for(int i = 0; i < testCase; i++){
        char *ch1 = new char[10];
        int amt = 0; bool testCaseRead = false;
        startIndex = 0;
        while (fin >> noskipws >> ch) {
            if(ch == ' ' || ch == '\n'){
                ch1[startIndex] = '\0';
                amt = atoi(ch1);
                cout <<"\n amt "<< amt;
                writeAmt(string(ch1),startIndex,i);
                testCaseRead = true;
                break;
            }
            else{
                ch1[startIndex] = ch;
                printf("\n ch %c ",ch);
                startIndex++;
            }
        }
        if(!testCaseRead) {
            ch1[startIndex] = '\0';
            writeAmt(string(ch1),startIndex,i);
        }
        delete [] ch1;
    }
    return 0;
}
void writeAmt(string str,int startIndex,int caseIndex){
    const char *ch1 = str.c_str();
    int smallAmt = 0,largeAmt = 0,smalIndex = 0,largeIndex = 0,smallExchangeIndx = 0,LargeExchangeIndx = 0;
    bool foundSmallest = false, foundLargest = false;
    for(int k = 0;startIndex > 1 && k < startIndex;k++){
        smallAmt = largeAmt = ch1[k] - '0';
        LargeExchangeIndx = (!foundLargest) ? k : LargeExchangeIndx;
        smallExchangeIndx = (!foundSmallest) ? k : smallExchangeIndx;
        smalIndex = largeIndex = k;
        for(int l = k + 1;l < startIndex;l++){
            int value = ch1[l]  - '0';
            if(k == 0 && value == 0){
                
            }else{
                if(smallAmt > value){
                    smallAmt = value;
                    smalIndex = l;
                    foundSmallest = true;
                }
                if(largeAmt < value){
                    largeAmt = value;
                    largeIndex = l;
                    foundLargest = true;
                }
            }
        }
        if(foundSmallest && foundLargest)
            break;
    }
    string smallAmtstr = str, largeAmtstr = str;
    if(foundSmallest){
        smallAmtstr[smalIndex] = str[smallExchangeIndx];
        smallAmtstr[smallExchangeIndx] = str[smalIndex];
    }
    if(foundLargest){
        largeAmtstr[largeIndex] = str[LargeExchangeIndx];
        largeAmtstr[LargeExchangeIndx] = str[largeIndex];
    }
    if(smallAmtstr[0] - '0' == 0)
        smallAmtstr = str;
    if(largeAmtstr[0] - '0' == 0)
        largeAmtstr = str;
    char *data = new char[100];
    sprintf(data, "Case #%d: %s %s",(caseIndex+1),smallAmtstr.c_str(),largeAmtstr.c_str());
    outfile << data << endl;
}