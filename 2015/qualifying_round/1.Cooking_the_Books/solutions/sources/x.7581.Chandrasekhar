import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class fb1
{
	static private Scanner scanner = null;
	static private BufferedWriter bw = null;
	
	private static void init()
	{
		FileInputStream fis = null;
		try {
			fis = new FileInputStream("C:/input.txt");
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		scanner = new Scanner(fis);
		
		
		
		File fout = new File("C:/output.txt");
		FileOutputStream fos = null;
		try {
			fos = new FileOutputStream(fout);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	 
		bw = new BufferedWriter(new OutputStreamWriter(fos));
	}
	
	private static void release()
	{
		scanner.close();
		try {
			bw.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	private static String getInterChangedNum(String num, int index1, int index2)
	{
		String interChangedNum = num;
		
		if(index1 < index2)
		{
			interChangedNum = num.substring(0, index1)+num.substring(index2, index2+1)+num.substring(index1+1, index2)+
								num.substring(index1, index1+1)+num.substring(index2+1, num.length());
			//String a = num.substring(0, index1);
			//String b = num.substring(index2, index2+1);
			//String c = num.substring(index1+1, index2);
			//String d = num.substring(index1, index1+1);	
			//String e = num.substring(index2+1, num.length());
			//interChangedNum = num.substring(0, index1)+num.substring(index2)+num.substring(index1+1, index2)
				//				+num.substring(index1);
			/*if(index2+1 < num.length())
			{
				interChangedNum = interChangedNum+num.substring(index2+1, num.length());
			}*/
		}
		
		return interChangedNum;
	}
	
	private static void findNum()
	{
		int numsCount = Integer.parseInt(scanner.nextLine());

		for(int k=0; k<numsCount && scanner.hasNextLine(); k++)
		{
			String num = scanner.nextLine();
			int smallIndex1 = -1, smallIndex2 = -1, bigIndex1 = -1, bigIndex2 = -1;
			int tmpBigNum = 10, tmpSmallNum = -1;
			boolean smallNumNotFound = true, bigNumNotFound = true;

			for(int i=0; i<num.length(); i++)
			{
				int firstNum = Integer.parseInt(num.substring(i, i+1));
				for(int j=i+1; j<num.length(); j++)
				{
					int secondNum = Integer.parseInt(num.substring(j, j+1));
					if((secondNum < firstNum)&&(secondNum != 0)&&(smallIndex2 >= smallIndex1)&&(secondNum <= tmpBigNum)&&(smallNumNotFound == true))
					{
						smallIndex1 = i;
						smallIndex2 = j;
						tmpBigNum = secondNum;
					}
					if((secondNum > firstNum)&&(secondNum != 0)&&(bigIndex2 >= bigIndex1)&&(secondNum >= tmpSmallNum)&&(bigNumNotFound == true))
					{
						bigIndex1 = i;
						bigIndex2 = j;
						tmpSmallNum = secondNum;
					}
				}
				if(tmpBigNum != 10)
				{
					smallNumNotFound = false;
				}
				if(tmpSmallNum != -1)
				{
					bigNumNotFound = false;
				}
				
				if((smallNumNotFound == false)&&(bigNumNotFound == false))
				{
					break;
				}
			}
			try {
				bw.write("Case #"+(k+1)+": "+getInterChangedNum(num, smallIndex1, smallIndex2)+" "+getInterChangedNum(num, bigIndex1, bigIndex2)+"\n");
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public static void main(String[] args) 
	{
		init();
		findNum();
		release();
	}
}