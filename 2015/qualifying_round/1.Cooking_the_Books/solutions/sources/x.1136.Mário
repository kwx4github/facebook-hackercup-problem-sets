#include <bits/stdc++.h>

using namespace std;

#define fr(a,b,c) for(int (a) = (b); (a) < (c); ++(a))
#define rp(a,b) fr(a,0,b)
#define fre(a,b) for(int a = adj[b]; ~a; a = ant[a])
#define cl(a,b) memset((a), (b), sizeof(a))
#define sc(a) scanf("%d", &a)
#define sc2(a,b) scanf("%d%d", &a, &b)
#define sc3(a,b,c) scanf("%d%d%d", &a, &b, &c)
#define scs(s) scanf("%s", s)
#define pri(x) printf("%d\n", x)

#define iter(a) __typeof((a).begin())
#define fore(a,b) for(iter(b) a = (b).begin(); a != (b).end(); ++a)

#define st first
#define nd second
#define mp make_pair
#define pb push_back

#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define _ << ", " <<

const int oo = 0x3f3f3f3f;

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector< vi > vii;

int n, l, a[20];

void dec(int q) {
	l = 0;
	while (q) {
		a[l++] = q%10;
		q /= 10;
	}
}

int monta() {
	int r = 0;
	rp(i, l) r = r*10 + a[l-i-1];
	return r;
}

int get_min() {
	int p = l-1, q;
	while (p >= 0) {
		q = min_element(a, a+p) - a;
		if (!(p == l-1 && a[q] == 0) &&
			a[p] > a[q]) {
			swap(a[p], a[q]);
			break;
		}
		p--;
	}
	return monta();
}

int get_max() {
	int p = l-1, q;
	while (p >= 0) {
		q = max_element(a, a+p) - a;
		if (!(p == l-1 && a[q] == 0) &&
			a[p] < a[q]) {
			swap(a[p], a[q]);
			break;
		}
		p--;
	}
	return monta();
}

int main() {
	int t, cn = 1;
	sc(t); while (t--) {
		sc(n);
		dec(n);
		printf("Case #%d: ", cn++);
		if (l < 2) {
			printf("%d %d\n", n, n);
			continue;
		}
		int b[20];
		rp(i, l) b[i] = a[i];
		printf("%d ", get_min());
		rp(i, l) a[i] = b[i];
		printf("%d\n", get_max());
	}
	return 0;
}

