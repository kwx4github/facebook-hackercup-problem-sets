<?php

//read the file

$input = array();

$handle = fopen("cooking_the_books.txt", "r");

if ($handle) 
{
	while (($line = fgets($handle)) !== false) 
	{
		// process the line read.
		//echo $line."<br>";
		$input[] = $line;
	}
} 
else 
{
	// error opening the file.
}

fclose($handle);

//var_dump($input);


//get the number of cases;
$count = $input[0];


//sample output
/*
Case #1: 13524 51324
Case #2: 798 987
Case #3: 123 321
Case #4: 10 10
Case #5: 5 5
*/

//output string
$output = '';

for($i=1;$i<=$count;$i++)
{
	//get the number
	$number = $input[$i];
	
	$arr_digits = array();

	//convert it into array of digits
	$arr_digits = str_split($number);

	//pop the last space after each number
	array_pop($arr_digits);
	
	
	$arr_digits_desc = $arr_digits;

	//get the biggest value and keys of the that value
	$biggest_digit = max($arr_digits);

	$desc_key = ( array_keys($arr_digits, $biggest_digit) ) ;
	
	//get the smallest value and keys of the that value
	$smallest_digit = min($arr_digits);
	
	$asc_key = ( array_keys($arr_digits, $smallest_digit) ) ;
	
	//var_dump($asc_key); die();
	
	
	//check if the smallest digit is equal to first digit or if it is 0 then find the next biggest value from left to right and then swap it with the smallest value else perform a simple swap with the first digit  
	if($arr_digits[0] == $smallest_digit || $smallest_digit == '0')
	{
		for($j=1;$j<count($arr_digits);$j++)
		{
			if($arr_digits[$j] > $smallest_digit)
			{
				$temp  = $arr_digits[$j];
				
				$arr_digits[$j] = $arr_digits[ $asc_key[count($asc_key) - 1] ];
				
				$arr_digits[ $asc_key[count($asc_key) - 1] ] = $temp;
				
				break;
			}
		}
	}
	else
	{
		$temp  = $arr_digits[0];

		$arr_digits[0] = $arr_digits[ $asc_key[count($asc_key) - 1] ];

		$arr_digits[ $asc_key[count($asc_key) - 1] ] = $temp;
	}
	
	//get the smallest number
	$asc_number = implode($arr_digits);

	
	//check if the biggest digit is equal to first digit then find the next smallest value from left to right and then swap it with the biggest value also  check that if the number to be swapped is 0 then check if the position swapped should not to the 0 position in this case dont swap move on to next number else perform a simple swap with the first digit
	if($arr_digits_desc[0] == $biggest_digit)
	{
		for($j=1;$j<count($arr_digits_desc);$j++)
		{
			if($arr_digits_desc[$j] < $biggest_digit)
			{
				if($arr_digits[$j] == '0')
				{
					if((count($desc_key) - 1) != 0)
					{
						$temp  = $arr_digits_desc[$j];
		
						$arr_digits_desc[$j] = $arr_digits_desc[ $desc_key[count($desc_key) - 1] ];
		
						$arr_digits_desc[ $desc_key[count($desc_key) - 1] ] = $temp;
					
						break;
					}
				}
				else
				{
					$temp  = $arr_digits_desc[$j];
					
					$arr_digits_desc[$j] = $arr_digits_desc[ $desc_key[count($desc_key) - 1] ];
					
					$arr_digits_desc[ $desc_key[count($desc_key) - 1] ] = $temp;
						
					break;
				}
			}
		}
	}
	else
	{
		$temp  = $arr_digits_desc[0];

		$arr_digits_desc[0] = $arr_digits_desc[ $desc_key[count($desc_key) - 1] ];

		$arr_digits_desc[ $desc_key[count($desc_key) - 1] ] = $temp;
	}
	
	
	//get the biggest number
	$desc_number = implode($arr_digits_desc);
	
	
	$output .= "Case #$i: $asc_number $desc_number\n";

	//die();

}

$path = "output_1.txt";
$file=fopen($path,a);
fwrite($file, $output);
fclose($file);


?>