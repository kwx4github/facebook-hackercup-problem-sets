# include <iostream>
# include <vector>
# include <math.h>
# include <string>
# include <algorithm>

using namespace std;

struct num{
	int max;
	int min;
};

float max_number(vector <int> v)
{
	int i,flag = 0;
	for (i=1;i<v.size();i++)
	{
		if (v[i] > v[flag])
		{
			flag = i;
		}
	}
	int temp1 = v[v.size()-1];
	v[v.size()-1] = v[flag];
	v[flag] = temp1;
	float ans = 0;
	for (i=0;i<v.size();i++)
		ans += v[i]*pow(10,i);
	return ans;
}

float min_number(vector <int> v1)
{
	int i,flag = 0;
	vector <int> v;
	for (i=v1.size()-1;i>=0;i--)
		v.push_back(v1[i]);
	for (i=1;i<v.size();i++)
	{
		if (v[i] < v[flag] && v[i] != 0)
		{
			flag = i;
		}
	}
	int temp1 = v[0];
	v[0] = v[flag];
	v[flag] = temp1;
	float ans = 0;
	for (i=0;i<v.size();i++)
		ans += v[i]*pow(10,v.size()-i-1);
	return ans;
}
					
int main()
{
	int n,t;
	cin >> t;
	num array[t];
	for (int i = 1;i<=t;i++)
	{
		vector <int> v;
		cin >> n;
		if (n == 0)
		{
			array[i].max = 0;
			array[i].min = 0;
		}
		else
		{
		int d = log(n)/log(10);
		for (int j=1;j<=d+1;j++)
		{
			v.push_back(n%10);
			n = n/10;
		}
		array[i].max = (int) max_number(v);
		array[i].min = (int) min_number(v);}
	}
	for (int i=1;i<=t;i++)
		cout << "Case #" << i << ": " << array[i].min << " " << array[i].max << endl;
	return 0;
}
