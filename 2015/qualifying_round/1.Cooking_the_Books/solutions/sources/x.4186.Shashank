#include <cstdio>
#include <iostream>
#include <climits>
#include <cmath>
#include <cstring>
#include <stack>
#include <queue>
#include <vector>
#include <string>
#include <algorithm>

#define MAX_SIZE 11

using namespace std;

int main()
{
	int t;
	int pos[MAX_SIZE];
	scanf("%d", &t);
	for(int s = 1; s <= t; ++s){
		int n;
		scanf("%d", &n);
		int k = 10;
		while (true){
			if(!(n / k)) { break; }
			k *= 10;
		}
		k /= 10;
		int p = 0;
		
		while(k){
			int d = n / k;
			n = n % k;
			k /= 10;
			pos[p++] = d;
		}
		int min, minPos, max, maxPos;
		bool swapped = false;
		int i = 0, d;
		int initPos;
		for(; i < p; ++i){
			d = pos[i];
			min = d; 
			minPos = i;
			for(int j = i + 1; j < p; ++j){
				if(!pos[j] && !i){
					continue;
				}
				if (pos[j] < min){
					min = pos[j];
					minPos = j;
				}
			}
			if(minPos != i){
				pos[i] = pos[minPos];
				pos[minPos] = d;
				swapped = true;
				initPos = i;
				break;
			}
		}
		printf("Case #%d: ", s);
		for(i = 0; i < p; ++i){
			printf("%d", pos[i]);
		}
		printf(" ");
		if(swapped){
			pos[minPos] = pos[initPos];
			pos[initPos] = d;
		}
		for(i = 0; i < p; ++i){
			d = pos[i];
			max = d; 
			maxPos = i;
			for(int j = p - 1; j > i; --j){
				if (pos[j] > max){
					max = pos[j];
					maxPos = j;
				}
			}
			if(maxPos != i){
				pos[i] = pos[maxPos];
				pos[maxPos] = d;
				break;
			}
		}
		for(i = 0; i < p; ++i){
			printf("%d", pos[i]);
		}
		printf("\n");
	}
	return 0;
}