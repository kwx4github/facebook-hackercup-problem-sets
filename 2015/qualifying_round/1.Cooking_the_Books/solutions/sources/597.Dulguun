//
//  main.cpp
//  ComptetitiveProgramming
//
//  Created by Dulguun Batmunkh on 11/27/14.
//  Copyright (c) 2014 Dulguun Batmunkh. All rights reserved.
//

#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <set>
#include <algorithm>
#include <cstring>

#define cin std::cin
#define cout std::cout
#define endl std::endl
#define vector std::vector
#define string std::string

#define MAX_SIZE 9

int T, N;
int array[MAX_SIZE + 10];
int start;

void convertToArray(int a) {
    int i = MAX_SIZE;
    while (a != 0) {
        array[i] = a % 10;
        a /= 10;
        i--;
    }
    start = i + 1;
}

void swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}

int convertToNum() {
    int i, num = 0, mul = 1;
    for (i = MAX_SIZE; i >= start; i--) {
        num += (array[i] * mul);
        mul *= 10;
    }
    return num;
}

int main() {
    freopen("wormhole.in", "r", stdin);
    freopen("wormhole.out", "w", stdout);
    
    cin >> T;
    
    int t_case = 1;
    int i, j;
    int minimum, maximum, temp;
    
    while (T--) {
        cin >> N;
        minimum = N; maximum = N;
        
        convertToArray(N);
        
        for (i = start; i <= MAX_SIZE; i++) {
            for (j = i + 1; j <= MAX_SIZE; j++) {
                if (i == start && array[j] == 0) continue;
                swap(array[i], array[j]);
                temp =  convertToNum();
                if (minimum > temp) {
                    minimum = temp;
                }
                if (maximum < temp) {
                    maximum = temp;
                }
                swap(array[i], array[j]);
            }
        }
        printf("Case #%d: %d %d\n", t_case, minimum, maximum);
        t_case++;
    }
    
    return 0;
}
