package com.github.rustyworks.test.testide;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

/**
 * Created by Tristanto on 1/11/2015.
 * See more projects in github.com/rustyworks
 */

public class FacebookHC {

    public static void main(String[] args) throws IOException {
        String file = System.getProperty("user.dir") + "\\testcase.txt";
        BufferedReader br = new BufferedReader(new FileReader(file));
        String line;
        br.readLine();
        int i = 1;
        while ((line = br.readLine()) != null) {
            System.out.println("Case #" + i + ": " + new FacebookHC().scanValue(line));
            i++;
        }
        br.close();
    }

    public Tuple scanValue(String value) {
        return new Tuple(checkMinValue(value), checkMaxValue(value));
    }

    public static String checkMinValue(String value) {
        char[] arrayOfChars = value.toCharArray();
        char min = 'A';
        int point = 0;

        for (int i = 0; i < arrayOfChars.length; i++) {
            if (arrayOfChars[i] < min && arrayOfChars[i] != '0') {
                min = arrayOfChars[i];
                point = i;
            }
        }

        if (min != 'A') {
            arrayOfChars[point] = arrayOfChars[0];
            arrayOfChars[0] = min;
        }

        return new String(arrayOfChars);
    }

    public static String checkMaxValue(String value) {
        char[] arrayOfChars = value.toCharArray();
        char max = '0';
        int point = 0;

        for (int i = 0; i < arrayOfChars.length; i++) {
            if (arrayOfChars[i] > max) {
                max = arrayOfChars[i];
                point = i;
            }
        }

        arrayOfChars[point] = arrayOfChars[0];
        arrayOfChars[0] = max;

        return new String(arrayOfChars);
    }

    class Tuple {

        private String firstElement;
        private String secondElement;

        public Tuple(String firstElement, String secondElement) {
            this.firstElement = firstElement;
            this.secondElement = secondElement;
        }

        public String getFirstElement() {
            return firstElement;
        }

        public String getSecondElement() {
            return secondElement;
        }

        public String[] value() {
            return new String[] { firstElement, secondElement };
        }

        @Override
        public String toString() {
            return firstElement + " " + secondElement;
        }

    }

}
