using System;
using System.Text;
using System.Collections.Generic;
using System.IO;

namespace HackerCup
{
    public class Program
    {
        public static void Main()
        {
            //Console.SetIn(File.OpenText(@"C:\input.txt"));
            //var writer = new StreamWriter(File.OpenWrite(@"C:\output.txt"));
            //Console.SetOut(writer);

            int T = FastReadInt32();
            int Num, len, i, j, max, min, tmp, pMax, pMin, GotMaximum, GotMinimum, Case = 1;
            StringBuilder SB = new StringBuilder();
            do
            {
                Num = FastReadInt32();
                if (Num / 10 == 0)
                {
                    GotMaximum = Num;
                    GotMinimum = Num;
                }
                else
                {
                    var _a = NumArray(Num, out len);
                    var _b = NumArray(Num, out len);
                    pMax = -1;
                    pMin = -1;
                    GotMaximum = -1;
                    GotMinimum = -1;
                    for (i = len - 1; i >= 0; i--)
                    {
                        max = _a[i];
                        min = _b[i];
                        for (j = i - 1; j >= 0; j--)
                        {
                            if (GotMaximum == -1)
                            {
                                tmp = _a[j];
                                if (tmp > max)
                                {
                                    max = tmp;
                                    pMax = j;
                                }
                            }
                            if (GotMinimum == -1)
                            {
                                tmp = _b[j];
                                if (tmp < min)
                                {
                                    if (tmp == 0 && i == len - 1)
                                    {
                                        continue;
                                    }
                                    else
                                    {
                                        min = tmp;
                                        pMin = j;
                                    }
                                }
                            }
                        }
                        if (pMax != -1)
                        {
                            //we got the maximum number, just swap i and pmax
                            tmp = _a[i];
                            _a[i] = _a[pMax];
                            _a[pMax] = tmp;
                            GotMaximum = GetInt(_a, len);
                            pMax = -1;
                        }

                        if (pMin != -1)
                        {
                            //we got the minimum number, just swap i and pmax
                            tmp = _b[i];
                            _b[i] = _b[pMin];
                            _b[pMin] = tmp;
                            GotMinimum = GetInt(_b, len);
                            pMin = -1;
                        }

                        if (GotMaximum != -1 && GotMaximum != -1)
                            break;
                    }
                    if (GotMaximum == -1)
                        GotMaximum = Num;

                    if (GotMinimum == -1)
                        GotMinimum = Num;
                }
                SB.AppendLine(string.Format("Case #{0}: {1} {2}", Case++, GotMinimum, GotMaximum));
            }
            while (--T > 0);
            Console.WriteLine(SB.ToString());
            //writer.Flush();
            //writer.Dispose();
        }

        private static int GetInt(int[] _a, int len)
        {
            int res = _a[len - 1];
            for (int i = len - 2; i >= 0; i--)
            {
                res = (res * 10) + _a[i];
            }
            return res;
        }

        private static int[] NumArray(int num, out int len)
        {
            int c = num, p = 0;

            int[] res = new int[9];
            while(c != 0)
            {
                res[p++] = c % 10;
                c /= 10;
            }
            len = p;
            return res;
        }

        private static int FastReadInt32()
        {
            int c;
            while (((c = Console.Read())) < '0') ;
            int n = c - '0';
            while (((c = Console.Read())) >= '0')
                n = n * 10 + c - '0';
            return n;
        }
    }
}