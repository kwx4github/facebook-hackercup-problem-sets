using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

class Program
{
    static char[] inp;
    static int l;

    static void Main(string[] args)
    {
        int T = int.Parse(Console.ReadLine());

        for (int t = 1; t <= T; t++)
        {
            inp = Console.ReadLine().ToCharArray();
            l = inp.Length;
            long val = buildSuggestedMove(0, 0);

            long best = val;
            for (int i = 1; i < l; i++)
                for (int j = 0; j < i; j++)
                {
                    long v = buildSuggestedMove(i, j);
                    if (v > best)
                        best = v;
                }

            long worst = val;
            for (int i = 0; i < l - 1; i++)
                for (int j = i + 1; j < l; j++)
                {
                    if (inp[j] == '0' && i == 0) continue;

                    long v = buildSuggestedMove(i, j);
                    if (v < worst)
                        worst = v;
                }

            Console.WriteLine("Case #{0}: {1} {2}", t, worst, best);
        }
    }

    static long buildSuggestedMove(int s1, int s2)
    {
        StringBuilder s = new StringBuilder();

        for (int i = 0; i < l; i++)
        {
            s.Append(inp[(i == s1 ? s2 : (i == s2 ? s1 : i))]);
        }

        string sout = s.ToString();

        return long.Parse(sout);
    }
}