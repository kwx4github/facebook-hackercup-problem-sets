#include<iostream>
#include<deque>
#include<algorithm>
using namespace std;
	std::deque<char> cal;
	std::deque<char> cal1;
	int m1=1;
void cal_(int m)
{

	int max_=0,min_=0,r;
	while(m>0)
	{
		r=m%10;
		cal.push_front(char(r));
		cal1.push_front(char(r));
		m=m/10;
	}
	for(auto i=cal1.begin();i!=cal1.end()-1;i++)
	{
		auto j=i;
		auto o=j;
		for(;j!=cal1.end();j++)
 		{
			if(*o<=*j )
			{
				o=j;
			}
		}
		if(*o!=*i)
		{
			r=*o;
			*o=*i;
			*i=r;
			break;
		}
	}
	for(auto i=cal1.begin();i!=cal1.end();i++)
	{
		max_=max_*10+int(*i);
	}
	int k=1;
	for(auto i=cal.begin();i!=cal.end()-1;i++)
	{
		auto j=i;
		auto o=j;
		if(k==1)
		{
			for(;j!=cal.end();j++)
	 		{
				if(*o>=*j && *j!=0)
				{
					o=j;
				}
			}
			k++;
		}
		else
		{
			for(;j!=cal.end();j++)
	 		{
				if(*o>=*j )
				{
					o=j;
				}
			}
		}
		auto k1=o;
		k1++;
		if(*o!=*i)
		{
			r=*o;
			*o=*i;
			*i=r;
			break;
		}
	}
	for(auto i=cal.begin();i!=cal.end();i++)
	{
		min_=min_*10+int(*i);
	}
	cout<<"Case #"<<(m1)<<": "<<min_<<" "<<max_<<"\n";
	m1++;
	cal.clear();
	cal1.clear();
}
int main()
{
	
	int t,n;
	cin>>t;
	
	for(int i=0;i<t;i++)
	{
		cin>>n;
		if(n/10 == 0)
		{
			cout<<"Case #"<<(m1)<<": "<<n<<" "<<n<<"\n";
			m1++;
		}
		else
		{
			cal_(n);
		}
	}
	return 0;
}
