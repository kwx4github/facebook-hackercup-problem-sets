# Cooking the Books - Facebook Hacker Cup 

def read_file(filename):
    f = open(filename, "r")
    num_numbers = int(f.readline())
    nums = []
    
    for line in f:
        nums.append(line.rstrip())
        
    return (num_numbers, nums)
    
def main(input_file):
    num_numbers, nums = read_file(input_file)
    
    output_file = open("cooking_books_output.txt", "w")
    
    for i in range(num_numbers):
        original_num = nums[i]
        original_list = list(original_num) 
        highest = original_list[:]  
        lowest = original_list[:]
        
        # get the max possibility
        for j in range(len(original_list) - 1):
            remainder_digits = original_list[j + 1:]
            max_remainder = max(remainder_digits)
            if max_remainder > original_list[j]:        
                to_swap_index = original_num.rindex(max_remainder)
                highest[j], highest[to_swap_index] = highest[to_swap_index],\
                    highest[j]
                break
                    
        highest = "".join(highest)
                
        # get the min possibility               
        for k in range(len(original_list) - 1):
            remainder_digits = original_list[k + 1:]
            
            if k == 0 and "0" in remainder_digits:
                remainder_digits = set(remainder_digits)
                remainder_digits.remove("0")
            
            if len(remainder_digits) != 0:
                min_remainder = min(remainder_digits)
                if min_remainder < original_list[k]:
                    to_swap_index = original_num.rindex(min_remainder)
                    lowest[k], lowest[to_swap_index] = lowest[to_swap_index],\
                        lowest[k]             
                    break
        
        lowest = "".join(lowest)
        
        output_file.write("Case #" + str(i + 1) + ": " + lowest + " " + \
            highest + "\n")
            
main("cooking_the_books.txt")
            
                
                
                
                                
                
        
            
            
            
            
            
            
    
    

