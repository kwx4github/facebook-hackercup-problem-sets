#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <string>
#include <cstring>
#include <cassert>
#include <limits>
#include <fstream>

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef long long ll;

#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define sqr(x) (x)*(x)

int main(){
	ifstream ifile;
	ofstream ofile;
	ifile.open("input.txt");
	ofile.open("output.txt");
	int t,t1;
	ifile>>t;t1=t;
	while(t--) {
		int n,n100;
		ifile>>n;n100=n;
		int ct[10]={0};
		std::vector<int> v,v1,v2;
		while(n){
			v.pb(n%10);
			n/=10;
		}
		n=v.size();
		v1=v2=v;
		bool b1=false,b2=false;
		for(int i=n-1;i>0 && (!b1||!b2) ;i--){
			int mx=0,mn=9,mxp=i,mnp=i;
			for(int j=0;j<i;j++) {
				
					if(v[j]>mx) {mx=v[j];mxp=j;}
					if(v[j]<mn) {mn=v[j];mnp=j;} 
	
			}
			if(!b1 && mxp!=i && v[i]<mx) {swap(v1[i],v1[mxp]);b1=true;}
			if(!b2 && mnp!=i && v[i]>mn && !(i==n-1 && mn==0) ) {swap(v2[i],v2[mnp]);b2=true;}
		}

		ofile<<"Case #"<<t1-t<<": ";
		for(int i=n-1;i>=0;i--) ofile<<v2[i];if(!n100) ofile<<0;
		ofile<<" ";
		for(int i=n-1;i>=0;i--) ofile<<v1[i];if(!n100) ofile<<0;

		ofile<<endl;

	}

	ifile.close();
	ofile.close();
	return 0;
}