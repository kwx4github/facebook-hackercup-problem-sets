#!/usr/bin/env python

def breakNumIntoDigitList(num):
    num = str(num)
    digit_list = [i for i in num]
    return digit_list

def formNum(digit_list, is_smallest=True,  is_largest=False):
    if is_smallest == is_largest:
        raise Exception("is_smallest and is_largest must be different boolean value")
    if len(digit_list) == 1:
        return int(digit_list[0])

    starting_digit = digit_list[0]
    if is_smallest:
        sorted_digit_list = sorted(digit_list)
    elif is_largest:
        sorted_digit_list = sorted(digit_list, reverse=True)

    if sorted_digit_list != digit_list:
        for digit in sorted_digit_list:
            if digit == '0':
                continue
            if starting_digit != digit:
                target_digit_index = digit_list.index(digit)
                digit_list[target_digit_index] = starting_digit
                digit_list[0] = digit
                break

    return int(''.join(digit_list))

def cooking_the_books(i, N):
    num = int(N[i])
    if num < 0 or num > 999999999:
        raise Exception('Incorrect input n')
    digit_list = breakNumIntoDigitList(num)
    print 'Case #%d: %d %d' % (i+1, formNum(digit_list[:], is_smallest=True, is_largest=False), formNum(digit_list[:], is_smallest=False, is_largest=True))

if __name__ == '__main__':
    import sys

    if len(sys.argv) != 2:
        raise Exception('USAGE: python cooking_the_books.py "input file"')

    f = open(sys.argv[1], 'r')
    lines = f.readlines()
    T = int(lines[0])
    N = lines[1:]

    if T < 1 or T  > 100:
        raise Exception("Incorrect input T")

    for i in range(1, T+1):
        cooking_the_books(i-1, N)
