import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class CookingtheBooks {

	public static void main(String[] args) {
		try {
			BufferedReader br = new BufferedReader(
					new FileReader(
							"/Users/youssefhassan/Documents/workspace/HiredInTech/src/cooking_the_books.txt"));

			String line = br.readLine();

			StringBuilder outputBuilder = new StringBuilder();
			int T = Integer.parseInt(line);
			for (int t = 0; t < T; t++) {
				int min = Integer.MAX_VALUE;
				int max = Integer.MIN_VALUE;

				int minIndex = -1;
				int maxIndex = -1;

				String numString = br.readLine();
				int index = 0;

				char[] chars = numString.toCharArray();
				for (char c : chars) {
					int charVal = Character.getNumericValue(c);
					if (charVal > max) {
						max = charVal;
						maxIndex = index;
					}
					if (charVal != 0 && charVal < min) {
						min = charVal;
						minIndex = index;
					}
					index++;
				}
				// max string
				char tmp = chars[0];
				chars[0] = Character.forDigit(max, 10);
				chars[maxIndex] = tmp;
				String maxString = new String(chars);

				// return back
				tmp = chars[0];
				chars[0] = chars[maxIndex];
				chars[maxIndex] = tmp;

				// min string
				String minString = new String(chars);
				if (minIndex != -1) {
					tmp = chars[0];
					chars[0] = Character.forDigit(min, 10);
					chars[minIndex] = tmp;
					minString = new String(chars);
				}

				outputBuilder.append("Case #" + (t + 1));
				outputBuilder.append(" " + minString + " " + maxString);
				outputBuilder.append("\n");
			}

			BufferedWriter writer = new BufferedWriter(
					new FileWriter(
							new File(
									"/Users/youssefhassan/Documents/workspace/HiredInTech/src/out.txt")));
			// for (line : aLines) {
			writer.write(outputBuilder.toString());
			writer.close();
			// writer.newLine();
			// }

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
