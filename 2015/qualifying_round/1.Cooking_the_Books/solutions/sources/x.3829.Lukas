package de.luk.fb.HC2015.challenge;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class CookingTheBooks {
	private BufferedReader reader;
	private BufferedWriter writer;
	private int testCases;
	private int currentOutput = 1;

	private void solve(File input, File output) throws FileNotFoundException,
			IOException {
		try (BufferedReader reader = new BufferedReader(new FileReader(input));
				BufferedWriter writer = new BufferedWriter(new FileWriter(
						output))) {
			this.reader = reader;
			this.writer = writer;
			this.testCases = Integer.parseInt(readNextLine());
			String testCase = null;
			while ((testCase = readNextLine()) != null) {
				writeOutput(solveProblem(testCase));
			}
		}
	}

	private String solveProblem(String line) {
		if (line.length() == 1) {
			return line + " " + line;
		}
		char minChar = Character.MAX_VALUE;
		char maxChar = Character.MIN_VALUE;
		int minIndex = 0;
		int maxIndex = 0;
		for(int i=0;i<line.length();i++){
			if(line.charAt(i) == '0'){
				continue;
			}
			if(line.charAt(i) > maxChar){
				maxChar = line.charAt(i);
				maxIndex = i;
			}
			if(line.charAt(i) < minChar){
				minChar = line.charAt(i);
				minIndex = i;				 
			}
		}
		String minValue = line;
		String maxValue = line;
		if (minIndex > 0) {
			char[] chars = minValue.toCharArray();
			char tmp = chars[0];
			chars[0] = chars[minIndex];
			chars[minIndex] = tmp;
			minValue = new String(chars);
		}
		if (maxIndex > 0) {
			char[] chars = maxValue.toCharArray();
			char tmp = chars[0];
			chars[0] = chars[maxIndex];
			chars[maxIndex] = tmp;
			maxValue = new String(chars);
		}
		return minValue + " " + maxValue;
	}

	private void writeOutput(String output) {
		try {
			writer.write("Case #" + currentOutput++ + ": " + output);
			writer.newLine();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private String readNextLine() {
		try {
			return reader.readLine();
		} catch (IOException e) {
			e.printStackTrace();
			return null;
		}
	}

	public static void main(String[] args) throws FileNotFoundException, IOException {
		File inputFile = new File("/home/lukas/Downloads/cooking_the_books.txt");
		//inputFile = new File("/home/lukas/Downaloads/");
		File outputFile = new File("/home/lukas/Downloads/sol_cooking_the_books.txt");
		CookingTheBooks challenge = new CookingTheBooks();
		challenge.solve(inputFile, outputFile);
	}
}
