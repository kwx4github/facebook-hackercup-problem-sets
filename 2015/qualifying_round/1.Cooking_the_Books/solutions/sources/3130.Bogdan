def min_swap(x):
    digits = list(x)
    
    for i in xrange(len(digits) - 1):
        min_digit = min([digit for digit in digits[i:] if digit != '0' or i > 0])
        
        if digits[i] != min_digit:
            # get the last position of the best digit to swap with
            for min_pos in xrange(len(digits) - 1, 0, -1):
                d = digits[min_pos]
                if d == min_digit:
                    break

            digits[i], digits[min_pos] = digits[min_pos], digits[i]
            break

    return ''.join(digits)

def max_swap(x):
    digits = list(x)
    
    for i in xrange(len(digits) - 1):
        max_digit = max(digits[i:]) 
        
        if digits[i] != max_digit:
            # get the last position of the best digit to swap with
            for max_pos in xrange(len(digits) - 1, 0, -1):
                d = digits[max_pos]
                if d == max_digit:
                    break

            digits[i], digits[max_pos] = digits[max_pos], digits[i]
            break

    return ''.join(digits)

if __name__ == "__main__":
    with open("cooking_the_books_input.txt", "r") as f:
        cases_no = int(f.readline().strip())

        for i in xrange(1, cases_no + 1):
            x = f.readline().strip()
            print "Case #{0}: {1} {2}".format(i, min_swap(x), max_swap(x))
