    public static void main(String []args) {

        File file = new File(args[0]);

        try {
            BufferedReader in = new BufferedReader(new FileReader(file));
            in.readLine();

            int test = 1;

            String number;
            while ((number = in.readLine()) != null) {
                int n = Integer.valueOf(number);

                if (n > 10) {
                    //smallest number
                    int smallest = getSmallest(n);
                    int largest = getLargest(n);

                    System.out.println(String.format("Case #%d: %d %d", test, smallest, largest));
                } else {
                    System.out.println(String.format("Case #%d: %d %d", test, n, n));
                }

                test++;
            }
        } catch (Exception e) {

        }
    }

    private static int getLargest(int n) {
        char[] num = String.valueOf(n).toCharArray();

        int m = n;

        for (int j=0; j<num.length-1; j++) {

            int orig = num[j] - '0';
            char firstChar = num[j];

            int max = orig;
            int index = 0;

            for (int i = j; i < num.length; i++) {
                max = Math.max(max, num[i] - '0');
                if (max == num[i] - '0') {
                    index = i;
                }
            }

            if (max > orig) {
                char[] nums = String.valueOf(n).toCharArray();
                nums[j] = nums[index];
                nums[index] = firstChar;

                m = Math.max(m, Integer.valueOf(new String(nums)));
            }
        }
        return m;
    }

    private static int getSmallest(int n) {
        char[] num = String.valueOf(n).toCharArray();

        int m = n;

        for (int j=0; j<num.length-1; j++) {

            int orig = num[j] - '0';
            char firstChar = num[j];

            int min = orig;
            int index = 0;

            for (int i = j; i < num.length; i++) {
                min = Math.min(min, num[i] - '0');
                if (min == num[i] - '0') {
                    index = i;
                }
            }

            if (min > 0 && min < orig) {
                char[] nums = String.valueOf(n).toCharArray();
                nums[j] = nums[index];
                nums[index] = firstChar;

                m = Math.min(m, Integer.valueOf(new String(nums)));
            }
        }
        return m;
    }