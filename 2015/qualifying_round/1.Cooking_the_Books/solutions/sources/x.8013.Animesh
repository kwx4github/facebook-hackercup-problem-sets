def max_swap(N):
 s = str(N)
 max_pos = 0
 max_dig = s[max_pos]
 max_list = []
 s_max = s[:]
 swp = False
 while not swp:
  for i in range(max_pos + 1, len(s)):
   if s[i] >= max_dig and s[i] not in max_list:
    max_pos = i
    max_dig = s[max_pos]
  for j in range(max_pos):
   if s[j] < max_dig:
    s_max = s[: j] + max_dig + s[j + 1: max_pos] + s[j] + s[max_pos + 1:]
    swp = True
    break
  max_list.append(max_dig)
  if max_pos == len(s) - 1: swp = True
  if not max_pos == len(s) - 1: max_dig = s[max_pos + 1]
 return s_max

def min_swap(N):
 s = str(N)
 min_pos = 0
 min_dig = s[min_pos]
 min_list = []
 s_min = s[: ]
 swp = False
 while not swp:
  for i in range(min_pos + 1, len(s)):
   if s[i] <= min_dig:
    min_pos = i
    min_dig = s[min_pos]
  if min_dig != '0':
   for j in range(min_pos):
    if s[j] > min_dig:
     s_min = s[: j] + min_dig + s[j + 1: min_pos] + s[j] + s[min_pos + 1:]
     swp = True
     break
  else:
   for j in range(1, min_pos):
    if s[j] > min_dig:
     s_min = s[: j] + min_dig + s[j + 1: min_pos] + s[j] + s[min_pos + 1:]
     swp = True
     break
  min_list.append(min_dig)
  if min_pos == (len(s) - 1): swp = True
  if not min_pos == len(s) - 1: min_dig = s[min_pos + 1]
 return s_min

if __name__ == '__main__':
 T = int(input())
 Ns = []
 for i in range(T):
  Ns.append(int(input()))
 for j in range(len(Ns)):
  print 'Case #{0}: {1} {2}'.format(j + 1, min_swap(Ns[j]), max_swap(Ns[j]))
