import std.stdio, std.conv, std.string, std.algorithm;

void main()
{
  int n = to!int( strip( readln ) );
  foreach ( i; 1 .. n + 1 ) {
	solve( to!int( strip( readln ) ), i );
  }  
}

int digit( int n ) {
  int ans = 0;
  while ( n > 0 ) {
	n /= 10;
	ans++;
  }
  return ans;
}

int swapVal( int n, int i, int j ) {
  int idig = ( n % ( 10 ^^ ( i + 1 ) ) ) / ( 10 ^^ i );
  int jdig = ( n % ( 10 ^^ ( j + 1 ) ) ) / ( 10 ^^ j );
  if ( j == digit( n ) - 1 && idig == 0 ) {
	return n;
  } else {
	return n + ( jdig - idig ) * ( 10 ^^ i ) + ( idig - jdig ) * ( 10 ^^ j );
  }
}

void solve( int n, int c ) {
  int maxNum = n;
  int minNum = n;
  int d = digit( n );
  foreach ( i; 0 .. d - 1 ) {
	foreach ( j; i + 1 .. d ) {
	  // stderr.writeln( swapVal( n, i, j ) );
	  int val = swapVal( n, i, j );
	  maxNum = max( maxNum, val );
	  minNum = min( minNum, val );
	}
  }
  writefln( "Case #%d: %d %d", c, minNum, maxNum );
}
