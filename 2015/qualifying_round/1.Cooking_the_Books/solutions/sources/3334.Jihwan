package main

import (
	"fmt"
	"io/ioutil"
	"os"
	"strconv"
	"strings"
)

func check(e error) {
	if e != nil {
		panic(e)
	}
}

func swapString(s []byte, idx1 int, idx2 int) (ret string) {
	tmp := s[idx1]
	s[idx1] = s[idx2]
	s[idx2] = tmp
	return string(s[:])
}

func main() {
	var lines []string
	var max int
	var min int
	content, err := ioutil.ReadFile("input.txt")
	check(err)
	lines = strings.Split(string(content), "\n")

	n, _ := strconv.Atoi(lines[0])

	f, err := os.Create("output.txt")
	check(err)
	defer f.Close()

	for cases := 1; cases <= n; cases++ {
		s := lines[cases]
		max, _ = strconv.Atoi(s)
		min = max
		for i := 0; i < len(s); i++ {
			for j := i + 1; j < len(s); j++ {
				if i == 0 && s[j] == '0' {
					continue
				}
				newS, _ := strconv.Atoi(swapString([]byte(s), i, j))

				if newS > max {
					max = newS
				}
				if newS < min {
					min = newS
				}
			}
		}

		f.WriteString(fmt.Sprintf("Case #%d: %d %d\n", cases, min, max))
	}
}
