#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define INPUT_FILE "cooking_the_books.txt"

int main()
{
	FILE *in, *out;
	int numcase;
	int total_digit;
	int *input_arr, *output_arr;
	int i, min, max, n, j;
	int min_dgt, max_dgt, first;

	in = fopen(INPUT_FILE, "r");

	fscanf(in, "%d", &numcase);

	input_arr = (int *)malloc(sizeof(int)*numcase);
	output_arr = (int *)malloc(sizeof(int)*numcase * 2);

	for (i = 0; i < numcase; i++)
		fscanf(in, "%d", &input_arr[i]);

	for (i = 0; i < numcase; i++)
	{
		n = input_arr[i];
		min_dgt = 0;
		max_dgt = 0;
		for (total_digit = 0; n>0; total_digit++)
			n /= 10;

		if (total_digit == 1 || total_digit==0)
		{
			output_arr[2 * i] = input_arr[i];
			output_arr[2 * i + 1] = input_arr[i];

			continue;
		}
		n = input_arr[i];
		min = max = first = n / pow(10, total_digit - 1);

		n = n % (int)pow(10, total_digit - 1);

		for (j = pow(10, total_digit - 2); (n > 0) && (j>0); j = j / 10)
		{
			if ((n / j > max) && (n / j > 0))
			{
				max = n / j;
				max_dgt = log10(j);
			}

			else if ((n / j < min) && (n / j>0))
			{
				min = n / j;
				min_dgt = log10(j);
			}

			n = n%j;
		}

		output_arr[2 * i] = min*pow(10, total_digit - 1) + input_arr[i] % (int)pow(10, total_digit - 1) - (min*pow(10, min_dgt)) + pow(10, min_dgt)*first;
		output_arr[2 * i + 1] = max*pow(10, total_digit - 1) + input_arr[i] % (int)pow(10, total_digit - 1) - (max*pow(10, max_dgt)) + pow(10, max_dgt)*first;

	}

	out = fopen("output.txt", "wt");

	for (i = 0; i < numcase; i++)
		fprintf(out, "case #%d : %d %d\n", i + 1, output_arr[2 * i], output_arr[2 * i + 1]);

	fclose(in);
	fclose(out);

	free(input_arr);
	free(output_arr);

	return 0;

}