# input argument
input = ARGV[0]

def smallest(n)
  digits = n.to_s.chars.map(&:to_i)

  c_min = digits[0]
  i_min = 0
  digits.each_with_index do |d, idx|
    if (d > 0 and d <= c_min)
      c_min = d
      i_min = idx
    end
  end

  swap_idx = 0
  digits.each_with_index do |d, idx|
    if (c_min == d && i_min > idx)
      swap_idx = swap_idx + 1
    else
      break
    end
  end

  swap!(digits, swap_idx, i_min)
  digits.join
end

def largest(n)
  digits = n.to_s.chars.map(&:to_i)

  c_max = digits[0]
  i_max = 0
  digits.each_with_index do |d, idx|
    if (d >= c_max)
      c_max = d
      i_max = idx
    end
  end

  swap_idx = 0
  digits.each_with_index do |d, idx|
    if (c_max == d and i_max > idx)
      swap_idx = swap_idx + 1
    else
      break
    end
  end


  swap!(digits, swap_idx, i_max)

  digits.join

end

def swap!(array, i, j)
  array[i], array[j] = array[j], array[i]
  array
end

def solve(idx, n)
  if (n >= 0 and n < 10)
    print_case idx, n, n
  else
    s = smallest n
    l = largest  n
    print_case idx, s, l
  end
end

def print_case(idx, s, l)
  puts "Case ##{idx}: #{s} #{l}"
end

File.foreach("#{input}").with_index do |line, line_num|
  number = line.to_i
  if line_num.to_i > 0
    solve line_num, number
  end
end
