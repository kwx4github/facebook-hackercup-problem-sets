/*
 * 	CookingTheBooks.cpp
 *
 *  Created on: Jan 9, 2015
 *      Author: Karim Mostafa
 */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <math.h> 
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <ext/numeric>
#include <memory.h>
#include <valarray>
using namespace std;

const int INF = 1 << 20;
int dx[]={0,0,1,-1};
int dy[]={-1,1,0,0};

//istringstream iss (temp);
//string val = "";
//while (iss >> val)

//stringstream ss (temp);
//double a,b;
//char c;
//ss>>a>>c>>b;


string tostr(long long n) {
    stringstream ss;
    ss << n;
    string s;
    ss >> s;
    return s;
}
long long toint(string s) {
    stringstream ss(s);
    long long n;
    ss >> n;
    return n;
}

int main() {

	freopen("cooking_the_books.in","r",stdin); // for reading
	freopen("filename.out","w",stdout); //for writing



	int t;
	cin >> t;
	string num;


	for(int i = 1;i <= t;i++)
	{
		cin >> num;
		string low = num;
		string high = num;

		int temp = 9;
		int index = 0;
		for(int j=1;j<low.size();j++)
		{
			if(low[j]-'0' < temp && low[j] != '0')
			{
				temp = low[j]-'0';
				index = j;
			}
		}
		if(temp < low[0]-'0')
		{
			low[index] = low[0];
			low[0] = (char)('0'+temp);
		}


		temp = 0;
		index = 0;
		for(int j=1;j<high.size();j++)
		{
			if(high[j]-'0' > temp)
			{
				temp = high[j]-'0';
				index = j;
			}
		}
		if(temp > high[0]-'0')
		{
			high[index] = high[0];
			high[0] = (char)('0'+temp);
		}

		cout << "Case #" << i << ": " << low << " " << high << endl;
	}



	return 0;
}
