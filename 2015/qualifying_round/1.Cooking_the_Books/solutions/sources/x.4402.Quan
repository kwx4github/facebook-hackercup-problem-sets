def swap_str(v, i, j):
    t = list(v)
    tmp = t[i]
    t[i] = t[j]
    t[j] = tmp
    return ''.join(t)

def smaller(a, b):
    return a<b

def bigger(a, b):
    return a>b

def swap(v, func_cmp):
    digits = len(v)
    s = [0]
    prev_nonzero = -1

    dst = -1
    src = -1

    for i in range(1, digits):
        if v[i] == '0':
            if prev_nonzero>= 0 and func_cmp(v[i], v[prev_nonzero]):
                return swap_str(v, prev_nonzero, i)
            else:
                continue

        if prev_nonzero < 0:
            prev_nonzero = i

        if src < 0:
            while len(s) and func_cmp(v[i], v[s[-1]]):
                dst = s[-1]
                s.pop()

            if dst >= 0:
                src = i
            else:
                s.append(i)
        else:
            if not func_cmp(v[i], v[src]):
                continue
            
            while len(s) and func_cmp(v[i], v[s[-1]]):
                dst = s[-1]
                s.pop()
            src = i

    if not src:
        return v

    return swap_str(v, src, dst)

def run():
    n = int(raw_input())
    for i in range(0, n):
        v = raw_input()
        vmin = swap(v, smaller)
        vmax = swap(v, bigger)
        print "Case #{0}: {1} {2}".format(i+1, vmin, vmax)

if __name__ == "__main__":
    run()
