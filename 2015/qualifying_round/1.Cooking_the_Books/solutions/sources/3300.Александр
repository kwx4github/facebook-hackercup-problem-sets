package y2015.qualification;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.Scanner;

public class A {
    private static final String inputFileName = "input/2015/qualification/a/cooking_the_books.txt";
    private static final String outputFileName = "output.txt";

    public static void main(String[] args) throws Exception {
        File inputFile = new File(inputFileName);
        Scanner scanner = new Scanner(inputFile);

        File outputFile = new File(outputFileName);
        outputFile.delete();
        outputFile.createNewFile();
        FileWriter fw = new FileWriter(outputFile);
        BufferedWriter bw = new BufferedWriter(fw);

        int numOfTestCases = scanner.nextInt();

        for (int i = 1; i <= numOfTestCases; i++) {

            String number = scanner.next();

            Problem problem = new Problem(number);

            String testCase = "Case #" + i + ": " + problem.solve();
            bw.append(testCase + "\n");
            System.out.println(testCase);
        }

        bw.flush();
        fw.flush();

        bw.close();
        fw.close();
    }

    private static class Problem {
        private final String number;

        public Problem(String number) {
            this.number = number;
        }


        public String solve() {
            return resolveMin() + " " + resolveMax();
        }

        private String resolveMax() {
            char[] numbers = number.toCharArray();
            for (int i = 0; i < numbers.length-1; i++) {
                char left = numbers[i];
                int pos = 0;
                char max = left;
                for (int j = i+1; j < numbers.length; j++) {
                    if (numbers[j] >= max) {
                        max = numbers[j];
                        pos = j;
                    }
                }

                if (max > left) {
                    change(numbers, i, pos);
                    return new String(numbers);
                }
            }

            return number;
        }

        private String resolveMin() {
            char[] numbers = number.toCharArray();
            for (int i = 0; i < numbers.length-1; i++) {
                char left = numbers[i];
                int pos = -1;
                char min = left;
                for (int j = i+1; j < numbers.length; j++) {
                    if (numbers[j] <= min && (i!=0 || numbers[j]!='0')) {
                        min = numbers[j];
                        pos = j;
                    }
                }

                if (min < left) {
                    change(numbers, i, pos);
                    return new String(numbers);
                }
            }

            return number;
        }

        private void change(char[] numbers, int pos1, int pos2) {
            char c = numbers[pos1];
            numbers[pos1] = numbers[pos2];
            numbers[pos2] = c;
        }
    }
}
