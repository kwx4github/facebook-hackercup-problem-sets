#include<iostream>
#include<math.h>
#include<cstdio>
#include<cstring>
#include<algorithm>
#define gc getchar_unlocked
using namespace std;

void fastin(int &x)
{
	register int a=gc();
	x=0;
	for(;a<48 || a>57;a=gc());
	for(;a>47 && a<58;a=gc())
		x=(x<<1)+(x<<3)+a-48;	
}
void fastin(unsigned long long int &x)
{
	register int a=gc();
	x=0;
	for(;a<48 || a>57;a=gc());
	for(;a>47 && a<58;a=gc())
		x=(x<<1)+(x<<3)+a-48;	
}

int main()
{
	int pos,length,i,j,t,s_bit,s_pos,l_bit,l_pos;
	bool max,min,flag;
	char number[12],number_1[12],temp;
	fastin(t);
	for(i=1;i<=t;i++)
	{
		scanf("%s",number);
		length=strlen(number);
		if(length<2)
		{
			printf("Case #%d: %s %s\n",i,number,number);
		}
		/*for(i=length-1;i>=0;i--)
		{
			if((number[i]-48)>l_bit)
			{
				l_bit=(number[i]-48);
				l_pos=pos;
			}
			if((number[i]-48)<s_bit)
			{
				s_bit=(number[i]-48);
				s_pos=pos;
			}
			pos++;
		}*/
		else
		{
			//MIN OUT THE GIVEN NUMBER!
			flag=0;
			min=0;
			pos=0;
			strcpy(number_1,number);
			while(min!=1 && pos<length)
			{
				s_bit=10;
				for(j=pos;j<length;j++)
				{
					if((number_1[j]-48)<=s_bit)
					{
						s_bit=(number_1[j]-48);
						s_pos=j;
					}	
				}
				if(s_bit==0 && pos==0)
				{
					s_bit=10;
					for(j=pos;j<length;j++)
					{
						if(((number_1[j]-48)<=s_bit && (number_1[j]-48)!=0))
						{
							s_bit=(number_1[j]-48);
							s_pos=j;
							flag=1;
						}	
					}
					if(flag==0)
					pos+=1;
				}
				if((number_1[pos]-48)>s_bit)
				{
					min=1;
				}
				else
				{
					pos+=1;
				}	
			}
			//cout<<s_bit<<" "<<s_pos<<" "<<pos<<" ";
			if(pos<length)
			{
				temp=number_1[pos];
				number_1[pos]=(char)(int('0')+s_bit);
				number_1[s_pos]=temp;
			}
			//___________x__________x_____________________x
			//NOW MAX OUT THE NUMBER!
			max=0;
			pos=0;
			while(max!=1 && pos<length)
			{
				l_bit=0;
				for(j=pos;j<length;j++)
				{
					if((number[j]-48)>=l_bit)
					{
						l_bit=(number[j]-48);
						l_pos=j;
					}	
				}
				if((number[pos]-48)<l_bit)
				{
					max=1;
				}
				else
				{
					pos+=1;
				}	
			}
			//cout<<l_bit<<" "<<l_pos<<" "<<pos<<" ";
			if(pos<length)
			{
				temp=number[pos];
				number[pos]=(char)(int('0')+l_bit);
				number[l_pos]=temp;
			}
			printf("Case #%d: %s %s\n",i,number_1,number);
			//cout<<l_bit<<" "<<l_pos<<" "<<s_bit<<" "<<s_pos<<"\n";
		}
	}
	return 0;
}
