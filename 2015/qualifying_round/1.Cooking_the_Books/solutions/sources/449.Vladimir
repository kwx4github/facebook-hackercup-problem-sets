import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;

public class A {

    private static final String FILE_IN = A.class.getSimpleName() + ".in";
    private static final String FILE_OUT = A.class.getSimpleName() + ".out";

    private final void solveTest(final int testId, final Scanner in, final PrintWriter out) throws Exception {

        StringBuilder number = new StringBuilder(in.next());

        int min = Integer.parseInt(number.toString());
        int max = min;

        for (int i = 0; i < number.length(); ++i) {
            for (int j = i + 1; j < number.length(); ++j) {
                if (i == 0 && '0' == number.charAt(j)) {
                    continue;
                }

                char tmp = number.charAt(i);
                number.setCharAt(i, number.charAt(j));
                number.setCharAt(j, tmp);

                int currentNumber = Integer.parseInt(number.toString());

                max = Math.max(max, currentNumber);
                min = Math.min(min, currentNumber);

                tmp = number.charAt(i);
                number.setCharAt(i, number.charAt(j));
                number.setCharAt(j, tmp);
            }
        }

        out.printf("Case #%d: %d %d%n", testId, min, max);
    }

    private final void solve(final Scanner in, final PrintWriter out) throws Exception {
        for (int testId = 1, testCount = in.nextInt(); testId <= testCount; ++testId) {
            solveTest(testId, in, out);
        }
    }

    public static void main(String[] _args) {
        final String[] args = _args;
        Thread th = new Thread(null, new Runnable() {
            @Override
            public void run() {
                runMain(args);
            }
        }, "test", 16 << 20);
        th.setPriority(Thread.MAX_PRIORITY);
        th.start();
        try {
            th.join();
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
    }

    private static final void runMain(String[] args) {
        try {
            final Scanner in = new Scanner(new File(FILE_IN));
            final PrintWriter out = new PrintWriter(new File(FILE_OUT));
            new A().solve(in, out);
            out.close();
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }
    }
}
