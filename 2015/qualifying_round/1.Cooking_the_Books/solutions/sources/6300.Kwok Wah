input_file = "cooking_the_books_example_input.txt"
output_file = "cooking_the_books_example_output.txt"




def tallyDigits(_n):
  d = {}
  for c in _n:
    if int(c) in d.keys():
      d[int(c)]+=1
    else:
      d[int(c)]=1

  return d

def dict2list(dict):
  l = []
  for d in xrange(10):
    if d in dict.keys():
      l.append(dict[d])
    else:
      l.append(0)
  return l

def min_string(_n):
  t = tallyDigits(_n)
  l= dict2list(t)
  s = ""
  z = 0
  for i,d in enumerate(l):
    if i == 0:
      z = d
    else: #i > 0
      s += str(i)*d
  return s[0] + "0"*z + s[1:]


def max_string(_n):
  t = tallyDigits(_n)
  l= dict2list(t)
  s = ""
  for i,d in enumerate(l):
    s += str(i)*d
  s = s[::-1]
  return s


def trySwapForSmaller(n):
  #find the first difference between the given n and the min string of n
  # that is the position p where need to be swapped.
  # the target digit to swap with is the m[p]
  # rfind from the n for the digit m[p], at position p1, swap it with the n[p]
  
  if n == "0":
    return n

  m = min_string(n)

  if n == m:
    return n

  p = None
  for i,d in enumerate(n):
    if n[i] > m[i]:
      p = i
      break

  target_digit = m[p]
  p1 = n.rfind(target_digit)

  return n[:p] + n[p1] + n[p+1:p1] + n[p] + n[p1+1:]

def trySwapForLarger(n):
  #find the first difference between the given n and the min string of n
  # that is the position p where need to be swapped.
  # the target digit to swap with is the m[p]
  # rfind from the n for the digit m[p], at position p1, swap it with the n[p]
  
  if n == "0":
    return n

  m = max_string(n)

  if n == m:
    return n

  p = None
  for i,d in enumerate(n):
    if n[i] < m[i]:
      p = i
      break

  target_digit = m[p]
  p1 = n.rfind(target_digit)

  return n[:p] + n[p1] + n[p+1:p1] + n[p] + n[p1+1:]

'''
n = "127479847128946218648721564315"
t = tallyDigits(n)
d = dict2list(t)
m = min_string(n)
print n, t, d, m
print trySwapForSmaller(n)
n = "8799"
t = tallyDigits(n)
d = dict2list(t)
m = min_string(n)
print n, t, d, m
print trySwapForSmaller(n)
n = "1021"
t = tallyDigits(n)
d = dict2list(t)
m = min_string(n)
print n, t, d, m
print trySwapForSmaller(n)
n = "10110010"
t = tallyDigits(n)
d = dict2list(t)
m = min_string(n)
print n, t, d, m
print trySwapForSmaller(n)
'''



f = open(input_file, 'r')
T = long(raw_input())

for i in xrange(T):
  N = str(input())
  n = long(N)
  #check if current number is already smallest
    #if not, find the smallest digit from the right except zero?
    # swap it with the leading number that is larger than the target digit
    #test cases
    #314159 ==> 114359
    #3141590 ==> 1143590
    #3411590 ==> 1413590
    #1234562 ==> 1224563
    #1234563 ==> 1233564
    #3456712 ==> 1456732
    #3456798 ==> 3456789
    #3456793 ==> 3356794
    #120 ==> 102
    #210 ==> 120
    #10513 ==> 10153; [0=>1, 1=>3, 3=>4, 5=>2]
    #10531 => 10135; [0=>1, 1=>3, 3=>3, 5=>4]
    #105931 ==> 101935
    #102 ==> 102
    #1011010 ==> 1001011
    #1101010 ==> 1001011
    #1011001 ==> 1001011
    #10251 ==> 10152
    #10851 ==> 10158
    #80251 ==> 10258
    
  smallestSwap = trySwapForSmaller(N)
  largestSwap  = trySwapForLarger(N)

  print "Case #"+str(i+1)+": "+smallestSwap+" "+largestSwap
