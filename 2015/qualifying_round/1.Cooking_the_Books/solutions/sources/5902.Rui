import java.io.BufferedReader;
import java.io.InputStreamReader;


public class CookingTheBooks {

    public static final int TMIN=1;
    public static final int TMAX=100;
    public static final int NMIN=0;
    public static final int NMAX=999999999;

    private static int t;
    private static Integer[] numbers;

    public static void readInput() throws Exception {
        BufferedReader br = new BufferedReader( new InputStreamReader(System.in));
        String s = br.readLine();

        if(!isTOk(Integer.valueOf(s))){
            throw new Exception("The input T is invalid");
        }
        else {
            t=Integer.valueOf(s);
            numbers = new Integer[t];
        }
        int i=0;

        while(i<t){
            numbers[i] = Integer.valueOf(br.readLine());

            if(!isNOk(numbers[i]))
                throw new Exception("The input N is invalid");
            i++;
        }

    }



    private static boolean isTOk(int t){
        return (TMIN<=t && TMAX>=t);
    }

    private static boolean isNOk(int n){
        return (NMIN<=n && NMAX>=n);
    }

    public static void main(String[] args) throws Exception {

        readInput();

        for(int i=1;i<=numbers.length;i++){
            System.out.print("Case #"+i+": " );
            swap(numbers[i-1]);
        }

    }

    public static void swap(int number){
        int min=0,max=0;

        min=number;
        max=number;

        String value = String.valueOf(number);
        int size = value.length();


        if(size > 1){
            for(int i=0;i<size-1;i++){
                for(int j=i+1;j<size;j++){
                    if((i==0) && (value.charAt(j)=='0'))
                        continue;
                    else if(value.charAt(i)==value.charAt(j))
                        continue;
                    else {

                        char[] valueInChar=value.toCharArray();
                        char temp =valueInChar[i];
                        valueInChar[i]=valueInChar[j];
                        valueInChar[j]=temp;
                        Integer newValue = Integer.valueOf(new String(valueInChar));
                        if(newValue < min)
                            min=newValue;
                        if(newValue > max)
                            max = newValue;

                    }
                }

            }
        }

        System.out.println(min+" "+max);

    }

}
