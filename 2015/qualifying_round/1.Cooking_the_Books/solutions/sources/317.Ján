// pre-written code {{{
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <queue>
#include <numeric>
#include <iostream>
#include <cassert>
#include <set>
#define FOR(i,n) for(int _n=n,i=0;i<_n;++i)
#define FR(i,a,b) for(int _b=b,i=a;i<_b;++i)
#define CL(x) memset(x,0,sizeof(x))
#define PN printf("\n");
#define MP make_pair
#define PB push_back
#define SZ size()
#define ALL(x) x.begin(),x.end()
#define FORSZ(i,v) FOR(i,v.size())
#define FORIT(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
using namespace std;
typedef vector<int> VI;
typedef vector<string> VS;
typedef long long LL;
///////////////////////////////////////////////////////////////////////////////////
// }}}

template<class T> string i2s(T x) { stringstream s; s<<x; return s.str(); }
int s2i(string s) { stringstream ss(s); int x; ss>>x; return x; }
LL s2ll(string s) { stringstream ss(s); LL x; ss>>x; return x; }

void solve(){
  int x;  
  scanf("%d",&x);
  int low = x;
  int high = x;
  string s = i2s(x);
  FORSZ(i,s) FOR(j,i) {
    if(j==0 && s[i]=='0') {
      //neda sa
    } else {      
      string w = s;
      w[i] = s[j];
      w[j] = s[i];
      low = min(low, s2i(w));
      high = max(high, s2i(w));
    }
  }
  printf("%d %d\n",low,high);
}

int main(){
  int pvs; scanf("%d",&pvs);
  FR(ppp,1,pvs+1){
     printf("Case #%d: ",ppp);

     solve();
  }
}


// vim: fdm=marker:commentstring=\ \"\ %s:nowrap:autoread
