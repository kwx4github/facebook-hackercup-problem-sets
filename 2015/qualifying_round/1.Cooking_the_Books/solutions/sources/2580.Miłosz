import heapq

T = int(raw_input())
for i in xrange(T):
	N = (raw_input())
	arr = []
	tab = []
	x = len(N) - 1
	N = long(N)
	ehh = 0
	ehh += N
	while N > 0:
		#arr.append([N%10, x])
		arr.append(N%10)
		tab.append(N%10)
		N /= 10
		x -= 1
	arr = arr[::-1]
	tab = tab[::-1]

	""" GETTING MAX """
	for x in xrange(len(arr)-1):
		kand = x
		for j in xrange(x+1,len(arr)):
			if arr[j] >= arr[kand]:
				kand = j
		if kand != x and arr[kand] != arr[x]:
			arr[x], arr[kand] = arr[kand], arr[x]
			break
	mak = "".join([ str(x) for x in arr])
	""" GETTING MIN """
	for x in xrange(len(tab)-1):
		kand = x
		for j in xrange(x+1, len(tab)):
			if tab[j] <= tab[kand] and (x != 0 or tab[j] > 0):
				kand = j
		if kand != x and tab[kand] != tab[x]:
			tab[x], tab[kand] = tab[kand], tab[x]
			break
	mnm = "".join([str(x) for x in tab])
	if ehh == 0:
		mnm = 0
		mak = 0
	print "Case #"+str(i+1)+":", mnm, mak
