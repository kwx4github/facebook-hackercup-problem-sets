#include <bits/stdc++.h>

using namespace std;

string toStr(int &x){
	stringstream s;
	s<<x;
	return s.str();
}

bool istherelessleft(string s,int pos){
	int i=pos;
	while(i>0){
		if(s[pos] > s[i]) return true;
		i--;
	}
	return false;
}

int maxPos(string s){
	int max = 0, pos;
	int j=0;
	do{
		for (int i = j; i < s.size(); ++i){
			if(s[i] > max) {
				max = s[i];
				pos = i;
			}
		}
		j++;
		if(j == s.size())break;
	}while(!istherelessleft(s,pos));
	return pos;
}



bool istherelessright(string s,int pos){
	int i=pos;
	while(i>0){
		if(s[pos] < s[i]) return true;
		i--;
	}
	return false;
}

int minPos(string s){
	int min = 999999999 , pos;
	int j=0;
	do{
		for (int i = j; i < s.size(); ++i){
			if(s[i] < min) {
				min = s[i];
				pos = i;
			}
		}
		j++;
		if(j == s.size())break;
	}while(!istherelessright(s,pos));
	return pos;
}

int main(){
	int t;
	cin>>t;
	int number,max,min;
	string maxPosible;
	for (int i = 1; i <= t; ++i){
		cin>>number;
		string s = toStr(number);
		if(s.size() == 1)cout<<"Case #"<<i<<": " <<s<<" "<<s<<endl;
		else{
			max = maxPos(s);
			for (int j = 0; j < max; ++j){
			
				if(s[max] > s[j]){
					int temp = s[j];
					s[j] = s[max];
					s[max] = temp;
					break;
				}
				
			}
			maxPosible = s;
			// calculando el minimo
			s = toStr(number);
			min = minPos(s);
			for (int j = 0; j < min; ++j){				
					if(s[min] < s[j]){
						if(j == 0 && s[min] == '0'){continue;}
							else{
								int temp = s[j];
								s[j] = s[min];
								s[min] = temp;
								break;
							}
					}
					
			}
			string minPosible = s;
			cout<<"Case #"<<i<<": " <<minPosible<<" "<<maxPosible<<endl;

		}
	}
	return 0;
}