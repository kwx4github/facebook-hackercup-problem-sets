#include <iostream>
#include <string>
using namespace std;

void find(string &s, int count[], int i, bool findmin){
	if (i == s.length()){
		return;
	}
	int edge = findmin ? 9 : 0;
	for (int j = 0; j < 10; j++){
		if (findmin){
			edge = (count[9 - j] && (i > 0 || j != 9)) ? 9 - j : edge;
		}else{
			edge = count[j] ? j : edge;
		}
	}
	if (s[i] - '0' == edge){
		count[edge]--;
		find(s, count, i + 1, findmin);
	}else{
		for (int j = s.length() - 1; j > i; j--){
			if (s[j] - '0' == edge){
				s[j] ^= s[i] ^= s[j] ^= s[i];
				return;
			}
		}
	}
}

string swapAttemp(string s, bool findmin){
	int count[10];
	memset(count, 0, sizeof(count));
	for (int i = 0; i < s.length(); ++i){
		count[s[i] - '0']++;
	}
	find(s, count, 0, findmin);
	return s;
}

int main(){
	int numTests;
	cin >> numTests;
	for (int iTest = 1; iTest <= numTests; ++iTest){
		string s;
		cin >> s;
		string s_max = swapAttemp(s, 0);
		string s_min = swapAttemp(s, 1);
		cout << "Case #" << iTest << ": " << s_min << " " << s_max << endl;
	}
	return 0;
}