#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char ** argv){
	FILE *fr;
	FILE *fw;
	int N;
	int i = 0;
	int j = 0;
	int k = 0;
	int max = 0;
	int maxpos = 0;
	int maxspos = 0;
	int min = 0;
	int minpos = 0;
	int minspos = 0;
	int p1, p2, p3;
	char number[20];
	int len = 0;
	int maxswap = 0;
	int minswap = 0;
	int start = 0;
	int mindone =0;
	int maxdone = 0;

	if( argc < 3) return -1;

	fr = fopen(argv[1],"r");
	fw = fopen(argv[2], "w+");
	if( fr == NULL ){
	
		printf( " Cant open read file \n ");	
		return -2;
	}
	if( fw == NULL ){
		fclose(fr);
		printf( " Cant open write file \n ");
		return -3;
	}
		
	fscanf(fr,"%d",&N);
	for( i = 0 ; i < N; i++ ){
		fscanf(fr, "%s",number);
		len = strlen(number);
		maxswap = 0;
		minswap = 0;
		mindone = 0;
		maxdone = 0;
		maxpos = 0;
		minpos = 0;
		maxspos = 0;
		minspos = 0;
		for( j = 0 ; j < len ; j++){
			max = number[j];
			min = number[j];
			for(k = j; k < len; k++){
				if( number[k] > number[j] && max <= number[k] && maxdone != 1){
					printf( "max %c k %c j %c \n",max,number[k],number[j]); 
					max = number[k];
					maxswap++;
					maxpos = k;
					maxspos = j;
				}
				if( number[k] < number[j] && min >= number[k] && mindone != 1 && (number[k] != '0' || j > 0)){
					printf( "min %c k %c j %d \n",min,number[k],j);
					min = number[k];
					minswap++;
					minpos = k;
					minspos = j;
				}		
			}
			if( maxswap > 0 ){
				maxdone =1;
			}
			if( minswap > 0 ){
				mindone =1;
			}
			if( mindone == 1 && maxdone == 1 ) break;
		}
		fprintf(fw,"Case #%d: ",i+1);
		printf("max pos %d %d, min pos %d %d\n",maxpos,max,minpos,min);
		printf( "Number %s ",number);
		min = number[minpos];
		number[minpos] = number[minspos];
		number[minspos] = min;
		printf( "min = %s ",number);
		fprintf(fw,"%s ",number);
		number[minspos] = number[minpos];
		number[minpos] = min;		
		max = number[maxpos];
		number[maxpos] = number[maxspos];
		number[maxspos] = max;
		printf( "max = %s \n",number);
		fprintf(fw,"%s\n",number);
		

	}
	fclose(fr);
	fclose(fw);

}
