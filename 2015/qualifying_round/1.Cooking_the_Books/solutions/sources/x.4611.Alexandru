import sys


def min_higher_than(n, lim):
    m = max(n)
    for i in n:
        if i < m and i > lim:
            m = i
    return m


def swap_digits(n, a, b):
    new_n = list(n)
    new_n[b] = n[a]
    new_n[a] = n[b]
    return ''.join(new_n)


def cook_the_books(n):
    min_digit = min_higher_than(n, '0')
    min_index = n.rindex(min_digit)

    min_price = n
    if min_index > 0:
        min_price = swap_digits(n, 0, min_index)

    max_digit = max(n)
    max_index = n.rindex(max_digit)
    max_price = swap_digits(n, 0, max_index)
    return min_price, max_price

if __name__ == '__main__':
    input_file_name = sys.argv[1]
    output_file_name = sys.argv[2]

    input_file = open(input_file_name, 'r')
    output_file = open(output_file_name, 'w')

    data = input_file.readlines()

    t = int(data[0])

    for i in range(1, t+1):
        n = data[i].strip()
        min_sum, max_sum = cook_the_books(n)
        print >> output_file,'Case #{}: {} {}'.format(str(i), min_sum, max_sum)

    input_file.close()
    output_file.close()