

def repl(s,idx,ch):
#     fir = ""
#     las = ""
#     if idx>0:
#         fir = s[:idx]
#     if idx < len(s)-1:
#         las = s[idx+1:]
#     return fir+ch+las
    s = list(s)
    s[idx]=ch
    k = "".join(s)
    #print "$$"+k+"$$"
    return k

def get_min(s):
    if len(s)==1:
        return s 
    min_idx = 0
    for i in range(1,len(s)):#because the min_idx may point to the digit 0
        if s[i]!="0":
            min_idx = i
            break
    for i in range(0,len(s)):
        if s[i] < s[min_idx] and s[i]!="0":
            min_idx=i
    #swap
    t = s[0]
    s = repl(s,0,s[min_idx])
    s = repl(s,min_idx,t)
    return s
    

def get_max(s):    
    if len(s)==1:
        return s 
    max_idx = 0    
    for i in range(1,len(s)):
        if s[i] > s[max_idx]:
            max_idx=i
    #swap
    t = s[0]
    s =  repl(s,0,s[max_idx])
    s = repl(s,max_idx,t)
    return s    


def solve(case_num,s):
    ss = "Case #"+str(case_num)+": "+get_min(s)+" "+get_max(s)
    return ss

inp = open('input.txt','r')

num_of_rows = int(inp.readline())
res = []
for i in range(num_of_rows):
    s = inp.readline().strip()
    res.append(solve(i+1,s))
outp = open('output.txt','w')
for i in range(num_of_rows):
    outp.write(res[i]+"\n")
    #print res[i]
    
outp.close()

