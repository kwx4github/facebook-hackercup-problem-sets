import java.io.*;

public class Accountant {
    private static BufferedReader in;
    private static BufferedWriter out;

    public static void main(String[] args) {
        try {
            in = new BufferedReader(new InputStreamReader(/*System.in*/ new FileInputStream("E:\\cooking_the_books.txt")));
            out = new BufferedWriter(new OutputStreamWriter(/*System.out*/ new FileOutputStream("E:\\cooking_the_books_out.txt")));
            final int T = Integer.parseInt(in.readLine());

            for (int i = 1; i <= T; i++) {
                String N = in.readLine();
                out.write("Case #" + i + ": " + min(N) + " " + max(N));
                out.newLine();
            }

            in.close();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    private static String findMin(String s) {
        char[] numbers = s.toCharArray();
        Integer min = Character.getNumericValue(numbers[0]);

        for (char number : numbers) {
            int num = Character.getNumericValue(number);
            if (num != 0 && num < min)
                min = num;
        }

        return min.toString();
    }

    private static String findMax(String s) {
        char[] numbers = s.toCharArray();
        Integer max = Character.getNumericValue(numbers[0]);

        for (char number : numbers) {
            int num = Character.getNumericValue(number);
            if (num > max)
                max = num;
        }

        return max.toString();
    }

    private static String max(String s) {
        if (s.length() == 1)
            return s;
        String max = findMax(s);
        int posMax = s.lastIndexOf(max);
        StringBuilder sb = new StringBuilder();

        if (posMax != 0) {
            sb.append(max).append(s.substring(1, posMax)).append(s.charAt(0)).append(s.substring(posMax + 1));
        } else {
            return s;
        }

        return sb.toString();
    }

    private static String min(String s) {
        if (s.length() == 1)
            return s;
        String min = findMin(s);
        int posMin = s.indexOf(min);
        StringBuilder sb = new StringBuilder();

        if (posMin != 0) {
            sb.append(min).append(s.substring(1, posMin)).append(s.charAt(0)).append(s.substring(posMin + 1));
        } else {
            return s;
        }

        return sb.toString();
    }
}
