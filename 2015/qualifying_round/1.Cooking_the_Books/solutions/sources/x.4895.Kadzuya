{-# OPTIONS_GHC -O2 -Wall -fno-warn-missing-signatures -fno-warn-type-defaults #-}
-- {-# LANGUAGE BangPatterns #-}
-- {-# LANGUAGE ViewPatterns #-}

main = interact $ unlines . mapSv sv . tail . lines 

mapSv :: (String -> String) -> [String] -> [String]
mapSv f ss = [caseP i (f s) | (i,s) <- zip [1..] ss]

caseP i a = concat [ "Case #", show i, ": ", a]

sv [c] = unwords [[c], [c]]
sv ccs@(c:cs) = unwords [minSwap, maxSwap]
 where
  minSwap 
    | minVal == c = ccs
    | otherwise = minVal : swap (minVal, c) cs
  maxSwap
    | maxVal == c = ccs
    | otherwise = maxVal : swap (maxVal, c) cs
  minVal = minimum ccs'
  maxVal = maximum ccs'
  ccs' = filter (/='0') ccs

swap :: (Char, Char) -> String -> String
swap (old, new) = init . map fst . scanr f (old, Just old)
 where
  f a (_, Nothing) = (a, Nothing)
  f a (_, Just b)
    | a == b = (new, Nothing)
    | otherwise = (a, Just b)
