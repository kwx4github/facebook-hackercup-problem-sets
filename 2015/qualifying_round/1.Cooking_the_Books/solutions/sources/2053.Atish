package fb_r1_q1;

import java.util.Scanner;

public class fb_r1_q1 {

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int t = Integer.parseInt(s.nextLine());
		String a[] = new String[t];
		for (int i = 0; i < t; i++) {
			a[i] = s.nextLine();
		}
		for (int i = 0; i < t; i++) {
			if (a[i].equals("0")) {
				System.out.printf("Case #%d: %s %s\n", i + 1, a[i], a[i]);
				continue;
			}
			char c[] = a[i].toCharArray();
			int temp[] = new int[c.length];
			for (int j = temp.length - 1, k = 0; j >= 0; j--, k++) {
				temp[k] = Integer.parseInt(String.valueOf(c[j]));
			}
			int temp2[] = new int[c.length];
			for (int j = temp2.length - 1, k = 0; j >= 0; j--, k++) {
				temp2[k] = Integer.parseInt(String.valueOf(c[j]));
			}
			String smallest = getSmallest(temp, 0, temp.length - 1);
			String largest = getLargest(temp2, 0, temp2.length - 1);
			System.out.printf("Case #%d: %s %s\n", i + 1, smallest, largest);
		}
	}

	static void swap(int[] a, int b, int c) {
		int temp = a[b];
		a[b] = a[c];
		a[c] = temp;
	}

	static String getLargest(int temp[], int start, int end) {
		String s = "";
		if (end < 1) {
			return getString(temp);
		}
		int largest = temp[start], pos = start;
		for (int i = start + 1; i <= end; i++) {
			if (largest < temp[i]) {
				pos = i;
				largest = temp[i];
			}
		}
		boolean found = false;
		if (temp[end] != largest) {
			swap(temp, end, pos);
			found = true;
			s = getString(temp);
		} else {
			for (int i = end - 1; i > pos; i--) {
				if (temp[i] != largest) {
					swap(temp, pos, i);
					found = true;
					s = getString(temp);
					break;
				}
			}
		}
		if (!found) {
			return getLargest(temp, start, pos - 1);
		}
		return s;
	}

	static String getSmallest(int temp[], int start, int end) {
		String s = "";
		if (end < 1) {
			return getString(temp);
		}
		int smallest = temp[end], pos = end, pos0 = -1;
		for (int i = start; i <= end; i++) {
			if (temp[i] == 0) {
				pos0 = i;
				break;
			}
		}
		for (int i = start; i <= end; i++) {
			if (temp[i] != 0 && smallest > temp[i]) {
				pos = i;
				smallest = temp[i];
			}
		}
		boolean found = false;
		if (temp[end] != smallest) {
			swap(temp, end, pos);
			found = true;
			s = getString(temp);
		} else {
			if (pos0 != -1) {
				pos = pos0;
				smallest = 0;
			}
			for (int i = end - 1; i > pos; i--) {
				if (temp[i] != smallest) {
					swap(temp, pos, i);
					found = true;
					s = getString(temp);
					break;
				}
			}
		}
		if (!found) {
			return getSmallest(temp, start, pos - 1);
		}
		return s;
	}

	static String getString(int[] t) {
		String s = "";
		for (int i = t.length - 1; i >= 0; i--) {
			s += t[i];
		}
		return s;
	}

}
