#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define gc getchar
#define repa(i,a,n) for(int i=a;i<n;i++)
#define rep(i,n) for(int i=0;i<n;i++)
#define fast() {cin.sync_with_stdio(false);cin.tie(false);cout.tie(false);}
//..........@@   take fast input with sign  @@...........//
int read() {
  char c = gc();
  int sign = 1;
  while((c<'0' || c>'9') && c!='-') c = gc();
  if(c=='-') {
    sign = -1;
    c = gc();
  }
  int ret = 0;
  while(c>='0' && c<='9' ) {
    ret = 10 * ret + c - 48;
    c = gc();
  }
  return ret*sign;
}
//........@@ To merge ranges  @@ .................//
struct node{
	int s;
	int e;
};
inline bool comp(node a, node b)
{
	if(a.s==b.s)
	return a.e<b.e;
}
int main()
{
	int t;
	fast();
	cin>>t;
	int cases=0;
	while(t--)
	{
		cases++;
		string s;
		cin>>s;
		string ss=s;
		int n = s.length();
		int max_v=(int)(s[0]-'0'),max_ind=0;
		int min_v,min_ind;
		for(int i=0;i<n;i++)
		{
			int tem= (int)(s[i]-'0');
			if(tem!=0)
			{
				min_v=(int)(s[i]-'0'),min_ind=i;
			}
		}
		
		for(int i=1;i<n;i++)
		{
		   int tem= (int)(s[i]-'0');
		   if(tem>=max_v)
		   {
		   	max_v=tem;
		   	max_ind = i;
		   }
		   if(tem<=min_v && tem!=0)
		   {
		   	 min_v=tem;
		   	 min_ind=i;
		   }	
		}
		if(max_ind!=0)
		swap(s[0],s[max_ind]);
		if(min_ind!=0)
		swap(ss[0],ss[min_ind]);
		cout<<"Case #"<<cases<<": "<<ss<<" "<<s<<endl;
		
		
	}
} 
