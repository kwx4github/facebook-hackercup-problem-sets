using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace FB1_1
{
    class Program
    {
        static String swap(String line, int i, int j)
        {
            char temp = line[i];
            StringBuilder sb = new StringBuilder(line);
            sb[i] = line[j];
            sb[j] = temp;
            return sb.ToString();
        }

        static String getMinNumber(String num)
        {
            //first let's store the location of the first occurence of each digit from the right
            Dictionary<int, int> firstOccurenceFromRight = new Dictionary<int, int>();
            for (int i = num.Length - 1; i >= 0; i--)
            {
                if (!firstOccurenceFromRight.ContainsKey(int.Parse(num[i].ToString()))) firstOccurenceFromRight.Add(int.Parse(num[i].ToString()), i);
            }

            //go through all the digits from left to right. Treat the first digit as a special case as it can't be 0
            for (int i = 0; i < num.Length; i++)
            {
                if ((i == 0) && (num[i] == '1')) continue;
                if (num[i] == '0') continue;
                //look for the min digit from the right that is smaller than i-th digit (but is not 0 if i is 0)
                //for (int j = num.Length - 1; j > i; j--)
                {
                    int min_digit = 0;
                    if (i == 0) min_digit = 1;
                    for (int k = min_digit; k < int.Parse(num[i].ToString()); k++)
                    {
                        if ((firstOccurenceFromRight.ContainsKey(k)) && (firstOccurenceFromRight[k] > i)) return swap(num, i, firstOccurenceFromRight[k]);
                    }
                }
            }
            return num;
        }

        static String getMaxNumber(String num)
        {
            //first let's store the location of the first occurence of each digit from the right
            Dictionary<int, int> firstOccurenceFromRight = new Dictionary<int, int>();
            for (int i = num.Length - 1; i >= 0; i--)
            {
                if (!firstOccurenceFromRight.ContainsKey(int.Parse(num[i].ToString()))) firstOccurenceFromRight.Add(int.Parse(num[i].ToString()), i);
            }

            //go through all the digits from left to right. Treat the first digit as a special case as it can't be 0
            for (int i = 0; i < num.Length; i++)
            {
                //if ((i == 0) && (num[i] == '1')) continue;
                if (num[i] == '9') continue;
                //look for the max digit from the right that is bigger than i-th digit (but is not 0 if i is 0)
                //for (int j = num.Length - 1; j > i; j--)
                {
                    int max_digit = 9;
                    //if (i == 0) min_digit = 1;
                    for (int k = max_digit; k > int.Parse(num[i].ToString()); k--)
                    {
                        if ((firstOccurenceFromRight.ContainsKey(k)) && (firstOccurenceFromRight[k] > i)) return swap(num, i, firstOccurenceFromRight[k]);
                    }
                }
            }
            return num;
        }

        static void Main(string[] args)
        {
            string line;

            // Read the file and display it line by line.
            System.IO.StreamReader file =
               new System.IO.StreamReader("cooking_the_books.txt");
            System.IO.StreamWriter output = new System.IO.StreamWriter("cooking_the_books_o.txt");
            int count = int.Parse(file.ReadLine());
            for (int i = 0; i < count; i++)
            {
                line = file.ReadLine();                            

                String outLine = "Case #" + (i + 1) + ": ";
                outLine = outLine + getMinNumber(line) + " " + getMaxNumber(line);
                output.WriteLine(outLine);
                System.Console.WriteLine(outLine);
            }

            file.Close();
            output.Close();

            // Suspend the screen.
            Console.ReadLine();
        }
    }
}
