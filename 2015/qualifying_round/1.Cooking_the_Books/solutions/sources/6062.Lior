#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int getLength(long int num);
void getMinMax(long int num, long int* min, long int * max);
void swap(int * arr, int ia, int ib);
void calcNum(int* arr, int n, long int* dest);
int main() {
    int n=0, i;
    long int num=0, min=0,max=0;
    if(scanf("%d",&n)!= 1) return 1;
    
    // do for each case
    for (i=0; i<n; i++) {
        // get the number and init arr
        if(scanf("%ld",&num)!=1) return 1;
        getMinMax(num,&min,&max);
        printf("Case #%d: %ld %ld\n",i+1, min, max);
    }
    return 0;
}

int getLength(long int num) {
    int i=0;
    while (num != 0) {
        num/=10;
        i++;
    }
    return i;
}

void getMinMax(long int num, long int* min, long int * max) {
    int *numArr;
    int len=0,i,j, min_i = 0, max_i = 0;
    // convert to array: (and find min / max numbers:
    len = getLength(num);
    numArr = (int*) malloc(len*sizeof(int));
    *min = 0;
    *max = 0;
    for (i=len; i>0; --i) {
        numArr[i-1] = num%10;
        num/=10;
    }
    for (i=0; i<(len-1); i++) {
        min_i=i;
        for (j=i+1; j<len; j++) {
            if (i == 0) {
                min_i = ((numArr[j] != 0) && (numArr[j] <= numArr[min_i])) ? j : min_i;
            } else {
                min_i = ((numArr[j] <= numArr[min_i])) ? j : min_i;
            }
        }
        if (min_i > i && (numArr[min_i] < numArr[i])) {
            swap(numArr, i, min_i);
            calcNum(numArr, len, min);
            swap(numArr, i, min_i);
            break;
        }
    }
    if (*min==0) {
        calcNum(numArr, len, min);
    }
    // calc max:
    for (i=0; i<(len-1); i++) {
        max_i=i;
        for (j=i+1; j<len; j++) {
            max_i = ((numArr[j] >= numArr[max_i])) ? j : max_i;
        }
        if (max_i > i && numArr[i] < numArr[max_i]) {
            swap(numArr, i, max_i);
            calcNum(numArr, len, max);
            swap(numArr, i, max_i);
            break;
        }
    }
    if (!*max) {
        calcNum(numArr, len, max);
    }
    free(numArr);
}
void calcNum(int* arr, int n, long int* dest) {
    int j=0,t;
    for (j=0; j<n; j++) {
        t= arr[j];
        *dest += arr[j]*((long int) pow(10, n-(j+1)));
    }
}
void swap(int * arr, int ia, int ib) {
    int tmp = arr[ia];
    arr[ia] = arr[ib];
    arr[ib] = tmp;
}