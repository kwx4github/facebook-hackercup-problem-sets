import java.io.*;
import java.util.Arrays;

public class CookingTheBooks {
	
	public static void main(String[] args) throws IOException {
		
		File file = new File("/Users/Ujval/Desktop/cooking_the_books.txt");
		BufferedReader br = new BufferedReader(new FileReader(file));
		int num = Integer.parseInt(br.readLine());
		String[] toTweak = new String[num];
		String[] tweaked = new String[num];
		
		for(int i = 0; i < num; i++) {
			toTweak[i] = br.readLine();
			tweaked[i] = getSmallestAndLargest(toTweak[i]);
		}

		for(int i = 0; i < tweaked.length; i++) {
			System.out.println("Case #"+(i+1) +": " +tweaked[i]);
		}
		
	}

	private static String getSmallestAndLargest(String num) {
		
		int originalVal = Integer.parseInt(num);
		
		char[] charDigits = num.toCharArray();
		int[] digits = new int[charDigits.length];
		int smallest = originalVal;
		int largest = originalVal;
		
		for(int i = 0; i < charDigits.length; i++)
			digits[i] = charDigits[i] - 48;

		for(int i = 0; i < digits.length - 1; i++) {
			for(int j = i + 1; j < digits.length; j++) {
				int value = toInteger(swap(digits, i, j));
				
				if(smallest > value) 
					smallest = value;
				else if(largest < value) 
					largest = value;
			}
		}
		
		return smallest + " " +largest;
	}
	
	private static int[] swap(int[] arr, int i, int j) {
		
		// Can't let 0 come to front
		if(i == 0 && arr[j] == 0)
			return arr;
		
		int[] newarr = Arrays.copyOf(arr, arr.length);
		int a = newarr[i];
		newarr[i] = newarr[j];
		newarr[j] = a;
		return newarr;
	}
	
	private static int toInteger(int[] arr) {
		int num = 0;
		
		for(int i = arr.length - 1, j = 0; i >= 0 ; i--, j++)
			num += (arr[i] * Math.pow(10, j));
		
		return num;
	}
	
}
