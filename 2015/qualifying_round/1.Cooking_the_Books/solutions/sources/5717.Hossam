#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>

// prototypes
long long getValue(char number[], char mode);

int main(void)
{
    // get T
    int t = 0;
    scanf("%d", &t);
    
    // get input T times
    for (int i = 1; i <= t; i++)
    {
        // get N
        char n[10];
        scanf("%s", n);
        
        // get lowest & highest values
        long long lowest = getValue(n, 'l');
        long long highest = getValue(n, 'h');
        
        // prints them out
        printf("Case #%i: %lld %lld\n", i, lowest, highest);
    }
}

/*
*   gets either the lowest or the highest possible value,
*   using mode 'l' or 'h' respectively
*/
long long getValue(char number[], char mode)
{
    // get N
    long long n = atoi(number);
    long long value = n;
    
    // iterate over each digit
    for (int i = 0, n = strlen(number); i < n; i++)
    {
        // iterate over each digit (again)
        for (int j = 1; j < n; j++)
        {
            // swap the current digit with the one after
            long long buffer = value;
            if (!(i == 0 && number[j] == '0'))
            {  
                char new[n + 1];
                strcpy(new, number);
                char tmp = new[i];
                new[i] = new[j];
                new[j] = tmp;
                
                // form a new number
                buffer = atoi(new);
            }
        
            // compare to existing highest or lowest value
            if (buffer > value && mode == 'h')
            {
                value = buffer;
            }
            else if (buffer < value && mode == 'l')
            {
                value = buffer;
            }    
        }
    }
    return value;   
}    
