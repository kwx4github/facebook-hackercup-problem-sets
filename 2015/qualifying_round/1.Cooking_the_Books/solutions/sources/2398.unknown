#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

int main(){
    freopen("out.txt", "w", stdout);
    string initial, galiver, liliput, numbers;
    int test, temp, cse = 0, boro[13], chhoto[13], flag_C[13], mx, ind;
    cin >> test;
    while(test--){
        initial.clear(), numbers.clear(), galiver.clear(), liliput.clear();
        cin >> initial;
        galiver = initial;
        liliput = initial;
        int sz = initial.size();
        int cnt = 0;
        memset(flag_C, 0, sizeof(flag_C));
        memset(boro, 0, sizeof(boro));
        memset(chhoto, 0, sizeof(chhoto));
        for(int i = 0; i < sz; i++){
            if(!flag_C[initial[i]-'0'])numbers.push_back(initial[i]);
            flag_C[initial[i]-'0']++;
            if(initial[i] >= '1' && initial[i] <= '9')cnt++;
        }
        if(cnt <= 1 || numbers.size() == 1){
            cout << "Case #" << ++cse << ": " << initial << " " << initial << endl;
            continue;
        }
        for(int i = 0; i <= 9; i++)boro[i] = flag_C[i], chhoto[i] = flag_C[i];
        sort(numbers.begin(), numbers.end());
        int nmz = numbers.size(), flag = 0;
        if(numbers[0] == '0'){
            if(liliput[0] == numbers[1]){
                chhoto[numbers[1]-'0']--;
                for(int i = 1, j = 0; i < sz; i++){
                    if(chhoto[numbers[j]-'0'] == 0){
                        j++, i--;
                        continue;
                    }
                    if(liliput[i] == numbers[j])chhoto[numbers[j]-'0']--;
                    else{
                        for(int z = sz-1; z >= 0; z--){
                            if(liliput[z] == numbers[j]){
                                swap(liliput[i], liliput[z]);
                                flag = 1;
                                break;
                            }
                        }
                    }
                    if(flag)break;
                }
            }
            else{
                for(int k = sz-1; k >= 0; k--){
                    if(liliput[k] == numbers[1]){
                        swap(liliput[0], liliput[k]);
                        break;
                    }
                }
            }
        }
        else{
            for(int i = 0, j = 0; i < sz; i++){
                if(chhoto[numbers[j]-'0'] == 0){
                    j++, i--;
                    continue;
                }
                if(liliput[i] == numbers[j])chhoto[numbers[j]-'0']--;
                else{
                    for(int z = sz-1; z >= 0; z--){
                        if(liliput[z] == numbers[j]){
                            swap(liliput[i], liliput[z]);
                            flag = 1;
                            break;
                        }
                    }
                }
                if(flag)break;
            }
        }
        flag = 0;
        reverse(numbers.begin(), numbers.end());
        for(int i = 0, j = 0; i < sz; i++){
            if(boro[numbers[j]-'0'] == 0){
                j++, i--;
                continue;
            }
            if(galiver[i] == numbers[j])boro[initial[i]-'0']--;
            else{
                for(int z = sz-1; z >= 0; z--)
                    if(galiver[z] == numbers[j]){
                        swap(galiver[i], galiver[z]);
                        flag = 1;
                        break;
                    }
            }
            if(flag)break;
        }
        cout << "Case #" << ++cse << ": " << liliput << " " << galiver << endl;
    }
    return 0;
}
