#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;

void swap(string& op, int x, int y) {
	char temp = op[x];
	op[x] = op[y];
	op[y] = temp;
}

void fillup(vector<int> &counts, string n) {
	int l = n.size();
	for(int i = 0; i < l; i++)
		counts[n[i]-'0'] = i;
}

void solve_for_smallest(vector<int> &counts, string n, string &smallest) {
	int l = n.size();
	smallest = n;
	for(int i = 0; i < l; i++) {
		int x = n[i]-'0';
		for(int j = 0; j < x; j++) {
			if(j == 0 && i == 0) {
				if(counts[j] > 0) {
					for(int k = 1; k < x; k++)
						if(counts[k] > 0) {
							swap(smallest, counts[k], 0);
							return;
						}			
				}
			} else {
				if(counts[j] > i) {
					swap(smallest, counts[j], i);
					return;
				}
			}
		}
	}
}

void solve_for_largest(vector<int> &counts, string n, string &largest) {
	int l = n.size();
	largest = n;
	for(int i = 0; i < l; i++) {
		int x = n[i]-'0';
		for(int j = 9; j > x; j--) {
			if(counts[j] > i) {
				swap(largest, counts[j], i);
				return;
			}
		}
	}
}

int main() {
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	int t;
	cin >> t;
	for(int a = 1; a <= t; a++) {
		cout << "Case #"<< a << ": ";
		string n;
		cin >> n;
		
		vector<int> counts(10,-1);
		fillup(counts, n);
		string smallest, largest;
		solve_for_smallest(counts, n, smallest);
		solve_for_largest(counts, n, largest);
		
		cout << smallest << " " << largest << endl;
	}
	return 0;
}