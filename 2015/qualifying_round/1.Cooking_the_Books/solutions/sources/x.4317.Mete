package question1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class CookBook
{

	/**
	 * @param args
	 */
	public static void main(String[] args)
	{
		CookBook cookBook = new CookBook();
		Scanner s = new Scanner(System.in);
		int testCase = s.nextInt();

		for (int i = 0; i < testCase; i++)
		{
			String str = s.nextLine();
			if (!str.equals(""))
			{
				List<Integer> number = new ArrayList<Integer>();
				List<Integer> numberCopy = new ArrayList<Integer>();

				for (int j = 0; j < str.length(); j++)
				{
					number.add(Character.getNumericValue(str.charAt(j)));
					numberCopy.add(Character.getNumericValue(str.charAt(j)));
				}

				System.out.print("Case #" + (i + 1) + ": ");
				cookBook.getMin(number);
				System.out.print(" ");
				cookBook.getMax(numberCopy);
				System.out.println();
			} else
			{
				i = i - 1;
			}
		}
	}

	public void getMin(List<Integer> number)
	{
		if (number.size() == 1)
		{
			for (int i = 0; i < number.size(); i++)
			{
				System.out.print(number.get(i));
			}
		} else
		{
			List<Integer> numSorted = new ArrayList<Integer>(number);
			Collections.sort(numSorted);
			int minNumber = -1;
			if (numSorted.get(0) == 0)
			{
				minNumber = numSorted.get(1);
			} else
			{
				minNumber = numSorted.get(0);
			}
			int latestPos = -1;
			for (int i = 0; i < number.size(); i++)
			{
				if (minNumber == number.get(i))
				{
					latestPos = i;
				}
			}
			Collections.swap(number, 0, latestPos);
			for (int i = 0; i < number.size(); i++)
			{
				System.out.print(number.get(i));
			}

		}
	}

	public void getMax(List<Integer> number)
	{
		if (number.size() == 1)
		{
			for (int i = 0; i < number.size(); i++)
			{
				System.out.print(number.get(i));
			}
		} else
		{
			int maxNumber = Collections.max(number);
			int latestPos = -1;
			for (int i = 0; i < number.size(); i++)
			{
				if (maxNumber == number.get(i))
				{
					latestPos = i;
				}
			}
			Collections.swap(number, 0, latestPos);
			for (int i = 0; i < number.size(); i++)
			{
				System.out.print(number.get(i));
			}

		}
	}

}
