#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <utility>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <string>
 
#define LL long long
#define vi vector<int>
#define pb push_back
#define sz size
#define all(x) (x).begin(),(x).end()
#define it iterator
#define REP(i,a,b) for(int i=(a);i<(b);i++)
#define REPX(i,a,b,c) for(int i=(a);i<(b);i+=(c))
#define DEP(i,a,b) for(int i=(a)-1;i>=(b);i--)
#define REX(i,x) for(__typeof((x).begin()) i=(x).begin(); i!=(x).end();i++)
#define pii pair<int,int>
#define mp make_pair
#define fi first
#define se second
#define st string
#define ffo find_first_of
#define su substr
#define vs vector<st>
#define ub upper_bound
#define lb lower_bound
#define bs binary_search
#define ord(c) (c-'0')
#define mems(x) memset(x,0,sizeof(x))
#define memc(x,y) memcpy(x,y,sizeof(y))
#define MAX 15
#define MOD 1000000007
using namespace std;
char x[MAX],y[MAX];
int main()
{
	int tc; scanf("%d",&tc);
	REP(t,0,tc)
	{
		scanf("%s",x);
		int n=(int)strlen(x);
		printf("Case #%d: ",t+1);
		memc(y,x);
		REP(i,0,n)
		{
			int g=ord(y[i]),m=10,k;
			REP(j,i+1,n)
			{
				int h=ord(x[j]);
				if((i || h) && h<=m) { m=h; k=j; }
			}
			if(m<g) { swap(y[i],y[k]); break; }
		}
		printf("%s ",y);
		memc(y,x);
		REP(i,0,n)
		{
			int g=ord(y[i]),m=0,k;
			REP(j,i+1,n)
			{
				int h=ord(x[j]);
				if(h>=m) { m=h; k=j; }
			}
			if(m>g) { swap(y[i],y[k]); break; }
		}
		printf("%s\n",y);
	}
	return 0;
}	
