#pragma comment (linker, "/STACK:128000000")
#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>

#define mp make_pair
#define pb push_back
#define sz(x) ((int)(x).size())
#define forn(i, n) for(int i=0;i<(n);++i)
#define clr(ar, val) memset(ar, val, sizeof(ar))

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> point;

const int N = 1e5 + 200;
const int INF = int(1e9);
const ll LINF = 1ll * INF * INF;
const int md = int(1e9) + 7;
const ld eps = 1e-9;
const ld PI = 3.1415926535897932384626433832795l;

int n, test, iter, l, r;
int c[10], ppow[10];
int main()
{
    //ios_base::sync_with_stdio(false);
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	ppow[0] = 1;
	for (int i = 1; i < 10; i++) ppow[i] = ppow[i - 1] * 10;
    cin >> test;
    for (iter = 1; iter <= test; iter++) {
        cin >> n;
        int old = n;
        l = r = n;
        int len = 0;
        while (n) {
            c[len++] = n % 10;
            n /= 10;
        }
        for (int i = 0; i < len; i++)
            for (int j = 0; j < i; j++) {
                if (i == len - 1 && !c[j]) continue;
                int cur = old - c[i] * ppow[i] - c[j] * ppow[j];
                cur += c[i] * ppow[j] + c[j] * ppow[i];
                r = max(r, cur);
                l = min(l, cur);
            }
        cout << "Case #" << iter << ": " << l << " " << r << endl;
    }
    return 0;
}
