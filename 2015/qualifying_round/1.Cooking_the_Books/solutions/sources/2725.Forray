using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;
using System.IO;

namespace CookingTheBooks
{
	class Program
	{
		static void Main( string[ ] args )
		{


			using ( StreamReader sr = new StreamReader( "D:\\input.txt" ) )
			{
				using ( StreamWriter sw = new StreamWriter( "D:\\output.txt", false, sr.CurrentEncoding ) )
				{
					int T = int.Parse( sr.ReadLine( ) );
					for ( int i = 0; i < T; i++ )
					{

						var num = sr.ReadLine( );
						var orig = num.ToList( ).Select( x => int.Parse( x.ToString( ) ) ).ToList( );
						var a = orig.ToList( );
						var b = orig.ToList( );
						var max = Max( a, b );
						a = orig.ToList( );
						b = orig.ToList( );
						var min = Min( a, b );

						sw.Write( string.Format( "Case #{0}: {1} {2}\n", ( i + 1 ), min, max ) );
						Console.WriteLine( "Case #{0}: {1} {2}\n", ( i + 1 ), min, max );
					}
				}
			}

		}


		public static string Max( List<int> a, List<int> b ) 
		{

			for ( int i = 0; i < a.Count; i++ )
			{
				var m = b.Max( );
				if ( a[ i ] < m )
				{
					var j = a.LastIndexOf( m );
					var tmp = a[ i ];
					a[ i ] = a[ j ];
					a[ j ] = tmp;
					break;
				}
				else 
				{
					b.Remove( a[ i ] );
				}
			}

			return a.Aggregate( "", ( x, y ) => x.ToString( ) + "" + y.ToString( ) );

		}

		public static string Min( List<int> a, List<int> b )
		{

			for ( int i = 0; i < a.Count; i++ )
			{
				var m = b.Min( );
				if (i == 0 && m == 0)
				{
					var c = b.OrderBy( num => num ).Distinct();
					if ( c.Count( ) <= 1 )
						break;
					m = c.ElementAt( 1 );
				}

				
				if ( a[ i ] > m )
				{
					var j = a.LastIndexOf( m );
					var tmp = a[ i ];
					a[ i ] = a[ j ];
					a[ j ] = tmp;
					break;
				}
				else
				{
					b.Remove( a[ i ] );
				}
			}

			return a.Aggregate( "", ( x, y ) => x.ToString( ) + "" + y.ToString( ) );

		}


	}
}
