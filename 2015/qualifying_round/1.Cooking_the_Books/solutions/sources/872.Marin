import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;


public class CookingTheBooks {

	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new FileReader(new File("cooking_the_books.txt")));
		BufferedWriter bw = new BufferedWriter(new FileWriter(new File("cooking_the_books_output.txt")));
		int T = Integer.parseInt(br.readLine());
		for(int N = 1; N<=T; N++){
			char[] digits = br.readLine().toCharArray();
			StringBuilder sb = new StringBuilder("Case #");
			sb.append(N);
			sb.append(": ");
			int[] min = findSwapIndexesMin(digits);
			if(min!=null) swap(digits, min);
			sb.append(new String(digits));
			sb.append(" ");
			if(min!=null) swap(digits, min);
			int[] max = findSwapIndexesMax(digits);
			if(max!=null) swap(digits, max);
			sb.append(new String(digits));
			sb.append("\n");
			bw.write(sb.toString());
		}
		br.close();
		bw.flush();
		bw.close();
	}
	
	public static int[] findSwapIndexesMin(char[] digits){
		boolean swap = false;
		for(int i=0; i<digits.length-1; i++){
			char minChar = digits[i];
			int minIndex = i;
			for(int j=i+1;j<digits.length; j++){
				if(digits[j]<=minChar && digits[j]<digits[i]){
					if(i==0 && digits[j]=='0') continue;
					minChar = digits[j];
					minIndex = j;
					swap = true;
				}
			}
			if(swap){
				int[] idx = {i, minIndex};
				return idx;
			}
		}
		return null;
	}
	
	public static int[] findSwapIndexesMax(char[] digits){
		boolean swap = false;
		for(int i=0; i<digits.length-1; i++){
			char maxChar = digits[i];
			int maxIndex = i;
			for(int j=i+1;j<digits.length; j++){
				if(digits[j]>=maxChar && digits[j]>digits[i]){
					maxChar = digits[j];
					maxIndex = j;
					swap = true;
				}
			}
			if(swap){
				int[] idx = {i, maxIndex};
				return idx;
			}
		}
		return null;
	}
	
	public static void swap(char[] arr, int[] idx){
		char tmp = arr[idx[0]];
		arr[idx[0]] = arr[idx[1]];
		arr[idx[1]] = tmp;
	}
	
}
