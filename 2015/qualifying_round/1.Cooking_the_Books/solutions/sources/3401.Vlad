#include <fstream>
#include <algorithm>

using namespace std;

ifstream f("input.in");
ofstream g("output.out");

long long N;
int v[15];

int main() {
	int Teste;
	
	f >> Teste;
	for (int i = 1; i <= Teste; i++) {
		int countDigits = 0;
		long long temp;
		long long smallest, largest;
		
		f >> N;
		
		smallest = largest = N;
		temp = N;
		while (temp) {
			countDigits++;
			temp /= 10;
		}
		
		temp = N;
		for (int j = 0; j < countDigits; j++, temp /= 10)
			v[countDigits - j] = temp % 10;
		
		for (int j = 1; j < countDigits; j++)
			for (int k = j + 1; k <= countDigits; k++) {
				if (j == 1 && v[k] == 0)
					continue;
				
				swap (v[j], v[k]);
				
				long long temp_N = 0;
				for (int x = 1; x <= countDigits; x++)
					temp_N = temp_N * 10 + 1LL * v[x];
				
				if (temp_N > largest)
					largest = temp_N;
				if (temp_N < smallest)
					smallest = temp_N;
				
				swap (v[j], v[k]);
			}
			
		g << "Case #" << i << ": " << smallest << " " << largest << '\n';
	}
	
	return 0;
}
