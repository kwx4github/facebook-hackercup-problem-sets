using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.IO;

namespace FHC2015 {
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window {
        public MainWindow() {
            InitializeComponent();
        }

        private uint NewSwap(byte[] ori, int n0, int n1) {
            byte[] newb = new byte[ori.Length];
            ori.CopyTo(newb, 0);
            byte b = newb[n0];
            newb[n0] = newb[n1];
            newb[n1] = b;
            uint sum = 0;
            for (int i = 0; i < newb.Length; i++)
                sum = sum*10 + newb[i];
            return sum;
        }

        private void btCook_Click(object sender, RoutedEventArgs e) {
            string[] lines = File.ReadAllLines("C:\\FHC\\cooking_the_books.txt");
            StringBuilder sbInput = new StringBuilder();
            StringBuilder sbOutput = new StringBuilder();
            for(int i=1; i<lines.Length; i++) {
                string s = lines[i];
                sbInput.AppendLine(s);

                uint n = Convert.ToUInt32(s);
                int exp = (int)Math.Floor(Math.Log10(n));
                uint nmin = (uint)Math.Pow(10, exp);

                byte[] digits = Encoding.UTF8.GetBytes(s);
                for (int j = 0; j < digits.Length; j++) digits[j] = (byte)(digits[j] - 48);

                uint n_small = n;
                uint n_large = n;

                for (int k = 0; k < digits.Length-1; k++) 
                    for(int l=k+1; l < digits.Length; l++){
                        uint nn = NewSwap(digits, k, l);
                        if (nn >= nmin && nn < n_small) n_small = nn;
                        if (nn >= nmin && nn > n_large) n_large = nn;
                }

                sbOutput.AppendLine(String.Format("Case#{0}: {1} {2}", i, n_small, n_large));

            }

            txInput.Text = sbInput.ToString();
            txOutput.Text = sbOutput.ToString();
        }

        private void btResolution_Click(object sender, RoutedEventArgs e) {

        }

        private void btMaze_Click(object sender, RoutedEventArgs e) {

        }
    }
}
