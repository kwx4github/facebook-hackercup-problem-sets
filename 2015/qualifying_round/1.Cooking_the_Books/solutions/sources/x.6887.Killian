import java.io.IOException;
import java.util.Scanner;

public class Cook {
	public static void main(String[] args) throws IOException
	{
		Scanner in = new Scanner(System.in);
		int numItems = in.nextInt();
		int myNum = 0;
		for (int count = 0; count < numItems; count++)
		{
			myNum = in.nextInt();
			System.out.println("Case #"+ (count+1) + ": " + findMin(myNum) + " " + findMax(myNum));
		}
		in.close();
	}
	
	private static int findMax(int myNumber)
	{
		String myN= String.valueOf(myNumber);
		int val = 0;
		int max = 0;
		for (int count = 0; count < myN.length(); count++)
		{
			if (Integer.parseInt(myN.substring(count, (count+1))) > val)
			{
				max = count;
				val = Integer.parseInt(myN.substring(count, (count+1)));
			}
		}
		
		String myN2 = "";
		for (int c = 0; c < myN.length(); c++)
		{
		   if (c ==0)
			  myN2 += myN.charAt(max);
		   else if ((c==max)&&(c!=0))
		   	  myN2 += myN.charAt(0);
		   else
			  myN2 += myN.charAt(c); 
		}
		return Integer.parseInt(myN2);
	}
	
	private static int findMin(int myNumber)
	{
		String myN= String.valueOf(myNumber);
		int val = 9999;
		int min = 0;
		for (int count = 0; count < myN.length(); count++)
		{
			int n = Integer.parseInt(myN.substring(count, (count+1)));
			if ((n < val)&&(n!=0))
			{
				min = count;
				val = n;
			}
		}
		
		String myN2 = "";
		for (int c = 0; c < myN.length(); c++)
		{
		   if (c ==0)
			  myN2 += myN.charAt(min);
		   else if ((c==min)&&(c!=0))
		   	  myN2 += myN.charAt(0);
		   else
			  myN2 += myN.charAt(c); 
		}
		return Integer.parseInt(myN2);
	}
}
