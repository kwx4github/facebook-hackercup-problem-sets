// import
import java.util.*;
import java.io.*;

public class ctb {
       
    public ctb() {
    }
    
    public static void main(String[] args) throws IOException{
    	//Scan file
    	Scanner s = new Scanner(new BufferedReader(new FileReader("cooking_the_books.txt")));
    	
    	//Start at Case#1
        s.nextLine();
    	int linecase = 1;
    	
    	//try if nextLine() is not null, catch null, close code
		try {
			
			//if nextLine() is not null
            for(String line; (line = s.nextLine()) != null;) {
            	
            	//initiate min and max
            	int min = Integer.valueOf(line);
            	int max = Integer.valueOf(line);
            	String tempstring = new String();
            	int tempint = Integer.valueOf(line);
            	
            	//check line
            	for(int x = 0; x<line.length(); x++) {
            		for(int y = 0; y<line.length(); y++) {
            			
            			//swap characters
            			char stringarray[] = line.toCharArray();
            			if((stringarray[y] == '0' && x == 0) || (stringarray[x] == '0' && y == 0))
            				tempstring = line;
            				
            			//exception number cannot be 0 and swap at 1st number
            			else {
            				char temp = stringarray[x];
            				stringarray[x] = stringarray[y];
            				stringarray[y] = temp;
            				tempstring = new String(stringarray);
            			}
            			
            			//exception if tempstring is null	
            			try {
            				tempint = Integer.valueOf(tempstring);
            			} catch(NumberFormatException e) {
            				tempint = tempint;
            			}
            			
            			//find min and max
            			min = Math.min(min, tempint);
            			max = Math.max(max, tempint);
            		}
            	}
            	//print min and max, carry next line
            	System.out.println("Case #"+linecase+": "+min+", "+max);
            	linecase++;
   			}
        } catch(NoSuchElementException e) {
                s.close();
        }
    }
}
