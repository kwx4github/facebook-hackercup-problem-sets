"""Cooking the Books

Input
Input begins with an integer T, the number of numbers that need tweaking. Each of the next T lines contains a integer N.

Output
For the ith number, print a line containing "Case #i: " followed by the smallest and largest numbers that can be made from the original number N, using at most a single swap and following the rules above.

Constraints
1 ≤ T ≤ 100 
0 ≤ N ≤ 999999999 
N will never begin with a leading 0 unless N = 0
"""

def main():
    linesToProcc = 0
    toProcc = 0
    with open("cooking_the_books.txt") as f:
        for line in f:
            if toProcc == 0:
                linesToProcc = int(line[:-1])
                toProcc += 1
            else:
                proccLine(toProcc, line[:-1])
                if toProcc < linesToProcc:
                    toProcc += 1

def proccLine(number, inputStr):
    listInt = []
    for char in inputStr:
        listInt.append(int(char))
    listInt = bubbleSort(listInt)
    smaller = "".join(map(str, listInt))
    bigger = "".join(map(str, reversed(listInt)))
    print("Case #"+str(number)+": "+smaller+" "+bigger)

def bubbleSort(alist):
    for passnum in range(len(alist)-1,0,-1):
        for i in range(passnum):
            if alist[i]>alist[i+1]:
                temp = alist[i]
                alist[i] = alist[i+1]
                alist[i+1] = temp
    return alist

if __name__ == "__main__":
    main()