#include <bits/stdc++.h>

int numberLength(int n) {
	if(n == 0)
		return 1;
	int ten = 1, i = 0;
	while(n >= ten) {
		ten *= 10;
		i++;
	}
	return i;
}

int getDigit(int n, int pos) {
	int ten = 1;
	for(int i = 0; i < pos; i++)
		ten *= 10;
	return (n/ten)%10;
}

int setDigit(int n, int d, int pos) {
	int ten = 1;
	for(int i = 0; i < pos; i++)
		ten *= 10;
	n += (d-getDigit(n, pos))*ten;
	return n;
}

int swapDigits(int n, int pos1, int pos2) {
	int d1 = getDigit(n, pos1), d2 = getDigit(n, pos2);
	n = setDigit(n, d2, pos1);
	n = setDigit(n, d1, pos2);
	return n;
}

int main() {
	int t;
	scanf("%d", &t)?:0;
	for(int i = 0; i < t; i++) {
		int n;
		scanf("%d", &n)?:0;
		int sol1 = n, sol2 = n, l = numberLength(n);
		for(int j = 0; j < numberLength(n); j++)
			for(int k = j+1; k < numberLength(n); k++) {
				int temp = swapDigits(n, j, k);
				if(numberLength(temp) == l) {
					sol1 = std::min(sol1, temp);
					sol2 = std::max(sol2, temp);
				}
			}
		printf("Case #%d: %d %d\n", i+1, sol1, sol2);
	}
	return 0;
}
