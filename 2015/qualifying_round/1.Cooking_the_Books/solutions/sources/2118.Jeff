import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class HackerCupTester {

	public static void main(String[] args){
		//args[0]: input file
		//args[1]: output file
		//args[2]: the gold standard output file for compare
		
		if(args.length >= 3){
			File inputFile = new File(args[0]);
			File outputFile = new File(args[1]);
			File goldFile = new File(args[2]);
			
			try {
				Scanner scan = new Scanner(inputFile);

				List<String> lines = new ArrayList<String>();
				while(scan.hasNextLine()){
					String line = scan.nextLine();
					lines.add(line);
				}
				HackerCupTester tester = new HackerCupTester();
				String[] outputArray = tester.cookingTheBooks(lines);
				
				//write result to file
				FileWriter writer = new FileWriter(outputFile);
				writer.write(outputArray[0]);
				for(int i=1;i<outputArray.length;i++){
					writer.write("\n"+outputArray[i]);
				}
				writer.close();
				
				//get and compare result
				Scanner scanO = new Scanner(outputFile);
				List<String> c1 = new ArrayList<String>();
				while(scanO.hasNextLine()){
					c1.add(scanO.nextLine());
				}
				
				Scanner scanG = new Scanner(goldFile);
				List<String> c2 = new ArrayList<String>();
				while(scanG.hasNextLine()){
					c2.add(scanG.nextLine());
				}
				
				if(c1.size() == c2.size()){
					for(int i=0;i<c1.size();i++){
						System.out.println(c1.get(i)+"|"+c2.get(i));
						if(!c1.get(i).equals(c2.get(i))){
							System.out.println("File do not match.");
							return;
						}
					}
					System.out.println("Same result!");
				}
				else{
					System.out.println("File do not match.");
				}
				
			} catch ( IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	public String[] cookingTheBooks(List<String> lines){
		String[] ret = new String[Integer.parseInt(lines.get(0))];
		for(int i=1;i<lines.size();i++){
			char[] num = lines.get(i).toCharArray();
			char[] num2 = num.clone();
			ret[i-1] = "Case #"+i+": "+getMin(num,0,'1')+" "+getMax(num2,0);
		}
		return ret;
	}
	public int getMin(char[] num, int replaceIndex, char minV){
		if(replaceIndex >= num.length){
			return charArrayToInteger(num);
		}

		char value = num[replaceIndex];
		int newIndex = replaceIndex;
		for(int i=num.length-1;i>replaceIndex;i--){
			if(value > num[i] && num[i] >=minV){
				value = num[i];
				newIndex = i;
			}
		}
		if(newIndex != replaceIndex){
			char tmp = num[replaceIndex];
			num[replaceIndex] = num[newIndex];
			num[newIndex]=tmp;
			return charArrayToInteger(num);
		}
		else return getMin(num,++replaceIndex,'0');
	}
	
	public int getMax(char[] num, int replaceIndex){
		if(replaceIndex >= num.length){
			return charArrayToInteger(num);
		}
		char value = num[replaceIndex];
		int newIndex = replaceIndex;
		for(int i=num.length-1;i>replaceIndex;i--){
			if(value < num[i]){
				value = num[i];
				newIndex = i;
			}
		}

		if(newIndex != replaceIndex){
			char tmp = num[replaceIndex];
			num[replaceIndex] = num[newIndex];
			num[newIndex]=tmp;
			return charArrayToInteger(num);
		}
		else return getMax(num,++replaceIndex);
	}
	
	public int charArrayToInteger(char[] num){
		String ea="";
			for(char c:num){
				ea+=c;
			}
			return Integer.parseInt(ea);
	}
}
