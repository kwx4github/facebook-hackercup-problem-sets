#include <bits/stdc++.h>
#include <assert.h>
 
using namespace std;
 
typedef long long ll;
typedef long double ld;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;
 
#define rep(i,n) for(int i = 0; i < n; i++)
#define reps(i,a,n) for(int i = a; i < n; i++)
#define s(n) cin >> n
#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define rsz(x,n) x.clear(); x.resize(n)
#define rrsz(x,a,n) x.clear(); x.resize(n,a)
#define wt while(true)
#define all(x) x.begin(),x.end()
#define pb push_back
#define ls(x) (((x) << 1) + 1)
#define rs(x) ((ls(x)) + 1)
#define md(a,b) (((a) + (b)) >> 1)
#define INF (1e9 + 7)
 
int t, u, v, n, k, m, c, d, f, e, l, r, q;
const int N = 1e5 + 100;
const ll mod = 1e9 + 7;
const int K = 120;
const int step_up = 120;
int DP[N][2 * K];
vll a;
string ss, s1, s2;
ll ansmax, ansmin;
ll conv (string ss) {
	ll x = 0;
	if (ss[0] == '0' && ss.size() != 1) return -1;
	rep (i, ss.size()) {
		x = x * 10 + (ss[i] - '0');
	}
	return x;
}
void upd (string ss) {
	ll v = conv(ss);
	if (v == -1) return;
	else {
		ansmax = max(v, ansmax);
		ansmin = min(v, ansmin);
	}
}
int main () {
    csl;
	freopen("cooking_the_books.txt", "r", stdin);
	freopen("ss.txt", "w", stdout);
	cin >> t;
	reps (j, 1, t + 1) {
		ansmin = 1000000000000000LL, ansmax = -3242;
		cout << "Case #" << j << ": ";
		cin >> ss;
		rep (i, ss.size()) {
			rep (j, ss.size()) {
				swap(ss[i], ss[j]);
				upd(ss);
				swap(ss[i], ss[j]);
			}
		}
		cout << ansmin << " " << ansmax << '\n';
	}
    return 0;
}