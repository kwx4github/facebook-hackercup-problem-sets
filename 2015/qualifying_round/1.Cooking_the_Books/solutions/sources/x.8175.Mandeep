#include <bits/stdc++.h>
#define ll long long
#define dbg(x) cout<<#x<<": "<<x<<endl
#define dbgv(x,i) cout<<#x<<"["<<i<<"]: "<< x[i]<<endl
#define inf 1061109567
#define maxx 99999999
#define minn -99999999
#define PB push_back
#define MP make_pair
#define ff first
#define ss second
#define mod 1000000007
#define f(i,a,b) for(i = a; i < b; i++)
#define sz(a) int((a).size())
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
using namespace std;
void fastInOut(){ios_base::sync_with_stdio(0);cin.tie(NULL),cout.tie(NULL);}
#define gc getchar_unlocked
//void sc(int &x){register int c = gc();x = 0;for(;(c<48 || c>57);c = gc());for(;c>47 && c<58;c = gc()){x = (x<<1) + (x<<3) + c - 48;}}
#define sc(x) scanf("%d",&x)
struct number{
                int pos,digit;
};
void solve1(ll n)
{
    if(n/10 <= 1)
    {
        cout<<n<<" ";    return;
    }
    ll temp = n;
    int i = 1,j;
    number num[15];
    int last[15] = {0};
    while(temp > 0)
    {
        num[i].digit = temp%10;
        num[i].pos = i;
        i++;temp/=10;
    }
    int len = i-1;
    for(i = 1;i <= len/2 + 1 ;i++)
        swap(num[i].digit,num[len-i+1].digit);
    for(i = 1;i <= len ;i++)
    {
         last[num[i].digit] = i;
    }
    int flag = 1;
    for(i = 1; i<= len && flag;i++)
    {
        if(i == 1)
        {
            for(j = 1;j <= 9;j++)
            {
            if(last[j] > i && num[i].digit > num[last[j]].digit)
                {
                    swap(num[i].digit,num[last[j]].digit);
                    flag = 0;
                    break;
                }
            }
            continue;
        }
        for(j = 0;j <= 9;j++)
            {
            if(last[j] > i && num[i].digit > num[last[j]].digit)
                {
                    swap(num[i].digit,num[last[j]].digit);
                    flag = 0;
                    break;
                }
            }
    }
    for(i = 1;i <= len ;i++)
         cout<<num[i].digit;
}

void help(vector<int>& v, int k, vector<int>& maxi)
{
    int i,j;
   if (k == 0)
    {
  int flag=0;
  for(i=0;i<sz(v);i++)
  {
   if(v[i]<maxi[i])
   {
    flag=0;break;
   }
   else if(v[i]>maxi[i])
   {
    flag=1; break;
   }
  }
  if(flag)
  {
   for (i = 0; i < sz(v); i ++) {
    maxi[i]=v[i];
   }
  }
  return;
 }

 for (i = 0; i < sz(v) - 1; i ++)
    {
  for (j = i + 1; j < sz(v); j ++)
  {
   swap(v[i], v[j]);
   help(v, k - 1, maxi);
   swap(v[i], v[j]);
  }
 }
 return;
}
void swap2(vector<int> v, int k)
{
 vector<int> maxi;
 maxi = v;
 int i;
 for (i = 0; i < sz(v); i ++)
   maxi[i] = 0;
 help(v, k, maxi);
 for (i = 0; i < sz(maxi); i ++)
    cout << maxi[i] ;
 return;
}
void solve2(ll n)
{
    if(n/10 <= 1)
    {
        cout<<n<<" ";    return;
    }
    ll temp = n;
    int i = 1,j;
    number num[15];
    int last[15] = {0};
    while(temp > 0)
    {
        num[i].digit = temp%10;
        num[i].pos = i;
        i++;temp/=10;
    }
    int len = i-1;
    for(i = 1;i <= len/2 + 1 ;i++)
        swap(num[i].digit,num[len-i+1].digit);
    vector <int> v;
    for(i = 1;i <= len ;i++)
        v.PB(num[i].digit);
        swap2(v,1);
}

int main()
{
    freopen("in.txt", "r", stdin);
    freopen("output.txt","w",stdout);
    int t,i;
    ll n;
    cin>>t;
    f(i,1,t+1)
    {
        cin>>n;
        cout<<"Case #"<<i<<": ";
        solve1(n);
        cout<<" ";
        solve2(n);
        cout<<endl;
    }
    return 0;
}
