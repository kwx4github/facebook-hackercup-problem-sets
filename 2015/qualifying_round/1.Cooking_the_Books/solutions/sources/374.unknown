#include <iostream>
#include <vector>
using namespace std;

int digitCount(int n) {
	int cnt = 0;
	while (n>0) {
		cnt++;
		n/=10;
	}
	cnt += cnt==0;
	return cnt;
}

int getXthDigit(int n, int x) {
	vector<int> digits;
	while (n>0) {
		digits.push_back(n%10);
		n /= 10;
	}
	if (digits.size() == 0) {
		digits.push_back(0);
	}
	if (x<digits.size())
		return digits[digits.size()-x-1];
	return 0;
}

int swapDigits(int n, int d1, int d2) {
	int newn = 0;
	int count = digitCount(n);
	for (int i=0; i<count; i++) {
		newn *= 10;
		if (i == d1) {
			newn += getXthDigit(n, d2);
		} else if (i == d2) {
			newn += getXthDigit(n, d1);
		} else {
			newn += getXthDigit(n, i);
		}
	}
	return newn;
}

int main() {
	int t;
	cin>>t;
	for (int tn=0; tn<t; tn++) {
		int n;
		cin >> n;
		int cnt = digitCount(n);
		int smallest = n;
		int largest = n;
		for(int i=0; i<cnt; i++) {
			for (int j=i+1; j<cnt; j++) {
				if ((i==0) && getXthDigit(n, j)==0)
					continue;
				int newn = swapDigits(n, i, j);
				if (smallest > newn) {
					smallest = newn;
				}
				if (largest < newn) {
					largest = newn;
				}
			}
		}
		cout << "Case #" << tn+1 << ": " << smallest << ' ' << largest << endl;
	}
}