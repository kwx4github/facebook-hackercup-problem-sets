package fbhackercup;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Writer;

/**
 * 
 * @author xycoder
 *
 * https://www.facebook.com/hackercup/problems.php?pid=582062045257424&round=742632349177460
 */
public class Cookbook {

	public static void main(String[] args){
		Cookbook c = new Cookbook();
		// c.test1();
		c.run();
		
		//c.runwithfile("/Users/y/codes/fbhackercup/in1.txt", "/Users/y/codes/fbhackercup/out1.txt");
		//c.runwithfile("/Users/y/codes/fbhackercup/in2.txt", "/Users/y/codes/fbhackercup/out2.txt");
	}
	
	public void test1(){
		
		int[] a = this.getminmax("21345330");
		System.out.println(a[0] + ", " + a[1]);
	}
	
	public void runwithfile(String infile, String outfile){
		try {
			BufferedReader r = new BufferedReader(new FileReader(infile));
			Writer w = new BufferedWriter(new FileWriter(outfile));
			String line = r.readLine();
			int n = Integer.valueOf(line);
			for(int i = 1; i <= n; ++i){
				int[] values = getminmax(r.readLine());
				w.write("Case #" + i + ": " + values[1] + " " + values[0] + "\n");
			}
			w.flush();
			w.close();
			r.close();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void run(){
		BufferedReader r = new BufferedReader(new InputStreamReader(System.in));
		try {
			String line = r.readLine();
			int n = Integer.valueOf(line);
			for(int i = 1; i <= n; ++i){
				int[] values = getminmax(r.readLine());
				System.out.println("Case #" + i + ": " + values[1] + " " + values[0]);
			}
			r.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public int[] getminmax(String num){
		
		if(num.length() == 1){
			return new int[]{Integer.valueOf(num), Integer.valueOf(num)};
		}

		char[] max = new char[num.length()];
		char[] min = new char[num.length()];
		int maxindex = 0;
		int minindex = 0;
		for(int i = 0; i < num.length(); ++i){
			max[i] = num.charAt(i);
			min[i] = num.charAt(i);
			if(max[i] > num.charAt(maxindex)){
				maxindex = i;
			}
			if((min[i] != '0') && (min[i] < num.charAt(minindex))){
				minindex = i;
			}
		}
		
		char temp = max[0];
		max[0] = max[maxindex];
		max[maxindex] = temp;
		
		temp = min[0];
		min[0] = min[minindex];
		min[minindex] = temp;
 		
		return new int[]{Integer.valueOf(new String(max)), Integer.valueOf(new String(min))};
	}
}
