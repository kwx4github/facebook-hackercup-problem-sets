import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;

public class Cooking {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int t = in.nextInt();
		
		for(int a = 0; a < t; a++) {
			int n = in.nextInt();
			
			ArrayList<Integer> max_list = new ArrayList<Integer>();
			ArrayList<Integer> min_list = new ArrayList<Integer>();
			
			while(n != 0) {
				max_list.add(n % 10);
				min_list.add(n % 10);
				n /= 10;
			}
			
			int cur_max = -1;
			int cur_ind = -1;
			for(int i = max_list.size() - 1; i >= 0; i--) {
				//for each digit in n, starting at the most significant
				for(int j = i-1; j >= 0; j--) {
					//iterate through each digit of lesser significance
					if(max_list.get(j) >= max_list.get(i) && max_list.get(j) >= cur_max) {
						cur_max = max_list.get(j);
						cur_ind = j;
					}
				}
				if(cur_ind != -1) {
					//if a new max element was found
					//swap i and cur_ind
					Collections.swap(max_list, i, cur_ind);
					break;
				}
			}
			
			int cur_min = Integer.MAX_VALUE;
			cur_ind = -1;
			for(int i = min_list.size() - 1; i >= 0; i--) {
				//for each digit in n, starting at the most significant
				for(int j = i-1; j >= 0; j--) {
					//iterate through each digit of lesser significance
					if(min_list.get(j) <= min_list.get(i) && min_list.get(j) <= cur_min && min_list.get(j) != 0) {
						cur_min = min_list.get(j);
						cur_ind = j;
					}
				}
				if(cur_ind != -1) {
					//if a new min element was found
					//swap i and cur_ind
					Collections.swap(min_list, i, cur_ind);
					break;
				}
			}
			
			int max = 0;
			int min = 0;
			
			for(int i = max_list.size() - 1; i >= 0; i--) {
				max += max_list.get(i);
				if(i != 0) {
					max *= 10;
				}
			}
			
			for(int i = max_list.size() - 1; i >= 0; i--) {
				min += min_list.get(i);
				if(i != 0)
					min *= 10;
			}
			
			System.out.println("Case #"+(a+1)+": "+min+" "+max);
		}
	}
}