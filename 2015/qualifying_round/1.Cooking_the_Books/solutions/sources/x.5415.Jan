#include "stdafx.h"
#include <iostream>
#include <ctime>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <fstream>
#include <unordered_map>
#include <bitset>

using namespace std;

int main()
{
	FILE *in, *out;
	freopen_s(&in, "cooking_the_books.txt", "r", stdin);
	freopen_s(&in, "out.txt", "w", stdout);

	int t;
	cin >> t;
	for (int i = 1; i <= t; i++)
	{
		string number;
		cin >> number;
		string minNumber = number, maxNumber = number;
		size_t swapMinIndex = 0, swapMaxIndex = 0;
		if (number[swapMinIndex] == '1')
		{
			swapMinIndex++;
			while (number[swapMinIndex] == '0') swapMinIndex++;
		}
		while (number[swapMaxIndex] == '9') swapMaxIndex++;;

		size_t minIndex = swapMinIndex, maxIndex = swapMaxIndex;
		char minValue = number[swapMinIndex], maxValue = number[swapMaxIndex];
		int x = number.length();
		bool minFound = false, maxFound = false;
		bool canSwapZero = (swapMinIndex != 0);
		while (x-- > 0)
		{
			if (!maxFound && number[x] > maxValue)
			{
				maxValue = number[x];
				maxIndex = x;
				if (maxValue == '9')
					maxFound = true;
			}
			if (!minFound && number[x] < minValue)
			{
				if (number[x] == '0' && !canSwapZero)
					continue;
				minValue = number[x];
				minIndex = x;
				if ((canSwapZero && minValue == '0') || (!canSwapZero && minValue == '1'))
					minFound = true;
			}

			if (maxFound && minFound)
				break;
		}
		swap(minNumber[swapMinIndex], minNumber[minIndex]);
		swap(maxNumber[swapMaxIndex], maxNumber[maxIndex]);
		cout << "Case #" << i << ": " << minNumber << " " << maxNumber << endl;
	}

	return 0;
}