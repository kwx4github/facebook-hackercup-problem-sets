<?php
/**
 * Created by PhpStorm.
 * User: penyaev
 * Date: 11.01.15
 * Time: 2:32
 */ 

$filename = $argv[1];
$file = fopen($filename, 'r');
if (!$file) {
  die ('Failed to open file '.$file);
}

$lines = intval(fgets($file));

for ($i = 1; $i <= $lines; ++$i) {
  $number = trim(fgets($file));

  $digits = array_map(function ($x) { return intval($x); }, str_split($number));

  $tmax_digits = $digits;
  $tmin_digits = $digits;

  rsort($tmax_digits);
  sort($tmin_digits);

  $tmax_number = implode('', $tmax_digits);
  $tmin_number = implode('', $tmin_digits);
  $first_nonzero_index = 0;
  for ($j = 0; $j < strlen($tmin_number); ++$j) {
    if ((int)$tmin_number[$j] > 0) {
      $first_nonzero_index = $j;
      break;
    }
  }
  $tmp = $tmin_number[0];
  $tmin_number[0] = $tmin_number[$first_nonzero_index];
  $tmin_number[$first_nonzero_index] = $tmp;

  $max_number = $number;
  $min_number = $number;

  for ($j = 0; $j < strlen($tmax_number); ++$j) {
    if ($max_number[$j] == $tmax_number[$j]) {
      continue;
    } else {
      $max_digit_index = $j;
      for ($k = $j; $k < strlen($max_number); ++$k) {
        if ((int)$max_number[$k] > (int)$max_number[$max_digit_index]) {
          $max_digit_index = $k;
        }
      }

      $tmp = $max_number[$j];
      $max_number[$j] = $max_number[$max_digit_index];
      $max_number[$max_digit_index] = $tmp;
      break;
    }
  }

  for ($j = 0; $j < strlen($tmin_number); ++$j) {
    if ($min_number[$j] == $tmin_number[$j]) {
      continue;
    } else {
      $min_digit_index = $j;
      if ($j == 0) {
        $allow_zero = false;
      } else {
        $allow_zero = true;
      }
      for ($k = $j; $k < strlen($min_number); ++$k) {
        if ((int)$min_number[$k] < (int)$min_number[$min_digit_index]) {
          if ((int)$min_number[$k] == 0) {
            if ($allow_zero) {
              $min_digit_index = $k;
            }
          } else {
            $min_digit_index = $k;
          }
        }
      }

      if (($min_number[$min_digit_index] == 0 && $allow_zero) || !$allow_zero) {
        $tmp = $min_number[$j];
        $min_number[$j] = $min_number[$min_digit_index];
        $min_number[$min_digit_index] = $tmp;
      }
      break;
    }
  }

  printf('Case #%d: %s %s'.PHP_EOL, $i, $min_number, $max_number);
}

fclose($fp);
