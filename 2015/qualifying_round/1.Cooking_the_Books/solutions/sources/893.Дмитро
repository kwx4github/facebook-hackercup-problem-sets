#include <iostream>
#include <string>
#include <fstream>

using namespace std;

unsigned long long T;
string N, smallest, largest;

ifstream in("cooking_the_books_example_input.txt");
ofstream out("result.txt");

void findSmallest(string &number, int position) {
	
	if (position >= number.length())
		return;

	char smallest_digit = number[position]-'0', smallest_digit_i = position;
	for (size_t i = position + 1; i < number.size(); ++i) {
		char digit = number[i] - '0';
		if ((position > 0 || digit > 0) && digit <= smallest_digit) {
			smallest_digit = digit;
			smallest_digit_i = i;
		}
	}
	if (smallest_digit == number[position]-'0') {
		findSmallest(number, position + 1);
	} else {
		swap(number[smallest_digit_i], number[position]);
	}

}

void findLargest(string &number, int position) {

	if (position >= number.length())
		return;

	char largest_digit = number[position]-'0', largest_digit_i = position;
	for (size_t i = position + 1; i < number.size(); ++i) {
		char digit = number[i] - '0';
		if (digit > 0 && digit >= largest_digit) {
			largest_digit = digit;
			largest_digit_i = i;
		}
	}
	if (largest_digit == number[position]-'0') {
		findLargest(number, position + 1);
	} else {
		swap(number[largest_digit_i], number[position]);
	}
}

int main() {

	in >> T;
	for (int t = 1; t <= T; ++t) {
		
		in >> N;
		smallest = N; largest = N;
		findLargest(largest, 0);
		findSmallest(smallest, 0);

		out << "Case #" << t << ": " << smallest << " " << largest << endl;
	}

	return 0;
}