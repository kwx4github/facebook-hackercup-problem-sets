#include <stdio.h>

int N;
int k;
int A[9];
int min, max, min_index=-1, max_index=-1;

FILE* input = fopen("cooking_the_books.txt", "r");
FILE* output = fopen("cooking_the_books_output.txt", "w");

int getDigits(int x) {
	int i = 0;
	while(x != 0) {
		A[8-i] = x % 10;
		x = x/10;
		i++;
	}
	return i;
}

void printTable(int A[], int j) {
	for(int i=j; i<=8; i++) fprintf(output, "%d", A[i]);
}

void swap(int A[], int a, int b) {
	int t = A[a];
	A[a] = A[b];
	A[b] = t;
}


int main() {
	int T;
	fscanf(input, "%d", &T);
	
	for(int t=1; t<=T; t++) {
		
		fscanf(input, "%d", &N);
		
		k = getDigits(N); //k = length of N
		int f = 8-k+1; //place of msd
		
		min = 10; max = -1;
		for(int i=f; i<=8; i++) {
			if(A[i] < min && A[i] != 0) {
				min = A[i];
				min_index = i;
			}
			if(A[i] > max) {
				max = A[i];
				max_index = i;
			}
		}
		
		if(N == 0){
			fprintf(output, "Case #%d: 0 0\n", t);
		}
		else{
			fprintf(output, "Case #%d: ", t);
			swap(A, f, min_index);
			printTable(A, f); fprintf(output, " ");
			
			getDigits(N);
		
			swap(A, f, max_index);
			printTable(A, f); fprintf(output, "\n");
		}
	}
	
	fclose(input);
	fclose(output);
	
	return 0;
}

