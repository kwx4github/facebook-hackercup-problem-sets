import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;

/**
 * @author James Rodgers
 * @version 1.0
 * @since 1/8/15
 */

public class BookCooker 
{
	public static void main(String[] args) throws Exception 
	{
		PrintWriter outputFile = new PrintWriter("output.txt");
		StringBuilder output = new StringBuilder();
		
		Scanner inputFileName = new Scanner(System.in);
		String fileName = args[0];
		Scanner fileContents = new Scanner(new File(fileName));
		//Scanner fileContents = new Scanner(new File("C:\\Users\\James\\Desktop\\cooking_the_books_example_input.txt"));
		
		int numbersToCook = 0;
		
		if(fileContents.hasNextInt())
		{
			numbersToCook = fileContents.nextInt();
				
			// Check for constraint issue
			if (!(0 <= numbersToCook) || !(numbersToCook <= 100))
			{
				inputFileName.close();
				fileContents.close();
				outputFile.close();
				throw new Exception("Out of range first number!");
			}
			
			// Cooking time!
			for(int i = 0; i < numbersToCook; i++)
			{
				StringBuilder smallest = new StringBuilder(fileContents.next());
				StringBuilder largest = new StringBuilder(smallest);
				
				int smallestInt = Character.getNumericValue(smallest.charAt(0)); 
				int largestInt = Character.getNumericValue(smallest.charAt(0));
				
				int smallestIntIndex = 0; 
				int largestIntIndex = 0;
				
				if ( !(0 <= Integer.parseInt(smallest.toString())) || !(Integer.parseInt(smallest.toString()) <= 999999999))
				{
					inputFileName.close();
					fileContents.close();
					outputFile.close();
					throw new Exception("Out of range first number!");
				}
				
				for (int j = 0; j < smallest.length(); j++)
				{
					int digit = Character.getNumericValue(smallest.charAt(j));
					
					// 0 don't matter
					if (digit > 0)
					{
						if (smallestInt > digit)
						{
							smallestInt = digit;
							smallestIntIndex = j;
						}
						
						if(largestInt < digit)
						{
							largestInt = digit;
							largestIntIndex = j;
						}
					}
				}
				
				// Swap largest and smallest
				char temp1 = smallest.charAt(smallestIntIndex);
				char temp2 = smallest.charAt(0);
				
				smallest.setCharAt(0, temp1);
				smallest.setCharAt(smallestIntIndex, temp2);
				
				temp1 = largest.charAt(largestIntIndex);
				temp2 = largest.charAt(0);
				
				largest.setCharAt(0, temp1);
				largest.setCharAt(largestIntIndex, temp2);
				
				
				output.append("Case #" + (i + 1) + ": " + smallest.toString() + " " + largest.toString() + "\n");
			}
			outputFile.print(output.toString());
			//System.out.print(output.toString());
		}
		
		// Cleanup
		inputFileName.close();
		fileContents.close();
		outputFile.close();
	}
}