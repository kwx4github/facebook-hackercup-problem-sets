import java.io.*;
import java.math.*;
import java.util.*;
import java.util.regex.*;

public class Main {
	private static StringTokenizer tokens = new StringTokenizer("");
	private static BufferedReader in;
	private static BufferedWriter out;
	
	public static void main(String[] args) throws Exception {
        in = new BufferedReader(new InputStreamReader(System.in));
        out = new BufferedWriter(new OutputStreamWriter(System.out));
		int T = nextInt();
		for (int t = 1; t <= T; t++) {
			char[] s = next().toCharArray();
			String smaller = new String(s);
			String larger = smaller;
			final int n = s.length;
			for (int i = 0; i < n; i++) {
				for (int j = i + 1; j < n; j++) if (s[j] != '0' || i > 0) {
					swap(s, i, j);
					String temp = new String(s);
					if (temp.compareTo(smaller) < 0) {
						smaller = temp;
					}
					if (temp.compareTo(larger) > 0) {
						larger = temp;
					}
					swap(s, i, j);
				}
			}
			printfln("Case #%d: %s %s", t, smaller, larger);
		}
        out.close();
    }
	
	private static void swap(char[] sequence, int i, int j) {
		sequence[i] ^= sequence[j];
		sequence[j] ^= sequence[i];
		sequence[i] ^= sequence[j];
	}
	
	private static double nextDouble() throws Exception {
		return Double.parseDouble(next());
	}
	private static int nextInt() throws Exception {
		return Integer.parseInt(next());
	}
	private static long nextLong() throws Exception {
		return Long.parseLong(next());
	}
	private static String next() throws Exception {
		fill();
		return tokens.nextToken();
	}
	private static String readLine() throws IOException {
		return in.readLine();
	}
	
	private static void fill() throws Exception {
		if (!tokens.hasMoreTokens()) {
			tokens = new StringTokenizer(in.readLine());
		}
	}
	private static void print(Object o) throws Exception {
		out.append(o.toString());
	}
	private static void printf(String format, Object... args) throws Exception {
		out.append(String.format(format, args));
	}
	private static void printfln(String format, Object... args) throws Exception {
		printf(format + "\n", args);
	}
	private static void println(Object o) throws Exception {
		out.append(o + "\n");
	}
	private static void println() throws Exception {
		out.append("\n");
	}
}