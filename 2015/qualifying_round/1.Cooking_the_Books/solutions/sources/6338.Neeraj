// Neeraj Vaishnao's code goes in here
#include <stdio.h>
#include <string.h>
char str[10] , temp[10] ;
int  mni , mxi , mnj , mxj  ;
void swap()
{
	char ch = str[mni] ;
	str[mni] = str[mnj] ;
	str[mnj] = ch ;
	printf("%s ",str) ;
	ch = temp[mxi] ;
	temp[mxi] = temp[mxj] ;
	temp[mxj] = ch ;
	printf("%s\n",temp) ;
}

int main()
{
	int cases , n , mn , mx , i , j  , flag1 , flag2 , t = 0 ;
	scanf("%d",&cases) ;
	while(++t <= cases)
	{
		scanf("%s",str) ;
		printf("Case #%d: ",t) ;
		n = strlen(str) ;
		flag1 = flag2 = 1 ;
		mxj = mnj = mni = mxi = 0 ;
        i = 0 ;
        mn = 0 ;
        while((++i < n) )
        {
            if((str[i] <= str[mn]) && (str[i] != '0') &&(str[i] != str[0]))
                mn = i ;
        }
        if(mn != 0 )
        {
            flag2 = 0 ;
            mni = 0 ;
            mnj = mn ;
        }
        i = 0 ;
        mx = 0 ;

        while((++i < n) )
        {
            if((str[i] >= str[mx]) && (str[i] != str[0] ))
                mx = i ;
        }
//printf("sbdfkshdf\n");
        	if((mx != 0 ))
			{
				mxi = 0 ;
				mxj = mx ;
				flag1 = 0 ;
	//			printf("mxi = %d and mxj = %d ",mxi,mxj);
			}
      //  printf("Flag1 = %d\n",flag1) ;
        i = 0 ;
        while((flag1 || flag2) && (++i < n))
		{
			mx = mn = j = i ;
			while(++j < n )
			{
				if( flag1 && (str[j] >= str[mx] )&& (str[j] != str[i] ))
					mx = j ;
				else
				{
				if(flag2 && (str[j] <= str[mn] ) && (str[j] != str[i] ))
					mn = j ;
				}
			}
			if( flag1 && (mx != i ))
			{
				mxi = i ;
				mxj = mx ;
				flag1 = 0 ;
		//		printf("mxi = %d and mxj = %d ",mxi,mxj);
			}
			if( flag2 && (mn != i ))
			{
				mni = i ;
				mnj = mn ;
				flag2 = 0 ;
			//	printf("mni = %d and mnj = %d ",mni,mnj);
			}
		}
		//printf("mni = %d and mnj = %d ",mni,mnj);
		strcpy(temp,str) ;
		((!mni) && (str[mnj] == '0' ) && (mni != mnj))? mni += 1 : 0 ;
		swap() ;
	}
	return 0 ;
}
