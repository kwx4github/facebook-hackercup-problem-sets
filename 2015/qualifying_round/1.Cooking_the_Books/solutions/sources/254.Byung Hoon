#include <iostream>
#include <cstdio>
#include <fstream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> number;

int toNum() {
    int ans = 0;
    for (int i = 0; i < number.size(); i++) {
        ans *= 10;
        ans += number[i];
    }
    return ans;
}

void vectorise(int N) {
    number = vector<int>();
    if (N == 0) number.push_back(0);
    else {
        while (N > 0) {
            number.push_back(N % 10);
            N /= 10;
        }
    }
    reverse(number.begin(), number.end());
}

int numDigits(int N) {
    if (N == 0) return 1;
    int ans = 0;
    while (N > 0) {
        ans++;
        N /= 10;
    }
    return ans;
}

int main() {
    ifstream cin("input.txt");
    ofstream cout("output.txt");

    int N, num;
    cin >> N;

    for (int i = 0; i < N; i++) {
        cin >> num;
        vectorise(num);

        int minNum = num;
        int maxNum = num;

        for (int j = 0; j < number.size(); j++) {
            for (int k = 0; k < number.size(); k++) {
                int curDigits = numDigits(toNum());
                swap(number[j], number[k]);
                if (numDigits(toNum()) == curDigits) {
                    minNum = min(minNum, toNum());
                    maxNum = max(maxNum, toNum());
                }
                swap(number[j], number[k]);
            }
        }

        cout << "Case #" << i+1 << ": " << minNum << " " << maxNum << endl;
    }

    return 0;
}
