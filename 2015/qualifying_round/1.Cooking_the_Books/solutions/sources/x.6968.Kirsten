import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class CookingBooks
{
	private static void output(int i, String big, String small)
	{
		String s = "Case #" + i + ": " + small + " " + big;
		System.out.println(s);		
	}
	
	private static String arrayToString(String[] arr)
	{
		StringBuilder builder = new StringBuilder();
		for(String s : arr) {
		    builder.append(s);
		}
		return builder.toString();
	}
		
	private static int findNextLargest(String[] num, int index)
	{
		int bigNum = 0;
		int idx = index;
		for(int x = num.length-1; x >= index; x--)
		{
			int temp = Integer.parseInt(num[x]);
			if(temp > bigNum)
			{
				idx = x;
				bigNum = temp;				
			}
		}
		return idx;
	}
	
	private static String calcBiggest(String[] vals)
	{		
		String[] num = vals;
		int index = 0;
		int topNum = Integer.parseInt(num[index]);
		
		while(index < num.length && topNum == 9)
		{
			topNum = Integer.parseInt(num[index]);
			index++;
		}
		
		boolean found = false;
		while(index < num.length && !found)
		{			
			int idx = findNextLargest(num, index);	
			int num1 = Integer.parseInt(num[index]);
			int num2 = Integer.parseInt(num[idx]);
			if(index != idx && num1 != num2)
			{
				String temp = num[index];
				num[index] = num[idx];
				num[idx] = temp;
				found = true;
			}
			index++;
		}
		return arrayToString(num);
	}
	
	private static int findNextSmallest(String[] num, int index, boolean allowZero)
	{
		int smallNum = Integer.parseInt(num[index]);
		int idx = index;
		for(int x = index; x < num.length; x++)
		{
			int temp = Integer.parseInt(num[x]);
			if(temp < smallNum)
			{
				if(temp == 0 && allowZero)
				{
					idx = x;
					smallNum = temp;
				}
				else if(temp != 0)
				{
					idx = x;
					smallNum = temp;
				}
			}
		}
		return idx;
	}
	
	private static String calcSmallest(String[] vals)
	{
		String[] num = vals;
		int index = 0;
		int idx2 = findNextSmallest(num, index, false);
		
		if(index != idx2 && Integer.parseInt(num[idx2]) != 0)
		{
			String temp = num[index];
			num[index] = num[idx2];
			num[idx2] = temp;
		}
		else
		{
			boolean found = false;
			boolean allowZero = false;
			while(index < num.length && !found)
			{			
				if(index > 0)
				{
					allowZero = true;
				}
				int idx = findNextSmallest(num, index, allowZero);			
				if(index != idx)
				{
					String temp = num[index];
					num[index] = num[idx];
					num[idx] = temp;
					found = true;
				}
				index++;
			}
		}		
		
		return arrayToString(num);
	}
	
	private static void cookTheBooks(List<String> args)
	{
		args.remove(0);
		
		int index = 1;
		for(String s : args)
		{
			String[] split = s.split("");
			String big = calcBiggest(split);
			String[] split2 = s.split("");
			String small = calcSmallest(split2);
			output(index, big, small);
			index++;
		}		
	}
	
	public static void main(String[] args)
	{
		//String filename = "C:\\Users\\Kirsten\\Downloads\\cooking_the_books_example_input.txt";
		String filename = "C:\\Users\\Kirsten\\Downloads\\cooking_the_books.txt";
		try
		{
			Scanner sc = new Scanner(new File(filename));
			List<String> lines = new ArrayList<String>();
			while (sc.hasNextLine()) {
			  lines.add(sc.nextLine());
			}
			sc.close();
			
			cookTheBooks(lines);
		}
		catch (FileNotFoundException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
