#include<iostream>
#include<string>
#include<map>
#include<vector>
#include<algorithm>
#include<cmath>
#include<climits>
#include<queue>
#include<set>

#define VI vector<int>
#define PII pair<int,int>
#define mp make_pair
#define rep(i,a,b) for(i=(a); i<(b); i++)
#define repI(i,a,b) for(i=(a); i<=(b); i++)

using namespace std;
typedef unsigned long long int ulli;
typedef long long int lli;

void populate(vector<int>& digit, int N)
{
    if(N<=0) return;
    populate(digit,N/10);
    digit.push_back(N%10);
}

ulli value(vector<int>& digit)
{
    ulli res = 0;
    int i;
    rep(i,0,digit.size())
    {
        res = res*10 + digit[i];
    }
    return res;
}

main()
{
    int i,j,T;
    cin >> T;
    ulli N, smallest, largest;
    int s_id,l_id;
    for(int i=1; i<=T; i++)
    {
        smallest = 1000000000; 
        largest = 0;
        vector<int> digit;
        cin >> N;
        populate(digit,N);
        rep(j,0,digit.size())
        {
            if(digit[j] < smallest) { smallest = digit[j]; s_id=j; }
            if(digit[j] >= largest) { largest = digit[j]; l_id=j; }
        }
        cout << "Case #" << i << ": ";
        if(digit.size()>1 && smallest!=0) swap(digit[s_id],digit[0]);
        cout << value(digit) << " ";
        if(digit.size()>1 && smallest!=0) swap(digit[s_id],digit[0]);
        if(digit.size()>1 && largest!=0)  swap(digit[l_id],digit[0]);
        cout << value(digit) << endl;
        if(digit.size()>1 && largest!=0)  swap(digit[l_id],digit[0]);
    }
}
