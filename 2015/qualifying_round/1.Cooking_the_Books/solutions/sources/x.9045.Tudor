#include <iostream>
#include <fstream>
#include <algorithm>

using namespace std;

int main()
{
    ifstream f("ctb.in");
    ofstream gout("ctb.out");
    int T, N, c[11], min, pmin, max, pmax, M, sgn, a, b, N2;

    f >> T;
    int t = 1;
    while (t <= T) {
        f >> N;

        if (N == 0) {
            gout << "Case #" << t << ": 0 0\n";
            t++;
            continue;
        }

        sgn = N >= 0 ? 1 : -1;

        N2 = N;
        min = 10;
        max = -1;
        M = 0;
        while (N != 0) {
            c[M] = abs(N % 10);

            if (c[M] != 0 && min > c[M]) {
                min = c[M];
                pmin = M;
            }
            if (max < c[M]) {
                max = c[M];
                pmax = M;
            }

            M++;
            N /= 10;
        }

        gout << "Case #" << t << ": ";

        if (sgn == 1) {
            swap(c[M - 1], c[pmin]);
            for (int i = M - 1; i >= 0; i--) {
                gout << c[i];
            }
            swap(c[M - 1], c[pmin]);

            gout << " ";

            swap(c[M - 1], c[pmax]);
            for (int i = M - 1; i >= 0; i--) {
                gout << c[i];
            }
        } else if (sgn == -1) {
            gout << "-";
            swap(c[M - 1], c[pmax]);
            for (int i = M - 1; i >= 0; i--) {
                gout << c[i];
            }
            swap(c[M - 1], c[pmax]);

            gout << " -";

            swap(c[M - 1], c[pmin]);
            for (int i = M - 1; i >= 0; i--) {
                gout << c[i];
            }
        }

        gout << "\n";
        t++;
    }

    gout.close();
    f.close();
    return 0;
}
