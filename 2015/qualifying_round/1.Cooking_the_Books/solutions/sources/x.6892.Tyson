package CookingTheBooks;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

public class driver {
	
	private static String filePath;
	private static List<String> fileData;
	private static String smallest;
	private static String largest;

	public static void main(String[] args) {
		
		//filePath = "cooking_the_books_example_input.txt";
		filePath = "cooking_the_books.txt";
		parseFile();
		
		
		if(fileData != null)
		{
			/* iterate through loop N times */
			for(int i = 1; i <= Integer.parseInt(fileData.get(0)); i++)
			{
				bruteForce(fileData.get(i));
				
				System.out.println("Case #" + i + ": "+ smallest + " " + largest );	
			}
		}
	
	}
	
	private static void parseFile()
	{
		try {
			fileData = Files.readAllLines(Paths.get("src",filePath),StandardCharsets.US_ASCII);
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
	}
	
	private static void bruteForce(String data)
	{
		int large = Integer.parseInt(data);
		int small = Integer.parseInt(data);
		char[] arr =  new char[data.length()];
		char swap;
		
		arr = data.toCharArray();

		
		for(int i=0; i<data.length(); i++)
		{
			for(int j=i+1; j<data.length(); j++)
			{
				arr = data.toCharArray();
				if(i == 0)
				{
					swap = arr[j];
					if(swap != '0')
					{
						arr[j] = arr[i];
						arr[i] = swap;
						
						if(large < Integer.parseInt(String.valueOf(arr)))
							large = Integer.parseInt(String.valueOf(arr));
						
						if(small > Integer.parseInt(String.valueOf(arr)))
							small = Integer.parseInt(String.valueOf(arr));
					}
				}
				else
				{
					swap = arr[j];
					arr[j] = arr[i];
					arr[i] = swap;
					
					if(large < Integer.parseInt(String.valueOf(arr)))
						large = Integer.parseInt(String.valueOf(arr));
					
					if(small > Integer.parseInt(String.valueOf(arr)))
						small = Integer.parseInt(String.valueOf(arr));	
				}
					
			}
		}
		smallest = Integer.toString(small);
		largest = Integer.toString(large);
	}

}