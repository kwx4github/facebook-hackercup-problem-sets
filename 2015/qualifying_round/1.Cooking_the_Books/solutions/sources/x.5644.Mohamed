#include <iostream>
#include <fstream>
#include <vector>
#include <math.h>

using namespace std;


void convertIntToArray(int n, vector<int> *array) {
  while(n > 0) {
    array->push_back(n%10);
    n/= 10;
  }
}

int converArrayToInt(vector<int> *array) {
  int n = 0;
  for(int i = 0; i < array->size(); i++)
    n += (array->at(i) * pow(10,i));
  return n;
}

int getMax(int n, vector<int> array) {
  int size = array.size();
  for(int i = size-1; i > 0; i--) {
    // find max
    int max = array.at(i);
    int maxPos = i;
    for(int j = i - 1; j >=0 ; j--) {
      if(array.at(j) >= max) {
        max = array.at(j);
        maxPos = j;
      }
    }

    if(max > array.at(i)) {
      int temp = array.at(i);
      array.at(i) = array.at(maxPos);
      array.at(maxPos) = temp;

      return converArrayToInt(&array);
    }
  }
  return n;
}

int getMin(int n, vector<int> array) {
  int size = array.size();
  for(int i = size-1; i > 0; i--) {
    // find min
    int min = array.at(i);
    int minPos = i;
    for(int j = i - 1; j >=0 ; j--) {
      if(array.at(j) != 0 && array.at(j) < min) {
        min = array.at(j);
        minPos = j;
      }
    }

    if(min < array.at(i)) {
      int temp = array.at(i);
      array.at(i) = array.at(minPos);
      array.at(minPos) = temp;

      return converArrayToInt(&array);
    }
  }
  return n;
}

int main() {
  ifstream in("cooking_the_books.txt");
  ofstream out("out.txt");

  int n, input = 0;
  in >> n;

  for(int i = 0; i < n; i++) {
    vector<int> arrayInput;
    in >> input;

    convertIntToArray(input, &arrayInput);

    out << "Case #" << (i+1) << ": " << (getMin(input, arrayInput)) << " "
         << getMax(input, arrayInput) << endl;
  }

  in.close();
  out.close();
  return 0;
}
