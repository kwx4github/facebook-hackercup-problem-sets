
#include <bits/stdc++.h>

using namespace std;
typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef vector<LL> VLL;
typedef pair<int, int> PI;

#define SI(x) scanf("%d", &x)
#define SLL(x) scanf("%lld", &x)
#define SORTV(v) sort(v.begin(), v.end())
#define EACH(it, v) for(__typeof(v.begin()) it(v.begin()); it != v.end(); it++)
#define pb(x) push_back(x)
#define mp(x, y) make_pair(x, y)
#define f first
#define s second

template<class T> void print_array(T a[], int size) { for(int i=0; i<size; i++) cout<<a[i]<<" "; cout<<endl; }

template<class T> void print_array_v(T &a) { int size = a.size(); for(int i=0; i<size; i++) cout<<a[i]<<" "; cout<<endl; }

const LL inf = 1e12;

int digsin(LL n)
{
	int cnt = 0;
	while(n)
	{
		cnt++;
		n/=10;
	}
	return cnt;
}

int main()
{
	int T;
	LL pow10[15] = {1};
	for(int i=1; i<15; i++)
		pow10[i] = pow10[i-1]*10;
	scanf("%d", &T);
	for(int t=1; t<=T; t++)
	{
		LL n, mn, mx;
		SLL(n);
		mx = mn = n;
		int digs = digsin(n);
		for(int i=1; i<=digs; i++)
		{
			for(int j=i+1; j<=digs; j++)
			{
				int d1 = (n/pow10[digs-i])%10;
				int d2 = (n/pow10[digs-j])%10;
				if(i==1 && d2==0)
					continue;
				LL newnum = n - d1*pow10[digs-i] - d2*pow10[digs-j] + d1*pow10[digs-j] + d2*pow10[digs-i];
//				cout<<newnum<<endl;
				mn = min(mn, newnum);
				mx = max(mx, newnum);
			}
		}
		printf("Case #%d: %lld %lld\n", t, mn, mx);
	}
	return 0;
}
