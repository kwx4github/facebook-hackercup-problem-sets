#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <ctime>
 
#define Inf 2147483647
#define Pi acos(-1.0)
#define N 1000000
#define LL long long
 
inline LL Power(int b, int p) { LL ret = 1; for ( int i = 1; i <= p; i++ ) ret *= b; return ret; }
const int dr [] = {-1, -1, 0, 1, 1, 1, 0, -1};
const int dc [] = {0, 1, 1, 1, 0, -1, -1, -1};
 
#define F(i, a) for( int i = (0); i < (a); i++ )
#define Fs(i, sz) for( size_t i = 0; i < sz.size (); i++ )
#define Fe(i, x) for(typeof (x.begin()) i = x.begin(); i != x.end (); i++)
#define Set(a, s) memset(a, s, sizeof (a))
#define Max(a, b)  (a < b ? b : a)
#define Min(a, b)  (a > b ? b : a)
 
using namespace std;

int main()
{
     int test,t,small,large,pos,i;
     string n;
     cin >> test;
     for (t = 1 ; t <= test ; t++){
         cin >> n ;
         small  = 10 ;
         large=1;
         pos = -1;
         for(i =0 ; i < n.length() ; i++){
             if(n[i]-'0'!=0 && n[i]-'0' <= small){
                 pos = i;
                 small = n[i]-'0';
             }
         }
         string ssmall= n;
         swap(ssmall[0], ssmall[pos]);
         for  (int i =0 ; i < n.length() ; i++){
             if (n[i]-'0'!=0 && n[i]-'0' >=large  ){
                 pos = i;
                 large = n[i]-'0';
             }
         }
         string slarge= n;
         swap (slarge[0] , slarge[pos]);
         printf("Case #%d: " ,t);
         cout <<ssmall <<" "<<slarge<<endl;
     }   
    return 0;
}
