#include <stdio.h>
int main()
{
    int test,Arrm[10],Arrx[10],number,min,k,minpos,max,maxpos,temp1,temp2,iszero,zeropos,mindone,maxdone,i,total,max2,min2,j;
    scanf("%d",&test);
    for(k=1;k<=test;k++)
    {
        scanf("%d",&number);
        i=0;min=10;max=-1;iszero=0;mindone=0;maxdone=0;
        if(number==0)
        {
            i=1;total=1;min=0;max=0;minpos=0;maxpos=0;mindone=1;maxdone=1;Arrm[0]=0;Arrx[0]=0;
        }
        while(number)
        {
            Arrm[i]=number%10;
            Arrx[i]=Arrm[i];
            if(Arrm[i]<min)
            {
                if(Arrm[i]==0 && iszero!=1)
                {
                    iszero=1;
                    zeropos=i;
                }
                if(Arrm[i]!=0)
                {
                    min=Arrm[i];
                    minpos=i;
                }
            }
            if(Arrm[i]>max)
            {
                max=Arrm[i];
                maxpos=i;
            }
            number/=10;
            i++;
        }
        total=i;
        temp1=total;
//
//        printf("\t\ttotal=%d max=%d maxpos=%d\n",total,max,maxpos);
//
        while(maxdone!=1)
        {
            temp2=total;
            while(temp2)
            {
                if(Arrx[temp2-1]<max && (temp2-1)>maxpos)
                {
                    Arrx[temp2-1]=Arrx[temp2-1]^Arrx[maxpos];
                    Arrx[maxpos]=Arrx[temp2-1]^Arrx[maxpos];
                    Arrx[temp2-1]=Arrx[temp2-1]^Arrx[maxpos];
                    maxdone=1;
                    break;
                }
                temp2-=1;
            }
            max2=-1;
            for(j=0;j<total;j++)
            {
                if(Arrx[j]>max2 && Arrx[j]<max)
                {
                    max2=Arrx[j];
                    maxpos=j;
                }
            }
            if(max2==-1)
                maxdone=1;
            else
                max=max2;
        }
//
 //       printf("\t\ttotal=%d min=%d minpos=%d\n",total,min,minpos);
//
        if(Arrm[temp1-1]>min)
        {
            Arrm[temp1-1]=Arrm[temp1-1]^Arrm[minpos];
            Arrm[minpos]=Arrm[temp1-1]^Arrm[minpos];
            Arrm[temp1-1]=Arrm[temp1-1]^Arrm[minpos];
            mindone=1;
            /*
                    printf("\n\n\t");
                    for(i=total-1;i>=0;i--)
                        printf("%d",Arrm[i]);
                    printf("\n\n");
             */
        }

        while(mindone!=1)
        {
            temp1=total-1;
            if(iszero==1)
            {
                min=0;
                minpos=zeropos;
            }
            while(temp1)
            {
                if(Arrm[temp1-1]>min && (temp1-1)>minpos)
                {
                    Arrm[temp1-1]=Arrm[temp1-1]^Arrm[minpos];
                    Arrm[minpos]=Arrm[temp1-1]^Arrm[minpos];
                    Arrm[temp1-1]=Arrm[temp1-1]^Arrm[minpos];
            /*
                    printf("\n\n\t");
                    for(i=total-1;i>=0;i--)
                        printf("%d",Arrm[i]);
                    printf("\n\n");
             */

                    mindone=1;
                    break;
                }
                temp1-=1;
            }
            min2=10;
            for(j=0;j<total-1;j++)
            {
                if(Arrm[j]<min2 && Arrm[j]>min)
                {
                    min2=Arrm[j];
                    minpos=j;
                }
            }
            if(min2==10)
                mindone=1;
            else
                min=min2;
        }
        printf("Case #%d: ",k);
        for(i=total-1;i>=0;i--)
            printf("%d",Arrm[i]);
        printf(" ");
        for(i=total-1;i>=0;i--)
            printf("%d",Arrx[i]);
        printf("\n");
    }
    return 0;
}
