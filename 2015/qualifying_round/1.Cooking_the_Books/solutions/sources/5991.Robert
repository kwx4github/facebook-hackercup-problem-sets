#include <iostream>
#include <fstream>

using namespace std;

long long parse(string n) {
    long long ans = (n[0] - '0');
    for (int i = 1; i < n.length(); i++) {
        ans = 10*ans + (n[i]-'0');
    }
    return ans;
}
pair<long long, long long> optimize(string n) {
    long long minAns = parse(n);
    long long maxAns = parse(n);
    for (int i = 0; i < n.length(); i++) {
        for (int j = i + 1; j < n.length(); j++) {
            swap(n[i],n[j]);
            if (n[0] != '0') {
                minAns = min(minAns, parse(n));
                maxAns = max(maxAns, parse(n));
            }
            swap(n[i],n[j]);
        }
    }
    return pair<long long, long long>(minAns, maxAns);
}

long long t;
string n;
int main(void) {
    ifstream fin;
    fin.open("input.txt");
    ofstream fout("output.txt");

    fin >> t;
    for (int i = 0; i < t; i++) {
        fin >> n;
        pair<long long, long long> opt = optimize(n);
        fout << "Case #" << i+1 << ": " << opt.first << " " << opt.second << "\n";
    }
    fin.close();
    fout.close();
}
