package com.mantastyle.hackercup.qualification

import java.io.{PrintWriter, BufferedWriter, FileWriter}

import scala.io.Source

object CookingTheBooks extends App {
  def cook(in: String): (String, String) = {
    val min = {
      if (in == "0") {
        "0"
      } else {
        val smallestNonZero = in.filterNot(_ == '0').min
        val rightmostIndex = in.lastIndexOf(smallestNonZero)
        swap(in, 0, rightmostIndex)
      }
    }
    val max = {
      val largest = in.max
      val rightmostIndex = in.lastIndexOf(largest)
      swap(in, 0, rightmostIndex)
    }
    (min, max)
  }

  def swap(s: String, i: Int, j: Int): String = s.updated(i, s(j)).updated(j, s(i))

  val source = Source.fromFile("input.txt")
  val lines = source.getLines().toList
  val writer = new PrintWriter(new BufferedWriter(new FileWriter("output.txt")))
  try {
    for ((line, i) <- lines.tail.zipWithIndex) {
      val (small, large) = cook(line)
      val outLine = s"Case #${i + 1}: $small $large"
      writer.println(outLine)
      println(outLine)
    }
  } finally {
    writer.close()
  }
}
