#include <cassert>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <numeric>
#include <bitset>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <sstream>
#include <iterator>

#define FOR(i,n)   for(int i=0;i<n;i++)
#define FORA(a,i,n)   for(int i=a;i<n;i++)
using namespace std;
template<class T> string tostring(T x){
ostringstream sout;
sout<<x;
return sout.str();
}
template< class T > int toint( T s ){
int v;
istringstream sin(tostring(s));
sin>>v;
return v;
}
vector< string > split( string sentence ){
   istringstream iss( sentence );
   vector< string > tokens;
   copy( istream_iterator< string >(iss), istream_iterator< string >(), back_inserter<vector< string > >(tokens));
   return tokens;
}
string conversion(int a, int b){

       string cambio;
       int suma=0;
       int coci = a;
       while(coci>0){
                     cambio += tostring(coci%b);
                     coci = coci/b;
      }
     return string(cambio.rbegin(),cambio.rend());

       }
int GCD( int a , int b ) {
     if ( a%b==0) return b ;
      else
      return GCD( b , a % b) ;
}

int main(){
    freopen("cooking_the_books.txt","r",stdin);
    freopen("out.out","w",stdout);
    int T;
    string N;
    int k;
    int maxi,mini;
    cin>>T;
    string s;
    char re;
    FOR(k,T){
      cin>>N;
      
      mini = toint(N);
      maxi = 0;
      FOR(i,N.size()){
         FOR(j,N.size()){
            s = N;
            re = s[j];
            s[j] = s[i];
            s[i] = re;
            if(s[0]!='0')
               mini = min(toint(s),mini);
            maxi = max(toint(s),maxi);
         }
      }
      cout<<"Case #"<<(k+1)<<": "<<mini<<" "<<maxi<<endl;
      //cout<<mini<<endl<<maxi<<endl;
    }
    
    //system("pause");
    return 0;

    }
