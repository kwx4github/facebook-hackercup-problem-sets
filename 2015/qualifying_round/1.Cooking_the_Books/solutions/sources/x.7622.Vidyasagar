package Jan9;

import java.util.Scanner;

public class Hello {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner s = new Scanner(System.in);
		int t = s.nextInt();
		int[] numbers = new int[t+1];
		int i = 1;
		while(i<=t){
			numbers[i] = s.nextInt();
			i++;
		}
		s.close();
		int[] digits = new int[9+1];
		int[] digitsForMax = new int[9+1];
		int round=1,n;
		int p,temp;
		int d,position,min,minPos,max,maxPos;
		for (;round<=t;round++) {
			position=10;
			
			n = numbers[round];
			//System.out.println("NEW  "+n);
			if(n==0){
				System.out.println("Case #"+round+": "+n+" "+n);
			}
			else{
				
				while(n>0){
					d = n%10;  //last digit
					n = n/10;
					digits[--position] = d;
					digitsForMax[position]=d;
				}
				
				//System.out.println("INIT");
				//for(p = position;p<=9;p++)
					//System.out.print(digits[p]);
				
				min = digits[9];
				minPos = 9;
				max = digits[9];
				maxPos = 9;
				//System.out.println("digit9 = "+digits[9]);
				for(p=8;p>=position;p--){
					if(digits[p]<min){
					//	System.out.println(digits[p]+" is less than "+min);
						min = digits[p];
						minPos = p;
						
						//System.out.println("new min @ "+minPos);
					}
					if(digits[p]>max){
						max = digits[p];
						maxPos = p;
						//System.out.println("new max @ "+maxPos);
					}
				}
				//System.out.println("min ="+min+"   max="+max);
				
				
				if (min==0 || digits[position]==min && position!=minPos){
					//start with second position onwards,replace the first bigger
					for(p=position+1;p<9;p++)
						if(digits[p]>min && p<minPos){		//testcase 2013==>2103
							temp = digits[p];
							digits[p] = min;
							digits[minPos] = temp;
							break;
						}
				}else{  //swap with first position	
					temp = digits[position];
					digits[position] = min;
					digits[minPos] = temp;
				}
				
				//for max
				if(maxPos!=position){
					for(p=position;p<9;p++)
						if(digitsForMax[p]<max && p<maxPos){
							temp = digitsForMax[p];
							digitsForMax[p] = max;
							digitsForMax[maxPos] = temp;
							break;
						}
					//System.out.println("Max==Change needed");
				}
				
				System.out.print("Case #"+round+": ");
				for(p = position;p<=9;p++)
					System.out.print(digits[p]);
				System.out.print(" ");
				for(p = position;p<=9;p++)
					System.out.print(digitsForMax[p]);
				System.out.println();
				
			}
			//System.out.println("==================");
			
		}

	}

}

