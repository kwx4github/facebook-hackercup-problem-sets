/*
ID: espr1t
LANG: C++
TASK: Demo
KEYWORDS: 
*/

#include <cstdio>
#include <ctime>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <cctype>

#include <iostream>
#include <sstream>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <set>

const int MAX = 1024;

using namespace std;
FILE *in; FILE *out;

void solveTest(int testCase) {
    char tnum[12];
	fscanf(in, "%s", tnum);
	string num(tnum);
	string lowest = num, highest = num;
	for (int i = 0; i < (int)num.size(); i++) {
	    for (int c = i; c < (int)num.size(); c++) {
	        string tmp = num;
	        swap(tmp[i], tmp[c]);
	        if (tmp[0] != '0' || tmp == "0") {
	            lowest = min(lowest, tmp);
	            highest = max(highest, tmp);
	        }
	    }
	}
	fprintf(out, "Case #%d: %s %s\n", testCase, lowest.c_str(), highest.c_str());
}

int main(void) {
	in = stdin; out = stdout;
	in = fopen("CookingTheBooks.in", "rt"); out = fopen("CookingTheBooks.out", "wt");
	
	unsigned sTime = clock();

	int numTests;
	fscanf(in, "%d", &numTests);
	char buff[32768]; fgets(buff, 32768, in);
	
	for (int testCase = 1; testCase <= numTests; testCase++) {
		unsigned tTime = clock();
		fprintf(stderr, "Currently executing testcase %d...\n", testCase); fflush(stderr);
		solveTest(testCase);
		fprintf(stderr, "  -- execution time: %.3lfs\n", (double)(clock() - tTime) / CLOCKS_PER_SEC);
	}
	fprintf(stderr, "Finished with all testcases!\n");
	fprintf(stderr, "Total execution time: %.3lfs\n", (double)(clock() - sTime) / CLOCKS_PER_SEC);
	return 0;
}
