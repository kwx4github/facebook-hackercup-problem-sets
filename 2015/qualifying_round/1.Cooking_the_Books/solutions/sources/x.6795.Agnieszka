def cook_books_max(num):
    if len(num) == 1:
        return num
    num = list(num)
    for i in range(0, len(num)):
        max_digit, index_of_max_digit = find_max_and_index(num[i + 1:])
        if int(num[i]) < max_digit:
            temp = num[i]
            num[i] = str(max_digit)
            num[index_of_max_digit + i + 1] = temp
            return ''.join(num)
    return ''.join(num)


def cook_books_min(num):
    if len(num) == 1:
        return num
    num = list(num)
    for i in range(0, len(num)):
        min_digit, index_of_min_digit = find_min_and_index(num[i + 1:])
        if i == 0 and min_digit == 0:
            continue
        if int(num[i]) > min_digit:
            temp = num[i]
            num[i] = str(min_digit)
            num[index_of_min_digit + i + 1] = temp
            return ''.join(num)
    return ''.join(num)


def find_max_and_index(string):
    max_value = 0
    index_of_max_value = 0

    for i in range(len(string)):
        if int(string[i]) > max_value:
            max_value = int(string[i])
            index_of_max_value = i
    return (max_value, index_of_max_value)


def find_min_and_index(string):
    string = list(string)
    min_value = 1000000000
    index_of_min_value = 0

    for i in range(len(string)):
        if int(string[i]) < min_value:
            min_value = int(string[i])
            index_of_min_value = i
    return (min_value, index_of_min_value)


if __name__ == '__main__':
    tests = int(raw_input())
    for t in range(tests):
        num = raw_input()
        max_num = cook_books_max(num)
        min_num = cook_books_min(num)

        print 'Case #%s: %s %s' % (t + 1, min_num, max_num)
