/* Rohit Kumar Jha */

#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#define lli long long int
#define gc getchar//_unlocked
#define mod 1000000007
#define pii pair<int,int>

using namespace std;


int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out2.txt","w",stdout);

    int t,i,j,r=0;
    char arr[20],min_ans[20],max_ans[20];
    scanf("%d",&t);
    while(t-->0)
    {
        scanf(" %s",arr);
        int l=strlen(arr);
        for(i=0; i<=l; i++)
        {
            min_ans[i]=arr[i];
            max_ans[i]=arr[i];
        }
        int pos=-1,m;
        bool done=false;
        char c=min_ans[0];

        for(i=1; i<l; i++)
        {
            if(min_ans[i]<=c && min_ans[i]!='0' && min_ans[i]!=min_ans[0])
            {
                c=min_ans[i];
                pos=i;
            }
        }
        if(pos!=-1)
        {
            min_ans[pos]=min_ans[0];
            min_ans[0]=c;
            done=true;
        }
        else
        {
            for(i=1; i<l && !done; i++)
            {
                char c=min_ans[i];
                pos=-1;
                for(j=i+1; j<l; j++)
                {
                    if(min_ans[j]<=c && min_ans[j]!=min_ans[i])
                    {
                        c=min_ans[j];
                        pos=j;
                    }
                }
                if(pos!=-1)
                {
                    min_ans[pos]=min_ans[i];
                    min_ans[i]=c;
                    done=true;
                    break;

                }
            }
        }
        //end min_ans

        pos=-1,m;
        done=false;
        c=max_ans[0];

        for(i=1; i<l; i++)
        {
            if(max_ans[i]>=c && max_ans[i]!='0' && max_ans[i]!=max_ans[0])
            {
                c=max_ans[i];
                pos=i;
            }
        }
        if(pos!=-1)
        {
            max_ans[pos]=max_ans[0];
            max_ans[0]=c;
            done=true;
        }
        else
        {
            for(i=1; i<l && !done; i++)
            {
                char c=max_ans[i];
                pos=-1;
                for(j=i+1; j<l; j++)
                {
                    if(max_ans[j]>=c && max_ans[j]!=max_ans[i])
                    {
                        c=max_ans[j];
                        pos=j;
                    }
                }
                if(pos!=-1)
                {
                    max_ans[pos]=max_ans[i];
                    max_ans[i]=c;
                    done=true;
                    break;

                }
            }
        }
        printf("Case #%d: %s %s\n",++r,min_ans,max_ans);

    }

    return 0;
}

