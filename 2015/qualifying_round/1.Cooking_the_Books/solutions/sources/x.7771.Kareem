#include <bits/stdc++.h>

using namespace std;

int main()
{
    string number , maximum , minimum;
    vector<char>digits;
    vector<int>position;
    int itemp , test;
    char ctemp;
    bool check;
    ofstream out;
    ifstream in;
    in.open("cooking_the_books.txt");
    out.open("output.txt");
    in >> test;
    for(int t=0; t < test; t++)
    {
        in >> number;
        maximum = number;
        minimum = number;
        for(int i=0; i < minimum.size(); i++)
        {
            for(int l=i+1; l < minimum.size(); l++)
            {
                check = true;
                if(minimum[l] < minimum[i] && minimum[l] != '0')
                {
                    for(int j=0; j < digits.size(); j++)
                    {
                        if(digits[j] == minimum[l])
                        {
                            check = false;
                            position[j] = l;
                            break;
                        }
                    }
                    if(check)
                    {
                        digits.push_back(number[l]);
                        position.push_back(l);
                    }
                }
            }
            if(digits.size() == 0)
                continue;

            for(int l = 0; l < digits.size(); l++)
            {
                for(int j=l+1; j < digits.size(); j++)
                {
                    if(digits[j] < digits[l])
                    {
                        ctemp = digits[j];
                        digits[j] = digits[l];
                        digits[l] = ctemp;
                        itemp = position[j];
                        position[j] = position[l];
                        position[l] = itemp;
                    }
                }
            }
            ctemp = minimum[i];
            minimum[i] = digits[0];
            minimum[position[0]] = ctemp;
            break;
        }
        digits.clear();
        position.clear();

        for(int i=0; i < maximum.size(); i++)
        {
            for(int l=i+1; l < maximum.size(); l++)
            {
                check = true;
                if(maximum[l] > maximum[i] && maximum[l] != '0')
                {
                    for(int j=0; j < digits.size(); j++)
                    {
                        if(digits[j] == maximum[l])
                        {
                            check = false;
                            break;
                        }
                    }
                    if(check)
                    {
                        digits.push_back(maximum[l]);
                        position.push_back(l);
                    }
                }
            }

            if(digits.size() == 0)
                continue;

            for(int l = 0; l < digits.size(); l++)
            {
                for(int j=l+1; j < digits.size(); j++)
                {
                    if(digits[j] > digits[l])
                    {
                        ctemp = digits[j];
                        digits[j] = digits[l];
                        digits[l] = ctemp;
                        itemp = position[j];
                        position[j] = position[l];
                        position[l] = itemp;
                    }
                }
            }
            ctemp = maximum[i];
            maximum[i] = digits[0];
            maximum[position[0]] = ctemp;
            break;
        }
        digits.clear();
        position.clear();
        out << "Case #" << t+1 << ": " << minimum << " " << maximum << endl;
    }
    return 0;
}
