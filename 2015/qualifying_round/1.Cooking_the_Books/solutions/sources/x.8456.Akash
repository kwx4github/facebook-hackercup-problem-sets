#include <iostream>
using namespace std;

long long int findmax(long long int n) {
    int c = 0, i, pos, j;
    long long int m = n, max, temp;
    if (m >= 0 && m <= 11)
        return m;
    while (m > 0) {
        m = m / 10;
        c++;
    }
    int a[c];
    m = n;
    i = 0;
    while (m > 0) {
        a[c - i - 1] = m % 10;
        m = m / 10;
        i++;
    }
    for (j = 0; j < c - 1; j++) {
        max = a[j];
        pos = j;
        for (i = j + 1; i < c; i++) {
            if (a[i] > max) {
                max = a[i];
                pos = i;
            }
        }
        if (pos != j) {
            temp = a[j];
            a[j] = a[pos];
            a[pos] = temp;
            break;
        }
    }
    m = 0;
    for (i = 0; i < c; i++) {
        m = m * 10 + a[i];
    }
    return m;
}

long long int findmin(long long int n) {
    int c = 0, i, pos, j;
    long long int m = n, min, temp;
    if (m >= 0 && m <= 11)
        return m;
    while (m > 0) {
        m = m / 10;
        c++;
    }
    int a[c];
    m = n;
    i = 0;
    while (m > 0) {
        a[c - i - 1] = m % 10;
        m = m / 10;
        i++;
    }
    min = a[0];
    pos = 0;
    for (i = 0; i < c; i++) {
        if (a[i] < min && a[i] != 0) {
            min = a[i];
            pos = i;
        }
    }
    if (pos != 0) {
        temp = a[0];
        a[0] = a[pos];
        a[pos] = temp;
    } else {
        for (j = 1; j < c - 1; j++) {
            min = a[j];
            pos = j;
            for (i = j + 1; i < c; i++) {
                if (a[i] < min) {
                    min = a[i];
                    pos = i;
                }
            }
            if (pos != j) {
                temp = a[j];
                a[j] = a[pos];
                a[pos] = temp;
                break;
            }
        }
    }
    m = 0;
    for (i = 0; i < c; i++) {
        m = m * 10 + a[i];
    }
    return m;
}

int main() {
    long long int t, n, max, min, i;
    cin>>t;
    for (i = 1; i <= t; i++) {
        cin>>n;
        max = findmax(n);
        min = findmin(n);
        cout << "Case #" << i << ": " << min << " " << max << endl;
    }
    return 0;
}
