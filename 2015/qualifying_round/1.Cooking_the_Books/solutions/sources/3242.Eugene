#!/usr/bin/python
import sys

def minimize(s, indices):
    ds = map(int, s)

    for i in range(len(ds)-1):
        if i==0:
            lessRg = range(1, ds[i])
        else:
            lessRg = range(ds[i])
        for d in lessRg:
            if indices[d] != None and indices[d] > i:
                ds[i], ds[indices[d]] = ds[indices[d]], ds[i]
                return ''.join(map(str, ds))
    return ''.join(map(str, ds))

def maximize(s, indices):
    ds = map(int, s)

    for i in range(len(ds)-1):
        greaterRg = range(9, ds[i],-1)
        for d in greaterRg:
            if indices[d] != None and indices[d] > i:
                ds[i], ds[indices[d]] = ds[indices[d]], ds[i]
                return ''.join(map(str, ds))
    return ''.join(map(str, ds))

def solve(s):
    ds = map(int, s)
    indices = [None for d in range(10)]
    for i in range(len(ds)-1, -1, -1):
        if indices[ds[i]] == None:
            indices[ds[i]] = i
    return (minimize(s, indices), maximize(s, indices))

if __name__ == '__main__':
    n = int(sys.stdin.readline())
    for i in range(n):
        num = sys.stdin.readline().strip()
        s1, s2 = solve(num)
        print 'Case #%d: %s %s'%(i+1, s1, s2)
        
