#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <queue>
using namespace std;
#define maxn 100
#define sz(A) memset(A, 0, sizeof(A))

int n;

struct TT
{
	int a[maxn];
	int len;
	
	TT() {sz(a); len = 0;}
	void save(int k)
	{
		sz(a); len = 0;
		if(k == 0) {sz(a); len = 1; return;}
		while(k != 0)
		{
			a[++len] = k % 10;
			k /= 10;
		}
	}

	int toint()
	{
		int ans = 0;
		for(int i = len;i >= 1;i--) {ans *= 10; ans += a[i];}
		return ans;
	}

	TT swap(int x, int y)
	{
		TT temp;
		for(int i = 1;i <= len;i++) temp.a[i] = a[i];
		int ttt = temp.a[x];
		temp.a[x] = temp.a[y];
		temp.a[y] = ttt;
		temp.len = len;
		return temp;
	}
};


int main()
{
	int T; scanf("%d", &T);
	TT b;
	for(int tt = 1;tt <= T;tt++)
	{
		priority_queue<int> lar; 
		priority_queue<int, vector<int>, greater<int> > small;
		int n; scanf("%d", &n);
		if(n == 0) {printf("Case #%d: 0 0\n", tt); continue;}
		TT a; a.save(n);
		lar.push(n); small.push(n);
		for(int i = 1;i <= a.len;i++)
			for(int j = 1;j <= a.len;j++)
				if(i != j)
				{
					lar.push(
							a.swap(i, j).toint()
							);
					small.push(
							a.swap(i, j).toint()
							);
				}
		int ans1 = -1, ans2 = -1;
		while(!lar.empty())
		{
			b.save(lar.top());
			if(b.len == a.len)
			{
				ans1 = lar.top();
				break;
			}
			lar.pop();
		}
		if(ans1 == -1) ans1 = n;

		while(!small.empty())
		{
			b.save(small.top());
			if(b.len == a.len)
			{
				ans2 = small.top();
				break;
			}
			small.pop();
		}
		if(ans2 == -1) ans2 = n;
		printf("Case #%d: %d %d\n", tt, ans2, ans1);
	}
	return 0;
}

