import java.io.*;
import java.util.Arrays;

/**
 * @author vilmantas baranauskas
 */
public class CookingTheBooks {


    public static void main(String[] args) throws IOException {

        BufferedReader in = new BufferedReader(new FileReader("in.txt"));
        BufferedWriter out = new BufferedWriter(new FileWriter("out.txt"));

        // number of test cases
        int t = readLineAsInt(in);

        for (int i = 0; i < t; i++) {
            CharSequence solution = "Case #" + (i + 1) + ": " + solveTestCase(readLineAsInt(in));
            System.out.println(solution);
            out.write(solution.toString());
            out.newLine();
        }

        in.close();
        out.close();

    }

    private static MinMax solveTestCase(int n) throws IOException {

        char[] s = String.valueOf(n).toCharArray();

        if (s.length == 1) {
            return new MinMax(n, n);
        }

        int[] digits = new int[s.length];
        for (int i = 0; i < s.length; i++) {
            digits[i] = Integer.parseInt(String.valueOf(s[i]));
        }

        int iMin = 0;
        int minD = digits[0];
        int iMax = 0;
        int maxD = digits[0];

        for (int i = 0; i < digits.length; i++) {
            int d = digits[i];
            if (minD > d && d != 0) {
                minD = d;
                iMin = i;
            }
            if (maxD < d) {
                maxD = d;
                iMax = i;
            }
        }

        return new MinMax(
                swap(digits, iMin),
                swap(digits, iMax)
        );
    }

    private static int swap(int[] digits, int iMin) {
        int[] d = Arrays.copyOf(digits, digits.length);
        d[0] = digits[iMin];
        d[iMin] = digits[0];
        int n = 0;
        for (int i : d) {
            n = n*10 + i;
        }
        return n;
    }

    private static int readLineAsInt(BufferedReader in) throws IOException {
        return Integer.parseInt(in.readLine());
    }


    private static class MinMax {

        int min;
        int max;

        public MinMax(int min, int max) {
            this.min = min;
            this.max = max;
        }

        @Override
        public String toString() {
            return min + " " + max;
        }
    }

}
