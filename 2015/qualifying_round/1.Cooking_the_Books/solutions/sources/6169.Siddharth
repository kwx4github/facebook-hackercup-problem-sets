#include<iostream>
#include<stdio.h>
#include<vector>
#include<climits>

using namespace std;

long long int power(long long int a,long long int b) {
    if (b == 0) 
        return 1;
    if (b == 1) {
        return a;
    }

    else
        return a * power(a,b - 1);
}

int main(void) {
    long long int n,k,testCases,temp,i,j,max,mix,mex,min;
    scanf("%lld",&testCases);
    for (k = 0; k < testCases; k++) {
        cin >> n;
        vector<int> b,bT;
        vector<int> s,sT;
        while (n % 10 != n) {
            b.push_back(n % 10);
            s.push_back(n % 10);
            n /= 10;
        }
        b.push_back(n);
        s.push_back(n); 
        long long int l = b.size();
        
        for (i = l - 1; i >= 0; i--) {
            bT.push_back(b[i]);
            sT.push_back(s[i]);
        }

        b = bT;
        s = sT;
        if (l == 1) {
            printf("Case #%lld: %lld %lld\n",k + 1,n,n);
            continue;
        }
        long long int maxVal = 0,minVal = LLONG_MAX;
        bool fmax = false,fmin = false,fb = false,fs = false;

        for (i = 0; i < l; i++) {
            for (j = i + 1; j < l; j++) {
                if (b[j] > b[i] && !fmax && b[j] >= maxVal) {
                    max = j;
                    mex = i;
                    maxVal = b[j];
                    fb = true;
                }
                
                if (s[j] < s[i] && !fmin && s[j] <= minVal) {
                    if (i == 0) {
                        if (s[j] != 0) {
                            min = j;
                            mix = i;
                            minVal = s[j];
                            fs = true;
                        }
                    }

                    else {
                        mix = i;
                        min = j;
                        minVal = s[j];
                        fs = true;
                    }
                }
            }
        
            if (fb && !fmax) {
                temp = b[max];
                b[max] = b[mex];
                b[mex] = temp;
                fmax = true;
            }

            if (fs && !fmin) {
                temp = s[min];
                s[min] = s[mix];
                s[mix] = temp;
                fmin = true;
            }

            if (fmax && fmin)
                break;

        }

        long long int bi = 0,sm = 0;
        
        for (i = 0; i < l; i++) {
            sm += s[i] * power(10,l - i - 1);
            bi += b[i] * power(10,l - i - 1);
        }

        printf("Case #%lld: %lld %lld\n",k + 1,sm,bi);
    }
    return 0;
}
