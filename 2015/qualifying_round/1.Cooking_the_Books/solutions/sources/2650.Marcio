#include <iostream>
#include <vector>
#include <utility>

using namespace std;

int to_number(vector<int> digits) {
  int N = digits.size();
  int d = 1;
  int n = 0;
  for (int i = 0; i < N; ++i) {
    n += digits[i] * d;
    d *= 10;
  }
  return n;
}


vector<int> to_digits(int number) {
  vector<int> digits;
  do {
    digits.push_back(number % 10);
    number /= 10;
  } while (number != 0);
  return digits;
}

pair<int, int> solve(int number) {
  vector<int> digits = to_digits(number);
  int N = digits.size();
  int nmax = number;
  int nmin = number;
  for (int i = 0; i < N; ++i) {
    for (int j = i+1; j < N; ++j) {
      if ((i != N-1 || digits[j] != 0) 
	  && (j != N-1 || digits[i] != 0)) {
	vector<int> cpy(digits);
	int tmp = cpy[i];
	cpy[i] = cpy[j];
	cpy[j] = tmp;

	int n = to_number(cpy);
	if (n < nmin) nmin = n;
	if (n > nmax) nmax = n;
      }
    }
  }
  return make_pair(nmin, nmax);
}

int main() {
  int T;
  cin >> T;
  for (int i = 0; i < T; ++i) {
    int number;
    cin >> number;
    pair<int, int> r = solve(number);
    cout << "Case #" << i+1 << ": " << r.first << " " << r.second << endl; 
  }
  return 0;
}
