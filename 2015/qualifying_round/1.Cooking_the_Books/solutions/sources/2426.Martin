#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cmath>
#include <limits>
#include <string>
#include <cstring> // memset
#include <iostream> // cin, cout
#include <fstream>

#include <sstream> // topcoder testcase

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;

#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define REP(i, a, b) for (int i = int(a); i < int(b); i++) // a to b, and variable i is local!

#define DEBUG(x) do { std::cerr << #x << ": " << x << std::endl; } while (0)



int main()
{
    // ifstream arq(getenv("INPUT"));
    // cin.rdbuf(arq.rdbuf());
    
    // Number of Testcases
    int T;
    cin >> T;
    
    for(int i=0;i<T;i++){
        set<ll> possible_numbers;
        string number;
        cin >> number;
        
        possible_numbers.insert(stoll(number));
        
        for(int i=0;i<number.size();i++){
            for(int j=i+1;j<number.size();j++){
                if(i==0 && number[j]=='0') continue;
                string swapped_number=number;
                swapped_number[i]=number[j];
                swapped_number[j]=number[i];
                ll x = stoll(swapped_number);
                possible_numbers.insert(x);
            }
        }
        
        
        cout << "Case #" << (i+1) << ": " << *possible_numbers.begin() << " " << *possible_numbers.rbegin()  << endl;
    }
    
    return 0;
}
