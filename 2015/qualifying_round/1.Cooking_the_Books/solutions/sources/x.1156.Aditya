
/*
  Aditya Gourav
  @adi.pearl
*/
#include<bits/stdc++.h>
using namespace std;

//scanning
#define si(x) scanf("%d",&x)
#define ss(x) scanf("%s",x)
#define ssWSP(x) scanf(" %[^\r\n]",x)
#define sill(x) scanf("%lld",&x)
#define sd(x) scanf("%lf",&x)

//debugging
#define db1(x) cerr<<(x)<<endl;
#define db2(x,y) cerr<<(x)<<" "<<(y)<<endl;
#define db3(x,y,z) cerr<<(x)<<" "<<(y)<<" "<<(z)<<endl;
#define db4(x,y,z,z2) cerr<<(x)<<" "<<(y)<<" "<<(z)<<" "<<(z2)<<endl;
#define db5(x,y,z,z2,z3) cerr<<(x)<<" "<<(y)<<" "<<(z)<<" "<<(z2)<<" "<<(z3)<<endl;
#define db6(x,y,z,z2,z3,z4) cerr<<(x)<<" "<<(y)<<" "<<(z)<<" "<<(z2)<<" "<<(z3)<<" "<<(z4)<<endl;
#define db7(x,y,z,z2,z3,z4,z5) cerr<<(x)<<" "<<(y)<<" "<<(z)<<" "<<(z2)<<" "<<(z3)<<" "<<(z4)<<" "(z5)<<endl;

//printing to console
#define pi(x) printf("%d\n",x)
#define pill(x) printf("%lld\n",x)
#define pd(x) printf("%lf\n",x)
//others
#define FI(var,beg,end) for(int var=(beg);var<=(end);++var)
#define FIA(var,beg,end,inc) for(int var=(beg);var<=(end);var+=(inc))
#define FD(var,end,beg) for(int var=(end);var>=(beg);--var)
#define F(i,n) FI(i,0,n-1)
#define F1(i,n) FI(i,1,n)
#define FOR(it,v) for(it = v.begin(); it != v.end(); ++it)
#define SZ(x) ((int)((x).size()))
#define ipArray(arr,size) FI(i,0,size-1) si(arr[i]);
#define ipllArray(arr,size) FI(i,0,size-1) sill(arr[i]);
#define ii pair<int,int>
#define R(f) freopen(f,"r",stdin);
#define W(f) freopen(f,"w",stdout);
#define TEST int num_cases; cin>>num_cases;for(int case_id=1;case_id <= num_cases;++case_id)

typedef long long ll;


/* Main Code starts here :) */
#define toDigit(x) ((x)-'0')

int main(){
    R("cooking_the_books.txt");
    W("aout.txt");
    TEST{
        string n;     cin >> n;
        string mx, mn; int len = n.size();
        int rl[len], rs[len];
        int l = -1, s = 10, lix, six = -1;
        for(int i = len-1; i >= 0; --i){
            int d = toDigit(n[i]);
            if(d > l){
                l = d;
                lix = i;
            }
            if(d != 0 && d < s){
                s = d;
                six = i;
            }
            rl[i] = lix;
            rs[i] = six;
        }

        ///find largest
        mx = n;
        F(i,len){
            if(rl[i] != i){
                swap(mx[i], mx[rl[i]]);
                break;
            }
        }

        ///find smallest
        mn = n;
        F(i,len){
            if(rs[i] != -1 && rs[i] != i){
                swap(mn[i], mn[rs[i]]);
                break;
            }
        }

        db2("CASE ",case_id);
        printf("Case #%d: ",case_id);
        cout << mn << " " << mx << endl;

    }
}
