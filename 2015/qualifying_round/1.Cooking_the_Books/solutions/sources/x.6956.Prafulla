def myMax(li):
	#li ==
	l = len(li)
	m = li[l-1]
	mpos = l-1
	mipos = l-1
	mi = li[l-1]
	for i in range(l-1,-1,-1):
		if(li[i]>m):
			m=li[i]
			mpos = i
			if(li[i]==9): 
				break
		elif(li[i]<mi and li[i]!=0):
			mi=li[i]
			mipos = i
			if(li[i]==1): 
				break
		elif(li[mipos]==0): mipos-=1
	return (mpos,mipos)

def process(n):
	if(n/10==0) : 
		print n,n		
	else:
		no = map(lambda x:int(x),list(str(n)))
		nomin = no[::]	
		mindex,miindex = myMax(no)
		temp = no.pop(mindex)
		no.insert(mindex,no[0])
		no[0]=temp

		temp = nomin.pop(miindex)
		nomin.insert(miindex,nomin[0])
		nomin[0]=temp
		print "".join([str(i) for i in nomin]),"".join([str(i) for i in no]) 

"""
x = 123123
process(x)
process(5)
process(10)
process(15)
process(31524)
process(123)
process(897)
"""

x = input()
for i in range(x):
	y=input()
	print "Case #"+str(i+1)+":",
	process(y);
	#print "Case #"+str(i)+":",process(y)


# single digit 
# double accourance
