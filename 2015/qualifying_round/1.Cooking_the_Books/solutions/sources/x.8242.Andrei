#include <iostream>
#include <fstream>
using namespace std;


ifstream f ("data.in");
ofstream g ("data.out");


void write_number(int v[])
{
    for (int i = v[0]; i > 0; --i)
        g << v[i];
}

int main()
{
    int T, N;

    f >> T;
    for (int CaseNr = 1; CaseNr <= T; ++CaseNr)
    {
        f >> N;
        int digits[11], maxd[11], mind[11], swp1 = 0, swp2 = 0, mind_notnull = 1;
        digits[0] = 0; maxd[0] = 1; mind[0] = 1;
        if (!N)
            digits[0] = 1, digits[1] = 0;
        while (N)
        {
            digits[++digits[0]] = N % 10;
            N /= 10;
        }

        for (int i = 1; i <= digits[0]; ++i)
        {
            maxd[i] = mind[i] = i;
            if (digits[maxd[i]] < digits[maxd[i-1]])
                maxd[i] = maxd[i-1];
            if (digits[mind[i]] > digits[mind[i-1]])
                mind[i] = mind[i-1];

            if (digits[i] < digits[mind_notnull] && digits[i]  > 0)
                mind_notnull = i;
        }

        g << "Case #" << CaseNr << ": ";

        if (digits[mind_notnull] && digits[mind_notnull] < digits[digits[0]])
        {
            swp1 = mind_notnull; swp2 = digits[0];
        }
        else
        {
            for (int i = digits[0] - 1; i > 0; --i)
                if (digits[mind[i]] < digits[i])
                {
                    swp1 = i; swp2 = mind[i];
                    break;
                }
        }

        swap(digits[swp1], digits[swp2]);
        write_number(digits);

        swap(digits[swp1], digits[swp2]);
        swp1 = swp2 = 0;

        for (int i = digits[0];i > 0; --i)
            if (digits[maxd[i]] > digits[i])
            {
                swp1 = i; swp2 = maxd[i];
                break;
            }

        g << " ";
        swap(digits[swp1], digits[swp2]);
        write_number(digits);
        g << "\n";
    }

    return 0;
}
