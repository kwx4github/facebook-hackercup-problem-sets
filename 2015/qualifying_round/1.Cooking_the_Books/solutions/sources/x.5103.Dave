/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hackercup;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author David
 */
public class PSet1 {

    public static void main(String[] args) {
        String inputFile = "e:/temp/cooking_the_books.txt";
        String outputFile = "e:/temp/output.txt";
        
        try {
            PSet1 obj = new PSet1();
            obj.processFile(inputFile, outputFile);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void processFile(String inputFile, String outputFile) throws Exception {
        BufferedReader br = new BufferedReader(new FileReader(inputFile));
        BufferedWriter bw = new BufferedWriter(new FileWriter(outputFile));
        int numberOfNumbers = Integer.parseInt(br.readLine());
        for (int i=0; i<numberOfNumbers; i++) {
             Result result = getMinMax(br.readLine());
             bw.write("Case #" + (i+1) + ": " + result.min + " " + result.max);
             bw.write("\n");
        }        
        br.close();
        bw.flush();
        bw.close();
    }
    
    private Result getMinMax(String numberStr) {
        Result result = new Result();
        List<Integer> digits = new ArrayList<Integer>();
        for (String s : numberStr.split("")) digits.add(Integer.parseInt(s));
        Collections.sort(digits);
        
        int maxDigit = digits.get(digits.size()-1);
        int minDigit = 0;
        int counter = 0;
        while (minDigit == 0 && digits.size() > counter) {
            minDigit = digits.get(counter);
            counter++;
        }
        if (minDigit == maxDigit) {
            result.max = result.min = numberStr;
            return result;
        }
        
        int indexMinDigit = numberStr.lastIndexOf("" + minDigit);
        int indexMaxDigit = numberStr.lastIndexOf("" + maxDigit);
        
        StringBuilder minNumber = new StringBuilder(numberStr);
        StringBuilder maxNumber = new StringBuilder(numberStr);
        minNumber.setCharAt(indexMinDigit, numberStr.charAt(0));
        minNumber.setCharAt(0, (""+minDigit).charAt(0));
        maxNumber.setCharAt(indexMaxDigit, numberStr.charAt(0));
        maxNumber.setCharAt(0, (""+maxDigit).charAt(0));
        result.max = maxNumber.toString();
        result.min = minNumber.toString();

        return result;
    }
    
    class Result {
        public String min;
        public String max;
    }
}
