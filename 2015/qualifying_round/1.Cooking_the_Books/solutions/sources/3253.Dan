#include <fstream>
#include <algorithm>
#include <time.h>
using namespace std;
int k;
ofstream g("output.out");
int getpozmax(int st, int dr,int maxim, int a[])
{
    int i,pozmax;
    for(i=st;i<=dr;i++)
    {
        if(a[i]>maxim)
        {
            maxim = a[i];
            pozmax = i;
        }
    }
    return pozmax;
}

int getpozmin(int st, int dr, int minim, int a[])
{
    int i,pozmin;
    for(i=st;i<=dr;i++)
    {
        if((a[i]<minim) && (a[i] || (dr)!=k ) )
        {
            minim = a[i];
            pozmin= i;
        }
    }
    return pozmin;

}
void solve(int number)
{
    int maxim = -2;
    int minim = 10000;
    int i,j;
    k=0;
    int pusminim=0,pusmaxim=0;
    int pozminim,pozmaxim;
    int arr1[12],arr2[12];
    do
    {
        ++k;
        arr1[k]=number%10;
        arr2[k]=number%10;
        number=number/10;
    }while(number);

    for(i=1, j = k; i<= j && ((!pusminim) || (!pusmaxim) ) ; j--)
    {
        maxim = -2;
        minim = 10000;
        if(!pusminim)pozminim = getpozmin(1,j,minim,arr2);
        if(!pusmaxim)pozmaxim = getpozmax(1,j,maxim,arr1);
        if(!pusmaxim && (arr1[pozmaxim] > arr1[j] ))
        {
            swap(arr1[pozmaxim],arr1[j]);
            pusmaxim= 1;
        }
        if(!pusminim && (arr2[pozminim] < arr2[j] ))
        {
            swap(arr2[pozminim],arr2[j]);
            pusminim=1;
        }
    }

    for(i=k;i>0;i--)
        g<<arr2[i];
    g<<" ";
    for(i=k;i>0;i--)
        g<<arr1[i];
    g<<"\n";
}


int main()
{
    int i,t,nr;
    clock_t start_t,end_t;
    start_t=clock();
    ifstream f("input.in");
    f>>t;
    for(i=1;i<=t;i++)
    {
        f>>nr;
        g<<"Case #"<<i<<": ";
        solve(nr);
    }
    f.close();
    return 0;
}
