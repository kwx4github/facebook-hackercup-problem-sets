import java.io.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by jens on 09-01-15.
 */
public class Main {
    public static void main(String... args) {
        System.out.println("Hello, World!");

        String path = "/Users/jens/Downloads/cooking_the_books.txt";
        List<FileInput> inputList = readFile(path);

        StringBuilder content = new StringBuilder();
        Swapper s = new Swapper();
        for (int i = 0; i < inputList.size(); i++) {
            FileInput x = inputList.get(i);
            String[] ans = s.swap(x.getValue());
            int j= i+1;
            content.append("Case #" + j + ": " + ans[0] + " " + ans[1]+"\n");
        }
        System.out.println(content);

        writeFile(content);
    }

    private static List<FileInput> readFile(String path) {
        Reader reader = null;
        try {
            reader = new FileReader(path);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        List<FileInput> inputList = new ArrayList<>();
        getLinesFromFile(reader, inputList);
        return inputList;
    }

    private static void getLinesFromFile(Reader reader, List<FileInput> inputList) {
        assert reader != null;
        BufferedReader br = new BufferedReader(reader);
        String line;

        try {
            String testcases = br.readLine();
            System.out.println("Testcases: "+testcases);
            line = br.readLine();

            for (int i = 0; i < Integer.valueOf(testcases); i++) {
                //do something with data...
                inputList.add(new FileInput(line));
                line = br.readLine();
            }
            br.close();
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void writeFile(StringBuilder content) {
        try {
            File file = new File("output.txt");

            // if file doesnt exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(content.toString());

            bw.close();

            System.out.println("Done");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public static class Swapper {

        public int getHighestNumberPosition(char[] num) {
            int x = 0;
            if (num.length == 1) {
                return 0;
            }
            int highest = Integer.parseInt(String.valueOf(num[0]));

            for (int i = 0; i < num.length-1; i++) {
                int m = Integer.parseInt(String.valueOf(num[i+1]));

                if (m > highest) {
                    x = i+1;
                    highest = m;
                }
            }
            return x;
        }

        public int getLowestNumberPosition(char[] num) {
            int x = 0;
            if (num.length == 1) {
                return 0;
            }
            int lowest = Integer.parseInt(String.valueOf(num[0]));

            for (int i = 0; i < num.length-1; i++) {
                int m = Integer.parseInt(String.valueOf(num[i+1]));

                if (m < lowest && m > 0) {
                    x = i+1;
                    lowest = m;
                }
            }
            return x;
        }

        public String[] swap(String in){
            char[] c = in.toCharArray();
            // Always replace the first character (index 0)
            char[] lowest = swapChars(c.clone(), 0, getLowestNumberPosition(c));
            char[] highest = swapChars(c.clone(), 0, getHighestNumberPosition(c));

            String low = new String(lowest);
            String high = new String(highest);
            return new String[]{low, high};
        }

        private char[] swapChars(char[] c, int begin, int pos) {
            char temp = c[begin];
            c[begin] = c[pos];
            c[pos] = temp;
            return c;
        }
    }

    public static class FileInput {
        public String getValue() {
            return value;
        }

        public void setValue(String value) {
            this.value = value;
        }

        private String value;
        FileInput(String data) {
            value = data;
        }
    }
}

