//TAG : 

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<string>
#include<cstring>
#include<cmath>
#include<vector>
#include<stack>
#include<map>
#include<queue>
#include<algorithm>
#include <climits>
using namespace std;

#define rep(i,n)	for(int (i)=0;(i)<(n);(i)++)
#define repd(i,n)	for(int (i)=(n)-1;(i)>=0;(i)--)
#define REP(i,n) for (int (i)=0,_n=(n); (i) < _n; (i)++)
#define FOR(i,a,b) for (int _b=(b), (i)=(a); (i) <= _b; (i)++)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;i--)
#define ALL(c) (c).begin(), (c).end()
#define SORT(c) sort(ALL(c))

#define CLEAR(x) memset((x),0,sizeof(x));
#define CLEARA(x) memset(&(x),0,sizeof(x));
#define FILL(x,v) memset((x),(v),sizeof(x));
#define FILLA(x,v) memset(&(x),(v),sizeof(x));

#define REVERSE(c) reverse(ALL(c))
#define UNIQUE(c) SORT(c),(c).resize(unique(ALL(c))-(c).begin())
#define X first
#define Y second
#define pb push_back
#define MP make_pair
#define EPS 1e-9

#define PII pair<int,int> 
#define VI vector<int>
#define LL long long

int main()
{
	int TC;
	char line[100],temp[100];

	gets(line);
	TC=atoi(line);
	FOR(T,1,TC)
	{
		gets(line);
		int len=strlen(line);
		if(len==0)
			printf("Case #%d: %s %s\n",T,line,line);
		else{
			printf("Case #%d: ",T);
			//find 'min'
			bool found=false;
			REP(i,len-1){
				int k=i;
				char zero = (i==0)?'0':'?';
				FORD(j,len-1,i+1)if(line[j]!=zero && line[j]<line[k])
					k=j;
				if(line[k]!=line[0])//found
				{
					strcpy(temp,line);
					swap(temp[i],temp[k]);
					printf("%s ",temp);
					found=true;
					break;
				}
			}
			if(!found)printf("%s ",line);
			//find 'max'
			found=false;
			REP(i,len-1){
				int k=i;
				FORD(j,len-1,i+1)if(line[j]>line[k])
					k=j;
				if(line[k]!=line[0])//found
				{
					strcpy(temp,line);
					swap(temp[i],temp[k]);
					puts(temp);
					found=true;
					break;
				}
			}
			if(!found)puts(line);
		}
	}
	
	return 0;
}