import java.io.*;
import java.math.BigInteger;
import java.util.Scanner;


class RoundOne {

	public static int maxVal(String chaine) {
		int pos = 0;
		int max = Character.getNumericValue(chaine.charAt(0));
		for (int i = 1; i < chaine.length(); i++) {
			if (max < Character.getNumericValue(chaine.charAt(i))) {
				max = Character.getNumericValue(chaine.charAt(i));
				pos = i;
			}
		}
		return pos;
	}

	public static int minVal(String chaine) {
		int pos = 0;
		int min = Character.getNumericValue(chaine.charAt(0));
		for (int i = 1; i < chaine.length(); i++) {
			if (min > Character.getNumericValue(chaine.charAt(i))
					&& Character.getNumericValue(chaine.charAt(i)) != 0) {
				min = Character.getNumericValue(chaine.charAt(i));
				pos = i;
			}
		}
		return pos;
	}

	public static void main(String[] args) throws Exception {

		String file = "file.in";
		Scanner in = new Scanner(new File(file));
		int n = in.nextInt();
		System.out.println("N = " + n);

		BigInteger number;
		String stringnum;
		char[] minNumber = null;
		char[] maxNumber =null;

		for (int i = 1; i <= n; i++) {
			number = in.nextBigInteger();
			if (number.compareTo(new BigInteger("11")) == -1) {
				System.out.println("Case #" + i + ": " + number + " " + number);
			} else {
				stringnum = number.toString();
				
				int maxpos = maxVal(stringnum);
				int minpos = minVal(stringnum);
				char ox = stringnum.charAt(0);
				minNumber = stringnum.toCharArray();
				maxNumber = stringnum.toCharArray();
				
				minNumber[0]=stringnum.charAt(minpos);
				minNumber[minpos]=ox;
				
				maxNumber[0]=stringnum.charAt(maxpos);
				maxNumber[maxpos]=ox;
				

				System.out.println("Case #" + i + ": " + String.valueOf(minNumber) + " " + String.valueOf(maxNumber));
			}
		}
		in.close();
	}

}