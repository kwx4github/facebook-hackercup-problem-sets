#include<bits/stdc++.h>
using namespace std;
#define SI(x)      scanf("%d", &(x))
#define SII(x,y)   scanf("%d%d",&(x), &(y))
#define SS(x) 	   scanf("%s", &(x))
#define SF(x) 	   scanf("%f", &(x))
#define SFF(x,y)   scanf("%f%f",&(x),&(y))
#define REP(i,n)   for(int i=0; i<(n); i++)
#define FOR(i,a,b) for(int i=(a); i<=(b); i++)
#define SZ(x) ((int)(x).size())
#define MP make_pair
#define PB push_back
#define MINS(x,y,z) min((x), min((y), (z)))
#define MAXS(x,y,z) max((x), max((y), (z)))
#define MOD 1e9+7
#define INF  INT_MAX
#define NINF INT_MIN
#define F first  
#define S second 

typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef pair<int,int> PII;
typedef pair<ll, ll> PLL;

string getSmallest(string n) {
      if( n.size() == 1 ) return n;
      for(int i=0;i<n.size()-1;i++) {
	    int minCh = i;
	    if( i==0 && n[0] == '1' ) continue;
	    for(int j=i+1; j<n.size();j++) {
		  if( n[i] > n[j] && n[j] <= n[minCh] ) {
			if( i==0 && n[j] == '0' ) continue;
			minCh = j;
		  }
	    }
	    if( (i!=0 && n[minCh] < n[i]) || (i==0 && n[minCh] < n[i] && n[minCh] != '0') ) { swap(n[i], n[minCh]); return n; }
      }
      return n;
}

string getLargest(string n) {
      if( n.size() == 1 ) return n;
      for(int i=0;i<n.size()-1;i++) {
	    int maxCh = i+1;
	    if( i==0 && n[0] == '9' ) continue;
	    for(int j=i+1; j<n.size();j++) {
		  if( n[i] < n[j] && n[j] >= n[maxCh] ) {
			maxCh = j;
		  }
	    }
	    if( n[maxCh] > n[i] ) { swap(n[i], n[maxCh]); return n; }
      }
      return n;

}

string getSmallestB(string n) {
      if( n.size() == 1 ) return n;
      string tmp = n;
      string mini = n;
      for(int i=0;i<n.size()-1;i++) {
	    for(int j=i+1; j<n.size();j++) {
		  swap(n[i], n[j]);
		  if( n[0] != '0' && mini > n ) mini = n;
		  n = tmp;
	    }
      }
      return mini;
}

string getLargestB(string n) {
      if( n.size() == 1 ) return n;
      string tmp = n;
      string maxi = n;
      for(int i=0;i<n.size()-1;i++) {
	    for(int j=i+1; j<n.size();j++) {
		  swap(n[i], n[j]);
		  if( n[0] != '0' && maxi < n ) maxi = n;
		  n = tmp;
	    }
      }
      return maxi ;
}


int main() {
      int t;
      scanf("%d",&t);
      string n;
      for(int i=1; i<= t; i++) {
	    cin >> n ;
	    //cout << "Case #" << i << " " << getSmallest(n) << " " << getLargest(n) << endl;
	    cout << "Case #" << i << " " << getSmallestB(n) << " " << getLargestB(n) << endl;
      }
      return 0;
}

