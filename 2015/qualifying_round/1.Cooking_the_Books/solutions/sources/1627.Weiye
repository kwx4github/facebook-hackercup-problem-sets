using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace hacker
{
    class A
    {
        static long tonumber(long[] digs)
        {
            long res = 0;
            for (int i = 0; i < digs.Length;i++ )
            {
                res *= 10;
                res += digs[i];
            }
            return res;
        }
        static IList<long> swap(long number)
        {
            var result = new List<long>();
            result.Add(number);
            var digits = new List<long>();
            while(number!=0)
            {
                digits.Add(number % 10);
                number /= 10;
            }
            digits.Reverse();
            var digs = digits.ToArray();
            for (int i = 0; i < digs.Length; i++)
                for (int j = i + 1; j < digs.Length;j++ )
                {
                    long[] curdigs = new long[digs.Length];
                    Array.Copy(digs, curdigs, digs.Length);
                    if((i==0)&&(curdigs[j]==0))
                    {
                        continue;
                    }
                    long t = curdigs[j];
                    curdigs[j] = curdigs[i];
                    curdigs[i] = t;
                    result.Add(tonumber(curdigs));

                }
           return result;
        }
        static void Main(string[] args)
        {
            string fileName = "A.txt";
            var lines = System.IO.File.ReadAllLines(fileName);
            using (System.IO.StreamWriter file = new System.IO.StreamWriter("Aout.txt"))
            {
                int caseNum = int.Parse(lines[0]);
                for (int i = 0; i < caseNum; i++)
                {
                    var number = long.Parse(lines[i + 1]);
                    var possibles = swap(number).ToArray();
                    Array.Sort(possibles);
                    var output = string.Format("Case #{0}: {1} {2}", i + 1, possibles.First(), possibles.Last());
                    file.WriteLine(output);
                }
            }
        }
    }
}
