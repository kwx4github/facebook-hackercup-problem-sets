//kinda final
		#include <iostream>
		#include <stdio.h>
		#include <utility>
		#include <string.h>
		#include <vector>
		#define MOD 1000000007
		using namespace std;
		int main()
		{
			int t;
			cin>>t;
			int count=0;
			while(t--)
			{
				string str;
				string str_min;
				string str_max;
				cin>>str;
				if(str.length()==1){
					str_min = str;
					str_max = str;
				}
				else {
					
					str_max = str;
				int max_value=str.at(0);
				int max_pos = 0;
				int flag=0;
				int pos=0;
				while(flag!=1){
					for(int i=pos+1;i<str.length();i++)
					{
						if(str.at(i) >= max_value){
							max_value = str.at(i);
							max_pos = i;
						}
					}
					if(max_pos != pos && str.at(max_pos) != str.at(pos)){
						str_max.at(pos) = str.at(max_pos);
						str_max.at(max_pos) = str.at(pos);
						flag=1;
					}
					else if(max_pos != pos && str.at(max_pos) == str.at(pos)){
						for(int i=pos+1;i<str.length();i++){
							if(str.at(i)<str.at(max_pos)){
								str_max.at(i) = str.at(max_pos);
								str_max.at(max_pos) = str.at(i);			
							}
							flag=1;
							
						}
					}
					else if(max_pos == pos){
						pos++;
						max_value = str.at(pos);
						max_pos = pos;
						if(pos >= str.length()-1){
						flag=1;
						}
					}

				
			}

			str_min = str;
				int min_value=str.at(0);
				int min_pos = 0;
				flag=0;
				pos=0;
				while(flag!=1){
				if(pos==0){
						for(int i=1;i<str.length();i++)
						{	
							if(str.at(i) <= min_value && str.at(i) != '0'){
								min_value = str.at(i);
								min_pos = i;
							}
						}
						int j=0;
					//	cout<<"pos0"<<min_pos<<endl;
						if(min_pos != pos && str.at(min_pos) != str.at(pos)){
							str_min.at(pos) = str.at(min_pos);
							str_min.at(min_pos) = str.at(pos);
							flag=1;
							}
						else if(min_pos != pos && str.at(min_pos) == str.at(pos)){
							
									
										pos++;
										min_value = str.at(pos);
										min_pos = pos;
										if(pos >= str.length()-1){
										flag=1;
										}
						
						}
						else if(min_pos == pos){
							//cout<<"here"<<endl;
							pos++;
							min_value = str.at(pos);
							min_pos = pos;
							if(pos >= str.length()-1){
							flag=1;
							}
						}

					}
					else if (pos!=0)
					{
					//	cout<<pos<<endl;
						for(int i=1;i<str.length();i++)
						{	
							if(str.at(i) <= min_value && str.at(i) != 0){
								min_value = str.at(i);
								min_pos = i;
							}
						}
					//	cout<<"pos1"<<min_pos<<endl;
						int j=0;
						if(min_pos != pos && str.at(min_pos) != str.at(pos)){
							str_min.at(pos) = str.at(min_pos);
							str_min.at(min_pos) = str.at(pos);
							flag=1;
							}
						else if(min_pos != pos && str.at(min_pos) == str.at(pos)){
							for(int i=pos+1;i<str.length();i++){
								if(str.at(i) > str.at(min_pos)){
									str_min.at(i) = str.at(min_pos);
									str_min.at(min_pos) = str.at(i);			
									j=1;
									flag=1;
									break;
									}
							}
									if(j!=1){
										//flag=1;
										pos++;
										min_value = str.at(pos);
										min_pos = pos;
										if(pos >= str.length()-1){
										flag=1;
										}
							
									}
									
								
							}
						
						else if(min_pos == pos){
							pos++;
							min_value = str.at(pos);
							min_pos = pos;
							if(pos >= str.length()-1){
							flag=1;
							}
						}
						
					}
			  }
			}
			count++;
			  cout<<"Case #"<<count<<": "<<str_min<<" "<<str_max<<endl;
			}
		}