#include<iostream>
#include<vector>
#include<cstring>
#include<stdio.h>
#include<algorithm>
#include<string.h>
#include <queue>
#include<map>
#include<math.h>
using namespace std;
typedef pair<int,int> ii;
typedef vector <ii> vii;
#define rep(i,a,b) for(int i=(int)a;i<int(b);i++)
#define inf 10000000
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define trvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define si(a) scanf("%d",&a)
#define sli(a) scanf("%lld",&a)
typedef long long int ll;
#define gc getchar_unlocked
int inline  gcd(int a,int b)
{   if(b>a) return gcd(b,a);
    if(b==0) return a;
    return gcd(b,a%b);
}
int lcm(int a,int b)
{   int k=gcd(a,b);a/=k;
    return a*b;
}
inline int mid(int a, int b)
{  return a + (b-a)/2; 
}

#define pc(x) putchar_unlocked(x);
inline void writeInt (int n)
{
    int N = n, rev, count = 0;
    rev = N;
    if (N == 0) { pc('0'); pc('\n'); return ;}
    while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
    rev = 0;
    while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
    while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
    while (count--) pc('0');
}
void inline input(int &x)
{
register int c = gc();
x = 0;
for(;(c<48 || c>57);c = gc());
for(;c>47 && c<58;c = gc())
{x = (x<<1) + (x<<3) + c - 48;}
}
int str_to_int(string& s,int len)
{
	int n=0;
	for(int j=0;j<len;j++)
	{
		n=n*10+s[j]-'0';
	}
	return n;
}
int main()
{
	int t;input(t);
	int c=1;
	while(t--)
	{
		string s;
		cin>>s;
		int m=999999999;
		int m2=-1;
		int l=s.length();
		rep(i,0,l)
		{
			for(int j=i;j<l;j++)
			{
				if(i==0&&s[j]=='0') continue;
				char c=s[i];
				char c2=s[j];
				string n=s;
			//	cout<<"n_init "<<n<<" "; 
				n[i]=c2;
				n[j]=c;
			//	cout<<n<<" ";
			//	cout<<str_to_int(n,l)<<endl;
				m=min(m,str_to_int(n,l));
				m2=max(m2,str_to_int(n,l));
			}
		}
		cout<<"Case "<<"#"<<c<<": "<<m<<" "<<m2<<endl; 
		c++;
	}
	return 0;
}
