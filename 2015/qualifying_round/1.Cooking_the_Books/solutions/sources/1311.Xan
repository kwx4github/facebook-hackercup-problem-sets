

#if 1

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <string>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cassert>
#include <fstream>
using namespace std;
typedef int64_t int64;

typedef pair<int,int> pii;
typedef pair<double,double> pdd;
#define mp make_pair
#define X first
#define Y second  

#define pb push_back

static void solve();

int main() {
	freopen("A.in.txt","r",stdin);
	freopen("A.out.txt","w",stdout);
	int test_case;
	cin >> test_case;
	for (int t = 1; t <= test_case; ++t) {
		cout << "Case #" << t << ": ";
		solve();
		cout << '\n';
	}
	return 0;
}

static void solve() {
	string s;
	cin >> s;
	string big = s;
	string small = s;
	
	bool gotBig = false;
	bool gotSmall = false;
	for (int i = 0; i < s.length() - 1; i++) {
		int is = i;
		int ib = i;
		for (int j = i + 1; j < s.length(); ++j) {
			if (!gotBig && s.at(i) < s.at(j) && s.at(ib) <= s.at(j)) {
				ib = j;
			}
			if (!gotSmall && s.at(i) > s.at(j) && s.at(is) >= s.at(j) && !(i == 0 && s.at(j) == '0')) {
				is = j;
			}
		}
		if (ib > i) {
			gotBig = true;
			big = s.substr(0, i) + s.substr(ib, 1) + s.substr(i + 1, ib - i - 1) + s.substr(i, 1) + s.substr(ib + 1);
		}
		if (is > i) {
			gotSmall = true;
			small = s.substr(0, i) + s.substr(is, 1) + s.substr(i + 1, is - i - 1) + s.substr(i, 1) + s.substr(is + 1);
		}
	}
	cout << small + " " + big;
}

#endif

