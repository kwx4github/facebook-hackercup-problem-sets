package de.strebel;
import java.io.*;

public class CookBooks 
{

	public static void main(String[] args) 
	{
		BufferedReader bufferR=new BufferedReader(new InputStreamReader(System.in));
		try
		{
		
		String linecount=bufferR.readLine();
		int iLineno=Integer.parseInt(linecount);
		
		for(int ic=1; ic<=iLineno;ic++)
		{
			String line=bufferR.readLine().trim();
			int iNr=Integer.parseInt(line);
			String strBigNr="", strSmallNr="";			
			
			if (iNr<10) 
			{
				strBigNr=line; 
				strSmallNr=line;
			}
			else
			{
				//
				//suche kleinste Zahl
				//
				int minqpos=0, minzpos=0;
				
				//laufe durch alle möglichen Stellen als Quellposition
				for(int quellpos=0;quellpos<line.length();quellpos++)
				{
					char cMinVal=line.charAt(quellpos);
					boolean bfound=false;
					
					//laufe durch alle möglichen Stellen als Zielposition
					for(int zielpos=quellpos+1;zielpos<line.length();zielpos++)
					{
						//ist wert(zielpos)<wert(quellpos) und >0, dann merke wert, pos 
						if (line.charAt(zielpos)<cMinVal)
						{
							if (!((line.charAt(zielpos)=='0') && (quellpos==0))) //0 darf nicht an pos. 0 stehen!
							{
								//kleinerer zulässiger wert gefunden
								cMinVal=line.charAt(zielpos);
								minqpos=quellpos; 
								minzpos=zielpos;
								bfound=true;
							}
						}
					}
					
					if (bfound==true) break;
				}
				
				
				//swap durchführen
				char[] CAline=line.toCharArray();
				char cSwap=CAline[minqpos];
				CAline[minqpos]=CAline[minzpos];
				CAline[minzpos]=cSwap;
				strSmallNr=new String(CAline);
				
				//
				//suche größte Zahl
				//
				minqpos=0; 
				minzpos=0;
				
				//laufe durch alle möglichen Stellen als Quellposition
				for(int quellpos=0;quellpos<line.length();quellpos++)
				{
					char cMaxVal=line.charAt(quellpos);
					boolean bfound=false;
					
					//laufe durch alle möglichen Stellen als Zielposition
					for(int zielpos=line.length()-1;zielpos>quellpos;zielpos--)
					{
						//ist wert(zielpos)>wert(quellpos) und >0, dann merke wert, pos 
						if (line.charAt(zielpos)>cMaxVal)
						{
							if (!((line.charAt(zielpos)=='0') && (quellpos==0))) //0 darf nicht an pos. 0 stehen!
							{
								//kleinerer zulässiger wert gefunden
								cMaxVal=line.charAt(zielpos);
								minqpos=quellpos; 
								minzpos=zielpos;
								bfound=true;
							}
						}
					}
					
					if (bfound==true) break;
				}
				
				//swap durchführen
				CAline=line.toCharArray();
				cSwap=CAline[minqpos];
				CAline[minqpos]=CAline[minzpos];
				CAline[minzpos]=cSwap;
				strBigNr=new String(CAline);
			}	
			
			System.out.format("Case #%d: %s %s%n",ic,strSmallNr,strBigNr);
		}
		
		bufferR.close();
		}
		catch(Exception ex)
		{
			System.err.println(ex.getMessage());
		}
	}

}
