using System;
using System.Collections.Generic;
using System.Text;

namespace cookbooks
{
    class Program
    {
        static void Main(string[] args)
        {
            var count = Convert.ToInt32(Console.ReadLine());
            var inputs = new List<int>();

            for (int i = 0; i < count; i++)
                inputs.Add(Convert.ToInt32(Console.ReadLine()));

            for (int i = 0; i < inputs.Count; i++)
            {
                var input = inputs[i];
                var possibilities = get_possiblities(input);

                var smallest = 0;
                var largest = 0;

                foreach (var possibility in possibilities)
                {
                    if (smallest == 0 || possibility < smallest)
                        smallest = possibility;

                    if (largest == 0 || possibility > largest)
                        largest = possibility;
                }

                Console.WriteLine("Case #{0}: {1} {2}", i + 1, smallest, largest);
            }
        }

        static List<int> get_possiblities(int input)
        {
            var l = new List<int>();
            var t = input.ToString();

            l.Add(input);

            for (int i = 0; i < t.Length; i++)
            {
                var x = t[i];

                for (int j = 0; j < t.Length; j++)
                {
                    var y = t[j];

                    // since we're swapping, i and j must be different indices...
                    if (i != j)
                    {
                        var c = t.ToCharArray();

                        c[i] = y;
                        c[j] = x;

                        if (c[0] == '0')
                            // not allowed
                            continue;

                        var s = new string(c);

                        var possibility = Convert.ToInt32(s);

                        if (!l.Contains(possibility))
                            l.Add(possibility);
                    }
                }
            }

            return l;
        }
    }
}
