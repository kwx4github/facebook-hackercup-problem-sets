#include<stdio.h>
#include<stdlib.h>
#include<math.h>

long **out;

int findmin(int num[],int n,int t)
{
	int i,j;
	int min,minnum=10;
	int minflag=0;
	int temp;
	for(i=n-1;i>0;i--)
	{
		if(minflag) break;
		for(j=i-1;j>=0;j--)
		{
			if(num[j]<num[i]&&num[j]<=minnum&&num[j]!=0){
				minflag = 1;
				min = j;
				minnum = num[min];
			}
		}
	}
	if(minflag){
	temp = num[i+1];
	num[i+1] = num[min];
	num[min] = temp;
	out[t][0]=0;}
	while(n>0){
	if(num[n-1]==0)
		n--;
	out[t][0] += num[n-1] * pow(10,n-1);
	n--;
	}
	if(minflag){
	temp = num[i+1];
	num[i+1] = num[min];
	num[min] = temp;}
}
		
int findmax(int num[],int n,int t)
{
	int i,j;
	int max,maxnum=0;
	int maxflag=0;
	int temp;
	for(i=n-1;i>0;i--)
	{
		if(maxflag) break;
		for(j=i-1;j>=0;j--)
		{
			if(num[j]>num[i]&&num[j]>=maxnum&&num[j]!=0){
				maxflag = 1;
				max = j;
				maxnum = num[max];
			}
		}
	}
	if(maxflag){
	temp = num[i+1];
	num[i+1] = num[max];
	num[max] = temp;}
	out[t][1]=0;
	while(n>0){
	if(num[n-1]==0)
		n--;
	out[t][1] += num[n-1] * pow(10,n-1);
	n--;
	}
	if(maxflag){
	temp = num[i+1];
	num[i+1] = num[max];
	num[max] = temp;}
}

int main()
{
	int t;
	long n;
	int i;
	scanf("%d",&t);
	long *arr = (long *)malloc(sizeof(long)*t);
	out = (long **)malloc(sizeof(long *)*t);
	for(i=0;i<t;i++)
	{
		out[i] = (long *)malloc(sizeof(long)*2);
		scanf("%ld",&arr[i]);
		if(arr[i]==0) 
		{
			out[i][0]=0;
			out[i][1]=0;
		}
	}
	for(i=0;i<t;i++)
	{
		n = arr[i];
		int *num = (int *)malloc(sizeof(int)*10);
		if(n!=0)
		{
			int k=0;
			while(n!=0)
			{
				num[k++] = n%10;
				n = n/10;
			}
			if(k>2){
			findmin(num,k,i);
			findmax(num,k,i);}
			else if(k==2)
			{
				if(num[0]>num[1])
				{
					out[i][0] = arr[i];
					out[i][1] = 0;
					int t = num[0];
					num[0] = num[1];
					num[1] = t;
					out[i][1] = num[1]*10 + num[0];
					t = num[0];
					num[0] = num[1];
					num[1] = t;
				}
				else if(num[0]==0)
				{
					out[i][0] = arr[i];
					out[i][1] = arr[i];
				}
				else
				{
					out[i][1] = arr[i];
					out[i][0] = 0;
					int t = num[0];
					num[0] = num[1];
					num[1] = t;
					out[i][0] = num[1]*10 + num[0];
					t = num[0];
					num[0] = num[1];
					num[1] = t;
				}
			}
			else
			{
				out[i][0] = arr[i];
				out[i][1] = arr[i];
			}	
		}
	}
	for(i=0;i<t;i++)
	{
		printf("Case #%d: ",i+1);
		printf("%ld %ld\n",out[i][0],out[i][1]);
	}
}
