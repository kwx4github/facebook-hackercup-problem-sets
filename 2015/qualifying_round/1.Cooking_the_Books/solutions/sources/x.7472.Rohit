import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.lang.Math;
import java.util.Arrays;

class ModScanner {
	BufferedReader br;
	StringTokenizer st;

	public ModScanner() {
		br = new BufferedReader(new InputStreamReader(System.in));
	}

	String nextToken() throws Exception {
		while (st == null || !st.hasMoreElements()) {
				st = new StringTokenizer(br.readLine());
			
		}
		return st.nextToken();
	}

	int nextInt() throws Exception, Exception {
		return Integer.parseInt(nextToken());
	}

	long nextLong() throws Exception {
		return Long.parseLong(nextToken());
	}

	double nextDouble() throws Exception {
		return Double.parseDouble(nextToken());
	}
}

class solve {
	void swap(int a[],int l,int h){
		int temp=a[l];
		a[l]=a[h];
		a[h]=temp;
	}
	void sol() throws Exception{
	ModScanner m=new ModScanner();
	int t=m.nextInt();
	
	for(int i=0;i<t;i++){
		int n=m.nextInt();
		int dc = Integer.toString(n).length();
		int ar[]=new int[dc]; 
		int temp = n;
		   int Maxi=0,Mini=0;
		 int max=-1,r=0,min=Integer.MAX_VALUE,count=0;
		   while( temp != 0 )
		   {
		      r =temp%10;
		      if(r>=max){
		    	  max=r;
		    	  Maxi=count;
		      }
		      if(r<min && r!=0){
		    	  min=r;
		    	  Mini=count;
		      }
		      temp = temp/10;
		      ar[count]=r;
		      count++;
		   }
		 
		   System.out.print("Case #"+(i+1)+":"+" ");
		   if(n==0)
			   System.out.println(0+" "+0);
		   else{
		   swap(ar,dc-1,Mini);
		   for(int j=dc-1;j>=0;j--)
			   System.out.print(ar[j]);
		   swap(ar,dc-1,Mini);
		   System.out.print(" ");
		   swap(ar,dc-1,Maxi);
		   for(int j=dc-1;j>=0;j--)
			   System.out.print(ar[j]);
		   }
			System.out.println();
		}
		
	}
	
    public static void main (String [] args) throws Exception{
    	solve s=new solve();
    	s.sol();
    }
}
