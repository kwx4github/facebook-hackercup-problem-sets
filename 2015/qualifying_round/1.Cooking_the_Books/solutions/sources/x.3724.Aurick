import java.util.*;
import java.io.*;
public class problem1 {
	public static void main(String[] args) throws IOException{
		BufferedReader f = new BufferedReader(new FileReader("problem1.in"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("problem1.out")));
		int n = Integer.parseInt(f.readLine());
		for(int nmnmnm=0; nmnmnm<n; nmnmnm++){
			String s = f.readLine();
			int length = s.length();
			int[] zzz = new int[length];
			int[] zzzmin = new int[length];
			for(int i=0; i<s.length(); i++){
				zzz[i] = (int) s.charAt(i)-48;
				zzzmin[i] = (int) s.charAt(i)-48;
				//System.out.println(zzz[i]);
			}
			int max = findMax(zzz, 0);
			int min = findMin(zzzmin, 0);
			//System.out.println(max);
			out.println("Case #" + (nmnmnm+1) + " " + min + " " + max);
		}
		out.close();
	}
	public static int findMax(int[] zzz, int start){
		if(start == zzz.length-1){
			int i=0;
			for(int j=0; j<zzz.length; j++){
				i*=10;
				i+=zzz[j];
			}
			return i;
		}
		int max = zzz[start];
		int index=0;
		boolean found=false;
		for(int i=start+1; i<zzz.length; i++){
			if(zzz[i]>max){
				max = zzz[i];
				index=i;
				found=true;
			}
		}
		if(found){
			int temp = zzz[start];
			zzz[start] = max;
			zzz[index] = temp;
			int i=0;
			for(int j=0; j<zzz.length; j++){
				i*=10;
				i+=zzz[j];
			}
			return i;
		}
		else{
			return findMax(zzz, start+1);
		}
	}
	public static int findMin(int[] zzz, int start){
		if(start == zzz.length-1){
			int i=0;
			for(int j=0; j<zzz.length; j++){
				i*=10;
				i+=zzz[j];
			}
			return i;
		}
		int min = zzz[start];
		int index=0;
		boolean found=false;
		for(int i=start+1; i<zzz.length; i++){
			if(zzz[i]<min && zzz[i]!=0){
				min = zzz[i];
				index=i;
				found=true;
			}
		}
		if(found){
			int temp = zzz[start];
			zzz[start] = min;
			zzz[index] = temp;
			int i=0;
			for(int j=0; j<zzz.length; j++){
				i*=10;
				i+=zzz[j];
			}
			return i;
		}
		else{
			return findMin(zzz, start+1);
		}
	}
}