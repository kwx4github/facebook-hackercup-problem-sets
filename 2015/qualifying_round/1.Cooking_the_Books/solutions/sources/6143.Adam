#include <iostream>
#include <string>

using namespace std;

int main(int argc, char const *argv[])
{
	ios_base::sync_with_stdio(0);
	int T;
	int p=0;
	cin>>T;
	while(T--)
	{
		string number;
		cin>>number;
		int len=number.size();
		cout<<"Case #"<<++p<<": ";
		if(len==1)
		{
			cout<<number[0]<<" "<<number[0]<<"\n";
			continue;
		}
		bool found =false;
		char p=0;
		while(!found)
		{
			char min=number[p];
			int point=0;
			for (int i = len-1; i > p; --i)
			{
				if(number[i]<min)
				{
					if(number[i]!='0')
					{
						min=number[i];
						point=i;
						found = true;
					}
					else
						if(p!=0)
						{
							min=number[i];
							point=i;
							found = true;	
						}
				}
			}
			if(found)
			{
				for (int i = 0; i < len; ++i)
				{
					if(i==point)
						cout<<number[p];
					else
						if(i==p)
							cout<<number[point];
						else
							cout<<number[i];
				}
				cout<<" ";
				break;
			}
			p++;
			if(p==len)
			{
				cout<<number<<" ";
				found=true;
				break;
			}
		}
		found =false;
		p=0;
		while(!found)
		{
			char maks=number[p];
			int point=0;
			for (int i = len-1; i > p; --i)
			{
				if(number[i]>maks)
				{
					maks=number[i];
					point=i;
					found=true;
				}
			}
			if(found)
			{
				for (int i = 0; i < len; ++i)
				{
					if(i==point)
						cout<<number[p];
					else
						if(i==p)
							cout<<number[point];
						else
							cout<<number[i];
				}
				cout<<"\n";
				break;
			}
			p++;
			if(p==len)
			{
				cout<<number<<"\n";
				found =true;
				break;
			}
		}
	}
	return 0;
}