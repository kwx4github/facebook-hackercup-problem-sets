#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

template <class ForwardIterator>
  ForwardIterator min_el ( ForwardIterator first, ForwardIterator last )
{
  if (first==last) return last;
  ForwardIterator largest = first;

  while (++first!=last)
    if ((*first != '0') && (*largest>*first))    // or: if (comp(*largest,*first)) for version (2)
      largest=first;
  return largest;
}

int main(int arc, char **argv)
{
	int t;
	cin >> t;
	for (int casse = 1; casse <= t; ++casse)
	{
		string s;
		cin >> s;
		string smaller = s;
		string bigger = s;
		string::reverse_iterator ma = max_element(bigger.rbegin(), bigger.rend()-1);
		if (*ma > *(bigger.rend()-1))
			iter_swap(ma, bigger.rend()-1);
		string::reverse_iterator mi = min_el(smaller.rbegin(), smaller.rend()-1);
		//cerr << "mi: " << *mi << endl;
		if ((*mi < *(smaller.rend()-1)) && (*mi != '0'))
			iter_swap(mi, smaller.rend()-1);
		cout << "Case #" << casse << ": " << smaller << " " << bigger << "\n";
	}
}
