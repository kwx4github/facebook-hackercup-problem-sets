__author__ = 'mac'


def get_max_min(n):
    #get max
    ans_max, ans_min = None, None

    if len(n) == 1:
        return n, n

    for i in range(len(n)):
        ni = int(n[i])
        jmax, jmin = None, None
        for j in range(i + 1, len(n)):
            nj = int(n[j])
            if nj == 0 and i == 0:
                continue
            if ni < nj and (jmax is None or int(n[jmax]) < nj):
                jmax = j
            if ni > nj and (jmin is None or int(n[jmin]) > nj):
                jmin = j
        if jmax is not None and ans_max is None:
            ans_max = list(n)
            ans_max[i], ans_max[jmax] = ans_max[jmax], ans_max[i]
            ans_max = "".join(ans_max)
        if jmin is not None and ans_min is None:
            ans_min = list(n)
            ans_min[i], ans_min[jmin] = ans_min[jmin], ans_min[i]
            ans_min = "".join(ans_min)
        if ans_min is not None and ans_max is not None:
            break
    if ans_max is None:
        ans_max = n
    if ans_min is None:
        ans_min = n
    return ans_max, ans_min



def solve(input_file):
    lines = []
    with open(input_file, 'r') as file:
        for line in file:
            line = line.strip()
            lines.append(line)

    #get testcase number
    case_num = int(lines[0])
    case_idx = 0
    while case_idx < case_num:
        #read case
        case_idx += 1
        #get case size
        m, n = get_max_min(lines[case_idx])
        print "Case #%d: %s %s" % (case_idx, n, m)


if __name__ == "__main__":
    import sys
    input = sys.argv[1]
    solve(input)