
#include<bits/stdc++.h>
#define sqr(x) ( (x)*(x) )
#define Size(a) int((a).size()) 
#define pb push_back
#define mset(x,v) memset(x,v,sizeof(x))
#define all(c) (c).begin(),(c).end() 
#define SORT(x) sort(all(x))
#define error(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); }
#define tr(c,i) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define P(x,i) cerr<<"["#x<<"["<<i<<"] = "<<x[i]<<"]\n"
#define PP(x,i,j) cerr<<"["#x<<"["<<i<<"]["<<j<<"]= "<<x[i][j]<<"]\n"
#define PPP(x,i,j,k) cerr<<"["#x<<"["<<i<<"]["<<j<<"]["<<k<<"]= "<<x[i][j][k]<<"]\n"
#define chk(x,n) ( x[n>>6] & (1<< ( (n>>1) & 31) )  ) // checks if  the bit corresponding to n is 1 
#define set(x,n) ( x[n>>6] |= (1<< ( (n>>1) & 31) )  ) // sets the bit corresponding to n to 1 - meaning its composite 
#define mod 1000000007
typedef long long int ll;
typedef long double ld;
typedef unsigned int ui;
typedef unsigned long long int ull;	
using namespace std;
typedef vector<int> VI;
typedef set<int> SI;
typedef map<int,int> MII;
typedef pair<int,int> PII;
int main()
{
	int T;
	string s;
	scanf("%d",&T);
	for (int t = 1; t<=T; t++) 
	{
		cin>>s;
		string s1=s,s2=s;
		int n=Size(s);
		for(int i=0;i < n;i++)
		{
			int minpos=-1,MIN=s1[i]-'0';
			for(int j=i+1;j < n;j++)
			{
				if(i==0&&s1[j]=='0') 
				{
					continue;
				}
				if(s1[j]-'0'<=MIN) 
				{
					MIN=s1[j]-'0';
					minpos=j;
				}
			}
			if(minpos!=-1) 
			{
				char temp=s1[i];
				s1[i]=s1[minpos];
				s1[minpos]=temp;
				break;
			}
		}
		for(int i=0;i < n;i++)
		{
			int maxpos=-1,MAX=s2[i]-'0';
			for(int j=i+1;j < n;j++)
			{
				if(i==0&&s2[j]=='0') 
				{
					continue;
				}

				if(s2[j]-'0'>=MAX) 
				{
					MAX=s2[j]-'0';
					maxpos=j;
				}
			}
			if(maxpos!=-1) 
			{
				char temp=s2[i];
				s2[i]=s2[maxpos];
				s2[maxpos]=temp;
				break;
			}
		}
		printf("Case #%d: %s %s\n",t,s1.c_str(),s2.c_str());
	}
	return 0;
}
