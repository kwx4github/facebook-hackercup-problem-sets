#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<map>
#include<stdlib.h>
#include<algorithm>
#include<limits.h>
#include<stack>
#include<deque>
#include<set>

using namespace std;

#define i_n(a) scanf("%d",&a)
#define l_n(a) scanf("%I64d",&a)
#define LL long long int
#define pb(a) push_back(a)
#define pp pair<int,int>
#define vv vector<int>
#define vvp vector<pp>
#define i_p(a) printf("%d\n",a)
#define l_p(a) printf("%I64d\n",a)
#define pnt(expr) printf(#expr"\n")
#define reset(a,val) memset(a,val,sizeof(a))
#define m1 10000000000
#define mod 1000000007
#define pr(cn,x) ((cn).find(x)!=(cn).end())
#define tr(cn,it) for(typeof((cn).begin()) it=(cn).begin();it!=(cn).end();it++)
#define read() freopen("fraud.in","r",stdin)
#define write() freopen("fraud.out","w",stdout)
bool cmp(const pair<int, int>& p1, const pair<int, int>& p2)
{
    return p1.first < p2.first;
}
int sol(string a)
{
    int ans=0;
    int l;
    l=a.size();
    for(int i=0;i<l;i++)
    {
        ans*=10;
        ans+=a[i]-'0';
    }
    return ans;

}
int main()
{
int t;
i_n(t);
for(int x=1;x<=t;x++)
{
    string in;
    cin>>in;
    int l=in.size();
    int ans_min,ans_max;
    ans_min=sol(in);
    ans_max=sol(in);
    for(int i=0;i<l;i++)
    {
        string out;
        out=in;
        for(int j=0;j<l;j++)
        {
            swap(out[i],out[j]);
            if(out[0]!='0')
            {
                ans_max=max(ans_max,sol(out));
                ans_min=min(ans_min,sol(out));
            }
            swap(out[i],out[j]);
        }
    }
    printf("Case #%d: %d %d\n",x,ans_min,ans_max);
}
  return 0;
}
