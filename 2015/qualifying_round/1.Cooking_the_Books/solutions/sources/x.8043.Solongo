import java.io.*;
import java.util.Arrays;

public class Books {
    static String[] inputs;
    static String[] outputs;

    public static void main(String[] args) throws IOException{
        BufferedReader in = new BufferedReader(new FileReader("cooking_the_books.txt"));
        PrintWriter out = new PrintWriter("cooking_the_books_output.txt");
        int testCases = Integer.parseInt(in.readLine());

        inputs = new String[testCases];
        outputs = new String[testCases];

        Arrays.fill(inputs, "");
        Arrays.fill(outputs , "");

        for (int i = 0; i < testCases; i++) {
            inputs[i] = in.readLine();
        }

        for (int i = 0; i < testCases; i++) {
            outputs[i] = solve(inputs[i]);
        }

        for (int i = 0; i < testCases; i++) {
            out.print("Case #" + (i + 1) + ": ");
            out.println(outputs[i]);
        }
        out.close();
    }
    static String solve(String n){
        String val = getMin(n) +" "+ getMax(n);
        return val;
    }
    static String getMin(String n){
        String valMin = n;
        int[] ind = new int[10];
        for(int i = 0; i < 10; i++){
            ind[i] = n.lastIndexOf(Character.forDigit(i, 10));
        }
        for(int i = 1; i < 10 ; i++){
            if(ind[i]==-1)
                continue;
            StringBuilder s = new StringBuilder(n);
            s.setCharAt(ind[i],n.charAt(0));
            s.setCharAt(0, n.charAt(ind[i]));
            valMin = s.toString();
            break;
        }

        return valMin;
    }
    static String getMax(String n){
        String valMax = n;
        int[] ind = new int[10];
        for(int i = 0; i < 10; i++){
            ind[i] = n.lastIndexOf(Character.forDigit(i , 10));
        }
        for(int i = 9; i >0 ; i--){
            if(ind[i]==-1)
                continue;
            StringBuilder s = new StringBuilder(n);
            s.setCharAt(ind[i],n.charAt(0));
            s.setCharAt(0, n.charAt(ind[i]));
            valMax = s.toString();
            break;
        }
        return valMax;
    }
}
