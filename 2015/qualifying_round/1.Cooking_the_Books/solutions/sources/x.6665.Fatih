using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace HackerCup
{
    class Program
    {
        static void Main(string[] args)
        {
            Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture;
            int T = 0; //number of test cases
            StreamReader sr = new StreamReader("cooking_the_books.txt");
            StreamWriter sw = new StreamWriter("output.txt");
            sw.AutoFlush = true;

            String line = sr.ReadLine();
            T = int.Parse(line);

            for (int i = 0; i < T; i++)
            {
                line = sr.ReadLine();
                int N = int.Parse(line);
                if(N <= 10)
                {
                    sw.WriteLine("Case #" + (i + 1) + ": " + N + " " + N);
                }
                else
                {
                    int[] arraySmall = IntToArray(N);
                    int[] arrayBig = IntToArray(N);
                    bool isReplaced = false;
                    for (int j = 0; j < arraySmall.Length; j++)
                    {
                        int change = 0;
                        int temp = 0;
                        int start = arraySmall[j];
                        for (int k = j + 1; k < arraySmall.Length; k++)
                        {
                            if (arraySmall[j] > arraySmall[k])
                            {
                                temp = arraySmall[j];
                                arraySmall[j] = arraySmall[k];
                                change = k;
                                isReplaced = true;

                            }
                        }
                        if (isReplaced)
                        {
                            arraySmall[change] = start;
                            break;
                        }
                    }
                    int S = ArrayToInt(arraySmall);

                    isReplaced = false;
                    for (int j = 0; j < arrayBig.Length; j++)
                    {
                        int change = 0;
                        int temp = 0;
                        int start = arrayBig[j];
                        for (int k = j + 1; k < arrayBig.Length; k++)
                        {
                            if (arrayBig[j] < arrayBig[k])
                            {
                                temp = arrayBig[j];
                                arrayBig[j] = arrayBig[k];
                                change = k;
                                isReplaced = true;
                            }
                        }
                        if (isReplaced)
                        {
                            arrayBig[change] = start;
                            break;
                        }
                    }
                    int B = ArrayToInt(arrayBig);
                    sw.WriteLine("Case #" + (i + 1) + ": " + S + " " + B);
                }
            }
        }

        public static int GetSmallestDigit(int N)
        {
            int smallest = 10;
            while (N > 0)
            {
                if (N % 10 < smallest)
                    smallest = N % 10;
                N = N / 10;
            }
            return smallest;
        }

        public static int[] IntToArray(int N)
        {
            List<int> list = new List<int>();
            while (N > 0)
            {
                list.Add(N % 10);
                N = N / 10;
            }
            list.Reverse();
            return list.ToArray();
        }

        public static int ArrayToInt(int[] array)
        {
            int N = 0;
            for (int i = 0; i < array.Length; i++)
            {
                N *= 10;
                N += array[i];
            }
            return N;
        }
    }

    
}
