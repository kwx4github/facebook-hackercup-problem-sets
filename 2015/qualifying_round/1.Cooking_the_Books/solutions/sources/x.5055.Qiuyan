//
//  main.cpp
//  easy_problem
//
//  Created by qylqy on 14-10-9.
//  Copyright (c) 2014å¹´ linqiuyan. All rights reserved.
//

#include <iostream>
#include <vector>
#include <list>
#include <string>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>
using namespace std;

string getMin(string n)
{
    int pos=0;
    for (int i=0; i<n.size(); i++)
    {
        if (n[i]<=n[pos] && n[i]!='0') pos = i;
    }
    if (pos != 0) swap(n[0], n[pos]);
    return n;
}
string getMax(string n)
{
    int pos=0;
    for (int i=0; i<n.size(); i++)
    {
        if (n[i]>=n[pos]) pos = i;
    }
    if (pos != 0) swap(n[0], n[pos]);
    return n;
}

int main()
{
    int T;
    string n;
    scanf ("%d", &T);
    for (int I=1; I<=T; I++)
    {
        cin >> n;
        printf ("Case #%d: ", I);
        cout << getMin(n) << " " << getMax(n) << endl;
    }
}
/*
 start = "hit"
 end = "cog"
 dict = ["hot","dot","dog","lot","log"]
 
 hit cog
 5 hot dot dog lot log
 
 a c
 3 a b c
 */