#include <algorithm>
#include <bitset>
#include <deque>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#define fst first
#define snd second
#define all(x) (x).begin(), (x).end()
#define clr( a , v ) memset( a , v , sizeof(a) )
#define pb push_back
#define mp make_pair
#define sz size()
#define FORN( i , s , n ) for( int i = s ; i < (int)(n) ; i++ )
#define FOR( i , n ) FORN( i , 0 , n )
#define FORIT(i,x) for( typeof x.begin() i = x.begin() ; i != x.end() ; i++ )
#define trace(x)    cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define read ios::sync_with_stdio(false)

using namespace std;

typedef long long int64;
typedef vector <int> vi;
typedef pair <int,int> ii;
typedef vector <string> vs;
typedef vector <ii> vii;



int MCD (int x,int y){
        return (y==0 ? x:MCD(y,x%y));
}
 
int MCM(int x ,int y){
        return (x*y/MCD(x,y));
}

int main() {
	int casos;
	cin>>casos;
	FOR(i,casos){
		string num;
		cin>>num;
		int posMin=-1;
		int posMax=-1;
		
		int camMin;
		int camMax;
		int camZ;
		int mini=10;
		int maxi=-1;
		int cant=0;
		
		
		FOR(i,num.size()){
			int aux=num[i]-'0';
			if(maxi<=aux){ maxi=aux; camMax=i;}
			if(mini>=aux && aux!=0) {mini=aux; camMin=i;}
			if(aux==0) {cant++; camZ=i;}
		}
		FOR(i,num.size()){
			if((num[i]-'0')<maxi && posMin==-1)	posMin=i;  
			if(cant==0 && (num[i]-'0')>mini && posMax==-1) posMax=i;
			if(cant!=0 && (num[i]-'0')>0 && i!=0 && posMax==-1) posMax=i;
		}
		
		string menor, mayor;
		menor=num;
		mayor=num;
		if(posMin!=-1  && (camMax>posMin) ){
			mayor[camMax]=mayor[posMin];
			mayor[posMin]=maxi+'0';
		}

		if(posMax!=-1 && cant==0 && (camMin>posMax) ){
			menor[camMin]=menor[posMax];
			menor[posMax]=mini+'0';	
		}

		if(posMax!=-1 && cant!=0 && camZ>posMax ){
			menor[camZ]=menor[posMax];
			menor[posMax]='0';	
		}
		
		cout<<"Case #" << i+1 << ": "<<menor<<" "<<mayor<<endl;
		
		
	}
	return 0;
}