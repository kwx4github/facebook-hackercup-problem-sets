#include <iostream>
#include<vector>
#include<algorithm>
#include<stdio.h>
#include <string>
using namespace std;

int main()
{
	int t;
	cin >> t;
	
	for (int i = 0; i < t; i++)
	{
		string n;
		cin >> n;
		if (n == "0")
			printf("Case #%d: 0 0\n", i+1);
		else
		{
			vector<int> arr(n.length());
			vector<int> arr2(n.length());
			for (int j = 0; j < n.length(); j++)
			{
				arr[j] = n[j]-48;
			}
			copy(arr.begin(), arr.end(), arr2.begin());
			/*sort(arr.begin(), arr.end());
			int j = 0;
			int k = 0;
			if (arr2[0] == 0)	j++;
			while (arr[k] == 0)
				k++;
			while (j < arr2.size() && k < arr.size() && arr2[j] == arr[k])
			{
				j++;
				k++;
			}*/

			int min_swap = 0;
			int max_swap = 0;
			for (int j = 0; j < arr.size()-1 && (min_swap==0 || max_swap==0); j++)
			{

				int m = arr[j];
				int m_index = j;
				int l = arr2[j];
				int l_index = j;
				for (int k = j + 1; k < arr.size(); k++)
				{
					if(arr[k]<m)
{
m=arr[k];
m_index=k;
}
					else if(arr2[k]>l)
{
l=arr2[k];
l_index=k;
}
				}
				if (min_swap==0 && m < arr[j] && !(m == 0 && j == 0))
				{
					int temp = arr[m_index];
					arr[m_index] = arr[j];
					arr[j] = temp;
min_swap=1;
				}

				if (max_swap == 0 && l > arr2[j])
				{
					int temp = arr2[l_index];
					arr2[l_index] = arr2[j];
					arr2[j] = temp;
max_swap=1;
				}

			}

			printf("Case #%d: ", i+1);

			for (int j = 0; j < arr.size(); j++)
				printf("%d", arr[j]);
			printf(" ");

			for (int j = 0; j < arr2.size(); j++)
				printf("%d", arr2[j]);
			printf("\n");
			
		}
	}
	return 0;
}