import java.io.File;
import java.io.FileNotFoundException;
import java.util.Formatter;
import java.util.Scanner;

public class CookingTheBooks 
{
	private static final String path = "input.txt";
	
	private static final String outputPath = "output.txt";
	
	private static Scanner fileInput;
	
	private static Formatter fileOutput;
	/**
	 * @param args
	 */
	public static void main(String[] args) 
	{
		try 
		{
			fileInput = new Scanner(new File(path));
			fileOutput = new Formatter(outputPath);
		} 
		catch (FileNotFoundException e) 
		{
			System.out.println("Cannot find file \"input\" in same directory");
			System.exit(0);
		}
		
		int numberOfNumbers = Integer.parseInt(fileInput.nextLine());
		String number;
		int maxDigit;
		int minDigit;
		int minPosition;
		int maxPosition;
		int digit;
		int minNumber,maxNumber;
		char firstDigit;
		char[] numberArray;
		
		for(int counter = 0;counter < numberOfNumbers;counter++)
		{
			number = fileInput.nextLine();
			maxDigit = 0;
			minDigit = 9;
			minPosition = number.length();
			maxPosition = number.length();
			
			for(int i = 0;i < number.length();i++)
			{
				digit = number.charAt(i) - 48;
				
				if(maxDigit < digit)
				{
					maxDigit = digit;
					maxPosition = i;
				}
				
				if(minDigit > digit && digit != 0)
				{
					minDigit = digit;
					minPosition = i;
				}
			}
			
			firstDigit = number.charAt(0);
			numberArray = number.toCharArray();
			
			try
			{
			numberArray[0] = numberArray[minPosition];
			numberArray[minPosition] = firstDigit;
			}
			catch(Exception e){}
			minNumber = Integer.parseInt(new String(numberArray));
						
			numberArray = number.toCharArray();
			try
			{
			numberArray[0] = numberArray[maxPosition];
			numberArray[maxPosition] = firstDigit;
			}
			catch(Exception e){}
			maxNumber = Integer.parseInt(new String(numberArray));			
			
			fileOutput.format("Case #%d: %d %d\n", counter + 1, minNumber, maxNumber);
		}
		
		fileOutput.close();
		fileInput.close();
	}

}
