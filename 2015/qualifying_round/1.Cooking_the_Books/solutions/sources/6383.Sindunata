#include <cstring>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <fstream>
#include <iostream>
#include <sstream>
#include <cmath>
#include <cctype>
#include <iomanip>
#include <queue>
#include <ctime>
#include <assert.h>
using namespace std;

#define D(x) cerr << x << endl;
//#undef D
//#define D(x)

#ifdef _WIN32
    #define LL _int64
#else
    #define LL long long
#endif



int main()
{
	clock_t start, finish;
	start = clock();

    ifstream inp("Cooking.in");
    ofstream outp("Cooking.out");

	/////////////////////////////////////

    int t;
    inp >> t;

    for (int i = 0; i < t; i++) {
        string n;
        inp >> n;
		int nn = atoi(n.c_str());
		int bestl = nn;
		int besth = nn;
        for (int j = 0; j < n.length(); j++) {
            for (int k = j + 1; k < n.length(); k++) {
				string ns = n;
				ns.replace(j, 1, 1, n[k]);
				ns.replace(k, 1, 1, n[j]);
				if (ns[0] != '0') {
					int num = atoi(ns.c_str());
					bestl = min(bestl, num);
					besth = max(besth, num);
				}
            }
        }
		outp << "Case #" << i+1 << ": " << bestl << " " << besth << endl;
    }


	/////////////////////////////////////

    inp.close();
    outp.close();

	finish = clock();
	double duration = (double)(finish - start) / CLOCKS_PER_SEC;
	D("Duration: " << duration << endl);

    return 0;
}
