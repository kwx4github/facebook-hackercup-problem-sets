#!/usr/bin/python
import os
import sys


def get_Min_and_Pos(ls, non_zero):
    minim = 10 
    minpos = -1
    for i in range(0,len(ls)):
        if ls[i] <= minim:
            if non_zero == True:
                if ls[i] != 0:
                    minim = ls[i]
                    minpos = i
            else:
                minim = ls[i]
                minpos = i
    return (minim, minpos)
# returns the min as a list of digits
def findMin(ls):
    for i in range(0,len(ls)-1):
        if i == 0:
            mi,mipos = get_Min_and_Pos(ls[(i+1):],True)
        else:
            mi,mipos = get_Min_and_Pos(ls[(i+1):],False)
        mipos += i+1
        if mipos > 0:
            if mi < ls[i]:
                #pythonesque swap
                ls[i],ls[mipos] = ls[mipos],ls[i]
                return ls
    return ls

def main():

    if len(sys.argv) > 1:
        filename = sys.argv[1]
        if os.path.isfile(filename):
            sys.stdin = open(filename)
            sys.stdout = open(filename.split('.')[0]+'.out','w')

    for _t in range(1,int(raw_input())+1):
            n = raw_input()
            if int(n) < 10:
                print("Case #%d: %s %s" % (_t,n,n))
            else:
                # find min number
                minim = findMin(map(int,n))
                minim = ''.join(map(str,minim))

                # find max number
                maxim = findMin(map(lambda x: (-1)*x, map(int,n)))
                maxim = map(lambda x: (-1)*x, maxim)
                maxim =  ''.join(map(str,maxim))

                print("Case #%d: %s %s" % (_t,minim,maxim))
           
if __name__ == '__main__':
    main()

