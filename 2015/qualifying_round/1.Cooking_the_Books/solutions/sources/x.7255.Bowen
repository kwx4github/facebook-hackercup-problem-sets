
fr = open('cooking_the_books.txt', 'r')
fw = open('output.txt','w')

def greatest(number): 
	greatestNum = 0
	index = 0
	tmpI = 0
	first = 0
	size = 0
	for x in number:
		if tmpI == 0:
			tmpI += 1
			first = x
			size += 1
		else:
			
			tmp = int(x)
		
			if tmp > greatestNum:
				greatestNum = tmp
				index = tmpI
			size += 1
			tmpI += 1

	if int(first) < int(greatestNum):
		return greatestNum, index, size, True
	else:
		return greatestNum, index, size, False

def smallest(number):
	lowestNum = 10
	index = 0
	tmpI = 0
	first = 0
	size = 0
	for x in number:
		if tmpI == 0:
			tmpI += 1
			size += 1
			first = int(x)
		else:
			tmp = int(x)
			if tmp < lowestNum:
				lowestNum = tmp
				index = tmpI
			size += 1
			tmpI += 1
	if int(first) > int(lowestNum) and int(lowestNum) != 0:
		return lowestNum,index, size, True
	else:
		return lowestNum,index, size,False
totalNumber = fr.readline()

totalNumber = int(totalNumber)
ind = 0
while ind < totalNumber:

	number = 0
	number = fr.readline()
	number = number[:-1]
	number1 = number
	(loc, spot, size, check) = greatest(number)
	(locS, spotS, sizeS, checkS) = smallest(number1)
	resultL = list(number)
	resultS = list(number1)

	if size < 2:
		pass
	else:
		if checkS:
			tmp1 = resultS[0]
			resultS[0] = str(locS)
			resultS[spotS] = tmp1
		else:

			tmp1 = resultS[1]
			resultS[1] = str(locS)
			resultS[spotS] = tmp1
	#prints the largest number

	resultS = ''.join(resultS)
	if size < 2:
		pass
	else:
		if check:
			tmp = resultL[0]
			resultL[0] = str(loc)
			resultL[spot] = tmp

		else:
			tmp = resultL[1]
			resultL[1] = str(loc)
			resultL[spot] = tmp

	resultL = ''.join(resultL)
	prin = ind + 1
	fw.write("Case #" + str(prin) + " " +resultS + " " + resultL +'\n')
	ind += 1

fr.close()
fw.close()