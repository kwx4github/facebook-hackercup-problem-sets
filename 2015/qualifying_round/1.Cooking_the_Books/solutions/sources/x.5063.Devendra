#include<iostream>
#include<string.h>
#include <stdlib.h>
#include <fstream>

using namespace std;

long long getSmallest(char A[], int n)
{
    char B[15];
    memcpy(B,A,15*sizeof(char));
    int i = 0;
    int min = B[0];
    int minj = 0;
    for(int j = 1; j < n; ++j)
    {
        if(B[j] < min && B[j] != '0')
        {
            min = B[j];
            minj = j;
        }
    }
    while(i < n-1)
    {
        if(B[i] != min)
        {
            B[minj] = B[i];
            B[i] = min;
            break;
        }
        else
        {
            ++i;
            if(i < n-1)
            {
                min = B[i];
                minj = i;
                for(int j = i+1; j < n; ++j)
                {
                    if(B[j] < min)
                    {
                        min = B[j];
                        minj = j;
                    }
                }
            }
        }
    }
    long long num = 0;
    for(int i = 0; i < n; ++i)
    {
        num *= (long long)10;
        num += (long long)(B[i]-'0');
    }
    return num;
}

long long getBiggest(char A[], int n)
{
    char B[15];
    memcpy(B,A,15*sizeof(char));
    int i = 0;
    int max = B[0];
    int maxj = 0;
    for(int j = 1; j < n; ++j)
    {
        if(B[j] > max)
        {
            max = B[j];
            maxj = j;
        }
    }
    while(i < n-1)
    {
        if(B[i] != max)
        {
            B[maxj] = B[i];
            B[i] = max;
            break;
        }
        else
        {
            ++i;
            if(i < n-1)
            {
                max = B[i];
                maxj = i;
                for(int j = i+1; j < n; ++j)
                {
                    if(B[j] < max)
                    {
                        max = B[j];
                        maxj = j;
                    }
                }
            }
        }
    }
    long long num = 0;
    for(int i = 0; i < n; ++i)
    {
        num *= (long long)10;
        num += (long long)(B[i]-'0');
    }
    return num;
}

int main()
{
    std::ifstream in("cooking_the_books.txt");
    std::streambuf *cinbuf = std::cin.rdbuf(); //save old buf
    std::cin.rdbuf(in.rdbuf()); //redirect std::cin to in.txt!

    std::ofstream out("out.txt");
    std::streambuf *coutbuf = std::cout.rdbuf(); //save old buf
    std::cout.rdbuf(out.rdbuf());

    int t;
    char A[15];
    cin>>t;
    for(int i = 0; i < t; ++i)
    {
        cin>>A;
        int n = strlen(A);
        if(i>0)
            cout<<endl;
        cout<<"Case #"<<(i+1)<<": ";
        cout<<getSmallest(A,n)<<" ";
        cout<<getBiggest(A,n);
    }
}
