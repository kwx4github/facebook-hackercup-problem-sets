#!/usr/bin/env python
# -*- coding: utf-8 -*-

def secsmall(a):
	temp = a[:]
	temp = filter(lambda i: i != 0, temp)
	return min(temp)
def findm(a, x):
	f = 0
	for i in range(len(a)):
		if a[i] == x: f = i
	return f

def swap(ar, i, j):
	a = ar[:]
	a[i], a[j] = a[j], a[i]
	return a

def solve(num):
	num = map(int, list(num))
	j = 0
	l = len(num)
	minimum = num[:]
	maximum = num[:]
	while j < l:
		tmp = min(num[j:])
		if num[j] == tmp:
			j += 1
		else:
			if j == 0 and tmp == 0:
				x = secsmall(minimum)
				if x == minimum[j]: j += 1; continue
				else: minimum = swap(minimum, findm(minimum, x), j); break
			minimum = swap(minimum, findm(minimum, tmp), j)
			break
	j = 0
	while j < l:
		tmp = max(num[j:])
		if num[j] == tmp:
			j += 1
		else:
			maximum = swap(maximum, findm(maximum, tmp), j)
			break
	maximum = "".join(str(x) for x in maximum)
	minimum = "".join(str(x) for x in minimum)
	return minimum + ' ' + maximum

if __name__ == "__main__":
        testcases = input()
        for case in xrange(1, testcases+1):
                quest = raw_input()
                print "Case #%i: %s" % (case, solve(quest))
