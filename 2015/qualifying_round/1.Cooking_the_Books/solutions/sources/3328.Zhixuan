import java.io.InputStreamReader;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.FileInputStream;
import java.util.StringTokenizer;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 * @author Zhixuna Jia
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream;
		try {
			inputStream = new FileInputStream("cooking_the_books.in");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("cooking_the_books.out");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Cooking_the_books solver = new Cooking_the_books();
		int testCount = Integer.parseInt(in.next());
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}
}

class Cooking_the_books {
    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int N = in.nextInt();

        String s = Integer.toString(N);
        char[] A = s.toCharArray();

        int min = N, max = N;

        for (int i = 0; i < A.length; i++) {
            for (int j = i+1; j < A.length; j++) {
                swap(A, i, j);
                String s1 = new String(A);
                int result = Integer.parseInt(s1);
                if (i != 0 || A[i] != '0') {
                    min = Math.min(min, result);
                    max = Math.max(max, result);
                }
                swap(A, i, j);
            }
        }
        out.println("Case #" + testNumber + ": " + Integer.toString(min) + " " + Integer.toString(max));
    }

    private void swap(char[] A, int i, int j) {
        char tmp = A[i];
        A[i] = A[j];
        A[j] = tmp;
    }
}

class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream));
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

}

