import java.io.InputStream;
import java.io.PrintStream;
import java.util.Scanner;

public class CookingTheBooks {

  private InputStream input;
  private PrintStream output;
  private Scanner inputSc;

  public CookingTheBooks(InputStream input, PrintStream output) {
    this.input = input;
    this.output = output;
    init();
  }

  private void init() {
    inputSc = new Scanner(input);
  }

  static int lineToInt(String line) {
    return Integer.parseInt(line);
  }

  public void solve() {
    int testCaseCount = lineToInt(inputSc.nextLine());
    for (int testN = 1; testN <= testCaseCount; testN++) {
      solveTestCase(testN);
    }
  }

  String min(char[] a) {
    int minIndex = 0;
    char minChar = a[0];
    for (int i = 1; i < a.length; i++) {
      if (a[i] != '0' && a[i] < minChar) {
	minChar = a[i];
	minIndex = i;
      }
    }
    a[minIndex] = a[0];
    a[0] = minChar;
    return new String(a);
  }

  String max(char[] a) {
    int maxIndex = 0;
    char maxChar = a[0];
    for (int i = 1; i < a.length; i++) {
      if (a[i] > maxChar) {
	maxChar = a[i];
	maxIndex = i;
      }
    }
    a[maxIndex] = a[0];
    a[0] = maxChar;
    return new String(a);
  }

  private void solveTestCase(int testN) {
    String num = inputSc.next().trim();
    output.println("Case #" + testN + ": " + min(num.toCharArray()) + " "
	+ max(num.toCharArray()));
  }

  public static void main(String[] args) {
    CookingTheBooks ctb = new CookingTheBooks(System.in, System.out);
    ctb.solve();
  }
}
