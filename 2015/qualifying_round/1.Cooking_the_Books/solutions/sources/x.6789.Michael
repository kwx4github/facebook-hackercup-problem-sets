#include <stdio.h>
#include <string.h>

void sort_number(char number[10], int number_pos[10], int number_len) {
	int i, j, k;
	//j: number pos, i: compare pos, k: copy backward

	number_pos[0] = 0;
	for (j=1; j<number_len; ++j) {
		for (i=0; i<j; ++i) {
			if (number[j] > number[number_pos[i]]) {
				//move backward + place j at i
				for (k=j; k>i; --k) {
					number_pos[k] = number_pos[k-1];
				}
				number_pos[i] = j;
				break;
			}
		}
		//can't find match
		if (i==j) {
			number_pos[j] = j;
		}
	}
}

void swap(char *a, char *b) {
	char tmp;
	tmp = *a;
	*a  = *b;
	*b = tmp;
}

void main(void) {
	int t, i, j, number_len, number_pos[10];
	char number[10], tmp;
	// t: number of numbers, i: number pos, j: find max pos

	scanf("%i", &t);
	for (i = 0; i<t; ++i) {
		scanf("%s", &number);
		number_len = strlen(number);
		sort_number(number, number_pos, number_len);
		
		//output
		printf("Case #%i: ", i+1);
		//min
		for (j=0; j<number_len; ++j) {
			if (number_pos[number_len-1-j] != j &&
					!(number[number_pos[number_len-1-j]] == '0' &&
						j == 0) &&
					!(number[j] == '0' &&
						number_pos[number_len-1-j] == 0)) {
				swap(number + number_pos[number_len-1-j], number + j);
				printf("%s ", number);
				swap(number + number_pos[number_len-1-j], number + j);
				break;
			}
		}
		if (j==number_len)
			printf("%s ", number);
		//max
		for (j=0; j<number_len; ++j) {
			if (number_pos[j] != j) {
				swap(number + number_pos[j], number + j);
				printf("%s\n", number);
				swap(number + number_pos[j], number + j);
				break;
			}
		}
		if (j==number_len)
			printf("%s\n", number);
	}
}
