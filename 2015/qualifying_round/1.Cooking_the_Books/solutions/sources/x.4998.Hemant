import java.io.File;
import java.io.FileNotFoundException;
import java.util.Formatter;
import java.util.Scanner;


public class Sol {

	public static void main(String args[]) throws FileNotFoundException{
		Scanner scanner = new Scanner(new File("input"));
		Formatter formatter = new Formatter("output");
		formatter.flush();
		int total = scanner.nextInt();
		int number , counts= 1;
		int tempMin, tempMax;
		while(total>=counts){
			number = scanner.nextInt();
			tempMin = getMin(number);
			tempMax = getMax(number);
			formatter.format("Case #%d: %d %d\n", counts++,tempMin,tempMax);
		}
		formatter.close();
		scanner.close();
	}

	private static int getMax(int number) {
		int length = String.valueOf(number).length();
		int array[] = new int[length];
		
		int tempNumber = number;
		for(int i=0;i<length;i++){
			array[i] = tempNumber%10;
			tempNumber = tempNumber/10;
		}
		
		for(int i=length -1,maxIndex ;i>=0;i--){
			maxIndex = findMaxIndex(number,i);
			if(array[i]<array[maxIndex]){
				int temp = array[i];
				array[i] = array[maxIndex];
				array[maxIndex] = temp;
				break;
			}else{
				boolean found = false; 
				for(int j=i-1;j>maxIndex;j--){
					if(array[j]<array[maxIndex]){
						int temp = array[j];
						array[j] = array[maxIndex];
						array[maxIndex] = temp;
						found = true;
						break;
					}
				}
				if(found)
					break;
			}
			
		}
		number = 0;
		for(int i=length-1;i>=0;i--){
			number = number*10 + array[i];
		}
		
		return number;
	}

	private static int findMaxIndex(int number,int startingIndex) {
		int max = -1;
		int index = 0;
		for(int i =0;i<startingIndex;i++){
			if(number%10>max){
				max = number%10;
				index = i;
			}
			number /= 10;
		}
		return index;
	}

	private static int getMin(int number) {
		int length = String.valueOf(number).length();
		int array[] = new int[length];
		
		int tempNumber = number;
		for(int i=0;i<length;i++){
			array[i] = tempNumber%10;
			tempNumber = tempNumber/10;
		}
		
		for(int i=length -1,minIndex ;i>=0;i--){
			minIndex = findMinIndex(number,i,(i!=length-1));
			if(minIndex==-1)
				continue;
			if(array[i]>array[minIndex]){
				int temp = array[i];
				array[i] = array[minIndex];
				array[minIndex] = temp;
				break;
			}else{
				boolean found = false; 
				for(int j=i-1;j>minIndex;j--){
					if(array[j]>array[minIndex]){
						int temp = array[j];
						array[j] = array[minIndex];
						array[minIndex] = temp;
						found = true;
						break;
					}
				}
				if(found)
					break;
			}
			
		}
		number = 0;
		for(int i=length-1;i>=0;i--){
			number = number*10 + array[i];
		}
		
		return number;
		}

	private static int findMinIndex(int number, int startingIndex, boolean zeroAllowed) {
		int min = 10;
		int index = -1;
		for(int i =0;i<startingIndex;i++){
			if(number%10<min){
				if(zeroAllowed){
					min = number%10;
					index = i;
				}else if(number%10!=0){
					min = number%10;
					index = i;
				}
			}
			number /= 10;
		}
		return index;
	}
}
