import java.io.*;
import java.util.*;

public class CookingTheBooks {
    public static void main(String[] args) throws IOException {
        BufferedReader r = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        int t = Integer.parseInt(r.readLine());
        int n;
        String availableLetters;
        for (int i = 1; i <= t; i++) {
            n = Integer.parseInt(r.readLine());
            pw.println("Case #" + i + ": " + findSmallest(n) + " "
                    + findLargest(n));
        }
        pw.flush();
    }

    private static int findLargest(int n) {
        int result = n;
        String s = Integer.toString(n);
        for (int i = 0; i < s.length(); i++) {
            for (int j = i + 1; j < s.length(); j++) {
                char[] cc = s.toCharArray();
                char tmp = cc[i];
                cc[i] = cc[j];
                cc[j] = tmp;
                if (cc[0] == '0') {
                    continue;
                }
                int m = Integer.parseInt(new String(cc));
                result = Math.max(result, m);
            }
        }
        return result;
    }

    private static int findSmallest(int n) {
        int result = n;
        String s = Integer.toString(n);
        for (int i = 0; i < s.length(); i++) {
            for (int j = i + 1; j < s.length(); j++) {
                char[] cc = s.toCharArray();
                char tmp = cc[i];
                cc[i] = cc[j];
                cc[j] = tmp;
                if (cc[0] == '0') {
                    continue;
                }
                int m = Integer.parseInt(new String(cc));
                result = Math.min(result, m);
            }
        }
        return result;
    }

}
