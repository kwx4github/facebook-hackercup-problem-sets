#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <algorithm>

//Cooking the Books15 points problem.

using namespace std;

int findLargestDigitIndex(string num)
{
    int index = 0;
    for (int i = 1; i < num.size(); i++)
        if (num[i] > num[index])
            index = i;

    return index;
}

int findSmallestDigitIndex(string num)
{
    int index = 0;
    for (int i = 1; i < num.size(); i++)
        if (num[i] < num[index])
            index = i;

    return index;
}

string maxNumsFromIntegers(string integers)
{
	int largestIndex = findLargestDigitIndex(integers);
	if((integers[largestIndex]!='0'))
	{
		swap(integers[0],integers[largestIndex]);
	}

	return integers;
}

string minNumsFromIntegers(string integers)
{
	int smallestIndex = findSmallestDigitIndex(integers);
	if((integers[smallestIndex]!='0'))
	{
		swap(integers[0],integers[smallestIndex]);
	}

	return integers;
}

int main()
{

	int i;
	vector<string> integers;
	vector<string> max_integers;
	vector<string> min_integers;

	ofstream outfile;
	outfile.open ("output.txt");

	char *inname = "numbers.txt";
	ifstream infile(inname);
	if (!infile)
	{
		cout << "There was a problem opening file " << inname << " for reading." << endl;
		return 0;
	} 
	//cout << "Opened " << inname << " for reading." << endl;
	while (infile >> i)
	{
		string s;
		stringstream out;
		out << i;
		s = out.str();

		integers.push_back(s);
		//cout << "Value from file is " << i << endl;
	}

	for(int i = 0 ; i < integers.size() ; i++)
	{
		max_integers.push_back(maxNumsFromIntegers(integers[i]));
	}
	for(int i = 0 ; i < integers.size() ; i++)
	{
		min_integers.push_back(minNumsFromIntegers(integers[i]));
	}

	for(int i = 0 ; i < integers.size() ; i++)
	{

		outfile << "Case #" << i+1 << ": " << min_integers[i] << " " << max_integers[i] << endl;

		//cout << max_integers[i] << endl;
	}

	outfile.close();

	system("PAUSE");
	return 0;
}