#include <iostream>
#include <stdio.h>
using namespace std;

long long pow10[10];
int digits[10];
int ndigits;
int N;

//j>i
int swap(int i, int j){
	if(ndigits-1 == j && digits[i]==0) //cannot be swapped
		return N;
	return ((long long)N - ((pow10[i] * digits[i]) + (pow10[j] * digits[j])))
		+ ((pow10[i] * digits[j]) + (pow10[j] * digits[i]));
}
	
int main(){
	int T;
	cin>>T;
	pow10[0] = 1;
	for(int i=1; i<10; i++)
		pow10[i] = pow10[i-1] * 10;
	
	for(int tt=1; tt<=T; tt++){
		printf("Case #%d: ", tt);
		cin>>N;
		int smallest=N, largest=N;
		ndigits = 0;
		int tN = N;
		while(tN>0){
			digits[ndigits] = tN%10;
			tN /= 10;
			ndigits++;
		}
		for(int i=0; i<ndigits; i++){
			for(int j=i+1; j<ndigits; j++){
				smallest = min(smallest, swap(i, j));
				largest = max(largest, swap(i, j));
			}
		}
		printf("%d %d\n", smallest, largest);
	}
	return 0;
}
