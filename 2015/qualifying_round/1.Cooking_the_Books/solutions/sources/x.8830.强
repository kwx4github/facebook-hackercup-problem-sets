 
/**
 * @file 1.cpp
 * @author liaoqiang01
 * @date 2015/01/09 11:10:20
 * @brief 
 *  
 **/

#include <stdio.h>
#include <stdlib.h>

#define MAX_DIGIT_ARRAY_LEN 10

int get_digit_array( int N, int *digit_array) {
    int tmp = N;
    int index = 0;
    while (tmp) {
        if (index >= MAX_DIGIT_ARRAY_LEN) {
            return -1;
        }

        digit_array[index++] = tmp % 10;
        tmp = tmp / 10;
    }

    if (index == 0) {
        digit_array[index++] = 0;
    }

    return index;
}

int swap_with_max_num(int *digit_array, int n_digit_len) {
    int max_digit_value = -1;
    int max_offset = 0;
    for (int i = 0; i < n_digit_len; ++i) {
        if (digit_array[i] > max_digit_value) {
            max_digit_value = digit_array[i];
            max_offset = i;
        }
    }

    if (max_digit_value > digit_array[n_digit_len - 1]) {
        int tmp = digit_array[n_digit_len -1];
        digit_array[n_digit_len - 1] = max_digit_value;
        digit_array[max_offset] = tmp;
    }

    int max_value = 0;
    int current_base = 1;
    for (int i = 0; i < n_digit_len; ++i) {
        max_value += current_base * digit_array[i];
        current_base *= 10;
    }

    return max_value;
}

int swap_with_min_num(int *digit_array, int n_digit_len) {
    int min_digit_value = 10;
    int min_offset = 0;
    for (int i = 0; i < n_digit_len; ++i) {
        if (digit_array[i] < min_digit_value && digit_array[i] > 0) {
            min_digit_value = digit_array[i];
            min_offset = i;
        }
    }

    if (min_digit_value != 10 && min_digit_value != digit_array[n_digit_len - 1]) {
        int tmp = digit_array[n_digit_len -1];
        digit_array[n_digit_len - 1] = min_digit_value;
        digit_array[min_offset] = tmp;
    }

    int min_value = 0;
    int current_base = 1;
    for (int i = 0; i < n_digit_len; ++i) {
        min_value += current_base * digit_array[i];
        current_base *= 10;
    }

    return min_value;
}

int main() {
    int T;
    scanf("%d", &T);

    int index = 1;
    while (index <= T) {
        int N;
        scanf("%d", &N);
        int digit_array[MAX_DIGIT_ARRAY_LEN];
        int n_digit_len = get_digit_array(N, &digit_array[0]);
        int max_value = swap_with_max_num(&digit_array[0], n_digit_len);
        n_digit_len = get_digit_array(N, &digit_array[0]);
        int min_value = swap_with_min_num(&digit_array[0], n_digit_len);
        printf("Case #%d: %d %d\n", index, min_value, max_value);
        index++;
    }

    return 0;
}



















/* vim: set expandtab ts=4 sw=4 sts=4 tw=100: */
