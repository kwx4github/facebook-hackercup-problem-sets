import java.util.*;
import java.io.*;

public class CookBooks
{
	public static int n;
	public static void main(String[] args) throws IOException
	{
		BufferedReader f = new BufferedReader(new FileReader("cooking_the_books.txt"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("CookBooks.out")));
		n = Integer.parseInt(f.readLine()); 
		for (int i = 1; i <= n; i++)
		{
			String num = f.readLine();
			out.print("Case #" + i + ": ");
			
			//smallest #
			boolean check = true;
			int s = 0;
			while (check)
			{
				int x = Character.getNumericValue(num.charAt(s));
				int xI = s;
				for (int j = s + 1; j < num.length(); j++)
				{
					int y = Character.getNumericValue(num.charAt(j));
					if (y < x && !(y == 0 && s == 0))
					{
						x = y;
						xI = j;
						check = false;
					}
				}
				if (!check)
				{
					String z = swap(num, s, xI);
					out.print(z + " ");
				}
				else
				{
					if (s == num.length() - 1)
					{
						check = false;
						out.print(num + " ");
					}
					s++;
				}
			}
			
			//larger
			check = true;
			s = 0;
			while (check)
			{
				int x = Character.getNumericValue(num.charAt(s));
				int xI = s;
				for (int j = s + 1; j < num.length(); j++)
				{
					int y = Character.getNumericValue(num.charAt(j));
					if (y > x)
					{
						x = y;
						xI = j;
						check = false;
					}
				}
				if (!check)
				{
					String z = swap(num, s, xI);
					out.println(z);
				}
				else
				{
					if (s == num.length() - 1)
					{
						check = false;
						out.println(num);
					}
					s++;
				}
			}
		}
		out.close();
		System.exit(0);
	}
	
	public static String swap(String num, int s, int xI)
	{
		int first;
		int second;
		if (s < xI)
		{
			first = s;
			second = xI;
		}
		else
		{
			first  = xI;
			second = s;
		}
		String x = "";
		for (int i = 0; i < first; i++)
		{
			x += num.charAt(i);
		}
		x += num.charAt(second);
		for (int i = first + 1; i < second; i++)
		{
			x += num.charAt(i);
		}
		x += num.charAt(first);
		for (int i = second + 1; i < num.length(); i++)
		{
			x += num.charAt(i);
		}
		return x;
	}
}