#include <bits/stdc++.h>
using namespace std;

int get10th(int n) {
	int result = 1;
	for(int i = 0; i < n; ++i) {
		result *= 10;
	}
	return result;
}

int toNum(int num[], int len) {
	int res = 0;
	for(int i = 0; i < len; ++i) {
		res += num[i] * get10th(i);
	}
	return res;
}

int findLargestInd(int ind, int num[]) {
	int largest = num[0];
	int largestInd = 0;
	int toSwap = num[ind];
	for(int i = 0; i <= ind; ++i) {
		if(toSwap < num[i]) {
			if( num[i] > largest) {
				largestInd = i;
				largest = num[i];
			}
		} else {
			if( num[i] >= largest) {
				largestInd = i;
				largest = num[i];
			}
		}
	}
	return largestInd;
}

int findLowestInd(int ind, int num[], int len) {
	int lowest = num[ind];
	int lowestInd = ind;
	if(ind == len-1) {
		for(int i = 0; i <= ind; ++i) {
			if(num[i] != 0 && num[i] < lowest) {
				lowestInd = i;
				lowest = num[i];
			}
		}
	} else {
		for(int i = 0; i <= ind; ++i) {
			if(num[i] < lowest) {
				lowestInd = i;
				lowest = num[i];
			}
		}
	}
	return lowestInd;
}

int computeLargest(int num[], int len) {
	int largestInd = 0;
	int swapInd = len;
	int currentInd = len-1;
	do {
		largestInd = findLargestInd(currentInd, num);
		swapInd--;
		currentInd--;
	} while (len > 0 && largestInd == currentInd+1 && currentInd+1 > 0);
	if(currentInd > -1 ) {
		int temp = num[swapInd];
		num[swapInd] = num[largestInd];
		num[largestInd] = temp;
	}
	return toNum(num, len);
}

int computeLowest(int num[], int len) {
	int lowestInd = 0;
	int swapInd = len;
	int currentInd = len - 1;
	do {
		lowestInd = findLowestInd(currentInd, num, len);
		currentInd--;
		swapInd--;
	} while (len > 0 && lowestInd == currentInd+1 && currentInd >= 0);
	if(currentInd > -1) {
		int temp = num[swapInd];
		num[swapInd] = num[lowestInd];
		num[lowestInd] = temp;
	}
	return toNum(num, len);
}

int main(int argc, char** argv) {
	
	freopen("C:\\projects\\Hacker Cup 2015\\project1\\input.txt","r",stdin);
	freopen("C:\\projects\\Hacker Cup 2015\\project1\\output.txt","w",stdout);
	
	int totalCase;
	cin >> totalCase;
	
	for(int caseNum = 1; caseNum <= totalCase; ++caseNum) {
		int n;
		cin >> n;
		int length = 0;
		int num1[10];
		int num2[10];
		while(n > 0) {
			num1[length] = n % 10;
			num2[length++] = n % 10;
			n /= 10;
		}
		int low = computeLowest(num1, length);
		int high = computeLargest(num2, length);
		cout << "Case # " << caseNum << ": " << low << " " << high << endl;
	}
	
	return 0;
}
