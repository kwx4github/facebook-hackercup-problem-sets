#include <algorithm>
#include <iostream>
#include <cstring>
#include <complex>
#include <cassert>
#include <cstdlib>
#include <cstdio>
#include <bitset>
#include <vector>
#include <string>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <map>
#include <set>

#define all(x) (x).begin(), (x).end()
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)

#ifdef KAZAR
    #define eprintf(...) fprintf(stderr,__VA_ARGS__)
#else
    #define eprintf(...) 0
#endif

using namespace std;

template<class T> inline void umax(T &a,T b){if(a<b) a = b ; }
template<class T> inline void umin(T &a,T b){if(a>b) a = b ; }
template<class T> inline T abs(T a){return a>0 ? a : -a;}
template<class T> inline T gcd(T a,T b){return __gcd(a, b);}
template<class T> inline T lcm(T a,T b){return a/gcd(a,b)*b;}

typedef long long ll;
typedef pair<int, int> ii;

const int inf = 1e9 + 143;
const ll longinf = 1e18 + 143;

inline int read(){int x;scanf(" %d",&x);return x;}

int val(string s){
    int res = 0;
    for(int i = 0; i < s.size(); i++){
        res *= 10;
        res += s[i] - '0';
    }
    return res;
}

void solve(){
    string s;
    cin >> s;
    if(val(s) == 0){
        puts("0 0");
        return;
    }
    int n = s.size();
    int lo = val(s), hi = val(s);
    for(int i = 0; i < n; i++){
        for(int j = i + 1; j < n; j++){
            string tmp = s;
            swap(tmp[i], tmp[j]);
            if(tmp[0] != '0'){
                umax(hi, val(tmp));
                umin(lo, val(tmp));
            }
        }
    }
    printf("%d %d\n", lo, hi);
}

int main(){

#ifdef KAZAR
    freopen("f.input","r",stdin);
    freopen("f.output","w",stdout);
    freopen("error","w",stderr);
#endif

    int t = read();

    for(int it = 1; it <= t; it++){
        printf("Case #%d: ", it);
        solve();
    }

    return 0;
}
