/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tweakingnumber;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

/**
 *
 * @author chetan
 */
public class TweakingNumber {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws FileNotFoundException {
        // TODO code application logic here
        
        Scanner scanner=new Scanner(new File("C:\\Users\\chetan\\Downloads\\cooking_the_books.txt"));
        int ntc=scanner.nextInt();
        scanner.nextLine();
        List<String> tcs=new ArrayList<String>();
        while(scanner.hasNext()){
          tcs.add(scanner.nextLine());
        }
        
        for (int i=0;i<tcs.size();i++) {
            System.out.println("Case #"+(i+1)+": "+processData(tcs.get(i), 0)+" "+processData(tcs.get(i), 1));
        }
        
    }
    
    
    public static boolean testZeroCondition(String n){
        
        Long l=new Long(n);
        if(l>0){
            return true;
        }
        return false;
    }
    
    
    public static String processData(String n,Integer condition){
        
        int pos;
        if(testZeroCondition(n)){
           pos=positionToSwap(n, condition);
           char temp=n.charAt(pos);
           StringBuilder sb=new StringBuilder(n);
           sb.setCharAt(pos, n.charAt(0));
           sb.setCharAt(0, temp);
           return sb.toString();
        }else{
            return "0";
        }
        
        
    }    
    public static Integer positionToSwap(String n, Integer condition){
        //1 for max 0 for min
        int temp=0;
        if(condition==1){
        
            temp=getmaxMinNum(n, 1);
             for(int i=n.length()-1;i>=0;i--){
                 if(new Integer(new Character(n.charAt(i)).toString())==temp){
                    return i;
            }
        }
            
            
        }else{
            temp=getmaxMinNum(n, 0);
            /* for(int i=0;i<n.length();i++){
                if(new Integer(new Character(n.charAt(i)).toString())==temp){
                     return i;
                }
            }*/
            
            //////
              for(int i=n.length()-1;i>=0;i--){
                 if(new Integer(new Character(n.charAt(i)).toString())==temp){
                    return i;
            }
        }
            //////
            
            
        }
        
        /////////////
       return null;
        
        
        
    }
    
    public static Integer getmaxMinNum(String n,Integer condition){
        //condition stands as 1 for max and 0 stands for min
        
        if(condition==1){
            int max=0;
            for(int i=0;i<n.length();i++){
                int temp=new Integer(new Character(n.charAt(i)).toString());
                if(temp>max && temp!=0 ){
                    max=temp;
                }
            }
            return max;
        }else {
            int min=10;
            for(int i=0;i<n.length();i++){
                int temp=new Integer(new Character(n.charAt(i)).toString());
                if(temp<min && temp!=0){
                    min=temp;
                }
            }
            return min;
        }
        
       
       
        
    }
    
}
