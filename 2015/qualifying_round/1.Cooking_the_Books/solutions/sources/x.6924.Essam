import acm.program.*;
import acm.*;
import acm.io.*;
import java.io.*;
import java.util.*;
import acm.util.*;
public class MainClass extends ConsoleProgram{
	/* global variables */
	int[] arrayofChars;
	int[] returnArray;
	public void run(){
		Integer T = Integer.valueOf(readT());
		String input;
		writeOutput();
		int caseVariable =0;
		for (int i =0; i<T; i++){
			//input = Integer.valueOf(readLine("please enter the number to be sorted"));
			input = inputArray[i];
			caseVariable = i + 1;
			returnArray = new int[input.length()];
			arrayofChars = new int[input.length()];		
			arrayofChars = stringToArrayofints(input);
			sortAscending( input.length());
			print("Case# " + caseVariable + ":  ");
			for(int counter = 0; counter<input.length(); counter++) print(returnArray[counter]);
			print(" ");
			for(int counter1 = input.length()-1; counter1>=0; counter1--) print(returnArray[counter1]);
			println();
			writeOutput();
			//output.println("number: "+ i);
			//output.println();

		}
		//output.close();
	}
	
	private void sortAscending( int arraylength){
		int comparePointVariable;
		int dummyX;
		int repeatedNumbers;
		int placeinNewArray = 0;
		int dummyRepeat = 0;
		
		for(int i = 0; i< arraylength; i++){
			dummyX = arrayofChars[i];
				comparePointVariable = compareintArray( arraylength,dummyX);
				placeinNewArray = arraylength-comparePointVariable-1;
				dummyRepeat = placeinNewArray;
				if(returnArray[placeinNewArray] == 0){
					returnArray[placeinNewArray] = dummyX;
				} else{
					repeatedNumbers = checkRepeatedNumber(dummyX,arraylength);
					for(int counter1 = 0; counter1<repeatedNumbers; counter1++){
						dummyRepeat --;
						returnArray[dummyRepeat] = dummyX;
					}
				}
		}
		
	}
	private int checkRepeatedNumber(int number, int arraylength){
		int returnNumber = 0;
		for(int i=0; i<arraylength; i++){
			if(number == arrayofChars[i]) returnNumber ++;
		}
		returnNumber--;
		return returnNumber;
	}
	/** returns the characters of a string in the form of array of ints */
	private int[] stringToArrayofints(String transferString){
		int[] stringofint = new int[transferString.length()];
		Integer dummyX;
		for(int i = 0; i<transferString.length(); i++){
			String charString = "";
			charString += transferString.charAt(i);
			dummyX = Integer.valueOf(charString);
			stringofint[i] = dummyX;
		}
		return stringofint;
	}
	private int compareintArray(int arraylength,int dummyX){
		int returnVariable = 0;
		for(int i= 0; i<arraylength; i++){
			if(dummyX > arrayofChars[i]) returnVariable ++;
			
		}
		return returnVariable;
	}
	public void writeOutput(){
		try{
			output = new PrintWriter(new BufferedWriter(new FileWriter("output.txt")));
			
		} catch(IOException ex){
			println(ex);
		}
	}
	private String readT(){
		String line ="";
		String fileName;
		Integer lineint;
		while(rd == null){
		try{
			//println("Reading from: " + new java.io.File( "file.txt" ).getAbsolutePath());
			
				fileName = readLine("Enter File Name: ");
				rd = new BufferedReader(new  FileReader(fileName));
				line = rd.readLine();
				lineint = Integer.valueOf(line);
				inputArray = new String[lineint];
				for(int i = 0; i<lineint; i++){
					inputArray[i] = rd.readLine();
					if(inputArray[i] == null);
			}
				
			rd.close();
			
		} catch (IOException ex){
			
			throw new ErrorException(ex);
		}
		}
		return line;
	}
	
	BufferedReader rd  = null;
	private String[] inputArray;
	PrintWriter output ;
}
