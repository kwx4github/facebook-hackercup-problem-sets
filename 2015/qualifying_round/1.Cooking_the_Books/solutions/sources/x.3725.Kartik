//includes
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <list>
#include <utility>
#include <algorithm>
#include <cassert>
#include <fstream>

using namespace std;

//typedefs
typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<long long> vll;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;

//defines-general
#define to(a) __typeof(a)
#define all(vec)  vec.begin(),vec.end()
#define fill(a,val)  memset(a,val,sizeof(a))

//defines-iteration
#define repi(i,a,b) for(__typeof(b) i = a;i<b;i++)
#define repii(i,a,b) for(__typeof(b) i = a;i<=b;i++)
#define repr(i,b,a) for(__typeof(b) i = b;i>a;i--)
#define repri(i,b,a) for(__typeof(b) i = b;i>=a;i--)
#define tr(vec,it)  for(__typeof(vec.begin())  it = vec.begin();it!=vec.end();++it)

//defines-pair
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

// my own
#define sl(a) scanf("%lld",&a)
#define sll(a,b) scanf("%lld%lld",&a,&b)
#define slll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define sllll(a,b,c,d) scanf("%lld%lld%lld%lld",&a,&b,&c,&d)
#define fastio   std::ios_base::sync_with_stdio(false)

bool myFunc(char a,char b)
{
    return (a>b);
}

void Adjust_Zero(string &L)
{
    int i=0;
    if(L.at(0)!='0')
        return;
    while(L.at(i)=='0')
    {
        i++;
    }
    char temp=L.at(0);
    L.at(0)=L.at(i);
    L.at(i)=temp;
}

void Get_Min(string &L)
{
    int i,index=-1;
    char val=L.at(0);
    char minval='a';
    //cout<<minval<<endl;
    repi(i,1,L.size())
    {
        if(L.at(i)<val && L.at(i)<minval && L.at(i)!='0')
            {
                minval=L.at(i);
                index=i;
                //cout<<index<<endl;
            }
    }

    if(index==-1)
        return;

    char temp=L.at(0);
    L.at(0)=minval;
    L.at(index)=temp;
}

void Get_Max(string &L)
{
    int i,index=-1;
    char val=L.at(0);
    char maxval=0;
    repi(i,1,L.size())
    {
        if(L.at(i)>val && L.at(i)>maxval && L.at(i)!='0')
            {
                maxval=L.at(i);
                index=i;
            }
    }

    if(index==-1)
        return;

    char temp=L.at(0);
    L.at(0)=maxval;
    L.at(index)=temp;
}


int main()
{
    fastio;
    ifstream infile;
    ofstream outfile;
    infile.open("input.txt");
    outfile.open("output.txt");
    int T,ctr=1;
    string N;
    string S,L;
    infile>>T;
    while(T--)
    {
        infile>>N;
        S=N;
        Get_Min(S);
        L=N;
        Get_Max(L);
        outfile<<"Case #"<<ctr<<": "<<S<<" "<<L<<endl;
        ctr++;
    }
}
