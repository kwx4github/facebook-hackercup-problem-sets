import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class CookingBooks {
    public static class InputReader {
        public BufferedReader reader;
        public StringTokenizer tokenizer;

        public InputReader(InputStream stream) {
            reader = new BufferedReader(new InputStreamReader(stream), 32768);
            tokenizer = null;
        }

        public String next() {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

    }

    public static void main(String[] args) throws IOException {
        InputReader reader = new InputReader(new FileInputStream("d:/downloads/cooking_the_books.txt"));
        int T = reader.nextInt();
        BufferedWriter bw = new BufferedWriter(new FileWriter("d:/downloads/output.txt"));
        for (int i = 1; i <= T; i++) {
            long num = reader.nextInt();
            long min = findMinSwap(num);
            long max = findMaxSwap(num);
            String resLine = "Case #" + i + ": " + min + " " + max + "\n";
            bw.write(resLine);
            System.out.print(resLine);
        }
        bw.close();
    }

    private static long findMinSwap(long num) {
        String st = "" + num;
        long min = num;
        for (int i = 0; i < st.length(); i++) {
            for (int j = i + 1; j < st.length(); j++) {
                String t = "";
                for (int k = 0; k < st.length(); k++) {
                    if (k == i) {
                        if (st.charAt(j) == '0') {
                            t = null;
                            break;
                        } else {
                            t += st.charAt(j);
                        }
                    } else if (k == j) {
                        t += st.charAt(i);
                    } else {
                        t += st.charAt(k);
                    }
                }
                if (t != null) {
                    min = Math.min(min, Long.parseLong(t));
                }
            }
        }
        return min;
    }

    private static long findMaxSwap(long num) {
        String st = "" + num;
        long max = num;
        for (int i = 0; i < st.length(); i++) {
            for (int j = i + 1; j < st.length(); j++) {
                String t = "";
                for (int k = 0; k < st.length(); k++) {
                    if (k == i) {
                        if (st.charAt(j) == '0') {
                            t = null;
                            break;
                        } else {
                            t += st.charAt(j);
                        }
                    } else if (k == j) {
                        t += st.charAt(i);
                    } else {
                        t += st.charAt(k);
                    }
                }
                if (t != null) {
                    max = Math.max(max, Long.parseLong(t));
                }
            }
        }
        return max;
    }

}
