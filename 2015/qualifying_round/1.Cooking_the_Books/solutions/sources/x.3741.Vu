//package cup.hacker.fb;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;

public class Cooking {
	private static BufferedReader br;
	private static PrintWriter pw;
	
	public static void main(String[] args) throws IOException {
		br = new BufferedReader(new InputStreamReader(new FileInputStream("input.txt")));
		pw = new PrintWriter(new FileOutputStream("output.txt"));
		
		final int MAX_NUM_CASE = Integer.parseInt(br.readLine());
		
		for (int i = 1; i <= MAX_NUM_CASE; i++) {
			pw.print("Case #" + i + ": ");
			
			String num = br.readLine();
			if (num.length() == 1) {
				pw.print(num + " " + num);
			} else if (num.length() == 2 && num.charAt(1) == '0') {
				pw.print(num + " " + num);
			} else {
				char[] arr = num.toCharArray();
				char[] orig = arr;
				int len = arr.length;
				char firstChar = orig[0];
				
				Arrays.sort(arr);
				char min = arr[0], max = arr[len-1];
				
				if (min != max) {
					if (min == '0') {
						// set a new min value
						for (int j = 0; j < len; j++) {
							if (arr[j] != '0') {
								min = arr[j];
								break;
							}
						}
					}
					
					StringBuilder sb = new StringBuilder(num);
					int minIndex = num.indexOf(min);
					sb.setCharAt(0, min);
					sb.setCharAt(minIndex, firstChar);
					
					pw.print(sb.toString());
					pw.print(" ");
					
					sb = new StringBuilder(num);
					int maxIndex = num.indexOf(max);
					sb.setCharAt(0, max);
					sb.setCharAt(maxIndex, firstChar);
					
					pw.print(sb.toString());
				} else {
					pw.print(num + " " + num);
				}
			}
			
			if (i != MAX_NUM_CASE) pw.println();
		}
		
		pw.close();
	}
}
