// Template {{{
#include <bits/stdc++.h>
#define REP(i,n) for(int i=0; i<(int)(n); ++i)
using namespace std;
typedef long long LL;

template<typename T1, typename T2>
ostream& operator << (ostream& os, const pair<T1, T2>& p) {
    os << "(" << p.first << ", " << p.second << ")";
    return os;
}

template<typename T>
ostream& operator << (ostream& os, const vector<T>& v) {
    os << "{";
    for(int i = 0; i < v.size(); i++)
        os << v[i] << (i+1<v.size()?", ":"");
    os << "}";
    return os;
}

const int dx[4] = {1, 0, -1, 0};
const int dy[4] = {0, 1, 0, -1};
inline bool valid(int x, int w) { return 0 <= x && x < w; }

void iostream_init() {
    ios::sync_with_stdio(false);
    cin.tie(0);
}
//}}}

int main(){
    iostream_init();
    int T;
    cin >> T;
    int casenum = 0;
    while(T--) {
        cout << "Case #" << ++casenum << ": ";
        string s;
        cin >> s;
        if(s.size() == 1) {
            cout << s << " " << s << endl;
            continue;
        }
        string min_s = s, max_s = s;
        REP(i, s.size()) REP(j, s.size()) {
            string t = s;
            swap(t[i], t[j]);
            if(t[0] == '0') continue;
            min_s = min(min_s, t);
            max_s = max(max_s, t);
        }
        cout << min_s << " " << max_s << endl;
    }
    return 0;
}

/* vim:set foldmethod=marker: */

