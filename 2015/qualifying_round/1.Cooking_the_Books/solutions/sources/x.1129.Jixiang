#include <algorithm>
#include <cmath>
#include <iostream>
#include <fstream>
#include <map>
#include <queue> // push, front, pop
#include <sstream>
#include <string>
#include <stack> // push, top, pop
#include <set>
#include <vector>
#include <list> // list.insert(it, data); data inserted before it..
#include <iomanip>
#include <stdio.h>

#define PI 3.14159265358979323846264338327950288
#define fill_(x,v) memset(x,v,sizeof(x))
#define min(x,y) (((x)>(y)) ? (y) :(x))
#define max(x,y) (((y)>(x)) ? (y) :(x))
#define Pi  3.1415926535
#define ll long long

using namespace std;

ifstream fin("c:\\tmp\\cooking_the_books.txt");
ofstream fout("c:\\tmp\\out.txt");


bool run() {
	string s;
	fin >> s;
		
	if (s == "0") {
		fout << "0 0"<< endl;
		return true;
	}
	int n = s.length();
	char lowc = s[0];
	char highc = s[0];
	int pl =0, ph = 0;
	for (int i = 0; i < n; i++) {
		if (s[i] <= lowc && s[i] != '0') {
			lowc = s[i];
			pl = i;
		}
		if (s[i] >= highc && s[i] != '0') {
			highc = s[i];
			ph = i;
		}
	}
	
	string out1 = s;
	out1[0] = lowc;
	out1[pl] = s[0];
	
	string out2 = s;
	out2[0] = highc;
	out2[ph] = s[0];
	
	fout<<out1 << " " <<out2<<endl; 
}

int main() {
	int N;
	fin >> N;
	//char inp[1000];
  //fin.getline(inp, 1000);
  
	for( int n = 1; n <= N; n++){
		fout<<"Case #"<<n<<": ";
		
		bool ret = run();
		//fout<<"Case #"<<n<<": "<<(ret? "YES" : "NO")<<endl;
		//printf("Case #%d: %d\n", n, ret);
		//cout<<"Case #"<<n<<": "<endl;
		//fout << fixed;
		//fout<<"Case #"<<n<<": "<<setprecision(10)<<ret<<endl;
   }
   return 0;
}
