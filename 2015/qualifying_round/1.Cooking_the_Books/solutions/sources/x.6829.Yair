#!/usr/local/bin/python

import collections
import sys
import os


def solve_largest(digits):
	ndigits = len(digits)
	if ndigits <= 1:
		return digits
	max_di = 0
	max_digit = int(digits[0])
	for di in xrange(1,len(digits)):
		cur = int(digits[di])
		if cur > max_digit:
			max_di = di
			max_digit = cur
	if max_di > 0:
		return digits[max_di] + digits[1:max_di] + digits[0] + digits[max_di+1:]
	return digits[0] + solve_largest(digits[1:])


def solve_smallest(digits,allow_zero = True):
	ndigits = len(digits)
	if ndigits <= 1:
		return digits
	min_di = 0
	min_digit = int(digits[0])
	for di in xrange(1,len(digits)):
		cur = int(digits[di])
		if (allow_zero or cur != 0) and cur <= min_digit:
			min_di = di
			min_digit = cur
	if min_di > 0:
		return digits[min_di] + digits[1:min_di] + digits[0] + digits[min_di+1:]
	return digits[0] + solve_smallest(digits[1:])

def swap(n,d1,d1pos,d2,d2pos):
	 return n + (d2-d1)*10**d1pos + (d1-d2)*10**d2pos

T = int(sys.stdin.readline().strip())
for i in xrange(0,T):
	N = sys.stdin.readline().strip()
	largest,smallest = solve_largest(N),solve_smallest(N,False)

	print "Case #%d: %s %s" % (i+1,smallest,largest)
