import java.util.Scanner;
import java.util.ArrayList;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Collections;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.FileWriter;

public class Squeeze {
	private ArrayList <Integer> stringfile;
	private ArrayList <String> newarray;
	public Squeeze () {
		stringfile = new ArrayList <Integer>();
		newarray = new ArrayList <String>();
	}
	public static void main (String [] args) {
		Squeeze remover = new Squeeze ();
		remover.getData();
		remover.printData();
		
	}
	public void getData() {
		Scanner fromfile = Squeeze.openToRead("squeeze.txt");
		while (fromfile.hasNext()) {
			addToList(Integer.parseInt(fromfile.nextLine()));
		}
		Collections.sort(stringfile);
		fromfile.close();
	}
	public void printData() {
		for (int x =stringfile.size() - 1; x >= 0; x--) {
			parseData(stringfile.get(x), x);
		}
		printFile();
	}
	public void addToList(int s){
	  if(!stringfile.contains(s))
	       stringfile.add(s);
	}
	public void parseData(int num, int index) {
		String arrnum = "" + num;
		int min = num;
		int max = num;
		for (int x = 0; x < arrnum.length(); x++) {
			for (int y = 0; y < arrnum.length(); y++) {
				char [] tempnum = arrnum.toCharArray();
				char temp = tempnum[y];
				tempnum[y] = tempnum[x];
				tempnum[x] = temp;
				int newnum = Integer.parseInt(convertToString(tempnum));
				if (newnum < min && tempnum[0] != '0')
					min = newnum;
				else if (newnum > max && tempnum[0] != '0')
					max = newnum;
			}
		}
		newarray.add("Case #" + (stringfile.size() - index) + ": " + min + " " + max);
	}

	public void printFile () {
		PrintWriter outfile = Squeeze.openToWrite("squeeze2.txt");
		outfile.print("\n\n");
		for (String line: newarray) {
			outfile.println(line);
		}
		outfile.println("\n\n");
		outfile.close();
	}
	public String convertToString(char[] array) {
		String char_string;
		String return_string="";
		int i;

		   for(i=0;i<array.length;i++)
		   {
		       char_string=Character.toString(array[i]);
		       return_string=return_string.concat(char_string);
		   }
		   return return_string;
	}

	public static Scanner openToRead(String filestring) {
		Scanner fromfile = null;
		File filename = new File(filestring);
		try {
			fromfile = new Scanner(filename);
		}
		catch (FileNotFoundException e){
			System.out.println("Sorry, " + filestring + ". cannot be found.");
			System.exit(1);
		}
		return fromfile;
	}
	
	public static PrintWriter openToWrite (String filestring) {
		PrintWriter outfile = null;
		try {
			outfile = new PrintWriter(filestring);
		}
		catch (Exception e) {
			System.out.println("Sorry, " + filestring + " cannot be found.");
			System.exit(1);
		}
		return outfile;
	}
}