using System;
using System.IO;

namespace FHC2015.Qualification
{
    class Program
    {
        static void Main(string[] args)
        {
            string line;
            short T = 0;

            StreamReader input = new StreamReader(@"c:\temp\input.txt");

            line = input.ReadLine();

            if (!string.IsNullOrEmpty(line))
            {
                T = Convert.ToInt16(line);
            }

            using (StreamWriter output = new StreamWriter(@"c:\temp\output.txt"))
            {
                for (int i = 0; i < T; i++)
                {
                    if ((line = input.ReadLine()) != null)
                    {
                        output.WriteLine(string.Format("Case #{0}: {1} {2}", i + 1, GetMin(line, line.Length), GetMax(line, line.Length)));
                    }
                }
            }
        }
        
        static string GetMin(string inp, int length)
        {
            short minNumber = Convert.ToInt16(Char.GetNumericValue(inp[0]));
            short currPos = 0;
            for (short i = 1; i < inp.Length; i++)
            {
                short currNumber = Convert.ToInt16(Char.GetNumericValue(inp[i]));
                if (((length == inp.Length && currNumber > 0) ||  length > inp.Length) && currNumber <= minNumber)
                {
                    minNumber = currNumber;
                    currPos = i;
                }
            }

            if (currPos > 0)
            {
                return minNumber.ToString() + inp.Substring(1, currPos - 1) + inp[0].ToString() + (currPos < inp.Length - 1 ? inp.Substring(currPos + 1, inp.Length - (currPos + 1)) : "");
            }

            return inp.Length > 1 ? minNumber.ToString() + GetMin(inp.Substring(1), length) : inp;
        }

        static string GetMax(string inp, int length)
        {
            short maxNumber = Convert.ToInt16(Char.GetNumericValue(inp[0]));
            short currPos = 0;
            for (short i = 1; i < inp.Length; i++)
            {
                short currNumber = Convert.ToInt16(Char.GetNumericValue(inp[i]));
                if (currNumber > maxNumber)
                {
                    maxNumber = currNumber;
                    currPos = i;
                }
            }

            if (currPos > 0)
            {
                return maxNumber.ToString() + inp.Substring(1, currPos - 1) + inp[0].ToString() + (currPos < inp.Length - 1 ? inp.Substring(currPos + 1, inp.Length - (currPos + 1)) : "");
            }

            return inp.Length > 1 ? maxNumber.ToString() + GetMax(inp.Substring(1), length) : inp;
        }
    }
}
