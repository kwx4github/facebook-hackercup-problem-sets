#include <iomanip>
#include <algorithm>
#include <iterator>     // std::insert_iterator
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <fstream>

using namespace std;
int str2num(string s) { int num; stringstream ss(s); ss >> num; return num; }
string num2str(int i) { stringstream ss; ss << i; return ss.str(); }

pair<int, int> solve(int number){
	int r1 = 999999999, r2 = 0;
	string num = num2str(number);
	for (int i = 0; i < num.size(); i++)
		for (int j = i; j < num.size(); j++){
			if (num[j] == '0' && j>i) continue;
			swap(num[i], num[j]);
			int new_num = str2num(num);
			swap(num[i], num[j]);
			if (new_num == 0 && number != 0) continue;
			r1 = min(r1, new_num);
			r2 = max(r2, new_num);
		}
	return make_pair(r1, r2);
}

int main(){
	ios_base::sync_with_stdio(false);
	ifstream in("A.in");
	ofstream out("result.txt");
	int T, N;
	in >> T;
	for (int i = 0; i < T; i++){
		in >> N;
		pair<int,int> ret = solve(N);
		out << "Case #" << i + 1 << ": " << ret.first << " " << ret.second << endl;
	}

}
