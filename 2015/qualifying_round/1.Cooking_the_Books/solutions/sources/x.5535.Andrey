import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;


public class Solution {

  private static String printDigits(int[] digits) {
    StringBuilder sb = new StringBuilder();
    for (int i : digits) {
      sb.append(i);
    }
    return sb.toString();
  }

  private static void swap(int[] a, int i, int j) {
    int t = a[i];
    a[i] = a[j];
    a[j] = t;
  }

  private static int[] getMin(int[] d) {
    int[] digits = new int[d.length];
    System.arraycopy(d, 0, digits, 0, d.length);
    int[] smallestToTheRight = new int[digits.length];
    int minIndex = digits.length - 1;
    for (int i = digits.length - 1; i >= 0; i--) {
      if (digits[i] == 0) {
        smallestToTheRight[i] = -1;
        continue;
      }
      if (digits[minIndex] == 0) {
        minIndex = i;
      }
      if (digits[i] > digits[minIndex]) {
        smallestToTheRight[i] = minIndex;
      } else {
        if (digits[i] < digits[minIndex]) {
          minIndex = i;
        }
        smallestToTheRight[i] = -1;
      }
    }
    for (int i = 0; i < digits.length; i++) {
      if (smallestToTheRight[i] != -1) {
        swap(digits, smallestToTheRight[i], i);
        break;
      }
    }
    return digits;
  }



  private static int[] getMax(int[] d) {
    int[] digits = new int[d.length];
    System.arraycopy(d, 0, digits, 0, d.length);

    int[] largestToTheRight = new int[digits.length];
    int maxIndex = digits.length - 1;
    for (int i = digits.length - 1; i >= 0; i--) {
      if (digits[i] < digits[maxIndex]) {
        largestToTheRight[i] = maxIndex;
      } else {
        maxIndex = i;
        largestToTheRight[i] = -1;
      }
    }
    for (int i = 0; i < digits.length; i++) {
      if (largestToTheRight[i] != -1) {
        swap(digits, largestToTheRight[i], i);
        break;
      }
    }
    return digits;
  }

  public static void main(String[] args) throws IOException {
    BufferedReader in = new BufferedReader(new FileReader(args[0]));
    int numberOfCases = Integer.parseInt(in.readLine());
    for (int i = 0; i < numberOfCases; i++) {
      String s = in.readLine();
      int[] digits = new int[s.length()];
      for (int d = 0; d < digits.length; d++) {
        digits[d] = Character.getNumericValue(s.charAt(d));
      }
      System.out.println("Case #" + (i + 1) + ": " + printDigits(getMin(digits)) + " "
          + printDigits(getMax(digits)));
    }

    in.close();


  }

}
