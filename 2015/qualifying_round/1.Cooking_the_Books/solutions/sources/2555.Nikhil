#include<iostream>
#include<algorithm>

using namespace std;

typedef long long ll;
int main()
{
int t;
cin>>t;
for(int i=1;i<=t;i++)
{
	ll n;
	cin>>n;
	cout<<"Case #"<<i<<": ";
	
	if(n<=10){
		cout<<n<<" "<<n<<endl;
		continue;
	}
	
	int num[11],n1[11],k=0,pos=0;
	ll y = n;
	while(y)
	{
		num[pos++] = y%10;y /= 10;
	}
	
	while(k<pos/2) // reverse
	{
		num[k] = (num[k]+num[pos-k-1])-(num[pos-k-1]=num[k]);
		n1[k]=num[k];
		n1[pos-k-1]=num[pos-k-1];
		k++;
	}
	if(pos&1)
	n1[pos/2]=num[pos/2];
	
	//	Smallest
	for(int i=1;i<pos;i++)
	{
		int j,mini = 10 , mpos = i;
		if(i==1)
		{
		for(j=i;j<pos;j++)
			{
				if(num[j]<=mini && num[j]!=0)
				{mini=num[j];mpos=j;}
			}	
		}
		else
		{
		for(int j=i;j<pos;j++)
			{
				if(num[j]<=mini)
				{mini=num[j];mpos=j;}
			}
		}
		if(mini!=10 && mini<num[i-1] && mpos!=pos)
		{
			num[i-1] = num[i-1]+num[mpos]-(num[mpos]=num[i-1]);
			break;
		}
	}
	for(int i=0;i<pos;i++)
		cout<<num[i];
	cout<<" ";
	
	
	//	Largest
	int j;
	for(j=1;j<pos;j++)
	{
		if(n1[j]>=n1[j-1])
			break;
	}
	if(j==pos)
	{
		for(int i=0;i<pos;i++)
			cout<<n1[i];	
	}
	else
	{
		int maxi = 0 , mpos = j,p;
		for(p=j;p<pos;p++)
		{
			if(maxi<=n1[p] && n1[p]!=0)
			{maxi=n1[p];mpos=p;}
		}
		for(p=0;p<mpos;p++)
		{
			if(n1[p]<n1[mpos])
				break;
		}
		if(n1[mpos]!=0)
		n1[p] = n1[p]+n1[mpos]-(n1[mpos]=n1[p]);
		for(int i=0;i<pos;i++)
			cout<<n1[i];
	}
	cout<<endl;
}
return 0;
}
