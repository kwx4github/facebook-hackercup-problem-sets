def cook(index, number)
  number_array = number.to_s.chars.map(&:to_i)

  if number_array.size == 1
    puts "Case \##{index + 1}: #{number} #{number}"
    return
  end

  min_number = number_array[0]
  min_index = 0

  max_number = number_array[0]
  max_index = 0

  # find minimum number which is not zero
  # find maximum number
  number_array.each_with_index do |num, index_ary|
    if num == 0
      next
    end
    if num < min_number
      min_number = num
      min_index = index_ary
    end

    if num > max_number
      max_number = num
      max_index = index_ary
    end
  end

  first_element = number_array[0]

  min_num_array = Array.new(number_array)
  min_num_array[0] = min_number
  min_num_array[min_index] = first_element

  max_num_array = Array.new(number_array)
  max_num_array[0] = max_number
  max_num_array[max_index] = first_element
  puts "Case \##{index + 1}: #{min_num_array.to_s} #{max_num_array.to_s}"
end

file_to_read = ARGV[0]

contents = File.read(file_to_read)

line_contents = contents.split("\n")

num_of_cases = line_contents[0].to_i

line_contents[1..num_of_cases].each_with_index do |line, index|
  cook(index, line.to_i)
end
