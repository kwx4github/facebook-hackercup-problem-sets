#include <fstream>
#include <iostream>
using namespace std;

int nums[10], nums2[10];
long long resma, resmi;
int minI, minI0, min_, min0, max_, maxI;

void findMin(int start) {
	min0 = nums[start];
	minI0 = start;
	if(nums[start] != 0) {min_=nums[start]; minI = start; }
	else {min_ = 11; minI = 11;}
	
	for(int i=start; i<=9; i++) {
		/*if(minI == 11 && nums[i] != 0) {
			minI = i;
			min_ = nums[i];
		}*/
		if(min0 >= nums[i]) {
			min0 = nums[i];
			minI0 = i;
		}
		if(nums[i] != 0 && min_ >= nums[i]) {
			min_ = nums[i];
			minI = i;
		}

	}
}

void findMax(int start) {
	max_ = nums[start];
	maxI = start;
	for (int i = start; i <= 9; ++i) {
		if(nums[i] >= max_) {
			max_ = nums[i];
			maxI = i;
		}
	}
}

int main()
{
	ifstream in("cooking_the_books.txt");
    streambuf *cinbuf = std::cin.rdbuf(); 
    cin.rdbuf(in.rdbuf());
    ofstream out("out.txt");
    streambuf *coutbuf = std::cout.rdbuf();
	cout.rdbuf(out.rdbuf());

	int t;
	cin >> t;
	int caseN = 1;
	long long n, n2;
		
	int indexs[10];
	int start=0;
	int temp;

	while(t--) {
		resmi = 0; resma = 0;
		cin >> n;
		n2 = n;
		if(n <= 11) {
			resma = n;
			resmi = n;
			if(n == 10) {
				resmi = 1;
				resma = 10;
			}
		} else {
			int i = 10;
			
			while (i--) {
				if(n2/10 == 0) { nums[i] = n2%10; start = i; break;}
				else { nums[i] = n2%10; n2 = n2/10; }
			}
			// find min
			findMin(start);
			if(min_ == nums[start]) {
				for(int j=(start+1); j<10; j++) {
					findMin(j);
					if(min0 != nums[j]) {
						for(int e=0; e<10; e++) nums2[e] = nums[e];
						temp = nums2[j];
						nums2[j] = nums2[minI0];
						nums2[minI0] = temp;
						for(int e=start; e<10; e++) { resmi = nums2[e] + resmi*10;}
						break;
					} else {
						if(j>=9) {
							for(int e=0; e<10; e++) nums2[e] = nums[e];
							for(int e=start; e<10; e++) { resmi = nums2[e] + resmi*10;}
							break;
						}
						
					}
				}
			} else {
				for(int e=0; e<10; e++) nums2[e] = nums[e];
				temp = nums2[minI];
				nums2[minI] = nums2[start];
				nums2[start] = temp;
				resmi = 0;
				for(int e=start; e<10; e++) { resmi = nums2[e] + resmi*10;}
			}

			// find max now :)
			for(int k=start; k<10; k++) {
				findMax(k);
				if(max_ != nums[k]) {
					for(int e=0; e<10; e++) nums2[e] = nums[e];
					temp = nums2[maxI];
					nums2[maxI] = nums2[k];
					nums2[k] = temp;
					for(int e=start; e<10; e++) { resma = nums2[e] + resma*10;}
					break;
				}else if(k >= 9) {
					for(int e=0; e<10; e++) nums2[e] = nums[e];
					for(int e=start; e<10; e++) { resma = nums2[e] + resma*10;}
					break;
				}
			}
		}
		cout << "Case #" << caseN++ << ": " << resmi << " " << resma << endl;
	}


	return 0;
}