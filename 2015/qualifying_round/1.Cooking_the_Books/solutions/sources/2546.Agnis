#include <iostream>
#include <sstream>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <vector>
#include <fstream>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <algorithm>
#include <numeric>
#include <bitset>

template<typename T>
typename T::value_type SUM(const T &t){
	return accumulate(t.begin(),t.end(), typename T::value_type());
}

#define INF 2100000000
#define VI vector<int>
#define VS vector<string>
#define PB push_back
#define MP make_pair
#define SZ size()
#define FOR(i,b) for(int i=0;i<b;i++)
#define ll long long

using namespace std;

int dig(ll x){
    int a=0;
    while(x>0){
        x/=10;
        a++;
    }
    return a;
}

ll get_dig(ll x,int a){
    ll m[] = {1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000,10000000000l};
    return (x/m[a])%10;
}

ll set_dig(ll x,int a, ll v){
    ll m[] = {1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000,10000000000l};
    ll p1 = x%m[a];
    ll p2 = x/m[a+1];

    return (p2*m[a+1]+v*m[a]+p1);
}

ll swap_dig(ll x,int a,int b,int n){
    ll d1,d2;
    d1=get_dig(x,a);
    d2=get_dig(x,b);
    if((d1==0 || d2==0) && (a==n || b==n)) return x;
    return set_dig(set_dig(x,a,d2),b,d1);
}

int main(){
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);

    int t;
    cin >> t;
    FOR(i,t){
        ll mi,ma,x;
        cin >> x;
        mi =x;
        ma =x;

        int n=dig(x);
        FOR(a,n){
            FOR(b,n){
                ll y=swap_dig(x,a,b,n-1);
                mi = min(y,mi);
                ma = max(y,ma);
            }
        }

        cout << "Case #"<<(i+1)<<": "<<mi<<" "<<ma<<endl;
    }









//	system("pause");
	return 0;
}
