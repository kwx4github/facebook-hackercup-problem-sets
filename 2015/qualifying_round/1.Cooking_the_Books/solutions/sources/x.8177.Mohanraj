package round1;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class CookingBook {
	static String root = "C:/Users/Mohan/Desktop/";
	static String inputFile = root + "a.in";
	static String outputFile = root + "a.out";
	static Scanner in;
	static PrintWriter out;
	public static void main(String[] args) {
        try {
			in = new Scanner(new FileReader(inputFile));
			out = new PrintWriter(outputFile);
			CookingBook cb = new CookingBook();
			int caseCount = in.nextInt();
			for (int i = 0; i < caseCount; i++) {
				out.print("Case #"+ (i+1) +": ");
				cb.solve();
			}
			out.flush();
			out.close();
			in.close();
			System.out.println("Completed!");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	private void solve() { 	 	
		int inputNumber = in.nextInt();
		Integer[] intArray = intToArray(inputNumber);
		int[] minMax = getMinMax(intArray.clone());
		String large = getLargestPossible(minMax[1], intArray.clone());
		String small = getSmallestPossible(minMax[0], intArray.clone());
		out.println(small + " " + large);
	}
	
	private String getSmallestPossible(int i, Integer[] array) {
		if(i>0 && array[0] != i) {
			int temp = array[0];
			int index = Arrays.asList(array).indexOf(i);
			array[0] = array[index];
			array[index] = temp;
		}
		return arrayToString(array);
	}

	private String getLargestPossible(int i, Integer[] array) {
		if(i>0 && array[0] != i) {
			int temp = array[0];
			int index = Arrays.asList(array).lastIndexOf(i);
			array[0] = array[index];
			array[index] = temp;
		}
		return arrayToString(array);
	}

	private Integer[] intToArray(int source) {
		String temp = Integer.toString(source);
		Integer[] newArray = new Integer[temp.length()];
		for (int i = 0; i < temp.length(); i++)
		{
			newArray[i] = temp.charAt(i) - '0';
		}
		return newArray;
	}
	
	private int[] getMinMax(Integer[] array) {
		Arrays.sort(array);
		int[] result = new int[2];
		for(int i = 0; i < array.length; i++) {
			if(array[i] > 0) {
				result[0] = array[i];
				break;
			} else {
				result[0] = 0;
			}
		} 
		result[1] = array[array.length-1];
		return result;
	}
	
	private String arrayToString(Integer[] array) {
		String temp = "";
		for (int i = 0; i < array.length; i++) {
			temp+=array[i];
		}
		return temp;
	}
	
}
