import sys
def joint(lst):
	tmp=''
	for a in lst:
		tmp+=a
	return tmp
def s_min(s,idx):
	l=len(s)
	if idx==0:
		tmp=idx;i=l-1
		while(i>0):
			if(s[idx]>s[i] and s[i]!='0'):idx=i
			i-=1
		return idx
	else:
		tmp=idx;i=l-1
		while(i>tmp):
			if(s[idx]>s[i]):idx=i
			i-=1
		return idx
def s_max(s,idx):
	l=len(s)
	tmp=idx;i=l-1
	while(i>tmp):
		if(s[idx]<s[i]):idx=i
		i-=1
	return idx
def solve_min(s):
	l=len(s)
	for i in range(l):
		if(i!=s_min(s,i)):
			tmp=s_min(s,i)
			s[i],s[tmp] = s[tmp],s[i]
			break
	return s
def solve_max(s):
	l=len(s)
	for i in range(l):
		if (i!=s_max(s,i)):
			tmp=s_max(s,i)
			s[i],s[tmp] = s[tmp],s[i]
			break
	return s
def main():
	T = input()
	for cs in xrange(T):
		n=sys.stdin.readline().strip()
		if len(n)==1:
			print'Case #{:d}: {:s} {:s}'.format(cs+1,n,n)
		elif len(n)==2:
			n=int(n)
			x=str(n)
			tmp=''
			if x[0] > x[1] and x[1]!='0':
				tmp += x[1]
				tmp += x[0]
				v=int(tmp)
				print'Case #{:d}: {:d} {:d}'.format(cs+1,v,n)
			elif x[1]=='0':
				print'Case #{:d}: {:d} {:d}'.format(cs+1,n,n)
			else:
				tmp += x[1]
				tmp += x[0]
				v=int(tmp)
				print'Case #{:d}: {:d} {:d}'.format(cs+1,n,v)
		else:
			print 'Case #{:d}: {:s} {:s}'.format(cs+1,joint(solve_min(list(n))),joint(solve_max(list(n))))
main()