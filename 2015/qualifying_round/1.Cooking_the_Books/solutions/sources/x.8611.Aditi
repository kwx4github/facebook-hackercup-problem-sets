
#include <vector>
#include <algorithm>
#include<iostream>
#include<stdio.h>
#include<fstream>
using namespace std;

int main() {
int n;
    int cUpper;
    vector<int> C;
    ofstream outfile("fboutput.txt");
    ifstream infile("fbinput.txt");
  // outfile.open("afile.txt",ios::app|ios::trunc);
    infile>>n;
    int c;
    int count=0;
    int temp;
    char ch;
    vector<int>::iterator v;
    vector<int>::iterator it,it2;
    //getchar();

infile.get(ch);
  while(n&&!infile.eof()){
    count++;
    C.clear();
    infile.get(ch);
       while(ch!='\n'){
        c=ch-48;
        //cout<<c;
        if(c>=0&&c<=9){
         C.push_back(c);
        }
        infile.get(ch);
       }
        outfile<<"Case #"<<count<<": ";
        if(C.size()==1){

        v=C.begin();
        while(v!=C.end())
        {
        outfile<<*v;
        v++;
        }
        outfile<<" ";
        v=C.begin();
        while(v!=C.end())
        {
        outfile<<*v;
        v++;
        }
outfile<<endl;
        }
        else {
        it2=max_element(C.begin(), C.end());
        cUpper = *it2;
        it=C.begin();
        v=C.begin();
        while(v!=C.end())
        {
        outfile<<*v;
        v++;
        }
        outfile<<" ";


        if(cUpper!=0){
                while(cUpper==*it)
           {
               it2=max_element(it+1, C.end());
               if(it2==C.end())
                break;
               it++;
        cUpper = *it2;

           }
if(it2!=C.end())
        {*it2=*it;

        *it=cUpper;
        }
        }

        v=C.begin();
        while(v!=C.end())
        {
        outfile<<*v;
        v++;
        }
        outfile<<endl;
        }

        n--;
    }

outfile.close();
infile.close();

    return 0;
}
