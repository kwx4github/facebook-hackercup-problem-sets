#include<stdio.h>
#include<math.h>
void buildnum();
void restore();
long long int n,i,j,k,l,temp,indexes=0,highest,lowest,original,number[200]={0};
int t,a[15],real[15],storetest;
int main()
{

scanf("%d",&t);
storetest=t;
while(t--)
	{
for(l=0;l<=indexes;l++)
	number[l]=0;
indexes=0;
	i=0;
	scanf("%lld",&n);
	original=n;
	while(n>0)
		{
		a[i]=n%10;
		real[i]=a[i];
		i++;
		n=n/10;
		}
indexes=0;
// main logic 
// i here is the size of array
	for(j=0;j<i-1;j++)
		{
		for(k=0;k<i;k++)
			{
			if(a[j]==0)
				continue;
			//if(j==k) continue;
			// swap n get number
			temp=a[j];
			a[j]=a[k];
			a[k]=temp;
			buildnum();
			indexes++;
			restore();
			}		
		}

number[indexes]=original;
//	for(j=0;j<i;j++)
//		printf("%d",a[j]);
//	for(j=0;j<indexes;j++)
//		printf("     %d     ",number[j]);
//highest and lowest
	highest=0;
	lowest=10000000000;
	for(j=0;j<=indexes;j++)
		{
		if(highest<number[j])
			highest=number[j];
		if(lowest>number[j])
			lowest=number[j];
		}
printf("Case #%d: %lld %lld\n",storetest-t,lowest,highest); 	
	}
return 0;
}
void buildnum()
{
	for(l=i-1;l>=0;l--)
	{
	number[indexes]=number[indexes]*10;
	number[indexes]=number[indexes]+a[l];		
	
	}

}
void restore()
{
	for(l=0;l<i;l++)
		{
		a[l]=real[l];
		}
}