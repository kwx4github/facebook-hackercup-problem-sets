import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.util.Arrays;


public class CookingTheBooks {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader("cooking_the_books.txt"));
	    try {
	        int lines = Integer.parseInt(br.readLine());
	        for (int caseNum = 1; caseNum <= lines; caseNum++)
	        {
	        	System.out.print("Case #" + caseNum + ": ");
	        	String input = br.readLine();
	        	int[] digits = new int[input.length()];
	        	int[] digitsCopy = new int[input.length()];
	        	for(int i=0;i<input.length();i++) {
	        	      digits[i] = Integer.parseInt(String.valueOf(input.charAt(i)));
	        	      digitsCopy[i] = Integer.parseInt(String.valueOf(input.charAt(i)));
	        	}
	        	int smallestDigit = 10;
	        	int smallestIndex = 0;
	        	for (int i = digits.length - 1; i >= 0; i--)
	        	{
	        		int digit = digits[i];
	        		if (digit < smallestDigit && digit > 0)
	        		{
	        			smallestDigit = digit;
	        			smallestIndex = i;
	        		}
	        	}
	        	int temp = digits[0];
	        	digits[0] = smallestDigit;
	        	digits[smallestIndex] = temp;
	        	for (int digit : digits)
	        	{
	        		System.out.print(digit);
	        	}
	        	System.out.print(" ");
	        	int largestDigit = -1;
	        	int largestIndex = 0;
	        	for (int i = digitsCopy.length - 1; i >= 0; i--)
	        	{
	        		int digit = digitsCopy[i];
	        		if (digit > largestDigit)
	        		{
	        			largestDigit = digit;
	        			largestIndex = i;
	        		}
	        	}
	        	temp = digitsCopy[0];
	        	digitsCopy[0] = largestDigit;
	        	digitsCopy[largestIndex] = temp;
	        	for (int digit : digitsCopy)
	        	{
	        		System.out.print(digit);
	        	}
	        	System.out.println();
	        }
	    } finally {
	        br.close();
	    }
	}

}
