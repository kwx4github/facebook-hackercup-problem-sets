package org.denisg.facebook;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.util.Scanner;

/**
 * https://www.facebook.com/hackercup/problems.php?pid=582062045257424&round=
 * 742632349177460
 */
public class CookingTheBooks {

	public static void main(String[] args) throws FileNotFoundException {

		Scanner in = new Scanner(new File("input.txt"));
		PrintStream out = new PrintStream(new File("output.txt"));
		try {
			int t = in.nextInt();
			for (int i = 1; i <= t; i++) {
				int n = in.nextInt();
				out.println("Case #" + i + ": " + solveMin(n) + " "
						+ solveMax(n));
			}
		} finally {
			in.close();
			out.close();
		}

	}

	public static int solveMin(int n) {
		char[] digits = String.valueOf(n).toCharArray();
		for (int i = 0; i < digits.length; i++) {
			int minDigitIndex = i;
			char minDigit = digits[i];
			for (int j = digits.length - 1; j > i; j--) {
				if (i == 0 && digits[j] == '0') {
					continue;
				}
				if (digits[j] < minDigit) {
					minDigitIndex = j;
					minDigit = digits[j];
				}
			}
			if (minDigitIndex > i) {
				digits[minDigitIndex] = digits[i];
				digits[i] = minDigit;
				break;
			}
		}

		return Integer.parseInt(String.valueOf(digits));
	}

	public static int solveMax(int n) {
		char[] digits = String.valueOf(n).toCharArray();
		for (int i = 0; i < digits.length; i++) {
			int maxDigitIndex = i;
			char maxDigit = digits[i];
			for (int j = digits.length - 1; j > i; j--) {
				if (digits[j] > maxDigit) {
					maxDigitIndex = j;
					maxDigit = digits[j];
				}
			}
			if (maxDigitIndex > i) {
				digits[maxDigitIndex] = digits[i];
				digits[i] = maxDigit;
				break;
			}
		}

		return Integer.parseInt(String.valueOf(digits));
	}

}
