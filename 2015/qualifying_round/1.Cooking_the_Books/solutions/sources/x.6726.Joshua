package cs5050_facebook;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.*;

public class Q1 
{
	private Scanner fin = null;
	private PrintWriter fout = null;
	
	public static void main(String[] args)
	{
		Q1 mainAlgorithm = new Q1();
		
		mainAlgorithm.cookTheBooks();
		mainAlgorithm.fin.close();
		mainAlgorithm.fout.close();
	}

	public Q1()
	{
		try 
		{
			fin = new Scanner(new FileReader("cooking_the_books_example_input.txt"));
			fout = new PrintWriter("q1_output.txt");
		} 
		catch (FileNotFoundException e) 
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void cookTheBooks()
	{
		int numCount = Integer.parseInt(fin.nextLine());
		
		for(int n=0; n<numCount; n++)
		{
			char[] numberCharArray = fin.nextLine().toCharArray();
			int[] number = new int[numberCharArray.length];
			int maxIndex = 0;
			int minIndex = 0;
			int startMaxIndex = 0;
			int startMinIndex = 0;
			boolean foundMaxEarly = false;
			boolean foundMinEarly = false;
			
			number[0] = numberCharArray[0] - '0';
			if(number[0] == 9)
				startMaxIndex = 1;
			
			if(number[0] == 1)
				startMinIndex = 1;
			
			for(int i=1; i<numberCharArray.length; i++)
			{
				number[i] = numberCharArray[i] - '0';
				
				if(!foundMaxEarly)
				{
					if(i != startMaxIndex && number[i] == 9)
					{
						maxIndex = i;
						foundMaxEarly = true;
					}
					
					if(i == startMaxIndex && number[i] == 9)
						startMaxIndex++;
					else if(number[i] > number[maxIndex])
						maxIndex = i;
				}
				
				if(!foundMinEarly)
				{
					if(startMinIndex != 0 && startMinIndex != i && number[i] == 0)
					{
						minIndex = i;
						foundMinEarly = true;
					}
					else if(startMinIndex == 0 && number[i] == 1)
					{
						minIndex = i;
						foundMinEarly = true;
					}
					
					if(startMinIndex == i && number[i] == 0)
						startMinIndex++;
					else if(number[i] < number[minIndex])
					{
						if(startMinIndex == 0 && number[i] == 0)
							continue;
						else
							minIndex = i;
					}
				}
			}
			
			if(maxIndex != 0)
			{
				int temp = number[startMaxIndex];
				number[startMaxIndex] = number[maxIndex];
				number[maxIndex] = temp;
			}
			
			if(minIndex != 0)
			{
				char temp = numberCharArray[startMinIndex];
				numberCharArray[startMinIndex] = numberCharArray[minIndex];
				numberCharArray[minIndex] = temp;
			}
			
			fout.print("Case #" + (n+1) + ": ");
			
			fout.print(numberCharArray);
			fout.print(' ');
			
			for(int i=0; i<number.length; i++)
			{
				fout.print(number[i]);
			}
			fout.print('\n');
		}
	}
}
