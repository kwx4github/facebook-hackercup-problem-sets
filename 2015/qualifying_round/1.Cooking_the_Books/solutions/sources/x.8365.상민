#include <iostream>
#include <functional>
#include <fstream>
#include <queue>
#include <algorithm>
#include <vector>
using namespace std;

int T;
int A, B[20], cnt;
int start_target, end_target;

ofstream fout;
ifstream fin;
void back(int start, bool order) {
	int target = start;
	for (int i = start + 1; i < cnt; i++) {
		if (!(start == 0 && B[i] == 0) && (
					(order == true  && B[i] < B[target]) || 
					(order == false && B[i] > B[target])
				)
			) {
			target = i;
		}
	}
	if (target == start && start + 1 < cnt) {
		back(start + 1, order);
	}
	start_target = start;
	end_target = target;
}

void print_B(){
	swap(B[start_target], B[end_target]);
	for (int i = 0; i < cnt;i++) {
		fout << B[i];
	}
	swap(B[start_target], B[end_target]);
}

int main() {
	fout.open("output.txt");
	fin.open("input.txt");
	fin >> T;

	for(int tcase = 1; tcase <= T; tcase++) {
		fin >> A;
		for (cnt = 0; A > 0, B[cnt] = A % 10, A /= 10; cnt++);
		cnt += 1; // cnt가 0부터 시작했으므로
		for (int i = 0; i < cnt / 2; i++) {
			swap(B[i], B[cnt - 1 - i]);
		}

		fout << "Case #" << tcase << ": ";
		back(0, true);
		print_B(); fout << " ";
		back(0, false);
		print_B(); fout << endl;
	}

	return 0;
}