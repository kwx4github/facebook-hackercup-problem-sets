#include <ctime>
#include <iostream>
#include <string>
#include <algorithm>
#include <cstdio>

using namespace std;

// TEMPLATE {{{
#ifndef LOCAL
#define OJ 1
#else
#define OJ 0
#endif

#define endl '\n'
#define TIMESTAMP merr << "Execution time: " << (double)clock()/CLOCKS_PER_SEC << " s.\n"
class C_ {}; template <typename T> C_& operator <<(C_& __m, const T& __s) { if (!OJ) cerr << "\E[91m" << __s << "\E[0m"; return __m; }
C_ merr;

struct __s { __s() { if (OJ) { ios_base::Init i; cin.sync_with_stdio(0); cin.tie(0); } } ~__s(){ TIMESTAMP; } } __S;
/// END OF TEMPLATE }}}

int toi(const string & s) {
  int res = 0;
  for (int i = 0; i < (int)s.size(); i++) {
    res *= 10;
    res += (int)(s[i]-'0');
  }
  return res;
}

int main() {
  int T;
  freopen("input.txt", "rt", stdin);
  freopen("output.txt", "wt", stdout);
  cin >> T;
  for (int tt = 0; tt < T; tt++) {
    int n, mn, mx;
    string s;
    cin >> s;
    n = toi(s);
    mn = mx = n;
    cout << "Case #" << tt+1 << ": ";
    for (int i = 0; i < (int)s.size(); i++) {
      for (int j = i+1; j < (int)s.size(); j++) {
        if (i == 0 && s[j] == '0') continue;
        swap(s[i], s[j]);
        mn = min(mn, toi(s));
        mx = max(mx, toi(s));
        swap(s[i], s[j]);
      }
    }
    cout << mn << " " << mx << endl;
  }
  return 0;
}
