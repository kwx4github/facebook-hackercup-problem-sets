#include <stdio.h>


int main() {
	freopen ("cooking_the_books.txt", "r", stdin);
	freopen ("qual1.txt", "w", stdout);
	int t;
	scanf("%d", &t);
	for (int i = 0; i < t; i++) {
		int n;
		scanf("%d", &n);
		int *str = new int[10];
		int testn = n;
		int j = 0;
		if (testn == 0) {
			printf("Case #%d: %d %d\n",i + 1, 0, 0);
			continue;
		} else {
			while (testn > 0) {
				str[j] = (testn % 10);
				testn = testn / 10;
				j++;
			}

			int min = n;
			int max = n;

			for (int p = 0; p < j - 1; p++) {
				for (int q = p + 1; q < j; q++) {
					int pq = 0;
					if (q == j - 1 && str[p] == 0) {
						continue;
					}
					for (int k = j - 1; k >= 0; k--) {
						pq = pq * 10;
						if (k == p) {
							pq = pq + str[q];
						} else if (k == q){
							pq = pq + str[p];
						} else {
							pq = pq + str[k];
						}
					}
					
					if (min > pq) {
						min = pq;
					}

					if (max < pq) {
						max = pq;
					}
				}
			}

			printf("Case #%d: %d %d\n",i + 1, min, max);


///////////////////////////////////////////////////////////////////////
/*			//find min & max index #
			int min = str[0];
			int max = str[j - 1];
			int minnum = 0;
			int maxnum = j - 1;
			for (int l = 1; l < j; l++) {
				if (min == 0) {
					min = str[l];
					minnum = l;
				} else if (min > str[l] && str[l] >= 1) {
					min = str[l];
					minnum = l;
				}
				if (max < str[j - 1 - l]) {
					max = str[j - 1 - l];
					maxnum = j - 1 - l;
				}
			}

			printf("Case #%d: ",i + 1);

			printf("%d", min);
			for (int k = j - 2; k >= 0 ; k--) {
				if (k == minnum) {
					printf("%d", str[j - 1]);
				} else {
					printf("%d", str[k]);
				}
			}

			printf(" %d", max);
			for (int k = j - 2; k >= 0 ; k--) {
				if (k == maxnum) {
					printf("%d", str[j - 1]);
				} else {
					printf("%d", str[k]);
				}
			}

			printf("\n");
	*/	
///////////////////////////////////////////////////////////////////////		
		
		}
	}

	fclose (stdout);
	return 0;
}