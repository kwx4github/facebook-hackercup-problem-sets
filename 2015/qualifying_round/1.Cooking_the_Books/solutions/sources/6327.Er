using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace hackervup
{
    class Program
    {
        static void Main(string[] args)
        {
            //FileStream ostrm;
            //StreamWriter writer;
            //TextWriter oldOut = Console.Out;
            //try
            //{
            //    ostrm = new FileStream("./Output.txt", FileMode.OpenOrCreate, FileAccess.Write);
            //    writer = new StreamWriter(ostrm);
            //}
            //catch (Exception e)
            //{
            //    Console.WriteLine("Cannot open Redirect.txt for writing");
            //    Console.WriteLine(e.Message);
            //    return;
            //}
            //Console.SetOut(writer);

            
            Int64 n;
            n = Convert.ToInt32(Console.ReadLine());
            Int64[] a = new Int64[n];
            for (int i = 0; i < n; i++)
            {
                a[i] = Convert.ToInt64(Console.ReadLine());

            }

         



            for (int h = 0; h < n; h++)
            {
                Int64 no;
                no = Convert.ToInt64(a[h]);
               
                    
                    Int64 min = no;
                    Int64 max = no;
                    Int64 t = 1; Int64 x = 1;
                    Int64 digit = 0;
                    while (t < no)
                    {
                        t = t * 10;
                        digit++;
                    }
                    t = t / 10;



                    for (int j = 0; j < digit; j++)
                    {
                        Int64 y = 1;
                        for (int k = 0; k < digit; k++)
                        {
                            Int64 result = no + Testing(no, j) * (y - x) + Testing(no, k) * (x - y);
                            if (min > result && result >= t)
                                min = result;
                            if (max < result)
                                max = result;
                            y = y * 10;
                        }
                        x = x * 10;
                    }
                    Console.WriteLine("Case #" + Convert.ToDecimal(h+1) + ": " + min + " " + max);
                    
                               
            }
            //Console.SetOut(oldOut);
            //writer.Close();
            //ostrm.Close();
           
            Console.ReadLine();

        }

        static Int64 Testing(Int64 n, Int64 m)
        {
            for (int i = 0; i < m; i++)
                n /= 10;
            return n % 10;
        }
    }
}
