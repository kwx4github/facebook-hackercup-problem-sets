import java.io.*;
import java.math.*;
import java.util.*;

public class CookingTheBooks {

	public static void main(String[] args) throws IOException {
		// ----------------------------------------------------
		start();
		// ----------------------------------------------------
		int t = nextInt();

		for (int k = 1; k <= t; k++) {

			out.print("Case #" + k + ": ");
			System.out.println("Case #" + k + ": ");

			long n = nextLong();

			String s = n + "";

			System.out.println(s + " ");
			// int a[] = new int[s.length()];
			char a[] = s.toCharArray();
			for (int i = 0; i < s.length(); i++) {
				a[i] = s.charAt(i);
			}

			// System.out.println(Arrays.toString(a));

			char z[] = Arrays.copyOf(a, a.length);
			int ii = 0;
			char max = 0;
			char current = 0;
			char x = 0;
			int index = 0;

			max = 0x40;
			for (int i = 0; i < a.length; i++) {
				max = 0x40;
				x = 0;
				index = 0;
				current = a[i];
				ii = i;
				for (int j = a.length - 1; j > i; j--) {
					x = z[j];
					if (x < current && x < max) {
						if (!(x == '0' && i == 0)) {
							max = x;
							index = j;
						}
					}
				}
				if (index != 0) {
					break;
				}
			}

			if (max != 0x40) {
				a[index] = a[ii];
				a[ii] = max;
			}
			s = new String(a);
			out.print(s + " ");
			System.out.println(s + " ");

			max = 0;

			for (int i = 0; i < z.length; i++) {
				max = 0;
				x = 0;
				index = 0;
				current = z[i];
				ii = i;
				for (int j = z.length - 1; j > i; j--) {
					x = z[j];
					if (x > current && x > max) {
						max = x;
						index = j;
					}
				}
				if (index != 0) {
					break;
				}
			}

			if (max != 0) {
				z[index] = z[ii];
				z[ii] = max;
			}
			s = new String(z);
			out.println(s);
			System.out.println(s);

		}

		// ----------------------------------------------------
		end();
		// ----------------------------------------------------
	}

	static BufferedReader br;
	static PrintWriter out;
	static StringTokenizer sc;

	static void start() throws IOException {
//		 br = new BufferedReader(new InputStreamReader(System.in));
		br = new BufferedReader(new FileReader("input.txt"));
		// out = new PrintWriter(new OutputStreamWriter(System.out));
		out = new PrintWriter(new FileWriter("output.txt"));
		sc = new StringTokenizer("");
	}

	static void end() throws IOException {
		br.close();
		out.close();
	}

	static String nextString() throws IOException {
		while (!sc.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null) {
				return null;
			}
			sc = new StringTokenizer(s.trim());
		}
		return sc.nextToken();
	}

	static String nextLine() throws IOException {
		String s = br.readLine();
		if (s == null) {
			return null;
		}
		return s;
	}

	static int nextInt() throws IOException {
		return Integer.parseInt(nextString());
	}

	static long nextLong() throws IOException {
		return Long.parseLong(nextString());
	}

	static double nextDouble() throws IOException {
		return Double.parseDouble(nextString());
	}

	BigInteger nextBigInteger() throws IOException {
		return new BigInteger(nextString());
	}

	static int[] nextIntArray(int n) throws IOException {
		int[] a = new int[n];
		for (int i = 0; i < n; i++)
			a[i] = nextInt();
		return a;
	}

	static long[] nextLongArray(int n) throws IOException {
		long[] a = new long[n];
		for (int i = 0; i < n; i++)
			a[i] = nextLong();
		return a;
	}

	static char[] nextCharArray() throws IOException {
		return nextString().toCharArray();
	}

	static String[] nextStringArray(int n) throws IOException {
		String[] a = new String[n];
		for (int i = 0; i < n; i++)
			a[i] = nextString();
		return a;
	}

}