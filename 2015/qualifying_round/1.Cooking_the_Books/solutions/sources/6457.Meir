import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {	
	
	static class Pair {
		final int min;
		final int max;		
		public Pair(int min, int max) {
			this.min = min;
			this.max = max;			
		}
		public static Pair of(int min, int max){
			return new Pair(min, max);
		}
		public String toString(){
			return min + ":" + max;
		}
		public boolean equals(Object other){
			if(other == null){
				return false;
			}
			if (other.getClass() != getClass()) {
				return false;
			}
			Pair p = (Pair) other;
			return p.min == this.min && p.max == this.max;
		}
	}
	
	public static Pair getPair(char[] val) {
		if (val.length == 1) {
			int dig = val[0]-48;
			return Pair.of(dig, dig);
		}

		int noSwaps = getValue(val);
		int smallestYet = noSwaps;
		int largestYet = noSwaps;
		for(int i = 0 ; i < val.length - 1 ; i++) {
			for(int j = 0 ; j < val.length ; j++) {
				int num = getValueWithSwap(val, i, j);
				if (num != -1) {
					if ( num < smallestYet ) {
						smallestYet = num;
					}
					if ( num > largestYet ) {
						largestYet = num;
					}
				}
			}
		}
		return Pair.of(smallestYet, largestYet);
	}
	
	// val must have value greater than 9
	public static int getValueWithSwap(char[] val, int posX, int posY) {
		if (val[posY] == '0' && posX == 0) {
			return -1;
		}
		if (val[posX] == '0' && posY == 0) {
			return -1;
		}
		int sum = 0;
		for(int i = val.length - 1 ; i >= 0 ; i--) { 
			if ( i == posX ){
				sum += (val[posY]-48) * Math.pow(10.0, val.length - 1 - i);
			} else if ( i == posY ) {
				sum += (val[posX]-48) * Math.pow(10.0, val.length - 1 - i);
			} else {
				sum += (val[i]-48) * Math.pow(10.0, val.length - 1 - i);
			}
		}
		return sum;
	}
	
	public static int getValue(char[] val) {
		int sum = 0;
		for(int i = val.length - 1 ; i >= 0 ; i--) { 
			sum += (val[i]-48) * Math.pow(10.0, val.length - 1 - i);
		}
		return sum;
	}
	
	public static void main(String[] args) {
		try{
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			String input;
			input=br.readLine();
			for(int i=1 ; (input=br.readLine()) != null; i++){
				Pair p = getPair(input.toCharArray());
				System.out.format("Case #%d: %d %d\n", i, p.min, p.max);
			}
		} catch(IOException io) {
			io.printStackTrace();
		}
	}
}