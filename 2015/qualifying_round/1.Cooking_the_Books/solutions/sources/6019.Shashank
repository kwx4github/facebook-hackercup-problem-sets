#include <iostream>
#include <algorithm>
#include <cmath>

using namespace std;
inline int pow(int k)
{
    int res = 1;
    while(k){
        res*=10;
        k--;
    }
    return res;
}
inline int swap(int N,int i,int j,int sz){
    int jD = 0,iD = 0;
    int powJ  = pow(j);
    int powI  = pow(i);
    jD = (N / powJ)%10;
    iD = (N / powI)%10;
    N -= jD * powJ;
    N -= iD * powI;
    N += jD * powI;
    N += iD * powJ;
    return N;
}

int main(){
    int T;
    int minN, maxN, j = 0, sz = 0, N, tmp;
    cin >> T;
    for(int t = 0; t < T; t++){
        cin >> N;
        minN = N;
        maxN = N;
        tmp = N;
        sz = 0;
        while(tmp){
            tmp/=10;
            sz++;
        }
        for(int i = 0; i < sz - 1; i++ ){
            for(int j = i + 1; j < sz; j++){
                int k = swap(N,i,j,sz);
               // cout << k << " " << maxN << " " << minN << endl;
                if(k > pow(sz-1)){
                    minN = min(k,minN);
                }
                maxN = max(k,maxN);
            }
        }
        cout << "Case #"<< t + 1 << ": " << minN << " " << maxN << endl;
    }
}
