#include<cstdio>
#include<cstring>

using namespace std;

typedef long long ll;

#define REP(a, b, c) for(ll (a)=(b); (a)<(c); (a)++)
#define dREP(a, b, c) for(ll (a)=(b); (a)>=(c); (a)--)

int end_rev_sorted(char* c, int n){
	REP(i, 0, n-1){
		if(c[i]<c[i+1]) return i+1;
	}
	return n;
}

int end_sorted(char* c, int n){
	REP(i, 0, n-1){
		if(c[i]>c[i+1]) return i+1;
	}
	return n;
}

int main(){
	freopen("cooking_the_books.txt", "r", stdin);
	freopen("final_output.txt", "w", stdout);
	int T;
	scanf("%d", &T);
	char num[10];
	char minnum[100];
	char maxnum[100];
	REP(t, 1, T+1){
		printf("Case #%d: ", t);
		scanf("%s", num);
		int n = strlen(num);
		int rs = end_rev_sorted(num, n), s = end_sorted(num, n);
		strcpy(minnum, num);
		strcpy(maxnum, num);
		//Begin: Max
		if(rs!=n){
			int mx = rs, mxi = rs-1;
			char cmx = maxnum[rs];
			REP(i, rs, n){
				if(cmx<=maxnum[i]){
					cmx = maxnum[i];
					mx = i;
				}
			}
			REP(i, 0, rs){
				if(cmx>maxnum[i]){
					mxi = i;
					break;
				}
			}
			maxnum[mx] = maxnum[mxi];
			maxnum[mxi] = cmx;
		}
		//End: Max
		//Begin: Min
		REP(i, 0, n-1){
			bool min_found = false;
			char cmn;
			int mn;
			REP(j, i+1, n){
				if(i==0&&minnum[j]=='0') continue;
				if((!min_found)||(cmn>=minnum[j])){
						cmn = minnum[j];
						mn = j;
						min_found = true;
				}
			}
			if(min_found){
				if(minnum[i]<=minnum[mn]){
					min_found = false;
					continue;
				}
				char tmp = minnum[i];
				minnum[i] = minnum[mn];
				minnum[mn] = tmp;
					break;
			}
		}
		//End: Min
		printf("%s %s\n", minnum, maxnum);
	}
	return 0;
}

