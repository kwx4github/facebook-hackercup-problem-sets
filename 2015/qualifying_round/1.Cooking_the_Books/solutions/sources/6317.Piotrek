#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>

using namespace std;

pair<char, int> HIGH[100];
pair<char, int> LOW[100];

int main()
{
	int T;
	scanf("%d", &T);

	for (int caseNR = 1; caseNR <= T; caseNR++)
	{
		string S;
		cin >> S;
		
		for (int i = S.length() - 1; i >= 0; i--)
		{
			HIGH[i] = max(make_pair(S[i], i), (i < S.length() - 1) ? HIGH[i + 1] : make_pair('0', 0));
			LOW[i]  = min(make_pair(S[i], -i), (i < S.length() - 1) ? LOW[i + 1] : make_pair('9', 0));
		}

		string high = S;
		string low = S;

		// high
		for (int i = 0; i < S.length(); i++)
		{
			if ((S[i] < HIGH[i].first) && (i < HIGH[i].second))
			{
				swap(high[i], high[HIGH[i].second]);
				break;
			}
		}

		// low
		for (int i = 0; i < S.length(); i++)
		{
			if ((S[i] > LOW[i].first) && (i < -LOW[i].second))
			{
				if ((i != 0) && (LOW[i].first != 0))
				{
					swap(low[i], low[-LOW[i].second]);
					break;
				} 
				else
				{
					int second_smallest = 0;
					for (int j = S.length() - 1; j >= 0; j--)
					{
						if (S[j] != '0')
						{
							if (S[j] < S[second_smallest])
								second_smallest = j;
						}
					}
					
					swap(low[i],low[second_smallest]);

					if (low[i] != S[i])	
						break;
				}
			}
		}

		printf("Case #%d: %s %s\n", caseNR, low.c_str(), high.c_str());
	}
}
