let f x =
	let mot = string_of_int x and flag = ref true in
	for i=0 to String.length mot - 1 do
		if !flag
			then 
			let maxi = ref (mot.[i]) and max_j = ref (-1) in
				for j = String.length mot - 1 downto i+1 do
					let b = mot.[j] in
					if b > !maxi
						then (maxi := b;max_j := j;)
		done;
		if !max_j != -1
			then (flag := false; mot.[!max_j] <- mot.[i]; mot.[i] <- !maxi;)
	done;
	mot;;

let g x =
	let mot = string_of_int x and flag = ref true in
	for i=0 to String.length mot - 1 do
		if !flag
			then 
			let mini = ref (mot.[i]) and min_j = ref (-1) in
				for j = i+1 to String.length mot - 1 do
					let b = mot.[j] in
					if b < !mini && (i !=0 || (b != '0'))
						then (mini := b;min_j := j;)
		done;
		if !min_j != -1
			then (flag := false; mot.[!min_j] <- mot.[i]; mot.[i] <- !mini;)
	done;
	mot;;

let h file =
	let l = ref [] and ic = open_in file and flag = ref true in
	while !flag do
		try	(	
			l := (input_line ic)::(!l);
			)
		with _ -> (flag := false);
	done;
	let liste = ref (List.rev !l) in
	let oc = open_out "/home/guilaub/Documents/fb_r" in
	let a = int_of_string (List.hd !liste) in
		liste := List.tl !liste;
		for i=1 to a do
			let b = int_of_string (List.hd !liste) in
				liste := List.tl !liste;
				Printf.fprintf oc "Case #%d: %s %s\n" i (g b) (f b);
		done;
		flush oc;;

h "/home/guilaub/Documents/cooking_the_books.txt";;
