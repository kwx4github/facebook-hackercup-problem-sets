import os
import itertools


class Problem(object):
    smallest = 0
    biggest = 0

    def __init__(self, N, pid):
        super(Problem, self).__init__()
        self.N = N
        self.pid = pid


class Problems(object):
    T = 0
    problems = []

    def __init__(self, input_file, output_file):
        super(Problems, self).__init__()
        self.input_file = input_file
        self.output_file = output_file

    def open_file(self):
        """open_file"""

        f = open(self.input_file, 'r')
        T = int(f.readline())

        if (T <= 0) or (T > 100):
            raise Exception('T parameter out of range')
        else:
            self.T = T
            for test in range(self.T):
                N = int(f.readline())
                if (N < 0) or (N > 999999999):
                    raise Exception('N parameter out of range')
                else:
                    self.problems += [Problem(N, test+1)]
        f.close()
    
    def save_file(self):
        """save_file"""
        f = open(self.output_file, 'w')
        for test in self.problems:
            f.write('Case #{0}: {1} {2}\n'.format(test.pid, test.smallest,
                                                  test.biggest))
        f.close()

    def swapmax(self, s):
        ss = list(s)
        max_num, position = max((v,i) for i,v in enumerate(ss))
        ss[0], ss[position] = ss[position], ss[0]
        return "".join(ss)

    def swapmin(self, s):
        ss = list(s.replace('0', 'X'))
        min_num, position = min((v,i) for i,v in enumerate(ss))
        ss[0], ss[position] = ss[position], ss[0]
        return "".join(ss).replace('X', '0')

    def cooking_the_books(self):
        """run cooking_the_books"""
        for test in self.problems:
            test.smallest = self.swapmin(str(test.N))
            test.biggest = self.swapmax(str(test.N))

        
if __name__ == "__main__":
    cooking = Problems("cooking_the_books.txt", 
                       "cooking_the_books_output.txt")

    cooking.open_file()
    cooking.cooking_the_books()
    cooking.save_file()