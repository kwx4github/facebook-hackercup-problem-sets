#define _CRT_SECURE_NO_DEPRECATE

#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <vector>
#include <iostream>
#include <queue>
#include <list>
#include <cctype>
#include <sstream>
#include <cassert>
#include <bitset>
#include <memory.h>

using namespace std;

#pragma comment(linker, "/STACK:33554432")

typedef long long int64;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define it iterator
#define last(a) a.size() - 1
#define all(a) a.begin(), a.end()

const long double EPS = 1E-9;
const int INF = 1000000000;
const int64 INF64 = (int64) 1E18;
const long double PI = 2 * acos(.0);

string s;

void read() {
  cin >> s;
}

void solve() {
  if (s == "0") {
    puts("0 0");
    return;
  }
  string mi, ma;
  mi = ma = s;
  forn(i, s.size())
    forn(j, i) {
      string c(s);
      swap(c[i], c[j]);
      if (c[0] != '0') {
        mi = min(mi, c);
        ma = max(ma, c);
      }
    }
  cout << mi << ' ' << ma << endl;
}

int main() {
  freopen("input.txt", "rt", stdin);
  freopen("output.txt", "wt", stdout);

  int tests;
  scanf("%d", &tests);
  for (int test = 1; test <= tests; test++) {
    printf("Case #%d: ", test);
    read();
    //gen();
    solve();
  }

  return 0;
}
