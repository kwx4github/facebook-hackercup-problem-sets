
#include <iostream>
#include <fstream>
#include <vector>

using namespace std;
string getSmallest(string num, size_t, size_t);
string getLargest(string num, size_t, size_t);

int main(int argc, char** argv) {

    if (argc <= 1) {
        cout << "Not enough args" << endl;
        return 1;
    }

    ifstream in(argv[1]);

    int T = 0;
    in >> T;
    for (int i = 1; i <= T; ++i) {
        string line;
        in >> line;

        cout << "Case #" << i << ": "
             << getSmallest(line, 0, line.size()) << " "
             << getLargest(line, 0, line.size()) 
             << endl;
    }
}

string getSmallest(string num, size_t start, size_t end) {
    if ((end - start) < 2) {
        return num;
    }
    size_t smallestIndex = start;
    char smallestChar = num[start];
    for (size_t i = start+1; i < end; ++i) {
        if (num[i] < smallestChar && num[i] != '0') {
            smallestChar = num[i];
            smallestIndex = i;
        }
    }
    
    if (smallestIndex == start) {
        //recurse down
        return getSmallest(num, start+1, end);
    }
    else {
        num[smallestIndex] = num[start];
        num[start] = smallestChar;
        return num;
    }

}

string getLargest(string num, size_t start, size_t end) {
    if ((end - start) < 2) {
        return num;
    }
    size_t largestIndex = start;
    char largestChar = num[start];
    for (size_t i = start+1; i < end; ++i) {
        if (num[i] > largestChar) {
            largestChar = num[i];
            largestIndex= i;
        }
    }
    
    if (largestIndex == start) {
        //recurse down
        return getLargest(num, start+1, end);
    }
    else {
        num[largestIndex] = num[start];
        num[start] = largestChar;
        return num;
    }

}
