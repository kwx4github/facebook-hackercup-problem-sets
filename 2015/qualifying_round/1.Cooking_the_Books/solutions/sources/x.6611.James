public class Main {

    public static void main(String []args) {
        File file = new File(args[0]);

        try {
            BufferedReader in = new BufferedReader(new FileReader(file));
            in.readLine();

            int currentCase = 1;
            String number;

            while ((number = in.readLine()) != null) {
                int n = Integer.valueOf(number);

                if (n > 10) {
                    printCase(currentCase, getNextNum(n, Math::min), getNextNum(n, Math::max));
                } else {
                    printCase(currentCase, n, n);
                }

                currentCase++;
            }
        } catch (Exception ignore) {}
    }

    private static void printCase(int caseNumber, int smallest, int largest) {
        System.out.println(String.format("Case #%d: %d %d", caseNumber, smallest, largest));
    }

    private static int getNextNum(int n, Comparator<Integer> c) {
        char[] num = String.valueOf(n).toCharArray();

        int m = n;

        for (int j=0; j<num.length-1; j++) {
            int orig = num[j] - '0';
            char firstChar = num[j];

            int max = orig;
            int index = 0;

            for (int i = j; i < num.length; i++) {
                max = c.compare(max, num[i] - '0');
                if (max == num[i] - '0') {
                    index = i;
                }
            }

            if (max > 0 && c.compare(max, orig) == max) {
                char[] temp = String.valueOf(n).toCharArray();
                temp[j] = temp[index];
                temp[index] = firstChar;

                m = c.compare(m, Integer.valueOf(new String(temp)));
            }
        }
        return m;
    }
}