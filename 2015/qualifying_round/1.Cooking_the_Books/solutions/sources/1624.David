"""
This script may use libraries publicly available at: https://github.com/grokit/dcore.

Does this solution solve:
   Small: ?.
   Big:   ?.
"""

import dcore.gcj_boot as boot

class Problem:
    pass

def readProblem(fh):

    n = [int(x) for x in fh.readline().strip().split()]

    p = Problem()
    p.n = n[0]
    return p

def allPairs(n):
    for i in range(n):
        for j in range(i+1, n):
            yield (i,j)

def mutate(s, mut):
    a = [a for a in s]
    t = a[mut[0]]
    a[mut[0]] = a[mut[1]]
    a[mut[1]] = t
    return "".join(a)

def solve(p):
    if p.n == 0:
        return "%i %i" % (0, 0)
    
    n = p.n
    sm = n
    la = n
    for mutation in allPairs(len(str(n))):
        sn = str(n)
        snew = mutate(sn, mutation)

        if len(str(int(snew))) != len(str(int(sn))):
            continue

        nn = int(snew)

        if nn > la:
            la = nn
        if nn < sm:
            sm = nn

    return "%i %i" % (sm, la)

boot.solve(solve, readProblem, '.*cooking')
