#include <stdio.h>
#include <stdlib.h>
#include <math.h>

long get_num(int index, int * arr);

int main(int argc, char* argv[]){

	FILE* file = fopen(argv[1], "r");
	long i, k, original_i = 0;
        int j = 1;

	fscanf (file, "%ld", &i);
	fscanf (file, "%ld", &i);
   
	int m, lowest, highest, lowest_index, highest_index, gen_index, single_int;
        long big_final_num, small_final_num;

	while (!feof (file))
	  {
            big_final_num, small_final_num = 0;
	    highest = 0;
            lowest = 9;
            lowest_index = 0;
            highest_index = 0;
            gen_index = 0;

            int * arr = (int *) malloc(9 * sizeof(int)), * curr = arr;
            int * arr2 = (int *) malloc(9 * sizeof(int)), * curr2 = arr2;

            do{
              single_int = i % 10;
	      *curr++  = single_int;
              *curr2++ = single_int;
              
              if (single_int > highest){
                highest = single_int;
                highest_index = gen_index;
	      }
	      if ((single_int != 0) && (single_int < lowest)){
                lowest = single_int;
                lowest_index = gen_index;
              }
        
              i /= 10;
              gen_index +=1;
	    }while(i != 0);            

            if( gen_index -1 > 1){
	    arr[gen_index-1] = arr[gen_index-1] * arr[highest_index];
            arr[highest_index] = (int) (((float) arr[gen_index-1] ) / (( float) arr[highest_index] ));
            arr[gen_index-1] = (int) (((float) arr[gen_index-1] ) / (( float) arr[highest_index] ));

            arr2[gen_index-1] = arr2[gen_index-1] * arr2[lowest_index];
            arr2[lowest_index] = (int) (((float) arr2[gen_index-1] ) / (( float) arr2[lowest_index] ));
            arr2[gen_index-1] = (int) (((float) arr2[gen_index-1] ) / (( float) arr2[lowest_index] ));
            }
            big_final_num   = (long) get_num(gen_index-1, arr);
            small_final_num = (long) get_num(gen_index-1, arr2);
            
	    printf ("Case #%d: %ld %ld\n", j, small_final_num, big_final_num);
	    fscanf (file, "%ld", &i); 
            j += 1; 
            free(arr);    
	  }       
	fclose(file);
}

long get_num(int index, int * arr){
  int sum = 0;
  int k;
  for(k = index; k >=0 ; k--){
      sum += (long) arr[k] * pow(10, k);
  }
  return sum;
}
