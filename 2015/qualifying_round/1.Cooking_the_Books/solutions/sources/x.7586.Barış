#include <iostream>
#include <fstream>
using namespace std;

void findMaxMin(int* steps, int &maxpos, int &minpos)
{
	int max = -1;
	int min = 10;
	int j = 0;
	while (steps[j] != -1)
	{
		if (max < steps[j])
		{
			max = steps[j];
			maxpos = j;
		}
		if (min > steps[j] && steps[j] != 0)
		{
			min = steps[j];
			minpos = j;
		}
		++j;
	}
}

int change(int* steps, int value, int max)
{
	int temp, ret = 0, offset = 1, i = 0;
	temp = steps[max];
	steps[max] = steps[value];
	steps[value] = temp;

	while (steps[i] != -1)
	{
		ret += offset*steps[i];
		++i;
		offset *= 10;
	}

	return ret;
}


int main()
{
	int count, numb, temp;
	int lst[100];
	int steps[11];

	for (int i = 0; i < 10; ++i)
		lst[i] = -1;

	fstream ifile("cooking_the_books.txt");
	ifile >> count;
	for (int i = 0; i < count; ++i)
		ifile >> lst[i];
	ifile.close();

	ofstream ofile("output");

	for (int i = 0; i < count; ++i)
	{
		ofile << "Case #" << i + 1 << ": ";
		numb = lst[i];
		int step = 0, max = -1, min = -1;
		while (numb != 0)
		{
			temp = numb % 10;
			steps[step] = temp;
			++step;
			numb = numb / 10;
		}
		steps[step] = -1;

		int maxpos, minpos;
		findMaxMin(steps, maxpos, minpos);

		max = change(steps, maxpos, step-1);
		min = change(steps, minpos, step-1);

		ofile << min << " " << max << endl;
	}
	ofile.close();

	return 0;
}

