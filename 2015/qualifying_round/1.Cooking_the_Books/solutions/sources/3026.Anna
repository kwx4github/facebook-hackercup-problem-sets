T = int(raw_input())

def produceMin(str_num):
    first_idx = 0
    min_idx = 0 
    for idx, let in enumerate(str_num):
        first_idx = idx
        min_idx = idx
        for in_idx in xrange(idx, len(str_num)):
            in_let = str_num[in_idx]
            if in_let == '0' and idx == 0:
                continue
            if in_let < str_num[min_idx]:
                min_idx = in_idx
        if min_idx != first_idx:
            break
    if first_idx == min_idx:
        return str_num
    first_let = str_num[first_idx]
    min_let = str_num[min_idx]
    return str_num[:first_idx] + min_let + str_num[first_idx+1:min_idx] + first_let + str_num[min_idx+1:]

def produceMax(str_num):
    first_idx = 0
    max_idx = 0 
    for idx, let in enumerate(str_num):
        first_idx = idx
        max_idx = idx
        for in_idx in xrange(len(str_num)-1, idx, -1):
            in_let = str_num[in_idx]
            if in_let > str_num[max_idx]:
                max_idx = in_idx
        if max_idx != first_idx:
            break
    if first_idx == max_idx:
        return str_num
    first_let = str_num[first_idx]
    max_let = str_num[max_idx]
    return str_num[:first_idx] + max_let + str_num[first_idx+1:max_idx] + first_let + str_num[max_idx+1:]


casenr = 1
while T:
    print 'Case #{}:'.format(casenr),
    casenr += 1
    
    inp = raw_input()
    print produceMin(inp), produceMax(inp)

    T -= 1
