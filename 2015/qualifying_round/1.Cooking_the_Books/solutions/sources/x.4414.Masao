#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <cmath>
#include <climits>
#include <cfloat>
#include <map>
#include <utility>
#include <set>
#include <iostream>
#include <fstream>
#include <memory>
#include <string>
#include <vector>
#include <list>
#include <algorithm>
#include <functional>
#include <sstream>
#include <complex>
#include <stack>
#include <queue>
#include <windows.h>

using namespace std;
#pragma warning(disable: 4996)

#define OUTPUTLOG2(X,Y)\
{\
	char msg[1024];\
	sprintf( msg, X, Y );\
	OutputDebugString(msg);\
}
#define OUTPUTLOG OutputDebugString

void main(int argc, char*argv[]) // usage: main.exe in.txt out.txt
{
	ifstream fin(argv[1]);
	if( fin == NULL ){
		OUTPUTLOG2("cannot open in-file : %s\n", argv[1]);
		return;
	}
	FILE* fout = fopen(argv[2],"w");
	if( fin == NULL ){
		OUTPUTLOG2("cannot open out-file : %s\n", argv[2]);
		return;
	}

/////////////////////////////
	char line[1024];
	int CASE;
	fin >> CASE;
	for( int test_case = 1; test_case <= CASE; test_case++ ){
	/////////////////////////////
		int T;
		fin >> T;
		vector<int> maxv, minv;
		if( T == 0 ){
			fprintf(fout,"Case #%d: %d %d\n", test_case, 0, 0);
			continue;
		}
		while(1){
			if( T ==  0 )
				break;
			maxv.push_back( T%10 );
			T /= 10;
		}
		minv = maxv;
		int maxpos = maxv.size()-1;
		int minpos = minv.size()-1;
		int maxval = maxv[maxpos];
		int minval = minv[minpos];
		for( int i = maxv.size()-1; i >= 0; i-- ){
			if( maxv[i] > maxval ){
				maxpos = i;
				maxval = maxv[i];
			}
			if( minv[i] < minval && minv[i] != 0 ){
				minpos = i;
				minval = minv[i];
			}
		}
		swap( maxv[maxpos], maxv[maxv.size()-1] );
		swap( minv[minpos], minv[minv.size()-1] );

		int ansmax = 0, ansmin = 0;
		for( int i = maxv.size()-1; i >= 0; i-- ){
			ansmax *= 10;
			ansmin *= 10;
			ansmax += maxv[i];
			ansmin += minv[i];
		}

	/////////////////////////////
		fprintf(fout,"Case #%d: %d %d\n", test_case, ansmin, ansmax);
		if( fin.eof() ){
			if( test_case != CASE ){
				OUTPUTLOG( "in-file error:eof" );
			}
			break;
		}
	}

	OUTPUTLOG( "program end" );
}