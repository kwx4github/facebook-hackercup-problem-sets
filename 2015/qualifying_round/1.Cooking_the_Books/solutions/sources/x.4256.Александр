var fs = require('fs'),
    debug = false;

fs.readFile('solve.in', {encoding: 'utf-8'}, function(err, data) {
    if (err) throw  err;
    _log(data);
    main(data.split("\n"));
});

function _log(data)
{
    if ( debug ) {
        console.log(data);
    }
}

function main(data) {
    var res = '',
        response = '',
        cases = data.shift();

    for ( var i = 1; i <= cases; i++ ) {
        res = 'Case #' + i + ': ' + solve(parseInt(data.shift()));

        _log(res);

        response += res + "\n";
    }
    fs.writeFileSync('out.txt', response);
}


function solve(data)
{
    var _data = data.toString().split(''),
        _minNum = data,_maxNum = data,
        max = parseInt(_data[0]),
        min = parseInt(_data[0]);
    if ( _data.length == 1 ) {
        return _minNum + ' ' + _maxNum;
    }

    for ( var k = 1; k < _data.length; k++ ) {
        if ( parseInt(_data[k]) >= max ) {
            _maxNum = _data[k] + _data.slice(1, k).join('') + _data[0] + (k + 1 < _data.length ? _data.slice(k + 1).join('') : '');
            max = parseInt(_data[k]);
            _log('Max: ' + _data[k] + _data.slice(1, k).join('') + _data[0] + (k + 1 < _data.length ? _data.slice(k + 1).join('') : ''));
        }
        if ( parseInt(_data[k]) < min && _data[k] != 0 ) {
            _minNum = _data[k] + _data.slice(1, k).join('') + _data[0] + (k + 1 < _data.length ? _data.slice(k + 1).join('') : '');
            min = parseInt(_data[k]);
            _log('Min: ' + _data[k] + _data.slice(1, k).join('') + _data[0] + (k + 1 < _data.length ? _data.slice(k + 1).join('') : ''));
        }
    }
    return _minNum + ' ' + _maxNum;
}