//jporcelli, competitive coding solution template

#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <bitset>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <map>
#include <set>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> ii;
typedef pair<string,int> si;
typedef pair<int,ii> iii;
typedef vector<si> vsi;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<string> vs;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
typedef map<string,vs> msvs;
typedef map<string,int> msi;
typedef map<string,string> mss;
typedef map<int,bool> mib;

#define REP(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define REPD(i,n) for(int i = (n) - 1; i >= 0; i--)
#define FOR(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define FORD(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define FORN(i,a,b) for(int i = (a), _b = (b); i < _b; i++)
#define FOREACH(it,c) for (__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define RESET(c,x) memset (c, x, sizeof (c))
#define DEBUG1(s,c) cout << s << c << endl

#define PI acos(-1)
#define sqr(x) ((x) * (x))
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define ALL(c) (c).begin(), (c).end()
#define SIZE(c) (int)(c).size()

#define INF 1000000000L 

#define PROD //clocking off

class Main{
public:
	void solve(){
#ifndef PROD
clock_t stop_s,start_s;
start_s=clock();
#endif
	
		int t;
		cin >> t;
		FOR(k,1,t){
			string n, nmin, nmax;
			cin >> n;
			
			nmin=n; nmax=n;

			int mxi=-1, mni=-1, mx=0, mn=9;
			REP(i,n.length()){
				int x=n[i]-'0';

				if(x>mx && x>0){ mx=x; mxi=i; }
				if(x<mn && x>0){ mn=x; mni=i; }
			}

			if(mxi>0) swap(nmax[0],nmax[mxi]); 
			if(mni>0) swap(nmin[0],nmin[mni]);

			cout << "Case #" << k << ": " << nmin << " " <<  nmax << endl;
		}

#ifndef PROD
stop_s=clock();
cout << "time: " << (stop_s-start_s)/double(CLOCKS_PER_SEC)*1000 << endl;
#endif
	}
};

int main(int argc, char *argv[]){
	Main m;
	m.solve();
	return 0;
}
