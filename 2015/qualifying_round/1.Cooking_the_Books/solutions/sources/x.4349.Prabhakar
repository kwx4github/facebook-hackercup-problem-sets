import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class CookBook {
	static BufferedReader in;
	static BufferedWriter out;
	static int N;
	public static void main(String[] args){
		try{
			in = new BufferedReader(new FileReader("input.txt"));
			out = new BufferedWriter(new FileWriter("output.txt"));
			N = Integer.parseInt(in.readLine());
			for (int i=1;i<=N;i++){
				String val = in.readLine();
				out.write("Case #"+i+": ");
				maxNum(val);
				out.newLine();
			}
			out.close();
		}
		catch(IOException e){
			System.out.println("IOError");
		}
	}
	public static void maxNum(String val) throws IOException{
		int min = 2147483647, max  = -2147483648;
		StringBuilder minStr = new StringBuilder(val);
		StringBuilder maxStr = new StringBuilder(val);
		int minPos = -1, maxPos = -1;
		for (int k = 0;k<val.length();k++){
			int c = val.charAt(k) - 48;
			if (c !=0 && c > max){
				max = c;
				maxPos = k;
			}			
			if (c!=0 && c < min){
				min = c;
			    minPos = k;
			}
		}
		int p = val.charAt(0);
		if (min != 0 && min !=2147483647){
			minStr.setCharAt(0, (char)(min+48));
			minStr.setCharAt(minPos, (char)p);
		}
		out.write(minStr.toString());
		out.write(" ");
		if (max != 0 && max != -2147483648){
			maxStr.setCharAt(0, (char)(max+48));
			maxStr.setCharAt(maxPos,(char)p);
		}
		out.write(maxStr.toString());
	}
}
