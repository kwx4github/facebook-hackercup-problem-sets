#include <iostream>
#include <vector>
#include <cassert>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <fstream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <algorithm>
#include <numeric>

#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define for1(i, n) for (int i = 1; i <= (int)(n); ++i)
#define ford(i, n) for (int i = (int)((n) - 1); i >= 0; --i)
#define fornn(i, a, b) for (int i = (int)(a); i < (int)(b); ++i)
#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)
#define debugv(a) forn(i, a.size()) cerr << a[i] << ' '; cerr << '\n'

template<class T>
bool uin(T &a, T b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}

template<class T>
bool uax(T &a, T b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}

using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;

typedef long long i64;
typedef unsigned long long u64;
typedef pair<i64, i64> pi64;
typedef vector<i64> vi64;
typedef vector<vi64> vvi64;

typedef long double ld;
typedef vector<ld> vld;
typedef vector<vld> vvld;

string intToStr(int N) {
    string s;
    while (N) {
        s += (char)('0' + N % 10);
        N /= 10;
    }
    reverse(all(s));
    return s;
}

int strToInt(string s) {
    int N = 0;
    forn(i, s.size()) {
        N = 10 * N + s[i] - '0';
    }
    return N;
}

int main() {
    ios::sync_with_stdio(false);

    int T;
    cin >> T;
    for1(t, T) {
        int N;
        cin >> N;
        int L = N, R = N;
        string s = intToStr(N);
        forn(i, s.size()) forn(j, i) {
            swap(s[i], s[j]);
            if (s[0] != '0') {
                int K = strToInt(s);
                uin(L, K);
                uax(R, K);
            }
            swap(s[i], s[j]);
        }
        cout << "Case #" << t << ": " << L << ' ' << R << '\n';
    }

#ifdef LOCAL_DEFINE
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
#endif
    return 0;
}
