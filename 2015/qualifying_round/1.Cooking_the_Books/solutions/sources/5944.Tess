#include <iostream>
using namespace std;
struct Node{
	int data;
	Node* next;
};

struct stack{
	Node* head;
	stack(){
		head = NULL;
	}
	int push(int num){
		Node* temp = head;
		head = new Node();
		head->data = num;
		head->next = temp; 
		return head->data;

	}
	int get(int position){
		Node* temp = head;
		for(int i = 0; i!= position; ++i){
			temp = temp->next;
		}
		return temp->data;
	}
	int size(){
		Node* temp = head;
		int i = 0;
		while(temp){
			temp = temp->next;
			++i;
		}
		return i;
	}
	int* toArray(int size){
		int* array = new int[size];
		for(int i = 0; i!= size; ++i){
			array[i] = this->get(i);
		}
		return array;

	}
};

int findMin(int* array,int index, int size){
	int curmin = 10;
	int mindex = index;
	for(int i = index; i!= size; ++i){
		if(array[i] <= curmin){
			if(index != 0 && array[i] == 0){
				mindex = i;
				curmin = array[i];
			}else if(array[i] != 0){
				mindex = i;
				curmin = array[i];
			}
		}
	}
	if(array[mindex] == array[index]){
		mindex = index;
	}
	return mindex;

}
int findMax(int* array,int index, int size){
	int curmin = -1;
	int mindex = index;
	for(int i = index; i!= size; ++i){
		if(array[i] >= curmin){
			if(index != 0 && array[i] == 0){
				mindex = i;
				curmin = array[i];
			}else if(array[i] != 0){
				mindex = i;
				curmin = array[i];
			}
		}
	}
	if(array[mindex] == array[index]){
		mindex = index;
	}
	return mindex;

}


int main(){
	int T;
	cin>>T;
	int N[T];
	for(int i = 0; i!= T; ++i){
		cin>>N[i];
	}
	for(int i = 0; i!= T; ++i){
		stack st;
		int Nu = N[i];
		while(Nu > 0) {
		st.push(Nu%10);
		Nu = Nu/10;
		}
		int s = st.size();
		int *array = st.toArray(s);
		int *array1 = st.toArray(s);
		int index = 0;
		int mindex = findMin(array,index,s);
		while(mindex == index){
			++index;
			if(index == s+1){
				break;
			}
			mindex = findMin(array,index,s);
		}

		if(mindex != s){
			int temp = array[index];
			array[index] = array[mindex];
			array[mindex] = temp;
		}
		cout<< "Case #";
		cout<<i+1;
		cout<<": ";
		for(int i = 0; i!= s; ++i){
			if (array[i] == 0 && s == 1){
				cout<<"0";
			}
			cout<<array[i];
		}
		cout<<" ";
		index = 0;
		int maxdex = findMax(array1,index,s);
		while(maxdex == index){
			++index;
			if(index == s+1){
				break;
			}
			maxdex = findMax(array1,index,s);
		}
		if(maxdex != s){
			int temp = array1[index];
			array1[index] = array1[maxdex];
			array1[maxdex] = temp;
		}
		for(int i = 0; i!= s; ++i){
			if (array[i] == 0 && s == 1){
				cout<<"0";
			}
			cout<<array1[i];
		}
		cout<<endl;

		delete [] array;
		delete [] array1;
	}


	

}
/*


for(int i = 0; i!= T; ++i){
		cout<<N[i]<<endl;
	
	}*/