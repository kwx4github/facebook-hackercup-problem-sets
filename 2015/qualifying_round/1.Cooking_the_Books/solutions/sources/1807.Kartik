def Input(fl):
	f = open(fl, 'r')
	return f

# def output(lst):
# 	f = open(out, 'w')
# 	for element in lst:
# 		string = "Case #"+str(lst.index(element))+": "+element[0]+" "+element[1]
# 		f.write(string+"\n")

def test(string):
	minimum = 10
	maximum = 0
	for char in string:
			if int(char) < minimum:
				if int(char) != 0:
					minimum = int(char)
			if int(char) > maximum:
				maximum = int(char)
	lastIndexofMax = string.rindex(str(maximum))
	lastIndexofMin = string.rindex(str(minimum))
	done = False
	chngdIndex = 0
	newString = ""
	maxString = ""
	minString = ""
	for i in range(len(string)):
		if string[i] != str(maximum) and not done:
			maxString += str(maximum)
			chngdIndex = i
			done = True
		# elif i == lastIndexofMax:
		# 	maxString += string[chngdIndex]
		else:
			maxString += string[i]
	for i in range(len(maxString)):
		if i == lastIndexofMax and done:
			newString += string[chngdIndex]
		else:
			newString += maxString[i]
	maxString = newString
	chngdIndex = 0
	done = False
	newString = ""
	for i in range(len(string)):
		
		if string[i] != str(minimum) and not done:
			minString += str(minimum)
			chngdIndex = i
			done = True
		# elif i == lastIndexofMin:
		# 	minString += string[chngdIndex]
		else:
			minString += string[i]
	for i in range(len(minString)):
		if i == lastIndexofMin and done:
			newString += string[chngdIndex]
		else:
			newString += minString[i]
	minString = newString

	return minString, maxString


def process(fil, out):
	f = open(out, 'w')
	n = int(fil.readline())
	minString = ""
	maxString = ""
	for j in range(n):
		string = fil.readline()
		if string == "":
			break;
		if string[-1] == '\n':
			string = string[:-1]
		minString = ""
		maxString = ""
		charlst = []
		for char in string:
			# print char
			charlst.append(char)
		if charlst[-1] == "\n":
			charlst = charlst[:-1]

		minimum = 10
		maximum = 0
		contains0 = '0' in charlst
		for char in charlst:
			if int(char) < minimum:
				if int(char) != 0:
					minimum = int(char)
			if int(char) > maximum:
				maximum = int(char)
		if string == '0':
			minString = '0'
			maxString = '0'
		elif minimum == maximum:
			if not contains0:
				minString = string
				maxString = string
			elif string.count(string[0]) == 1:
				minString = string
				maxString = string
			else:
				LastIndexof0 = string.rindex('0')
				minString += string[0]
				done = False
				for i in range(1, len(charlst)):
					if string[i] != '0' and not done:
						minString += '0'
						done = True
					elif i == LastIndexof0:
						minString += string[0]
					else:
						minString += string[i]
				lastIndexofNon0 = string.rindex(string[0])
				maxString += string[0]
				done = False
				for i in range(1, len(charlst)):
					if string[i] == '0' and not done:
						maxString += string[0]
						done = True
					elif i==lastIndexofNon0:
						maxString += '0'
					else:
						maxString += string[i]
		else:
			MaxCharlst = charlst[:]
			MaxCharlst.sort()
			MaxCharlst.reverse()
			MaxstartStr = len(string)-1
			for i in range(len(charlst)):
				if MaxCharlst[i] != charlst[i]:
					MaxstartStr = i
					break
			if MaxstartStr == len(string)-1:
				maxString = string
				print maxString
			else:
				a, maxSubStr = test(string[MaxstartStr:])
				maxString = string[:i] + maxSubStr
			MinCharlst = charlst[:]
			MinCharlst.sort()
			while MinCharlst[0] == '0':
				MinCharlst.append('0')
				MinCharlst.remove('0')
			MinstartStr = len(string)-1
			for i in range(len(charlst)):
				if MinCharlst[i] != charlst[i]:
					MinstartStr = i
					break
			if MinstartStr == len(string)-1:
				minString = string
			else:
				a, maxSubStr = test(string[MinstartStr:])
				minString = string[:i] + a

		string = "Case #"+str(j+1)+": "+minString+" "+maxString
		print string
		f.write(string+"\n")
	f.close()

process(Input('fb.txt'), 'fb_Out.txt')