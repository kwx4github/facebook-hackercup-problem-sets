import java.io.BufferedReader;
import java.io.InputStreamReader;

public class CookingBooks {


    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        final int count = Integer.parseInt(br.readLine());

        for (int i = 1; i <= count; i++) {
            String number = br.readLine();

            String smallest = smallestNum(number);
            String largest = largestNum(number);

            System.out.println("Case #" + i + ": " + smallest + " " + largest);
        }
    }

    private static String smallestNum(String num) {
        char[] chars = num.toCharArray();

        if (chars.length > 1) {

            outerloop:
            for (int i = 0; i < chars.length - 1; i++) {
                int minPos = i;

                for (int j = chars.length - 1; j > i; j--) {
                    if (chars[j] < chars[minPos]) {

                        if (i == 0 && chars[j] == '0') {
                            // skip invalid number (starting with zero)
                            continue;
                        }
                        minPos = j;
                    }
                }

                if (i != minPos) {
                    //swap
                    char tmp = chars[i];
                    chars[i] = chars[minPos];
                    chars[minPos] = tmp;

                    break outerloop;
                }
            }
        }

        return new String(chars);
    }

    private static String largestNum(String num) {
        char[] chars = num.toCharArray();

        if (chars.length > 1) {

            outerloop:
            for (int i = 0; i < chars.length - 1; i++) {
                int maxPos = i;

                for (int j = chars.length - 1; j > i; j--) {
                    if (chars[j] > chars[maxPos]) {
                        maxPos = j;
                    }
                }

                if (i != maxPos) {
                    //swap
                    char tmp = chars[i];
                    chars[i] = chars[maxPos];
                    chars[maxPos] = tmp;

                    break outerloop;
                }
            }
        }

        return new String(chars);
    }
}
