import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;



public class CookingtheBooks {

	private  static final String CASE="Case #";
	public static void main(String[] args) {
		String file_name = args[0];
		
		URL src=StringSubstitution.class.getClassLoader().getResource(file_name);
        if (src==null)
        {
          System.out.println("Please check that file \"" + file_name
              + "\" exists and is readable.") ;
          System.exit(2) ;
        }
        File handle = new File(src.getPath());
        try 
        {
        	BufferedReader input = new BufferedReader(new FileReader(handle));
            int linenumber=Integer.valueOf(input.readLine());
            for(int i=1;i<=linenumber;i++)
            {
            	System.out.println(CASE+i+": "+tweakNumber(input.readLine()));
            }
            
        }
        catch (IOException e)
        {
		e.printStackTrace();
	    }

	}
	private static String tweakNumber(String readLine) {
		
		
		int min=9,max=0;
		int minindex=-1,maxindex=-1;
		if(readLine!=null)
		{
			int originalNumber=Integer.valueOf(readLine);
			if (originalNumber>10 && originalNumber<=999999999)
			{
				for (int i=1,n=readLine.length();i<n;i++)
				{
					char c = readLine.charAt(i);
					if(Character.isDigit(c))
					{
						int digit = Character.getNumericValue(c);
						
						if(digit<min)
						{
							min=digit;
						}
						if(digit>max && digit>0)
						{
							max=digit;
							
						}
					 }
					
				  }
				
			}
			else
			{
				return readLine+" "+readLine;
			}
		}
		StringBuilder smallestNumber=new StringBuilder(readLine);
		StringBuilder largestNumber=new StringBuilder(readLine);
		for (int i=0,n=readLine.length();i<n;i++)
		{
			char currentdigit=readLine.charAt(i);
			if(Character.getNumericValue(readLine.charAt(i))<max)
			{
				
				maxindex=readLine.lastIndexOf(Integer.toString(max));
				largestNumber.setCharAt(i, readLine.charAt(maxindex));
				largestNumber.setCharAt(maxindex,currentdigit);
				break;
				
			}
		}
		for (int i=0,n=readLine.length();i<n;i++)
		{
			char currentdigit=readLine.charAt(i);
			minindex=readLine.lastIndexOf(Integer.toString(min));
			if(min<Character.getNumericValue(readLine.charAt(i)) && minindex>i)
			{

				if(min==0 && i==0)
				{
					continue;
				}
				smallestNumber.setCharAt(i, readLine.charAt(minindex));
				smallestNumber.setCharAt(minindex, currentdigit);
				break;
			}
		}
	   
		//System.out.println(readLine+":"+min+": "+max);
		if(min==9 && max ==0)
		{
			return readLine+" "+readLine;
		}
		
		
		return smallestNumber+" "+largestNumber;
		
		
		
		
		
		
	}

}
