import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Scanner;


public class hacker1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		File fileInput = new File("/Users/chirag/Documents/workspace/Interview/src/input.txt");
		File fileOutput = new File("/Users/chirag/Documents/workspace/Interview/src/output.txt");
		
		int cases=0;
		String no =null;
		try {
			PrintWriter writer = new PrintWriter(fileOutput);
	        Scanner sc = new Scanner(fileInput);
	        if(sc.hasNextInt())
	        	cases = sc.nextInt();
	        no = sc.nextLine();
	        for(int i=1;i<=cases;i++){
	        	if (sc.hasNextLine()) {
	              no = sc.nextLine();
	              
	            writer.print("case #"+i+": "+findMin(no));
	            writer.println(" "+findMax(no));
	         }
	        }
	        sc.close();
	        writer.close();
	    } 
	    catch (FileNotFoundException e) {
	        e.printStackTrace();
	    }
		
	}
	
	public static String findMin(String n)
	{
		
		if(n.length()<=1)
		{
			return n;
		}
		if(n.length()==2 && n.charAt(1)=='0')
			return n;
		int min=n.charAt(0)-'0';
		HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
		for(int i=0;i<n.length();i++)
		{
			map.put(n.charAt(i)-'0',i);
		}
		int index=0;
		for(int i=0;i<n.length();i++)
		{
			min=n.charAt(i)-'0';
			index=i;
			int check=n.charAt(i)-'0';
			for(int j:map.keySet())
			{
				if(index==0 && j==0)
					continue;
				if(min>j && i<map.get(j))
					min=j;
			}
			if(min!=check)
				break;
			
		}
		int in=map.get(min);
		String ans="";
		if(in==index) 
			ans=n;
	    else
	    	ans=n.substring(0,index)+n.charAt(in)+n.substring(index+1,in)+n.charAt(index)+n.substring(in+1);
	    return ans;
	}
	public static String findMax(String n)
	{
		
		if(n.length()<=1)
		{
			return n;
		}
		if(n.length()==2 && n.charAt(1)=='0')
			return n;
		int max=n.charAt(0)-'0';
		HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
		for(int i=0;i<n.length();i++)
		{
			map.put(n.charAt(i)-'0',i);
		}
		int index=0;
		for(int i=0;i<n.length();i++)
		{
			max=n.charAt(i)-'0';
			index=i;
			int check=n.charAt(i)-'0';
			for(int j:map.keySet())
			{
				if(index==0 && j==0)
					continue;
				if(max<j && i<map.get(j))
					max=j;
			}
			if(max!=check)
				break;
			
		}
		int in=map.get(max);
		String ans="";
		if(in==index) 
			ans=n;
	    else
	    	ans=n.substring(0,index)+n.charAt(in)+n.substring(index+1,in)+n.charAt(index)+n.substring(in+1);
	    return ans;
	}

}
