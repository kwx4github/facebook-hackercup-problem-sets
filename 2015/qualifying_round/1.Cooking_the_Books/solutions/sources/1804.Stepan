// Happy new year! ;)

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cassert>
#include <cctype>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <string>
#include <iomanip>
#include <numeric>
#include <vector>
#include <queue>
#include <stack>
#include <deque>
#include <set>
#include <map>
#include <list>
#include <bitset>
using namespace std;

#ifdef KVARK
	#include "debug.h"
#else
	#define dbg(...) (void(1))
	#define dbgp(...) (void(1))
	#define dbg_range(...) (void(1))
#endif
#define endl "\n"



void task(){
	ios_base::sync_with_stdio(0);
	int tests;
	cin >> tests;
	for (int test = 1; test <= tests; ++test) {
		string s;
		cin >> s;
		string mx = s;
		string mn = s;
		for (int i = 0; i < s.length(); ++i)
			for (int j = i + 1; j < s.length(); ++j) {
				swap(s[i], s[j]);
				if (s[0] != '0') {
					mx = max(s, mx);
					mn = min(s, mn);
				}
				swap(s[i], s[j]);
			}
		cout << "Case #" << test << ": " << mn << ' ' << mx << endl;
	}
}

int main() {
#ifdef KVARK
	freopen("cooking_the_books.txt", "r", stdin);
	//freopen("debug.txt", "w", stderr);
	freopen("output.txt", "w", stdout);
#else
	freopen("cooking_the_books.txt", "r", stdin);
	//freopen("debug.txt", "w", stderr);
	freopen("output.txt", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif

	task();

#ifdef KVARK
	my_debug::printProcessInfo();
#endif
	return 0;
}
