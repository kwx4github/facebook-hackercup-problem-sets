package com.sagar.hacker;

import java.util.Scanner;

public class CookingBook {
	
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		String number = "";
		String min_number,max_number;
	
		for(int i=1;i<=t;i++){
			min_number = "";
			max_number = "";
			number = sc.nextLong()+"";
			if(number.equals("0")){
				min_number = max_number = number;
			}else{
				min_number = getMinNumber(number);
				max_number = getMaxNumber(number);
			}
			System.out.println("Case #"+i+":"+" "+min_number+ " " +max_number);
		}
	}
	
	public static String getMinNumber(String number){
		String min_number = "";
		if(number.charAt(0)!='1'){
			int i;
			for(i=0;i<number.length()-1;i++){
				String min_digit = findMin(number.substring(i).toCharArray(),i);
				if(!min_digit.equals("-1")){
					int last_index = number.lastIndexOf(min_digit);
					min_number = swap(number,i,last_index);
					break;
				}else{
					continue;
				}
			}
			if(i==number.length()-1){
				min_number = number;
			}
		}else{
			int i;
			for(i=1;i<number.length();i++){
				if(number.charAt(i)=='0'){
					continue;
				}else{
					break;
				}
			}
			if(i==number.length()){
				min_number = number;
			}else{
				String sub_number = number.substring(i);
				int j;
				for(j=0;j<sub_number.length()-1;j++){
					String min_digit = findMin(sub_number.substring(j).toCharArray(),1);
					if(!min_digit.equals("-1")){
						int last_index = sub_number.lastIndexOf(min_digit);
						min_number = number.substring(0, i)+swap(sub_number,j,last_index);
						break;
					}else{
						continue;
					}
				}
				if(j==sub_number.length()-1){
					min_number = number.substring(0, i)+sub_number;
				}
			}
		}
		return min_number;
	}
	
	public static String getMaxNumber(String number){
		String max_number = "";
		int i;
		for(i=0;i<number.length()-1;i++){
			String max_digit = findMax(number.substring(i).toCharArray());
			if(!max_digit.equals("-1")){
				int last_index = number.lastIndexOf(max_digit);
				max_number = swap(number,i,last_index);
				break;
			}else{
				continue;
			}
		}
		if(i==number.length()-1){
			max_number = number;
		}
		return max_number;
	}
	
	public static String findMin(char[] number,int flag){
		int first_number = Integer.parseInt(number[0]+"");
		int min_number = first_number;
		for(int i=1;i<number.length;i++){
			int num = Integer.parseInt(number[i]+"");
			if(flag==0){
				if(num!=0&&min_number>num){
					min_number = num;
				}
			}else{
				if(min_number>num){
					min_number = num;
				}
			}
		}
		if(min_number<first_number){
			return min_number+"";
		}else{
			return "-1";
		}
	}
	
	public static String findMax(char[] number){
		int first_number = Integer.parseInt(number[0]+"");
		int max_number = first_number;
		for(int i=1;i<number.length;i++){
			int num = Integer.parseInt(number[i]+"");
			if(max_number<num){
				max_number = num;
			}
		}
		if(max_number>first_number){
			return max_number+"";
		}else{
			return "-1";
		}
	}
	
	public static String swap(String number,int i,int j){
		String swap = "";
		char[] num_char = number.toCharArray();
		char temp = num_char[i];
		num_char[i] = num_char[j];
		num_char[j] = temp;
		for(char ch : num_char){
			swap += ch;
		}
		return swap;
	}

}
