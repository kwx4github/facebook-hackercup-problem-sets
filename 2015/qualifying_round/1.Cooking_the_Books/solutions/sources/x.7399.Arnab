#include <iostream>
#include <queue>
#include <vector>
using namespace std;

char * target = NULL;
class mycomparison
{
	bool reverse;
	
	public:
	mycomparison(const bool revparam = false)
	{
		reverse = revparam;
	}
	bool operator() (const int & lhs, const int & rhs) const
	{
		int lhs_index = lhs;
		char lhs_val = target[lhs];
		int rhs_index = rhs;
		char rhs_val = target[rhs];

		if (rhs_val == '0' || lhs_val == '0')
		{
			return false;
		}

		if (reverse)
		{
			return (rhs_val == lhs_val) ? (rhs_index > lhs_index) : (rhs_val > lhs_val);
		}
		else
		{
			return (rhs_val == lhs_val) ? (rhs_index > lhs_index) : (rhs_val < lhs_val);
		}
	}
};

void swap(char * target, int l, int r)
{
	int swp = target[l];
	target[l] = target[r];
	target[r] = swp;
}

int main()
{
	int T, Case;
	char a[10];

	target = a;

	cin >> T;
	for (Case = 1; Case <= T; ++Case)
	{
		priority_queue< int, vector<int>, mycomparison> Q_min(false);
		priority_queue< int, vector<int>, mycomparison> Q_max(true);

		cin >> a;
		for (int i = 0; a[i] != 0; ++i)
		{
			Q_min.push(i);
			Q_max.push(i);
		}

		int min_index = Q_min.top();
		int max_index = Q_max.top();

		cout << "Case #" << Case << ": ";
		swap(a, min_index, 0);
		cout << a << " ";
		swap(a, min_index, 0);
		swap(a, max_index, 0);
		cout << a << "\n";
	}
}