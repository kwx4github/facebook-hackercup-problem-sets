<?php

$input = file('input.txt', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);

$n = $input[0];

for ( $i = 1; $i <= $n; $i++ ) {


	$r = (string) $input[$i];

	if ( $r == 0 ) {
		$output .= "Case #{$i}: 0 0\n";
		continue;
	}

	if ( strlen($r) == 1 ) {
		$output .= "Case #{$i}: {$r} {$r}\n";
		continue;
	}


	// Find the largest integer end to start
	$largest_pos = -1;
	$largest_val = -1;
	for ($k = strlen($r)-1; $k>=0; $k--) {
		$c = $r[$k];
		if ( $c > $largest_val ) {
			$largest_val = $c;
			$largest_pos = $k;
		}
	}

	// Find first non max
	for ( $k = 0; $k < strlen($r); $k++ ) {
		if ( $r[$k] != $largest_val )
			break;
	}
	
	$s = $r;
	if ( $k < $largest_pos ) {
		$s[$largest_pos] = $r[$k];
		$s[$k]			 = $r[$largest_pos];
	}



	$skip = 0;
	do {
		$cond = false;

		if ( $skip >= strlen($r) ) { $y = $r; break; }

		$smallest_pos = 0;
		$smallest_val = 11;
		for ($k = strlen($r)-1; $k>=0; $k--) {
			$c = $r[$k];
			if ( $c < $smallest_val && $c >= $skip ) {
				$smallest_val = $c;
				$smallest_pos = $k;
			}
		}

		// Find first non min to exchange with
		for ( $k = 0; $k < strlen($r); $k++ ) {
			if ( $r[$k] != $smallest_val ) {
				if ( $k == 0 && $smallest_val == 0 ) {
					$cond = true;  $skip++; continue 2; 
				}
				break;
			}
		}
		
		$y = $r;
		if ( $k < $smallest_pos && $smallest_val != 11 ) {
			$y[$smallest_pos] = $r[$k];
			$y[$k]			  = $r[$smallest_pos];
		}


	} while ( $cond );
	
	$output .= "Case #{$i}: $y $s\n";


}

echo $output;

file_put_contents("output.txt", $output);