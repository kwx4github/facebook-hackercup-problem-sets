#include <bits/stdc++.h>

using namespace std ;

typedef long long ll; ///NOTES:int64
typedef vector<int> vi;

const double eps = 1e-8; ///NOTES:eps
const int dx[] = {1, 0, -1, 0};
const int dy[] = {0, 1, 0, -1};
const double pi = acos(-1.0); ///NOTES:pi
const int MAX = 1000000000 ; /// 10^9


#define SZ(x)           (int)x.size()
#define ALL(x)          (x).begin()                                                                                                                                                                                                                                                                                                                                                                                                                                                               ,(x).end()
#define ALLR(x)         (x).rbegin(),(x).rend()
#define PB( x )         push_back(x)
#define MP(x , y)           make_pair(x,y)
#define rep(i,st,en) for(int i=st ; i< en; i++)
#define repR(i,st,en) for(int i=st;i>=en ; i--)

///-----------*  Topcoder Contest class  *-----------------///////////////////

class CCipher
{
public :


};





///----------------------  Cooking the Books problem  ------------------------///
int main()
{
 freopen("cooking_the_books.txt" , "rt",stdin);
 freopen("cooking_the_books_output.txt", "wt", stdout);

int T ;
while ( cin >> T  )
{

    rep(t,1,T+1)
    {

       string n ;
       cin >> n ;

       string mxNumber = n , mnNumber = n  ;

       ///get max number
       rep(i,0,SZ(mxNumber))
       {
           int mx = i ;
           repR(j,SZ(mxNumber)-1 , i )
           {
               if(mxNumber[mx] < mxNumber[j])
               {
                   mx = j ;
               }
           }

           if(mx != i && mxNumber[mx] > mxNumber[i])
           {
               swap(mxNumber[i] , mxNumber[mx]);
               break;
           }
       }

       ///get min number
       int mn = 0 ;
       rep(i,0,SZ(mnNumber))
       {
           if(mnNumber[i] <= mnNumber[mn] && mnNumber[i] != '0' )
           {
               mn = i ;
           }
       }

       if( mn != 0 && mnNumber[mn] < mnNumber[0])
       {
           swap( mnNumber[0], mnNumber[mn]);
       }
       else  /// check the remaining part
       {
           rep(i,1,SZ(mnNumber))
           {
               mn = i;
               rep(j,i,SZ(mnNumber))
               {
                   if(mnNumber[j] <= mnNumber[mn])
                   {
                       mn = j;
                   }
               }

               if(mn != i & mnNumber[mn] < mnNumber[i])
               {
                   swap(mnNumber[mn] , mnNumber[i]) ;
                   break;
               }
           }
       }

       cout <<"Case #" << t << ": " << mnNumber  << ' ' <<  mxNumber << endl ;


    }

    ///end of file loop
}


return 0;
}
