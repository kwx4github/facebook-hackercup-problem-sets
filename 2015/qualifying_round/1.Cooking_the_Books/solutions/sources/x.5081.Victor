import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;

public class CookingTheBooks {

	public static void main(String[] args) {
		try {
			String[] nums = read("/Users/victor/Downloads/cooking_the_books.txt");
			for(int x = 0; x< nums.length; x++){
				solve(nums[x], x+1);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public static void solve(String num, int pos) {
		if(Integer.parseInt(num) == 0){
			System.out.println("Case #" + pos + ": 0 0" );
			return;
		}
		char min = '9';
		char max = '0';
		for (char c : num.toCharArray()) {
			if (c < min && c > '0') {
				min = c;
			}

			if (c > max) {
				max = c;
			}
		}
		char[] a1 = num.toCharArray();
		char[] a2 = num.toCharArray();
		int indexSmall = num.lastIndexOf(min);
		int indexLarge = num.lastIndexOf(max);
		//System.out.println("min " + min + " index: " + indexSmall);
		a1[0] = a1[indexSmall];
		a1[indexSmall] = num.charAt(0);
		a2[0] = a2[indexLarge];
		a2[indexLarge] = num.charAt(0);

		String small = String.copyValueOf(a1);
		// swap the smallest from the most right position 2111 -> 1211 rather
		// than 1112 8911 -> 1918 1981
		String large = String.copyValueOf(a2);
		System.out.println("Case #" + pos + ": " + small + " " + large);
	}

	public static String[] read(String path) throws Exception {
		File file = new File(path);
		BufferedReader br = new BufferedReader(new FileReader(file));
		int size = Integer.parseInt(br.readLine());
		String[] result = new String[size];
		int count = 0;
		String line;
		while ((line = br.readLine()) != null) {
			result[count++] = line; 
		}
		br.close();
		return result;
	}

}
