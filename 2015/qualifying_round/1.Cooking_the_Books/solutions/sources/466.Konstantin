
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
using namespace std;

int t, n;
int a, b;
vector<int> digits;

vector<int> to_digits(int n) {
    vector<int> result;
    while (n != 0) {
        result.push_back(n % 10);
        n = n / 10;
    }
    return result;
}

int from_digits(const vector<int>& digits) {
    int n = 0;
    for (int i = digits.size()-1; i >= 0; i--) {
        n = (n * 10) + digits[i];
    }
    return n;
}

void solve() {
    if (n == 0) {
        a = b = 0;
        return;
    }

    digits = to_digits(n);
    a = b = n;
    for (int i = 0; i < digits.size()-1; i++)
    for (int j = i+1; j < digits.size(); j++) {
        if (j == digits.size()-1 && digits[i] == 0) continue;
        vector<int> newdigits = digits;
        swap(newdigits[i], newdigits[j]);
        int v = from_digits(newdigits);
        if (v < a) a = v;
        if (v > b) b = v;
    }
}


int main() {
    //ostream& fout = cout;
    ofstream fout ("test.out");
    ifstream fin ("cooking_the_books.txt");

    fin >> t;
    for (int i = 0; i < t; i++) {
        fin >> n;
        solve();
        fout << "Case #" << (i+1) << ": " << a << " " << b << "\n";
    }
    return 0;
}
