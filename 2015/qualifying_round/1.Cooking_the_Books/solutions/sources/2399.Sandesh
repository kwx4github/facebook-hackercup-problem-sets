#include "stdio.h"
#include "algorithm"

long long int swap_digits(long long int n, int first, int second, int digits[], int no_digits)
{
	if(first == 0 && digits[second] == 0)
		return n;
	long long int pow1 = 1, pow2 = 1;
	for(int i = 1; i < (no_digits - first); ++i)
		pow1 *= 10;
	for(int i = 1; i < (no_digits - second); ++i)
		pow2 *= 10;
	long long int ans = n - (digits[first] * pow1) - (digits[second] * pow2) + (digits[first] * pow2) + (digits[second] * pow1);
	//printf("%lld\n", ans);
	return ans;
}

int main()
{
	int t = 0;
	scanf("%d", &t);
	for(int ii = 1; ii <= t; ++ii)
	{
		int digits[10] = {0};
		long long int n = 0;
		scanf("%lld", &n);
		int no_digits = 0;
		long long int max = n, min = n;
		long long int temp = n;
		while(temp)
		{
			digits[no_digits++] = temp % 10;
			temp /= 10; 
		}
		std::reverse(&digits[0], &digits[no_digits]);
		for(int i = 0; i < no_digits; ++i)
		{
			for(int j = i+1; j < no_digits; ++j)
			{
				temp = swap_digits(n, i, j, digits, no_digits);
				if(temp > max)
					max = temp;
				else if(temp < min)
						min = temp;
			}
		}
		printf("Case #%d: %lld %lld\n", ii, min, max);
	}
	return 0;
}
