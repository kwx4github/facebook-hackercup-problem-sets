#include <algorithm>
#include <bitset>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <iomanip>
#include <iterator>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <string.h>
#include <utility>
#include <vector>
using namespace std;

char buf[10], small[10], large[10], tmp[10];

int swap(int dst, int res, char buff[]){
	char c= buff[dst];
	buff[dst]=buff[res];
	buff[res]=c;
	return 0;
}

int solve(){
	int l = strlen(buf);
	memcpy(small,buf,l);
	memcpy(large,buf,l);

	for(int i=0;i<l;i++){
		for(int j=i+1;j<l;j++){
			memcpy(tmp,buf,l);
			swap(i,j,tmp);
			if(memcmp(tmp,large,sizeof(large))>0 && tmp[0]!='0')
				memcpy(large,tmp,l);
			if(memcmp(tmp,small,sizeof(small))<0 && tmp[0]!='0')
				memcpy(small,tmp,l);
			memset(tmp,0,sizeof(tmp));
		}
	}
	return 0;
}

int main() {

	freopen("q1_in.txt","r",stdin);
	freopen("out.txt","w",stdout);

	int T, n;
	scanf("%d\n",&T);
	for(int i=1;i<=T;i++){
		gets(buf);
		if(strlen(buf)>1){
			solve();
			printf("Case #%d: %s %s\n", i,small,large);
		}else{
			printf("Case #%d: %s %s\n", i,buf,buf);
		}
		memset(buf,0,sizeof(buf));
		memset(small,0,sizeof(small));
		memset(large,0,sizeof(large));

	}

	return 0;
}