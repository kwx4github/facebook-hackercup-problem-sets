#include<stdio.h>
#include<stdlib.h>
#include<string.h>

void part(char in[],int first,int last);
void sort(char in[],int first,int last);

main()
{
    FILE *fr = fopen("cooking_the_books.txt","r");
    FILE *fw = fopen("output.txt","w");

    int ncase;
    fscanf(fr,"%d",&ncase);

    int icase;
    int i,j,k,l;
    char in[11];
    char inmax[11];
    char inmin[11];
    int inlen;
    char temp;
    char findtemp;
    int status;
    for(icase=1;icase<=ncase;icase++)
    {
        fscanf(fr,"%s",in);

        inlen=strlen(in);

        strcpy(inmax,in);
        strcpy(inmin,in);

        part(in,0,inlen-1);
        /*printf("sort : %s\n",in);
        printf("premax : %s\n",inmax);
        printf("premin : %s\n",inmin);*/

        //max
        status=0;
        for(i=0;i<inlen;i++)
        {
            if(inmax[i]<in[i])
            {
                status=1;
                temp=inmax[i];
                findtemp=in[i];
                inmax[i]=in[i];
                //printf("%c %c %c %s\n",temp,findtemp,inmax[i],inmax);
                break;
            }
        }
        if(status==1)
        {
            for(i=inlen-1;i>=0;i--)
            {
                if(inmax[i]==findtemp)
                {
                    inmax[i]=temp;
                    break;
                }
            }
        }
        //printf("max = %s\n",inmax);

        //printf("sort = %s\n",in);
        int mid=inlen/2;
        for(i=0;i<mid;i++)
        {
            temp=in[i];
            in[i]=in[inlen-1-i];
            in[inlen-1-i]=temp;
        }
        //printf("sort = %s\n",in);
        //min
        status=0;
        int zerocheck=0;
        for(i=0;i<inlen;i++)
        {
            if(in[i]=='0')
            {
                zerocheck=1;
                break;
            }
        }

        if(zerocheck==0)
        {
            for(i=0;i<inlen;i++)
            {
                if(inmin[i]>in[i])
                {
                    //printf("1\n");
                    status=1;
                    temp=inmin[i];
                    findtemp=in[i];
                    inmin[i]=in[i];
                    break;
                }
            }
        }
        else
        {
            for(i=0;i<inlen;i++)
            {
                if(in[i]!='0')
                {
                    if(inmin[0]==in[i])
                    {
                        //printf("2\n");
                        for(j=1;j<inlen;j++)
                        {
                            if(inmin[j]!='0')
                            {
                                //printf("21\n");
                                char low=inmin[j];
                                for(k=inlen-1;k>j;k--)
                                {
                                    if(inmin[k]<low)
                                    {
                                        low=inmin[k];
                                    }
                                }
                                if(low!=inmin[j])
                                {
                                    status=1;
                                    temp=inmin[j];
                                    findtemp=low;
                                    inmin[j]=low;
                                }
                            }
                            if(status==1) break;
                        }
                    }
                    else
                    {
                        //printf("3\n");
                        status=1;
                        temp=inmin[0];
                        findtemp=in[i];
                        inmin[0]=in[i];
                        break;
                    }
                }
                if(status!=0) break;
            }
        }

        if(status==1)
        {
            for(i=inlen-1;i>=0;i--)
            {
                if(inmin[i]==findtemp)
                {
                    inmin[i]=temp;
                    break;
                }
            }
        }

        //printf("min = %s\n",inmin);
        fprintf(fw,"Case #%d : %s %s\n",icase,inmin,inmax);
    }

}

void part(char in[],int first,int last)
{
    if(first<last)
    {
        int mid=(first+last)/2;
        part(in,first,mid);
        part(in,mid+1,last);
        sort(in,first,last);
    }
}

void sort(char in[],int first,int last)
{
    int left,right;
    int mid=(first+last)/2;
    left=first;
    right=mid+1;

    char temp[last-first+1];
    int count=0;
    while(left<=mid&&right<=last)
    {
        if(in[left]>in[right])
        {
            temp[count]=in[left];
            left++;
            count++;
        }
        else
        {
            temp[count]=in[right];
            right++;
            count++;
        }
    }

    if(left>mid&&right<=last)
    {
        while(right<=last)
        {
            temp[count]=in[right];
            right++;
            count++;
        }
    }

    if(left<=mid&&right>last)
    {
        while(left<=mid)
        {
            temp[count]=in[left];
            left++;
            count++;
        }
    }

    int i;
    count=0;
    for(i=first;i<=last;i++)
    {
        in[i]=temp[count];
        count++;
    }

    //printf("from: %d to: %d\t %s",first,last,in);
    //printf("\n");
}
