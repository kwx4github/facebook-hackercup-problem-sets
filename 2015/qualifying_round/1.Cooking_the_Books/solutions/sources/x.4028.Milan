#include <iostream>
#include <cstdio>
#include <cmath>

using namespace std;

int T,t,n,digits,d[10],m,i,temp;

inline int find_min(int l)
{
	int min_pos=l;
	for(int i=l;i<digits;++i)
		if(d[i] && d[i]<d[min_pos])
			min_pos=i;
	return min_pos;
}

inline int find_max(int l)
{
	int max_pos=l;
	for(int i=digits-1;i>=l;--i)
		if(d[i]>d[max_pos])
			max_pos=i;
	return max_pos;
}

int main()
{
	cin >> T;
	for(t=1;t<=T;++t)
	{
		cin >> n;
		if(n)
		{
			digits=log10(n)+1;
			for(i=digits-1,m=n;i>=0;--i)
			{
				d[i]=m%10;
				m/=10;
			}
            for(i=0;i<digits;++i)
			{
				m=find_min(i);
				if(i!=m)
				{
                    temp=d[i];
                    d[i]=d[m];
                    d[m]=temp;
                    break;
				}
			}
			cout << "Case #" << t << ": ";
			for(i=0;i<digits;++i)
				cout << d[i];
			cout << " ";
			for(i=digits-1,m=n;i>=0;--i)
			{
				d[i]=m%10;
				m/=10;
			}
            for(i=0;i<digits;++i)
			{
				m=find_max(i);
				if(i!=m)
				{
                    temp=d[i];
                    d[i]=d[m];
                    d[m]=temp;
                    break;
				}
			}
			for(i=0;i<digits;++i)
				cout << d[i];
			cout << endl;
		}
		else
			cout << "Case #" << t << ": " << 0 << " " << 0 << endl;
	}
	return 0;
}
