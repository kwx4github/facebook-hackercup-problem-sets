#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
	// your code goes here
	int T, N, minval, maxval;
	cin>>T;
	for(int j=0; j<T; j++){
		cin>>N;
		if(N<12){
			minval=N;
			maxval=N;
		}
		else{
			vector<int> digits;
			bool minfound=false, maxfound=false;
			minval=N;
			maxval=N;
			while(N>0){
				digits.push_back(N%10);
				N/=10;
			}
			int n=digits.size();
			
			for(int k=1; k<n; k++){
				int mymin=digits[n-k], minpos=n-k, mymax=digits[n-k], maxpos=n-k;
			
				for(int i=n-k-1; i>=0; i--){
					if(digits[i]<=mymin && !minfound){
						if(k==1){
							if(digits[i]!=0){
									mymin=digits[i];
									minpos=i;
							}
						}
						else{
							mymin=digits[i];
							minpos=i;
						}
					}
					if( digits[i]>=mymax && !maxfound){
						mymax=digits[i];
						maxpos=i;
					}
				}
				if(digits[minpos]!=digits[n-k]){
					swap(digits[n-k], digits[minpos]);
					minval=0;
					for(int i=n-1; i>=0; i--){
						minval=minval*10 + digits[i];
					}
					swap(digits[n-k], digits[minpos]);
					minfound=true;
				}
				if(digits[maxpos]!=digits[n-k]){
					swap(digits[n-k], digits[maxpos]);
					maxval=0;
					for(int i=n-1; i>=0; i--){
						maxval=maxval*10 + digits[i];
					}
					swap(digits[n-k], digits[maxpos]);					
					maxfound=true;
				}
				if(minfound && maxfound)
					break;
			}
		}
		cout<<"Case #"<<j+1<<": "<<minval<<" "<<maxval<<endl;
	}
		
	return 0;
}
