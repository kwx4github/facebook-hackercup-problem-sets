package arupratan_java;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;

public class CookingBooks {

	private static void swap(List<Integer> num, int i, int j) {
		int temp = num.get(i);
		num.set(i, num.get(j));
		num.set(j, temp);
	}

	private static long getNumber(List<Integer> num) {
		long result = 0;
		for (int i = num.size() - 1; i >= 0; i--) {
			result = result * 10 + num.get(i);
		}
		//System.out.println(num + " " + result);
		return result;
	}

	private static long findMin(List<Integer> num, long n) {
		//System.out.println(num + "here3");
		if (num.size() == 1)
			return n;
		else {
			long min = 10;
			int index = -1;
			for (int i = 0; i < num.size() - 1; i++) {
				if (num.get(i) != 0 && min > num.get(i)) {
					min = num.get(i);
					index = i;
				}
			}
			//System.out.println(min + " " + index);
			if (min == 10)
				return n;
			if (num.get(index) < num.get(num.size() - 1)) {
				swap(num, index, num.size() - 1);
				//System.out.println(n + " " + num + " here1");
				return getNumber(num);
			} else {
				//System.out.println(n + " " + num + " here2");
				return n;
			}
		}
	}

	private static long findMax(List<Integer> num, long n) {
		if (num.size() == 1)
			return n;
		else {
			long max = -1;
			int index = -1;
			for (int i = 0; i < num.size() - 1; i++) {
				if (num.get(i) != 0 && max < num.get(i)) {
					max = num.get(i);
					index = i;
				}
			}
			if (max == -1)
				return n;
			if (num.get(index) > num.get(num.size() - 1)) {
				swap(num, index, num.size() - 1);
				//System.out.println(n + " " + num);
				return getNumber(num);
			} else {
				//System.out.println(n + " " + num);
				return n;
			}
		}
	}

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		FileReader fr = new FileReader(
				"/home/arupratan/Downloads/HackerCup/cooking_the_books.txt");
		FileWriter fw = new FileWriter(
				"/home/arupratan/Downloads/HackerCup/cooking_the_books_my_output.txt");
		BufferedReader br = new BufferedReader(fr);
		int tc = Integer.parseInt(br.readLine());
		for (int i = 0; i < tc; i++) {
			long n = Long.parseLong(br.readLine());
			List<Integer> num = new ArrayList<Integer>();
			long temp = n;
			int sign = 1;
			if (temp < 0) {
				temp = -temp;
				sign = -1;
			}
			while (temp > 0) {
				num.add((int) (temp % 10));
				temp = temp / 10;
			}
			//System.out.println(n + " " + num);
			String buffer = "";
			List<Integer> num1 = new ArrayList<Integer>(num);
			List<Integer> num2 = new ArrayList<Integer>(num);
			// findMin(num1, n);
			// findMax(num2, n);
			// System.out.println(sign + " " + findMax(num1, n));
			if (n >= 0) {
				buffer = "Case #" + (i + 1) + ": " + findMin(num1, n) + " "
						+ findMax(num2, n);
			} else {
				buffer = "Case #" + (i + 1) + ": " + sign * findMax(num1, -n)
						+ " " + sign * findMin(num2, -n);
			}
			fw.write(buffer);
			if (i != tc - 1)
				fw.write("\n");
		}
		System.out.println("Done !!!");
		fr.close();
		fw.close();
	}

}
