#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;
typedef long long LL;
const LL MOD = 1e9 + 7;
const int N = 15;


vector <int> V;
char s[N];

int a[N], b[N];

int main() {
//    freopen("in.txt", "r", stdin);
//
//    freopen("out.txt", "w", stdout);
    int cases;
    scanf ("%d", &cases);
    for (int cas = 1; cas <= cases; cas ++) {

        V.clear();
        scanf ("%s", s);
        int len = strlen(s);
        LL num = 0;
        LL level = 1;
        for (int i = 0; i < len; i++) {
            a[i] = s[i] - '0';
            b[i] = s[i] - '0';
            V.push_back(a[i]);
            num = num * 10LL + a[i];
            level *= 10;
        }
        level /= 10LL;
        LL maxi = num, mini = num;

        for (int i = 0; i < len; i++) {
            for (int j = i + 1; j < len; j++) {
                LL tmp = 0;
                for (int k = 0; k < len; k++) {
                    if (k == j) {
                        tmp = tmp * 10LL + V[i];
                        continue;
                    }
                    if (k == i) {
                        tmp = tmp * 10LL + V[j];
                        continue;
                    }
                    tmp = tmp * 10LL + V[k];
                }
                if (tmp < mini && (num == 0 || tmp >= level)) {

                    int key = a[i];
                    a[i] = a[j];
                    a[j] = key;
                    mini = tmp;
                }
                if (tmp > maxi) {

                    int key = a[i];
                    a[i] = a[j];
                    a[j] = key;
                    maxi = tmp;
                }

            }
        }
        printf ("Case #%d: ", cas);
        printf ("%I64d %I64d\n", mini, maxi);

    }

    return 0;
}
