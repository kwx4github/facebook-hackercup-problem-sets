#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
  int T;
  cin >> T;
  for (int c = 0; c < T; c++) {
    string s;
    cin >> s;

    // Sort digits to find the 'ideal' smallest/largest.
    string ideal_smallest = s;
    sort(ideal_smallest.begin(), ideal_smallest.end());
    string ideal_largest = ideal_smallest;
    reverse(ideal_largest.begin(), ideal_largest.end());

    // Handle leading zero case for the ideal smallest.
    if (ideal_smallest[0] == '0') {
       for (int i = 0; i < ideal_smallest.length(); i++) {
         if (ideal_smallest[i] != '0') {
            swap(ideal_smallest[0], ideal_smallest[i]);
            break;
         }
       }
    }

    string largest = s;
    for (int d = 0; d < s.length(); d++) {
      if (s[d] != ideal_largest[d]) {
         int n = s.length() - 1;
         for (int i = n - 1; i > d; i--) {
            if (s[i] > s[n]) {
               n = i;
            }
         }
         swap(largest[d], largest[n]);
         break;
      }
    }
    
    string smallest = s;
    for (int d = 0; d < s.length(); d++) {
      if (s[d] != ideal_smallest[d]) {
         int n = s.length() - 1;
         for (int i = n - 1; i > d; i--) {
            if (s[i] < s[n]) {
               if (!(d == 0 && s[i] == '0')) {
                 n = i;
               }
            }
         }
         swap(smallest[d], smallest[n]);
         break;
      }
    }
    cout << "Case #" << c + 1 << ": ";
    cout << smallest << " " << largest << endl;
  }


  return 0;
}
