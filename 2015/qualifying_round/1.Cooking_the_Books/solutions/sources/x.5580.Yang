package pracice;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.Arrays;

public class fbTest {
	
	class record {
		int val = -1;
		int idx = -1;
		public record(int _val, int _idx) {
			val = _val;
			idx = _idx;
		}
	}
	
	public int[] findMinMax(String nums) {
		int[] num = new int[nums.length()];
		for (int i = 0; i < nums.length(); i++) {
			num[i] = nums.charAt(i) - '0';
		}
		record[] recordsMin = new record[num.length];
		record[] recordsMax = new record[num.length];
		recordsMin[num.length-1] = new record(num[num.length-1],num.length-1);
		recordsMax[num.length-1] = new record(num[num.length-1],num.length-1);
		for (int i = num.length-2; i >= 0; i--) {
			if (num[i] < recordsMin[i+1].val)
				recordsMin[i] = new record(num[i], i);
			else
				recordsMin[i] = recordsMin[i+1];
			if (num[i] > recordsMax[i+1].val)
				recordsMax[i] = new record(num[i], i);
			else
				recordsMax[i] = recordsMax[i+1];
		}
		int[] rst = new int[2];
		int[] numMin = num.clone();
		
		for (int i = 0; i < num.length-1; i++) {
			if (num[i] > recordsMin[i].val) {
				if (recordsMin[i].val == 0 && i == 0)
					continue;
				numMin[i] = num[recordsMin[i].idx];
				numMin[recordsMin[i].idx] = num[i];
				break;
			}
		}
		
		int[] numMax = num.clone();
		for (int i = 0; i < num.length-1; i++) {
			if (num[i] < recordsMax[i].val) {
				numMax[i] = num[recordsMax[i].idx];
				numMax[recordsMax[i].idx] = num[i];
				break;
			}
		}
		for (int val : numMin)
			rst[0] = rst[0]*10+val; 
		for (int val : numMax)
			rst[1] = rst[1]*10+val;
		return rst;
	}
	
	public void readAndWrite(String file, String out) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader(file));
		String line;
		BufferedWriter writer = new BufferedWriter( new FileWriter( out));
		int counter = -1;
		while ((line = br.readLine()) != null) {
			if (counter++ == -1)
				continue;
		   int[] rst = findMinMax(line);
		   StringBuilder str = new StringBuilder();
		   str.append("Case #").append(counter).append(": ").append(rst[0]).append(" ").append(rst[1]).append("\r\n");
		   writer.write(str.toString());
		}
		br.close();
		writer.close( );
	}
	

	public void readFile(String file) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader(file));
		String line;
		while ((line = br.readLine()) != null) {
		   // process the line.
		}
		br.close();
		
	}
	
	public void writeFile(String file, String string) {
		BufferedWriter writer = null;
		try
		{
		    writer = new BufferedWriter( new FileWriter( file));
		    writer.write( string);

		}
		catch ( IOException e)
		{
		}
		finally
		{
		    try
		    {
		        if ( writer != null)
		        writer.close( );
		    }
		    catch ( IOException e)
		    {
		    }
		}
	}

}
