#include <cstdio>
#include <cstring>
int main()
{
    int T = 0;
    char number[10];

    scanf("%d", &T);
    
    for (int i=0; i<T; i++) {
        scanf("%s", number);

        printf("Case #%d: ", i+1);

        int max_idx = -1;
        int min_idx = -1;
        char max = '0' - 1;
        char min = '9' + 1;
        
        for (int j=0; j<strlen(number); j++) {
            if (number[j] == '0')
                continue;
            
            if (number[j] <= min) {
                int k = 0;
                for (; k<j; k++) {
                    if (number[k] > number[j])
                        break;
                }

                if (k < j) {
                    min = number[j];
                    min_idx = j;
                }
            }

            if (number[j] >= max) {
                int k = 0;
                for (; k<j; k++) {
                    if (number[k] < number[j])
                        break;
                }
                if (k < j) {
                    max = number[j];
                    max_idx = j;
                }
            }
        }
        //printf("%d %c | %d %c\n", min_idx, min, max_idx, max);
        char max_number[10];
        char min_number[10];
        strncpy(max_number, number, 10);
        strncpy(min_number, number, 10);

        if (max_idx > 0) {
            for (int j=0; j<max_idx; j++) {
                if (number[j] >= max) {
                    continue;
                } else {
                    max_number[j] = number[max_idx];
                    max_number[max_idx] = number[j];
                    break;
                }
            }
        }
        
        if (min_idx > 0) {
            for (int j=0; j<min_idx; j++) {
                if (number[j] <= min){
                    continue;
                } else {
                    min_number[j] = number[min_idx];
                    min_number[min_idx] = number[j];
                    break;
                }
            }
        }

        printf("%s %s\n", min_number, max_number);
    }

    return 0;
}
