import java.util.*;
import java.io.*;

public class CookingTheBooks {

	public static void main(String[] args) throws IOException{
		
		BufferedReader f = new BufferedReader(new FileReader("cooking_the_books.txt"));
		int T = Integer.parseInt(f.readLine());
		int[] numbers = new int[T];
		for (int i = 0; i < T; i++) {
			numbers[i] = Integer.parseInt(f.readLine());
		}
		f.close();
		
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("CookingTheBooksOut.txt")));
		for (int i = 0; i < T; i++) {
			if (numbers[i] == 0) {
				out.println("Case #" + (i+1) + ": 0 0");
			}
			else {
				Integer[] rep = rep(numbers[i]);
				ArrayList<Integer[]> possible = new ArrayList<Integer[]>();
				for (int j = 0; j < rep.length; j++) {
					for (int k = j; k < rep.length; k++) {
						if (j != 0 || rep[k] != 0) {
							Integer[] temp = new Integer[rep.length];
							for (int m = 0; m < rep.length; m++) {
								temp[m] = rep[m];
								temp[j] = rep[k];
								temp[k] = rep[j];
							}
							possible.add(temp);
						}
					}
				}
				Integer[] min = possible.get(0);
				Integer[] max = possible.get(0);
				for (Integer[] j : possible) {
					if (compare(min, j) > 0) {
						min = j;
					}
					else if (compare(max, j) < 0) {
						max = j;
					}
				}
				out.print("Case #" + (i+1) + ": ");
				for (Integer j : min) {
					out.print(j);
				}
				out.print(" ");
				for (Integer j : max) {
					out.print(j);
				}
				out.println();
			}
		}
		out.close();
		
		
		
		
		
	}
	
	private static int compare(Integer[] a, Integer[] b) {
		for (int i = 0; i < a.length; i++) {
			if (a[i] < b[i]) {
				return -1;
			}
			if (a[i] > b[i]) {
				return 1;
			}
		}
		return 0;
	}
	
	private static Integer[] rep(int a) {
		ArrayList<Integer> temp = new ArrayList<Integer>();
		while (a > 0) {
			temp.add(a%10);
			a /= 10;
		}
		Integer[] ret = new Integer[temp.size()];
		for (int i = 0; i < temp.size(); i++) {
			ret[i] = temp.get(temp.size()-1-i);
		}
		return ret;
	}

}
