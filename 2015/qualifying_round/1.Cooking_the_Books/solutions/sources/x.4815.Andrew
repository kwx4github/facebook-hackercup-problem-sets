#!/usr/bin/env python3

""" Cooking the Books

Facebook Hacker Cup 2015 qualification round question 1.

"""

import sys

def cook_high(digits):
    """ Return the max possible arrangement with only one swap."""

    # Nothing to swap if only one digit exists
    if len(digits) == 1:
        return digits

    swap_candidate = max(digits[1:])
    if digits[0] < swap_candidate:
        index = len(digits[1:]) - digits[1:][::-1].index(swap_candidate)
        digits[0], digits[index] = digits[index], digits[0]
        return digits
    else:
        return [digits[0]] + cook_high(digits[1:])

def cook_low(digits):
    """ Return the min possible arrangement with only one swap."""

    # Nothing to swap if only one digit exists
    if len(digits) == 1:
        return digits

    swap_candidate = min(digits[1:])
    if swap_candidate and digits[0] > swap_candidate:
        index = len(digits[1:]) - digits[1:][::-1].index(swap_candidate)
        digits[0], digits[index] = digits[index], digits[0]
        return digits
    else:
        return [digits[0]] + cook_low(digits[1:])

    return digits

def cook(case):
    """Work out a best and worst case."""
    digits = [int(d) for d in case.rstrip()]
    high = ''.join(str(d) for d in cook_high(digits))

    # Reset digits after high cook
    digits = [int(d) for d in case.rstrip()]
    low = ''.join(str(d) for d in cook_low(digits))

    return low, high

if __name__ == '__main__':
    if len(sys.argv) > 1:
        LINES = open(sys.argv[1], 'r').readlines()[1:]
    else:
        LINES = sys.stdin.readlines()[1:]
    for i, line in enumerate(LINES):
        min_value, max_value = cook(line)
        print('Case #%d: %s %s' % (i+1, min_value, max_value))
