#include<ctime>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<string>
#include<vector>
#include<sstream>
#include<iostream>
#include<algorithm>
#include<queue>
#include<stack>
#include<set>
#include<map>
#include<numeric>
#include<cmath>
#include<locale>
using namespace std;
#define all(x) (x).begin(),(x).end()
#define sz(a) (int((a).size()))
typedef istringstream iss; typedef ostringstream oss; typedef long long lli;

vector<int> getLargest(vector<int> v)
{
    for(int i=0;i<sz(v);i++)
    {
        int index = i;
        for(int j=i+1;j<sz(v);j++) if(v[j]>v[index])
        {
            index = j;
        }
        if(index != i)
        {
            swap(v[i],v[index]);
            return v;
        }
    }
    return v;
}

vector<int> getSmallest(vector<int> v)
{
    for(int i=0;i<sz(v);i++)
    {
        int index = i;
        for(int j=i+1;j<sz(v);j++) if(v[j]<v[index])
        {
            if(!i && !v[j]) continue;
            index = j;
        }
        if(index != i)
        {
            swap(v[i],v[index]);
            return v;
        }
    }
    return v;
}

void print(const vector<int>& v)
{
    for(int i=0;i<sz(v);i++) cout<<v[i];
}

vector<int> getDigits(lli n)
{
    vector<int> rv;
    if(n==0)
    {
        rv.push_back(0);
        return rv;
    }
    while(n)
    {
        rv.push_back(n%10);
        n/=10;
    }
    reverse(all(rv));
    return rv;
}

int main()
{
    long long T,N;
    cin>>T;
    int cn=0;
    while(T--)
    {
        cin>>N;
        vector<int> digits = getDigits(N);
        cn++;
        printf("Case #%d: ",cn);
        print(getSmallest(digits));
        printf(" ");
        print(getLargest(digits));
        printf("\n");
    }

}
