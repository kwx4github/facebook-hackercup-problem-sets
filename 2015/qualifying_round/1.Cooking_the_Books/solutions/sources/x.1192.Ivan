#include <iostream> 
#include <cstdio> 
#include <fstream>
#include <functional>
#include <set> 
#include <map> 
#include <vector> 
#include <queue> 
#include <stack> 
#include <cmath> 
#include <algorithm> 
#include <cstring> 
#include <bitset> 
#include <ctime> 
#include <sstream>
#include <stack> 
#include <cassert> 
#include <list> 
#include <deque>
//#include <unordered_set> 
using namespace std;
typedef long long li;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pi;

#define mp make_pair 
#define pb push_back
#define y1 botva
#define all(s) s.begin(), s.end() 
void solve();

#define NAME "changemeplease"
int main() {
#ifdef YA 
	//cerr << NAME << endl;
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout); 
	clock_t start = clock();
#else 
	//freopen("input.txt", "r", stdin); 
	//freopen("output.txt", "w", stdout); 
#endif 
	ios_base::sync_with_stdio(false);
	cout << fixed;
	cout.precision(10);
	int t = 1;
	cin >> t;  
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
#ifdef YA 
	//cout << "\n\n\nTime:" << ((clock() - start) / 1.0 / CLOCKS_PER_SEC);
#endif 
	return 0;
}

string max(string s) {
	for (int i = 0; i < s.size() - 1; ++i) {
		int id = i + 1;
		for (int j = i + 1; j < s.size(); ++j) {
			if (s[id] < s[j]) {
				id = j;
			}
		}
		if (s[id] > s[i]) {
			swap(s[id], s[i]);
			return s;
		}
	}
	return s;
}

string min(string s) {
	for (int i = 0; i < s.size(); ++i) {
		int id = -1;
		for (int j = i + 1; j < s.size(); ++j) {
			if (s[j] < s[i] && !(i == 0 && s[j] == '0') && (id == -1 || s[id] > s[j])) {
				id = j;
			}
		}
		if (id != -1) {
			swap(s[id], s[i]);
			return s;
		}
	}
	return s;
}

void solve() {
	string s;
	cin >> s;
	cout << min(s) << " " << max(s) << endl;
}