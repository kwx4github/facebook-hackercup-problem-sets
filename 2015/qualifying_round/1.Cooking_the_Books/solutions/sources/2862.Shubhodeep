#include <iostream>
#include <string>
#include <cstdlib>
#include <fstream>
#include <vector>
#include <list>

using namespace std;

int main()
{
    int i, j, k, temp, num_tests;
    vector<int> m;
    vector<int> digits;
    list<int>::iterator p;
    vector<int> max_num, min_num;

    ifstream in("file.in");
    if(!in) {
        cout << "Cannot open input file\n";
        return 1;
    }

    j = 0;

    in >> num_tests;

    while (num_tests--) {
        in >> i;
        m.push_back(i);
    }

    for (i = 0; i < m.size(); i++) {
        digits.clear();
        while (m[i] > 0) {
            j = m[i] % 10;
            m[i] = m[i] / 10;
            digits.push_back(j);
        }
        max_num = min_num = digits;

        int found = -1;
        int swapped = 0;
        for (j = max_num.size() - 1; j > 0; j--) {
            found = j;
            for (k = j - 1; k >= 0; k--) {
                if ((j == (max_num.size() - 1)) && (max_num[k] == 0))
                    continue;
                if (max_num[k] > max_num[found]) {
                    found = k;
                }
                if ((found != j) && (max_num[k] == max_num[found]))
                    found = k;
            }
            if (found != j) {
                swapped = 1;
                break;
            }
        }
        if (swapped == 1) {
            temp = max_num[j];
            max_num[j] = max_num[found];
            max_num[found] = temp;
        }

        found = -1;
        swapped = 0;
        for (j = min_num.size() - 1; j > 0; j--) {
            found = j;
            for (k = j - 1; k >= 0; k--) {
                if ((j == (min_num.size() - 1)) && (min_num[k] == 0))
                    continue;
                if (min_num[k] < min_num[found]) {
                    found = k;
                }
                if ((found != j) && (min_num[k] == min_num[found]))
                    found = k;
            }
            if (found != j) {
                swapped = 1;
                break;
            }
        }
        if (swapped == 1) {
            temp = min_num[j];
            min_num[j] = min_num[found];
            min_num[found] = temp;
        }
        cout << "Case #" << i << ": ";

        for (j = min_num.size() - 1; j >= 0; j--)
            cout << min_num[j];

        cout << " ";

        for (j = max_num.size() - 1; j >= 0; j--)
            cout << max_num[j];

        cout << endl;
    }

    in.close();
    return 0;
}
