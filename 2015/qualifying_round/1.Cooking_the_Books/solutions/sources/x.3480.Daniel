#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

size_t sw(size_t num)
{
	if(num == 0)
	{
		return num;
	}

	vector<unsigned int> digits;

	while(num > 0)
	{
		digits.push_back(num % 10);
		num /= 10;
	}

	size_t numDigits = digits.size();

	for(unsigned int l=0; l < numDigits; ++l)
	{
		bool swapped = false;

		size_t maxIndex = distance(digits.begin(), max_element(digits.begin(), digits.end()-l));

		for(unsigned int k=numDigits-1; k > maxIndex; --k)
		{
			if(digits[k] < digits[maxIndex])
			{
				swap(digits[k], digits[maxIndex]);
				swapped = true;
				break;
			}
		}

		if(swapped)
		{
			break;
		}
	}

	

	size_t out = 0;
	size_t i = 1;

	for(unsigned int d : digits)
	{
		out += d * i;
		i *= 10;
	}

	return out;
}

int main()
{

	size_t n;
	size_t num;

	cin >> n;

	for(size_t i=1; i <= n; ++i)
	{
		cin >> num;

		cout << "Case #" << i << ": " << num << " " << sw(num) << endl;
	}

	return 0;
}