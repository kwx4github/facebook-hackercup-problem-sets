#include <iostream>
#include <string>
#include <cmath>
using namespace std;

string n, temp, maxi, mini = "1000000000", la;
char tmp;
int CadenatoInt(string n)
{
	int sum = 0;
	for(int i = n.size()-1, cont = 0; i >=0; i--, cont++)
	{
		sum += (int)(n[i]-'0')*pow((double)10.0, cont);
	}
	return sum;
}
string swapp(int i, int j)
{
	if(n[i] == '0'||n[j] == '0')
	{
		if(i == 0) return n;
	}
	temp = n;
	tmp = temp[i];
	temp[i] = temp[j];
	temp[j] = tmp;
	return temp;
}
int main()
{
	ios_base::sync_with_stdio(0);
	
	int t;
	cin >> t;
	for(int i = 0; i < t; i++)
	{
		cin >> n;
		mini = maxi = n;

		if(n.size() == 1) cout << "Case #" << i+1 << ": " << mini << " " << maxi << "\n";
		else
		{
			for(int i = 0; i < n.size(); i++)
			{
				if(i != 0)
				{
					for(int j = i-1; j >= 0; j--)
					{
						if(i >= j) la = swapp(j, i);
						else if(i < j) la = swapp(i, j);
						if(CadenatoInt(la) > CadenatoInt(maxi))
						{
							maxi = la;
						}
						if(CadenatoInt(la) < CadenatoInt(mini))
						{
							mini = la;
						}
					}
				}
				if(i != n.size()-1)
				{
					for(int j = i+1; j < n.size(); j++)
					{
						if(i >= j) la = swapp(j, i);
						else if(i < j) la = swapp(i, j);
						if(CadenatoInt(la) > CadenatoInt(maxi))
						{
							maxi = la;
						}
						if(CadenatoInt(la) < CadenatoInt(mini))
						{
							mini = la;
						}
					}
				}
				
				
			}
			cout << "Case #" << i+1 << ": " << mini << " " << maxi << "\n";
		}
	}	
	
	return 0;
}