// Facebook_Cooking_The_Books.cpp : 콘솔 응용 프로그램에 대한 진입점을 정의합니다.
//

//#include "stdafx.h"

#include <stdio.h>
#include <malloc.h>
#include <string.h>
#include <memory.h>
#include <math.h>

int string_to_int(char *str);
int main()
{
	int N = 5;
	int ind1, ind2, length;
	int max, min, val, tmp_value;
	int i = 0;
	int j = 0;
	int cnt = 1;

	char mystr[101];
	char mytmp[101];
	FILE *fp = NULL;
	FILE *fp1 = NULL;
	fp = fopen("cooking_the_books.txt","r");
	fp1 = fopen("ouput.txt","w");
	fscanf(fp,"%d\n",&N);	
	while ( cnt <= N )
	{
		fscanf(fp,"%d\n",&val);
		memset(mystr,NULL,sizeof(char)*101);
		memset(mytmp,NULL,sizeof(char)*101);
		max = val; min = val;i = 0; j = 0;
		while ( val ) 
		{
			mytmp[i] = val%10+'0';
			val = val/10;
			i = i + 1;
		}
		i = strlen(mytmp)-1;
		while ( i >= 0 )
		{
			mystr[j] = mytmp[i];
			j = j + 1;
			i = i - 1;
		}
		ind1 = 0;	ind2 = 1; 	length = strlen(mytmp);
		for ( ind1 = 0 ; ind1 <length ; ind1++ )
		{
			for ( ind2 = ind1 + 1; ind2 < length ; ind2++ )
			{
				strcpy(mytmp,mystr);	
				if ( mytmp[ind1] <= mytmp[ind2]  )
				{
					char tmp = mytmp[ind1];
					mytmp[ind1] = mytmp[ind2];
					mytmp[ind2] = tmp;
					tmp_value = string_to_int(mytmp);
					if (max <= tmp_value )
						max = tmp_value;
				}
				strcpy(mytmp,mystr);
				if ( mytmp[ind2] != '0' || ind1 != 0 )
				{		
					if ( mytmp[ind1] >= mytmp[ind2]  )
					{
						char tmp = mytmp[ind1];
						mytmp[ind1] = mytmp[ind2];
						mytmp[ind2] = tmp;
						tmp_value = string_to_int(mytmp);
						if (min >= tmp_value )
							min = tmp_value;
					}
				}
			}
		}	
		fprintf(fp1,"Case #%d: %d %d\n",cnt,min,max);
		cnt++;
	}		
	fclose(fp);
	return 0;
}
int string_to_int(char *str)
{
	int val = 0;
	int n = strlen(str);
	int i = 0;
	while ( i<n ) 
	{
		val = 10 * val + ( str[i] - '0');
		i++;
	}
	return val;
}

