package main 



import(
	"fmt"
	"strconv"
)



type CookingTheBooks struct {
	Original, Min, Max string
}



func(this *CookingTheBooks) Run() {
	var (
		numbMin, numbMax []int
		)

	if len(this.Original) == 1 {
		this.Min = this.Original
		this.Max = this.Original
		return
	}

	for _, r := range this.Original {
		var (
			numb int
			e error
			)

		if numb, e = strconv.Atoi( string(r) ); e != nil {
			fmt.Println("Error:",this.Original, "is not a number")
			return
		}

		numbMin = append(numbMin, numb)
		numbMax = append(numbMax, numb)
	}

	for numb := 1; numb < numbMin[0]; numb++ {
		swapped := false
		for i := len(numbMin)-1; i >=1; i-- {
			if numb == numbMin[i] && numb < numbMin[0] {
				numbMin[i] = numbMin[0]
				numbMin[0] = numb
				swapped = true
				break
			}
		}

		if swapped {
			break
		}
	}


	for numb := 9; numb > numbMax[0]; numb-- {
		swapped := false
		for i := len(numbMax)-1; i >=1; i-- {
			if numb == numbMax[i] && numb > numbMax[0] {
				numbMax[i] = numbMax[0]
				numbMax[0] = numb
				swapped = true
				break
			}
		}

		if swapped {
			break
		}
	}


	for _, numb := range numbMin {
		this.Min += strconv.Itoa(numb)
	}

	for _, numb := range numbMax {
		this.Max += strconv.Itoa(numb)
	}
}
