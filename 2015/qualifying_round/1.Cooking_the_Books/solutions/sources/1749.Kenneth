#include <iostream>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <list>
#include <ctime>
#include <vector>
#include <fstream>
#include <algorithm>
#include <iomanip>
#include <list>
#include <queue>
#include <stack>
#include <deque>
#include <vector>
#include <set>
#include <map>
#define  inf (long long)1e15
#define  MAX_N 100009
using namespace std;
typedef vector<int> vec;
typedef vector< vector <int> > vec_2d;

int string_to_int(string num)
{
    long long int tmp = 0;
    for(int i = 0; i < num.length(); i++)
    {
        tmp = 10*tmp + (num[i] - '0');
    }
    return tmp;
}

int main()
{
    ofstream out("output.txt");
    ifstream in("input.txt");
    int test;
    cin >> test;
    for(int i = 0; i < test; i++)
    {
        string num;
        cin >> num;
        long long int longest = string_to_int(num);
        for(int j = 0; j< num.length(); j++)
        {
            for(int k = 0; k < num.length(); k++)
            {
                string temp = num;
                if(j != k)
                {
                    swap(temp[j], temp[k]);
                    if(temp[0] != '0')
                    {
                        long long int r = string_to_int(temp);
                        if(r > longest)longest = r;
                    }
                }
            }
        }
        long long int shortest = string_to_int(num);
        for(int j = 0; j< num.length(); j++)
        {
            for(int k = 0; k < num.length(); k++)
            {
                string temp = num;
                if(j != k)
                {
                    swap(temp[j], temp[k]);
                    if(temp[0] != '0')
                    {
                        long long int r = string_to_int(temp);
                        if(r < shortest)shortest = r;
                    }
                }
            }
        }
        out << "Case #" << i + 1 << ": " << shortest << " " << longest << endl;
    }
}

