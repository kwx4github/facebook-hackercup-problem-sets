#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <queue>
#include <stack>
#include <deque>
#include <assert.h>
#include <ctime>
#include <bitset>
#include <numeric>
#include <complex>
typedef long l;
typedef long long ll;
using namespace std;

int go(char arr[])
{
	int val = 0 ;
	for(int i = strlen(arr)-1 , j = 1 ; i >= 0 ; --i , j*=10)
		val+=(j*(arr[i]-'0'));
	return val ;
}

int main ()
{
	freopen("output.txt","w",stdout);
	int n , cou = 1 ; 
	char val[11];
	scanf("%d",&n);
	while(n--)
	{
		scanf(" %s",val) ;
		printf("Case #%d: ",cou);
		cou++ ;
		int mn = go(val) ;
		int mx = mn ;  
		for(int i = 0 ; i < strlen(val) ; i++)
			for(int j = 0 ; j < strlen(val) ; ++j)
			{
				if(i!=j)
				{
					if((i==0&&val[j]=='0')||(j==0&&val[i]=='0'))
						continue ;
					else
					{
						swap(val[i],val[j]) ; 
						int v = go(val) ;
						mx = max(v,mx);
						mn = min(v,mn);
						swap(val[i],val[j]);
					}
				}
			}
		printf("%d %d\n",mn,mx) ;
	}
}


//void dfs(int s)
//{
//    visted[s]=1;
//    for(int i =0 ; i <amer[s].size(); i++ )
//    {
//        if(visted[amer[s][i]]!=c)
//        {
//            cost[amer[s][i]]=cost[s]+2;
//            dfs(amer[s][i]);
//        }
//    }
//}