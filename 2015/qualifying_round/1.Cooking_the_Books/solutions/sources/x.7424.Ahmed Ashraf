//============================================================================
// Name        : problems.cpp
// Author      :
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================
#include <bits/stdc++.h>
using namespace std;
#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long ll;

const double EPS = (1e-7);
int dcmp(double x, double y) {
	return fabs(x - y) <= EPS ? 0 : x < y ? -1 : 1;
}

#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"

int main() {
	freopen("example.txt", "w", stdout);
	freopen("example.in", "r", stdin); // for reading
		int t, ca, n;
	cin >> t;
	ca = t;
	string s;
	while (t-- != 0) {
		cin >> s;
		n = s.length();
		char a[n];
		char b[n];
		for (int i = 0; i < n; i++) {
			a[i] = s[i];
			b[i] = a[i];

		}
		bool lod = false;
		int h = 0;
		for (int i = 0; i < n; i++) {
			char c = a[i];
			for (int j = i + 1; j < n; j++) {
				if (a[j] > c) {
					h = j;
					c = a[j];
					lod = true;
				}
			}
			if (lod) {
				char temp = a[i];
				a[i] = a[h];
				a[h] = temp;
				break;

			}
		}
		lod = false;
		for (int i = 0; i < n; i++) {
			char c = b[i];

			for (int j = i + 1; j < n; j++) {
				if ((b[j] < c) && !(i == 0 && b[j] == '0')) {
					c = b[j];
					h = j;
					lod = true;
				}
			}
			if (lod) {
				char temp = b[i];
				b[i] = b[h];
				b[h] = temp;
				break;
			}
		}
		string res1 = "";
		string res2 = "";
		for (int i = 0; i < n; i++) {
			res1 += a[i];
			res2 += b[i];
		}
		printf("Case #%d: %s %s\n", (ca - t), res2.c_str(), res1.c_str());

	}

	return 0;
}
