def swap(digitPosition, extremeDigit, number):
    numberList = list(number)
    extremeDigitPosition = numberList.index(extremeDigit)
    numberList[digitPosition], numberList[extremeDigitPosition] = numberList[extremeDigitPosition], numberList[digitPosition]
    return ''.join(numberList)

def getMin(number):
    if len(number) == 1:
        return number

    for digitPosition, digit in enumerate(number[0:-1]):
        minDigit = min(number[digitPosition+1:])
        if (digitPosition == 0 and minDigit != '0' and minDigit < number[digitPosition]) or (digitPosition != 0 and minDigit < number[digitPosition]):
            return swap(digitPosition, minDigit, number)

    return number

def getMax(number):
    if len(number) == 1:
        return number

    for digitPosition, digit in enumerate(number[0:-1]):
        maxDigit = max(number[digitPosition+1:])
        if (digitPosition == 0 and maxDigit != '0' and maxDigit > number[digitPosition]) or (digitPosition != 0 and maxDigit > number[digitPosition]):
            return swap(digitPosition, maxDigit, number)

    return number

def main():
    inputFile = open('input.txt', 'r')

    inputFile.readline() # skip the first line

    results = []
    for line in inputFile:
        number = line.strip()
        results.append((getMin(number), getMax(number)))

    for key, result in enumerate(results):
        print('Case #'+str(key+1)+': '+' '.join(result))

if __name__ == "__main__":
    main()