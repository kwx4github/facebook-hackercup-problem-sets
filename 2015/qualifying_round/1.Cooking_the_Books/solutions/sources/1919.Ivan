"""
ith = 2
a = b = 1
sum = 0

while (ith < 1500):
    c = a + b
    a = b
    b = c
    ith += 1
    if (10 <= ith <= 17):
        sum += c

print(sum)

"""
"""
fin = open("input.txt", "r")
T = int(fin.readline())
pall, call, fall = 0, 0, 0
for t in range(T):
    s = fin.readline()
    ls = s.split()
    pall = int(ls[0])
    call = int(ls[1])
    fall = int(ls[2])
    n = int(fin.readline())
    food = []
    for i in range(n):
        s = fin.readline()
        ls = s.split()
        ls[0] = int(ls[0])
        ls[1] = int(ls[1])
        ls[2] = int(ls[2])
        food.append(ls)
    ans = False
    for mask in range(1 << len(food)):
        sum = [0,0,0]
        for index, item in enumerate(food):
            if ((1 << index) & (mask) > 0):
                sum[0] += item[0]
                sum[1] += item[1]
                sum[2] += item[2]
        if sum[0] == pall and sum[1] == call and sum[2] == fall:
            ans = True
    if ans:
        print("Case #" + str(t + 1) + ": yes")
    else:
        print("Case #" + str(t + 1) + ": no")

"""

fin = open("input.txt", "r")
n = int(fin.readline())
for t in range(n):
    s = fin.readline()[:-1]
    lst = list(s)
    sm_s = s
    lg_s = s
    for i in range(len(s)):
        for j in range(i, len(s)):
            temp = lst[i]
            lst[i] = lst[j]
            lst[j] = temp
            s = "".join(lst)
            if sm_s > s and s[0] != '0':
                sm_s = s
            if lg_s < s:
                lg_s = s
            temp = lst[i]
            lst[i] = lst[j]
            lst[j] = temp
            s = "".join(lst)
    print("Case #" + str(t + 1) + ": %s %s" % (sm_s, lg_s))


