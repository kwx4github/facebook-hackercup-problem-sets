

def get_input(file):
    with open(file) as f:
        data = f.read()
    
    return data.split('\n')[:-1]

def get_min_max_index(digit_list, length):

    max_ = -1
    min_ = 10
    max_i = 0
    min_i = 0

    for index in range(length):
        value = long(digit_list[index])
        if value >= max_:
            max_ = value
            max_i = index
        
        if min_ >= value:
            min_ = value
            min_i = index

    return min_i, max_i


def solution():
    input_arr = get_input("cooking_the_books_example_input.txt")
    case = long(input_arr[0])
    numbers = input_arr[1:]
    for i in range(case):
        N = numbers[i]

        digit_list = list(N)

        length = len(digit_list)

        min_i, max_i = get_min_max_index(digit_list, length)
        max_ = long(digit_list[max_i])
        min_ = long(digit_list[min_i])

        swap_index = -1
        for index in range(length):
            if index > max_i:
                break;

            if digit_list[index] < digit_list[max_i]:
                swap_index = index
                break

        temp = digit_list[:]
        
        if swap_index != -1 and max_i != 0:
            temp[swap_index], temp[max_i] = temp[max_i], temp[swap_index]
        
        max_number = ''.join(temp)

        swap_index = -1
        for index in range(length):
            if index > min_i:
                break

            if digit_list[index] > digit_list[min_i]:
                swap_index = index
                break

        if min_ != 0:
            if swap_index >= 0:
                digit_list[swap_index], digit_list[min_i] = digit_list[min_i], digit_list[swap_index]
        else:
            if swap_index != 0:
                digit_list[swap_index], digit_list[min_i] = digit_list[min_i], digit_list[swap_index]


        min_number = ''.join(digit_list)

        print "Case #%s: %s %s" % ( i+1, min_number, max_number)


solution()

