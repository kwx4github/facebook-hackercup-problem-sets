import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


public class q1 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
		
		int T = Integer.parseInt(input.readLine().trim()), _case;
		
		for (int i = 0; i < T; i++) {
			_case = Integer.parseInt(input.readLine().trim());
			System.out.println("Case #" + (i+1) + ": " + findMin(_case) + " " + findMax(_case));
		}
		
		input.close();
	}

	private static String findMin(int _case) {
		String min = String.valueOf(_case);
		char _min = min.charAt(0);
		int index_min = 0;

		for (int i = 1; i < min.length(); i++)
			if (_min > min.charAt(i) && min.charAt(i) != '0') {
				_min = min.charAt(i);
				index_min = i;
			}
		
		 return swopped(index_min, min);
	}


	private static String swopped(int index_min, String min) {
		char[] c = min.toCharArray();
		char t;
		
		t = c[index_min];
		c[index_min] = c[0];
		c[0] = t;

		return String.copyValueOf(c);
	}

	private static String findMax(int _case) {
		String min = String.valueOf(_case);
		char _max = min.charAt(0);
		int index_max = 0;

		for (int i = 1; i < min.length(); i++)
			if (_max < min.charAt(i) && min.charAt(i) != '0') {
				_max = min.charAt(i);
				index_max = i;
			}	
		
		 return swopped(index_max, min);
	}
}

