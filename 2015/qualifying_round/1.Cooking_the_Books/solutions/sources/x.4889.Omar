using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Test
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] lines = System.IO.File.ReadAllLines("input.txt");
            int lineCounter = 0;

            string result = "";

            int T = int.Parse(lines[lineCounter++]);

            for (int i = 0; i < T; i++ )
            {
                uint N = uint.Parse(lines[lineCounter++]);

                uint max = N;
                uint min = N;

                if (N > 0)
                {
                    DigitizedNumber myN = new DigitizedNumber(N);
                    myN.Max();
                    max = myN.ToUInt();
                    max = (N > max ? N : max);

                    myN = new DigitizedNumber(N);
                    myN.Min();
                    min = myN.ToUInt();
                    min = (N < min ? N : min);
                }

                result += string.Format("Case #{0}: {1} {2}", i+1, min, max) + "\n";
            }

            System.IO.File.WriteAllText("output.txt", result);

            Console.WriteLine("Press any key to continue...");
            Console.ReadLine();
        }
    }

    class DigitizedNumber
    {
        protected internal List<uint> _array;

        public DigitizedNumber(uint value)
        {
            _array = new List<uint>();

            uint n = value;

            while (n != 0)
            {
                _array.Add(n % 10);
                n /= 10;
            }

            _array.Reverse();
        }

        public uint ToUInt()
        {
            uint result = 0;

            for (int i = 0; i < _array.Count; i++)
                result += _array[i] * (uint)Math.Pow(10.0, (double)_array.Count - i - 1);

            return result;
        }

        public void Max()
        {
            if (_array.Count <= 1)
                return;
            
            int maxI = 0;
            uint max = 0;

            for (int i = 1; i < _array.Count; i++)
            {
                if ((_array[i] != 0) && (_array[i] > max))
                {
                    max = _array[i];
                    maxI = i;
                }
            }

            uint a = _array[0];
            _array[0] = _array[maxI];
            _array[maxI] = a;
        }

        public void Min()
        {
            if (_array.Count <= 1)
                return;
            
            int minI = 0;
            uint min = 999999999 + 1;

            for (int i = 1; i < _array.Count; i++)
            {
                if ((_array[i] != 0) && (_array[i] < min))
                {
                    min = _array[i];
                    minI = i;
                }
            }

            uint a = _array[0];
            _array[0] = _array[minI];
            _array[minI] = a;
        }
    }
}
