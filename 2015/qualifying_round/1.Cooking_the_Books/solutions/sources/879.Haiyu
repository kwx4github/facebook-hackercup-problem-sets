import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class Q1 {

	public Q1() {
		// TODO Auto-generated constructor stub
	}

	public static void main(String[] args) throws FileNotFoundException,
			IOException {

		//Read the input file
		ArrayList<String> inputs = new ArrayList<String>(100);

		int numOfInputs = 0;
		int currentPos = 0;
		try (BufferedReader br = new BufferedReader(
				new FileReader(
						"input.txt"))) {

			while (currentPos <= numOfInputs) {
				String line = br.readLine();
				if (numOfInputs == 0) {
					numOfInputs = Integer.parseInt(line);
				} else {
					inputs.add(line);
				}
				currentPos++;
			}
		}

		//Main process
		int pos = 1;
		for (String input : inputs) {
			char[] inputChars = input.toCharArray();

			int numOfChars = inputChars.length;

			boolean minDone = false;
			boolean maxDone = false;
			String minString = input;
			String maxString = input;

			for (int i = 0; i < numOfChars; i++) {
				int current = Integer.parseInt(String.valueOf(inputChars[i]));
				int min = current;
				int minPos = i;

				int max = min;
				int maxPos = i;

				for (int j = i + 1; j < numOfChars; j++) {

					int tmp = Integer.parseInt(String.valueOf(inputChars[j]));

					if (tmp != current ) {
						if (tmp <= min && (i != 0 || i == 0 && tmp != 0)) {
							min = tmp;
							minPos = j;
						}

						if (tmp >= max) {
							max = tmp;
							maxPos = j;
						}
					}
				}

				if (!minDone && minPos != i) {

					char[] outputChars = input.toCharArray();
					char tmp = outputChars[i];
					outputChars[i] = outputChars[minPos];
					outputChars[minPos] = tmp;

					minString = String.valueOf(outputChars);
					minDone = true;
				}

				if (!maxDone && maxPos != i) {
					char[] outputChars = input.toCharArray();
					char tmp = outputChars[i];
					outputChars[i] = outputChars[maxPos];
					outputChars[maxPos] = tmp;

					maxString = String.valueOf(outputChars);
					maxDone = true;

				}

				if (minDone && maxDone) {
					break;
				}
			}

			StringBuffer sb = new StringBuffer();
			sb.append("Case #").append(String.valueOf(pos)).append(": ")
					.append(minString).append(" ").append(maxString);

			pos++;
			System.out.println(sb.toString());
		}

	}
}
