#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <cmath>
#include <fstream>
#include <cstdlib>
using namespace std;

int main(){
	FILE *fout;

	fout =fopen("output.txt", "w+t");
	if(fout==NULL) {
		printf("Fail To Open File out1.txt!!");
		return 0;
	}
	int T;
	scanf("%d", &T);
	for (int t=1; t<=T; t++){
		char N[10];
		char N1[10];
		scanf("%s", &N);
		strcpy(N1, N);
		fprintf(fout,"Case #%d: ", t);
		int len1=strlen(N);
		// max
		// want to find smaller

		for (int position=0; position<len1; position++){
			if (position==0){
				char min1='9';
				for (int i=position+1; i<len1; i++){
					if (N1[i]!='0'){
					min1=min(N1[i],min1);
					}
				}
				
				if (N1[position]>min1){
					int j;
					for (j=len1-1; j>=0; j--){
						if (min1==N1[j])
							break;
					}
					// get the j
					swap(N1[position], N1[j]);
					break;
				}
			}
			else{
				char min1='9';
				for (int i=position+1; i<len1; i++){
					min1=min(N1[i],min1);
				}
				if (N1[position]>min1){

					int j;
					for (j=len1-1; j>=0; j--){
						if (min1==N1[j])
							break;
					}
					// get the i
					swap(N1[position], N1[j]);
					break;
				}
			}
		}

		fprintf(fout , "%s ", N1);

		// max
		strcpy(N1, N);
		// want to find smaller

		for (int position=0; position<len1; position++){
			char max1='0';
			for (int i=position+1; i<len1; i++){
				max1=max(N1[i],max1);
			}
			if (N1[position]<max1){

				int j;
				for (j=len1-1; j>=0; j--){
					if (max1==N1[j])
						break;
				}
				// get the i
				swap(N1[position], N1[j]);
				break;
			}
		}


		fprintf(fout , "%s\n", N1);

	}
	fclose(fout);

	return 0;
}