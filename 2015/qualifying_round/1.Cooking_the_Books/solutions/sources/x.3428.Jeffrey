
import java.util.*;
import java.io.*;

public class Cooking_The_Books {

	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter ps = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;

	public static void main(String[] args) throws IOException{
		int n = readInt();
		for(int t = 1; t <= n; t++){
			char[] curr = next().toCharArray();
			int max = Integer.parseInt(new String(curr));
			int min = max;
			for(int x = 0; x < curr.length; x++){
				for(int y = x+1; y < curr.length; y++){
					if(curr[y] == '0')
						continue;
					swap(curr, x, y);
					Integer next = Integer.parseInt(new String(curr));
					max = Math.max(max, next);
					min = Math.min(min, next);
					swap(curr, x, y);
				}
			}
			System.out.printf("Case #%d: %d %d\n", t, min, max);
		}
	}
	private static void swap(char[] curr, int x, int y) {
		char temp = curr[x];
		curr[x] = curr[y];
		curr[y] = temp;
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}

	static long readLong() throws IOException {
		return Long.parseLong(next());
	}

	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}

	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}

	static char readCharacter() throws IOException {
		return next().charAt(0);
	}

	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
