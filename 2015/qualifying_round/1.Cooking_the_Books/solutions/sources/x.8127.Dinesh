import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class cooking_the_books_solution {
    
    public static void main(String[] args)throws FileNotFoundException, IOException {
        BufferedReader br;
    PrintWriter pw;
    br = new BufferedReader(new FileReader("cooking_the_books.txt"));// for input from file cooking_the_books.txt
    pw = new PrintWriter("COOKOUT.out");// for output to file named COOKOUT.out
        int loc[][]=new int [10][99999];
        int occ[]=new int [10];
        int i,j,k,num,occur,min,max,pos;
        char ch,ch0;
        String str,minstr,maxstr;
        minstr=maxstr="";
        num=occur=min=max=pos=0;
        //Initializing index and occurance arrays
        for(k=0;k<10;k++)
        {
        Arrays.fill(loc[k], -1);
        }
        Arrays.fill(occ, 0);
        int t=Integer.parseInt(br.readLine());
        for(i=1;i<=t;i++)
        {
            for(k=0;k<10;k++)
            {
                Arrays.fill(loc[k], -1);
            }
            Arrays.fill(occ, 0);
            str=br.readLine();
            if(str.length()==1)
            {
                pw.println("Case #"+i+": "+str+" "+str);
            }
            else
            {
            //Storing details in arrays
            ch0=str.charAt(0);
            num=(int)ch0-48;
            min=max=num;
            for(j=0;j<str.length();j++)
            {
                ch=str.charAt(j);
                num=(int)ch-48;
                occ[num]++;
                occur=occ[num];
                loc[num][occur]=j;
                if(min>num)
                    min=num;
                if(max<num)
                    max=num;
            }
            //for finding minimum
            num=(int)ch0-48;
            if(min==0)
            {
                min++;
                while(occ[min]<=0&&min<=8)
                {
                    min++;
                }
                while(min==num&&min<=8)
                {
                    min++;
                    while(occ[min]<=0&&min<=8)
                    {
                        min++;
                    }
                }
                if(min<num)
                {
                    occur=occ[min];
                    pos=loc[min][occur];
                    ch=(char)(48+min);
                    minstr=ch+str.substring(1,str.length());
                    minstr=minstr.substring(0,pos)+ch0+minstr.substring(pos+1,minstr.length());
                    pw.print("Case #"+i+": "+minstr);
                }
                else
                {
                pw.print("Case #"+i+": "+str);
                }
            }
            else
            {
                
                while(min==num&&min<=8)
                {
                    min++;
                    while(occ[min]<=0&&min<=8)
                    {
                        min++;
                    }
                }
                if(min<num)
                {
                    occur=occ[min];
                    pos=loc[min][occur];
                    ch=(char)(48+min);
                    minstr=ch+str.substring(1,str.length());
                    minstr=minstr.substring(0,pos)+ch0+minstr.substring(pos+1,minstr.length());
                    pw.print("Case #"+i+": "+minstr);
                }
                else
                {
                pw.print("Case #"+i+": "+str);
                }
            }
            //for finding maximum
            num=(int)ch0-48;
            if(max!=0)
            {
                if(max==num)
                {
                while(max==num&&max>=2)
                {
                    max--;
                    while(occ[max]<=0&&max>=2)
                    {
                        max--;
                    }
                }
            }
                if(max>num)
                {
                    occur=occ[max];
                    pos=loc[max][occur];
                    ch=(char)(48+max);
                    maxstr=ch+str.substring(1,str.length());
                    maxstr=maxstr.substring(0,pos)+ch0+maxstr.substring(pos+1,maxstr.length());
                    pw.println(" "+maxstr);
                }
                else
                {
                    pw.println(" "+str);
                }
            }
            else
            {
                pw.println(" "+str);
            }
        }
        }
        pw.close();
    }
}