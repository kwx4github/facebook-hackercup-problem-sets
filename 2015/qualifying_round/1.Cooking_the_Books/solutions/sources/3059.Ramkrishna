package flowers;
import java.io.BufferedReader;
import java.io.InputStreamReader;
 import java.util.StringTokenizer;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
public class Flowers {
    public static void main(String[] args) throws Exception {
        String input="/Users/ramkrishnakulkarni/hackercup/input.txt";
        String output="/Users/ramkrishnakulkarni/hackercup/output.txt";
         Scanner in=new Scanner(new FileReader(input));
         PrintWriter pw = new PrintWriter(output);
         int t=in.nextInt();         
         for(int q=1;q<=t;q++){
             long n=in.nextLong();
             int max,min,x = 0,y = 0,f,g,flag,temp,x1=0,y1=0,x2=0,y2=0,flg;
             String str=Long.toString(n);
             char[] str1=str.toCharArray();          
             int l=str.length();
              int[] a=new int[l];
              int[] b=new int[l];
              for(int i=0;i<l;i++)
                  a[i]=(int)str1[i]-48;
               for(int i=0;i<l;i++)
                  b[i]=(int)str1[i]-48;
              
             if(l==1){
                 System.out.print("Case #"+q+": "+a[0]+" "+a[0]);   
                 System.out.println();
                 pw.print("Case #"+q+": "+a[0]+" "+a[0]);
                 pw.println();
             }
             else{
                f=0;g=0;flag=0;min=99;max=-99;flg=0;
                 for(int i=1;i<l;i++){
                     if((a[i]<a[0])&&(a[i]!=0)&&(a[i]<=min)){
                         x=i;
                         f=1;
                         min=a[i];
                     }
                     if((b[i]>b[0])&&(b[i]>=max)){
                         y=i;
                         g=1;
                         max=b[i];
                     }                    
                 }
                 if(f==1){
                    temp=a[0];
                    a[0]=a[x];
                    a[x]=temp;                   
                 }
                 if(g==1){
                      temp=b[0];
                    b[0]=b[y];
                    b[y]=temp;
                 }
              if(f==0){
                      min=99;
                  for(int i=1;i<l;i++){                    
                      for(int j=i+1;j<l;j++){
                          if((a[i]>a[j])&&(a[j]<=min)){                              
                                    min=a[j];
                                    x1=j;
                                    x2=i;  
                                    flag=1;
                          }                         
                  }
                      if(flag==1){
                          temp=a[x1];
                  a[x1]=a[x2];
                  a[x2]=temp;
                          break;
                      }
              }
             }
              if(g==0){
                       max=-99;
                  for(int i=1;i<l;i++){                    
                      for(int j=i+1;j<l;j++){
                          if((b[i]<b[j])&&(b[j]>=max)){                              
                                    max=b[j];
                                    y1=j;
                                    y2=i;  
                                    flg=1;
                          }                         
                  }
                      if(flg==1){
                          temp=b[y1];
                  b[y1]=b[y2];
                  b[y2]=temp;
                          break;
                      }
              }
              }
                 System.out.print("Case #"+q+": ");
                 pw.print("Case #"+q+": ");
                  for(int i=0;i<l;i++){
                   System.out.print(a[i]);
                  pw.print(a[i]);
                  }
                   System.out.print(" ");                    
                   pw.print(" ");
                  for(int i=0;i<l;i++){
                   System.out.print(b[i]);
                    pw.print(b[i]);
                  }
                  System.out.println();
                  pw.println();
         }          
    } 
        pw.flush();
        pw.close();
        in.close();   
}
}
