#include <algorithm>
#include <bitset>
#include <cassert>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define mp make_pair
#define pb push_back
#define LL long long
#define ULL unsigned long long
#define BASE 73
#define NMAX 10000
#define NMAX2 20001
#define MOD1 1000000007
#define ALL(V) (V).begin(), (V).end()
#define ALLR(V) (V).rbegin(), (V).rend()
#define CRLINE Duxar(__LINE__);
#define ENTER putchar('\n');

void Duxar(int _this_line) {
#ifndef ONLINE_JUDGE
	printf("\n . . . . . . . . . . . . . Passed line - %d\n", _this_line);
#endif
}

template <class T>
void ReadNo(T &_value) {
	T sign = 1;
	char ch;
	_value = 0;
	while(!isdigit(ch = getchar())) {
		(ch == '-') && (sign = -1);
	}
	do {
		_value = _value * 10 + (ch - '0');
	} while(isdigit(ch = getchar()));
	_value *= sign;
}

template <class T>
void AddNr(T &a, T b) {
	a = a + b;
	while (a >= MOD1) {
		a -= MOD1;
	}
	while (a < 0) {
		a += MOD1;
	}
}


void Solve() {
	string S, min_nr, max_nr;
	int lg, i, j, pmin, pmax;
	bool min_ok, max_ok;
	cin >> S;
	lg = S.length();
	
	min_ok = max_ok = false;
	min_nr = max_nr = S;
	pmin = pmax = 0;
	for (j = 1; j < lg; ++j) {
		if (min_nr[pmin] > min_nr[j] && min_nr[j] != '0') {
			pmin = j;
			min_ok = true;
		}
		if (max_nr[pmax] < max_nr[j]) {
			pmax = j;
			max_ok = true;
		}
	}
	swap(min_nr[0], min_nr[pmin]);
	swap(max_nr[0], max_nr[pmax]);
	
	for (i = 1; i < lg - 1 && !(min_ok && max_ok); ++i) {
		pmin = pmax = i;
		for (j = i + 1; j < lg; ++j) {
			if (!min_ok && min_nr[pmin] > min_nr[j]) {
				pmin = i;
			}
			if (!max_ok && max_nr[pmax] < max_nr[j]) {
				pmax = j;
			}
		}
		swap(min_nr[i], min_nr[pmin]);
		swap(max_nr[i], max_nr[pmax]);
		if (min_nr != S) min_ok = true;
		if (max_nr != S) max_ok = true;
	}
	
	printf("%s %s\n", min_nr.c_str(), max_nr.c_str());
}

int main(int no_arguments, char **arguments){
	if (no_arguments > 1) {
		freopen(arguments[1], "r", stdin);
	}
	else {
		freopen("input.cpp", "r", stdin);
	}
	freopen("answer.cpp", "w", stdout);
	
	int i, N;
	cin >> N;
	for (i = 1; i <= N; ++i) {
		printf("Case #%d: ", i);
		Solve();
	}
	
	return 0;
}


