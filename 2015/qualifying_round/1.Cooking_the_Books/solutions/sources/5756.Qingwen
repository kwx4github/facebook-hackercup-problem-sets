#include <iostream>
#include <cstdint>
#include <string>
using namespace std;

std::pair<string, string> solve(int64_t n) {
    string s = to_string(n);
    string big = s, small = s;
    for (size_t i = 0; i < s.size(); ++i) {
        char maxVal = s[i];
        int maxIdx = i;
        for (int j = i + 1; j < s.size(); ++j) {
            if (s[j] >= maxVal) {
                maxVal = s[j];
                maxIdx = j;
            }
        }
        if (maxVal > s[i]) {
            swap(big[i], big[maxIdx]);
            break;
        }
    }
    for (size_t i = 0; i < s.size(); ++i) {
        char minVal = s[i];
        int minIdx = i;
        for (int j = i + 1; j < s.size(); ++j) {
            if (i == 0 && s[j] == '0') continue;
            if (s[j] <= minVal) {
                minVal = s[j];
                minIdx = j;
            }
        }
        if (minVal < s[i]) {
            swap(small[i], small[minIdx]);
            break;
        }
    }
    return{ small, big };
}

int main() {
    freopen("C:\\Users\\v-qiguan\\Downloads\\cooking_the_books.txt", "r", stdin);
    freopen("C:\\Users\\v-qiguan\\Downloads\\cooking_the_books.out.txt", "w", stdout);
    int re; cin >> re;
    for (int ri = 1; ri <= re; ++ri) {
        int64_t n; cin >> n;
        auto result = solve(n);
        cout << "Case #" << ri << ": " << result.first << " " << result.second << std::endl;
    }
}