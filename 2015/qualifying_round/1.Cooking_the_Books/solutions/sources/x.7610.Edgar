#include<bits/stdc++.h>
using namespace std;

int M,m;
int digits[10];
int last_index;
int last_index_min;

char get_mayor(string s, int index){

	char answ = s[index];
	
	for(int i=index+1;i<s.size();i++){
		if(s[i]>=answ){
			answ = s[i];
			last_index = i;
		}
	}	
	return answ;
}

char get_menor(string s, int index){
	char answ = s[index];
	//cout<<"c: "<<s[index]<<" index: "<<index<<endl;
	for(int i=index+1;i<s.size();i++){
		if(s[i] <= answ){
			answ = s[i];
			last_index_min = i;
		}
	}
	
	return answ;
}

string get_maximo(string sx){
	string s = sx;
	for(int i=0;i<s.size();i++){
		char mayor = get_mayor(s,i);
		if(s[i] == mayor ) continue;
		else{
			char aux = s[i];
			s[i] = s[last_index];
			s[last_index] = aux;
			return s;
		}	
	}
	return s;
}

string get_minimo(string sx){
	string s=sx;
	for(int i=0; i<s.size(); i++){
		char menor = get_menor(s,i);
		if(s[i] == menor || (menor=='0' && i==0)) continue;
		else{
			char aux = s[i];
			s[i] = s[last_index_min];
			s[last_index_min] = aux;
			return s;
		}
	}
	return s;
}

int main(){
	int tc; cin>>tc;
	for(int t=1;t<=tc;t++){
		string number; cin>>number;		
		cout<<"Case #"<<t<<": "<<get_maximo(number)<<" ";
		//for(int i=0;i<number.size();i++)
			//cout<<get_menor(number,i)<<endl;
		
		//cout<<"//"<<endl;	
		cout<<get_minimo(number)<<endl;
	}
	
	return 0;
}
