import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class fbCup {
    public static void main(String[] args){

        try {
            BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\Dimitris\\IdeaProjects\\fbhackercup\\out\\production\\fbhackercup\\cooking_the_books.txt"));

            String Line;
            Line=br.readLine();

            int numberLines=Integer.parseInt(Line);


            for (int i=0;i<numberLines;i++){
                Line=br.readLine();
                char[] numberLow=Line.toCharArray();
                char[] numberMax=numberLow.clone();

                System.out.println("Case #"+(i+1)+": "+Integer.parseInt((new String(minimize(numberLow))))+" "+Integer.parseInt(new String(maximize(numberMax))));

            }

        }catch (IOException e) {
            e.printStackTrace();
        }
    }

    public  static char[] maximize(char[] number){
        int max,temp,loc=0;
        max=Character.getNumericValue(number[0]);

        for(int i=0;i<number.length;i++){
            if (Character.getNumericValue(number[i])>max){
                max=Character.getNumericValue(number[i]);
                loc=i;
            }
        }

        if(max==0){
            return number;
        }

        temp=Character.getNumericValue(number[0]);
        number[0]=Integer.toString(max).charAt(0);
        number[loc]=Integer.toString(temp).charAt(0);

        return number;
    }
    public  static char[] minimize(char[] number){
        int min,temp,loc=0;
        min=Character.getNumericValue(number[0]);

        for(int i=0;i<number.length;i++){
            if (Character.getNumericValue(number[i])<min){
                min=Character.getNumericValue(number[i]);
                loc=i;
            }
        }

        if(min==0){
            return number;
        }
        temp=Character.getNumericValue(number[0]);
        number[0]=Integer.toString(min).charAt(0);
        number[loc]=Integer.toString(temp).charAt(0);
        return number;
    }

}
