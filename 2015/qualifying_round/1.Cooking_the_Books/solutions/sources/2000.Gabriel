#include <iostream>
#include <vector>
#include <stdio.h>
#include <string.h>
#include <algorithm>

using namespace std;
char num[30], b[30];

int solvemin(char *s, int valid){
	vector <char> v;
	int i, l, x;
	l = strlen(s);
	for(i = 0; i < l; i++){
		v.push_back(s[i]);
	}
	sort(v.begin(),v.end());	
	for(i = 0; i < l; i++){
		if(v[i] != s[i]){
			if((valid == 1) && (v[i] == '0')) continue;
			else break;
		}
	}
	if(i == l) return -1;
	if(v[i] == '0'){
		for(x = 1; x < l; x++){
			if((v[x] > '0') && (v[x] < s[0])){
				return v[x];
			}
		}
	}
	return v[i];
}

int solvemax(char *s){
	vector <char> v;
	int i, l;
	l = strlen(s);
	for(i = 0; i < l; i++){
		v.push_back(s[i]);
	}
	sort(v.begin(),v.end());
	for(i = 0; i < l; i++)
		if(v[l-i-1] != s[i])
			break;
	if(i == l) return -1;
	return v[l-1-i];
}

void swapmin(int min){
	int l, i, t, x;
	strcpy(b,num);
//	printf("min: %c\n",min);
	if(min == -1) return;
	l = strlen(num);
	for(i = l-1; i >= 0; i--)
		if(num[i] == min) break;
	l = i;
//	printf("imin: %d\n",l);
	if(min == '0'){
		for(i = 1; i < l; i++){
			if(b[i] > 0) break;
		}
		if(i == l){
			swapmin(solvemin(num,1));
			return;
		}
	}
	for(i = 0; i < l; i++){
		if((i == 0) && (min == '0')) continue;
		if(b[i] > min){
			t = b[i];
			b[i] = min;
			b[l] = t;
			break;
		}
	}
}

void swapmax(int max){
	int l, i, t;
	strcpy(b,num);
	if(max == -1) return;
	l = strlen(num);
//	printf("max: %c\n",max);
	for(i = l-1; i >= 0; i--)
		if(num[i] == max) break;
	l = i;
//	printf("imax: %d\n",l);
	for(i = 0; i < l; i++){
		if(b[i] < max){
//			printf("b[i]: %c\n",b[i]);
			t = b[i];
			b[i] = max;
			b[l] = t;
			break;
		}
	}
}

int main(){
	int n, i, x, l, min, max, imin, imax, t;
	scanf("%d",&n);
	for(i = 1; i <= n; i++){
		min = '9' + 1;
		max = '0' - 1;
		imin = imax = 0;
		scanf("%s",num);
		
		min = solvemin(num,0);
		max = solvemax(num);
		swapmin(min);
		printf("Case #%d: ",i);
		printf("%s ",b);
		swapmax(max);
		printf("%s\n",b);
	}
	return 0;
}
