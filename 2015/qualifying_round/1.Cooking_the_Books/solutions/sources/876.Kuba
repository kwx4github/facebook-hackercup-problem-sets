#include<cstdio>
#include<vector>
using namespace std;

vector<int>D;

int main() {
	int t;
	scanf("%d", &t);
	for(int q=1;q<=t;q++) {
		int n;
		scanf("%d", &n);
		if(n < 10) printf("Case #%d: %d %d\n", q, n, n);
		else {
			while(n > 0) {
				D.push_back(n % 10);
				n /= 10;
			}
			int max_target = -1, max_it, ins;
			for(int j=1;j<D.size();j++) {
				ins = D[D.size() - j] + 1;
				max_it = -1;
				for(int i=D.size()-(j+1);i>=0;i--) {
					if(D[i] >= ins) {
						max_it = i;
						ins = D[i];
					}
				}
				if(max_it != -1) {
					max_target = D.size() - j;
					break;
				}
			}
			int min_target = -1, min_it;
			for(int j=1;j<D.size();j++) {
				ins = D[D.size() - j] - 1;
				min_it = -1;
				for(int i=D.size()-(j+1);i>=0;i--) {
					if(j == 1 && D[i] == 0) continue;
					if(D[i] <= ins) {
						min_it = i;
						ins = D[i];
					}
				}
				if(min_it != -1) {
					min_target = D.size() - j;
					break;
				}
			}
			printf("Case #%d: ", q);
			if(min_target != -1) swap(D[min_it], D[min_target]);
			for(int i=D.size()-1;i>=0;i--) printf("%d", D[i]);
			printf(" ");
			if(min_target != -1) swap(D[min_it], D[min_target]);
			if(max_target != -1) swap(D[max_it], D[max_target]);
			for(int i=D.size()-1;i>=0;i--) printf("%d", D[i]);
			printf("\n");
			D.clear();
		}
	}
	return 0;
}