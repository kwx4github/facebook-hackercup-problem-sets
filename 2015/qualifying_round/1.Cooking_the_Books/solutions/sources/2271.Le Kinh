

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class HackerCup {
	
	public static long[] cookingBook(long number){
		String buffer = String.valueOf(number);
		long[] output = new long[2];
		Integer[] numberIncrease = new Integer[buffer.length()];
		for (int i = 0; i < numberIncrease.length; i ++){
			numberIncrease[i] = Integer.valueOf(buffer.substring(i, i+1));
		}
		Arrays.sort(numberIncrease, Collections.reverseOrder());
		int[] maxmin; boolean printed = false;
		
		for (int i = 0; i < numberIncrease.length; i ++){
			if (numberIncrease[i] != Integer.valueOf(buffer.substring(i, i+1))){
				maxmin = findMaxmin(buffer.substring(i), i);
				char[] charArray = buffer.toCharArray();
				char temp = (char) charArray[i+maxmin[0]];
				charArray[i+maxmin[0]] = charArray[i];
				charArray[i] = temp;
				String out = new String(charArray);
				output[1] = Integer.valueOf(out);
				printed = true;
				break;
			}
		}
		if (! printed ) output[1] = number;
		printed = false;
		Arrays.sort(numberIncrease);
		if (numberIncrease[0] == 0){
			for(int i = 0; i < numberIncrease.length; i++){
				if (numberIncrease[i] != 0){
					Integer temp = numberIncrease[i];
					numberIncrease[i] = numberIncrease[0];
					numberIncrease[0] = temp;
					break;
				}
			}
		}
		//System.out.println(Arrays.toString(numberIncrease));
		for (int i = 0; i < numberIncrease.length; i ++){
			if (numberIncrease[i] != Integer.valueOf(buffer.substring(i, i+1))){
				maxmin = findMaxmin(buffer.substring(i), i);
				char[] charArray = buffer.toCharArray();
				char temp = (char) charArray[i+maxmin[1]];
				charArray[i+maxmin[1]] = charArray[i];
				charArray[i] = temp;
				String out = new String(charArray);
				//System.out.println("swap " + temp + " " + charArray[i]);
				output[0] = Integer.valueOf(out);
				printed = true;
				break;
			}
		}
		if (! printed ) output[0] = number;
		return output;
	}
	private static int[] findMaxmin(String buffer, int index) {
		int max = -1;
		int indexmax = buffer.length()-1;
		int min = 10;
		int indexmin = buffer.length()-1;
		for (int i = buffer.length()-1; i >= 0 ; i--){
			if (Integer.valueOf(buffer.substring(i, i+1)) > max){
				max = Integer.valueOf(buffer.substring(i, i+1));
				indexmax = i;
			}
			if (Integer.valueOf(buffer.substring(i, i+1)) < min){
				min = Integer.valueOf(buffer.substring(i, i+1));
				indexmin = i;
			}
		}
		if (index == 0){
			min = 10;
			for (int i = buffer.length()-1; i >= 0 ; i--){
				if (Integer.valueOf(buffer.substring(i, i+1)) < min && Integer.valueOf(buffer.substring(i, i+1)) != 0){
					min = Integer.valueOf(buffer.substring(i, i+1));
					indexmin = i;
				}
			}
		}
		//System.out.println(indexmax + " " + indexmin);
		return new int[] {indexmax, indexmin};
	}
	public static void main(String [] args){
		Scanner in = new Scanner(System.in);
		int numbTest = in.nextInt();
		try {
			PrintWriter outFile = new PrintWriter("output.txt");
			for (int i = 1; i <= numbTest; i ++){
				long input = in.nextInt();
				outFile.print("Case #" + i + ": " );
				long[] output = cookingBook(input);
				outFile.print(output[0]);
				outFile.print(" ");
				outFile.print(output[1]);
				outFile.println();
			}
			outFile.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		in.close();
	}
}
