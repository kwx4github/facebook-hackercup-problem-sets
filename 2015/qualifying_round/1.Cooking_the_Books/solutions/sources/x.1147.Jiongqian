package CookingTheBooks;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;

public class CookingTheBooks {
	public static void main(String[] args) throws IOException {
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		File outFile = new File("./output.txt");
		PrintWriter writer = new PrintWriter(outFile);
		String str = "";
		int num = Integer.parseInt(reader.readLine());
		for(int i=0; i<num; i++){
			str = reader.readLine();
			char ch[] = str.toCharArray();
			String result[] = getMinMax(ch);
			writer.println("Case #" + (i+1)+": "+result[0]+" "+result[1]);
		}
		writer.flush();
		writer.close();
		reader.close();
		
	}
	public static String[] getMinMax(char ch[]){
		String result[] = new String[2];
		if(ch.length == 1){
			result[0] = result[1] = new String(ch);
			return result;
		}
		int min[] = new int[ch.length];//store the index
		int max[] = new int[ch.length]; 
		Arrays.fill(min, -1);
		Arrays.fill(max, -1);
		min[ch.length-2] = ch.length-1;
		max[ch.length-2] = ch.length-1;
		for(int i=ch.length-3; i>=0; i--){
			if(ch[i+1] < ch[min[i+1]]){
				min[i] = i+1;
			}
			else min[i] = min[i+1];
			
			if(ch[i+1] > ch[max[i+1]])
				max[i] = i+1;
			else max[i] = max[i+1];
		}
		if(ch[min[0]]=='0'){
			min[0] = -1;
			for(int i=1; i<ch.length-1; i++)
				if(ch[min[i]] != '0')
					min[0] = i;
		}
		for(int i=0; i<ch.length-1; i++){
			if(min[i] != -1 && ch[i] > ch[min[i]]){
				char tmpCh[] = Arrays.copyOf(ch, ch.length);
				char c = tmpCh[i];
				tmpCh[i] = tmpCh[min[i]];
				tmpCh[min[i]] = c;
				result[0] = new String(tmpCh);
				break;
			}
		}
		if(result[0] == null)
			result[0] = new String(ch);
		if(ch[max[0]] == '0'){
			result[1] = new String(ch);
		}
		else {
			for(int i=0; i<ch.length-1; i++){
				if(ch[i] < ch[max[i]]){
					char tmpCh[] = Arrays.copyOf(ch, ch.length);
					char c = tmpCh[i];
					tmpCh[i] = tmpCh[max[i]];
					tmpCh[max[i]] = c;
					result[1] = new String(tmpCh);
					break;
				}
			}
			if(result[1] == null)
				result[1] = new String(ch);
		}
		return result; 
	}
}
