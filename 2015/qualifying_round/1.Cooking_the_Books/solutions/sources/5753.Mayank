package cookiesAndSwap;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Scanner;

public class Solution {

	/**
	 * @param args
	 * @throws FileNotFoundException 
	 */
	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub
//		Scanner s = new Scanner(System.in);
		Scanner s = new Scanner(new File("C:\\Users\\mayank\\workspace\\facebook\\src\\cookiesAndSwap\\input.txt"));
		System.setOut(new PrintStream(new FileOutputStream("C:\\Users\\mayank\\workspace\\facebook\\src\\cookiesAndSwap\\ouput.txt")));
		int t = s.nextInt();
		s.nextLine();
		for(int i=1;i<=t;i++)
		{
			String str = s.nextLine();
			char[] inp = str.toCharArray();
			
			System.out.println("Case #"+i+": "+findSmallest(inp)+" "+findLargest(inp));
		}
	}

	private static String findLargest(char[] inp) {
		// TODO Auto-generated method stub
		char[] ans = new char[inp.length];
		boolean flag = false;
		int temp_index = 0,start_index = 0;
		for(int i=0;i<inp.length-1;i++)
		{
			if(flag) break;
			temp_index = i;
			for(int j=inp.length-1;j>i;j--)
			{
				if(inp[temp_index] < inp[j])
				{
					start_index = i;
					temp_index = j;
					flag = true;
				}
			}
		}
		for(int i=0;i<inp.length;i++)
		{
			if(i==start_index)
				ans[i] = inp[temp_index];
			else if(i==temp_index)
				ans[i] = inp[start_index];
			else
				ans[i] = inp[i];
		}

		return String.valueOf(ans);
	}

	private static String findSmallest(char[] inp) {
		// TODO Auto-generated method stub
		char[] ans = new char[inp.length];
		boolean flag = false;
		int temp_index = 0,start_index = 0;
		for(int i=0;i<inp.length-1;i++)
		{
			if(flag) break;
			temp_index = i;
			for(int j=inp.length-1;j>i;j--)
			{
				if(inp[j]=='0' && i==0) continue;
				
				if(inp[temp_index] > inp[j])
				{
//					System.out.println(inp[temp_index]+"@"+temp_index+" > "+inp[j]+"@"+j);
					start_index = i;
					temp_index = j;
					flag = true;
				}
			}
		}
		if(!flag) temp_index = 0;
//		System.out.println(start_index+"..............."+temp_index);
		for(int i=0;i<inp.length;i++)
		{
			if(i==start_index)
				ans[i] = inp[temp_index];
			else if(i==temp_index)
				ans[i] = inp[start_index];
			else
				ans[i] = inp[i];
		}

		return String.valueOf(ans);
	}

}
