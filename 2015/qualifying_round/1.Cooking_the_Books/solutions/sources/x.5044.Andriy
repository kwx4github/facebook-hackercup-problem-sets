//
//  main.cpp
//  FHC_Pattern
//
//  Created by Andriy Medvid on 11.01.15.
//  Copyright (c) 2015 Andriy Medvid. All rights reserved.
//

#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <cstring>

using namespace std;

#define MAX_NUM 1000000000

#define IN_NAME ("cooking_the_books.in.txt")
#define OUT_NAME ("cooking_the_books.out")

void OutCase(int caseNum) {
    cout << "Case #" << (caseNum+1) << ": ";
}

int main(int argc, const char * argv[]) {
    
    freopen(IN_NAME, "r", stdin);
    freopen(OUT_NAME, "w", stdout);
    
    int T;
    
    char number[12];
    
    char mx[12], mn[12];
    
    cin >> T;
    
    for(int tIter = 0; tIter < T; tIter++) {
        
        cin >> number;
        
        int pos1 = -1, pos2 = -1;
        
        for(int i = 0; number[i]; i++) {
            char minChar = number[i];
            for(int j = i+1; number[j]; j++) {
                if(number[j] < minChar && !(i == 0 && number[j] == '0')) {
                    minChar = number[j];
                    pos1 = i;
                    pos2 = j;
                }
            }
            
            if(pos1 != -1)
                break;
        }
        for(int i = 0; number[i]; i++) {
            if(i == pos1)
                mn[i] = number[pos2];
            else if(i == pos2)
                mn[i] = number[pos1];
            else
                mn[i] = number[i];
            if(number[i+1] == 0) {
                mn[i+1] = 0;
            }
        }
        
        pos1 = -1, pos2 = -1;
        
        for(int i = 0; number[i]; i++) {
            char maxChar = number[i];
            for(int j = i+1; number[j]; j++) {
                if(number[j] > maxChar) {
                    maxChar = number[j];
                    pos1 = i;
                    pos2 = j;
                }
            }
            
            if(pos1 != -1)
                break;
        }
        for(int i = 0; number[i]; i++) {
            if(i == pos1)
                mx[i] = number[pos2];
            else if(i == pos2)
                mx[i] = number[pos1];
            else
                mx[i] = number[i];
            if(number[i+1] == 0) {
                mx[i+1] = 0;
            }
        }
        
        
        OutCase(tIter);
        // out answer
        
        cout << mn << " " << mx;
        
        cout << endl;
    }
    
    return 0;
}


