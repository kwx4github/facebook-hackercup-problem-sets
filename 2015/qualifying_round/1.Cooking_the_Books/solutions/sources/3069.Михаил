package com.company;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {
    static BufferedReader in;
    static PrintWriter out = new PrintWriter(System.out, true);
    static StringTokenizer st;


    public static void main(String[] args) throws Exception {
        in = new BufferedReader(new InputStreamReader(new FileInputStream("in.txt")));
        out = new PrintWriter("out.txt");
        int t = nextInt();
        for (int i = 0; i < t; i++) {
            String n = nextToken();
            long max = Long.parseLong(n);
            long min = Long.parseLong(n);
            for (int j = 0; j < n.length(); j++) {
                for (int k = j + 1; k < n.length(); k++) {
                    char[] chars = n.toCharArray();
                    char buf = chars[j];
                    chars[j] = chars[k];
                    chars[k] = buf;
                    long l = Long.parseLong(new String(chars));
                    String validateString = String.valueOf(l);
                    if (validateString.length() == n.length()) {
                        max = Math.max(max, l);
                        min = Math.min(min, l);
                    }
                }
            }
            out.println("Case #" + (i + 1) + ": " +
                    min + " " + max);
        }
        in.close();
        out.flush();
        out.close();
    }

    public static int nextInt() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Integer.parseInt(st.nextToken());
    }

    public static long nextLong() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Long.parseLong(st.nextToken());
    }

    public static double nextDouble() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine(), " ");
        return Double.parseDouble(st.nextToken());
    }

    public static String nextToken() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine(), " ");
        return st.nextToken();
    }
}
