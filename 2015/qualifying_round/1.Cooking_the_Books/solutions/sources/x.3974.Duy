import java.util.Arrays;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.IOException;
import java.util.StringTokenizer;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream = System.in;
		OutputStream outputStream = System.out;
		InputReader in = new InputReader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		TaskA solver = new TaskA();
		int testCount = Integer.parseInt(in.next());
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}
}

class TaskA {
    public void solve(int testNumber, InputReader in, PrintWriter out) {
        char[] a = in.next().toCharArray();
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        int posMin = 0;
        int posMax = 0;
        int n = a.length;

        for (int i = 0; i < n; i++) {
            int val = a[i] - '0';
            if (val != 0 && val <= min) {
                min = val;
                posMin = i;
            }
            if (val >= max) {
                max = val;
                posMax = i;
            }
        }
        char[] b = Arrays.copyOf(a, n);
        char tmp = a[0];
        a[0] = a[posMin];
        a[posMin] = tmp;
        b[0] = b[posMax];
        b[posMax] = tmp;
        String ansMin = "";
        String ansMax = "";
        for (int i = 0; i < n; i++) {
            ansMin += a[i];
            ansMax += b[i];
        }

        out.println("Case #" + testNumber + ": " + ansMin + " " + ansMax);
    }
}

class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }


}

