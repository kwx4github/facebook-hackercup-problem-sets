import java.io.*;
import java.util.*;
public class F1 {
static String minNum;
static String maxNum;
	public static void main (String [] args) throws IOException {
		Scanner sc = new Scanner(new File("cooking_the_books.txt"));
		PrintWriter out = new PrintWriter("f1.txt");
	//	StringTokenizer st;
 
		 int T;

		  T=Integer.parseInt(sc.nextLine());
	//	  System.out.println(T);
	     int ct=1;
	     while (ct<=T)
	     {
	    	 String N= sc.nextLine();
 
	    	 solution(N);
		     out.println("Case #"+ct+": "+minNum+" "+maxNum); 
	    		 ct++;
	     }
	   
	     
	     
		 out.flush();
	}
	static void  solution(String N)
	{    if (N.length()==1){
		minNum=N;
		maxNum=N;
		return;
	}
	   	 char[] num=N.toCharArray();
    	 char[] numsorted=(char[]) num.clone();
    	 char[] numcopy;
    	  Arrays.sort(numsorted);
    //   System.out.println(num);
    
    	  int swap1=-1;
    	  int swap2=-1;
    	 char bigDigit='x';
    	 char smallDigit='y';
    	 for (int i=0;i<num.length;i++)
    	 {  
    	//	System.out.println("num["+i+"]="+num[i]+" numsorted["+(num.length-i-1)+"]="+numsorted[num.length-i-1]);
    		 if(num[i]!=numsorted[num.length-i-1]) {
    			 swap1=i;
    			 bigDigit=numsorted[num.length-i-1];
    			 break;
    		 }
    	 }

    	 if (swap1==-1) maxNum=new String(num);
    	 else {
    		 for (int i=num.length-1;i>=0;i--){
    		//	 System.out.println("num["+i+"]="+num[i]+" big="+bigDigit);
    			 if(num[i]==bigDigit) {
    				 swap2=i;
    				 break;
    			 }
    		 }
    		 
    		 numcopy=(char[]) num.clone();
    		 swap(swap1,swap2,numcopy);
    		 maxNum=new String(numcopy);
    	 }

      // 	 System.out.println( " max="+maxNum);
    	 if ( numsorted[0]!='0'){
    		 swap1=-1;
    		 swap2=-1;
        	 for (int i=0;i<num.length;i++)
        	 {  
        		 if(num[i]!=numsorted[i]) {
        			 swap1=i;
        			 smallDigit=numsorted[i];
        			 break;
        		 }
        	 }
 
         	 if (swap1==-1) minNum=new String(num);
        	 else {
        		 for (int i=num.length-1;i>=0;i--){
        			 
        			 if(num[i]==smallDigit) {
        				 swap2=i;
        				 break;
        			 }
        		 }
        	
        	  	 
        	  	 numcopy=(char[]) num.clone();
        		 swap(swap1,swap2,numcopy);
        		 minNum=new String(numcopy);
    
        	 } 
      
    	 // 	 System.out.println( " minNum1="+minNum);
    		 return;
    
    	 }
    	 char small2=' ';
    	 for (int i=0;i<numsorted.length;i++)
    	 {
    		 if (numsorted[i]!='0') {
    			 small2=numsorted[i];
    			 break;
    		 }
    	 }
    	 if (small2!=num[0]){
     		 for (int i=num.length-1;i>=0;i--){
    			 
    			 if(num[i]==small2) {
    				 swap2=i;
    				 break;
    			 }
    		 }
     	  	 numcopy=(char[]) num.clone();
    		 swap(0,swap2,numcopy);
    		 minNum=new String(numcopy); 
    //	  	 System.out.println( " minNum2="+minNum);
    		 return;
    	 } 
 
 		 for (int i=num.length-1;i>=0;i--){
			 
			 if(num[i]=='0') {
				 swap2=i;
				 break;
			 }
		 }
 		 swap1=1;
    	 for (int i=1;i<num.length;i++)
    	 {
    		 if (num[i]!='0') {
    			 swap1=i;
    			 break;
    		 }
    	 }
    
     	// System.out.println( " swap1="+swap1+" swap2="+swap2);
 	  	 numcopy=(char[]) num.clone();
		 swap(swap1,swap2,numcopy);
		 minNum=new String(numcopy); 
	  //	 System.out.println( " minNum3="+minNum);
		 return;
    	 
	}
	static void swap(int swap1,int swap2,char[] num){
		char temp=num[swap1];
		num[swap1]=num[swap2];
		num[swap2]=temp;
		return;
	}
}