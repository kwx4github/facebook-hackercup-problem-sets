import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class CookingTheBooks {
	static int numInputs = 0;
	static List<Integer> inputs = new ArrayList<>();

	public static void main(String[] args) {
		readAndProcessInput(args[0]);

		System.out.println(numInputs);
		for (int input : inputs) {
			System.out.println(input);
		}

		// process each input
		for (int index = 0; index < numInputs; index++) {
			
			int currentNum = inputs.get(index);

			if (currentNum <= 10) {
				System.out.println("Case #" + (index + 1) + ": " + currentNum + " "	+ currentNum);
				continue;
			}
			String currentNumStr = String.valueOf(currentNum);

			// max
			String maxNum = currentNumStr.toString();
			char[] currentNumArr = currentNumStr.toCharArray();
			boolean isMaxSwapDone = false;
			for (int i = 0; i < currentNumArr.length && !isMaxSwapDone; i++) {
				int currMax = currentNumArr[i];
				int currMaxPos = i;
				for (int j = i + 1; j < currentNumArr.length && !isMaxSwapDone; j++) {
					if (currentNumArr[j] > currMax) {
						currMax = currentNumArr[j];
						currMaxPos = j;
					}
				}
				if (currMaxPos != i) {
					Swap(currentNumArr, i, currMaxPos);
					isMaxSwapDone = true;
					maxNum = new String(currentNumArr);
				}
			}

			// min
			String minNum = currentNumStr.toString();
			currentNumArr = currentNumStr.toCharArray();
			boolean isMinSwapDone = false;
			for (int i = 0; i < currentNumArr.length && !isMinSwapDone; i++) {
				int currMin = currentNumArr[i];
				int currMinPos = i;
				//for (int j = i + 1; j < currentNumArr.length && !isMinSwapDone; j++) {
				for (int j = currentNumArr.length-1; j >= i+1 && !isMinSwapDone; j--) {
					if (currentNumArr[j] < currMin) {
						if (i == 0 && currentNumArr[j] == '0') {
							continue;
						}
						else {
							currMin = currentNumArr[j];
							currMinPos = j;
						}
					}
				}
				if (currMinPos != i) {
					Swap(currentNumArr, i, currMinPos);
					isMinSwapDone = true;
					minNum = new String(currentNumArr);
				}
			}

			System.out.println("Case #" + (index + 1) + ": " + minNum + " " + maxNum);
		}
	}

	public static void Swap(char[] num, int i, int j) {
		char temp = num[i];
		num[i] = num[j];
		num[j] = temp;
	}

	public static void readAndProcessInput(String inputFile) {

		BufferedReader reader = null;
		String currentLine;

		try {
			reader = new BufferedReader(new FileReader(inputFile));
			currentLine = reader.readLine();

			if (currentLine != null) {

				numInputs = Integer.parseInt(currentLine.trim());
			}

			for (int i = 0; i < numInputs; i++) {
				currentLine = reader.readLine();
				inputs.add(new Integer(Integer.parseInt(currentLine.trim())));
			}

		}
		catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
