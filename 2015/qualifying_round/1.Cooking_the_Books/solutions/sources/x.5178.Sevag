#include <iostream>
#include <fstream>
#include <string>
using namespace std;

int T;
string N;

int toDig(char ch) {
	return (int)(ch - '0');
}

string smallest(string N) {

	int minIndex = -1;
	int minDig = 1000;

	for (int i=1; i<N.size(); i++){
		if ( toDig(N[i]) != 0 ) {
			if ( toDig(N[i]) < minDig ) {
				minDig = toDig(N[i]);
				minIndex = i;
			}
		}
	}

	if (minIndex != -1) {
		int i = 0;
		while(minDig >= toDig(N[i]) && i<N.size()) {
			i++;
		}
		if ( i < N.size() && i < minIndex) {
			swap(N[i], N[minIndex]);
		}
	}
	return N;
}

string largest(string N) {
	int maxIndex = -1;
	int maxDig = -1;

	for (int i=1; i<N.size(); i++){
		if ( toDig(N[i]) !=  0 ) {
			if ( toDig(N[i]) > maxDig ) {
				maxDig = toDig(N[i]);
				maxIndex = i;
			}
		}
	}

	if (maxIndex != -1) {
		int i = 0;
		while (maxDig <= toDig(N[i]) && i<N.size()){
			i++;
		}
		if ( i < N.size() && i < maxIndex) {
			swap(N[i], N[maxIndex]);
		}
	}
	return N;
}

int main() 
{
	ifstream cin;
	cin.open("cooking_the_books.txt");
	ofstream cout;
	cout.open("cooking_Sevag.out");

	cin >> T;

	for (int t=1; t<=T; t++)
	{
		cin >> N;
		cout << "Case #"<<t<<": ";
		cout << smallest(N);
		cout << " ";
		cout << largest(N) << endl;

	}

	return 0;
}