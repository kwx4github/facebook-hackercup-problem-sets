#include <cstdio>
#include <vector>
#include <cstdlib>
#include <string>
#include <iostream>
#include <vector>

std::string lower(const std::string &str) {
    std::vector<std::pair<int, char>> tab(str.length());
    tab[tab.size() - 1] = std::pair<int, char>(tab.size() - 1, str[str.length() - 1]);
    for (int i = tab.size() - 2; i >= 0; --i) {
        tab[i] = str[i] < tab[i + 1].second ? std::pair<int, char>(i, str[i]) : tab[i + 1];
        //printf("T[%d]: %d %c ", i, tab[i].first, tab[i].second);
    }
    if (tab[0].second == '0') {
        char cl = str[0];
        int pos = 0;
        for (int i = static_cast<int>(str.length() - 1); i >= 1; --i) {
            if (str[i] < cl && str[i] != '0') {
                cl = str[i];
                pos = i;
            }
        }
        if (cl != '0' && cl != str[0]) {
            std::string out = str;
            std::swap(out[0], out[pos]);
            return out;
        } else {
            tab[0] = std::pair<int, char>(0, str[0]);
        }
    }

    for (int i = 0; i < static_cast<int>(str.length()); ++i) {
        if (tab[i].second < str[i]) {
            std::string out = str;
            std::swap(out[i], out[tab[i].first]);
            return out;
        }
    }
    return str;
}

std::string higher(const std::string &str) {
    std::vector<std::pair<int, char>> tab(str.length());
    tab[tab.size() - 1] = std::pair<int, char>(tab.size() - 1, str[str.length() - 1]);
    for (int i = tab.size() - 2; i >= 0; --i) {
        tab[i] = str[i] > tab[i + 1].second ? std::pair<int, char>(i, str[i]) : tab[i + 1];
    }
    for (int i = 0; i < static_cast<int>(str.length()); ++i) {
        if (tab[i].second > str[i]) {
            std::string out = str;
            std::swap(out[i], out[tab[i].first]);
            return out;
        }
    }
    return str;
}

int main() {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
        std::string str;
        std::cin >> str;
        printf("Case #%d: %s %s\n", i + 1, lower(str).c_str(), higher(str).c_str());
    }
}
