package Qualif;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Cooking_The_Books {

    public static void main(String[] args) throws NumberFormatException,
            IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int testCase = Integer.parseInt(br.readLine());
        StringBuilder sb = new StringBuilder();

        for (int test = 0; test < testCase; test++) {
            
            char[] cur = br.readLine().toCharArray();
            char[] copyCur = Arrays.copyOf(cur, cur.length);
            String solution = "";

            boolean flagMin = false;
            boolean flagMax = false;

            for (int i = 0; i < cur.length; i++) {

                int curN = cur[i] - '0';

                for (int j = i + 1; j < cur.length; j++) {

                    if (curN > cur[j] - '0' && cur[j] != '0') {
                        cur = Arrays.copyOf(copyCur, cur.length);
                        char inter = cur[i];
                        cur[i] = cur[j];
                        cur[j] = inter;
                        curN = cur[i] -'0';
                        flagMin = true;
                    }
                }
                
                if(flagMin) break;
            }
            
            solution = arrayToString(cur) + " ";
            
            cur = Arrays.copyOf(copyCur, cur.length);
            
            for (int i = 0; i < cur.length; i++) {

                int curN = cur[i] - '0';

                for (int j = i + 1; j < cur.length; j++) {
                    if (curN < cur[j] - '0') {
                        cur = Arrays.copyOf(copyCur, cur.length);
                        char inter = cur[i];
                        cur[i] = cur[j];
                        cur[j] = inter;
                        flagMax = true;
                        curN = cur[i] -'0';
                    }
                }
                
                if(flagMax) {
                    break;
                }
            }

            solution = solution + arrayToString(cur);
           
            sb.append("Case #"+(test+1)+": ").append(solution);
            if(test != testCase-1)
                sb.append("\n");
            
        }

        System.out.println(sb);
    }

    public static String arrayToString(char[] arr) {
        return Arrays.toString(arr).replace(", ", "").replace("[", "")
                .replace("]", "");
    }

}
