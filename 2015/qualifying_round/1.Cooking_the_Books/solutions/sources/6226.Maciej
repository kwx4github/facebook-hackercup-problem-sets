#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long LL;
typedef pair<LL, LL> PLL;

PLL solve(LL n)
{
    LL mi = n;
    LL ma = n;
    vector<int> v;
    LL m = n;
    while (m > 0) {
        v.push_back(m % 10);
        m /= 10;
    }
    reverse(v.begin(), v.end());

    for (int i = 0; i < v.size(); i++) {
        for (int j = 0; j < i; j++) {
            if (j == 0 && v[i] == 0) continue;
            swap(v[i], v[j]);
            LL p = 0;
            for (int k = 0; k < v.size(); k++)
                p = p * 10 + v[k];
            mi = min(mi, p);
            ma = max(ma, p);
            swap(v[i], v[j]);
        }
    }
    return make_pair(mi, ma);
}


int main() 
{
    int te;
    cin >> te;
    for (int u = 1; u <= te; u++) 
    {
        LL n;
        cin >> n;
        PLL ret = solve(n);
        cout << "Case #" << u << ": " << ret.first << " " << ret.second << endl;
    }
}
