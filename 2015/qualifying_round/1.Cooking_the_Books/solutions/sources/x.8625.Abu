#include<bits/stdc++.h>

#define read freopen("input.txt","r",stdin)
#define write freopen("output.txt","w",stdout)

#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(min(a,b),min(c,d))
#define max4(a,b,c,d) max(max(a,b),max(c,d))

#define pi pair<int,int>
#define pb push_back
#define mk make_pair
#define all(v) v.begin(),v.end()
#define SORT(v) sort(all(v))
#define UN(v) SORT(v), (v).erase(unique(all(v)),v.end())
#define common(a,b) SORT(a), SORT(b), a.erase(set_intersection(all(a),all(b),a.begin()),a.end())
#define uncommon(a,b) SORT(a), SORT(b), a.erase(set_symmetric_difference(all(a),all(b),a.begin()),a.end())

#define FILL(a,d) memset(a,d,sizeof(a))
#define LL long long
#define ULL unsigned long long
#define DD double
#define PI 2*acos(0.0)

#define fr0(i,n) for(int i=0;i<n;i++)
#define fr1(i,n) for(int i=1;i<=n;i++)

#define ln puts("")

// for segment tree

#define eps 1e-7
#define INF (1<<28)
#define mod 1000000007

/*FOR SEGMENT TREE*/
#define lft (idx<<1)
#define rgt lft+1

using namespace std;

struct point{
      int x,y;
};

// INPUT

void sf(int &x){scanf("%d",&x);}
void sf(LL &x){scanf("%lld",&x);}
void sf(float &x){scanf("%f",&x);}
void sf(double &x){scanf("%lf",&x);}
void sf(int &x,int &y){scanf("%d%d",&x,&y);}
void sf(LL &x,LL &y){scanf("%lld%lld",&x,&y);}
void sf(float &x,float &y){scanf("%f%f",&x,&y);}
void sf(double &x,double &y){scanf("%lf%lf",&x,&y);}
void sf(double &x,double &y,double &z){scanf("%lf%lf%lf",&x,&y,&z);}
void sf(int &x,int &y,int &z){scanf("%d%d%d",&x,&y,&z);}
void sf(LL &x,LL &y,LL &z){scanf("%lld%lld%lld",&x,&y,&z);}
void sf(float &x,float &y,float &z){scanf("%u%u%u",&x,&y,&z);}
void sf(char &x){x=getchar();}
void sf(char *s){scanf("%s",s);}
void sf(string &s){cin>>s;}
void sf(string &s,string &ss) { cin>>s>>ss; }
void sf(point &x) { sf(x.x,x.y);}

// OUTPUT

void pf(int x) {printf("%d\n",x);}
void pf(int x,int y) {printf("%d %d\n",x,y);}
void pf(LL x) {printf("%lld\n",x);}
void pf(LL x,LL y) {printf("%lld %lld\n",x,y);}
void pf(float x) {printf("%u\n",x);}
void pf(ULL x) {printf("%llu\n",x);}
void pf(double x) {printf("%.6lf\n",x);}
void pf(double x,double y) {printf("%.5lf %.5lf\n",x,y);}
void pf(char x) {printf("%c\n",x);}
void pf(char *x) {printf("%s\n",x);}
void pf(string x) {cout<<x; ln; }
void pf(int x,int y,int z) { printf("%d %d %d\n",x,y,z);}


template<class T> T bigmod(T b,T p,T m){if(p==0) return 1%m; T x=b; T ans=1; while(p){ if(p&1) ans=(ans*x)%m; p>>=1; x=(x*x)%m; } return ans; }
template<class T> T gcd(T x, T y){if (y==0) return x; return gcd(y,x%y);}
template <typename T> T POW(T b,T p) { if (p == 0) return 1; if (p == 1) return b; if (p%2 == 0) { T s = POW(b,p/2); return s*s; } return b*POW(b,p-1);}
template <typename T> T modinv(T num,T m) {return bigmod(num,m-2,m);}
template <typename T> LL triangle(T a,T b,T c) { return (c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y); }



int main()
{
    read;
    write;
    int t,K=0;
    sf(t);
    while(t--){
        LL n; cin>>n;
        int a[100],b[100];
        int l=0;
        while(1){
            a[l]=b[l]=n%10;
            n/=10;
            l++;
            if(n==0) break;
        }

        printf("Case #%d: ",++K);
        int c=l-1;
        fr0(i,l){
           if(a[i]!=0 && a[i]<a[c]) c=i;
        }
        swap(a[l-1],a[c]);
        for(int i=l-1;i>=0;i--) cout<<a[i];
        cout<<" ";
        c=l-1;
        fr0(i,l){
            if(b[i]>b[c]) c=i;
        }
        swap(b[l-1],b[c]);
        for(int i=l-1;i>=0;i--)  cout<<b[i];
        ln;
    }
    return 0;
}
