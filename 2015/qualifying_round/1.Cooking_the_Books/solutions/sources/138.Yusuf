//TC

#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(a,b,c) for(int (a)=(b);(a)<=(c);(a)++)
#define forr(a,b,c) for(int (a)=(b);(a)>=(c);(a)--)
#define foreach(a,b) for( typeof( (b).begin() ) a=(b).begin(); (a)!=(b).end() ; (a)++ )
#define foreachr(a,b) for( typeof( (b).rbegin() ) a=(b).rbegin(); (a)!=(b).rend() ; (a)++ )
#define dg(x)  cerr <<#x<<':'<<x<<" "
#define dbg(x)  cerr <<#x<<':'<<x<<endl
#define SET(A,b) memset(A,b,sizeof (A) )
#define SIZE(A) ((int)(A).size())
#define ALL(A) (A).begin(),(A).end()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define num(a) (1LL<<(a))
using namespace std;

typedef double dbl;
typedef long long Lint;
typedef pair<int,int> ii;
typedef pair<Lint,Lint> Lii;

const Lint mod = 1e9+7;

const int MAXN = 10010;

const int inf = 1e9;

void toArray(int a,int ar[],int &cnt){
	
	cnt=0;
	
	while(a){
		ar[cnt++]=a%10;
		a/=10;
	}
	
}

int toInt(int ar[],int cnt){
	
	int res=0;
	
	//dbg(cnt);
	
	forr(i,cnt-1,0){
		res*=10;
		res+=ar[i];
		//dbg(res);
	}
	
	return res;
	
}

int main(){

	int Task,a;
	
	scanf(" %d",&Task);
	
	int ar[100];
	int cnt;
	
	forn(task,1,Task){
		scanf(" %d",&a);
		
		toArray(a,ar,cnt);
		
		/*forn(i,0,cnt-1)
			printf("%d ",ar[i]);
		puts("");
		*/
		int Max=a;
		int Min=a;
		int cur;
		
		forn(i,0,cnt-1)
			forn(j,i+1,cnt-1)
			{
				swap( ar[i],ar[j] );
						
				//~ forn(k,0,cnt-1)
					//~ printf("%d ",ar[k]);
				//~ puts("");
				cur=toInt(ar,cnt);
			//	cout << cur << endl;
				if(ar[cnt-1]>0)
				{
					Max=max(cur,Max);
					Min=min(cur,Min);
				}
				swap( ar[i],ar[j] );
			}
		printf("Case #%d: %d %d\n",task,Min,Max);
		
	}
	
	return 0;
		
}
