// Aditya Varshney - coderaditya

#include <iostream>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <map>
#include <climits>

#define MOD 1000000007
#define pb push_back
#define mp make_pair

typedef long long int ll;

using namespace std;

#define getcx getchar//_unlocked

int scan()
{
    int n=0;
    char ch = getcx();
    int sign=1;
    while( ch < '0' || ch > '9' ) {
        if(ch=='-')
            sign = -1;
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0',
    ch=getcx();
    return(n * sign);
}

int main()
{
    freopen("cooking_the_books.txt", "r", stdin);
    freopen("out.txt","w",stdout);
    int n,i,j,t,max1,p=0,loc1,loc2,min1;
    t=scan();
    while(t--) {
        p++;
        int temp,loc;
        char ch,a[11],b[11];
        max1=INT_MIN;
        min1=INT_MAX;
        i=0;
        cin>>a;
        strcpy(b,a);
        n=strlen(a);
        temp=0;
        for(i=0;i<n;i++) {
            min1=a[i];
            if(a[i]!='0') {
                for(j=i+1;j<n;j++) {
                    if(i==0&&a[j]=='0') {
                        continue;
                    } else if(a[j]<min1) {
                        min1=a[j];
                        loc1=j;
                        temp=1;
                    }
                }
                if(temp==1) {
                    swap(a[i],a[loc1]);
                    break;
                }
            }
        }
        temp=0;
        for(i=0;i<n;i++) {
            max1=b[i];
            for(j=i+1;j<n;j++) {
                if(b[j]>max1) {
                    max1=b[j];
                    loc1=j;
                    temp=1;
                }
            }
            if(temp==1) {
                swap(b[i],b[loc1]);
                break;
            }
        }
    printf("Case #%d: ",p);
        printf("%s ",a);
        printf("%s\n",b);
    }
    return 0;
}
