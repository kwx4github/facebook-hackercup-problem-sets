// Author: Harhro94 [Harutyunyan Hrayr]
#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define FOR(i, n) for (int i = 0; i < (n); ++i)
typedef pair<int, int> pii;
typedef long long LL;
typedef long double LD;
#define pb push_back
#define mp make_pair
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

void solve()
{
   int T;
   cin >> T;
   for (int test = 1; test <= T; ++test) {
      LL n;
      cin >> n;
      LL mini = n, maxi = n;
      vector<int> d;
      do {
         d.pb(n % 10);
         n /= 10;
      } while (n);
      reverse(all(d));
      for (int i = 0; i < sz(d); ++i) {
         for (int j = i + 1; j < sz(d); ++j) {
            if (i == 0 && d[j] == 0) continue;
            swap(d[i], d[j]);
            LL ret = 0;
            for (auto dig : d) {
               ret = 10 * ret + dig;
            }
            mini = min(mini, ret);
            maxi = max(maxi, ret);
            swap(d[i], d[j]);
         }
      }
      cout << "Case #" << test << ": " << mini << " " << maxi << endl;
   }
}

void testGen()
{
   FILE *f = fopen("input.txt", "w");
   fclose(f);
}

int main()
{
#ifdef harhro94
   //testGen();
   freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);
#else
#define task "game"
   //freopen(task".in", "r", stdin);
   //freopen(task".out", "w", stdout);
#endif

   cerr << fixed;
   cerr.precision(5);

   solve();

#ifdef harhro94
   cerr << fixed << setprecision(3) << "\nExecution time = " << clock() / 1000.0 << "s\n";
#endif
   return 0;
}