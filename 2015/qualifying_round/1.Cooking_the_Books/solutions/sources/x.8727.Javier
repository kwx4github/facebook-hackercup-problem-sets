def busca_mayor ( lista ):
    mayor = 0
    for temporal in lista:
        if temporal > mayor:
            mayor = temporal
    return mayor

def busca_menor ( lista ):
    count = 0
    menor = lista[count]
    while (lista[count] == '0' and len(lista)>1):
        menor = lista[count+1]
        count = count + 1

    for valor in lista:
        if valor < menor and valor != '0':
            menor = valor
    return menor

def busca_primero ( lista ):
	primero = lista[0]
	return primero

def busca_posicion ( lista, mayor ):
	lista.reverse()
	pos = lista.index(mayor)
	lon = len(lista) - 1
	position = lon - pos
	lista.reverse()
	return position

def mayor ( lista ):
	mayor = busca_mayor(lista)
	primero = busca_primero(lista)
	pos = busca_posicion(lista,mayor)
	lista.pop(pos)
	lista.insert(pos,primero)
	lista.pop(0)
	lista.insert(0,mayor)
	salida = ''.join(lista)
	return salida

def menor ( lista ):
	menor = busca_menor(lista)
	primero = busca_primero(lista)
	pos = busca_posicion(lista,menor)
	lista.pop(pos)
	lista.insert(pos,primero)
	lista.pop(0)
	lista.insert(0,menor)
	salida = ''.join(lista)
	return salida

import copy

i = open("cooking_the_booksT.txt")
o=open("cooking_the_books_example_output.txt","w")
lineas = i.readline()
casos = []
for linea in i:
	s = linea.replace("\n", '')
	casos.append(list(s))
i.close()

contador = 1

for rows in casos:
	l = rows
	e = copy.deepcopy(l)
	me = menor(l)
	ma = mayor(e)
	print 'Case #'+ str(contador) + ': ' + me , ma
	line = 'Case #'+ str(contador) + ': ' + me + ' ' + ma + "\n"
	o.write(line)
	contador = contador + 1

o.close()