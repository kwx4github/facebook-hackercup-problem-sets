#include<stdio.h>
#include<string.h>
#define gc getchar_unlocked

char N[9];
void read_int(){
	char c = gc();
	while(c<'0'||c>'9') c = gc();

	int index;
	
	index = 0;
	while(c>='0' && c <='9'){
		N[index] = c;
		c = gc();
		index++;
	}
	for(;index< 9; index++){
		N[index] = '\0';
	}
}
int minIndex(int startIndex, int endIndex){
	char min = N[endIndex];
	int minindex = endIndex;
	int currentindex = endIndex-1;
	while(currentindex >= startIndex){
		if(N[currentindex]==0)
			return currentindex;
		if(N[currentindex] < N[minindex]){
			minindex = currentindex;
		}
		currentindex--;
	}
	return minindex;
}
int maxIndex(int startIndex, int endIndex){
	char max = N[startIndex];
	int maxindex = startIndex;
	int currentindex = startIndex+1;
	while(currentindex <= endIndex){
		if(N[currentindex] > N[maxindex]){
			maxindex = currentindex;
		}
		currentindex++;
	}
	return maxindex;
}int main(){
	int T, casei = 0, digits,index,minindex,maxindex;
	char temp;
	scanf("%d",&T);
	while(T--){
		casei++;
		printf("Case #%d: ",casei);
		read_int();
		digits = strlen(N);
		
		if(digits == 1){
			printf("%s %s\n",N,N);
		}
		else{
			index = 0;
			minindex = minIndex(index,digits-1);
			while(minindex == index && index<digits-1){
				index++;
				minindex = minIndex(index,digits-1);
			}
			if(index == digits-1){
				printf("%s ",N);
			}else if(N[minindex]=='0'){
				if(index == 0){
					do{
					index++;
					}while(N[index]=='0' && index<digits);
					if(minindex > index){
						N[minindex] = N[index];
						N[index] = '0';
						printf("%s ",N);

						//overload
						N[index] = N[minindex];
						N[minindex] = '0';
					}
					else
						printf("%s ",N);
				}else{
				N[minindex] = N[index];
				N[index] = '0';
					printf("%s ",N);

					//overload
					N[index] = N[minindex];
					N[minindex] = '0';
				}
				/*index = 1;
				while(N[index]=='0' && index<digits){
					index++;
				}
				if(minindex > index){
					N[minindex] = N[index];
					N[index] = '0';
					printf("%s ",N);
				}
				else{

				}
				*/
			}
			else{
				temp = N[index];
				N[index] = N[minindex];
				N[minindex] = temp;
				printf("%s ",N);//min printed

				//overhead
				temp = N[minindex];
				N[minindex] = N[index];
				N[index] = temp;
			}

			index = 0;
			maxindex = maxIndex(index,digits-1);
			while(maxindex == index && index<digits-1){
				index++;
				maxindex = maxIndex(index,digits-1);
			}
			if(index == digits-1){
				printf("%s\n",N);
			}
			else{
				temp = N[index];
				N[index] = N[maxindex];
				N[maxindex] = temp;
				printf("%s\n",N);//max printed
			}

		}
		
	}
	return 0;
}
