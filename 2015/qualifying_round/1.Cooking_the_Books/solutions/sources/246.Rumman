#include <sstream>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <complex>
#include <cmath>
#include <iostream>
#include <iomanip>
#include <string>
#include <vector>
#include <algorithm>
#include <bitset>
#include <list>
#include <string.h>
#include <assert.h>
#include <time.h>

using namespace std;

#define SZ(x) ((int)x.size())
#define all(a) a.begin(),a.end()
#define allr(a) a.rbegin(),a.rend()
#define clrall(name,val) memset(name,(val),sizeof(name));
#define EPS 10e-9
#define ll long long
#define ull long long unsigned
#define SF scanf
#define PF printf
#define psb(b) push_back((b))
#define ppb() pop_back()
#define oo (1<<28)
#define mp make_pair
#define fs first
#define sc second
#define rep(var,s,n,it) for(var=(s);var<(n);(var)+=it)
#define rev(var,s,n,it) for(var=(n-1);var>(s-1);(var)-=it)
#define Read freopen("A.txt","r",stdin)
#define Write freopen("outA.txt","w",stdout)
#define __ std::ios_base::sync_with_stdio (false)
#define csprint PF("Case #%d: ",++cas)


ll BigMod(ll B,ll P,ll M){     ll R=1; while(P>0)      {if(P%2==1){R=(R*B)%M;}P/=2;B=(B*B)%M;} return R;} /// (B^P)%M

template<class T1> void deb(T1 e1){cout<<e1<<endl;}
template<class T1,class T2> void deb(T1 e1,T2 e2){cout<<e1<<" "<<e2<<endl;}
template<class T1,class T2,class T3> void deb(T1 e1,T2 e2,T3 e3){cout<<e1<<" "<<e2<<" "<<e3<<endl;}
template<class T1,class T2,class T3,class T4> void deb(T1 e1,T2 e2,T3 e3,T4 e4){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<endl;}
template<class T1,class T2,class T3,class T4,class T5> void deb(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<endl;}
template<class T1,class T2,class T3,class T4,class T5,class T6> void deb(T1 e1,T2 e2,T3 e3,T4 e4,T5 e5,T6 e6){cout<<e1<<" "<<e2<<" "<<e3<<" "<<e4<<" "<<e5<<" "<<e6<<endl;}

int n,x,y,p;
string s;

void dfs(int pos,int step)
{
    if(pos==n || step==1)
    {
        if(s[0]!='0')
        {
            stringstream ss;
            ss<<s;ss>>p;
            x=min(x,p);
            y=max(y,p);
        }
        return ;
    }
    for(int i=pos+1;i<n;i++)
    {
        if(step<2)
        {
            swap(s[i],s[pos]);
            dfs(pos+1,step+1);
            swap(s[i],s[pos]);
        }
        dfs(pos+1,step);
    }
    return ;
}

int main()
{
    #ifdef MAHDI
    Read;
    Write;
    #endif // MAHDI
    int a,test,cas=0;
    SF("%d",&test);
    while(test--)
    {
        SF("%d",&a);
        stringstream ss;
        ss<<a;
        ss>>s;
        n=SZ(s);
        x=y=a;
        dfs(0,0);
        csprint;
        PF("%d %d\n",x,y);
    }
    return 0;
}













