#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int mincmpfunc (const void * a, const void * b)
{
   return ( *(char *)a - *(char *)b );
}

int maxcmpfunc (const void * a, const void * b)
{
   return ( *(char *)b - *(char *)a );
}

void swap (char * str, int i, int j) {
    char temp;
    temp = str[i];
    str[i] = str[j];
    str[j] = temp;
}

int main(void) {
	int T, j, i, len, temp_i, temp__i;
	char N[100],temp;
	char minimum[100], maximum[100];
	
	scanf("%d", &T);
	
	for(j=0;j<T;j++) {
	    scanf("%s", N);
	len = strlen(N);

        strcpy(minimum, N);
        qsort(minimum, len, sizeof(char), mincmpfunc);
        strcpy(maximum, N);
        qsort(maximum, len, sizeof(char), maxcmpfunc);
        
        
        for (i=0;i<len;i++){
            if (minimum[i]!='0')
                break;
        }
        if (i>0 && i<len) {
            swap(minimum, 0,i);
        } 
        
        
        temp = -1;
        for (i=0;i<len;i++){
            if (temp < 0 && N[i] != minimum[i]) {
                temp = minimum[i];
                temp_i = i;
            }
            else {
                if (N[i] == temp) {
                    temp__i = i;
                }
            }
        }
        if (temp >= 0) {
            strcpy(minimum, N);
            swap(minimum, temp__i, temp_i);
        }

        temp = -1;
        for (i=0;i<len;i++){
            if (temp < 0 && N[i] != maximum[i]) {
                temp = maximum[i];
                temp_i = i;
            }
            else {
                if (N[i] == temp) {
                    temp__i = i;
                }
            }
        }
        if (temp >= 0) {
            strcpy(maximum, N);
            swap(maximum, temp__i, temp_i);
        }

        printf("Case #%d: %s %s\n", j+1, minimum, maximum);
	}
	
	return 0;
}

