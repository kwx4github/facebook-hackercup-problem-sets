#include <vector>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <string>
#include <map>
#include <set>
#include <queue>

using namespace std;

vector <int> i2v(int x)
{
	vector <int> c;
	while (x)
	{
		c.push_back(x % 10);
		x /= 10;
	}
	return c;
}

int v2i(vector <int> &c)
{
	int n = c.size();
	int p = 1, res = 0;
	for (int i = 0; i < n; i++)
	{
		res += c[i] * p;
		p *= 10;
	}
	return res;
}

int diff (const vector <int> &a, const vector <int> &b)
{
	int n = a.size(), cnt = 0;
	for (int i = 0; i < n; i++)
		cnt += (a[i] != b[i]);
	return cnt;
}

int main()
{
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	
	int t;
	cin >> t;

	for (int q = 0; q < t; q++)
	{
		int x;
		cin >> x;
		vector <int> v = i2v(x);
		vector <int> a = v;
		sort(a.begin(), a.end());
		int mn = x, mx = x;
		do 
		{
			if (a.size() > 0 && a[a.size() - 1] != 0)
			{
				int cnt = diff(v, a);
				if (cnt == 0 || cnt == 2)
				{
					mn = min(mn, v2i(a));
					mx = max(mx, v2i(a));
				}

			}
		} while (next_permutation(a.begin(), a.end()));

		cout << "Case #" << q + 1 << ": " << mn << " " << mx << endl;
	}

	return 0;

}