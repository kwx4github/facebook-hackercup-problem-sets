#include <map>
#include <set>
#include <stack>
#include <queue>
#include <cmath>
#include <string>
#include <vector>
#include <cstdio>
#include <sstream>
#include <complex>
#include <cstring>
#include <numeric>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;

typedef long long       li;
typedef vector<li>      vi;
typedef complex<double> pt;
typedef pair<pt, pt>    line;
typedef pair<li, li>    pi;
typedef vector<string>  vs;

#define rep(i,to)       for(li i=0;i<((li)to);i++)
#define foreach(it,set) for(__typeof((set).begin()) it=(set).begin();it!=(set).end();it++)
#define all(v)          v.begin(), v.end()

inline li bit(li n){ return 1LL<<n; }
template <class T> ostream& operator<<(ostream& os, vector<T> x){
    foreach(it, x) os << *it << ' ';
    return os;
}
template <class T> inline void dbg(T x){
    // return;
    cerr << x << endl; 
}

li dx[8] = {1, -1, 0,  0, -1, 1,  1, -1};
li dy[8] = {0,  0, 1, -1, -1, 1, -1,  1};

void solve () {
    string input; cin >> input;
    int n = input.size();
    int amin = atoi(input.c_str()), amax = amin;
    rep(i, n) rep(j, n) {
        string swapped = input;
        swap(swapped[i], swapped[j]);
        if (swapped[0] == '0') continue;
        int swapped_num = atoi(swapped.c_str());
        amin = min(amin, swapped_num);
        amax = max(amax, swapped_num);
    }
    cout << amin << " " << amax << endl;
}

int main () {
    int n; cin >> n;
    rep(i, n) {
        cout << "Case #" << i + 1 << ": ";
        solve();
    }
    return 0;
}
