package algo.Practice;

import java.util.Arrays;
import java.util.Scanner;
public class CookingTheBooks {
		
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int T = sc.nextInt();
		int[] N = new int[T]; 
		int i = 0;
		while (T-- > 0) {
			N[i] = sc.nextInt();
			i++;
		}
		for (i = 0; i < N.length; i++) {
			System.out.println("Case #" + (i + 1) + ": " + getMin(N[i]) + " " + getMax(N[i]));
		}
	}

	private static int[] getArray(int n) {
		int d = 0;
		int temp = n;
		while (temp > 0) {
			temp = temp / 10;
			d++;
		}
		temp = n;
		int[] ar = new int[d];
		int index = 1;
		while (temp > 0) {
			ar[d - index++] = temp % 10;
			temp = temp / 10;
		}
		return ar;
	}

	private static int getMin(int n) {
		if (n <= 10) return n;
		int[] ar = getArray(n);
		int maxDigit = ar.length;
		int digit = maxDigit - 1;
		int maxIndex = -1, minIndex = -1;
		int max = -1, min = Integer.MAX_VALUE;
		int retMin = n;
		for (int t = 0;t < ar.length ;t++) {
			int rem = ar[t];
			if (rem == 0) continue;
			max = ar[t];
			maxIndex = t;
			
			for (int k = t + 1; k < ar.length; k++) {
				int rm = ar[k];
				if (rm < max && rm <= min ) {
					if (t != 0 || rm != 0)
					{
						min = rm;	
						minIndex = k;
					}
				}
			}
			if (minIndex == -1) {
				continue;
			}
			retMin = getNumber(ar, minIndex, maxIndex);
			break;
		}
		return retMin;
	}

	private static int getMax(int n) {
		if (n <= 10) return n;
		int max = -1, min = Integer.MIN_VALUE;
		int ar[] = getArray(n);
		int index = 0, maxIndex = -1;
		int minIndex = -1;
		for (int t = 0; t < ar.length; t++) {
			int rem = ar[t];
			//if (max < rem && t > 9) {
			max = rem;
			maxIndex = t;
			for (int tt = t + 1; tt < ar.length; tt++) {
					int rm = ar[tt];
					if (rm > max && rm >= min) {
						minIndex = tt;
						min = rm;
					}
				}
			//}

			if (minIndex != -1) {
				break;
			}
		}
		if (minIndex == -1) {
			return getNumber(ar, 0, 0);
		}
		return getNumber(ar, minIndex, maxIndex);
	}

	private static int getNumber(int[] ar, int minIndex, int maxIndex) {
		int temp = ar[minIndex];
		ar[minIndex] = ar[maxIndex];
		ar[maxIndex] = temp;
		int num = 0;
//		System.out.println(Arrays.toString(ar));
		for (int i = 0; i < ar.length; i++) {
			num += ar[i] * ((int) Math.pow(10, ar.length - i - 1)); 
		}
		return num;
	} 
}
