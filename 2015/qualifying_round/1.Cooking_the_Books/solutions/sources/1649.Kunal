#include<iostream>
#include<string>
#include<cstring>

using namespace std;

int length(char *input)
{
	int i = 0,count=0;
	while(input[i] != '\0')
	{
		count++;
		i++;
	}
	return count;
}
void find_min(char *input)
{
	int n = length(input);
	char min;
	int min_index;
	if(n < 2)
		return;
	else
	{
		min = 'a';
		min_index = -1;
		for(int i=1;i<n;i++)
		{
			if(input[i] < min)
			{
				min = input[i];
				min_index = i;
			}
			else if(input[i] == min)
				if(i>min_index)
					min_index = i;
		}
		if(min != 'a' && min_index != -1)
		{
			if(input[0] > input[min_index])
			{
				char temp;
				temp = input[0];
				input[0] = input[min_index];
				input[min_index] = temp;
			}
			else
				find_min(input+1);
		}
	}
}

char *find_min0(char *input)
{
	int n = length(input);
	char min;
	int min_index;
	if(n < 2)
		return input;
	else
	{
		min = 'a';
		min_index = -1;
		for(int i=1;i<n;i++)
		{
			if(input[i] < min && input[i] != '0')
			{
				min = input[i];
				min_index = i;
			}
			else if(input[i] == min && input[i] != '0')
				if(i>min_index)
					min_index = i;
		}
		if(min != 'a' && min_index != -1)
		{
			if(input[0] > input[min_index])
			{
				char temp;
				temp = input[0];
				input[0] = input[min_index];
				input[min_index] = temp;
			}
			else
				find_min(input+1);
		}
	}
	return input;
}

void find_max(char *input)
{
	int n = length(input);
	char max;
	int max_index;
	if(n < 2)
		return;
	else
	{
		max = 2;
		max_index = -1;
		for(int i=1;i<n;i++)
		{
			if(input[i] > max)
			{
				max = input[i];
				max_index = i;
			}
			else if(input[i] == max)
				if(i > max_index)
					max_index = i;
		}
		if(max != 2 && max_index != -1)
		{
			if(input[0] < input[max_index])
			{
				char temp;
				temp = input[0];
				input[0] = input[max_index];
				input[max_index] = temp;
			}
			else
				find_max(input+1);
		}
	}
}

char *find_max0(char *input)
{
	int n = length(input);
	char max;
	int max_index;
	if(n < 2)
		return input;
	else
	{
		max = 0;
		max_index = -1;
		for(int i=1;i<n;i++)
		{
			if(input[i] > max && input[i] != '0')
			{
				max = input[i];
				max_index = i;
			}
			else if(input[i] == max && input[i] != '0')
				if(i > max_index)
					max_index = i;
		}
		if(max != 0 && max_index != -1)
		{
			if(input[0] < input[max_index])
			{
				char temp;
				temp = input[0];
				input[0] = input[max_index];
				input[max_index] = temp;
			}
			else
				find_max(input+1);
		}
	}
	return input;
}

int main()
{
	int t,p;
	cin>>t;
	p = 1;
	while(t>0)
	{
		string inp;
		cin>>inp;
		cout<<"Case #"<<p<<": ";
		char * cstr1 = new char [inp.length()+1];
		char * cstr2 = new char [inp.length()+1];
		strcpy(cstr1, inp.c_str());
		strcpy(cstr2, inp.c_str());
		cout<<find_min0(cstr1)<<" "<<find_max0(cstr2)<<endl;
		t--;
		p++;
	}
	return 0;
}
