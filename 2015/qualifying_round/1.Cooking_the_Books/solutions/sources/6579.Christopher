package com.chrisgray.hackercup;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.*;

public class CookingTheBooks {
    public static class InputNumber {
        private final List<Integer> numbers;

        public InputNumber(List<Integer> numbers) {
            this.numbers = numbers;
        }

        public static InputNumber allCombos(String number) {
            Set<Integer> numbers = new HashSet<>();
            for (int i = 0; i < number.length(); i++) {
                for (int j = i; j < number.length(); j++) {
                    char[] array = number.toCharArray();
                    char iPos = array[i];
                    char jPos = array[j];
                    if (!(i == 0 && jPos == '0')) {
                        array[i] = jPos;
                        array[j] = iPos;
                    }
                    numbers.add(Integer.valueOf(new String(array)));
                }
            }
            List<Integer> sorted = new ArrayList<>(numbers);
            Collections.sort(sorted);
            return new InputNumber(sorted);
        }

        public int largest() {
            return numbers.get(numbers.size() - 1);
        }

        public int smallest() {
            return numbers.get(0);
        }
    }
    public static class ArgParser {
        public static void fromFile() throws IOException {
            Scanner sc = new Scanner(new File("input.txt"));
            int numberOfLines = Integer.valueOf(sc.nextLine());
            List<String> lines = new ArrayList<>();
            while (numberOfLines-- > 0) {
                lines.add(sc.nextLine());
            }

            int caseNumber = 1;
            try (PrintWriter pw = new PrintWriter(new File("output.txt"))) {
                for (String line : lines) {
                    InputNumber inputNumber = InputNumber.allCombos(line);

                    pw.println(String.format("Case #%d: %s %s",
                            caseNumber++,
                            inputNumber.smallest(),
                            inputNumber.largest()));
                }
            }
        }
    }
    public static void main(String[] args) throws Exception {
        ArgParser.fromFile();
    }
}
