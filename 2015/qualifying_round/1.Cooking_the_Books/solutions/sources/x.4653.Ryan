import java.util.*;

public class A {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int runs = scan.nextInt();

		for(int z = 1; z <= runs; z++) {
			String n = scan.next();
			ArrayList<Long> small = new ArrayList<Long>();
			int min = Integer.parseInt(n.substring(0, 1));
			small.add(Long.parseLong(n));
			for(int i = 1; i < n.length(); i++) {
				if(Integer.parseInt(n.substring(i, i + 1)) < min && Integer.parseInt(n.substring(i, i + 1)) != 0) {
					small.clear();
					small.add(Long.parseLong(Integer.parseInt(n.substring(i, i + 1)) + n.substring(1, i) + n.substring(0, 1) + n.substring(i + 1)));
					min = Integer.parseInt(n.substring(i, i + 1));
				} else if(Integer.parseInt(n.substring(i, i + 1)) == min) {
					small.add(Long.parseLong(min + n.substring(1, i) + n.substring(0, 1) + n.substring(i + 1)));
				}
			}

			ArrayList<Long> large = new ArrayList<Long>();
			int max = Integer.parseInt(n.substring(0, 1));
			large.add(Long.parseLong(n));
			for(int i = 1; i < n.length(); i++) {
				if(Integer.parseInt(n.substring(i, i + 1)) > max) {
					large.clear();
					large.add(Long.parseLong(Integer.parseInt(n.substring(i, i + 1)) + n.substring(1, i) + n.substring(0, 1) + n.substring(i + 1)));
					max = Integer.parseInt(n.substring(i, i + 1));
				} else if(Integer.parseInt(n.substring(i, i + 1)) == max) {
					large.add(Long.parseLong(max + n.substring(1, i) + n.substring(0, 1) + n.substring(i + 1)));
				}
			}

			long minn = Long.MAX_VALUE;
			for(long l : small)
				minn = Math.min(minn, l);

			long maxx = Long.MIN_VALUE;
			for(long l : large)
				maxx = Math.max(maxx, l);

			System.out.printf("Case #%d: %d %d%n", z, minn, maxx);
		}
	}
}

