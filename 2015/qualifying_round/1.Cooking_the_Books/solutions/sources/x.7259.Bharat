import sys

# start from the right find the highest digit
# fursthest right
def max_out(num):
    max_i = 0
    i = len(num) - 1
    while i >= 1:
        if int(num[i]) > int(num[max_i]):
            max_i = i
        i -= 1
    if max_i == 0:
        return num
    max_num = num[max_i] + num[1:max_i] + num[0] + num[max_i+1:]
    return max_num

def min_out(num):
    min_i = 0
    i = len(num) - 1
    while i >= 1:
        if int(num[i]) < int(num[min_i]) and num[i] != '0':
            min_i = i
        i -= 1
    if min_i == 0:
        return num
    min_num = num[min_i] + num[1:min_i] + num[0] + num[min_i+1:]
    return min_num

'''
def max_out(num):
    max_val = int(num)
    first = num[0]
    max_d = int(first)
    for i in range(0, len(num[1:]):
        d = num[i]
        if int(d) >= max_d:
            max_d = int(d)
            max_num = num
            max_num[i] = first
            max_num = d + max_num
            if max_val < max_num:
                max_val = max_num
'''


def main():
    name = sys.argv[1]
    f = open(name, 'r')
    t = int(f.next().strip())
    i = 1
    while t > 0:
        l = f.next()
        num = l.strip()
        if num:
            print 'Case #%d:' % i, min_out(num), max_out(num)
        t -= 1
        i += 1

if __name__ == '__main__':
    main()
