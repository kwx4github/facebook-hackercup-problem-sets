#include<bits/stdc++.h>
#define ll long long int
#define f first
#define s second
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define rep(i,in1,n) for(i=in1;i<=n;i++)
#define repn(i,in1,n) for(i=in1;i<n;i++)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n);
#define sf(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define nl printf("\n")
#define mem(arr,init) memset(arr,init,sizeof(arr))
//#define vector<int> vi 
//#define vector<vi> vvi 
 
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mp make_pair
#define ii pair<int,int> 
using namespace std;

int min_no[11];
int max_no[11];
string str1;
int tmp[11];
void init(int n1)
{
	int i;
	for(i=0;i<n1;i++)
	{
		tmp[i]=str1[i]-'0';
	}
}
void gen_max(int n1)
{
	int cur,i,max1,maxind;
	for(cur=0;cur<n1-1;cur++)
	{
		max1=-1;
		for(i=cur+1;i<n1;i++)
		{
			if(tmp[i]>=max1)
			{
				max1=tmp[i];
				maxind=i;
			}
		}
		if(max1>tmp[cur])
		{
			
			swap(tmp[cur],tmp[maxind]);
			return;
			//swap()
			
		}
		
	}
}
void gen_min(int n1)
{
	int cur,i,min1,minind;
	for(cur=0;cur<n1-1;cur++)
	{
		min1=1008;
		for(i=cur+1;i<n1;i++)
		{
			if(cur==0)
			{
				if(tmp[i]<=min1 && tmp[i]!=0)
				{
					min1=tmp[i];
					minind=i;
				}
			}
			else
			{
				if(tmp[i]<=min1)
				{
					min1=tmp[i];
					minind=i;
				}
				
			}
			
		}
		if(min1<tmp[cur])
		{
			//if(cur==0 && min1==0)
			//continue;
			swap(tmp[cur],tmp[minind]);
			return;
			//swap()
			
		}
		
	}
}
int main()
{
	
	int i,j,k,t,n,m,cs,n1;
//	freopen("input.txt","r",stdin);
  //  freopen("output.txt","w",stdout);
	sf(t);
	for(cs=1;cs<=t;cs++)
	{
		cin>>str1;
		n1=str1.length();
		init(n1);
		gen_max(n1);
		for(i=0;i<n1;i++)
		{
			max_no[i]=tmp[i];
		}
		init(n1);
		gen_min(n1);
		for(i=0;i<n1;i++)
		{
			min_no[i]=tmp[i];
		}
		
		printf("Case #%d: ",cs);
		for(i=0;i<n1;i++)
		{
			printf("%d",min_no[i]);
		}
		printf(" ");
		for(i=0;i<n1;i++)
		{
			printf("%d",max_no[i]);
		}
		printf("\n");
		
		
	}
	
	
	
	
	
		
	

	
	return 0;
}
