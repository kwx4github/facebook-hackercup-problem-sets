#include<stdio.h>
#include<iostream>

using namespace std;

int findmax(int *arr,int start,int end)
{
  int i,loc;
  int max=-1;

  for(i=start;i<=end;i++)
  {
      if(arr[i]>max)
      {
          max=arr[i];
          loc=i;
      }
  }
  return loc;
}

int findmin(int *arr,int start,int end)
{
  int i,loc;
  int min=10;

  for(i=start;i<=end;i++)
  {
      if(arr[i]<min)
      {
          min=arr[i];
          loc=i;
      }
  }
  return loc;
}

int findmin2(int *arr,int start,int end)
{
  int i,loc;
  int min=10;
  loc=0;

  for(i=start;i<=end;i++)
  {
      if(arr[i]<min &&arr[i]!=0)
      {
          min=arr[i];
          loc=i;
      }
  }
  return loc;
}




int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);

    int num,mindig,maxdig,lmin,lmax,tcase,i,j,cnt,last;
    int arr[20];
    cnt=0;

    scanf("%d",&tcase);

    while(tcase--)
    {
        cnt++;
        scanf("%d",&num);


        if(num==0)
        {
            printf("Case #%d: 0 0\n",cnt);
            continue;
        }

        i=0;
        while(num>0)
        {
            arr[i]=num%10;
            num=num/10;
            i++;
        }

        last=i-1;

        printf("Case #%d: ",cnt);

        //MINIMUM
        lmin=findmin2(arr,0,last);

        if(arr[lmin]<arr[last] || last==0)
        {
            printf("%d",arr[lmin]);
            j=last-1;
            while(j>=0)
             {
               if(j==lmin)
                {
                  printf("%d",arr[last]);
                  j--;
                  continue;
                }
               printf("%d",arr[j]);
               j--;
            }
        }
        else
        {
            i=last-1;
            while(1)
            {
                 printf("%d",arr[i+1]);

                 lmin=findmin(arr,0,i);

                 if(arr[lmin]<arr[i])
                   {
                       printf("%d",arr[lmin]);
                       j=i-1;
                       while(j>=0)
                          {
                             if(j==lmin)
                               {
                                 printf("%d",arr[i]);
                                 j--;
                                 continue;
                               }
                             printf("%d",arr[j]);
                             j--;
                          }
                       break;
                 }
                 else
                 {
                     i=i-1;
                 }
                 if(i<0)
                 {
                     printf("%d",arr[i+1]);
                     break;
                 }


            }
        }

        printf(" ");

        //MAXIMUM
        lmax=findmax(arr,0,last);


        if(arr[lmax]>arr[last] || last==0)
        {
            printf("%d",arr[lmax]);
            j=last-1;
            while(j>=0)
             {
               if(j==lmax)
                {
                  printf("%d",arr[last]);
                  j--;
                  continue;
                }
               printf("%d",arr[j]);
               j--;
            }
        }
        else
        {
            i=last-1;
            while(1)
            {
                 printf("%d",arr[i+1]);

                 lmax=findmax(arr,0,i);

                 if(arr[lmax]>arr[i])
                   {
                       printf("%d",arr[lmax]);
                       j=i-1;
                       while(j>=0)
                          {
                             if(j==lmax)
                               {
                                 printf("%d",arr[i]);
                                 j--;
                                 continue;
                               }
                             printf("%d",arr[j]);
                             j--;
                          }
                       break;
                 }
                 else
                 {
                     i=i-1;
                 }
                 if(i<0)
                 {
                     printf("%d",arr[i+1]);
                     break;
                 }


            }
        }

       printf("\n");
    }
    return 0;
}
