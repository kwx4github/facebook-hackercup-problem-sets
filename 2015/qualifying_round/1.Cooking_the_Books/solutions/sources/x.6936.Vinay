#include<stdio.h>
#include<stdlib.h>

void main(void){

          int number,i,j,k;
          int small,big;
          int totalnumbers=1;
          int iterations;
          int swapd;
          int arraysize;
          int largest[10];
          int smallest[10];
          int original[10];
          int target,temp,targetpos,temppos;

          FILE* in_file = fopen("cooking_the_books.txt","r");
          FILE* out_file = fopen("out.txt","w");
          if (! in_file || !out_file )
          {

                printf("oops, file can't be read\n");
                exit(-1);
        }

        fscanf(in_file,"%d", &totalnumbers);
        iterations=1;
        while ( fscanf(in_file,"%d", &number )==1 && iterations<=totalnumbers){
                big=0,small=0;
                j=0;
                while(number){
                  largest[j] = number%10;
                  smallest[j]=largest[j];
                  number=number/10;
                  j++;
                }
                arraysize=j;

                if(arraysize==1){
                    //printf("Case #%d: %d %d\n",iterations,largest[0],smallest[0]);
                    fprintf(out_file,"Case #%d: %d %d\n",iterations,largest[0],smallest[0]);
                    iterations++;
                    continue;
                }

                //find largest in the array
                swapd=0;
                for(i=arraysize-1;i>=0 && swapd==0 ;i--){
                    target=largest[i];
                    targetpos=i;
                    for(j=i-1;j>=0;j--){
                        if(largest[j]>target){
                            target=largest[j];
                            targetpos=j;
                        }
                    }

                    if(targetpos!=i){
                        largest[targetpos]=largest[i];
                        largest[i]=target;
                        swapd=1;
                    }
                }

                //reform the large number
                for(i=0;i<arraysize;i++){
                    for(j=0;j<i;j++){
                        largest[i]=largest[i]*10;
                    }
                    big=big+largest[i];
                }

                 //find smallest in the array
                swapd=0;
                for(i=arraysize-1;i>=0 && swapd==0 ;i--){
                    target=smallest[i];
                    targetpos=i;
                    for(j=i-1;j>=0;j--){
                        if(target>smallest[j]){
                            target=smallest[j];
                            targetpos=j;
                        }
                    }

                    if(targetpos!=i){
                       if(!(i==arraysize-1 && target==0)){
                        smallest[targetpos]=smallest[i];
                        smallest[i]=target;
                        swapd=1;
                       }

                    }

                }

                //reform the small number
                for(i=0;i<arraysize;i++){
                    for(j=0;j<i;j++){
                        smallest[i]=smallest[i]*10;
                    }
                    small=small+smallest[i];
                }



               //printf("Case #%d: %d %d\n",iterations,small,big);
               fprintf(out_file,"Case #%d: %d %d\n",iterations,small,big);
               iterations++;
             }
    close(out_file);
    close(in_file);

}
