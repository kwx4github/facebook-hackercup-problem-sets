package cookBookPackage;

import java.util.ArrayList;
import java.util.Scanner;


public class CookBook {
	
	
	public static void main(String[] args) {
		Integer T; //lines of integers
		Scanner in = new Scanner(System.in);
		
		T = in.nextInt();

		Integer next = in.nextInt();
		for (int i=0; i< T; i ++) {
			Integer[] SandL = swapR(next);
			String Small = SandL[0].toString();
			String Large = SandL[1].toString();
			String caseN = Integer.toString(i+1);
			System.out.println("Case #"+caseN+": "+Small+ " "+ Large );
			next = in.nextInt();
	     }
		in.close();
	}


	public static Integer[] swapR(Integer N) {
		String s = N.toString();
		Integer number = s.length();
		if(number == 1 ) {
			return new Integer[] {N, N};
		} else {
			
			Integer SF = N;
			Integer LF = 0;
			Integer S = N;
			Integer L = 0;
			Integer Sz = N;
			Integer Lz = 0;
			for (int i = 0;i < number; i++) {
				
				// start from the charat0
				if (i == 0) {
					for(int z = 1; z< number; z++ ) {
						if(s.charAt(z) != 0) { //swap and compare
							char N0 = s.charAt(z);
							char Ni = s.charAt(i);
							Integer N0Check = Integer.valueOf(N0);
							if (N0 != '0') {
								StringBuilder newStringb = new StringBuilder(s);
								newStringb.setCharAt(0, N0);
								newStringb.setCharAt(z, Ni);
								String newString = newStringb.toString();
								Integer newInteger= Integer.valueOf(newString);
								if (newInteger >= Sz) {
									if (newInteger <= Lz) {
										// do nothing
									} else {
										Lz = newInteger;
									}
								} else {
									Sz = newInteger; 
								}
							} else {
								StringBuilder newStringb = new StringBuilder(s);
								
								String newString = newStringb.toString();
								Integer newInteger= Integer.valueOf(newString);
								if (newInteger >= Sz) {
									if (newInteger <= Lz) {
										// do nothing
									} else {
										Lz = newInteger;
									}
								} else {
									Sz = newInteger; 
								}
								
							}
							
							
						} 
					} // will give the Sz and Lz in the case of index0 
					
				} else { // when it's not the first digit, swap and compare directly 
					for (int f = i+1; f < number; f ++) {
						char N0 = s.charAt(i);
						char Nf = s.charAt(f);
						StringBuilder newStringb = new StringBuilder(s);
						newStringb.setCharAt(i, Nf);
						newStringb.setCharAt(f, N0);
						String newString = newStringb.toString();
						Integer newInteger= Integer.valueOf(newString);
						if (newInteger >= S) {
							if (newInteger <= L) {
								// do nothing
							} else {
								L = newInteger;
							}
						} else {
							S = newInteger; 
						}
					}
				} // will give the S and L in the case of not index0 
				// get conclusion 
				if (S < Sz) {
					SF = S;
				} else {
					SF = Sz;
				}
				
				if (L> Lz) {
					LF = L;
				} else {
					LF = Lz;
				} // get the final numbers 
				
			}
			return new Integer[] {SF, LF};
		}
	}
	

}
