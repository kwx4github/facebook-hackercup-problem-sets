import static java.lang.Integer.parseInt;
import static java.lang.String.valueOf;

import java.io.File;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Books {

	public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		sc.nextLine();
		for (int i = 0; i < t; i++) {
			String N = sc.nextLine();
			String ans1 = N;
			String ans2 = N;
			String trimmedN = N.substring(1, N.length());

			for (int digit = 0; digit < 9; digit++) {
				String valueOf = valueOf(digit);
				int lastIndexOf = trimmedN.lastIndexOf(valueOf);
				if (lastIndexOf != -1) {
					StringBuilder sb = new StringBuilder(N);
					inner: for (int k = 1; k < N.length() - 1; k++) {
						String nextFirstChar = new String(N.substring(k, k + 1));
						if (parseInt(nextFirstChar) > digit) {
							sb.replace(lastIndexOf + 1, lastIndexOf + 2,
									nextFirstChar);
							sb.replace(k, k + 1, valueOf);
							break inner;
						}
					}

					ans1 = sb.toString();
					break;
				}
			}
			
			for (int digit = 1; digit < 9; digit++) {
				String valueOf = valueOf(digit);
				int lastIndexOf = trimmedN.lastIndexOf(valueOf);
				if (lastIndexOf != -1) {
					StringBuilder sb = new StringBuilder(N);
					inner: for (int k = 0; k < N.length() - 1; k++) {
						String nextFirstChar = new String(N.substring(k, k + 1));
						if (parseInt(nextFirstChar) > digit) {
							sb.replace(lastIndexOf + 1, lastIndexOf + 2,
									nextFirstChar);
							sb.replace(k, k + 1, valueOf);
							break inner;
						}
					}
					
					String ansInterm = sb.toString();
					
					if(Integer.parseInt(ansInterm) < Integer.parseInt(ans1)){
					ans1 = ansInterm; 
					}
					
					break;
				}
			}

			for (int digit = 9; digit > 1; digit--) {
				String valueOf = valueOf(digit);
				int lastIndexOf = trimmedN.lastIndexOf(valueOf);
				if (lastIndexOf != -1) {
					StringBuilder sb = new StringBuilder(N);
					inner: for (int k = 0; k < N.length() - 1; k++) {
						String nextFirstChar = new String(N.substring(k, k + 1));
						if (parseInt(nextFirstChar) < digit) {
							sb.replace(lastIndexOf + 1, lastIndexOf + 2,
									nextFirstChar);
							sb.replace(k, k + 1, valueOf);
							break inner;
						}
					}

					ans2 = sb.toString();
					break;
				}
			}
			
			if(Integer.parseInt(N)<Integer.parseInt(ans1)){
				ans1=N;
			}

			if(Integer.parseInt(N)>Integer.parseInt(ans2)){
				ans2=N;
			}

			// System.out.println(Arrays.toString(intArray));

			System.out.print("Case #" + (i + 1) + ": " + ans1);
			System.out.print(" ");
			System.out.println(ans2);

		}
		sc.close();

	}

}
