import java.io.*;
import java.math.*;
import java.util.*;

public class QualA implements Runnable {
	BufferedReader in;
	PrintWriter out;
	StringTokenizer st;
	boolean file = true;
	String fileName = "A-small";

	public static void main(String[] args) throws Exception {
		new QualA().run();
	}

	private String next() throws Exception {
		if (st == null || !st.hasMoreElements())
			st = new StringTokenizer(in.readLine());
		return st.nextToken();
	}

	private int nextInt() throws Exception {
		return Integer.parseInt(next());
	}

	private long nextLong() throws Exception {
		return Long.parseLong(next());
	}

	private double nextDouble() throws Exception {
		return Double.parseDouble(next());
	}

	public void run() {
		try {
			if (file)
				in = new BufferedReader(new FileReader(fileName+".in"));
			else
				in = new BufferedReader(new InputStreamReader(System.in));
			if (file)
				out = new PrintWriter(new FileWriter(fileName+".out"));
			else
				out = new PrintWriter(System.out);
			solve();
		} catch (Exception ex) {
			throw new RuntimeException(ex);
		} finally {
			out.close();
		}
	}

	public void solve() throws Exception {
		int cases = nextInt();
		for(int step = 1; step <= cases; step++){
			int a = nextInt(), min = a, max = a;
			if (a < 10) {
				out.println("Case #"+step+": "+a+" "+a); continue;
			}
			char []c = (""+a).toCharArray();
			for (int i=0; i<c.length; i++) {
				for(int j=i+1; j<c.length; j++) {
					if (i==0 && c[j] == '0') continue;
					int tried = getSwapped(c, i, j);
					if (tried < min)
						min = tried;
					if (tried > max)
						max = tried;
				}
			}
			out.println("Case #"+step+": "+min+" "+max);
		}
	}
	
	int getSwapped(char c[], int i, int j) {
		char tmp = c[i];
		c[i] = c[j];
		c[j] = tmp;
		int res = Integer.parseInt(new String(c));
		tmp = c[i];
		c[i] = c[j];
		c[j] = tmp;
		return res;
	}
	
}