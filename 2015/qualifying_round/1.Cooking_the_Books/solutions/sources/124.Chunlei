#include <iostream>
#include <cstdio>
#include <string.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <set>
#include <bitset>
#include <stack>
#include <string>
#include <map>
#include <assert.h>


#define abs(x) ((x)>=0?(x):-(x))
#define i64 long long
#define u32 unsigned int
#define u64 unsigned long long
#define clr(x,y) memset(x,y,sizeof(x))
#define CLR(x) x.clear()
#define ph(x) push(x)
#define pb(x) push_back(x)
#define SZ(x) x.size()
#define PI acos(-1.0)
#define sqr(x) ((x)*(x))
#define MP(x,y) make_pair(x,y)
#define EPS 1e-11



#define pii pair<int,int>
#define FFF freopen("test","r",stdin)
#define all(a) a.begin(),a.end()

using namespace std;


void output(i64 x)
{
    if(x<0) putchar('-'),x=-x;
    if(x==0)
    {
        putchar('0');
        return;
    }
    int a[20],num=0;
    while(x) a[++num]=x%10,x/=10;
    while(num>0) putchar('0'+a[num--]);
}

inline i64 myInt()
{
    char c=getchar();
    while(!isdigit(c)&&c!='-') c=getchar();
    int flag=1;
    if(c=='-') flag=-1,c=getchar();
    i64 x=0;
    while(isdigit(c))
    {
        x=(x*10)+(c-'0');
        c=getchar();
    }
    if(-1==flag) return -x;
    return x;
}

const i64 mod=1000000007;
const int N=3005;


int n;

vector<int> V;

int cal()
{
    int ans=0;
    for(int i=SZ(V)-1;i>=0;i--)
    {
        ans=ans*10+V[i];
    }
    return ans;
}

int getMin()
{
    int ans=n;
    for(int i=0;i<SZ(V);i++)
    {
        for(int j=0;j<SZ(V);j++)
        {
            if(i==j) continue;
            swap(V[i],V[j]);
            if(V.back()!=0) ans=min(ans,cal());
            swap(V[i],V[j]);
        }
    }
    return ans;
}

int getMax()
{
    int ans=n;
    for(int i=0;i<SZ(V);i++)
    {
        for(int j=0;j<SZ(V);j++)
        {
            if(i==j) continue;
            swap(V[i],V[j]);
            if(V.back()!=0) ans=max(ans,cal());
            swap(V[i],V[j]);
        }
    }
    return ans;
}


int main()
{
  //  FFF;
   // freopen("out","w",stdout);
    int T=myInt();
    int num=0;
    while(T--)
    {
        n=myInt();

        if(n<=10)
        {
            printf("Case #%d: %d %d\n",++num,n,n);
            continue;
        }

        V.clear();
        int tmp=n;
        while(tmp) V.pb(tmp%10),tmp/=10;
        int p=getMin();
        int q=getMax();
        printf("Case #%d: %d %d\n",++num,p,q);
    }
}
