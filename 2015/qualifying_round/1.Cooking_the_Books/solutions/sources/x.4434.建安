#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
struct sth {int e, p;} a[9];
bool operator<(const sth& e1, const sth& e2) {return ((e1.e != e2.e) ? (e1.e < e2.e) : (e1.p < e2.p));};
int main()
{
	int T, l;
	sth Mx[10], Mn[10];
	char N[10];
	scanf("%d", &T);
	for (int cases = 1 ; cases <= T ; cases++){
		scanf("%s", N);
		printf("Case #%d: ", cases);
		if (N[0] == '0'){
			puts("0 0");
			continue;
		}
		l = strlen(N);
		for (int i = 0 ; i < l ; i++)
			a[i].e = N[i] - '0', a[i].p = i;
		sort(a, a + l);
		for (int i = 0 ; i < l ; i++)
			Mx[i] = a[l - i - 1], Mn[i] = a[i];
		if (Mn[0].e == 0)
			for (int i = 1 ; i < l ; i++)
				if (Mn[i].e > 0){
					swap(Mn[i], Mn[0]);
					break;
				}
		for (int i = 0 ; i < l ; i++){
			if (Mn[i].e != N[i] - '0'){
				swap(N[i], N[Mn[i].p]);
				printf("%s ", N);
				swap(N[i], N[Mn[i].p]);
				break;
			}
			if (i == l - 1)
				printf("%s ", N);
		}
		for (int i = 0 ; i < l ; i++){
			if (Mx[i].e != N[i] - '0'){
				swap(N[i], N[Mx[i].p]);
				printf("%s\n", N);
				swap(N[i], N[Mx[i].p]);
				break;
			}
			if (i == l - 1)
				printf("%s\n", N);
		}
	}
	return 0;
}