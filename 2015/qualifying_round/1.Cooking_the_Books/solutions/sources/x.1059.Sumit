/*
    xxx_joker/codersumit
*/
#include <bits/stdc++.h>
#define bitcnt(x) __builtin_popcountll(x)
#define sd(a) scanf("%d",&a)
#define sld(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define sc(a) scanf("%c",&a)
#define pd(a) printf("%d",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define space printf(" ");
#define nw printf("\n")
#define pb push_back
#define FOR(i,a,b) for(i=a;i<b;i++)
#define FORR(i,a,b) for(i=a;i>=b;i--)
#define all(v) v.begin(),v.end()
#define MAX 100005
#define mod 1000000007

typedef long long ll;
typedef unsigned long long ull;
using namespace std;

int main(){//while(1){
	int i,j,k,len,test,temp,index;
	string str,str1,str2;
	cin>>test;
	FOR(k,1,test+1){
        cin>>str;
        str1=str2=str;
        len=str.length();
        for(i=0;i<len;i++){
            temp=str[i]-'0';
            index=i;
            for(j=i+1;j<len;j++){
                if(i==0){
                    if((str[j]-'0')>0 && (str[j]-'0')<temp){
                        temp=str[j]-'0';
                        index=j;
                    }
                }
                else{
                    if((str[j]-'0')<temp){
                        temp=str[j]-'0';
                        index=j;
                    }
                }
            }
            if(index==i)
                continue;
            else{
                str1[index]=str1[i];
                str1[i]=(char)(temp+'0');
                break;
            }
        }
        for(i=0;i<len;i++){
            temp=str[i]-'0';
            index=i;
            for(j=i+1;j<len;j++){
                if((str[j]-'0')>temp){
                    temp=str[j]-'0';
                    index=j;
                }
            }
            if(index==i)
                continue;
            else{
                str2[index]=str2[i];
                str2[i]=(char)(temp+'0');
                break;
            }
        }
        cout<<"Case #"<<k<<": "<<str1<<" "<<str2<<endl;
	}
    return 0;
}
