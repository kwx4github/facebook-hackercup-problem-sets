// N.C. 2015
using System;
using System.Text;
using System.IO;

public class HC2015_r0_01
{
    static bool debugging = false;

    public static void DumpToFile(string text)
    {
        StreamWriter dumpF = File.AppendText("test001.txt");
        dumpF.WriteLine(text);
        dumpF.Close();
    }

    public static string Swapped(string s, int pos1, int pos2)
    {
        // Special cases, which lead to 1 digit less
        if ((pos1 == 0) && s[pos2] == '0') return s;
        if ((pos2 == 0) && s[pos1] == '0') return s;

        // General case
        StringBuilder result = new StringBuilder(s);
        char c1 = s[pos1];
        char c2 = s[pos2];
        result[pos1] = c2;
        result[pos2] = c1;
        return result.ToString();
    }


    public static string SwapMax(string s)
    {
        // First, let's sort all the digits descending
        char[] letters = s.ToCharArray();
        Array.Sort(letters);
        Array.Reverse(letters);
        string sSorted = new String(letters);
        // And the let's compare
        for (int i = 0; i < s.Length; i++)
            if (s[i] != sSorted[i])  // If difference found, let's swap
            {
                int posMax = i;
                int previousPos = s.IndexOf(sSorted[i]);
                return Swapped(s, posMax, previousPos);
            }
        return s;
    }


    public static string SwapMin(string s)
    {
        // First, let's sort all the digits ascending
        char[] letters = s.ToCharArray();
        Array.Sort(letters);
        // First one must not be a zero
        if (letters[0] == '0')
        {
            for (int i = 1; i < letters.Length; i++)
            {
                if (letters[i] != '0')
                {
                    letters[0] = letters[i];
                    letters[i] = '0';
                    break;
                }
            }
        }
        string sSorted = new String(letters);
        // And the let's compare
        for (int i = 0; i < s.Length; i++)
            if ((s[i] != sSorted[i])  // If difference found, let's swap
                )
            {
                int posMin = i;
                int previousPos = s.IndexOf(sSorted[i]);
                return Swapped(s, posMin, previousPos);
            }
        return s;
    }



    public static void Process(string text, int count)
    {
        string max = SwapMax(text);
        string min = SwapMin(text);
        Console.WriteLine("Case #" + count + ": " + min + " " + max);
    }



    public static void Main(string[] args)
    {
        if (args.Length > 0)
            Console.SetIn(new StreamReader(args[0]));

        int amountOfCases = Convert.ToInt32(Console.ReadLine());

        for (int i = 1; i <= amountOfCases; i++)
        {
            Process(Console.ReadLine(), i);
        }
    }
}
