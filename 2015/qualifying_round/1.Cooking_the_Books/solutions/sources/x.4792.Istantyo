import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.util.Arrays;
import java.util.Scanner;

public class CookingTheBook {

	public static void main(String[] args) throws Exception {
		System.setIn(new FileInputStream("cooking_the_books_example_input.txt"));
		Scanner sc = new Scanner(new BufferedInputStream(System.in));
		
		int T = sc.nextInt();
		sc.nextLine();
		
		for(int t=1; t<=T; t++){
			String str = sc.nextLine();
			int[] val = toArrayInt(str);
			int min = 0;
			int max = 0;
			
			// search max
			int[] vmax = Arrays.copyOf(val, val.length);
			for(int i=0; i<val.length; i++){
				int max_pos = i;
				int max_val = val[i];
				
				for(int j=i+1; j<val.length; j++){
					if(max_val <= val[j]){
						max_val = val[j];
						max_pos = j;
					}
				}
				
				if(max_val > val[i]){
					vmax[max_pos] = vmax[i];
					vmax[i] = max_val;
					break;
				}
			}
			
			// search min
			int[] vmin = Arrays.copyOf(val, val.length);
			for(int i=0; i<val.length; i++){
				int min_pos = i;
				int min_val = val[i];
				
				for(int j=i+1; j<val.length; j++){					
					if(min_val >= val[j]){
						min_val = val[j];
						min_pos = j;
					}
				}
				
				if(min_val < val[i] && !(i == 0 && min_val == 0)){
					vmin[min_pos] = vmin[i];
					vmin[i] = min_val;
					break;
				}
			}
			
			min = concatArrayInt(vmin);
			max = concatArrayInt(vmax);
			System.out.printf("Case #%d: %d %d\n", t, min, max);
		}
	}
	
	public static int[] toArrayInt(String s){
		int[] res = new int[s.length()];
		for(int i=0; i<s.length(); i++){
			res[i] = Integer.parseInt(s.substring(i, i+1));
		}
		return res;
	}
	
	public static int concatArrayInt(int[] val){
		String res = "";
		for(int i=0; i<val.length; i++){
			res += val[i];
		}
		
		return Integer.parseInt(res);
	}
}
