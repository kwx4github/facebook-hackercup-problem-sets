#! /usr/bin/perl
## Author: Milan Sorm <sorm@milansorm.cz>
## Facebook Hacker Cup 2015 Qualification ROund

use strict;
use warnings;

my $count = <>;
chomp $count;

if ( ! defined $count || $count !~ /^\d+$/ || $count < 1 || $count > 100 ) {
        print "ERROR: Invalid input (violate constraints).\n";
        exit;
}

my $counter = 0;
while ( $count-- > 0 ) {
        my $number = <>;
        chomp $number;

        # check violations
        if ( ! defined $number || $number !~ /^\d+$/ || $number < 0 || $number > 999_999_999 ) {
                print "ERROR: Invalid input (violate constraints).\n";
                exit;
        }

        # split to digits
        my @digits = split //, $number;
        for my $index ( 0 .. $#digits ) {
                # ignore zero-prefixes
                if ( $digits[ $index ] != 0 ) {

                        # found highest the less important weight and interchange with first
                        my $highest = $index;
                        for my $hindex ( $index + 1 .. $#digits ) {
                                if ( $digits[ $hindex ] >= $digits[ $highest ] ) {
                                        $highest = $hindex;
                                }
                        }

                        # is swap necessary?
                        if ( $highest != $index ) {
                                ( $digits[ $highest ], $digits[ $index ] ) = ( $digits[ $index ], $digits[ $highest ] );
                        }

                        # and finish
                        last;
                }
        }

        my $faked = join '', @digits;
        print "Case #". ( ++$counter ). ": $number $faked\n";
}
