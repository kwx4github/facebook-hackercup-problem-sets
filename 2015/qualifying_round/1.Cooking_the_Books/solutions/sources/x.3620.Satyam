#include <stdio.h>
#include <stdlib.h>
#define SIZE 9

int array[SIZE];
int loc;

void break_num(int num)
{
    int i = 0;
    loc = -1;
    for( i = 0; num > 0; i++)
    {
        array[i] = num % 10;
        num = num / 10;
        loc = i;
    }
}

int combine_num()
{
   int i = 0, num = 0;
   for( i = loc; i >= 0; i--)
   {
       num = num * 10 + array[i];
   }

   return num;
}

void swap_index( int index1, int index2)
{
    int tmp = 0;
    tmp = array[index1];
    array[index1] = array[index2];
    array[index2] = tmp;
}

void cook_the_num(int num, int *small, int *largest)
{
    int i = 0, hig_pos = -1, min_pos = -1, tmp1 = 0, tmp2 = 0 ;
    break_num(num);
    tmp1 = array[loc];
    tmp2 = array[loc];
    for( i = loc - 1; i >= 0; i--)
    {
         if(array[i] >= tmp1) {
            tmp1 = array[i];
            hig_pos = i;
         }
         if( (array[i] != 0 ) && (array[i] <= tmp2) ) {
            tmp2 = array[i];
            min_pos = i;
         }
    }

    if(hig_pos != -1) {
            swap_index(loc, hig_pos);
            *largest = combine_num();
            swap_index(loc, hig_pos);
    }
    else {
        *largest = num;
    }

    if(min_pos != -1) {
            swap_index(loc, min_pos);
            *small = combine_num();
    }
    else {
        *small = num;
    }
}

int main()
{
    int large = 0, small = 0, num_input = 0, i = 1, num = 0, ret = 0;

    FILE *in_file  = fopen("cooking_the_books.txt", "r"); // read only
    FILE *out_file = fopen("cooking_the_books_output.txt", "w"); // write only

    // test for files not existing.
    if (in_file == NULL || out_file == NULL)
    {
        printf("Error! Could not open file\n");
        exit(-1); // must include stdlib.h
    }

    fscanf(in_file, "%d", &num_input);
    while( num_input != 0 )
    {
        small = 0; large = 0;
        ret = fscanf(in_file, "%d", &num);
        if( ret <= 0 ) break;

        if( num != 0)
            cook_the_num(num, &small, &large);
        fprintf(out_file, "Case #%d:\t%d\t%d\n", i, small, large); // write to file
        i++;
    }

    return 0;
}
