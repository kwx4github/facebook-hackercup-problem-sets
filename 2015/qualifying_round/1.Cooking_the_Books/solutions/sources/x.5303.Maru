#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <inttypes.h>

using namespace std;

typedef unsigned int UINT;
typedef long long unsigned int ULL;
typedef long long int LL;

const int MAXN = 15;
const int MOD = 1000000007;

void swap(char *buf, char i, char j)
{
    char tmp = buf[j];
    buf[j] = buf[i];
    buf[i] = tmp;
}

int main()
{
  int T;
  scanf("%d", &T);
  for (int t = 0; t < T; t++) {
    char num[MAXN];
    scanf("%s", num);

    char smallest[MAXN], largest[MAXN];
    memcpy(smallest, num, sizeof(smallest));
    memcpy(largest, num, sizeof(largest));

    int N = strlen(num);
    int l = 0;
    while (l < N) {
        int minr = l;
        for (int r = N - 1; r > l; r--) {
            if (num[minr] > num[r]) {
                minr = r;
            }
        }
        if (minr != l && !(num[minr] == '0' && l == 0)) {
            swap(smallest, l, minr);
            break;
        }
        l++;
    }

    l = 0;
    while (l < N) {
        int maxr = l;
        for (int r = l + 1; r < N; r++) {
            if (num[maxr] < num[r]) {
                maxr = r;
            }
        }
        if (maxr != l && !(num[maxr] == '0' && l == 0)) {
            swap(largest, l, maxr);
            break;
        }
        l++;
    }
    printf("Case #%d: %s %s\n", t+1, smallest, largest);
  }
  return 0;
}
