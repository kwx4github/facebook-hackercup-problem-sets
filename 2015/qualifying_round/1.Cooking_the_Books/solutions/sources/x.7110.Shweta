import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class account {

	public static void main(String[] args) throws NumberFormatException, IOException {
		// TODO Auto-generated method stub
		FileReader fr=new FileReader("/home/shweta/ecljava_workspace/accounts/bin/accounts/cooking_the_books.txt");
		BufferedReader br=new BufferedReader(fr);	  
	    int T=Integer.parseInt(br.readLine());	  
	    
	    for(int i=0;i<T;i++){
	    	String N=br.readLine();
	    	functions x=new functions();
	    	x.minMax(N);
	    	int maxPos=x.getMaxPos();
	    	int minPos=x.getMinPos();
	        
	    	System.out.println("Case #"+(i+1)+": "+x.swap(minPos, N)+" "+x.swap(maxPos, N));
	    }
	      

	}

}


class functions{
	int max,min,pos_max,pos_min;
	void minMax(String N){
		char num[]=N.toCharArray();
		max=num[0];
		min=num[0];
		for(int i=0;i<num.length;i++){
			if(num[i]>max&&num[i]!=0)
			{	max=num[i];
			    pos_max=i;
			
		}
			if(num[i]<min&&num[i]!=0){
				min=num[i];
				pos_min=i;
			}
			
	}
		}
	
	
	
	 int getMax(){
		 return max;
	 }
	 
	 int getMin(){
		 return min;
	 }
	 
	 int getMaxPos(){
		 return pos_max;
	 }
	 
	 int getMinPos(){
		 return pos_min;
	 }
	 
	 String swap(int position,String N){
		 
		 char num[]=N.toCharArray();
		 
		 if(num[position]!=48 && num[0]!=48){
			 
		 char temp=num[0];
		 num[0]=num[position];
		 num[position]=temp;
		 }
		 return new String(num);
	 
	 }
}


