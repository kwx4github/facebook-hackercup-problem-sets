#!/usr/bin/env python

import sys


def get_max(n):
        digits = [ int(x) for x in list(str(n)) ]

        #big
        desc_sorted = sorted(digits)[::-1]
        swap_a, swap_b = 0,0
        for x in range(0,len(digits)):
                if digits[x] != desc_sorted[x]:
                        swap_a = x
                        for y in range(0,len(digits)):
                                if digits[y] == desc_sorted[x]:
                                        swap_b = y
                                        break
                        break
        big = digits
        big[swap_a],big[swap_b] = big[swap_b],big[swap_a]
        return ''.join([ str(x) for x in big])

def get_min(n):
        digits = [ int(x) for x in list(str(n)) ]

        #small
        desc_sorted = sorted(digits)
        for f in range(0,len(desc_sorted)):
                if desc_sorted[f] != 0:
                        desc_sorted[0],desc_sorted[f] = desc_sorted[f], desc_sorted[0]
                        break

        swap_a, swap_b = 0,0
        for x in range(0,len(digits)):
                if digits[x] != desc_sorted[x]:
                        swap_a = x
                        for y in range(0,len(digits)):
                                if digits[y] == desc_sorted[x]:
                                        swap_b = y
                                        break
                        break
        small = digits
        small[swap_a],small[swap_b] = small[swap_b],small[swap_a]
        return ''.join([ str(x) for x in small])


def process(case,val):
        val = int(val)
        res = get_min(val) + " " +get_max(val)
        print "Case #" + str( case ) + ": " + res

def main():
        with open("inp.txt") as f:
                entries = int( f.readline().strip('\n') )
                for e in range(1, entries+1):
                        val = f.readline().strip('\n')
                        process(e,val)

if __name__ == '__main__':
        main()
