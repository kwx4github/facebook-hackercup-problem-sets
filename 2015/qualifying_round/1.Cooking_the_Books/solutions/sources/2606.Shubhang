/* Shubhang Verma */

import java.io.*;
import java.math.*;
import java.util.*;
public class Main {

    public static void main(String[] args) 
    {	
        InputStream inputstream = System.in;
        OutputStream outputstream = System.out;
        InputReader in = new InputReader(inputstream);
        OutputWriter out = new OutputWriter(outputstream);
        mysolver mysol = new mysolver();
        mysol.solve(in, out);
        out.close();
    }

}

class mysolver {
	long mod = 1000000007;
	
    void solve(InputReader in,OutputWriter out)
    {
    	PrintWriter pout = new PrintWriter(new BufferedOutputStream(System.out));	
    	int t  = in.readInt();
    	for(int I=1;I<=t;I++)
    	{
    		char c[] = in.readString().toCharArray();
    		char small[] = smallest(c);
    		char large[] = largest(c);
    		//System.out.println(value(c));
    		pout.println("Case #"+I+": "+value(small)+" "+value(large));
    	}
        pout.close();
    }
    
    public char[] smallest(char[] c)
    {
    	char small[] = new char[c.length];
    	char temp[]  = new char[c.length];
    	
    	for(int i=0;i<c.length;i++)
    	{
    		small[i] = temp[i] = c[i];
    	}
    	
    	for(int i=0;i<c.length;i++)
    	{
    		for(int j=0;j<c.length;j++)
    		{
    			char tempo = temp[i];
    			temp[i] = temp[j];
    			temp[j] = tempo;
    			
    			if(temp[0] == '0')
    			{

        			tempo = temp[i];
        			temp[i] = temp[j];
        			temp[j] = tempo;
    				continue;
    			}
    			if(value(temp) < value(small))
    			{
    				//System.out.println(temp[0]+" jjkj");
    				for(int i1=0;i1<c.length;i1++)
    				{
    					small[i1] = temp[i1];
    					//System.out.println("YO YO  "+small[i1] + " "+i1);
    				}
    				//System.out.println("\n\n");
    			}
    			
    			
    			tempo = temp[i];
    			temp[i] = temp[j];
    			temp[j] = tempo;
    			
    		}
    	}
    	
    	return small;
    }
    public char[] largest(char[] c)
    {
    	char large[] = new char[c.length];
    	char temp[]  = new char[c.length];
    	
    	for(int i=0;i<c.length;i++)
    	{
    		large[i] = temp[i] = c[i];
    	}
    	
    	for(int i=0;i<c.length;i++)
    	{
    		for(int j=0;j<c.length;j++)
    		{
    			char tempo = temp[i];
    			temp[i] = temp[j];
    			temp[j] = tempo;
    			
    			if(temp[0] == '0')
    			{
        			tempo = temp[i];
        			temp[i] = temp[j];
        			temp[j] = tempo;
    				continue;
    			}
    			
    			if(value(temp) > value(large))
    			{
    				for(int i1=0;i1<c.length;i1++)
    				{
    					large[i1] = temp[i1];
    					//System.out.println("YO ++ YO  "+large[i1] + " "+i1);
    				}
    			}
    			
    			tempo = temp[i];
    			temp[i] = temp[j];
    			temp[j] = tempo;
    			
    		}
    	}
    	
    	return large;
    }
    public int value(char[] c)
    {
    	int val = 0;
    	for(int i=0;i<c.length;i++)
    	{
    		val = 10*val + c[i]-48;
    	}
    	return val;
    }
}
class InputReader {
    private InputStream stream;
    private byte[] buf = new byte[1024];
    private int curChar;
    private int numChars;
    private SpaceCharFilter filter;
 
    public InputReader(InputStream stream) {
        this.stream = stream;
    }
    
    public int read() {
        if (numChars == -1)
            throw new InputMismatchException();
        if (curChar >= numChars) {
            curChar = 0;
            try {
                numChars = stream.read(buf);
            } catch (IOException e) {
                throw new InputMismatchException();
            }
            if (numChars <= 0)
                return -1;
        }
        return buf[curChar++];
    }
 
    public int readInt() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        int sgn = 1;
        if (c == '-') {
            sgn = -1;
            c = read();
        }
        int res = 0;
        do {
            if (c < '0' || c > '9')
                throw new InputMismatchException();
            res *= 10;
            res += c - '0';
            c = read();
        } while (!isSpaceChar(c));
        return res * sgn;
    }
 
    public String readString() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        StringBuilder res = new StringBuilder();
        do {
            res.appendCodePoint(c);
            c = read();
        } while (!isSpaceChar(c));
        return res.toString();
    }
 
    public boolean isSpaceChar(int c) {
        if (filter != null)
            return filter.isSpaceChar(c);
        return isWhitespace(c);
    }
 
    public static boolean isWhitespace(int c) {
        return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
    }
 
    public String next() {
        return readString();
    }
 
    public interface SpaceCharFilter {
        public boolean isSpaceChar(int ch);
    }
}
 
class OutputWriter {
    private final PrintWriter writer;
 
    public OutputWriter(OutputStream outputStream) {
        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));
    }
 
    public OutputWriter(Writer writer) {
        this.writer = new PrintWriter(writer);
    }
 
    public void close() {
        writer.close();
    }
 
    public void printLine(int i) {
        writer.println(i);
    }
}
 
class IOUtils {
 
    public static void readIntArrays(InputReader in, int[]... arrays) {
        for (int i = 0; i < arrays[0].length; i++) {
            for (int j = 0; j < arrays.length; j++)
                arrays[j][i] = in.readInt();
        }
    }
 
    }
