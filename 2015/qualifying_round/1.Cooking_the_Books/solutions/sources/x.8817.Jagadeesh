#include <iostream>
#include <sstream>
#include <algorithm>

std::string largest(std::string x) {
  if(x.size() == 1) return x;
  std::string::iterator i=x.begin(), j=++(x.begin());
  while(true) {
    if(j == x.end()) {
      return x;
    }
    if(*i >= *j) {
      ++i;
      ++j;
      continue;
    }
    break;
  }
  std::string::iterator k=j, maxpointer=k;
  int max = *maxpointer;
  while(true) {
    ++k;
    if(k == x.end()) {
      break;
    }
    if(*k >= max) {
      maxpointer = k;
      max = *maxpointer;
    }
  }
  while(true) {
    if(*i < max) {
      if(i == x.begin()) {
        *i = *i + *maxpointer - (*maxpointer = *i);
        break;
      }
      --i;
      --j;
      continue;
    }
    if(*i >= max) {
      *j = *j + *maxpointer - (*maxpointer = *j);
      break;
    }
  }
  return x;
}

std::string leastIncludingZero(std::string x) {
  std::string::iterator i=x.begin(), j=++(x.begin());
  while(true) {
    if(j == x.end()) {
      return x;
    }
    if(*i <= *j) {
      ++i;
      ++j;
      continue;
    }
    break;
  }
  std::string::iterator k=j, minpointer=k;
  int min = *minpointer;
  while(true) {
    ++k;
    if(k == x.end()) {
      break;
    }
    if(*k <= min) {
      minpointer = k;
      min = *minpointer;
    }
  }
  while(true) {
    if(*i > min) {
      if(i == x.begin()) {
        *i = *i + *minpointer - (*minpointer = *i);
        break;
      }
      --i;
      --j;
      continue;
    }
    if(*i <= min) {
      *j = *j + *minpointer - (*minpointer = *j);
      break;
    }
  }
  return x;
}

std::string least(std::string s) {
  if(s.size() == 1) return s;
  std::string::iterator i=s.begin(), minpointer=i;
  while(i != s.end()) {
    if((*i < *minpointer) and (*i != '0')) minpointer = i;
    ++i;
  }

  if(minpointer != s.begin()) {
    *minpointer = *minpointer + *s.begin() - (*s.begin() = *minpointer);
    return s;
  }
  else {
    std::string x = *s.begin() + leastIncludingZero(s.substr(1));
    return x;
  }
}


int main() {
  int T;
  std::cin >> T;
  long long int N;
  for(int i=0; i<T; ++i) {
    std::cin >> N;
    std::stringstream ss;
    ss << N;
    std::string s = ss.str();
    std::cout << "Case #" << i+1 << ": " << least(s) << ' ' << largest(s) << '\n';
  }
}
