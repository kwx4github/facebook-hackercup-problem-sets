#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <string>
using namespace std;

ifstream fin ("A.in");
ofstream fout ("A.out");

int main() {
	int T, N, mindigit, maxdigit, minindex, maxindex, c, i, j;
	string S, small, large;
	char temp;
	fin >> T;
	for (c = 1; c <= T; c++) {
		fin >> S;
		N = S.size();
		small = S;
		large = S;

		maxdigit = (int) S[N-1] - (int) '0';
		maxindex = N-1;
		int maxswap = N-1, maxswap2 = N-1;
		for (i = N-2; i >= 0; i--) {
			if ((int) S[i] - (int) '0' < maxdigit) {
				maxswap = i;
				maxswap2 = maxindex;
			}
			if (maxdigit < (int) S[i] - (int) '0') {
				maxdigit = (int) S[i] - (int) '0';
				maxindex = i;
			}
		}
		temp = large[maxswap];
		large[maxswap] = large[maxswap2];
		large[maxswap2] = temp;

		bool flag = false;
		mindigit = 9;
		for (i = N-1; i > 0; i--) {
			if ((int) S[i] - (int) '0' < mindigit && (int) S[i] - (int) '0' > 0) {
				mindigit = (int) S[i] - (int) '0';
				minindex = i;
			}
		}
		if (mindigit < (int) S[0] - (int) '0') {
			flag = true;
			temp = small[0];
			small[0] = small[minindex];
			small[minindex] = temp;
		}
		int minswap = N-1, minswap2 = N-1;
		minindex = N-1;
		if (!flag) {
			mindigit = (int) S[N-1] - (int) '0';
			for (i = N-2; i > 0; i--) {
				if ((int) S[i] - (int) '0' > mindigit) {
					minswap = i;
					minswap2 = minindex;
				}
				if (mindigit > (int) S[i] - (int) '0') {
					mindigit = (int) S[i] - (int) '0';
					minindex = i;
				}
			}
			temp = small[minswap];
			small[minswap] = small[minswap2];
			small[minswap2] = temp;
		}


		fout << "Case #" << c << ": " << small << ' ' << large << endl;

	}

	return 0;

}