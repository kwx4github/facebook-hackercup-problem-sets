import java.io.*;
import java.util.*;

public class Q1
{
  public static void main (String[] args) throws Exception
  {
    Scanner in = new Scanner(new File("cooking_the_books.txt"));
    PrintWriter out = new PrintWriter(new FileWriter("out.txt"));
    
    int num = in.nextInt();
    for (int t = 0; t < num; t++)
    {
      String k = in.next();
      String biggest = k;
      String smallest = k;
      boolean done = false;
      for (int y = 0;!done && y < k.length()-1;y++)
      {
        int digit = Integer.parseInt(k.charAt(y)+"");
        int best = digit;
        int bestIndex = -1;
        for (int x =y+1; x< k.length(); x++)
        {
          int test = Integer.parseInt(k.charAt(x)+"");
          if (test >= best)
          {
            best = test;
            bestIndex = x;
          }
        }
        if (best != digit) {
          //System.out.println(k.charAt(y) + " " +k.charAt(bestIndex));
          biggest = k.substring(0,y)+k.substring(bestIndex,bestIndex+1)+k.substring(y+1,bestIndex)+k.substring(y,y+1);
          if (bestIndex < k.length()-1) biggest+= k.substring(bestIndex+1);
          done = true;
        }
      }
      
      done = false;
      for (int y = 0;!done && y < k.length()-1;y++)
      {
        int digit = Integer.parseInt(k.charAt(y)+"");
        int best = digit;
        int bestIndex = -1;
        for (int x =y+1; x< k.length(); x++)
        {
          int test = Integer.parseInt(k.charAt(x)+"");
          if (test == 0 && y == 0) continue;
          if (test < best)
          {
            best = test;
            bestIndex = x;
          }
        }
        if (best != digit) {
          smallest = k.substring(0,y)+k.substring(bestIndex,bestIndex+1)+k.substring(y+1,bestIndex)+k.substring(y,y+1);
          if (bestIndex < k.length()-1) smallest+= k.substring(bestIndex+1);
          done = true;
        }
      }
      
      out.println("Case #"+(t+1)+": "+smallest + " " + biggest);
      System.out.println("Case #"+(t+1)+": "+smallest + " " + biggest);
    }
    in.close();
    out.close();
  }// end main
}