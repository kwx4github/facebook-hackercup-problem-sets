// Make sure we got a filename on the command line.
if (process.argv.length < 3) {
  console.log('Usage: node ' + process.argv[1] + ' FILENAME');
  process.exit(1);
}

Array.prototype.swap = function (x,y) {
  var b = this[x];
  this[x] = this[y];
  this[y] = b;
  return this;
} ;

Array.prototype.clone = function() {
	return this.slice(0);
} ;

// Read the file and print its contents.
var fs = require('fs')
  , filename = process.argv[2];

fs.readFile(filename, 'utf8', function(err, data) {
  if (err) throw err;
  // console.log('OK: ' + filename);
  // console.log(data.toString().split("\n"))

  var cnt = 0 ;
  
  data.toString().split("\n").forEach ( function (eln, idx) {

  	// console.log ( idx + " " + cnt) ;
  	if ( idx == 0 ) {
  		cnt = eln;
  		if ( !(1 <= cnt && cnt < 100) ) console.log ( 'something wrong with T value');
  		return ;
  	}

  	if ( idx > cnt) return ;

  	if ( !(0 <= eln && eln <= 999999999)) console.log ( 'something wrong with N value') ;
  	// console.log ( eln + "  " + idx) ;
  	var num_array = eln.split("") ;

  	var min_copy_array = num_array.clone() ;
  	var max_copy_array = num_array.clone() ;
  	// console.log ( num_array) ;
  	var filterd_zero_array = num_array.filter(function (element) {
  		return element > 0 ;
  	}) ;

  	var min = Math.min.apply(Math, filterd_zero_array) ;
  	var max = Math.max.apply(Math, filterd_zero_array) ;
  	// console.log ( min + " " + max) ;

  	var indexOfMin = num_array.indexOf( min.toString()) ;
  	var indexOfMax = num_array.indexOf( max.toString()) ;

  	// console.log ( indexOfMin + " " + indexOfMax) ;


  	if ( indexOfMin > 0) {
  		min_copy_array.swap(0, indexOfMin) ;
  	}

  	if ( indexOfMax > 0) {
  		max_copy_array.swap(0, indexOfMax) ;
  	}



  	var min_val = min_copy_array.join('') ;
  	var max_val = max_copy_array.join('') ;
  	console.log ( "Case #"+idx+": " + min_val + " " + max_val ) ;
  })
  

});