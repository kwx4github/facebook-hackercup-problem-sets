import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.*;


public class A {	
	BufferedReader reader;
    StringTokenizer tokenizer;
    PrintWriter out;

    public void solveCase() throws IOException {
        String N = reader.readLine();
        int[] max = new int[N.length()];
        int[] min = new int[N.length()];
        for (int i = 0; i < N.length(); i++) {
            max[i] = Character.getNumericValue(N.charAt(i));
            min[i] = Character.getNumericValue(N.charAt(i));
        }
        for (int i = 0; i < N.length(); i++) {
            int maxIndex = i;
            for (int j = i+1; j < N.length(); j++) {
                if (max[j] > max[maxIndex]) {
                    maxIndex = j;
                }
            }
            if (maxIndex != i) {
                int tmp = max[maxIndex];
                max[maxIndex] = max[i];
                max[i] = tmp;
                break;
            }
        }

        for (int i = 0; i < N.length(); i++) {
            int minIndex = i;
            for (int j = i+1; j < N.length(); j++) {
                if (min[j] < min[minIndex] && min[j] != 0) {
                    minIndex = j;
                }
            }
            if (minIndex != i) {
                int tmp = min[minIndex];
                min[minIndex] = min[i];
                min[i] = tmp;
                break;
            }
        }

        for (int n: min) {
            out.print(n);
        }
        out.print(" ");
        for (int n: max) {
            out.print(n);
        }
    }
    
	public void solve() throws IOException {
        int T = nextInt();
		for (int t = 1; t <= T; t++) {
            out.print("Case #" + t + ": ");
            solveCase();
            out.println();
        }
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		new A().run();
	}
	
	public void run() {
        try {
            reader = new BufferedReader(new InputStreamReader(System.in));
            tokenizer = null;
            out = new PrintWriter(System.out);
            solve();
            reader.close();
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }

    long nextLong() throws IOException {
        return Long.parseLong(nextToken());
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(nextToken());
    }

    String nextToken() throws IOException {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }

}
