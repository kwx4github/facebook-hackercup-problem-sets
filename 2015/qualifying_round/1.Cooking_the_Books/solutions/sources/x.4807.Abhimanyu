'''
Created on 10-Jan-2015

@author: abhimanyu
'''
import sys

class CookingTheBooks(object):
    '''
    HackerCup 2015 Question No. 1 is Cooking the Books.
    '''
    def __init__(self, inpFile, outFile):
        '''
        Constructor Takes INputfile name as input.
        '''
        self._inpfile = inpFile
        self._outfile = outFile
    
    def findMinimumFromNum(self,strval):
        retval = list(strval.rstrip('\n'))
        strlen = len(retval)
        minval=''
        try:
            minval = retval[0]
        except IndexError:
            print 'Input value length should be at least in One Digit'
            sys.exit(0)
        curr_index = 0
        for i in range(strlen):
            if ((retval[i]<=minval) and (retval[i]!= '0')) :
                minval = retval[i]
                curr_index = i
        temp = retval[0]
        retval[0] = retval[curr_index]
        retval[curr_index] = temp
        return ''.join(retval)
    
    def findMaximumFromNum(self,strval):
        retval = list(strval.rstrip('\n'))
        strlen = len(retval)
        maxval=''
        try:
            maxval = retval[0]
        except IndexError:
            print 'Input value length should be at least in One Digit'
            sys.exit(0)
        curr_index = 0
        for i in range(strlen):
            if ((retval[i]>=maxval) and (retval[i]!= '0')) :
                maxval = retval[i]
                curr_index = i
        temp = retval[0]
        retval[0] = retval[curr_index]
        retval[curr_index] = temp
        return ''.join(retval)
    
    def solveProblem(self):
        inpfile = open(self._inpfile,'r')
        outfile = open(self._outfile,'w')
        ttc = int(inpfile.readline())
        for i in range(ttc):
            moneyval = inpfile.readline()
            outfile.write("Case #{0}: {1} {2}\n".format(i+1,self.findMinimumFromNum(moneyval),self.findMaximumFromNum(moneyval)))
        inpfile.close()
        outfile.close()
        print "Finished .."

def main():
    inpfile = "cooking_the_books.txt"
    outfile = "b.txt"
    ctb = CookingTheBooks(inpfile,outfile)
    ctb.solveProblem()

if __name__ == '__main__':
    main()