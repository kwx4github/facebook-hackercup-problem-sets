#include<iostream>
#include<string>
#include<sstream>
#include<vector>
#include<utility>

using namespace std;

string swap(string s, int i, int j)
{
    if(i!=j) {
        char temp = s[i];
        s[i] = s[j];
        s[j] = temp;
    }
    return s;
}

pair<int,int> find_next_max(vector<int> v, int start)
{
    if(start ==  v.size() -1)
        return make_pair(start, start);

    int max = start;

    for(int i=start;i <v.size();i++) {
        if (v[i]> v[max]) max = i;
    }

    if (max == start)
        return find_next_max(v, ++start);
    else
        return make_pair(start, max);
}

int cookbook(int number)
{
    string snum;
    ostringstream convert;

    convert << number;
    snum = convert.str();


    int n = snum.size();
    vector<int> vnum(n);
    int max, maxindex;

    for(int i=0;i<n;i++) {
        vnum[i] = snum[i] -'0';
    }

    pair<int,int> swind = find_next_max(vnum,0);
    snum = swap(snum, swind.first, swind.second);

    istringstream(snum) >> number;
    return number;
}
int main(void)
{
    int t,number;
    cin >> t;
    int i = 1;
    while(t>0) {
        cin >> number;
        cout<<"Case #"<<i<<" "<<number<<" "<<cookbook(number)<<endl;
        t--;
        i++;
    }
}
