#include <stdio.h>

int maxL,minS,fL[10],fS[10];
char numL[20],numS[20];
int len;

int nextMin(int k){
	int i;
	for(i = k; i < len;i++){
		if(fS[i]) 
			return i;
	}
	return 0;
}

void swapMin(int d) {
	int i,temp;
	for(i=d+1;i<len;i++) {
		if(numS[i]-'0' == minS) {
			if(0==d && 0==numS[i]-'0')
				return;
			temp = numS[d];
			numS[d] = numS[i];
			numS[i] = temp;
		}
	}
}

void findMinimum() {
	int i,j,d,temp;
	minS = 10;

	//Initialize frequency of digits to 0
	for(i = 0; i < 10;i++){
		fS[i] = 0;
	}
	
	//Get frequency of digits
	for(i = 0; numS[i] != 0;i++){
		d = numS[i]-'0';
		fS[d]++;
		if(d < minS) {
			minS = d;
		}
	}
	
	len = i;

	for(i = 0; numS[i] != 0;i++){
		d = numS[i]-'0';
		if(d > minS){
			swapMin(i);
			break;
		}
		fS[d]--;
		if(0 == fS[minS] ) {
			int temp = nextMin(d);
			if(temp!=0)
				minS = temp;
		}
	}
}

int nextMax(int k){
	int i;
	for(i = k; i >= 0;i--){
		if(fL[i]) 
			return i;
	}
	return 0;
}

void swapMax(int d) {
	int i;
	for(i=len-1;i>d;i--) {
		if(numL[i]-'0' == maxL) {
			int temp = numL[d];
			numL[d] = numL[i];
			numL[i] = temp;
		}
	}
}

void findMaximum() {
	int i,j,d,temp;
	maxL = - 1;

	//Initialize frequency of digits to 0
	for(i = 0; i < 10;i++){
		fL[i] = 0;
	}
	
	//Get frequency of digits
	for(i = 0; numL[i] != 0;i++){
		d = numL[i]-'0';
		fL[d]++;
		if(d > maxL) {
			maxL = d;
		}
	}
	len = i;

	for(i = 0; numL[i] != 0;i++){
		d = numL[i]-'0';
		if(d < maxL){
			swapMax(i);
			break;
		}

		fL[d]--;

		if(0 == fL[maxL] ) {
			int temp = nextMax(d);
			if(temp!=0)
				maxL = temp;
		}
	}
}

int main() {
	int i,t,c;
	scanf("%d", &t);
	c = 1;
	while(t--) {
		scanf("%s",numL);
		for(i=0;numL[i] != 0;i++)
			numS[i] = numL[i];
		numS[i]='\0';
		findMaximum();
		findMinimum();
		printf("Case #%d: %s %s\n",numS,numL);
	}
	return 0;
}