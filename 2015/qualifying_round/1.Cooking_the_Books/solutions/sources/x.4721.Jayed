///*
//	Bismillahir_Rahmanir_Rahim
//	I have not failed, I have just found 10000 ways that won't work
//*/
//
//#include <bits/stdc++.h>
////#define _ std::ios_base::Init i;std::ios_base::sync_with_stdio(false);std::cin.tie(0);
//#define __ freopen("C:\\Users\\Jobayer\\Desktop\\output.txt","w+",stdout);
//#define _ freopen("C:\\Users\\Jobayer\\Desktop\\input.txt","r+",stdin);
//
//using namespace std;
//
//#define LL			long long int
//#define Max 		1000000 + 10
//#define pi  		2*acos(0.0)
//#define test(i) 	printf("Case #%d: ", i);
//#define angle(n)	n * (pi / 180)
//#define mem(a, v)	memvc(a, v, sizeof(a));
//
//
//template <class T> inline pair <T, T> extendedEuclid(T a, T b)
//{
//    if(b == 0)
//        return pair<T, T>(1, 0);
//    else
//    {
//        pair<T, T> d = extendedEuclid(b, a % b);
//        return pair<T, T>(d.second, d.first - d.second * (a / b));
//    }
//    /// returns x, y where, ax + by = gcd(a,b)
//}
//
//template <class T> inline T modularInverse(T a, T M)
//{
//    pair<T, T> ret = extendedEuclid(a, M);
//    return ((ret.first % M) + M) % M;
//    /// returns a^-1 % M modular Inverse
//}
//
//template <class T> inline T bigMod(T p,T e,T M)
//{
//    LL ret = 1;
//    while(e > 0)
//    {
//        if(e & 1) ret = (ret * p) % M;
//        p = (p * p) % M;
//        e >>= 1;
//    }
//    return (T)ret;
//}
//template <class T> inline T power(T p,T e)
//{
//    LL ret = 1;
//    while(e > 0)
//    {
//        if(e & 1) ret = (ret * p);
//        p = (p * p);
//        e >>= 1;
//    }
//    return (T)ret;
//}
//template<class T> inline string tostring( T n )
//{
//    stringstream ss;
//    ss << n;
//    return ss.str();
//}
//template<class T> inline T toint ( T n )
//{
//    T ret;
//    stringstream s( n );
//    s >> ret;
//    return ret;
//}
//
//void nCr(vector <LL> &vc, int st, int ed, LL sum, LL A[])
//{
//    if(st == ed)
//    {
//        vc.push_back(sum);
//        return;
//    }
//    for(LL i = 0; i <= 2; i++)
//    {
//        nCr(vc, st + 1, ed, sum + A[st] * i, A);
//    }
//}
//
//struct SM
//{
//    LL a, b, c, d;
//    SM(LL _a = 0, LL _b = 0, LL _c = 0, LL _d = 0)
//    {
//        a = _a;
//        b = _b;
//        c = _c;
//        d = _d;
//    }
//};
//struct comp
//{
//    bool operator()(const SM& u, const SM& v)
//    {
//        return u.a> v.a;
//    }
//};
//
//struct com
//{
//    bool operator()(const int& l, const int& r)
//    {
//        return l > r;
//    }
//};
//priority_queue <SM, vector <SM>, comp > pq;
//
//
//
//
//
//
//
/////*********************************** @ SOURCE_CODE_START_HERE@ **********************************
//
//struct st
//{
//    int a, b, c;
//    st(int _a, int _b, int _c)
//    {
//        a = _a, b = _b, c = _c;
//    }
//};
//
//vector <st> vc;
//
//bool rec(int n, st sum)
//{
//    if (sum.a == 0 && sum.b == 0 && sum.c == 0)
//        return true;
//    if (n == 0 && (sum.a != 0 || sum.b != 0 || sum.c != 0))
//        return false;
//
//    if (vc[n - 1].a > sum.a && vc[n - 1].b > sum.b && vc[n - 1].c > sum.c)
//        return rec(n - 1, sum);
//
//    int a = rec(n - 1, sum);
//    sum.a -= vc[n - 1].a;
//    sum.b -= vc[n - 1].b;
//    sum.c -= vc[n - 1].c;
//    int b = rec(n - 1, sum);
//
//    return a | b;
//}
//
//int main()
//{
//    //_
//    //__
//
//    int p, c, f, n, tc, cas = 0;
//
//    scanf("%d", &tc);
//
//    while(tc --){
//
//		vc.clear();
//		scanf("%d %d %d", &p, &c, &f);
//		st sum = st(p, c, f);
//		scanf("%d", &n);
//
//		for(int i = 0; i < n; i++)
//		{
//			int a, b, d;
//			scanf("%d %d %d", &a, &b, &d);
//			vc.push_back(st(a, b, d));
//		}
//		test(++ cas);
//		puts(rec(n, sum) ? "yes" : "no");
//    }
//    return 0;
//}
///// @ END_OF_SOURCE_CODE

/*
	Bismillahir_Rahmanir_Rahim
	I have not failed, I have just found 10000 ways that won't work
*/

#include <bits/stdc++.h>
//#define _ std::ios_base::Init i;std::ios_base::sync_with_stdio(false);std::cin.tie(0);
#define __ freopen("C:\\Users\\Jobayer\\Desktop\\output.txt","w+",stdout);
#define _ freopen("C:\\Users\\Jobayer\\Desktop\\input.txt","r+",stdin);

using namespace std;

#define LL			long long int
#define Max 		1000000 + 10
#define pi  		2*acos(0.0)
#define test(i) 	printf("Case %d: ", i);
#define angle(n)	n * (pi / 180)
#define mem(a, v)	memset(a, v, sizeof(a));


template <class T> inline pair <T, T> extendedEuclid(T a, T b){
    if(b == 0)
		return pair<T, T>(1, 0);
    else{
        pair<T, T> d = extendedEuclid(b, a % b);
        return pair<T, T>(d.second, d.first - d.second * (a / b));
    }
	/// returns x, y where, ax + by = gcd(a,b)
}

template <class T> inline T modularInverse(T a, T M) {
	pair<T, T> ret = extendedEuclid(a, M);
	return ((ret.first % M) + M) % M;
	/// returns a^-1 % M modular Inverse
}

template <class T> inline T bigMod(T p,T e,T M){
    LL ret = 1;
   while(e > 0){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
		e >>= 1;
    }
    return (T)ret;
}
template <class T> inline T power(T p,T e){
    LL ret = 1;
    while(e > 0){
        if(e & 1) ret = (ret * p);
        p = (p * p);
        e >>= 1;
    }
    return (T)ret;
}
template<class T> inline string tostring( T n ){
    stringstream ss;
    ss << n;
    return ss.str();
}
template<class T> inline T toint ( T n ){
    T ret;
    stringstream s( n );
    s >> ret;
    return ret;
}

void nCr(vector <LL> &vc, int st, int ed, LL sum, LL A[]){
	if(st == ed){
		vc.push_back(sum);
		return;
	}
	for(LL i = 0; i <= 2; i++){
        nCr(vc, st + 1, ed, sum + A[st] * i, A);
	}
}

struct SM{
	LL a, b, c, d;
	SM(LL _a = 0, LL _b = 0, LL _c = 0, LL _d = 0){
		a = _a;
		b = _b;
		c = _c;
		d = _d;
	}
};
struct comp{
	bool operator()(const SM& u, const SM& v){
      return u.a> v.a;
	}
};

struct com{
  bool operator()(const int& l, const int& r){
      return l > r;
  }
};
priority_queue <SM, vector <SM>, comp > pq;







///*********************************** @ SOURCE_CODE_START_HERE@ **********************************

int tc, cas = 0;
char ch[20];

int main(){
    //_
    //__
    scanf("%d", &tc);

    while(tc --){
		scanf("%s", &ch);

		LL mx = atoi(ch), mn = atoi(ch), len = strlen(ch), f = 1;

		for(int i = 0; i < len; i++){

			for(int j = i + 1; j < len; j++){

				if(i == 0 && ch[j] == '0'){
					LL a = atoi(ch);
					if(f){
						mx = max(a, mx);
						mn = min(a, mn);
						f = 0;
					}
					continue;
				}

				swap(ch[i], ch[j]);
				LL a = atoi(ch);
				if(f){
					mx = a, mn = a;
					f = 0;
					continue;
				}
				mx = max(a, mx);
				mn = min(a, mn);
				swap(ch[i], ch[j]);
			}
		}

		test(++cas);
		printf("%lld %lld\n", mn, mx);
    }
    return 0;
}
/// @ END_OF_SOURCE_CODE

