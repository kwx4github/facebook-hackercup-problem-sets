
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.InputMismatchException;



 class CookingBooks {
	
	public static void main(String args[]) throws NumberFormatException, IOException{

		
		InputReader br=new InputReader(System.in);
		int t,len;
		String s;
		int max=0;
		
		int k=1;
		
		int mx,min;
		
		t=br.readInt();
		StringBuffer st,st2;
		
		char a[]=new char[20];
		
		while(t-->0){
		max=0;
			s=br.readString();
			len=s.length();
			
			st=new StringBuffer(s);
			st2=new StringBuffer(s);
			a=s.toCharArray();
			
			
			for(int i=0;i<len;i++){
				
				if(a[max]<=a[i]){
					max=i;
				}
				
			}
			
			char c=st.charAt(0);
			
			st.setCharAt(0, a[max]);
			
			st.setCharAt(max, c);
			
			max=0;
            for(int i=0;i<len;i++){
				
				if(a[max]>=a[i] && a[i]!=48){
					max=i;
				}
				//System.out.print(a[i]+" "+max);
			}
           // System.out.print("new  "+max);
            
          //  System.out.println();
			
            c=st2.charAt(0);
			
			st2.setCharAt(0, a[max]);
			
			st2.setCharAt(max, c);
			
			System.out.println("Case #"+k+": "+st2+" "+st);
			k++;
		}
				
				
		
	}
}

class InputReader {
	private InputStream stream;
	private byte[] buf = new byte[1024];
	private int curChar;
	private int numChars;

	public InputReader(InputStream stream) {
		this.stream = stream;
	}

	public int read() {
		if (numChars == -1)
			throw new InputMismatchException();
		if (curChar >= numChars) {
			curChar = 0;
			try {
				numChars = stream.read(buf);
			} catch (IOException e) {
				throw new InputMismatchException();
			}
			if (numChars <= 0)
				return -1;
		}
		return buf[curChar++];
	}

	public String readLine() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		StringBuilder res = new StringBuilder();
		do {
			res.appendCodePoint(c);
			c = read();
		} while (!isEndOfLine(c));
		return res.toString();
	}

	public String readString() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		StringBuilder res = new StringBuilder();
		do {
			res.appendCodePoint(c);
			c = read();
		} while (!isSpaceChar(c));
		return res.toString();
	}

	public long readLong() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = read();
		}
		long res = 0;
		do {
			if (c < '0' || c > '9')
				throw new InputMismatchException();
			res *= 10;
			res += c - '0';
			c = read();
		} while (!isSpaceChar(c));
		return res * sgn;
	}

	public int readInt() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = read();
		}
		int res = 0;
		do {
			if (c < '0' || c > '9')
				throw new InputMismatchException();
			res *= 10;
			res += c - '0';
			c = read();
		} while (!isSpaceChar(c));
		return res * sgn;
	}

	public boolean isSpaceChar(int c) {
		return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
	}

	public boolean isEndOfLine(int c) {
		return c == '\n' || c == '\r' || c == -1;
	}
}

