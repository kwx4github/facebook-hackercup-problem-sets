import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.InputMismatchException;
import java.util.List;

public class test {
	public static void main(String[] args) {
		new test().run();
	}

	void run() {
		InputReader in = new InputReader(System.in);
		PrintWriter out = new PrintWriter(System.out);
		int T = in.nextInt();
		for (int t = 0; t < T; t++) {
			int n = in.nextInt(),tmp=n;
			int max = n, min = n;
			int keta = 0;
			while (tmp > 0) {
				++keta;
				tmp /= 10;
			}
			List<Integer> list=new ArrayList<>(keta);
			tmp = n;
			for (int i = 0; i < keta; i++) {
				list.add(tmp%10);
				tmp /= 10;
			}
			Collections.reverse(list);
			int buf[] = new int[keta];
			for (int i = 0; i < keta; i++) {
				buf[i] = list.get(i);
			}
			for (int i = 0; i < keta; i++) {
				for (int j = i + 1; j < keta; j++) {
					if (i == 0 && buf[j] == 0)
						continue;
					swap(buf, i, j);
					int x = trans(buf);
					max = Math.max(max, x);
					min = Math.min(min, x);
					swap(buf, i, j);
				}
			}
			System.out.println("Case #" + (t + 1) + ": " + min + " " + max);
		}
		out.flush();
	}

	void swap(int buf[], int i, int j) {
		int tmp = buf[i];
		buf[i] = buf[j];
		buf[j] = tmp;
	}

	int trans(int buf[]) {
		int res = 0;
		for (int i : buf)
			res = res * 10 + i;
		return res;
	}

	static class InputReader {
		private InputStream stream;
		private byte[] buf = new byte[1024];
		private int curChar;
		private int numChars;
		private SpaceCharFilter filter;

		public InputReader(InputStream stream) {
			this.stream = stream;
		}

		public int next() {
			if (numChars == -1)
				throw new InputMismatchException();
			if (curChar >= numChars) {
				curChar = 0;
				try {
					numChars = stream.read(buf);
				} catch (IOException e) {
					throw new InputMismatchException();
				}
				if (numChars <= 0)
					return -1;
			}
			return buf[curChar++];
		}

		public int nextInt() {
			int c = next();
			while (isSpaceChar(c))
				c = next();
			int sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = next();
			}
			int res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = next();
			} while (!isSpaceChar(c));
			return res * sgn;
		}

		public long nextLong() {
			int c = next();
			while (isSpaceChar(c))
				c = next();
			long sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = next();
			}
			long res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = next();
			} while (!isSpaceChar(c));
			return res * sgn;
		}

		public boolean isSpaceChar(int c) {
			if (filter != null)
				return filter.isSpaceChar(c);
			return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
		}

		public interface SpaceCharFilter {
			public boolean isSpaceChar(int ch);
		}
	}
}