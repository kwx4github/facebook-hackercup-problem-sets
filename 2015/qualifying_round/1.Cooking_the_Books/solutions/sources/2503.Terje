import java.io.BufferedReader;
import java.io.IOException;
import static java.math.BigInteger.TEN;
import static java.nio.charset.StandardCharsets.UTF_8;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class CookingTheBooks {

    private static final Path INPUT = Paths.get("C:\\Users\\Terje\\Downloads\\cooking_the_books.txt");

    public static void main(String[] args) throws IOException {
        try (BufferedReader in = Files.newBufferedReader(INPUT, UTF_8)) {
            int nbNumbers = Integer.parseInt(in.readLine());
            for (int i = 1; i <= nbNumbers; i++) {
                String rawNumber = in.readLine();
                int number = Integer.parseInt(rawNumber);
                int lowerBound = TEN.pow(rawNumber.length() - 1).intValueExact();
                int min = number;
                int max = number;

                for (int j = 0; j < rawNumber.length(); j++) {
                    for (int k = j; k < rawNumber.length(); k++) {
                        StringBuilder editableNumber = new StringBuilder(rawNumber);
                        char temp = editableNumber.charAt(j);
                        editableNumber.setCharAt(j, editableNumber.charAt(k));
                        editableNumber.setCharAt(k, temp);

                        int current = Integer.parseInt(editableNumber.toString());
                        if (current < min && current >= lowerBound) {
                            min = current;
                        } else if (current > max) {
                            max = current;
                        }
                    }
                }

                System.out.format("Case #%d: %d %d%n", i, min, max);
            }
        }
    }

}
