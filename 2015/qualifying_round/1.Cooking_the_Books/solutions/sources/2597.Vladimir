#! /usr/bin/python

# By Vladimir Svoboda

import sys
from argparse import ArgumentParser, FileType

def parseInput(inFile):
    nbOfProblems = int(inFile.readline().strip())
    pList = list()

    for line in inFile.readlines():
        pList.append(int(line.strip()))

    return (nbOfProblems, pList)


def swapInList(l, i, j):
    tmp = l[i]
    l[i] = l[j]
    l[j] = tmp


def computeMin(initVal):
    initValAsList = list(map(int, str(initVal)))

    for i in range(len(initValAsList)):
        minVal = initValAsList[i]
        idx = 0

        for j in range(len(initValAsList) - 1, i, -1):
            if initValAsList[j] < minVal and (i > 0 or initValAsList[j] > 0):
                minVal = initValAsList[j]
                idx = j

        if idx != 0:
            swapInList(initValAsList, i, idx)

            return int("".join(map(str, initValAsList)))

    return initVal


def computeMax(initVal):
    initValAsList = list(map(int, str(initVal)))

    for i in range(len(initValAsList)):
        maxVal = initValAsList[i]
        idx = 0

        for j in range(len(initValAsList) - 1, i, -1):
            if initValAsList[j] > maxVal and (i > 0 or initValAsList[j] > 0):
                maxVal = initValAsList[j]
                idx = j

        if idx != 0:
            swapInList(initValAsList, i, idx)

            return int("".join(map(str, initValAsList)))

    return initVal

def getCommandLineParser():
    parser = ArgumentParser(description='Cooking the Books solver.')
    parser.add_argument('inFile', nargs=1, type=FileType('r'),
                        help='Input file')
    parser.add_argument('outFile', nargs='?', type=FileType('w'),
                        help='Output file', default=sys.stdout)

    return parser


def main(args):
    nbOfProblems, pList = parseInput(args.inFile[0])

    for i in range(nbOfProblems):
        initVal = pList[i]
        minVal = computeMin(initVal)
        maxVal = computeMax(initVal)

        args.outFile.write("Case #{i}: {min} {max}\n"
                           "".format(i=i+1, min=minVal, max=maxVal))

if __name__ == "__main__":
    parser = getCommandLineParser()

    main(parser.parse_args())