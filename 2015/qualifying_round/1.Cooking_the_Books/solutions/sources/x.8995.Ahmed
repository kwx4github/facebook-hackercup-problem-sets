#include <stdio.h>
// This code is c99 code
/****************************************************************************
 *        +---------------------------------------------------------------------------+
 *        | +-----------------------------------------------------------------------+ |
 *        | |               Cooking the Books                                       | |
 *        | +-----------------------------------------------------------------------+ |
 *        +---------------------------------------------------------------------------+
 * * Copyright 2015 Ahmed Mohamed Abd EL-Mawgood
 *
 * * Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at

 * * http://www.apache.org/licenses/LICENSE-2.0

 * * Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * * See the License for the specific language governing permissions and
 *   limitations under the License.
 ***************************************************************************/
void sstl(unsigned int src); // Sort Smallest To largest
void slts(unsigned int src); // Sort Largest To smallest
void swap(int* x , int* y); // swapp two digits
int main ()
{
	int T;
	scanf("%i",&T);
	if(T<1 || T>100) return 0 ;
	unsigned int N[T];
	for(int i = 0 ; i < T ; i++)
	{
		scanf("%u",&N[i]);
		if(N[i] > 999999999) i--;
	}
	for(int i = 0 ; i < T ;i++)
	{
		printf("Case #%i: ",i+1);
		sstl(N[i]);
		printf(" ");
		slts(N[i]);
		printf("\n");
	}
	
}
void swap (int* x , int* y )
{
	int temp = *x;
	*x = *y;
	*y = temp;
}
void sstl(unsigned int src)
{
	// get the number of digits int he number
	unsigned int srccpy = src;
	int counter = src ==0? 1 : 0;
        while(srccpy != 0)
        {
                int a = srccpy%10;
                srccpy-=a;
                srccpy /= 10;
                counter++;
        }
	//divide the number into digits
	srccpy = src;
        int digit[counter];
        for(int i = 0 ; i< counter; i++)
        {
                digit[i] = srccpy%10;
                srccpy-=digit[i];
                srccpy /= 10;
        }
	//sort these digits smallest to biggest
	for(int j = 0; j < counter ; j++)
	{
	for (int i = 0 ; i+1 < counter; i++)
	{
		if(digit[i] > digit[i+1] ) swap(&digit[i],&digit[i+1]);
	}
	}
	if( counter != 1 && digit[0] == 0 )
	{
		for(int i = 1; i< counter ; i++)
		{
			if(digit[i] > 0)
			{
					swap(&digit[i] , &digit[0]);
				break;
			}
		}
	}
	for(int i = 0 ; i < counter; i++)
	{
		printf("%i",digit[i]);
	}
}
void slts(unsigned int src)
{
	// get the number of digits int he number
	unsigned int srccpy = src;
	int counter = src ==0? 1 : 0;
        while(srccpy != 0)
        {
                int a = srccpy%10;
                srccpy-=a;
                srccpy /= 10;
                counter++;
        }
	//divide the number into digits
	srccpy = src;
        int digit[counter];
        for(int i = 0 ; i< counter; i++)
        {
                digit[i] = srccpy%10;
                srccpy-=digit[i];
                srccpy /= 10;
        }
	//sort these digits smallest to biggest
	for(int j = 0; j < counter ; j++)
	{
	for (int i = 0 ; i+1 < counter; i++)
	{
		if(digit[i] < digit[i+1] ) swap(&digit[i],&digit[i+1]);
	}
	}
	for(int i = 0 ; i < counter; i++)
	{
		printf("%i",digit[i]);
	}
}

