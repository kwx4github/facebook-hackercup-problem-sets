#include<cstdio>
#include<algorithm>
#include<vector>
#include<cstring>
#include<set>
#include<assert.h>
using namespace std;
#define FOR(i,a,n) for(int i = (a); i <= (n); ++i)
#define FORD(i,a,n) for(int i = (a); i >= (n); --i)
#define REP(i,n) FOR(i,0,(n)-1)
#define RI(i,n) FOR(i,1,(n))
#define pb push_back
#define st first
#define nd second
#define mini(a,b) a=min(a,(b))
#define maxi(a,b) a=max(a,(b))
bool debug;
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 1e6 + 5;

char sl[nax];

int main(int argc, char * argv[]) {
	debug = argc > 1;
	int z;
	scanf("%d", &z);
	RI(test, z) {
		printf("Case #%d: ", test);
		
		scanf("%s", sl);
		int d = strlen(sl);
		char znak = sl[0];
		RI(i,d-1) if(sl[i] != '0') mini(znak, sl[i]);
		REP(i, d) {
			if(sl[i] != znak) {
				int j = i;
				while(j < d && sl[j] != znak) ++j;
				if(j == d) j = i;
				swap(sl[i], sl[j]);
				printf("%s ", sl);
				swap(sl[i], sl[j]);
				break;
			}
			if(i == d - 1) printf("%s ", sl);
		}
		znak = sl[0];
		RI(i,d-1) maxi(znak, sl[i]);
		REP(i, d) {
			if(sl[i] != znak) {
				int j = i;
				while(j < d && sl[j] != znak) ++j;
				if(j == d) j = i;
				swap(sl[i], sl[j]);
				printf("%s\n", sl);
				swap(sl[i], sl[j]);
				break;
			}
			if(i == d - 1) printf("%s\n", sl);
		}
		
	}
	return 0;
}
