#include <string>
#include <iostream>

#define FOR(i, n) for(int i=0;i<n;i++)
#define PII pair<int, int>
#define MKP make_pair

using namespace std;

PII ktore_vymen_min(string a) {
	int i = 0; int minpos = -1;
	while ((i < a.length()) && (minpos == -1)) {
		int minval = a[i] - '0'; minpos = -1;
		for(int j=i+1;j<a.length();j++) {
			int c = a[j] - '0';

			if (c == 0) if (i == 0) continue;

			if (c < minval) {
				minval = c;
				minpos = j;
			}
		}

		i++;
	}
	if (minpos > -1) i--;

	return MKP(i, minpos);
}

PII ktore_vymen_max(string a) {
	int i = 0; int minpos = -1;
	while ((i < a.length()) && (minpos == -1)) {
		int minval = a[i] - '0'; minpos = -1;
		for(int j=a.length()-1;j>i;j--) {
			int c = a[j] - '0';

			if (c == 0) if (i == 0) continue;

			if (c > minval) {
				minval = c;
				minpos = j;
			}
		}

		i++;
	}
	if (minpos > -1) i--;

	return MKP(i, minpos);
}

string vymen(PII p, string a) {
	if (p.second == -1) return a;

	string ret = "";

	FOR(i, a.length()) {
		if (i == p.first) ret += a[p.second];
		else if (i == p.second) ret += a[p.first];
		else ret += a[i];
	}
 
	return ret;
}

int main() {

	int T; cin >> T; 

	FOR(i, T) {
		
		string a; cin >> a;
		PII pmin = ktore_vymen_min(a);
		PII pmax = ktore_vymen_max(a);

		cout << "Case #" << i+1 << ": " << vymen(pmin, a) << " " << vymen(pmax, a) << endl;
	}

	return 0;
}