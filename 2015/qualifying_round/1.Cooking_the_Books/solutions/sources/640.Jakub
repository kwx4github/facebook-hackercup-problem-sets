#include<iostream>
#include<algorithm>
using namespace std;


int pot10[11];

int len(int n){
   int l = 0;
   while(n){
      ++l;
      n /= 10;
   }
   return l;
}

int cyfr(int n, int poz){
    return (n / pot10[poz]) %10;
}

int swapdig(int i, int j, int n){
   int a = cyfr(n, i);
   int b = cyfr(n, j);
   n -= a * pot10[i];
   n -= b * pot10[j];
   n += b * pot10[i];
   n += a * pot10[j];
   return n;
}

void ansque(int ind, int maxi, int mini){
  cout << "Case #" << ind << ": " << mini << " " << maxi << endl;
}

int main(){
  pot10[0] = 1;
  for(int i = 1; i < 11; ++i) {pot10[i] = pot10[i - 1] * 10;}
  int t, n, l, mini, maxi;
  cin >> t;
  for(int i = 0; i < t; ++i){
   cin >> n;
   if(n == 0){
    ansque(i + 1, 0, 0);
    continue;
  }
   l = len(n);
   mini = maxi = n;
   for(int j = 0; j < l; ++j)
     for(int k = 0; k < l; ++k)
       if(len(swapdig(j, k, n)) == l){
	mini = min(mini, swapdig(j, k, n));
	maxi = max(maxi, swapdig(j, k, n));
      }
   ansque(i + 1, maxi, mini);
  }
  return 0;
}