import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.Scanner;


public class CookingTheBooks {
	public static void main(String args[]) throws FileNotFoundException{
		String path = "/Users/tanuvir_singh/cooking_the_books.txt";
		Scanner in = new Scanner(new FileReader(path));
		PrintWriter pw = new PrintWriter("/Users/tanuvir_singh/cooking_the_books_result.txt");
		int total = Integer.parseInt(in.next());
		for(int i=0;i<total;i++){
			int value = Integer.parseInt(in.next());
			solution(value,i+1,pw);
		}
		pw.flush();
		pw.close();
	}
	public static void solution(int value,int caseNum, PrintWriter pw) throws FileNotFoundException{
		//get size of the integer to store in an array
		int size = 0;
		int num = value;
		while(num>=1){
			num = num/10;
			size++;	
		}
		//base case for single digit integers
		if(size<=1){
			System.out.println("Case #" + caseNum+ " " + value);
			pw.println("Case #" + caseNum+ " " + value);
			return;
		}
		//storing each digit of integer at an array index
		int arr[] = new int[size];
		int digit;
		while(value>=1){
			digit = value%10;
			value = value/10;
			arr[--size]=digit;
		}
		//variables to keep track of minimum and maixmum digits for swaps
		int minSwapIndex = 0, maxSwapIndex = 0;
		int max = arr[maxSwapIndex];
		int min = arr[minSwapIndex];
		int minIndex = 0, maxIndex = 0;
		boolean zeroPresent = false;
		int zeroIndex = 0;
		for(int i = 0;i<arr.length;i++){
			//if zero is present
			if(arr[i] == 0){
				zeroPresent = true;
				zeroIndex = i;
			}
			//finding the max digit for swap
			if(max<=arr[i]){
				max = arr[i];
				maxIndex = i;
			}
			//finding min digit other than 0 for swap
			if(min>=arr[i] && arr[i] != 0){
				min = arr[i];
				minIndex = i;
			}
		}
		//if zero is present and the first digit is already minimum other than zero update the swap index
		//otherwise we will just swap firt digit with minimum other than zero
		if(min == arr[0] && zeroPresent == true){
			minIndex = zeroIndex;
			minSwapIndex++;
			min = 0;
		}
			
		if(minIndex != minSwapIndex && arr[minIndex] == arr[minSwapIndex]){
			while(arr[minSwapIndex] <= arr[minIndex] && minSwapIndex < arr.length-1) minSwapIndex++;
		}
		if(maxIndex != maxSwapIndex && arr[maxIndex] == arr[maxSwapIndex]){
			while(arr[maxSwapIndex] >= arr[maxIndex] && maxSwapIndex < arr.length-1) maxSwapIndex++;
		}
		System.out.print("Case #" + caseNum+ " ");
		pw.print("Case #" + caseNum + " ");
		printArray(arr,minIndex,minSwapIndex,pw);
		System.out.print(" ");
		pw.print(" ");
		printArray(arr,maxIndex,maxSwapIndex,pw);
		System.out.print("\n");
		pw.print("\n");
	}
	
	public static void printArray(int[] arr,int index, int swapIndex, PrintWriter pw){
		for(int i = 0;i<arr.length;i++)
			if(i == index){
				System.out.print(arr[swapIndex]);
				pw.print(arr[swapIndex]);
			}
			else if(i == swapIndex){
				System.out.print(arr[index]);
				pw.print(arr[index]);
			}
			else{
				System.out.print(arr[i]);
				pw.print(arr[i]);
			}
				
	}

}
