#include<stdlib.h>
#include<stdio.h>
#include<iostream>
#include<fstream>


using namespace std;


void put_no_into_digits(unsigned long no, int &no_digits, int digits[]){
	no_digits=0;
	while(no!=0){
		digits[no_digits]=no%10;
		no=no/10;
		no_digits++;
	}
}


void print( int j, ofstream &out, int digits[]){
  for(int i=j-1;i>=0;i--)
    out<<digits[i];
}



void swap( int poz, int j, int digits[]){
     unsigned int tmp;
     tmp=digits[j];
     digits[j]=digits[poz];
     digits[poz]=tmp;
}


void find_what_to_swap( int j, ofstream &out, int case_i, int digits[]){
    int min, poz_min, max, poz_max, find_max=0, find_min=0, poz_min_first, poz_max_first;
    
	for(int i=j-1;i>=1;i--){
		min=digits[i]; max=digits[i]; 
		  if(find_min==0) poz_min=i; 
		  if(find_max==0) poz_max=i;
        for(int k=i-1;k>=0;k--){
        	if((i==j-1 && digits[k]!=0 && digits[k]<=min && find_min==0) || (i!=j-1 && digits[k]<=min && find_min==0 )) {
        		min=digits[k]; poz_min=k;
			}
			if(digits[k]>=max && find_max==0){
				max=digits[k]; poz_max=k;
			}
		}
		if(poz_min!=i && find_min==0) {
		    find_min=1;
		    poz_min_first=i;
		}
		if(poz_max!=i && find_max==0) {
		    find_max=1;
		    poz_max_first=i;
		}
		
    }
    

    
    //call swap and print
    
	if(find_min==1) swap( poz_min, poz_min_first,digits);
    out<<"Case #"<<case_i<<": ";
    print( j, out, digits);
    out<<" ";
    if(find_min==1) swap( poz_min, poz_min_first,digits);
    if(find_max==1) swap( poz_max, poz_max_first,digits);   
    print(j, out, digits);
    out<<endl;
    
}



int main(){
ifstream in; ofstream out;
in.open("cooking_the_books.txt"); out.open("output.txt");	
out.clear();

int n, digits[9], no_digits;
unsigned long no;

in>>n;
for(int i=1; i<=n; i++){
	in>>no; 
	
	if(no<=9 && no>=0) out<<"Case #"<<i<<": "<<no<<" "<<no<<endl;
	else{
		put_no_into_digits(no,no_digits,digits);
		find_what_to_swap(no_digits,out,i, digits);
	}
}

in.close(); out.close();	

return 0;	
}
