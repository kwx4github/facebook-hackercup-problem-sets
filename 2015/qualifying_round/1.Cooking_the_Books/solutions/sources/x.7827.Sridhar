import java.util.Scanner;


public class CookTheBooks {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		int T =0;
		Scanner in = new Scanner(System.in);
		T = in.nextInt();
		System.out.println();
		int iteration =1;
		int N =0, smallest =0 , largest =0;
		while(iteration <= T){
			N = in.nextInt();
			if(N ==0 ){
				print(iteration, 0, 0);
				iteration++;
				continue;
			}
			String strN = Integer.toString(N);
			smallest = getSmallest(String.copyValueOf(strN.toCharArray()));
			largest = getLargest(String.copyValueOf(strN.toCharArray()));
			print(iteration, smallest, largest);
			iteration++;
		}

	}

	private static int getLargest(String strN) {
		for(int startSwapPos =0; startSwapPos < strN.length(); startSwapPos++ ){
			int pivotCharPos = startSwapPos;
			for(int endSwapPos =startSwapPos; endSwapPos < strN.length() ; endSwapPos++ ){
				if(strN.charAt(pivotCharPos) < strN.charAt(endSwapPos)){
					pivotCharPos = endSwapPos;
				}
			}
			if(startSwapPos == pivotCharPos)
				continue;
			strN = swapCharacters(strN, startSwapPos, pivotCharPos);
			return Integer.parseInt(strN);
		}
		return Integer.parseInt(strN);
	}

	private static int getSmallest(String strN) {
		for(int startSwapPos =0; startSwapPos < strN.length(); startSwapPos++ ){
			int pivotCharPos = startSwapPos;
			for(int endSwapPos =startSwapPos; endSwapPos < strN.length() ; endSwapPos++ ){
				if(strN.charAt(pivotCharPos) > strN.charAt(endSwapPos)){
					pivotCharPos = endSwapPos;
				}
			}
			if(startSwapPos == pivotCharPos)
				continue;
			if(strN.charAt(pivotCharPos) == '0'){
				if(startSwapPos == 0){
					continue;
				}
			}
			strN = swapCharacters(strN, startSwapPos, pivotCharPos);
			return Integer.parseInt(strN);
		}
		return Integer.parseInt(strN);
	}

	private static String swapCharacters(String strN, int startSwapPos,
			int endSwapPos) {
		char[] strNChars = strN.toCharArray();
		char temp = strNChars[startSwapPos];
		strNChars[startSwapPos] = strNChars[endSwapPos];
		strNChars[endSwapPos] = temp;
		
		return new String(strNChars);
	}

	private static void print(int iteration, int smallest, int largest) {
		System.out.println("Case #" + iteration + ": " + smallest + " " + largest);
		
	}

}
