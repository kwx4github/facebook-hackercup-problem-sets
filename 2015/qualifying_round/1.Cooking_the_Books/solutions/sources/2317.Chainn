#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

vector<int> spl;

void decompose(int N)
{
	if(N<10)
	{
		spl.push_back(N);
	}
	else
	{
		decompose(N/10);
		spl.push_back(N%10);
	}
	return;
}

int construct_number(int j, int k)
{
	int i,ret_val;

	ret_val = 0;

	for(i=0;i<(int)spl.size();i++)
	{
		if(i==j)
		{
			ret_val = ret_val*10 + spl[k];
		}
		else if(i==k)
		{
			ret_val = ret_val*10 + spl[j];
		}
		else
		{
			ret_val = ret_val*10 + spl[i];
		}
	}	

	return ret_val;
}

int main()
{
	int T,N,i,j,k,maxim,minim,cur_num;
	
	cin >> T;
	for(i=0;i<T;i++)
	{
		cin >> N;
		if(N<10)
		{
			cout << "Case #" << (i+1) << ": " << N << " " << N << "\n";
		}
		else 
		{
			spl.clear();
			decompose(N);
			minim = N;
			maxim = N;
			for(j=0;j<(int)spl.size();j++)
			{
				for(k=(j+1);k<(int)spl.size();k++)
				{
					if((!((j==0)&&(spl[k]==0)))&&(spl[j]!=spl[k]))
					{
						cur_num = construct_number(j,k);
						minim = min(minim,cur_num);
						maxim = max(maxim,cur_num);
					}
				}
			}
			cout << "Case #" << (i+1) << ": " << minim << " " << maxim << "\n";
		}		
	}

	return 0;
}
