#include<iostream>
#include<cmath>
#include<fstream>
#include<cstdlib>
using namespace std;

long long larg(int buff[],int size)
{
	int large = buff[0],bufflarge[size],pos=0;
	long long y;
	for(int i=0;i<size;i++)
    {
    	bufflarge[i]=buff[i];
		if(buff[i] > large)
    	{
        	large = buff[i];
        	pos=i;
    	}
    }
    int temp=bufflarge[size-1];
    bufflarge[size-1]=large;
    bufflarge[pos]=temp;
    y=0;
    for(int k=size-1;k>=0;k--)
		{
			
			y=10*y+bufflarge[k];
		}
	return y;
}
long long smal(int buff[],int size)
{
	int small=buff[size-1],buffsmall[size],pos=size-1;
	long long x;
	for(int i=0;i<size;i++)
    {
    	buffsmall[i]=buff[i];
		if(buff[i]<small&&buff[i]!=0)
    	{
        	small = buff[i];
        	pos=i;
    	}
    }
    int temp=buffsmall[size-1];
    buffsmall[size-1]=small;
    buffsmall[pos]=temp;
    x=0;
    for(int k=size-1;k>=0;k--)
		{
			
			x=10*x+buffsmall[k];
		}
	return x;
}
int main()
{	ifstream fin;
	ofstream fout;
	fin.open("D:\\test.txt");
	fout.open("D:\\answer.txt");
	if (!fin||!fout)
	{
		exit(0);
	}
	int t;
	fin>>t;
	int buff[9],bufflarge[9],buffsmall[9];
	long long n[t],small=0,large=0;
	for(int i=0;i<t;i++)
	fin>>n[i];
	for(int i=0;i<t;i++)
	{
		int j=0;
		while(n[i]>0)
		{
			buff[j++]=n[i]%10;
			n[i]/=10;
		}
		large=larg(buff,j);
		small=smal(buff,j);
		fout<<"Case #"<<i+1<<": "<<small<<" "<<large<<"\n";
	}
	fin.close();
	fout.close();		
}
