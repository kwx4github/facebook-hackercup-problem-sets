package fbChallenge;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

public class CookingTheBooks {

	public void singleSwap(int[] A) {
		int len=A[0];
		for(int i=1; i<=len;i++) {
			int value=A[i];
			String val=""+value;
			int min=Integer.MAX_VALUE;
			int max=0;
			int m=0,n=0;
			for(int j=0; j<val.length(); j++) {
				int x=Integer.parseInt(""+val.charAt(j));
				if(x>=max) {
					max=x;
					m=j;
				}
				if(x<=min && x!=0) {
					min= x;
					n=j;
				}
			}
			StringBuilder minimum1= new StringBuilder(val);
			if(!val.equals("0") && (n==0 || val.charAt(n)==val.charAt(0))) {
				int l=0;
				min=val.charAt(1);
				for(int j=1; j<val.length();j++) {
					int x= Integer.parseInt(""+val.charAt(j));
					if(x<=min){
						min=x;
						l=j;
					}
				}
				for(int j=1;j<val.length();j++) {
					int x= Integer.parseInt(""+val.charAt(j));
					int y=Integer.parseInt(""+val.charAt(l));
					if(x>y) {
						minimum1.setCharAt(j, val.charAt(l));
						minimum1.setCharAt(l, val.charAt(j));
						break;
					}
				}
			}
			StringBuilder maximum1= new StringBuilder(val);
			if(!val.equals("0") && m!=0 && (val.charAt(m)== val.charAt(0))) {
				int x= Integer.parseInt(""+val.charAt(m));
				int j=0;
				for(j=1; j<m; j++){
					if(Integer.parseInt(""+val.charAt(j))<x) {
						maximum1.setCharAt(j, val.charAt(m));
						maximum1.setCharAt(m, val.charAt(j));
						break;
					}
				}
				if(j==m && m+1<val.length()) {
					int maxo=0;
					for(int k=m+1; k<val.length();k++) {
						int y= Integer.parseInt(""+val.charAt(k));
						if(y>maxo) {
							maxo= k;
						}
					}
					maximum1.setCharAt(maxo, val.charAt(m+1));
					maximum1.setCharAt(m+1, val.charAt(maxo));
				}
			}
			StringBuilder maximum= new StringBuilder(val);
			maximum.setCharAt(0, val.charAt(m));
			maximum.setCharAt(m, val.charAt(0));
			StringBuilder minimum= new StringBuilder(val);
			minimum.setCharAt(0, val.charAt(n));
			minimum.setCharAt(n, val.charAt(0));
			int finalmin= Math.min(Integer.parseInt(minimum.toString()), Integer.parseInt(minimum1.toString()));
			int finalmax=Math.max(Integer.parseInt(maximum.toString()), Integer.parseInt(maximum1.toString()));
			System.out.println("Case #"+i+": "+finalmin+" "+finalmax);
		}
	}
	public static void main(String[] args) throws IOException {
		CookingTheBooks c= new CookingTheBooks();
		List<String> list= new ArrayList<String>();
		File f = new File("Input.txt");
		FileReader fs = new FileReader(f);
		BufferedReader br = new BufferedReader(fs);		
		String cleanSt = new String();
		while ((cleanSt = br.readLine()) != null) {
			list.add(cleanSt);
		}
        String[] a= new String[list.size()];
        a=list.toArray(a);
        int[] b= new int[a.length];
        for(int i=0;i<a.length;i++) {
        	b[i]= Integer.parseInt(a[i]);
        }       
		//int[] a={9,31524,891117,12355,10,999000,10991100,121122,199002,199900};
        File file = new File("Output.txt"); //Your file
        FileOutputStream fos = new FileOutputStream(file);
        PrintStream ps = new PrintStream(fos);
        System.setOut(ps);
		c.singleSwap(b);	
		
	}
}
