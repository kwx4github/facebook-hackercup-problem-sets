#include<iostream>
#define SWAP(x,y) (x=x+y-(y=x))
using namespace std;
void tweak_Number_forMin_Max(long long int n,long long int i)
{
	if(n==0)
	{
		cout<<"Case #"<<i<<": 0 0\n";
		return ;
	}
	int minDigit,maxDigit;
	int numArr[9],index=0;
	while(n)
	{
		numArr[index++]=n%10;
		n/=10;
	}
	int x=0,y=index-1;
	while(x<y)
	{
		SWAP(numArr[x],numArr[y]);
		x++;
		y--;
	}
		
	cout<<"Case #"<<i<<": ";
	//find min digit
	int s;
	for(s=0;s<index-1; s++)
	{
		minDigit=s;
	 for(int j=s+1;j<index;j++)
	 {
	 	if(numArr[j]<=numArr[minDigit] &&numArr[j]!=0)
	 	minDigit=j;
	 }
	 if(numArr[minDigit]<numArr[s])
	 break ;
	}
	//print minimum no.
	if(numArr[minDigit]<numArr[s] && minDigit>s)
	{
		SWAP(numArr[s],numArr[minDigit]);
	    for(int j=0;j<index;j++)
	    cout<<numArr[j];
	    SWAP(numArr[s],numArr[minDigit]);
	}
	else
	for(int j=0;j<index;j++)
	    cout<<numArr[j];
	cout<<" ";
	
	//find max digit
	for(s=0;s<index; s++)
	{
		maxDigit=s;
	 for(int j=s+1;j<index;j++)
	 {
	 	if(numArr[j]>=numArr[maxDigit])
	 	maxDigit=j;
	 }
	 if(numArr[maxDigit]>numArr[s])
	 break ;
	}
	//print max no.
	if(numArr[maxDigit]>numArr[s] && maxDigit>s)
	SWAP(numArr[s],numArr[maxDigit]);
	    for(int j=0;j<index;j++)
	    cout<<numArr[j];
	
	cout<<"\n";
	return ;
}
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
    int t;
	long long ip;
	cin>>t;
	for(int i=1;i<=t;i++)
	{
		cin>>ip;
		tweak_Number_forMin_Max(ip,i);
	}
	return 0;
}
