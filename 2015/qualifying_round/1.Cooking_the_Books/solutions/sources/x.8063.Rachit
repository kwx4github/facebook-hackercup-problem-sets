/*

                       o                            | |    
_|_       __,   _  _       __   ,_    __,   __, _|_ | |    
 |  |  |_/  |  / |/ |  |  /    /  |  /  |  /  |  |  |/ \
 |_/ \/  \_/|_/  |  |_/|_/\___/   |_/\_/|_/\_/|_/|_/|   |_/

*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <vector>
#include <cassert>
#include <stack>
#include <complex>

using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef pair<int, int> pii;

#define REP(i,n)        for(int (i)=(0);(i)<(n);(i)++)
#define REP1(i,n)		for(int (i)=(1);(i)<=(n);(i)++)
#define FOREACH(it,c)   for(typeof(c.begin()) it=(c).begin();it!=(c).end();++it)
#define FILL(a,v)       memset(a,v,sizeof(a))
#define DB(a)           cerr << #a << ": " << (a) << endl;

#define MP			make_pair
#define PB			push_back
#define FF			first
#define SS			second
template <class _T> _T MAX(_T a, _T b){ return a > b ? a : b; }
template <class _T> _T MIN(_T a, _T b){ return a < b ? a : b; }
template <class _T> _T GCD(_T a, _T b){ return b ? GCD(b, a % b) : a; }

ll get(string x)	{
	ll ans=0;
	REP(i,x.size())	{
		ans*=10;
		ans+=x[i]-'0';
	}
	return ans;
}

void solve()	{
	string s;
	cin>>s;
	int mymin='9',inmin=-1, mymax='0', inmax=-1;
	REP(i,s.size())	{
		if(s[i]>'0' && s[i]<=mymin)	{
			inmin =i;
			mymin=s[i];
		}
		if(s[i]>'0' && s[i]>=mymax)	{
			inmax=i;
			mymax=s[i];
		}
	}
	string s2=s, s3=s;
	if(inmin>-1)	swap(s2[inmin],s2[0]); 
	if(inmax>-1)	swap(s3[inmax],s3[0]);
	cout<<get(s2)<<" "<<get(s3)<<endl;

}

int main(void)	{
	int test;
	scanf("%d",&test);
	for(int t=0;t<test;t++)	{
		printf("Case #%d: ",t+1);		
		solve();
	}
	
	return 0;
}
