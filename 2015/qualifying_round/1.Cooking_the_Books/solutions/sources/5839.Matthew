<Query Kind="Statements" />

var input = new [] {
	"5",
	"31524",
	"897",
	"123",
	"10",
	"5"
};
input = File.ReadAllLines(@"C:\Users\smithma\Documents\Personal\FB Hacker Cup\Cooking the books\input.txt");


var expected = @"Case #1: 13524 51324
Case #2: 798 987
Case #3: 123 321
Case #4: 10 10
Case #5: 5 5
";


int T = int.Parse(input[0]);

StringBuilder result = new StringBuilder();
for (int caseNum = 1; caseNum <= T; ++caseNum)
{
	string original = input[caseNum];
	string smallest = original;
	string largest = original;
	
	for (int i = 0; i < original.Length - 1; ++i)
	{
		var possible = original.Substring(i+1).Where(x=>(i != 0 || x != '0') && x < original[i]).OrderBy(x=>x).FirstOrDefault();
		if (possible != default(char))
		{
			int swapAt = original.LastIndexOf(possible);
			char[] arr = original.ToCharArray();
			arr[swapAt] = original[i];
			arr[i] = possible;
			smallest = new string(arr);
			break;
		}
	}
	
	for (int i = 0; i < original.Length; ++i)
	{
		var possible = original.Substring(i+1).Where(x=>x > original[i]).OrderByDescending(x=>x).FirstOrDefault();
		if (possible != default(char))
		{
			int swapAt = original.LastIndexOf(possible);
			char[] arr = original.ToCharArray();
			arr[swapAt] = original[i];
			arr[i] = possible;
			largest = new string(arr);
			break;
		}
	}	
	
	result.AppendFormat("Case #{0}: {1} {2}", caseNum, smallest, largest);
	result.AppendLine();
}

File.WriteAllText(@"C:\Users\smithma\Documents\Personal\FB Hacker Cup\Cooking the books\output.txt", result.ToString());

result.ToString().Dump(result.ToString() == expected ? "Passed" : "Failed");