import java.io.*;
import java.util.*;


public class Cooking_the_Books {

	/**
	 * @param args
	 * @author Vipol Sophonwatthanawichit
	 */
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(new File("cooking_the_books.txt"));
		PrintWriter out = new PrintWriter(new FileWriter("out.txt")); 
		int t = sc.nextInt();
		for(int i = 1; i <= t; i++){
			if(i != 1)
				out.println();
			String num = sc.next();	// original string
			char[] numchar =  num.toCharArray(); // change string to array of character
			int numint = Integer.parseInt(new String(numchar)); // character array to integer
			int big = numint;	// initialize the big number
			int small = numint;	// initialize the small number
			
			int found = 0;  // flag to check if biggest/smallest number is found
			int current;	// current index we're looking while sweaping
			int tempbig, tempsmall; // keeping track of the biggest/smallest number while sweaping
			int bigstart, bigend, smallstart, smallend; // keeping track of the index we're swapping
			// For big number
			if(num.length() > 1){
				// Each index
				for(int j = 0; j < numchar.length - 1; j++){
					current = Character.getNumericValue(numchar[j]);
					tempbig = Character.getNumericValue(numchar[j]);
					bigstart = j;
					bigend = j;
					// Search for the biggest number
					for(int k = j + 1; k < numchar.length; k++){
						int tempsweap = Character.getNumericValue(numchar[k]);
						if(tempsweap>=tempbig){
							tempbig = tempsweap;
							bigend = k;
							found = 1;
						}
					}
					// Swap with the last biggest number
					if(found == 1 && tempbig != current) {
						char[] newbig = numchar.clone();
						char tempc = newbig[bigstart];
						newbig[bigstart] = newbig[bigend];
						newbig[bigend] = tempc;
						big = Integer.parseInt(new String(newbig));
						found = 0;
						break;
					}
					found = 0;
				}
			}
			// For small number 
			if(num.length() > 1){
				// Each index
				for(int j = 0; j < numchar.length - 1; j++){
					current = Character.getNumericValue(numchar[j]);
					tempsmall = Character.getNumericValue(numchar[j]);
					smallstart = j;
					smallend = j;
					// Search for the smallest number
					for(int k = j + 1; k < numchar.length; k++){
						int tempsweap = Character.getNumericValue(numchar[k]);
						if(tempsweap == 0 && j == 0)
							continue;
						if(tempsweap<=tempsmall){
							tempsmall = tempsweap;
							smallend = k;
							found = 1;
						}
					}
					// Swap with the last smallest number
					if(found == 1 && tempsmall != current) {
						char[] newsmall = numchar.clone();
						char tempc = newsmall[smallstart];
						newsmall[smallstart] = newsmall[smallend];
						newsmall[smallend] = tempc;
						small = Integer.parseInt(new String(newsmall));
						found = 0;
						break;
					}
					found = 0;
				}
			}
			
			
			out.print("Case #" + i + ": " + small + " " + big);
		}
		out.close();
	}

}
