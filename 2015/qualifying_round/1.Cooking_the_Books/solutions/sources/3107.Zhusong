#include <iostream>
#include <fstream>
#include <vector>
#include <stack>
#include <queue>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <unordered_map>

using namespace std;

string big(string s1,string s2) {
    int i,j,k;
    for (i = 0;i < s1.size();i++) {
        if (s1[i] < s2[i]) return s2;
        if (s1[i] > s2[i]) return s1;
    }
    return s1;
}

string small(string s1,string s2) {
    int i,j,k;
    for (i = 0;i < s1.size();i++) {
        if (s1[i] < s2[i]) return s1;
        if (s1[i] > s2[i]) return s2;
    }
    return s1;
}

string solve(long long N) {
    string s,sm,bg,t;
    s = to_string(N);
    sm = s;
    bg = s;
    int i,j,k,n;
    char c,c1,c2;
    n = s.size();
    for (i = 0;i < n - 1;i++) {
        for (j = i + 1;j < n;j++) {
            c1 = s[i];
            c2 = s[j];
            if (i == 0 && c2 == '0') continue;
            if (c1 == c2) continue;
            t = s;
            t[j] = c1;
            t[i] = c2;
            sm = small(t,sm);
            bg = big(t,bg);
        }
    }
    string sol = sm;
    sol.push_back(' ');
    sol.append(bg);
    return sol;
}

int main() {
    ifstream filein;
    ofstream fileout;
    filein.open("cooking_the_books.txt",ios::in);
    //filein.open("A-small-attempt0.in",ios::in);
    //filein.open("A-large.in",ios::in);
    fileout.open("output",ios::out);
    int T;
    filein >> T;
    for (int z1 = 0;z1 < T;z1++) {
        fileout << "Case #" << z1+1 << ": ";
        long long N;
        string s;
        filein >> N;
        s = solve(N);
        fileout << s << endl;
    }
    fileout.close();
}