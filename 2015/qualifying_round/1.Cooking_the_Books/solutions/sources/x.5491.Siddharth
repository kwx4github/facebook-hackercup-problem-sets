#include <bits/stdc++.h>
using namespace std;

#define R(i,a,b) for(int i=a;i<b;i++)
#define RE(i,a,b) for(int i=a;i<=b;i++)
#define RR(i,a,b) for(int i=a;i>b;i--)
#define RRE(i,a,b) for(int i=a;i>=b;i--)
#define F(i,n) for(int i=0;i<n;i++)
#define FE(i,n) for(int i=0;i<=n;i++)
#define FR(i,n) for(int i=n;i>0;i--)
#define FRE(i,n) for(int i=n;i>=0;i--)
#define mp(a,b) make_pair(a,b)
#define pii pair <int, int>
#define pb push_back
#define ft first
#define sd second
#define LL long long
#define gc getchar_unlocked
#define pc putchar_unlocked

inline void get(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int a[15];
int small[15];
int large[15];

int fmin(int i, int n)
{
	int mn = 18, idx = i-1;
	R(j,i,n)
	{
		if (a[j] < mn && !(i == 1 && a[j]==0))
		{
			idx = j;
			mn = a[j];
		}
	}
	return idx;
}

int fmax(int i, int n)
{
	int mx = -1, idx = i-1;
	R(j,i,n)
	{
		if (a[j] >= mx)
		{
			idx = j;
			mx = a[j];
		}
	}
	return idx;
}

void print(int n)
{
	F(i,n)
		cout<<a[i];
}

int main()
{
	int T;
	get(T);
	for (int __rep = 1; __rep <=T; __rep++)
	{
		printf("Case #%d: ",__rep);

		int c = gc();
		int len = 1;

		while (c>'9' || c<'0') c=gc();
		a[0] = c-'0';
		c = gc();

		while(c<='9' && c>='0')
		{
			a[len++] = c-'0';
			c = gc();
		}

		//min
		bool mprint = false;
		F(i,len)
		{
			int idx = fmin(i+1,len);
			if (a[idx] < a[i])
			{
				swap(a[idx],a[i]);
				print(len);
				swap(a[idx],a[i]);
				mprint = true;
				break;
			}
		}
		if (!mprint)
			print(len);
		cout << " ";

		//max
		bool bprint = false;
		F(i,len)
		{
			int idx = fmax(i+1,len);
			if (a[idx] > a[i])
			{
				swap(a[idx],a[i]);
				print(len);
				swap(a[idx],a[i]);
				bprint = true;
				break;
			}
		}
		if (!bprint)
			print(len);
		cout << endl;
	}
	return 0;
}
