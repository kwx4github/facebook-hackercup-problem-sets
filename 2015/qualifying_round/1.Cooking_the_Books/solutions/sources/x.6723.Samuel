// Samuel Poulton
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

public class qualification_round {

	public static char[] findMax(char[] num) {
		char[] number = num.clone();
		
		if(number.length == 1) {
			return number;
		}
		
		char max_digit_pos = 0;
		char max_digit_val = '0';
		
		for(int pos = 0; pos < number.length; pos++) {
			if(number[pos] > max_digit_val) {
				max_digit_val = number[pos];
				max_digit_pos = (char) pos;
			}
		}
		
		if(max_digit_pos != 0) {
			number[max_digit_pos] = number[0];
			number[0] = max_digit_val;
		}
		
		return number;
	}
	
	public static char[] findMin(char[] num) {
		char[] number = num.clone();
		
		if(number.length == 1) {
			return number;
		}
		
		char min_digit_pos = 0;
		char min_digit_val = '9';
		
		for(int pos = 0; pos < number.length; pos++) {
			if(number[pos] < min_digit_val && number[pos] != '0') {
				min_digit_val = number[pos];
				min_digit_pos = (char) pos;
			}
		}
		
		if(min_digit_pos != 0) {
			number[min_digit_pos] = number[0];
			number[0] = min_digit_val;
		}
		
		return number;		
	}
	
	public static String arrayToString(char[] num) {
		StringBuffer result = new StringBuffer();
		for(int pos = 0; pos < num.length; pos++) {
			result.append( num[pos] );
		}
		
		return result.toString();
	}
	
	public static void main(String[] args) {
		String fileName = "/home/delmont/workspace/facebook-hacker-cup/src/input.txt";
		
		try {
			List<String> lines = Files.readAllLines(Paths.get(fileName),
					Charset.defaultCharset());
			for(int i=1; i <= Integer.parseInt(lines.get(0)); i++) {
				char[] max = findMax(lines.get(i).toCharArray());
				char[] min = findMin(lines.get(i).toCharArray());
				
				System.out.println("Case #" + i + ": " + arrayToString(min) + " " + arrayToString(max));
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
