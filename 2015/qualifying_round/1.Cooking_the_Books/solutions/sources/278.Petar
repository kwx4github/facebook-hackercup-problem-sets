/*
 Petar 'PetarV' Velickovic
 Task: Cooking the Books
*/

#include <stdio.h>
#include <math.h>
#include <string.h>
#include <iostream>
#include <vector>
#include <list>
#include <string>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <complex>

#define DPRINTC(C) printf(#C " = %c\n", (C))
#define DPRINTS(S) printf(#S " = %s\n", (S))
#define DPRINTD(D) printf(#D " = %d\n", (D))
#define DPRINTLLD(LLD) printf(#LLD " = %lld\n", (LLD))
#define DPRINTLF(LF) printf(#LF " = %.5lf\n", (LF))

using namespace std;
typedef long long lld;
typedef unsigned long long llu;

int t;
lld n;

vector<int> ndig;

lld sret(int i, int j)
{
    if (i == 0 && ndig[j] == 0) return n;
    if (j == 0 && ndig[i] == 0) return n;
    if (i == j) return n;
    
    swap(ndig[i], ndig[j]);
    
    lld ret = 0;
    for (int i=0;i<ndig.size();i++)
    {
        ret *= 10;
        ret += ndig[i];
    }
    
    swap(ndig[i], ndig[j]);
    
    return ret;
}

int main()
{
    freopen("/Users/PetarV/HackerCup/cooking_the_books.txt","r",stdin);
    freopen("/Users/PetarV/HackerCup/cooking-out.txt","w",stdout);
    
    scanf("%d", &t);
    
    for (int f=1;f<=t;f++)
    {
        scanf("%lld", &n);
        
        if (n == 0)
        {
            printf("Case #%d: 0 0\n", f);
            continue;
        }
        
        lld minret = 999999999LL, maxret = 0LL;
        lld nn = n;
        
        ndig.clear();
        while (nn)
        {
            ndig.push_back(nn % 10);
            nn /= 10;
        }
        
        reverse(ndig.begin(), ndig.end());
        
        for (int i=0;i<ndig.size();i++)
        {
            for (int j=0;j<ndig.size();j++)
            {
                lld cur = sret(i, j);
                if (cur < minret) minret = cur;
                if (cur > maxret) maxret = cur;
            }
        }
        
        printf("Case #%d: %lld %lld\n", f, minret, maxret);
    }
    
    return 0;
}