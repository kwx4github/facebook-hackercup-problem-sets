#include <fstream>
#include <vector>
#include <string>
#include <algorithm>
#include <sstream>

int main()
{
	std::ifstream file;
	int T, n;
	int caseNum = 1;
	std::vector<int> N;

	file.open("cooking_the_books.txt");
	file >> T;
	for(int i = 0; i < T; ++i)
	{
		file >> n;
		N.push_back(n);
	}
	file.close();

	std::ofstream ofile("output.txt", std::ios::out | std::ios::binary);
	for each (int num in N)
	{
		std::string nStr = std::to_string(num);
		int maxN = num;
		int minN = num;
		int temp = 0;
		for(int i = 0; i < nStr.length(); ++i)
		{
			for(int j = 0; j < nStr.length(); ++j)
			{
				if((nStr[i] == '0' && j == 0) || (nStr[j] == '0' && i == 0))
					continue;

				std::swap(nStr[i], nStr[j]);
				temp = std::stoi(nStr);
				if(temp > maxN)
					maxN = temp;
				else if(temp < minN)
					minN = temp;
				std::swap(nStr[j], nStr[i]);
			}
		}
		ofile << "Case #" << caseNum << ": " << minN << " " << maxN << std::endl;
		caseNum++;
	}
	
	ofile.close();
	return 0;
}