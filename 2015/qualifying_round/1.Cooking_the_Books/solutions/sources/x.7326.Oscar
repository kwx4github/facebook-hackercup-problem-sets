# Cooking the books

def swap(oarr, x, y):
    arr = list(oarr)
    aux = arr[x]
    arr[x] = arr[y]
    arr[y] = aux
    return arr

def get_max_min(digits):
    max_done = False
    min_done = False
    max_n = min_n = digits

    if len(digits) > 1:
        # Gen Min
        for x in range(len(digits)):
            if not min_done or not max_done:
                min_x = x
                max_x = x
                for y in range(x+1, len(digits)):
                    if not min_done and digits[y] < digits[min_x]:
                        if x != 0 or (x == 0 and digits[y]):
                            min_x = y
                    if not max_done and digits[y] > digits[max_x]:
                        if x != 0 or (x == 0 and digits[y]):
                            max_x = y
                if min_x != x:
                    min_done = True
                    min_n = swap(digits, x, min_x)
                if max_x != x:
                    max_done = True
                    max_n = swap(digits, x, max_x)
    return (max_n, min_n)

def main():

    # Read number of cases i
    i = int(raw_input())
    # Repeat i times
    for j in range(i):
        n = raw_input()
        digits = [int(c) for c in n]
        max_n, min_n = get_max_min(digits)
        nmax = "".join([str(x) for x in max_n])
        nmin = "".join([str(x) for x in min_n])

        print "Case #%d: %s %s" % (j+1, nmin, nmax)

    # Read n number
    # Get the lesser digit, swap to first position.
    # If lesser digit already there, get second lesser swap to second position and so on
    # Get the greater digit, swap to first position
    # If greater digi already there, get second greater and swap to 2nd and so
    # Return Case #i: Smallest Biggest


    pass

if __name__ == '__main__':
    main()
