import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class ASH {

    public static void main(String[] args) {
    	parseFile(args[0]);
    }
    
    private static void parseFile(String file) {
		try{
			BufferedReader infile = new BufferedReader(new FileReader(file));		
			int T = Integer.parseInt(infile.readLine());
			for(int i = 0; i < T; i++) {
	            String s = infile.readLine();
	            getRes(s, i+1);
	        }
			infile.close();
		}catch(IOException e){
			e.printStackTrace();
		}		
	}
    
    private static void getRes(String s, int id) {
        System.out.printf("Case #" + id + ": %s %s\n", getMin(s.toCharArray()), getMax(s.toCharArray()));
    }
    
    private static String getMin(char[] s) {
    	
    	if(s.length == 1) return getString(s);
    	int i = 1;
    	while(i < s.length) {
    		if(s[i] > s[i-1]) i++;
    		else break;
    	}
    	if(i == s.length) return getString(s);
    	   	
    	int idx = -1, zero = -1;
    	for(int j = i; j < s.length; j++) {
    		if(s[j] == '0') zero = j;
    		else if(idx == -1 || s[j] <= s[idx]) idx = j;
    	}
    	if(idx == -1 && zero == -1) return getString(s);
    	int r1, r2;
    	if(zero == -1) {
    		int k = 0;
    		while(k < i) {
    			if(s[k] > s[idx]) break;
    			k++;
    		}
    		r1 = k;
    		r2 = idx;
    	}else if(idx != -1 && s[0] > s[idx]) {
    		r1 = 0;
    		r2 = idx;
    	} else {
    		r1 = 1;
    		r2 = zero;
    	}
		char c = s[r1];
		s[r1] = s[r2];
		s[r2] = c;
		return getString(s);
    }
    
    private static String getMax(char[] s) {
    	if(s.length == 1) return getString(s);
    	int i = 1;
    	while(i < s.length) {
    		if(s[i] < s[i-1]) i++;
    		else break;
    	}
    	if(i == s.length) return getString(s);
    	int idx = i;
    	for(int j = i+1; j < s.length; j++) {
    		if(s[j] >= s[idx]) idx = j;
    	}
    	int k = 0;
    	while(k < i) {
    		if(s[k] < s[idx]) break;
    		k++;
    	}
    	char c = s[k];
    	s[k] = s[idx];
    	s[idx] = c;
    	return getString(s);
    }
    
    private static String getString(char[] s) {
    	StringBuilder sb = new StringBuilder("");
    	for(int i = 0; i < s.length; i++) sb.append(s[i]);
    	return sb.toString();
    }
}