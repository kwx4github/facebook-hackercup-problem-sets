import sys, copy
from sys import argv

arg = argv[1]

inputFile = open(arg, 'r')

count = 0
number = 0
biggestNum = 0
smallestNum = 0
numberList = []
caseIndex = 0

for line in inputFile:
	if (count == 0):
		numLoops = int(line)
		count += 1
		if ((numLoops < 1) or (numLoops > 100)):
			print "Input file has violated constraints. Program now exiting."
			sys.exit(1)

	elif (count < numLoops):
		line = line.strip()
		number = int(line)
		if ((number < 0) or (number > 999999999)):
			print "Input file has violated constraints. Program now exiting."
			sys.exit(1)
		
		numberList = list(line)
		index = 0
		biggestNum = int(numberList[0])
		smallestNum = int(numberList[0])
		
		for number in numberList:		
			number = int(number)
			# Find the biggest number
			if (number >= biggestNum):
				biggestNum = number
				indexOfBigNum = index
				
			# Find the smallest number, ignoring 0
			if ((number <= smallestNum) and (number != 0)):
				smallestNum = number
				indexOfSmallNum = index
				
			# Increment index
			index += 1
			
		# Make copies of the array
		biggerList = copy.deepcopy(numberList)
		smallerList = copy.deepcopy(numberList)
		
		# BIGGER: If the first digit in the array is smaller than the the biggest number, then swap the first digit with the biggest number
		if (numberList[0] <= numberList[indexOfBigNum]):
			temp = biggerList[0]
			biggerList[0] = biggerList[indexOfBigNum]
			biggerList[indexOfBigNum] = temp
			
		# SMALLER: If the first digit in the array is bigger than the smallest number, then swap the first digit with the smallest number
		if (numberList[0] >= numberList[indexOfSmallNum]):
			temp = smallerList[0]
			smallerList[0] = smallerList[indexOfSmallNum]
			smallerList[indexOfSmallNum] = temp
		
		#Print output
		bigString = "".join(biggerList)
		smallString = "".join(smallerList)
		print "Case #%d: %s %s" % (caseIndex, smallString, bigString)	
	
	# Reset indexes
	index = 0
	indexOfBigNum = 0
	indexOfSmallNum = 0
	
	# Increment case
	caseIndex += 1

inputFile.close()
