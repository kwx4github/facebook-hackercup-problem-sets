
import java.util.StringTokenizer;
import java.util.Map;
import java.util.HashMap;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

/**
 *
 * @author prakhar agrawal
 */
public class icpc1 {
    static char[] fone(char n[], int pos) {
        int len = n.length;
        if(pos >= len)  return n;
        char min = n[pos];
        int exch1 = pos;
        for (int i = pos + 1; i < len; i++) {
            if(n[i] < min && n[i] != 0)  {
                min = n[i];
                exch1 = i;
            }
        }
        if(exch1 == pos || min == '0') 
            return fone(n, pos + 1);
        else {
        char temp = n[pos];
        n[pos] = n[exch1];
        n[exch1] = temp;
        return n;
        }
    }
    static char[] fone2(char n[], int pos) {
        int len = n.length;
        if(pos >= len)  return n;
        char max = n[pos];
        int exch1 = pos;
        for (int i = pos + 1; i < len; i++) {
            if(n[i] > max && n[i] != 0)  {
                max = n[i];
                exch1 = i;
            }
        }
        if(exch1 == pos || max == '0') 
            return fone2(n, pos + 1);
        else {
        char temp = n[pos];
        n[pos] = n[exch1];
        n[exch1] = temp;
        return n;
        }
    }
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader (new FileReader("C:/Users/prakhar agrawal/Dropbox/NetBeansProjects/tc/src/test1.in"));
        PrintWriter out = new PrintWriter (new BufferedWriter (new FileWriter("C:/Users/prakhar agrawal/Dropbox/NetBeansProjects/tc/src/testab1.out")));
        int T = Integer.parseInt(br.readLine());
        for (int i = 0; i < T; i++) {
            String read = br.readLine();
            char n[] = read.toCharArray();
            char te[]  = read.toCharArray();
            out.print("Case #"+(i+1)+": ");
            char n1[] = fone(n, 0);
            char n2[] = fone2(te, 0);
            int l = n1.length;
            for (int j = 0; j < l; j++) 
                out.print(n1[j]);
            out.print(" ");
            for (int j = 0; j < l; j++) 
                out.print(n2[j]);
            out.println();
        }
    out.close();
    System.exit(0);
    }
}
