#include<iostream>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;
 
#define FOR(i,a,b) for(int i=a;i<b;++i)
#define REP(i,n) FOR(i,0,n)
#define RREP(i,n) for(int i=n-1;i>=0;--i)
#define EACH(it,v) for(typeof(v.begin()) it=v.begin();it!=v.end();++it)
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define CLEAR(x,with) memset(x,with,sizeof(x))
#define sz size()
#define len length()
#define mkp make_pair
typedef long long LL;
typedef vector <LL> VI;
typedef pair<int, int> PI;
typedef pair<int, PI> PII;

int main()
{
    int T;
    cin>>T;

    int g=1;
    while(T--)
    {

        LL x,y;
        cin>>x;
        y=x;
        VI a;

        while(y)
        {
            a.pb(y%10);
            y/=10;
        }
        
        VI b,c;
        RREP(i,a.sz)
        {
            b.pb(a[i]);
            c.pb(a[i]);
        }

        REP(i,b.sz)
        {
            bool found=false;
            
            LL Min=b[i];
            FOR(j,i+1,b.sz)
            {
                if(i==0 && b[j]==0)
                    continue;
                Min=min(Min,b[j]);
            }
            if(Min < b[i])
            {
                if(i==0 && Min==0)
                    continue;

                int f=-1;
                FOR(j,i+1,b.sz)
                {
                    if(b[j]==Min)
                    {
                        f=j;
                    }
                }

                b[f]=b[i];
                b[i]=Min;
                break;
            }
                
        }
        y=0;
        REP(i,b.sz)
        {
            y=y*10+b[i];
        }

        cout<<"Case #"<<g<<": "<<y;
    
         REP(i,c.sz)
        {
            bool found=false;
            if(c[i]==9)
                continue;
            LL Max=c[i];
            FOR(j,i+1,c.sz)
            {
               Max=max(Max,c[j]); 
            }
            if(Max > c[i])
            {
                int f=-1;
                FOR(j,i+1,c.sz)
                {
                    if(c[j]==Max)
                        f=j;
                }

                c[f]=c[i];
                c[i]=Max;
                break;
            }
        }
        y=0;
        REP(i,c.sz)
        {
            y=y*10+c[i];
        }
       
        cout<<" "<<y<<endl;
        g++;
    }
    return 0;
}
       

