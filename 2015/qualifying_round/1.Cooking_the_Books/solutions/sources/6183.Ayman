import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class Problem1 {

	public static void main(String[] args) throws IOException {
		FileReader f = new FileReader("in.txt");
		BufferedReader in = new BufferedReader(f);
		FileWriter file = new FileWriter("out.txt");
		BufferedWriter bf = new BufferedWriter(file);
		long n = Long.parseLong(in.readLine());
		for (long i = 1; i <= n; i++) {
			char[] arr = in.readLine().toCharArray();
			bf.write("Case #" + i + ": " + solveMini(make(arr)) + " "
					+ solveMax(arr) + "\n");
		}

		bf.close();
	}

	private static char[] make(char[] arr) {
		// TODO Auto-generated method stub
		char[] q = new char[arr.length];
		for (int i = 0; i < arr.length; i++)
			q[i] = arr[i];
		return q;
	}

	private static String solveMini(char[] a) {
		// TODO Auto-generated method stub
		boolean found = true;
		for (int i = 0; i < a.length && found; i++) {
			char prev = a[i];
			int index = i;
			for (int j = a.length - 1; j > i; j--) {
				if (a[j] == '0' && i == 0)
					continue;
				if (a[j] < prev) {
					prev = a[j];
					index = j;
					found = false;
				}
			}
			if (!found) {
				a[index] = a[i];
				a[i] = prev;
			}
		}
		return new String(a);
	}

	private static String solveMax(char[] a) {
		// TODO Auto-generated method stub
		boolean found = true;
		for (int i = 0; i < a.length && found; i++) {
			char prev = a[i];
			int index = i;
			for (int j = a.length - 1; j > i; j--) {
				if (a[j] > prev) {
					prev = a[j];
					index = j;
					found = false;
				}
			}
			if (!found) {
				a[index] = a[i];
				a[i] = prev;
			}
		}
		return new String(a);
	}

}