#include <iostream>
#include <vector>
#include <string>
#include <cmath>

using namespace std;

int getInt( char c ) { return c - '0'; }


vector<int>& minValue ( vector<int>& input ){

	int len = input.size();

	// for first letter
	int min_value = input[0];
	int min_index = -1;
	for (int cmp = 1 ; cmp < len ; cmp ++ ){
		if ( input[cmp] !=0 && min_value >input[cmp]){
			min_value = input[cmp];
			min_index = cmp;
		}
	}

	if (min_index != -1 ){
		int temp = input[min_index];
		input[min_index] = input[0];
		input[0] = temp;
		return input;
	}
	
	for (int index = 1; index < len-1; index ++ ){
		min_index = -1;
		min_value = input[index];
		for (int cmp = index+1; cmp < len ; cmp ++){
			if ( min_value > input[cmp] ){
				min_index = cmp;
				min_value = input[cmp];
			}
		}
		if ( min_index != -1){
			int temp = input[min_index];
			input[min_index] = input[index];
			input[index] = temp;
			break;
		}
	}
	return input;
}

vector<int> maxValue ( vector<int>& input) {

	int len = input.size();

	int max_value;
	int max_index;
	for ( int index = 0; index < len-1 ; index ++){
		max_index = -1;
		max_value = input[index];
		for (int cmp = index+1; cmp < len ; cmp ++){
			if ( max_value < input[cmp]){
				max_index = cmp;
				max_value = input[cmp];
			}
		}
		
		if (max_index != -1){
			int temp = input[max_index];
			input[max_index] = input[index];
			input[index] = temp;
			break;
		}
	}
	return input;
}

int main(){

	int cases;
	cin >> cases;
	for (int case_num = 1; case_num <= cases ; case_num++){

		string n_str;
		cin >> n_str;
		string min_str, max_str;
			
		if ( n_str.length() == 1 ){
			min_str = n_str;
			max_str = n_str;
			cout << "Case #" << case_num << ": " << min_str << " " << max_str << endl;
		}else{

			vector<int> min_find;
			vector<int> max_find;
			for (int i=0; i< n_str.length() ; i++){
				min_find.push_back( getInt( n_str[i]));
				max_find.push_back( getInt( n_str[i]));
			}

			min_find = minValue( min_find );
			max_find = maxValue( max_find );
					
			int min_val=0; 
			int max_val=0;
			
			for (int digit=n_str.length() ; digit > 0 ; digit--){
				min_val += min_find[n_str.length()-digit]*pow(10,digit-1);
				max_val += max_find[n_str.length()-digit]*pow(10,digit-1);
				
			}
		
			cout << "Case #" << case_num << ": " << min_val << " " << max_val << endl;
		}
	}
	return 0;

}
