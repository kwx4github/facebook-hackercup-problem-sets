#!/usr/bin/env python

def smallest(n):
  digits = list(n)

  minpos = 0
  for i, d in enumerate(digits):
    if i == 0:
      continue

    if d < digits[minpos] and int(d) != 0:
      minpos = i

  digits[0], digits[minpos] = digits[minpos], digits[0]

  return int(''.join(digits))

def largest(n):
  digits = list(n)

  maxpos = 0
  for i, d in enumerate(digits):
    if i == 0:
      continue

    if d > digits[maxpos]:
      maxpos = i

  digits[0], digits[maxpos] = digits[maxpos], digits[0]

  return int(''.join(digits))

fin = open('cooking_the_books.in', 'r')
fout = open('cooking_the_books.out', 'w')

T = int(fin.readline())

for t in xrange(T):
  N = fin.readline().replace('\n', '')

  fout.write('Case #%d: %d %d\n' % (t + 1, smallest(N), largest(N)))
