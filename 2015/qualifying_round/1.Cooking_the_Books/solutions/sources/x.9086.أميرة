#include <bits/stdc++.h>
using namespace std;
int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL), cout.tie(NULL);

	unsigned long long T;
	string N, srt, cut ;
	int i = 1 ;
	cin >> T;
	while (T--) {
		cin >> N;
		srt = N;
		cut = N;
		sort(srt.begin(), srt.end());
		for (int i = 0; i < srt.size(); i++) {
			if (srt[i] != '0') {
				cut[cut.find(srt[i])] = cut[0];
				cut[0] = srt[i];
				break;
			}
		}
		cout << "Case #" << i << ": " << cut << ' ';
		N[N.find(srt[srt.size() - 1])] = N[0];
		N[0] = srt[srt.size() - 1];
		cout << N << '\n';
		i++ ;
	}

//string s ("Hello");
//s.replace(0 , 2 , 3 ) ;
//cout<<s<<endl;
}

//#include <bits/stdc++.h>
//using namespace std;
//int main() {
//	ios::sync_with_stdio(false);
//	cin.tie(NULL), cout.tie(NULL);
//	int n;
//	cin >> n;
//	if (n & 1)
//		cout << 9 << ' ' << n - 9 << '\n';
//	else
//		cout << 4 << ' ' << n - 4 << '\n';
//}

//#include <bits/stdc++.h>
//using namespace std;
//int main() {
//	ios::sync_with_stdio(false);
//	cin.tie(NULL), cout.tie(NULL);
//	int n, c, x, y, max = 0;
//	cin >> n >> c;
//	cin >> x;
//	y = x;
//		for (int i = 0; i < n - 1; i++) {
//			cin >> x;
//			if (max < (y - x - c))
//				max = (y - x - c);
//			y = x;
//		}
//	cout << max << '\n';
//}

//#include <bits/stdc++.h>
//using namespace std;
//int main() {
//	ios::sync_with_stdio(false);
//	cin.tie(NULL), cout.tie(NULL);
//	long long int n;
//	cin >> n;
//	if (n % 2)
//		cout << -1 * (n + 1) / 2 << '\n';
//	else
//		cout << (n) / 2 << '\n';
//}

//#include <bits/stdc++.h>
//using namespace std;
//
//int main() {
// long n, t, i = 1, a[100000];
//	cin >> n >> t;
//	for (int j = 1; j < n; j++) {
//		cin >> a[j];
//	}
//	while (true) {
//		i = a[i] + i;
//		cerr<<i<<'\n';
//		if (i == t) {
//			cout << "YES\n";
//			return 0;
//		} else if (i > t) {
//			cout << "NO\n";
//			return 0;
//		}
//	}
//}

//#include<iostream>
//#include<string>
//#include  <vector>
//#include <map>
//#include<algorithm>
//using namespace std;
//
//int main() {
//	int n, cnt = 0, arr[100], cp[100], cot[100], index = 0;
//	cin >> n;
//
//	for (int i = 0; i < n; ++i) {
//		cin >> arr[i];
//	}
//	for (int i = n - 2; i > 0; i--) {
//		cnt = 0;
//		for (int j = 0; j < n - 1; j++) {
//			if (j != i && j + 1 != i) {
//				cp[cnt++] = arr[j + 1] - arr[j];
//				cerr <<" copy i != j " <<cp[cnt - 1] << '\n';
//			} else if (j == i) {
//				cp[cnt++] = arr[i + 1] - arr[i - 1];
//				cerr <<" copy i == j " <<cp[cnt - 1] << '\n';
//			}
//		}
//		sort(cp , cp + cnt);
//		for (int i = cnt - 1; i >= 0; i--) {
//			if (cp[i] != cp[i - 1]) {
//				cerr <<"Max " <<cp[i] << '\n';
//				cot[index++] = cp[i];
//				break ;
//			}
//		}
//	}
//	sort(cot, cot + index);
//	for (int i = 0 ; i < index; i++) {
//		if (cot[i] != cot[i+1]) {
//			cout << cot[i] << '\n';
//			return 0;
//		}
//	}
//}
//#include <iostream>
//#include<map>
//#include<string>
//#include<algorithm>
//
//using namespace std;
//
//int main() {
//
//	int m, n, t;
//	string t1, t2;
//	map<int, int> l1;
//	map<int, int> l2;
//	char g, c;
//	cin >> t1 >> t2;
//	cin >> n;
//	while (n--) {
//		cin >> t >> g >> m >> c;
//		if (g == 'h') {
//			if (c == 'r')
//				cout << t1 << ' ' << m << ' ' << t << '\n';
//			else if (c == 'y') {
//				if (l1[m] == 0)
//					l1[m] = 1;
//				else if (l1[m] == 1)
//					cout << t1 << ' ' << m << ' ' << t << '\n';
//			}
//		} else if (g == 'a') {
//			if (c == 'r')
//				cout << t2 << ' ' << m << ' ' << t << '\n';
//			if (c == 'y') {
//				if (l2[m] == 0)
//					l2[m] = 1;
//				else if (l2[m] == 1)
//					cout << t2 << ' ' << m << ' ' << t << '\n';
//			}
//		}
//	}
//}
//
//

//
//#include<iostream>
//#include<utility>
//#include<vector>
//#include<algorithm>
//using namespace std;
//int main() {
//	vector<int>v1 ;
//	int sz  , a ;
//	vector< pair <int , int > >out ;
//	cin >> sz;
//	for(int i = 0 ; i < sz ; i++){
//		cin >>a ;
//		v1.push_back(a);
//	}
//	for(int i = 0 ; i < v1.size() ; i++){
//		int Max = max_element(v1.begin()  , v1.begin()+v1.size()) - v1.begin();
//		cout<<Max <<endl;
//		int Min = min_element(v1.begin() , v1.begin()+v1.size() )-v1.begin() ;
//		cout<<"Min "<<Min<<endl;
//		if( Max < Min  ){
//			out.push_back(make_pair( Max , Min ));
//			cout<<"first : "<<out[out.size()-1].first << "second :"<<out[out.size()-1].second<<endl;
//		v1.erase(v1.begin()+Min) ;
//		v1.erase(v1.begin()+Max-1);
//		}
//		cout<<"Size : "<<v1.size()<<endl;
//	}
//	cout<<out.size()<<'\n';
//	for (int i = 0; i < out.size(); ++i) {
//		cout<<out[i].first<<' '<<out[i].second<<endl;
//	}
//}

//#include<iostream>
//#include "Lab.h"
//using namespace std;
//
//int main() {
//	int num1, num2, num3, num4;
//	cin >> num1 >> num2 >> num3 >> num4;
//	Rational cons(num1, num2);
//	cons.Add(num3, num4);
//	cons.Sub(num3, num4);
//	cons.Mul(num3, num4);
//
//}

//#include<iostream>
//#include<cstdio>
//
//using namespace std;
//int main(){
//	int l , v1 , v2 , t , t1 , t2 ;
//	freopen("input.txt" , "r" , stdin);
//	freopen("output.txt" , "w" , stdout);
//	cin >> l >> v1 >> v2 >> t ;
//	t1 = l/v1 , t2 = l/v2  ;
//	cout<<(t/t1 > t/t2 ? t/t1 : t/t2)<<'\n' ;
//}

//#include<iostream>
//using namespace std;
//
//int main() {
//	int x = 1;
//	for (char i = 'A'; i <= 'Z'; i++)
//		cout << x++ << ' ';
//	for (char k = 'A'; k <= 'Z'; k++) {
//		for (char j = 'a'; j <= 'z'; j++) {
//			cout << k << j << '\n';
//			cout << x++ << '\n';
//		}
//
//	}
//	for (char i = 'A'; i <= 'Z'; i++) {
//		for (char j = 'A'; j <= 'Z'; j++)
//			for (char k = 'a'; k <= 'z'; k++)
//				cout << i << j << k << ' ' << x++ << '\n';
//	}
//
//}

//#include<iostream>
//#include<string>
//using namespace std;
//int main(){
//	int n  , arr[26] ;
//	char x = 'A' ,  charc [26];
//	cin >> n ;
//	charc[0] = 'Z';
//	for(int i = 1 ; i <= 26  ; i++ ){
//		arr[i] = i ;
//		charc[i] = x ;
//		x++ ;
//	}
//	string s ;
//	while(n--){
//		cin >> s ;
//		if(s[0] == 'R' && isdigit(s[1])){
//			string x = s.substr(s.find('C')+1 , s.size()-s.find('C'));
//			string y = s.substr(1 , s.find('C')-1);
//			int num = atoi(x.c_str());
//			cout<<charc[num/26]<<charc[num%26]<<y<<'\n';
//		}
//
//	}
//
//}

//#include<iostream>
//#include<algorithm>
//
//using namespace std;
//int main(){
//	int arr[3] ;
//	for(int i = 0 ; i < 3 ; cin >> arr[i] , i++ ){}
//	sort(arr , arr+3);
//if(arr[0] + arr[1] + arr[2] >= (arr[0]+ arr[1])*arr[2] && arr[0] + arr[1] + arr[2] >= (arr[0]*arr[1])*arr[2])
//	cout<<arr[0]+arr[1]+arr[2];
//else
//	if(arr[0]+ arr[1] > arr[0]*arr[1]) cout<<(arr[0] + arr[1])*arr[2];
//	else cout<<arr[0]*arr[1]*arr[2];
//}

//Masculine adjectives end with -lios, and feminine adjectives end with -liala.
//Masculine nouns end with -etr, and feminime nouns end with -etra.
//Masculine verbs end with -initis, and feminime verbs end with -inites.
//Thus, each word in the Petya's language has one of the six endings, given above. There are no other endings in Petya's language.
//It is accepted that the whole word consists of an ending. That is, words "lios", "liala", "etr" and so on belong to the Petya's language.
//There aren't any punctuation marks, grammatical tenses, singular/plural forms or other language complications.
//A sentence is either exactly one valid language word or exactly one statement.
//Statement is any sequence of the Petya's language, that satisfy both conditions:
//
//Words in statement follow in the following order (from the left to the right): zero or more adjectives followed by exactly one noun followed by zero or more verbs.
//All words in the statement should have the same gender.
//Afte

//#include<iostream>
//#include<string>
//
//using namespace std;
//int main() {
//	string s ;
//	//cout<<s.substr(s.size()-2 , 2 )<<'\n';
//	int cnt = 0 , cmob = 0, cmv = 0 ,  cfob = 0 , cfv = 0 ;
//	bool chmn = 0 , chfn = 0  , ml = 0 , fm = 0;
//	int x= 6 ;
//	while(x--){
//		cin >> s;
//		cnt++ ;
//		 ml = 0 , fm = 0 ;
//		if( (s.size() >= 4 && s.substr(s.size()-4 , 4) == "lios" )||
//			(s.size() >= 3 && s.substr(s.size()- 3 , 3 ) == "etr")||
//			(s.size() >= 6 &&s.substr(s.size()-6 , 6 ) == "initis")){
//			if( s.size() >= 4 && s.substr(s.size()-4 , 4) == "lios" && !chmn)cmob++ ;
//			else if( s.size() >= 3 &&s.substr(s.size()-3 , 3 ) == "etr")chmn = 1 ;
//			else if ( s.size() >= 6 &&s.substr(s.size()-6 , 6 ) == "initis" && chmn)cmv++ ;
//			if(cmob > 0  || chmn   || cmv > 0 ) ml = 1 ;
//		}//lios initis
//		else if(!ml) {
//			if( s.size() >= 5 && s.substr(s.size()-5 , 5 ) == "liala" && !chfn)cfob++ ;
//			else if(s.size() >= 4 && s.substr(s.size()-4 , 4 ) == "etra")chfn = 1 ;
//			else if (s.size() >= 6 &&s.substr(s.size()-6 , 6 ) == "inites" && chfn)cfv++ ;
//			if(cfob > 0  || chfn   || cfv > 0 ) fm = 1;
//		}
//		if((!ml && !fm)){
//			cout<<"NO\n";
//			return 0 ;
//		}
//	}
//	if(cnt == 1 && (fm || ml ||( cfv == 0 && cmv == 0 ))) cout<<"YES\n";
//	else
////	if((chmn &&(cnt == cmob || cnt == cmv )) || (chfn && (cnt == cfob || cnt == cfv) ) )
////		cout<<"YES\n";
////		else
//			if(( chmn && cnt == (cmob + cmv + 1 )) )
//				cout<<"YES\n";
//			else if (( chfn  && cnt == (cfob + cfv + 1 )))
//				cout<<"YES\n";
//	else cout<<"NO\n";
//	cerr << cnt <<endl;
//	cerr << cmob <<' '<<cfob<< ' '<<cfv<< ' '<<cmv<<' '<<chfn << ' '<< chmn<<endl;
//}

//#include<iostream>
//#include<utility>
//#include<algorithm>
//#include<vector>
//using namespace std;
//int main() {
//	bool check = 1 ;
//	int n = 0 , prc =  0 , qut = 0 , max = 0;
//	cin >> n;
//	vector<pair<int, int> > v(n);
//
//	for (int i = 0; i < n; i++) {
//		cin >> prc >> qut;
//		v[i] = make_pair(prc, qut);
//	}
//	sort(v.begin(), v.begin()+n);
//	for(int i = 0 ; i < n-1 ; i++ ){
//		if(v[i].second >  v[i+1].second ){
//			check = 0  ; break ;
//		}
//	}
//
//	if(!check) cout<< "Happy Alex\n" ;
//	else cout<<"Poor Alex\n";
//
//}

//#include<iostream>
//
//using namespace std ;
//int main(){
//	int n , a , b , sum = 0 ,  bi[100] ;
//	cin >> n ;
//	for (int i = 0; i < n-1; ++i) {
//		cin >> bi[i] ;
//	}
//	cin >> a >> b ;
//	for(int i = a-1 ; i < b-1 ; i++)
//		sum += bi[i] ;
//	cout<<sum<<'\n';
//}

/*
 #include<iostream>

 using namespace std;
 int main(){
 int n , k ;
 cin >> n >> k ;
 for (int i = n  , j = 0 ; i > 0  && k != 0 ; j++ ,  --i) {
 if(j == k ) break ;
 cout<<i<<' ';
 }
 for(int i = 1 ; i <= n-k  ; i++)
 cout<<i <<' ';

 }
 */

//#include<iostream>
//
//using namespace std;
//int main(){
//	string s ;
//	bool check = true ;
//	cin >> s;
//	for(int i = 0 ; i < s.size() ; i++){
//		if(s[i] == '0'  && check ) check = false ;
//		else
//			if(i == s.size()-1 && check)break ;
//		else
//			cout<<s[i];
//
//			}
//	cout<<'\n';
//}
//#include<iostream>
//#include<string>
//#include<math.h>
//using namespace std ;
//int main(){
//	string s ;
//	cin >> s ;
//	int x = (int)s.find('0') ;
//	if(x != -1 )s.erase(x , 1 );
//	else s.erase(0 , 1 );
//	cout<<s<<'\n';
//}
//	int cnt1 = 0 , cnt2 = 0 , cnt = 0 ;
//	string s1 , s2 ;
//	cin >> s1 >> s2 ;
//	for (int i = 0; i < s1.size(); ++i) {
//		if(s1[i] == '+')cnt1++ ;
//		else cnt1-- ;
//		if(s2[i] == '+')cnt2++;
//		else if (s2[i] == '-')cnt-- ;
//		else cnt++ ;
//	}
//	if(cnt == 0 ){
//		if(cnt2 == cnt1)cout<<(double)1<<'\n';
//		else cout<<(double)0<<'\n';
//	}
//	else{
//		if(cnt1 > cnt2 )  int x = cnt - cnt1 / (pow(cnt , 2 ));
//		cout<<cnt - cnt1 / (pow(cnt , 2 ))<<'\n';
//		else if(cnt1 < cnt2) if(cnt1 == cnt)
//	}// 3dd l count + cnt2 >=
//#include<iostream>
//using namespace std;
//int main() {
//	int n, m , nn ;
//	cin >> n >> m;
//	nn = n ;
//	if (n < m){
//		cout << "-1\n";
//		return 0 ;
//	}
//else {
//	n =(n/ 2) + (n % 2);
//	for (int i = 0;( n% m); ++i) {
//		n++;
//	}
//}
//	if(n > nn ) cout<<"-1\n";
//	else
//	cout<<n<<'\n';
//}
//#include<iostream>
//#include<cstdio>
//using namespace std ;
//int main(){
////	freopen("input.txt" , "r" , stdin);
////	freopen("output.txt" , "w" , stdout);
//	int n , m , f  , t ;
//	cin >> t ;
//	for(int i = 0 ; i < t ; i++){
//		cin >> n >> f >> m ;
//		if (6666-n > f )
//			cout<<"Case "<<i+1<<":"<<" mom\n";
//		else cout<<"Case "<<i+1<<":"<<" dad\n";
//	}
//
//}
//#include<iostream>
//#include<string>
//#include<algorithm>
//#include<set>
//#include<cstdio>
//
//using namespace std;
//int main() {
//	 freopen("input.txt", "r", stdin);
//	 freopen("output.txt", "w", stdout);
//	int n;
//	string s, fn, nn("!@#$%ˆ&*()"), lt;
//
//	cin >> n;
//	for (int j = 0; j < n; j++) {
//		cin >> s;
//		set<char> l;
//
//		int cnt = 0, cntD = 0, cntPh = 0, cntUp = 0, cntLw = 0, cntLt = 0;
//		for (int i = 0; i < s.size(); i++) {
//			l.insert(s[i]);
//			if (isdigit(s[i])) {
//				if (cntD < 1 ) {
//						cntD++;
//						cnt++;
//					}
//			} else if (isalpha(s[i])) {
//				if (cntPh < 1)
//					cntPh++, cnt++;
//				if (islower(s[i])) {
//					if (cntLw < 1) {
//						cntLw++;
//					}
//				} else if (isupper(s[i]) && (int) lt.find(s[i]) == -1) {
//					if (cntUp < 1) {
//							cntUp++;
//					}
//				}
//			} else if (cntLt < 1) {
//				if ((int) nn.find(s[i]) != -1) {
//					cnt++, cntLt++;
//				}
//			}
//		}
//		if (cntLw && cntUp)
//			cnt++;
//		if (s.size() >= 6)
//			cnt++;
//		if (s.size() > 10)
//			cnt++;
//		if (l.size() == s.size())
//			cnt++;
//		if (cnt < 4)
//			cout << "Case #" << j + 1 << ":\n" << "weak\n";
//		else if (cnt >= 6)
//			cout << "Case #" << j + 1 << ":\n" << "strong\n";
//		else
//			cout << "Case #" << j + 1 << ":\n" << "normal\n";
//	}
//}
/*#include<iostream>
 #include<algorithm>
 #include<string>
 using namespace std;
 int main() {
 int i = 0, arr[100];
 char x;
 cin >> arr[i++];
 while (true) {
 cin.get(x);
 if (x != '\n') {
 cin >> arr[i++];
 x = '-';
 } else
 break;
 }
 sort(arr, arr + i);
 for (int j = 0; j < i; j++) {
 if (j != i - 1) {
 cout << arr[j] << '+';
 } else
 cout << arr[j];
 }
 }*/

/*#include<iostream>
 #include<vector>
 using namespace std;
 int main() {
 int col, row, vcol = 0, cnt = 0, vrow = -1, index = -1, arr[100000][100000];
 vector<vector<int> > v;
 cin >> col >> row;
 for (int i = 0; i < row; i++)
 for (int j = 0; j < col; j++)
 cin >> arr[i][j];

 for (int i = 0; i < col; i++)
 for (int j = 0; j < row; j++)
 if (arr[i][j] == 1) {
 if (index != i)
 index = i, vrow++;
 v[vrow][vcol++];
 }
 for (int i = 0; i < v.size(); i++) {
 for (int j = 0; j < v[i].size(); j++) {
 for (int k = 0; k < v.size(); k++) {
 bool check = false;
 for (int l = 0; l < v[k].size(); l++) {
 if (v[i][j] == v[k][l]) {
 check = true;
 break;
 }
 }
 if (!check)
 cnt++;
 }
 }
 }
 cout << cnt;
 }*/

/*#include <iostream>
 #include<algorithm>
 using namespace std;
 bool winner(int n, int a, int b) {

 for (;;) {
 n -= __gcd(a, n);
 if (n == 0)
 return 0;
 n -= __gcd(b, n);
 if (n == 0)
 return 1;
 }
 }
 int main() {
 int n, a, b;
 cin >> a >> b >> n;

 cout << winner(n, a, b);
 return 0;
 }*/

/*#include<iostream>
 //#include<set>
 //#include<string>
 //#include<sstream>
 //
 //using namespace std ;
 //#define sz(v)        (int)v.size()
 //#define FOR( i,a, b) for(int i = (a) ;i <(b) ;i++)
 //#define REV( i,a,b)  for(int i = (a) ; i >= b ; i--)
 //int main(){
 //int n , b , cnt = 0 ;
 //cin >> n >> b ;
 //cnt = n;
 //while (true){
 //	cnt +=n/b ;
 //	 if (!(n/b)) break ;
 //	n = (n/b) + (n%b) ;
 //}
 //cout<<cnt<<'\n';
 //}
 //set <long long > l ;
 //long long int s1 ,s2 ,s3 , s4 ;
 //cin >> s1 >> s2 >> s3 >> s4 ;
 //l.insert(s1) , l.insert(s2),l.insert(s3),l.insert(s4) ;
 //cout<<4-l.size();
 }*/
/*string s ;
 int num ;

 cin >> num ;
 stringstream ss;
 for(; ;){
 set <char> l ;
 num += 1 ;
 ss << num ;  ss >> s ;
 ss.clear();
 l.insert(s[0]),
 l.insert(s[1]),
 l.insert(s[2]),
 l.insert(s[3]);
 if (l.size() == 4) break ;

 }
 cout<<num ;*/

/*#include<iostream>
 #include<string>

 using namespace std;
 int main(){
 int n , t ;
 cin >> n >> t;
 string s;
 cin >> s ;
 while(t--){
 for(int i = 0 ; i <s.size()-1 ; i++ ){
 if	(s[i] == 'B' && s[i+1] =='G'){
 s[i]='G' ; s[i+1]='B';
 i++;
 }

 }
 }
 cout<<s;
 }*/

/*#include<iostream>
 #include<algorithm>

 using namespace std;
 int main(){
 int n , arr[100] , cnt = 0 , min =101 , max = 0 , minIndex  , maxIndex ;
 cin >>n ;
 for(int i=0 ; i <n ;i++)
 cin >>arr[i];
 for(int i = 0 ; i < n ; i++)
 if(arr[i] <= min) min = arr[i] , minIndex = i;

 for(int i = minIndex ; i< n-1 ; i++){
 if(arr[i]!= arr[i+1])
 swap(arr[i] ,arr[i+1]) ,cnt++;
 }

 for(int i = n-1 ; i>=0 ; i--)
 if(arr[i] >= max )max=arr[i] , maxIndex = i ;

 for(int i = maxIndex ; i> 0 ; i--){
 if(arr[i] != arr[i-1])
 swap(arr[i] , arr[i-1]) , cnt++;
 }
 cout<<cnt;
 }*/

/*#include<iostream>
 #include<algorithm>
 #include <stdlib.h>
 using namespace std;
 int main(){
 int arr[5][5] ;
 for(int i = 0 ; i< 5 ;i++){
 for(int j = 0  ; j < 5 ;j++){
 cin >>arr[i][j];
 if(arr[i][j] == 1){
 cout<<abs(j-2)+abs(i-2)	;
 return 0 ;
 }
 }
 }
 }*/

/*#include<iostream>
 #include<string>

 using namespace std;
 int main() {
 string a, b, s, rs;
 =cin >> a >> b;
 s = a;
 rs = s;
 if (a.size() != b.size()) {
 cout << "NO";
 return 0;
 } else
 for (int i = 0; i < a.size() - 1; i++) {
 if (a[i] == '1' && a[i + 1] == '1') {
 s[i] = '0';
 s[i + 1] = '1';
 rs[i] = '1';
 rs[i + 1] = '0';
 if (s == b || rs == b) {
 cout << "YES";
 return 0;
 } else {
 s = a;
 rs = a;
 }
 } else if ((a[i] == '1' && a[i + 1] == '0')
 || (a[i] == '0' && a[i + 1] == '1')) {
 s[i] = '1', s[i + 1] = '1';
 if (s == b 			if (s == b) {
 cout << "YES";
 return 0;
 } else {
 s = a;
 rs = a;
 }
 }
 }
 cout << "NO";
 }*/

/*#include<iostream>
 #include<string>

 using namespace std;
 int main() {
 string a, b;
 cin >> a >> b;
 long long f1 = (int) a.find('1'), f2 = (int) b.find('1');

 if (a.size() != b.size()) {
 cout << "NO\n";
 return 0;
 }
 if (a.size() > 1) {
 if (f1 == -1 && f2 != -1) {
 cout << "NO\n";
 return 0;
 }
 if (f1 != -1 && f2 == -1) {
 cout << "NO\n";
 return 0;
 }
 if (f1 == -1 && f2 == -1) {
 cout << "YES\n";
 return 0;
 }
 cout << "YES\n";
 } else if (a[0] != b[0])
 cout << "NO";
 else
 cout << "YES\n";
 }*/

/*#include <iostream>
 #include <cstring>
 #include <iomanip>
 #include <vector>
 #include <cstdlib>

 using namespace std;

 int x;  //Number of boys
 int y;  //Number of girls;
 int n;  //Number of members in each boys team.
 int m;  //Number of members in each girls team.
 int nB; //Number of boys teams.
 int nG; //Number of girls teams.

 const int MAX = 200;
 vector<vector<int> > boys, girls;
 bool vis[MAX];

 void generateBoys() {
 memset(vis, 0, sizeof vis);
 vector<int> tmp;
 for (int i = 1; i <= x; ++i) {
 int num = (rand() % x) + 1;
 if (vis[num]) {
 --i;
 continue;
 }
 vis[num] = 1;
 tmp.push_back(num);
 if (i % n == 0) {
 nB++;
 boys.push_back(tmp);
 tmp.clear();
 }
 }
 if ((int) tmp.size() > 0) {
 nB++;
 boys.push_back(tmp);
 }
 }

 void generateGirls() {
 memset(vis, 0, sizeof vis);
 vector<int> tmp;
 for (int i = 1; i <= y; ++i) {
 int num = (rand() % y) + x + 1;
 if (vis[num]) {
 --i;
 continue;
 }
 vis[num] = 1;
 tmp.push_back(num);
 if (i % m == 0) {
 nG++;
 girls.push_back(tmp);
 tmp.clear();
 }
 }
 if (tmp.size() > 0) {
 nG++;
 girls.push_back(tmp);
 }
 }

 int main() {
 srand(time(0));

 cout << "Enter number of boys: ";
 cin >> x;
 cout << "Enter number of girls: ";
 cin >> y;
 cout << "Enter number of members in each boys team: ";
 cin >> n;
 cout << "Enter number of members in each girls team: ";
 cin >> m;

 generateBoys();
 generateGirls();

 cout << "\nNumber of people: " << x + y
 << " = " << x << " boys + " << y << " girls"
 << "\nNumber of Teams: " << nB + nG
 << "\nNumber of boys' teams: " << nB
 << "\nNumber of girls' teams: " << nG;

 cout << "\n\nBoys' teams:\n";
 for (int i = 1; i <= nB; ++i) {
 cout << "Team #" << (i < 10 ? "0" : "") << i << "B: ";
 for (int j = 0; j < (int) boys[i - 1].size(); ++j) {
 cout << setw(3) << boys[i - 1][j] << ' ';
 }
 cout << '\n';
 }
 cout << "\nGirls' teams:\n";
 for (int i = 1; i <= nG; ++i) {
 cout << "Team: #" << (i < 10 ? "0" : "") << i << "G: ";
 for (int j = 0; j < (int) girls[i - 1].size(); ++j) {
 cout << setw(3) << girls[i - 1][j] << ' ';
 }
 cout << '\n';
 }
 }*/

/*#include<iostream>
 #include<math.h>
 #include<string>
 #include<algorithm>
 using namespace std;
 int main(){
 //	int n   , cnt = 0 ;
 //
 //	bool check  = true ;
 //	string num ;
 //	cin >> n >> num ;
 //	for (int i = 0; i < num.size(); ++i) {
 //		if(num[0] == '1') num[0] = '2' , cnt++;
 //		else
 //			if(num[i-1] == '2' && i != 0  && num[i] == '1') num[i] = '2' , cnt++;
 //		else if (num[i-1] == '2') num[i] ='1' , cnt++;
 //	}
 //	cout<<cnt;
 int n  , cnt = 0  , check [100] ={0};
 string  num  ;

 cin >> n >> num;
 if(num[0] == '1'){
 check[0] = 1 ;
 cnt++;
 for(int i = 1 ; i < num.size(); i++){
 if(check[i-1] &&  num[i] == '0') cnt++ ;
 else if (check[i-1] && num[i] == '1') cnt++ , check[i] = 1 ;

 }
 }
 else cnt = 1 ;
 cout<<cnt;
 }*/

/*#include<iostream>
 //#include<string>
 //using namespace std ;
 //
 //int main (){
 //	int n  , cnt = 0  , check [1000] = {0};
 //	char x ;
 //	string s ;
 //	cin >> n ;
 //	n*= 2;
 //	while(n--){
 //		cin >> x ;
 //		s  += x ;
 //	}
 //	int fnd = s.find('1')  , lfind = s.find_last_of('1')
 //	s[fnd] = '0';
 //
 //	while( (int)s.find('1') != -1 ){
 //		ifnd = s.find('1')  , lfind = s.find_last_of('1') ;
 //
 //		if ( fnd < (lfind - fnd ) && s[fnd-1] == '1'){
 //			cnt += 1 ;
 //			s[fnd] = '0';
 //		}
 //		else if (fnd < (lfind - fnd ) ){
 //			cnt +=
 //		}
 //	}
 //}*/

/*#include<iostream>
 //
 //using namespace std;
 //
 //int main(){
 //	int n , num1 , num2 ,num3 , sum1 = 0  , sum2 = 0 , sum3 = 0 ;
 //	cin >> n ;
 //	while(n--){
 //		cin >> num1 >> num2 >> num3  ;
 //		sum1 += num1 , sum2 += num2 , sum3 += num3 ;
 //	}
 //	if(sum1 == sum2 &&  sum3 == sum2 && sum3 == 0  )cout<<"YES\n";
 //	else cout<<"NO\n";
 //}
 //#include<iostream>
 //#include<map>
 //#include<utility>
 //#include<algorithm>
 //using namespace std;
 //int main(){
 //	int n , h , m  , max = 1;
 //	cin >> n ;
 //	map < pair<int , int >, int> l ;
 //	while(n--){
 //		cin >> h >> m ;
 //		l[make_pair(h , m)]++ ;
 //		if(l[make_pair(h , m)] > max ) max = l[make_pair(h , m)] ;
 //	}
 //	cout<<max;
 //}*/

/*#include<iostream>
 //#include<algorithm>
 //
 //using namespace std;
 //int main() {
 //	int n, d, cn, s, max = 0;
 //	bool check = false;
 //	cin >> n >> s;
 //	while (n--) {
 //		cin >> d >> cn;
 //
 //		if (d < s || (d == s && cn == 0 ) ) {
 //			check = true;
 //			if (100 - cn  > max && cn != 0 ) {
 //				max = 100 - cn ;
 //		}
 //
 //	}
 //}
 //	if(max == 100 ) cout<<'0';
 //	else if (check)
 //		cout << max << endl;
 //	else if (!check)
 //		cout << "-1\n";
 //
 //}*/

/*#include<iostream>
 //#include<algorithm>
 //using namespace std ;
 //
 //int main(){
 //	int n , s , mx = 0 ;
 //	 cin >> n ;
 //	while(n--){
 //		cin >> s;
 //		mx = max(mx  ,s );
 //	}
 //cout<<mx<<'\n';
 //}*/

//notcomplete
/*
 #include<iostream>
 #include<algorithm>
 #include<cstdio>
 #include<vector>
 #include<utility>
 using namespace std;

 int main() {
 freopen("input.txt", "r", stdin);
 freopen("output.txt", "w", stdout);
 long long n, cnt = 0, x;
 vector<long long> v;
 vector<pair<long long, long long> > vp;

 cin >> n;
 n *= 2;
 bool check = false;

 for (long long i = 0; i < n; i++) {
 cin >> x;
 v.push_back(x);
 for (long long j = 0; j < (int) v.size(); j++) {
 if (v[i] == v[j] && j != i) {
 vp.push_back(make_pair(i, j));
 check = true;
 v[j] = cnt--, v[i] = cnt--;
 cout << 's';
 break;
 } else if (!check) {
 cout << "-1\n";
 return 0;
 }
 }
 }
 //for(int i = 0 ; i < vp.size() ; i++)
 //	cout<<vp[i].first<<' '<<vp[i].second<<'\n';
 cout << 'r';
 //}*/

//WA
/*
 #include<iostream>
 #include<map>
 #include<algorithm>
 using namespace std;
 int main() {
 int cnt = 1, arr[3];
 map<char , int> l;
 // C, C#, D, D#, E, F, F#, G, G#, A, B, H.
 string s ("ABHCcDdEFfGg")  , ss;

 l['C'] = cnt++, l['c'] = cnt++, l['D'] = cnt++, l['d'] = cnt++, l['E'] =
 cnt++, l['F'] = cnt++, l['f'] = cnt++, l['G'] = cnt++, l['g'] =
 cnt++, l['A'] = cnt++, l['B'] = cnt++, l['H'] = cnt++;
 string x ;
 for(int i = 0 ; i < 3  ; i++ ){
 cin >> x ;
 if(x == "C#") x = "c" ;
 else if(x == "D#") x = 'd' ;
 else if (x == "F#")x = 'f';
 else if (x == "G#") x ='g';
 arr[i] = (int)s.find(x) ;
 }
 sort(arr, arr+3);

 int one , two ;
 one =
 abs(l[s[arr[1]]] - l[s[arr[0]]]) < abs((l['H'] - l[s[arr[0]]] ) + l[s[arr[1]]]) ?
 abs(l[s[arr[1]]] - l[s[arr[0]]] ):abs((l['H'] - l[s[arr[0]]] ) + l[s[arr[1]]] );

 two =
 abs(l[s[arr[2]]] - l[s[arr[1]]]) <abs( (l['H'] - l[s[arr[1]]] ) + l[s[arr[2]]]) ?
 abs(l[s[arr[2]]] - l[s[arr[1]]] ): abs((l['H'] - l[s[arr[1]]] ) + l[s[arr[2]]] );

 if(one == 4 && two == 3 )cout<<"major";
 else if (one == 3 && two == 4) cout<<"minor";
 else cout<<"strange";

 }*/

/*#include<iostream>
 #include<algorithm>

 using namespace std ;
 int main(){
 int n , m  , i = 1;
 cin >> n >> m ;
 while(m > 0 ){
 if(m % i == m ) break ;
 m -= i ;
 if(i == n ) i = 0 ;
 i++ ;
 }
 cout<<m ;

 }*/

/*#include<iostream>

 using namespace std ;
 int main(){
 ios_base::sync_with_stdio(0);
 long long int n , k , index = 0 ;
 cin >> n >> k ;
 if(n % 2){
 index = (n+1)/2 ;
 }
 else {
 index = n/2 ;
 n-- ;
 }
 if(k <= index ) cout<< n - ( (index - k)*2 ) <<'\n';
 else cout<<(k - index )*2<<'\n';
 }*/

/*#include<iostream>
 #include<algorithm>

 using namespace std;
 int main(){
 int n , arr[100] ;
 cin >> n ;
 for(int i = 0 ; i < n ; i++)
 cin >> arr[i];
 sort(arr, arr+n);
 for(int i = 0 ; i < n ; i++){
 if(i+1 == n )
 cout<<arr[i]<<'\n';
 else
 cout<<arr[i]<<' ';
 }
 }*/

/*#include<iostream>

 using namespace std ;
 int main(){
 int n , sumEven = 0 , sumOdd = 0 , k = 8;
 while(k--){
 cin >> n ;
 if(k % 2)sumOdd += n ;
 else sumEven += n ;
 }
 cout<<sumEven<<' '<<sumOdd<<'\n';
 }*/

/*#include<iostream>
 //#include<string>
 //#include <algorithm>
 //#include<vector>
 //#include<cmath>
 //#include<cstdio>
 //#include<sstream>
 //#include<string>
 //#include<math.h>
 //#include <stdio.h>
 //using namespace std ;
 // long double srt(long long int x , long long int m ){
 //	 long double n;
 //	n = (long double) m  ;
 //	bool check = false , check1 = true  ;
 //	long  double small ,big;
 //	small = big =  n/2 ;
 //	for( ; ; ){
 //		if(small * big > (long double )x && check1){
 //			small = big = (long double) n/2 ;
 //			n /=2;
 //			continue ;
 //		}
 //
 //		else if (!check)
 //			check = true ;
 //
 //		if(check && check1){
 //			big = ((long double) small )* 2 ;
 //			check1  = false ;
 //		}
 //
 //		if( fabs((long double)x  - (small *small )) <= 1.e-4)
 //				return (long double) small;
 //
 //			else if (fabs((long double)x - (big*big )) <= (1.e-4) )
 //				return (long double)big;
 //
 //			else if (((small + big ) / 2 )> small and
 //					((small + big ) / 2 )*((small + big ) / 2) < (long double)(x*1.0000) )
 //			{
 //				small = (long double )(small + big ) / 2  ;
 ////				cout<<fixed;
 ////					cout.precision(10);
 ////					cout<<"Small  :"<<small <<endl ;
 //			}
 //
 //			else if (((small + big)/2) < big and
 //					((small + big)/2)*((small + big)/2) > (long double) (x*1.0000) ) {
 //						big = (long double )(small + big)/2 ;
 //						//cout<<fixed;
 //					//	cout.precision(10);
 //				//		cout<<"big  :" << big <<endl;
 //			}
 //			else return small ;
 //	}
 //
 //}
 //
 //int main(){
 //
 //	string s ;
 //	stringstream ss;
 //	long  long int  n  , nn  , sz = 0 ;
 //    vector< long double > l ;
 //    while(cin >> n){
 //    	ss << n ; ss >> s ; ss.clear();
 //    	sz = s.size();
 //    	nn = n ;
 //    	while(s.size() > (sz/2)+1){
 //    		ss << s ; ss >> n ; ss.clear() ;
 //    		n/= 2 ;
 //    		ss << n ; ss >> s ; ss.clear();
 //    	}
 //    	l.push_back(srt(nn , n ));
 //    }
 //    for(int i = l.size()-1 ; i>= 0 ; i--){
 //    	cout<<fixed;
 //    	cout.precision(4);
 //        cout<<l[i]<<endl;
 //    }
 //	//876652098643267843
 //    //936297014.1164
 //}*/

/*#include<iostream>
 #include<string>
 #include<map>
 #include<utility>
 #include<vector>
 #include<algorithm>

 using namespace std;

 int main() {
 long long ccuot = 0;
 string n("&&"), ss, s, wrd, num, cuot(""), cpyn("");
 map<char, char> l;

 l['o'] = '0', l['q'] = '0', l['z'] = '0', l['i'] = '1', l['j'] = '1', l['a'] =
 '2', l['b'] = '2', l['c'] = '2', l['d'] = '3', l['e'] = '3', l['f'] =
 '3', l['g'] = '4', l['h'] = '4', l['k'] = '5', l['l'] = '5', l['m'] =
 '6', l['n'] = '6', l['p'] = '7', l['r'] = '7', l['s'] = '7', l['t'] =
 '8', l['u'] = '8', l['v'] = '8', l['w'] = '9', l['x'] = '9', l['y'] =
 '9';

 int x = 2, test;
 while (true) {
 vector<pair<long long int, string> > v;
 vector<pair<string, string> > mns;
 ccuot = 0;

 cuot = "";
 cin >> n;
 if (n == "-1")
 break;
 cin >> test;
 ss = n;
 for (int i = 0; i < test; i++) {
 string num;
 cin >> s;
 for (int j = 0; j < (int) s.size(); j++) {
 num += l[s[j]];
 }

 mns.push_back(make_pair(num, s));
 v.push_back(make_pair(s.size(), num));
 }
 int arr[100] = { 0 };
 int count = 0;
 sort(n.begin(), n.end());
 sort(v.begin(), v.end());

 for (int k = v.size() - 1; k >= 0; k--) {
 wrd = v[k].second;
 cpyn = "";
 sort(v[k].second.begin(), v[k].second.end());
 long long cnt = 0;
 for (int i = 0; i < (int) n.size(); i++) {
 if (v[k].second.size() <= (int) n.size()) {
 for (int j = 0; j < v[k].first; j++) {
 if (v[k].second[j] == n[i]) {
 cnt++;
 cpyn += n[i];
 n.erase(i, 1), i--;
 v[k].second.erase(j, 1), j--;
 break;
 }
 }
 }
 }
 if (cnt == v[k].first) {
 for (int q = 0; q < mns.size(); q++) {
 if (wrd == mns[q].first) {
 cuot += mns[q].second + ' ';
 ccuot++;
 break;
 }
 }
 } else {
 n += cpyn;
 }
 }
 if (cuot != "" && cuot.size() - ccuot == ss.size()) {
 if (cuot[cuot.size() - 1] == ' ')
 cuot.erase(cuot.size() - 1, 1);
 cout << cuot << '\n';
 } else
 cout << "No solution.\n";

 }
 }
 */

/*#include<iostream>
 #include<string>
 #include<algorithm>

 using namespace std;
 int main(){
 int n , cp = 0 , p , q ;
 cin >> n ;
 while(n--){
 cin >> p >> q ;
 if(q - p >= 2) cp++ ;
 }
 cout<<cp<<'\n';
 }*/

//notcomplete
/*#include<iostream>
 #include<string>
 #include<utility>
 #include<vector>
 #include<algorithm>
 using namespace std ;
 int main () {
 int n  , m  , k  , num , cnt = 0  , count = 0 ;
 string arr[10000];
 cin >> n >> m >> k ;
 for(int i = 0 ; i < m+1 ; i++){
 cin >> num ;
 for(int i = 0 ; num != 1 ; i++){
 if( num % 2 == 1 ) arr[cnt] += (char)(i+48) ;
 num /= 2 ;
 }
 cout<<"arr[cnt]  "<<arr[cnt]<<endl;
 }
 for(int i = 0 ; i < m+1 ; i++){
 for(int j = 0 ; j < arr[i].size() ; j++){
 cnt = 0 ;
 for(int k = 0 ; k < arr[j].size() ; k++){
 if(arr[i][k] != arr[j][k])
 cnt++ ;
 }
 if(cnt <= k  && cnt != 0 ) count++ ;
 }
 }
 cout<<count<<endl;
 }*/

/*#include<iostream>
 #include<math.h>
 #include<string>
 #include<sstream>
 using namespace std;
 int main() {
 int n;
 cin >> n;

 int x = (n - 1) / 2 + 24;
 if (x - 1 >= 24) {
 cout << "YES\n";
 if (n % 2) {
 for (int i = 0; i < (n - 1) / 2; i++) {
 stringstream ss;
 string s;
 ss << x, ss >> s;
 ss.clear();
 cout << s << " * 1 = " << x << endl;
 cout << s << " - 1" << " = " << x - 1 << endl;
 x -= 1;
 ss << x, ss >> s;
 ss.clear();

 }
 } else {
 x = (n / 2) + 24;
 for (int i = 0; i < (n / 2); i++) {
 stringstream ss;

 string s;
 ss << x, ss >> s;
 ss.clear();
 if (i + 1 - (n / 2) != 0 )
 cout << s << " * 1 = " << x << endl;
 cout << s << " - 1" << " = " << x - 1 << endl;
 x -= 1;

 ss << x, ss >> s;
 ss.clear();

 }
 }
 } else
 cout << "NO\n";
 }*/

/*#include<iostream>

 using namespace std;
 int main() {
 int n;
 cin >> n;
 if (n >= 1 && n <= 4)
 cout << "few\n";
 else if (n >= 5 && n <= 9)
 cout << "several\n";
 else if (n >= 10 && n <= 19)
 cout << "pack\n";
 else if (n >= 20 && n <= 49)
 cout << "lots\n";
 else if (n >= 50 && n <= 99)
 cout << "horde\n";
 else if (n >= 100 && n <= 249)
 cout << "throng\n";
 else if (n >= 250 && n <= 499)
 cout << "swarm\n";
 else if (n >= 500 && n <= 999)
 cout << "zounds\n";
 else
 cout << "legion\n";
 }*/

/*#include<iostream>
 using namespace std ;
 int main(){
 int  n , a, b ;
 cin >> n >>  a >> b ;
 cout<<n*a*b*2<<'\n';
 }*/

/*#include<iostream>
 using namespace std ;

 int main(){
 int s[2] ;
 cin >> s[0] >> s[1] ;
 if	((s[0]+1)%2 || (!((s[1]+1) % 2)))cout<<"yes\n";// 0 1 2 3 4 5 6 7 8 9

 else cout<<"no\n";

 }*/

/*#include<iostream>

 using namespace std;
 int main(){
 int a , b ;
 cin >> a >> b ;
 cout<<b-1 <<' '<<a-1<<'\n';
 }*/

/*#include<iostream>
 using namespace std ;
 int main(){
 int n , k ;
 cin >> n >> k ;
 if(n < k )cout<<"2\n";
 else {
 n *= 2 ;
 cout<<(n/k)+(bool(n%k)) <<'\n';
 }
 }
 */

/*#include<iostream>

 using namespace std;
 int main() {
 int n, a, arr[3] = {0};
 cin >> n;
 for (int i = 1; i <= n; i++) {
 cin >> a ;
 arr[i % 3] += a ;
 }
 if (arr[0] > arr[1]) {
 if (arr[0] > arr[2]) {
 cout << "back\n";
 return 0;
 }
 cout << "biceps\n";
 return 0;
 }
 if(arr[1] > arr[0]) {
 if(arr[1] > arr[2]) {
 cout<<"chest\n";
 return 0;
 }
 cout << "biceps\n";
 return 0 ;
 }
 cout << "biceps\n";
 }*/

//WA
/*#include<iostream>
 #include<algorithm>
 #include<math.h>
 #include<set>
 using namespace std;
 int main() {
 long long  n , a , b ;// 4 + 10 = 14 + 101 = 140
 cin >> a >> b >> n ;
 for(int i = 1 ; i <= n ; i++){
 for(int j = 0 ; j < 10 ; j++){
 long long res = a * pow(10 , 1 ) + j  ;
 if(!(res % b)){
 a = res ;
 break ;
 }//1 15 10

 if (j+1 == 10 ){
 cout<<"-1\n";
 return 0 ;
 }
 }
 }
 cout<<a<<'\n';
 }*/

//wA
/*#include<iostream>
 #include<algorithm>
 using namespace std ;
 int main(){
 int a  , x  , nn , n , sum = 0 ;
 cin >> a  >> n ;
 nn = a*n ;
 while(n--)cin >> x , sum += x ;
 cout<<abs(sum - nn)  <<'\n';
 }*/

/* #include<iostream>
 #include<set>
 #include<algorithm>
 using namespace std;
 int main() {
 int a, b, c, tm1[4000], tm2[4000], tm3[4000], sum = 0;
 cin >> a;
 for (int i = 0; i < a; i++) {
 cin >> tm1[i];
 }
 cin >> b;
 for (int i = 0; i < b; i++) {
 cin >> tm2[i];
 }
 cin >> c;
 for (int i = 0; i < c; i++) {
 cin >> tm3[i];
 }
 for (int i = 0; i < a; ++i) {
 if (find(tm2, tm2 + b, tm1[i]) != tm2 + b)
 if (find(tm3, tm3 + c, tm1[i]) != tm3 + c) {
 sum++;
 }
 }
 cout << sum << '\n';
 }
 */

//WA //#include <iostream>
//#include<algorithm>
//using namespace std;
//
//int main(){
//	int n , w , m , s ;
//	cin >> n ;
//	while(n--){
//		cin >> m >> w >> s ;
//		int minn = min(m , w );
//	   minn *= 2 ;
//		cout<<(minn <= s ?  minn/2 : s/2 )<<'\n';
//	}
//}
/*
 #include<iostream>
 #include<vector>
 #include<utility>
 #include<algorithm>
 using namespace std;
 int main() {
 int n, s, x, y;
 vector<pair<int, int> > l;
 cin >> s >> n;
 int sum = s;
 while (n--) {
 cin >> x >> y;
 l.push_back(make_pair(x, y));
 }
 sort(l.begin(), l.end());
 for (int i = 0; i < l.size(); i++) {
 if (l[i].first >= sum) {
 cout << "NO\n";
 return 0;
 }
 sum += l[i].second;
 }
 cout << "YES\n";
 }
 */

