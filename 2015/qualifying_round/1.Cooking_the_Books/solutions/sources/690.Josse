#include <iostream>
#include <cstdio>
#include <set>
#include <cassert>
#include <cstring>

using namespace std;

template<class T, class S>
ostream& operator<<(ostream& os, pair<T,S> p) {
	os << p.first << " " << p.second;
	return os;
}

set<int> nums;

pair<int, int> solve() {
	int N;
	cin >> N;
	assert(N >= 0 && N <= 999999999);
	char orig[20];
	sprintf(orig, "%d", N);
	nums.clear();
	nums.insert(N);
	unsigned l = strlen(orig);
	assert(l == 1 || (l > 1 && orig[0] != '0'));
	for (unsigned i = 0; i < l; i++) {
		for (unsigned j = i + 1; j < l; j++) {
			if (i == 0 && orig[j] == '0') continue;
			swap(orig[i], orig[j]);
			int temp;
			sscanf(orig, "%d", &temp);
			nums.insert(temp);
			swap(orig[i], orig[j]);
		}
	}
	return make_pair(*nums.begin(),*nums.rbegin());
}

int main() {
	int T;
	cin >> T;
	for (int i = 0; i < T; i++) {
		cout << "Case #" << (i + 1) << ": " << solve() << endl;
	}
	return 0;
}
