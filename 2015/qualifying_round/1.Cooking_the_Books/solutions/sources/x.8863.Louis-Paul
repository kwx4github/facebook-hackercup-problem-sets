package main

import (
	"bytes"
	"strconv"

	"github.com/Artemiche/hackercup/parser"
)

func main() {
	err := parser.GenerateFromStringFile("cooking_the_books.txt", solve, true)
	if err != nil {
		panic(err)
	}
}

func solve(caseNumber int, input []string) string {
	resultBuffer := bytes.NewBuffer(nil)
	resultBuffer.WriteString("Case #" + strconv.Itoa(caseNumber) + ": ")

	// Smallest number
	num := []byte(input[0])
	smallestDigitIndex := 0
	for i := 0; i < len(num); i++ {
		if num[i] >= num[smallestDigitIndex] || num[i] == '0' {
			continue
		}
		smallestDigitIndex = i
	}
	tmp := num[0]
	num[0] = num[smallestDigitIndex]
	num[smallestDigitIndex] = tmp
	resultBuffer.Write(num)
	resultBuffer.WriteString(" ")

	// Largest number
	num = []byte(input[0])
	biggestDigitIndex := 0
	for i := len(num) - 1; i >= 0; i-- {
		if num[i] <= num[biggestDigitIndex] {
			continue
		}
		biggestDigitIndex = i
	}
	tmp = num[0]
	num[0] = num[biggestDigitIndex]
	num[biggestDigitIndex] = tmp
	resultBuffer.Write(num)

	return resultBuffer.String()
}
