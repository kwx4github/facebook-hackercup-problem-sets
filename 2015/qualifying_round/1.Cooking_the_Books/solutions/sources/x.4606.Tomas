package fbhc15_CookingTheBooks;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class CookingTheBooks {

	public static void main(String[] args) {
		if (args.length==1) {
			new CookingTheBooks(args[0]);
		}
	}
	
	public CookingTheBooks(String filename) {
		try{
			FileReader fr=new FileReader(filename);
			BufferedReader br=new BufferedReader(fr);
			String tmp=br.readLine();
			tmp=tmp.trim();
			int t; //1<=t<=100
			t=Integer.parseInt(tmp);
			int output[];
			for(int i=0;i<t;i++) {
				tmp=br.readLine();
				tmp.trim();
				output=processData(tmp);
				System.out.println("Case #"+(i+1)+": "+output[0]+" "+output[1]);
			}
			br.close();
			fr.close();
		}catch(IOException ioe) {
			System.out.println(ioe.getMessage());
		}
	}
	
	public int[] processData(String number) {
		int output[]=new int[2];
		String maxN=number;
		String minN=number;
		int maxDigit=0;
		int maxDigitS=0;
		char maxC=number.charAt(0);
		boolean maxChange=true;
		int minDigit=0;
		int minDigitS=0;
		char minC=number.charAt(0);
		boolean minChange=true;
		int minDigit0=0;
		int minDigitS0=0;
		char minC0=number.charAt(0);
		boolean minChange0=true;
		//find max and min
		for(int i=1;i<number.length();i++) {
			if (number.charAt(i)>=maxC) {
				maxC=number.charAt(i);
				maxDigit=i;
				maxChange=false;
				//System.out.print("Max "+i+" "+maxC+" ");
			}
			if ((maxChange)&&(number.charAt(i)<maxC)) {
				maxDigitS=i;
				maxC=number.charAt(i);
				//System.out.print("Max "+i+" "+maxC+" ");
			}
		}
		for(int i=maxDigit;i>=0;i--) {
			if ((number.charAt(i)<maxC)) {
				maxDigitS=i;
				//System.out.print("Max "+i+" "+maxC+" ");
			}
		}
		for(int i=1;i<number.length();i++) {
			if (number.charAt(i)<minC) {
				minC=number.charAt(i);
				minDigit=i;
				minChange=false;
				//System.out.print("Min "+i+" "+minC+" ");
			}
			if ((minChange)&&(number.charAt(i)>minC)) {
				minDigitS=i;
				minC=number.charAt(i);
				//System.out.print("Min "+i+" "+minC+" ");
			}
		}
		for(int i=minDigit;i>=0;i--) {
			if (number.charAt(i)>minC) {
				minDigitS=i;
				//System.out.print("Min "+i+" "+minC+" ");
			}
		}
		for(int i=1;i<number.length();i++) {
			if ((number.charAt(i)<minC0)&&(number.charAt(i)!='0')) {
				minC0=number.charAt(i);
				minDigit0=i;
				minChange0=false;
				//System.out.print("Min0 "+i+" "+minC+" ");
			}
			if ((minChange0)&&(number.charAt(i)>minC0)) {
				minDigitS0=i;
				minC0=number.charAt(i);
				//System.out.print("Min0 "+i+" "+minC0+" ");
			}
		}
		for(int i=minDigit0;i>=0;i--) {
			if ((number.charAt(i)>minC0)&&((minC0!='0')||i>0)) {
				minDigitS0=i;
				//System.out.print("Min0 "+i+" "+minC0+" ");
			}
		}
		if ((maxDigit>0)&&(maxDigitS<maxDigit)) {
			//System.out.println("Swapping "+maxDigitS+" "+maxDigit);
			maxN=swap(maxN,maxDigitS,maxDigit);
		}
		if ((minDigit>0)&&(minDigitS<minDigit)&&((minC!='0')||(minDigitS>0))) {
			//System.out.println("Swapping "+minDigitS+" "+minDigit);
			minN=swap(minN,minDigitS,minDigit);
		}else{
			if (number.charAt(0)>minC0) {
				if ((minDigit0>0)&&(minDigitS0<minDigit0)) {
					//System.out.println("Swapping non zero "+minDigitS0+" "+minDigit0);
					minN=swap(minN,minDigitS0,minDigit0);
				}
			}else{
				if ((minDigit>1)&&(minDigitS==0)&&(number.length()>2)) {
					//System.out.println("Swapping second best"+1+" "+minDigit);
					minN=swap(minN,1,minDigit);
				}
			}
		}
		output[0]=Integer.parseInt(minN);
		output[1]=Integer.parseInt(maxN);
		return(output);
	}
	
	public String swap(String number, int p1, int p2) {
		String tmp=number.substring(0, p1)+number.substring(p2, p2+1)+number.substring(p1+1,p2)+number.substring(p1, p1+1)+number.substring(p2+1);
		return(tmp);
	}
}
