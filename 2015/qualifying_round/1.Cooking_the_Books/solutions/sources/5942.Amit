#include <vector>
#include <algorithm>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

string toString(int n)
{
    string str = "";
    int index =0;
    int temp =n;
    while(n)
    {
        str +=  (char)(n%10 + '0');
        n /= 10;
    }
    int len = str.size();
    for(int i=0; i<(len/2); i++)
        swap(str[i], str[len-1-i]);
//    printf("numbers %d ",temp);
//    cout<<str<<endl;
    return str;
}

int digits(string str)
{

    int len = str.size();
    int ans =0, index = 0;

    while((index <len) && (str[index] == '0') )
        index++;
    for(int i=index; i<len; i++)
        ans++;
//    printf("digits ");
//    cout<<str<<" "<<ans<<endl;
    return ans;
}

int toNumber(string str)
{
    int len = str.size();
    for(int i=0; i<len/2; i++)

        swap(str[i], str[len -1 -i]);

    int multiPlier = 1;
    int ans =0;
    for(int i=0; i<len; i++)
    {
        ans += (str[i]-'0')* multiPlier;
        multiPlier *= 10;
    }
    return ans;
}

int main()
{
    freopen("cooking_the_books.txt", "r", stdin);
    freopen("cooking_the_books_output.txt", "w", stdout);
    int test;
    scanf("%d", &test);
    int n;
    vector<int> arr;
    string str;
    int digit;
    string temp;

    for(int i=1; i<=test; i++)
    {
        scanf("%d", &n);
        str = toString(n);
        arr.clear();
        digit = digits(str);
        int len = str.size();
        arr.push_back(n);
        for(int k=0; k<len; k++)
        {

            for(int p=k+1; p<len; p++ )
            {
                temp = str;
                swap(temp[p], temp[k]);
                if(digits(temp) == digit)
                {
                    int number = toNumber(temp);
//                    printf("%d ", number);
                    arr.push_back(number);
                }
            }
        }
        sort(arr.begin(), arr.end());
        printf("Case #%d: %d %d\n", i, arr[0], arr[arr.size()-1]);

    }

    return 0;
}
