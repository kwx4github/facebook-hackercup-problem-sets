// fb.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "stdio.h"
#include <iostream>


//finds the minimum and maximum digit of a number
//and swaps them to calculate min and max number

void findMaxAndMin(unsigned long number,unsigned long &minNumber,unsigned long &maxNumber)
{
	unsigned long n=number;
	int rem=0;
	int min =9, max=0;
	int pos =0,minPos=0,maxPos=0;
	int digits = log10(number);
	int first=number/pow(10,digits);
	while(number)
	{
		rem = number%10;
		number = number/10;
		if(rem<min)
		{
			min=rem;
			minPos=pos;
		}
		if(rem>max)
		{
			max=rem;
			maxPos=pos;
		}
		pos++;
		if(min==1 && max==9)
			break;
	}
	if(min)
		minNumber = n + (min - first)*pow(10,digits)+(first-min)*pow(10,minPos);
	maxNumber = n + (max - first)*pow(10,digits)+(first-max)*pow(10,maxPos);
}

void processFile()
{
	const char inputFilePath[] = "C:\\practice\\input.txt";
	const char outputFilePath[] = "C:\\practice\\output.txt";

	FILE* inFile = fopen(inputFilePath,"r");
	FILE* outFile = fopen(outputFilePath,"w");
	unsigned long number,minNumber,maxNumber; 
	char line[100];
	int j=1;
	if(inFile && outFile)
	{
		int numCases =0;
		if(fgets ( line, sizeof (line), inFile ) != NULL)
			numCases =  atoi (line);
		for(int i=0;i<numCases;i++)
		{
			if(fgets ( line, sizeof (line), inFile ) != NULL)
			{
				minNumber=maxNumber=number =  atoi (line);
				findMaxAndMin(number,minNumber,maxNumber);
				fprintf(outFile,"Case#%d: %d %d\n",j++,minNumber,maxNumber); 
			}
		}
	}
}


//int _tmain(int argc, _TCHAR* argv[])
int main()
{
	return processFile();
}

