import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		
		Scanner in = new Scanner(System.in);
		int line_number = (Integer.parseInt(in.nextLine()));
		
		for (int i=0; i < line_number; i++) {
			String number = in.nextLine();
			
			// != 0 e singolo numero TODO
			
			System.out.print("Case #"+(i+1)+": ");
			
			// find lower
			int[] array = toIntArray(number);
			array = findLower(array);
			for(int j=0; j < array.length; j++) {
				System.out.print(""+array[j]);
			}
			System.out.print(" ");
			
			// find higher
			array = toIntArray(number);
			array = findHigher(array);
			for(int j=0; j < array.length; j++) {
				System.out.print(""+array[j]);
			}
			System.out.println();
		}
		
	}
	
	private static int[] findLower(int[] number) {
		if(number.length < 2)
			return number;
		int index = lowerIndex(number);
		
		if(index != 0) {
			// swap 0 with index
			int tmp = number[0];
			number[0] = number[index];
			number[index] = tmp;
			return number;
		} else {
			int[] segment = new int[number.length-1];
			for (int i=1; i < number.length; i++) {
				segment[i-1] = number[i];
			}
			segment = findLower(segment);
			for (int i=1; i < number.length; i++) {
				number[i] = segment[i-1];
			}
			return number;
		}
	}
	
	// looking for the min, only the last one found is important
	// example 555111, I need to swap the last 1 with the first 5
	private static int lowerIndex(int[] num) {
		int min = num[0];
		int index = 0;
		for (int i=0; i < num.length; i++) {
			if(num[i] != 0 && num[i] < min)
				min = num[i];
		}
		
		if(min == num[0])
			return 0;
		
		for (int i=0; i < num.length; i++) {
			if(min == num[i])
				index = i;
		}
		
		return index;
		
	}
	
	private static int[] findHigher(int[] number) {
		if(number.length < 2)
			return number;
		int index = higherIndex(number);
		
		if(index != 0) {
			// swap 0 with index
			int tmp = number[0];
			number[0] = number[index];
			number[index] = tmp;
			return number;
		} else {
			int[] segment = new int[number.length-1];
			for (int i=1; i < number.length; i++) {
				segment[i-1] = number[i];
			}
			segment = findHigher(segment);
			for (int i=1; i < number.length; i++) {
				number[i] = segment[i-1];
			}
			return number;
		}
	}
	
	private static int higherIndex(int[] num) {
		int max = num[0];
		int index = 0;
		for (int i=0; i < num.length; i++) {
			if(num[i] != 0 && num[i] > max)
				max = num[i];
		}
		
		if(max == num[0])
			return 0;
		
		for (int i=0; i < num.length; i++) {
			if(max == num[i])
				index = i;
		}
		
		return index;
	}
	
	private static int[] toIntArray(String number) {
		int[] array = new int[number.length()];
		
		for(int i=0; i < number.length(); i++) {
			array[i] = Integer.parseInt(""+number.charAt(i));
		}
		
		return array;
	}

}
