/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ctb;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author YtseJam
 */
public class main {

    /**
     * @param args the command line arguments
     */
    static FileWriter fileOut;
    public static void main(String[] args) {
        Scanner scanIn = new Scanner(System.in);
        System.out.println("Enter the File Directory:");
        //File fileIn = new File(scanIn.nextLine());

        try {
            fileOut = new FileWriter("D:/Documents/Programming/Java/Facebook Hacker Cup 2015/Round 1/Cooking The Books/src/ctb/out.txt");
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
        File fileIn = new File("D:/Documents/Programming/Java/Facebook Hacker Cup 2015/Round 1/Cooking The Books/src/ctb/in.txt");
        if (fileIn.exists()) {
            Scanner fileScanner = new Scanner(System.in);
            Scanner fileOutScanner = new Scanner(System.in);
            try {
                fileScanner = new Scanner(fileIn);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
            int length = Integer.parseInt(fileScanner.nextLine());

            for (int i = 0; i < length; i++) {
                String stringNumber = fileScanner.nextLine();
                char[] currentNumber = stringNumber.toCharArray();
                try {
                    fileOut.write("Case #" + (i+1) + ": " + findLow(currentNumber.clone()) + " " + findHigh(currentNumber.clone()) + "\n");
                } catch (IOException ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try {
                fileOut.close();
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private static int findHigh(char[] integer) {
        int leftLoc = 0;
        int rightLoc = 0;
        char rightNum = 0;
        String pureNum = "";
        for (int i = 1; i < integer.length; i++) {
            if (integer[i] >= rightNum) {
                rightLoc = i;
                rightNum = integer[i];
            }
        }
        for (int i = 0; i < integer.length; i++) {
            if (rightNum > integer[i]) {
                leftLoc = i;
                break;
            } else {
                leftLoc = rightLoc;
            }
        }
        char tempnum = integer[leftLoc];
        integer[leftLoc] = integer[rightLoc];
        integer[rightLoc] = tempnum;
        for (int i = 0; i < integer.length; i++) {
            pureNum += integer[i];
        }
        return Integer.parseInt(pureNum);

    }

    private static int findLow(char[] integer) {
        int leftLoc = 0;
        int rightLoc = 0;
        int zeroLoc = 1000;
        char rightNum = integer[0];
        String pureNum = "";
        for (int i = 0; i < integer.length; i++) {
            if (integer[i] <= rightNum) {
                if (integer[i] == '0') {
                    zeroLoc = i;
                    continue;
                }
                rightLoc = i;
                rightNum = integer[i];
            }
        }
        for (int i = 0; i < integer.length; i++) {
            if(integer[i] > rightNum)
            {
                if(i != 0 & zeroLoc != 1000)
                {
                    leftLoc = zeroLoc;
                    break;
                }
                leftLoc = i;
                break;
            }
        }
        char tempnum = integer[leftLoc];
        integer[leftLoc] = integer[rightLoc];
        integer[rightLoc] = tempnum;
        for (int i = 0; i < integer.length; i++) {
            pureNum += integer[i];
        }
        return Integer.parseInt(pureNum);
    }
}
