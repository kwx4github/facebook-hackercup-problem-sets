import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;


public class CookingBooks {

	public static void main(String[] args) {
		File file = new File("cooking_the_books.txt");
		FileInputStream fis;
		try {
			PrintWriter writer = new PrintWriter("cooking_the_books_output.txt");
			fis = new FileInputStream(file);
			BufferedReader br = new BufferedReader(new InputStreamReader(fis));
			int tests = Integer.parseInt(br.readLine());
			for (int i = 0; i < tests; i++) {
				StringBuilder sb = new StringBuilder();	
				sb.append("Case #");
				sb.append(i + 1);
				sb.append(": ");
				char[] nums = br.readLine().toCharArray();
				int[] max = new int[nums.length];
				int[] min = new int[nums.length];
				max[nums.length - 1] = nums.length - 1;
				min[nums.length - 1] = nums.length - 1;
				for(int j = nums.length - 2; j >= 0 ; j--){

					int temp = Character.getNumericValue(nums[j]);
					
					if(Character.getNumericValue(nums[max[j + 1]]) < temp){
						max[j] = j;
					} else {
						max[j] = max[j + 1];
					}
					
					if(Character.getNumericValue(nums[min[j + 1]]) > temp){
						min[j] = j;
					} else {
						min[j] = min[j + 1];
					}
				}
				String ma = "";
				String mi = "";
				for(int j = 0; j < nums.length; j++){
					int t = Character.getNumericValue(nums[min[j]]);
					if( t < Character.getNumericValue(nums[j])){
						if((j == 0 && t != 0) || j != 0){
							mi = swap(nums, j, min[j]);
							break;
						}
					}
				}
				for(int j = 0; j < nums.length; j++){
					int t = Character.getNumericValue(nums[max[j]]);
					int cur = Character.getNumericValue(nums[j]);
					if( cur < t ){
						ma = swap(nums, j, max[j]);
						break;
					}
				}
				if(ma.equals("")){
					ma = swap(nums, 0, 0);
				}
				if(mi.equals("")){
					mi = swap(nums, 0, 0);
				}
				sb.append(mi);
				sb.append(" ");
				sb.append(ma);
				writer.println(sb.toString());
			}
			writer.close();
			fis.close();
			br.close();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	public static String swap(char[] a, int i, int j){
		StringBuffer s = new StringBuffer();
		if(i != j){
			for(int k = 0; k < a.length; k++){
				if(k == j){
					s.append(a[i]);
				} else if(k == i){
					s.append(a[j]);
				} else {
					s.append(a[k]);
				}
			}
		}
		else{
			s.append(a);
		}
		return s.toString();
	}

}
