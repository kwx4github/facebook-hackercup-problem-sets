#include <cstdio>
#include <cmath>
#include <iostream>

using namespace std;

typedef int tipoClave;
tipoClave contadorSwap = 0;

void Swap (tipoClave *x, tipoClave *y) {
    if (x != y) {
        *x ^= *y;
        *y ^= *x;
        *x ^= *y;
        contadorSwap++;
     }
//     printf("swat: %d",contadorSwap);
 }

tipoClave antesQue (tipoClave r1, tipoClave r2) {
    return r1 < r2;
}

tipoClave despuesQue (tipoClave r1, tipoClave r2) {
    return r1 > r2;
}


void selectionSort_minimo (tipoClave A[], int n) {

    int i, j, minIndex;
    for (i = 0; i < n-1; i++) {
        minIndex = i;
        for (j = n-1; j > i; j--)
            if (antesQue(A[j],A[minIndex]))
                minIndex = j;

        if (i == 0 && A[minIndex] == 0)
            continue;

        Swap(&A[i],&A[minIndex]);
        if (contadorSwap == 1)
            break;
    }
}

void selectionSort_maximo (tipoClave A[], int n) {

    int i, j, maxIndex;
    for (i = 0; i < n-1; i++) {
        maxIndex = i;
        for (j = n-1; j > i; j--)
            if (despuesQue(A[j],A[maxIndex]))
                maxIndex = j;

        Swap(&A[i],&A[maxIndex]);
        if (contadorSwap == 1)
            break;
    }
}


void imprimir (tipoClave A[], int i, int d) {

    for (int j = i; j < d; j++)
        cout << A[j];

}

int main () {

    freopen("cooking_the_books.txt","r",stdin);
    freopen("cooking_the_books_sal.txt","w",stdout);

    int elementos;
    scanf("%d\n",&elementos);
    int k = 0;
    int n;

    while (elementos--) {
        scanf("%d",&n);
        printf("Case #%d: ",++k);

        if (n != 0) {

            int digitos = floor(log10(abs(n))) + 1;
            int numerosMinimos[digitos];
            int numerosMaximos[digitos];

            int ind = digitos - 1;
            while (n > 0) {
                int tmp = n % 10;
                numerosMinimos[ind] = tmp;
                numerosMaximos[ind] = tmp;
                n = n / 10;
                ind--;
            }

            selectionSort_minimo(numerosMinimos,digitos);
            imprimir(numerosMinimos,0,digitos);
            contadorSwap = 0;
            printf(" ");
            selectionSort_maximo(numerosMaximos,digitos);
            imprimir(numerosMaximos,0,digitos);
            contadorSwap = 0;
            printf("\n");
        }else {
            printf("0 0\n");
        }
    }
return 0;

}
