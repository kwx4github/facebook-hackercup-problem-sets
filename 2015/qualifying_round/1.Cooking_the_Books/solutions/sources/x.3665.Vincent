#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void printV(vector<int> &v)
{
    for (int i = 0; i < v.size(); i++)
        cout << v[i];
}

template <class T>
void findComp(vector<int> &d, T comp)
{
    for (int i = 0; i < d.size(); i++) {
        int cur = i;
        for (int j = d.size()-1; j > i; j--)
            if ((i != 0 || d[j] > 0) && comp(d[j], d[cur]))
                cur = j;
        if (cur != i) {
            swap(d[i], d[cur]);
            printV(d);
            swap(d[i], d[cur]);
            return;
        }
    }
    printV(d);
}

int main()
{
    int T;
    cin >> T;
    for (int t = 1; t <= T; t++) {
        cout << "Case #" << t << ": ";
        int n;
        cin >> n;
        vector<int> d;
        do {
            d.push_back(n % 10);
        } while ((n /= 10) > 0);
        reverse(d.begin(), d.end());
        findComp(d, less<int>());
        cout << " ";
        findComp(d, greater<int>());
        cout << "\n";
    }
}
