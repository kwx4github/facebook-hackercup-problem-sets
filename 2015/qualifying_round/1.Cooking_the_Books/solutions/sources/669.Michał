#include<iostream>

using namespace std;

string biggest(string current){
    if(current.size() == 1)return current;
    int importantDigit = 0;
    while(importantDigit != current.size()){
        int maxDigit = -1;
        int maxIndex = -1;

        for(int x=importantDigit; x<current.size(); x++){
            if(current[x]-'0' >= maxDigit){
                maxDigit = current[x]-'0';
                maxIndex = x;
            }
        }
        if(current[importantDigit]-'0' != maxDigit){
            char tmp = current[importantDigit];
            current[importantDigit] = maxDigit + '0';
            current[maxIndex] = tmp;
            return current;
        } else {
            importantDigit++;
        }
    }
    return current;
}

string smallest(string current){
    if(current.size() == 1)return current;
    int importantDigit = 0;
    while(importantDigit != current.size()){
        int minDigit = 10;
        int maxIndex = -1;

        for(int x=importantDigit; x<current.size(); x++){
            if(current[x]-'0' <= minDigit){
                if(!(current[x]-'0' == 0 && importantDigit == 0)){
                    minDigit = current[x]-'0';
                    maxIndex = x;
                }
            }
        }
        if(current[importantDigit]-'0' != minDigit){
            char tmp = current[importantDigit];
            current[importantDigit] = minDigit + '0';
            current[maxIndex] = tmp;
            return current;
        } else {
            importantDigit++;
        }
    }
    return current;
}

int main(){
    int n;
    cin >> n;

    for(int q=0; q<n; q++){
        string current;
        cin >> current;

        cout << "Case #" << q+1  << ": " << smallest(current) << " " << biggest(current)<< "\n";

    }
}


