package fb_hackercup.year_2015.qual;

import java.io.*;
import java.util.Arrays;

/**
 * Created by Eunsu Ryu on 1/10/15.
 */
public class CookingBooks {

	static char[] cookMax(char[] N, int start) {
		if (start >= N.length) return N;

		char max = N[start];
		int maxIndex = start;
		for (int i = start; i < N.length; i++) {
			if (N[i] >= max) {
				max = N[i];
				maxIndex = i;
			}
		}

		if (start < maxIndex && max != N[start]) return swap(N, start, maxIndex);
		return cookMax(N, start + 1);
	}

	static char[] cookMin(char[] N, int start) {
		if (start >= N.length - 1) return N;

		char min = N[start];
		int minIndex = start;
		for (int i = start; i < N.length; i++) {
			if (N[i] <= min) {
				min = N[i];
				minIndex = i;
			}
		}

		if (start < minIndex && min != N[start] && !(start == 0 && min == '0')) return swap(N, start, minIndex);
		return cookMin(N, start + 1);
	}

	static char[] swap(char[] N, int i, int j) {
		char[] result = Arrays.copyOf(N, N.length);
		result[i] = N[j];
		result[j] = N[i];
		return result;
	}

	static String toString(char[] N) {
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < N.length; i++) sb.append(N[i]);
		return sb.toString();
	}


	public static void main(String[] args) {
		try {
//			BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
			BufferedReader in = new BufferedReader(new FileReader("cooking_the_books.txt"));
			BufferedWriter out = new BufferedWriter(new FileWriter(new File("cook_output.txt")));
			int T = Integer.parseInt(in.readLine());
			for (int t = 1; t <= T; t++) {
				char[] n = in.readLine().toCharArray();
				out.write("Case #" + t + ": " + toString(cookMin(n, 0)) + " " + toString(cookMax(n, 0)));
				if (t < T) out.newLine();
			}
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}
}
