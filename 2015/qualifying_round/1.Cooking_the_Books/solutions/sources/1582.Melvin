#include <stdio.h>
#include <assert.h>

void fb2015_cooking()
{
	static const unsigned int maxdigit = 9;
	static const unsigned int basev = 10;

	unsigned int nCases = 0;scanf("%d",&nCases);
	for(unsigned int iCases = 1;iCases <= nCases;++iCases)
	{
		unsigned int n = 0;scanf("%d",&n);
		
		unsigned int data[maxdigit] = { 0 };
		unsigned int v = n,count = 0;
		for(;0 != v && count < maxdigit;v /= basev,++count) data[count] = v%basev;
		assert(0 == v);
		if(0 == count) count = 1;

		unsigned int minv = n,maxv = n;
		for(unsigned int i = 0;i < count;++i)
		{
			for(unsigned int k = i + 1;k < count;++k)
			{
				data[i] ^= data[k];data[k] ^= data[i];data[i] ^= data[k];
				if(0 != data[count-1])
				{
					unsigned int ret = 0;
					for(unsigned int i = count - 1;i != (unsigned int)(-1);--i)
					{
						ret *= basev;
						ret += data[i];
					}
					if(ret > maxv) maxv = ret;
					if(ret < minv) minv = ret;
				}
				data[i] ^= data[k];data[k] ^= data[i];data[i] ^= data[k];
			}
		}

		printf("Case #%u: %u %u\n",iCases,minv,maxv);
	}
}

int main()
{
	fb2015_cooking();
	return 0;
}
