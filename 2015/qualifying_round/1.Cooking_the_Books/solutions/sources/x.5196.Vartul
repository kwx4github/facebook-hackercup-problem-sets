#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <set>
#include <sstream>
#include <numeric>
#include <bitset>
#define REP(i, a, b) for ( int i = int(a); i <= int(b); i++ )
#define PB push_back
#define MP make_pair
#define for_each(it, X) for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define DFS_WHITE -1
#define DFS_BLACK 1
#define MAXN 1000
#define pi 3.141592653589793
#define ARRAY_SIZE(A) sizeof(A)/sizeof(A[0])
#define INF 1<<30
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int, int> ii;
#define MOD 1000000007

int main()
{
	int n = 0;
	cin>>n;
	int i =1;
	while(n--)
	{
		string x;
		cin>>x;
		int min_index = 0;
		int max_index = 0;
		int second_min = 0;
		for(int i =0 ; i < x.size(); i++)
		{
			if((x[i] - '0') != 0)
			if(x[min_index] -'0' >= (x[i] - '0'))
					min_index = i;
			if(x[second_min] - '0' >= (x[i] - '0'))
					second_min = i;
			if(x[max_index] - '0'<= (x[i] - '0'))
					max_index = i;
		}
		//cout<<x[min_index]<<" "<<x[second_min]<<" "<<x[max_index]<<endl;

		string h =x;
		for(int i =0 ;i < x.size(); i++)
		{
			//cout<<x[i]<<"   "<<x[min_index]<<endl;
			if((x[i] - '0') > (x[min_index]-'0') && min_index > i)
			{
				//cout<<"sfdf"<<endl;
				int t = (x[i] - '0');
				x[i] = x[min_index];
				x[min_index] = t+'0';
				break;
			}
			else
			{
				min_index = second_min;
			}
		}
		for(int i =0 ;i < h.size()-1; i++)
		{
			//cout<<h[i]<<"   "<<h[max_index]<<endl;
			if((h[i] -'0') < (h[max_index]-'0') && max_index >i)
			{
				int t = h[i] -'0';
				h[i] = h[max_index];
				h[max_index] = t+'0';
				break;
			}
		}
		cout<<"Case #"<<i<<": "<<x<<" "<<h<<endl;
		i++;
	}
	return 0;
}