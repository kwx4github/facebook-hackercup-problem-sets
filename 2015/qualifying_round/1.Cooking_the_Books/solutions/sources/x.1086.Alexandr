#include <cstring>
#include <cassert>
#include <cstdio>
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)

typedef long long ll;

class Solver
{
protected:
	virtual void solveTest(int test)
	{
	}
public:
	Solver()
	{

	}

	virtual void solve()
	{
		int T;
		scanf("%d",&T);
		for(int i=1;i<=T;i++)
			solveTest(i);
	}
};

class In
{
public:
	int nextInt() const
	{
		int t;
		scanf("%d",&t);
		return t;
	}
	string next() const
	{
		string s;
		cin>>s;
		return s;
	}
}in;

class CookingTheBooks:public Solver
{
protected:
	void solveTest(int test)
	{
		string s=in.next();
		string minv=s, maxv=s;
		for(int i=0;i<s.length();i++)
			for(int j=0;j<s.length();j++)
			{
				if(s[i]!='0' && s[j]!='0')
				{
					swap(s[i],s[j]);
					minv=min(minv,s);
					maxv=max(maxv,s);
					swap(s[i],s[j]);
				}
			}
		printf("Case #%d: %s %s\n",test,minv.c_str(), maxv.c_str());
	}
public:
	CookingTheBooks()
	{
	}
};

int main()
{
	CookingTheBooks().solve();
}
