
// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <windows.h>
#include <cstring>
using namespace std;
#define LL long long

#define maxn 100
#define maxe 300010
#define INF 2100000000
int n;
char s[maxn], t[maxn];
int get(char* t)
{
	int len = strlen(t);
	int val = 0, i;
	for (i = 0; i<len; i++)
		val = val * 10 + t[i] - '0';
	return val;
}
int main()
{
	freopen("cooking_the_books.txt", "r", stdin);
	freopen("cooking_the_books.out", "w", stdout);
	int ncase, i, j, k, tt = 0;
	scanf("%d", &ncase);
	while (ncase--)
	{
		scanf("%s", s);
		int len = strlen(s);
		int minn = get(s), maxx = get(s);
		for (i = 0; i<len; i++)
		{
			for (j = i+1; j<len; j++)
			{
				strcpy(t, s);
				if (t[j] == '0'&&i == 0)
					continue;
				swap(t[i], t[j]);
				minn = min(minn, get(t));
				maxx = max(maxx, get(t));
			}
		}
		printf("Case #%d: %d %d\n", ++tt, minn, maxx);
	}
	return 0;
}