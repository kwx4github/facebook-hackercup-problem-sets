#include<stdio.h>

int N,digit[15],D;

void swapDigit(int i, int j) {
	int t=digit[i]; digit[i]=digit[j]; digit[j]=t;
}

int getNum() {
	int i,n=0;
	for(i=D-1;i>=0;i--) n=n*10+digit[i];
	return n;
}

void solve()
{
	if(N==0) {
		printf("0 0"); return;
	}
	int max=N, min=N; D=0;
	while(N) {
		digit[D++]=N%10;
		N/=10;
	}
	int i,j;
	for(i=0;i<D;i++) for(j=i+1;j<D;j++) {
		swapDigit(i,j);
		if(digit[D-1]) {
			int n=getNum();
			if(n>max) max=n;
			if(n<min) min=n;
		}
		swapDigit(i,j);
	}
	printf("%d %d",min,max);
}

int main()
{
	int tt,T;
	scanf("%d",&T);
	for(tt=1;tt<=T;tt++) {
		scanf("%d",&N);
		printf("Case #%d: ",tt);
		solve();
		printf("\n");
	}
	return 0;
}