import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;

public class FB2 {

	static BufferedReader br;

	static PrintWriter out;
	final static String FN = "cooking2.txt";
	final static String OFN = "output.txt";

	public static void main(String[] args) {

		try {

			br = new BufferedReader(new InputStreamReader(new FileInputStream(
					new File(FN))));
			out = new PrintWriter(new FileWriter(OFN));

			int n = readInt();
			l: for (int i = 0; i < n; i++) {
				String s = readLine();
				if (s.equals("0"))
					print(i, "0 0");
				else {
					char ch[] = s.toCharArray();
					int mn = 0;
					int mx = s.length() - 1;
					
					for (int j = 0; j < ch.length; j++) {

						if (ch[mn] == '0') {

							mn = j;

						} else if (ch[j] != '0') {
							if ((ch[j] < ch[mn]))
								mn = j;
						}

					}
					for (int j = ch.length - 1; j >= 0; j--) {
						if (ch[j] > ch[mx])
							mx = j;
					}
					String st = "";
					st += ch[mn];
					for (int j = 1; j < ch.length; j++) {
						if (j == mn)
							st += ch[0];
						else
							st += ch[j];
					}
					st += " ";
					st += ch[mx];
					for (int j = 1; j < ch.length; j++) {
						if (j == mx)
							st += ch[0];
						else
							st += ch[j];
					}
					print(i, st);
				}

			}
			br.close();
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	static void print(int i, String s) {
		out.println("Case #" + (i + 1) + ": " + s);
	}

	static public String readLine() throws IOException {
		return br.readLine();

	}

	static public String readString() throws IOException {
		return br.readLine();

	}

	static public long readlong() throws IOException {
		return Long.parseLong(br.readLine());
	}

	static public int readInt() throws IOException {
		return Integer.parseInt(br.readLine());
	}

	static public int[] readIntArr() throws IOException {
		String[] str = br.readLine().split(" ");
		int arr[] = new int[str.length];
		for (int i = 0; i < arr.length; i++)
			arr[i] = Integer.parseInt(str[i]);
		return arr;
	}

	static public double[] readDoubleArr() throws IOException {
		String[] str = br.readLine().split(" ");
		double arr[] = new double[str.length];
		for (int i = 0; i < arr.length; i++)
			arr[i] = Double.parseDouble(str[i]);
		return arr;
	}

	static public long[] readLongArr() throws IOException {
		String[] str = br.readLine().split(" ");
		long arr[] = new long[str.length];
		for (int i = 0; i < arr.length; i++)
			arr[i] = Long.parseLong(str[i]);
		return arr;
	}

	static public double readDouble() throws IOException {
		return Double.parseDouble(br.readLine());
	}
}
