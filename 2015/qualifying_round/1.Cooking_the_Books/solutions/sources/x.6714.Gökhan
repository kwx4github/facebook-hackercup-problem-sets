import sys

def find_min_number(n):
    """ Finds the min number that can be achived by
        swapping two digits of n
    """
    l = len(n)
    for i in range(l-1):
        d1 = n[i]
        smaller_rest = [ c for c in n[i+1:l] if c < d1 and (i != 0 or c > '0') ]
        if smaller_rest:
            d2 = min(smaller_rest)
            j = n[i:l].find(d2)
            return  n[0:i] + d2 + n[i+1:j] + d1 + n[j+1:l]
    return n

def find_max_number(n):
    """ Finds the max number that can be achived by
        swapping two digits of n
    """
    l = len(n)
    for i in range(l-1):
        d1 = n[i]
        greater_rest = [c for c in n[i+1:l] if c > d1]
        if greater_rest:
            d2 = max(greater_rest)
            j = n[i:l].find(d2)
            return  n[0:i] + d2 + n[i+1:j] + d1 + n[j+1:l]
    return n

if len(sys.argv) != 2:
    print "usage: q1.py <input_file>"
    sys.exit(1)

with open(sys.argv[1], "r") as f:
    line = f.readline()
    T = int(line)
    for c, line in enumerate(f):
        line = line.rstrip()
        print "Case #%d: %s %s" % (c+1, find_min_number(line), find_max_number(line))

