#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fstream>

using namespace std;

int smallest(int n) {
  if (n < 10) return n;

  char digits[10], digit;
  sprintf(digits, "%d", n);

  int imin = 0;
  for (int i = 1; digits[i]; ++i)
    if (digits[i] > '0' && digits[i] <= digits[imin]) imin = i;

  if (imin > 0 && digits[imin] < digits[0]) {
    digit = digits[0];
    digits[0] = digits[imin];
    digits[imin] = digit;
  }
  else {
    int len = strlen(digits);
    int iFirstSwappable = len - 1, iSwap = len - 1;
    imin = len - 1;
    for (int i = len - 2; i > 0; --i) {
      if (digits[i] > digits[imin]) {
        iFirstSwappable = i;
        iSwap = imin;
      }
      else if (digits[i] < digits[imin]) {
        imin = i;
      }
    }
    if (iFirstSwappable != iSwap) {
      digit = digits[iFirstSwappable];
      digits[iFirstSwappable] = digits[iSwap];
      digits[iSwap] = digit;
    }
  }

  return atoi(digits);
}

int largest(int n) {
  if (n < 10) return n;

  char digits[10], digit;
  sprintf(digits, "%d", n);

  int len = strlen(digits);
  int iFirstSwappable = len - 1, iSwap = len - 1;
  int imax = len - 1;
  for (int i = len - 2; i >= 0; --i) {
    if (digits[i] < digits[imax]) {
      iFirstSwappable = i;
      iSwap = imax;
    }
    else if (digits[i] > digits[imax]) {
      imax = i;
    }
  }
  if (iFirstSwappable != iSwap) {
    digit = digits[iFirstSwappable];
    digits[iFirstSwappable] = digits[iSwap];
    digits[iSwap] = digit;
  }

  return atoi(digits);
}

int main() {
  ifstream fi("p1.in");
  ofstream fo("p1.out");

  int t, n;

  fi >> t;

  for (int i = 1; i <= t; ++i) {
    fi >> n;
    fo << "Case #" << i << ": " << smallest(n) << " " << largest(n) << endl;
  }

  fo.close();
  fi.close();

  return 0;
}
