package facebook.cooking_the_books;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

public class CookingTheBooks {
	
	static class FileStuff {
		private String fileInput;
		private String fileOutput;
		private String path;
		
		public FileStuff(String fileInput, String fileOutput, String path)
		{
			this.fileInput = fileInput;
			this.fileOutput = fileOutput;
			String pathTemp = System.getProperty("user.dir");
			pathTemp += "/src/facebook/" + path + "/";
			this.path = pathTemp;
		}
		
		public ArrayList<String> ReadFromFile() throws IOException
		{
			InputStream input = new FileInputStream(path + this.fileInput);
			BufferedReader br = new BufferedReader(new InputStreamReader(input));
			String strLine;
			ArrayList<String> arrRes = new ArrayList<String>();
			while ((strLine = br.readLine()) != null)
			{
				arrRes.add(strLine);
			}
			br.close();
			input.close();
			return arrRes;
		}
		
		public boolean WriteToFile(ArrayList<String> arrOut) throws IOException
		{
			OutputStream output = new FileOutputStream(path + this.fileOutput);
			BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(output));
			
			for (int i=0;i<arrOut.size();i++)
			{
				bw.write(arrOut.get(i));
				bw.newLine();
			}
			bw.close();
			output.close();
			return true;
		}

	}

	public static void main(String[] args) throws IOException {
		FileStuff fs = new FileStuff("input.in", "output.out", "cooking_the_books");
		ArrayList<String> input = new ArrayList<String>();
		input = fs.ReadFromFile();
		
		long startTime = System.currentTimeMillis();
		
		ArrayList<String> output = new ArrayList<String>();
		
		int xCase = Integer.valueOf(input.get(0));
		int xPointer = 1;
		
		for (int i=1;i<=xCase;i++)
		{
			String strOut = "Case #" + String.valueOf(i) + ":";
			String strLine = input.get(xPointer);
			xPointer++;
			String strMin = "";
			String strMax = "";
			if (strLine.length() <= 1) {
				strMin = strLine;
				strMax = strLine;
			} else {
				int minIndex = 0;
				int minValue = strLine.charAt(minIndex);
				for (int a=1;a<strLine.length();a++) {
					if (strLine.charAt(a) > 0x30) {
						if (strLine.charAt(a) < minValue) {
							minValue = strLine.charAt(a);
							minIndex = a;
						}
					}
				}
				if (minIndex > 0) {
					char[] minChar = strLine.toCharArray();
					char charTemp = minChar[0];
					minChar[0] = minChar[minIndex];
					minChar[minIndex] = charTemp;
					strMin = new String(minChar);
				} else {
					strMin = strLine;
				}
				
				int maxIndex = 0;
				int maxValue = strLine.charAt(maxIndex);
				for (int a=1;a<strLine.length();a++) {
					if (strLine.charAt(a) > maxValue) {
						maxValue = strLine.charAt(a);
						maxIndex = a;
					}
				}
				if (maxIndex > 0) {
					char[] maxChar = strLine.toCharArray();
					char charTemp = maxChar[0];
					maxChar[0] = maxChar[maxIndex];
					maxChar[maxIndex] = charTemp;
					strMax = new String(maxChar);
				} else {
					strMax = strLine;
				}
			}
			strOut += " " + strMin + " " + strMax;
			output.add(strOut);
		}
		fs.WriteToFile(output);
		
		long endTime = System.currentTimeMillis();
		System.out.print(endTime - startTime);
		
	}

}
