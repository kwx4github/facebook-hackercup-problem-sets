#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<fstream>

using namespace std;

string maxim(string s){
	string result;
	while(s.size()!=0){
		char c = *(max_element(s.begin(),s.end()));
		if(s.at(0)>=c){
			result+=s.at(0);
			s =s.erase(0,1);
		}
		else if(s.at(0)<c){
			result+=c;
			for(int j=s.size()-1;j>0;j--){
				if(s.at(j)==c){
					s.at(j)=s.at(0);
					s = s.erase(0,1);
					break;
				}
			}
			result= result.append(s);
			break;
		}
	}
	return result;
}

string minim(string s){
	string result;
	int test = s.size();
	while(s.size()!=0){
		char c = *(min_element(s.begin(),s.end()));
		if(s.size()<test){
			if(s.at(0)<=c){
				result+=s.at(0);
				s =s.erase(0,1);
			}
			else if(s.at(0)>c){
				result+=c;
				for(int j=1;j<s.size();j++){
					if(s.at(j)==c){
						s.at(j)=s.at(0);
						s = s.erase(0,1);
						break;
					}
				}
				result= result.append(s);
				break;
			}
		}
		else if(s.size()==test){
			if(c=='0'){
				char min=s.at(0);
				int minind =0;
				for(int k=0;k<test;k++){
					if(s.at(k)!='0' && s.at(k)<min){
						min = s.at(k);
						minind = k;
					}
				}
				if(minind!=0){
					s.at(minind)=s.at(0);
					s.at(0)=min;
					result = s;
					break;
				}
				result+=s.at(0);
				s=s.erase(0,1);
			}
			else{
				if(s.at(0)<=c){
					result+=s.at(0);
					s =s.erase(0,1);
				}
				else if(s.at(0)>c){
					result+=c;
					for(int j=1;j<s.size();j++){
						if(s.at(j)==c){
							s.at(j)=s.at(0);
							s = s.erase(0,1);
							break;
						}
					}
					result= result.append(s);
					break;
				}
			}
		}

	}
	return result;	
}

int main(){
	int T;
	string s;
	ifstream f("input.txt",ios::in);
	vector<string>* proc= new vector<string>();
	f>>T;
	ofstream fout("output.txt",ios::out);
	for(int i=0;i<T;i++){
		f>>s;
		proc->push_back(s);
	}
	for(int d=0;d<proc->size();d++){
		int ctr = d+1;
		fout<<"Case #"<<ctr<<":"<<" ";
		string str =minim(proc->at(d));
		fout<<str;
		fout<<" ";
		string str2 = maxim(proc->at(d));
		fout<<str2;
		fout<<" "<<endl;
	}
	f.close();
	fout.close();
	return 0;
}