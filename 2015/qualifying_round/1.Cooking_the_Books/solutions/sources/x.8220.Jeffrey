// Jeffrey van den Bor

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

unsigned long smaller(unsigned long a){
    char buffer[32];
    char *j;
    int iteration = 0;
    int location = 0;
    int smallest = 10;
    snprintf(buffer, 32, "%i", a);
    printf("--%s--\n", buffer);
    
    // process digit-by-digit
    for ( j = buffer; *j; ++j ) {
        unsigned long digit = *j-'0';
        // printf("%d\n", digit);
        if (digit < smallest && digit != 0){
            smallest = digit;
            location = iteration;
        }
        iteration++;
    }
    // printf("--Smallest: %d  - Location: %d \n", smallest, location);

    // swap first position with smallest value
    char temp = buffer[location];
    buffer[location] = buffer[0];
    buffer[0] = temp;

    unsigned long result;
    sscanf(buffer, "%lu", &result);
    printf("smaller---> %lu\n", result);
    return result;
}
unsigned long larger(unsigned long a){
    char buffer[32];
    char *j;
    int iteration = 0;
    int location = 0;
    int large = 0;
    snprintf(buffer, 32, "%i", a);
    // printf("--%s--\n", buffer);
    
    // process digit-by-digit
    for ( j = buffer; *j; ++j ) {
        unsigned long digit = *j-'0';
        // printf("%d\n", digit);
        if (digit > large){
            large = digit;
            location = iteration;
        }
        iteration++;
    }
    //printf("--large: %d  - Location: %d \n", large, location);

    // swap first position with large value
    char temp = buffer[location];
    buffer[location] = buffer[0];
    buffer[0] = temp;

    int result;
    sscanf(buffer, "%lu", &result);
    printf("larger ---> %lu\n", result);
    return result;
}


int main( int argc, const char* argv[] ){
	FILE *fp, *fwp;
	int testcases;
	int i;
	// Parse input file
    fp = fopen("cooking_the_books.txt", "r");

    //  Check on errors
  	if(fp == NULL){
  		printf("Error opening file!\n");
        exit(EXIT_FAILURE);
    }

    // Get first input
    fscanf(fp,"%d",&testcases);
    printf("Testing with T=%d \n", testcases);

	// Calculate result (function)
    unsigned long input, result_small, result_large;
    fwp = fopen("cooking_result.txt", "w");
    for(i = 1; i <= testcases; i++){
        fscanf(fp,"%lu",&input);
        //printf("%d\n", input);
        result_small = smaller(input);
        result_large = larger(input);
    	// Write to output
    	fprintf(fwp, "Case #%d: %lu %lu\n", i, result_small, result_large);
    }

	printf( "\nDone!\n\n" );

	fclose(fp);
	fclose(fwp);
    return 0;
}
