#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <fstream>
#include <bits/stdc++.h>

using namespace std;

#define fori(i,a,b) for(int i=a; i<=b; ++i)
#define ford(i,a,b) for(int i=a; i>=b; --i)
#define rep(i,n) for(int i=0; i<n; ++i)
#define dbg(str) //cout << str << endl

typedef long long ll;

void compute(ll n, string &res1, string &res2) {
	stringstream ss;
	ss.clear();
	ss.str("");
	ss << n;
	string num = ss.str();
	int largest = INT_MIN, smallest = INT_MAX, smallest_pos = -1, largest_pos = -1;
	rep(i, num.length()) {
		int tmp = num[i]-'0';
		if (tmp < smallest && 0 != tmp) {
			smallest = tmp;
			smallest_pos = i;
		}
		if (tmp > largest && 0 != tmp) {
			largest = tmp;
			largest_pos = i;
		}
	}

	if (-1 != smallest_pos) {
		string tmp = num;
		swap(tmp[0], tmp[smallest_pos]);
		dbg("smallest = " << tmp);
		res1 = tmp;
	}
	else {
		dbg("smallest same as num = " << num);
		res1 = num;
	}

	if (-1 != largest_pos) {
		string tmp = num;
		swap(tmp[0], tmp[largest_pos]);
		dbg("largest = " << tmp);
		res2 = tmp;
	}
	else {
		dbg("largest is same as num = " << num);
		res2 = num;
	}
}

int main (int argc, char *argv[]) {
	ifstream fin;
	fin.open(argv[1]);

	ofstream fout;
	fout.open("result.out", ios::out);

	int t;
	fin >> t;
	rep(i, t) {
		ll n;
		fin >> n;
		string smallest, largest;
		compute(n, smallest, largest);
		fout << "Case #" << (i+1) << ": " << smallest << " " << largest << endl;
	}
}