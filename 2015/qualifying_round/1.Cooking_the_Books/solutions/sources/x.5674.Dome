#include <iostream>
#include <fstream>

//#define INPUT "input.txt"

#define INPUT "cooking_the_books.txt"
#define OUTPUT "output.txt"

using namespace std;

int str_size(char input[]);
void clone(char output[], char input[], int size);
void find_min(char input[], int size);
void find_max(char input[], int size);

int main()
{
	//read-write
	string input_line;
	string output_line;

	ifstream input(INPUT);
	ofstream output(OUTPUT);
	if(input.is_open())
	{
		int set = 0;
		input >> set;

		char input_num[11];
		char min_num[11];
		char max_num[11];

		for(int i = 0; i < set ; i++)
		{
			input >> input_num;

			int size = str_size(input_num);

			clone(min_num, input_num, size);
			clone(max_num, input_num, size);

			find_min(min_num, size);
			find_max(max_num, size);

			cout << size << endl;

			output << "Case #" << i+1 << ": ";
			output << min_num << " ";
			output << max_num << "\n";
		}

		input.close();
		output.close();
	}

	return 0;
}

int str_size(char input[])
{
	int size = 0;

	for(int x = 0; input[x] != '\0'; x++)
		size++;

	return size;
}

void clone(char output[], char input[], int size)
{
	for(int i = 0; i < size; i++)
	{
		output[i] = input[i];
	}

	output[size] = '\0';
}

void find_min(char input[], int size)
{
	for(int i = 0; i < size; i++)
	{
		int inp_i = input[i] - '0';

		int min_val = inp_i;
		int min_pos = i;

		for(int j = i + 1; j < size; j++)
		{
			int inp_j = input[j] - '0';

			if(min_val > inp_j &&
				inp_j > 0)
			{
				min_val = inp_j;
				min_pos = j;
			}
		}

		if(min_pos != i)
		{
			//swap!
			char tmp = input[i];
			input[i] = input[min_pos];
			input[min_pos] = tmp;

			break;
		}
	}
}

void find_max(char input[], int size)
{
	for(int i = 0; i < size; i++)
	{
		int inp_i = input[i] - '0';

		int min_val = inp_i;
		int min_pos = i;

		for(int j = i + 1; j < size; j++)
		{
			int inp_j = input[j] - '0';

			if(min_val < inp_j &&
				inp_j > 0)
			{
				min_val = inp_j;
				min_pos = j;
			}
		}

		if(min_pos != i)
		{
			//swap!
			char tmp = input[i];
			input[i] = input[min_pos];
			input[min_pos] = tmp;

			break;
		}
	}
}