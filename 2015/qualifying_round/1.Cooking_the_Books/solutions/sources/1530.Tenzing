/*
AUTHOR: Tenzing Shaw
LANGUAGE: Java
PROBLEM: CookingTheBooks
*/

import java.io.*;
import java.util.*;

class CookingTheBooks {
    public static int[] solve(char[] n) {
        int smallest = getNum(n), largest = getNum(n);
        for(int i = 0; i < n.length - 1; i++)
            for(int j = i + 1; j < n.length; j++) {
                if(i == 0 && n[j] == '0') continue;
                int k = ifSwap(n, i, j);
                smallest = Math.min(smallest, k);
                largest = Math.max(largest, k);
            }
        return new int[] {smallest, largest};
    }

    private static int ifSwap(char[] n, int i, int j) {
        char[] copy = n.clone();
        char temp = copy[i];
        copy[i] = copy[j];
        copy[j] = temp;
        return getNum(copy);
    }

    private static int getNum(char[] n) {
        return Integer.parseInt(new String(n));
    }

    public static void main(String[] args) throws IOException {
        BufferedReader f = new BufferedReader(new FileReader("CookingTheBooks.in"));
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("CookingTheBooks.out")));
        int T = Integer.parseInt(f.readLine());

        for (int tt = 1; tt <= T; tt++) {
            int[] ans = solve(f.readLine().toCharArray());
            out.println("Case #" + tt + ": " + ans[0] + " " + ans[1]);
        }

        out.close();
        System.exit(0);
    }
}