#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <cmath>

using namespace std;

int findminmax(long n, int *min, int *max, int *minpos, int *maxpos, int *firstdigit)
{
	long temp=n;
	int dig;
	int pos=0;
	while(temp)
	{
		dig= temp%10;
		(*firstdigit)=dig;
		if(dig< *min && dig!=0)
		{
			*min=dig;
			*minpos=pos;
		}
		if(dig > *max && dig!= 0)
		{
			*max=dig;
			*maxpos=pos;
		}
		pos++;
		temp= temp/10;
	}
	return pos;
}
int main(int argc, char const *argv[])
{
	int t,small,large;
	long n;
	cin>>t;
	for (int i = 0; i < t; ++i)
	{
		int min=9,max=1,minpos=0,maxpos=0,firstdigit;
		cin>>n;
		int total=findminmax(n,&min,&max, &minpos, &maxpos, &firstdigit);
		// cout<<min<<" "<<minpos<<" "<<max<<" "<<maxpos<<" "<<firstdigit<<" "<<total<<endl;
		small=large=n;
		if(minpos!=maxpos)
		{
			small= n-firstdigit* pow(10,total-1) - min*pow(10,minpos)+ min * pow(10,total-1) + firstdigit*pow(10,minpos);
			large= n-firstdigit* pow(10,total-1) - max*pow(10,maxpos)+ max * pow(10,total-1) + firstdigit*pow(10,maxpos);
		}
		cout<<"Case #"<<i+1<<": ";
		cout<<small<<" "<<large<<endl;
	}
	return 0;
}