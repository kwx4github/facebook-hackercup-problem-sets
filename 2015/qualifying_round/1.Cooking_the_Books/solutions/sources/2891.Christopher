#!/usr/bin/python
# -*- coding: utf-8 -*-

def find_min(num):
    for idx, val in enumerate(num):
        for last_idx in xrange(1 if idx == 0 else 0, val + 1):
            if lasts[last_idx] > idx and num[lasts[last_idx]] < val:
                num[idx], num[lasts[last_idx]] = num[lasts[last_idx]], num[idx]
                break
        else:
            continue
        break
    return num

def find_max(num):
    for idx, val in enumerate(num):
        for last_idx in xrange(9, val - 1, -1):
            if lasts[last_idx] > idx and num[lasts[last_idx]] > val:
                num[idx], num[lasts[last_idx]] = num[lasts[last_idx]], num[idx]
                break
        else:
            continue
        break
    return num

if __name__ == '__main__':
    with open('cooking_the_books_input.txt') as problem_input:
        with open('cooking_the_books_output.txt', 'w') as problem_output:
            test_cases = int(problem_input.readline().strip())

            for test_case in xrange(test_cases):
                num    = [int(digit) for digit in problem_input.readline().strip()]
                lasts  = [-1] * 10

                for idx, val in enumerate(num):
                    if idx > lasts[val]:
                        lasts[val] = idx

                small = int(''.join(map(str, find_min(num[:]))))
                large = int(''.join(map(str, find_max(num[:]))))

                output = 'Case #{0}: {1} {2}\n'.format(test_case + 1, small, large)

                print int(''.join(map(str, num))), small, large

                problem_output.write(output)