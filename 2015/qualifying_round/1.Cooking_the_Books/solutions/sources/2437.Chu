/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package happy;


import java.io.*;
import java.math.*;
import java.lang.*;
import java.util.*;
import java.util.Arrays.*;
import java.io.BufferedReader;

/**
 *
 * @author keith
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        new Main().haha();
    }


    public void haha() {
        BufferedReader in = null;
        BufferedWriter out = null;

        try{
            in = new BufferedReader(new FileReader("cooking_the_books.txt"));
            out = new BufferedWriter(new FileWriter("out.txt"));
            int T = Integer.parseInt(in.readLine());
            System.out.println("T="+T);
            for(int i=0;i<T;i++){
                System.out.print("Case #"+(i+1)+":");
                out.write("Case #"+(i+1)+":");
                String num = in.readLine();
                int len = num.length();
                String min = "";
                String max = "";
                String ans = "";

                int[] n = new int[len];
                int[] nn = new int[len];
                int[] ns = new int[len];
                int[] nm = new int[len];
                for(int x=0;x<len;x++){
                    n[x] = Integer.parseInt(""+num.charAt(x));
                    ns[x] = n[x];
                    nn[x] = n[x];
                }
                Arrays.sort(ns);
                for(int x=0;x<len;x++){
                    nm[x] = ns[len-x-1];
                }

                for(int x=0;x<len;x++){
                    if(nm[x]!=n[x]){
                        int okm = nm[x];
                        int oki=0;
                        for(int y=len-1;y>=0;y--){
                            if(n[y]==okm){
                                oki = y;
                                break;
                            }
                        }
                        int tmp = n[x];
                        n[x] = n[oki];
                        n[oki] = tmp;
                        break;
                    }
                }
                for(int x=0;x<len;x++){
                    max = max + n[x];
                }

                int zero = 0;
                for(int x=0;x<len;x++){
                    if(ns[x]==0) zero++;
                }
                if(zero>0&&len>1){
                    ns[0] = ns[zero];
                    ns[zero] = 0;
                }

                for(int x=0;x<len;x++){
                    if(ns[x]!=nn[x]){
                        int okm = ns[x];
                        int oki=0;
                        for(int y=len-1;y>=0;y--){
                            if(nn[y]==okm){
                                oki = y;
                                break;
                            }
                        }
                        int tmp = nn[x];
                        nn[x] = nn[oki];
                        nn[oki] = tmp;
                        break;
                    }
                }
                for(int x=0;x<len;x++){
                    min = min + nn[x];
                }

                ans = min + " " + max;
                System.out.print(" "+ans+"\n");
                out.write(" "+ans+"\n");
            }

            in.close();
            out.close();
        }catch(Exception e){
            e.printStackTrace();
            try{
                in.close();
                out.close();
            }catch(Exception ee){
                ee.printStackTrace();
            }
        }
        System.out.print("Ha Ha :D\n");
    }

}
