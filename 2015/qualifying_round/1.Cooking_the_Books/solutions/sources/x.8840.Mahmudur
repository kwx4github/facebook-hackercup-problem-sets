#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using namespace std;


#define mem(p,v) memset(p, v, sizeof(p))
#define SET(p) 	  memset(p, -1, sizeof(p))
#define CLR(p)    memset(p, 0, sizeof(p))


#define    getI(a) 	         scanf("%d", &a)
#define    getII(a,b) 	     scanf("%d%d", &a, &b)
#define    getIII(a,b,c)     scanf("%d%d%d", &a, &b, &c)
#define    getL(n)           scanf("%lld",&n)
#define    getF(n)           scanf("%lf",&n)

#define    debug(a)     { cout << a <<endl; }
#define    debugI()     { cout << "*" <<endl; }

#define rep(i,n) for( i = 1 ; i<=(n) ; i++)

#define ALL(p)  p.begin(),p.end()
#define ALLR(p) p.rbegin(),p.rend()
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)
#define pb(x) push_back(x)

#define    vi 	 vector < int >
#define    vii 	 vector < vector < int > >
#define    pii 	 pair< int, int >
#define    psi 	 pair< string, int >
#define    ff 	 first
#define    ss 	 second
#define    ll	 long long
#define    ull 	 unsigned long long
#define    ui    unsigned int
#define    ld 	 long double


const double EPS = 1e-9;
const int INF = 0x7f7f7f7f;
const double PI=acos(-1.0);

template< class T > inline T _abs(T n)
{
    return ((n) < 0 ? -(n) : (n));
}
template< class T > inline T _max(T a, T b)
{
    return (!((a)<(b))?(a):(b));
}
template< class T > inline T _min(T a, T b)
{
    return (((a)<(b))?(a):(b));
}
template< class T > inline T gcd(T a, T b)
{
    return (b) == 0 ? (a) : gcd((b), ((a) % (b)));
}
template< class T > inline T lcm(T a, T b)
{
    return ((a) / gcd((a), (b)) * (b));
}


int main()
{

    READ("in.txt");
    WRITE("out.txt");
    int t;
    getI(t);
    for(int cs=1; cs<=t; cs++)
    {
        int x;
        char a[10],b[10];
        getI(x);
        printf("Case #%d: ",cs);
        if(x==0)
        {
            cout<<x<<" "<<x<<endl;
            continue;
        }
        vector<int> v;
        int tmp=x;
        int cnt=0;
        while(tmp)
        {

            a[cnt]=(tmp%10)+48;
            b[cnt++]=(tmp%10)+48;
            v.push_back(tmp%10);
            tmp/=10;
        }
        a[cnt]='\0';
        strrev(a);
        b[cnt]='\0';
        strrev(b);

        //cout<<a<<endl;
        sort(v.begin(),v.end());
        int mn;
        for(int i=0; i<v.size(); i++)
            if(v[i]!=0)
            {
                mn=v[i];
                break;
            }
           // debug(mn);
        if(a[0]-48>mn)
        {
            for(int k=0; k<cnt; k++)
            {
                if(mn==a[k]-48)
                {
                    swap(a[0],a[k]);
                    break;
                }
            }

        }
        else
        {
            for(int i=1,j=0; i<cnt; i++)
            {
                if(a[i]-48!=v[j])
                {
                    for(int k=i+1; k<cnt; k++)
                    {
                        if(v[j]==a[k]-48)
                        {
                            swap(a[i],a[k]);
                            break;
                        }
                    }
                    break;
                }
                else
                    j++;
            }
        }
        sort(v.rbegin(),v.rend());
        for(int i=0,j=0; i<cnt; i++)
        {
            if(b[i]-48!=v[j])
            {
                for(int k=i+1; k<cnt; k++)
                {
                    if(v[j]==b[k]-48)
                    {
                        swap(b[i],b[k]);
                        break;
                    }
                }
                break;
            }
            else
                j++;
        }

        cout<<a<<" "<<b<<endl;
        v.clear();
    }

    return 0;
}


