#include <iostream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <vector>
#include <string>
#include <deque>
#include <bitset>
#include <algorithm>
#include <utility>
#include <functional>
#include <limits>
#include <numeric>
#include <complex>
#include <cassert>
#include <cmath>
#include <memory.h>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <climits>
#include <fstream>

using namespace std;

#define show(arr,len) for(int i=0;i<(len);i++) out<<arr[i]
int dig[10],dig2[10],digsort[10],digsort2[10];
int Find(int dig[],int len, int x)
{
    int pos=-1;
    for(int i=0;i<len;i++)
    {
        if(dig[i]==x)
            pos=i;
    }
    return pos;
}
int main()
{
    ifstream in("input.txt");
    ofstream out("output.txt");
    int T;
    long long int x,xx;
    in>>T;
    for(int j=1;j<=T;j++)
    {
        memset(dig,0,sizeof(dig));
        memset(digsort,0,sizeof(digsort));
        memset(dig2,0,sizeof(dig2));
        int len=0;
        in>>x;
        xx=x;
        if(x!=0)
        {
            while(xx>0)
            {
                dig[len]=xx%10;
                ++len;
                xx/=10;
            }
        }
        else
        {
            dig[0]=0;
            len=1;
        }

        int temp;
        for(int i=0;i<len/2;i++)
        {
            temp=dig[i];
            dig[i]=dig[len-i-1];
            dig[len-i-1]=temp;
        }
        for(int i=0;i<len;i++){
                digsort[i]=dig[i];
                dig2[i]=dig[i];
        }

        sort(digsort,digsort+len);
        //show(digsort,len);
        for(int i=0;i<len;i++)
        {
            digsort2[i]=digsort[len-i-1];
        }
        //show(digsort2,len);
        out<<"Case #"<<j<<": ";

        if(digsort[0]==0)
        {
            for(int q=0;q<len;q++)
            {
                if(digsort[q]!=0)
                {
                    int temp=digsort[q];
                    digsort[q]=digsort[0];
                    digsort[0]=temp;
                    break;
                }
            }
            //show(digsort,len);
        }
        for(int i=0;i<len;i++)
        {
            if(dig[i]!=digsort[i])
            {
                int pos=Find(dig,len,digsort[i]);
                int temp=dig[i];
                dig[i]=dig[pos];
                dig[pos]=temp;
                break;
            }
        }
        show(dig,len);
        out<<" ";

        //max
        for(int i=0;i<len;i++)
        {
            //cout<<dig[i]<<" "<<digsort2[i]<<".";
            if(dig2[i]!=digsort2[i])
            {
                int pos=Find(dig2,len,digsort2[i]);
                //cout<<"pos:"<<pos;
                int temp=dig2[i];
                dig2[i]=dig2[pos];
                dig2[pos]=temp;
                //cout<<j<<"break\n";
                break;
            }
        }
        //for(int i=0;i<len;i++)
            //cout<<dig2[i];
        //cout<<endl;
        show(dig2,len);
        out<<endl;


    }
    in.close();
    out.close();
    cout<<"done";
}
