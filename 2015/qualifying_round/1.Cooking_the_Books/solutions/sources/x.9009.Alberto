<?php

$i=0;
$total_numbers = 0;
$numbers = array();

while($line = fgets(STDIN) or $line === "0")
{
    if ($i>0) {
        $numbers[] = (int) $line;
    }

    $i++;
}

$result = array();

foreach ($numbers as $i => $number) {
    list ($min, $max) = tweak((int)$number);
    $result[] = "Case #" .($i+1). ": " . $min . " " . $max;
}

echo implode("\n", $result) . PHP_EOL;

function tweak($number)
{
    if ($number == 0) {
        return array(0, 0);
    }

    $min = find_min($number);
    $max = find_max($number);

    return array($min, $max);
}

function find_max($number)
{
    $digits = str_split($number);

    $first_digit = $digits[0];
    $candidate = null;
    $candidate_position = null;

    foreach ($digits as $position => $digit)
    {
        if ($digit > $first_digit)
        {
            if ($digit > $candidate) {
                $candidate = $digit;
                $candidate_position = $position;
            } elseif($digit == $candidate && $position < $candidate_position) {
                $candidate = $digit;
                $candidate_position = $position;
            }
        }
    }

    if ($candidate !== null)
    {
        $digits[0] = $candidate;
        $digits[$candidate_position] = $first_digit;

        return implode("", $digits);
    }
    else
    {
        array_shift($digits);

        if (empty($digits)) {
            return $first_digit;
        }

        $number = implode("", $digits);

        return $first_digit . find_max($number);
    }
}

function find_min($number)
{
    $digits = str_split($number);

    $first_digit = $digits[0];
    $candidate = null;
    $candidate_position = null;

    foreach ($digits as $position => $digit)
    {
        if ($digit < $first_digit)
        {
            if ($digit == 0)
                continue;

            if ($digit < $candidate or $candidate == null) {
                $candidate = $digit;
                $candidate_position = $position;
            } elseif ($digit == $candidate && $position > $candidate_position or $candidate == null) {
                $candidate = $digit;
                $candidate_position = $position;
            }
        }
    }

    if ($candidate !== null)
    {
        $digits[0] = $candidate;
        $digits[$candidate_position] = $first_digit;

        return implode("", $digits);
    }
    else
    {
        array_shift($digits);

        if (empty($digits)) {
            return $first_digit;
        }

        $number = implode("", $digits);

        return $first_digit . find_min($number);
    }
}