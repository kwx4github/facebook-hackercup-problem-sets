// Facebook HackerCup

#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<numeric>
#define ull unsigned long long
#define ll long long
#define getll(x) scanf("%lld",&x)
#define getllu(x) scanf("%llu", &x)
#define outc(x) printf("%c\n",x)
#define outs(x) printf("%s\n",x)
#define nl putchar('\n')
#define V(type,name) vector<type> name
#define FOR(i,x,n) for(i=x;i<n;i++)
#define _FOR(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()
#define display(v) for(typeof((v).begin()) it = (v).begin(); it != (v).end(); ++it){ cout<<*it;}
#define pb push_back
#define sz(v) ( int )( (v).size() )
#define mod(a,b) ((a) % (b))
const int MAX = 100000; int i;
using namespace std;
char buffer[MAX];string gets(){scanf("%s",buffer);return buffer;}
template<typename t> void get(t& a) { scanf("%d", &a); }
template<typename t> void get(t& a, t& b) { get(a), get(b);}
template<typename t> void get(t& a, t& b, t& c) { get(a), get(b), get(c);}
template<typename t> void out(t& a) { printf("Case #%d: %d",i,a); }
template<typename t> void out(t& a, t& b) { printf("Case #%d: %d %d",i,a,b); }
template<typename t> void out(t& a, t& b, t& c) { printf("Case #%d: %d %d %d",i,a,b,c); }
template<typename t> void out(t& a, int New) { out(a); if(New) nl; }
template<typename t> t gcd(t a,t b){ return mod((a),(b)) == 0 ? (b) : gcd((b), mod((a),(b)));}
template<typename t> void print(t a) { cout<<"Case #"<<i<<" "<<a;}
template<typename t> void print(t a, int New) { cout<<"Case #"<<i<<" "<<a; if(New) nl;}
//#define __DEBUG__
V(int, A);
V(int, B);
V(int, Cp);

inline bool cmp(int a, int b)
{
    return (a<b);
}

int main()
{
    #ifdef __DEBUG__
    freopen("cooking_the_books.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    bool firstZero;
    int i,t,n,j,k,c,sFirst,lFirst,tc;
    ull sm,la,sc,lc;
    get(t);
    tc = t;
    getchar();
    while(t--)
    {
        j = getchar();
        while(j!=10)
            A.pb((j-'0')),j = getchar();
        B = A,Cp = A;
        sort(ALL(Cp),cmp);
        la = Cp[sz(Cp)-1];
        sm = Cp[0];
        if(sm == 0)
        {
            i = 0;
            while(Cp[++i] == 0);
            sm = Cp[i];
        }
        sc = count(ALL(A),sm);
        lc = count(ALL(A),la);
        if(sc>1)
        {
            c = 0,i = 0;
            while(c != sc)
            {
                if(A[i] == sm) c++;
                i++;
            }
            if(c == sc) sFirst = i-1;
        }
        else
            sFirst = find(A.begin(),A.end(),sm) - A.begin();
        if(lc>1)
        {
            c = 0,i = 0;
            while(c!=lc)
            {
                if(A[i] == la) c++;
                i++;
            }
            if(c == lc) lFirst = i-1;
        }
        else
            lFirst = find(A.begin(),A.end(),la) - A.begin();

        if(A[sFirst] != 0)
        {
            i = 0;
            while(A[i] == sm && sc > 1) i++;
            swap(A[sFirst],A[i]);
        }

        if(B[lFirst != 0])
        {
            i = 0;
            while(B[i] == la && lc > 1) i++;
            swap(B[lFirst],B[i]);
        }
        cout<<"Case #"<< tc - t<<": ";
        display(A);cout<<" ";display(B);nl;
        A.clear();
        B.clear();
        Cp.clear();
    }
    return 0;
}

