/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package hackercup;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author Karen
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException, NullPointerException {
        FileReader fr = new FileReader("cooking_the_books.txt");
        BufferedReader br = null;
        File file = new File("out.txt");
        if (!file.exists()) {
            file.createNewFile();
        }

        FileWriter fw = new FileWriter(file.getAbsoluteFile());
        BufferedWriter bw = new BufferedWriter(fw);

        /* try{
        fr = new FileReader("123.txt");
        }
        catch(FileNotFoundException fnfe){
        System.out.println("File not found");
        }
         */
        br = new BufferedReader(fr);
        String s;
        String[] printToFile = null;
        int caseNumber = 0;
        String value = br.readLine();
        int numberOfInputs = Integer.parseInt(value);
        String theCovertedStrings = null;


        for (int i = 0; i < numberOfInputs; i++) {
            theCovertedStrings = br.readLine();
            printToFile = CheckBalance(theCovertedStrings);
            caseNumber = i + 1;
            bw.write("Case #" + caseNumber + ": " + printToFile[0]+" " + printToFile[1] + "\r\n");



        }

        fr.close();
        bw.close();

    }
    private static String[] CheckBalance(String x) {
        StringBuilder sb = new StringBuilder(x);
        char l , r ;
        int smallestInt =  Integer.parseInt(x);
        int LargestInt =  Integer.parseInt(x);
        int numberAfteSwapingTemp = 0;
        for (int i = 0 ; i < x.length() ; i++)
        {
            for (int j = 1; j < x.length() ; j++)
            {
                l = sb.charAt(i);
                r = sb.charAt(j);
                sb.setCharAt(i, r);
                sb.setCharAt(j, l);
                if (sb.charAt(0) != '0')
                {
                    numberAfteSwapingTemp = Integer.parseInt(sb.toString());
                    if (numberAfteSwapingTemp < smallestInt )
                    {
                        smallestInt = numberAfteSwapingTemp;
                    }else if (numberAfteSwapingTemp > LargestInt)
                    {
                        LargestInt = numberAfteSwapingTemp;
                    }
                }
                sb = new StringBuilder(x);
                
            }
        }
        String[] finalResult = new String[2];
        finalResult[0] = Integer.toString(smallestInt);
        finalResult[1] = Integer.toString(LargestInt);
        return finalResult;


    }
}
