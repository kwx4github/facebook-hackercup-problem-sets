import static java.lang.Integer.parseInt;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.StringTokenizer;


public class CookingTheBooks {

	static int MB = 1 << 20;
	static BufferedReader br = new BufferedReader( new InputStreamReader(System.in, StandardCharsets.US_ASCII), 10*MB);
	static StringTokenizer st;
	
	static void NL() throws Exception {
		st = new StringTokenizer(br.readLine());
	}
	
	static String NT() {
		return st.nextToken();
	}
	
	public static void main(String[] args) throws Exception {
		NL();
		int T = parseInt(NT());
		for (int ii = 1; ii <= T; ii++) {
			NL();
			System.out.println(solve(ii, NT()));
		}
	}

	private static String solve(int ii, String s) {
		String min = s;
		String max = s;
		char[] ca = s.toCharArray();
		String ns;
		for (int i = 1; i < ca.length; i++) {
			if (ca[i] != '0') {
				swap(ca, 0, i);
				ns = new String(ca);
				if (ns.compareTo(min) < 0) min = ns;
				if (ns.compareTo(max) > 0) max = ns;
				swap(ca, 0, i); // swap back
			}
		}
		for (int i = 1; i < ca.length; i++) {
			for (int j = i+1; j < ca.length; j++) {
				swap(ca, i, j);
				ns = new String(ca);
				if (ns.compareTo(min) < 0) min = ns;
				if (ns.compareTo(max) > 0) max = ns;
				swap(ca, i, j); // swap back				
			}
		}
		return String.format("Case #%d: %s %s", ii, min, max);
	}

	private static void swap(char[] ca, int i, int j) {
		char o = ca[i];
		ca[i] = ca[j];
		ca[j] = o;
	}

}
