#include <iostream>
#include <fstream>
#include <cmath>

using namespace std;

int main()
{
	int cases, curCase, number, length, subseqEnd;
	ifstream fin ("test.txt");
	ofstream fout ("out.txt");
	fin>>cases;
	curCase = 1;

	while(curCase <= cases)
	{
		int minArr[9], maxArr[9];
		fin>>number;
		int num = number;
		length = (int) log10 ((double) number) + 1;

		for(int k = length - 1; k >= 0; k--)
		{
			minArr[k] = maxArr[k] = number % 10;
			number /= 10;
		}

		subseqEnd = 1;

		for(int k = 0; k < length; k++)
		{
			if(minArr[k+1] < minArr[k])
				break;
			subseqEnd++;
		}

		int min = 10;
		int minLoc = subseqEnd;

		for(int k = subseqEnd; k < length; k++)
		{
			if(minArr[k] <= min && minArr[k] != 0)
			{
				min = minArr[k];
				minLoc = k;
			}
		}

		for(int k = 0; k < length; k++)
		{
			if(min < minArr[k])
			{
				int temp = minArr[k];
				minArr[k] = min;
				minArr[minLoc] = temp;
				break;
			}
		}

		subseqEnd = 1;

		for(int k = 0; k < length; k++)
		{
			if(maxArr[k+1] > maxArr[k])
				break;
			subseqEnd++;
		}

		int max = 0;
		int maxLoc = subseqEnd;

		for(int k = subseqEnd; k < length; k++)
		{
			if(maxArr[k] >= max)
			{
				max = maxArr[k];
				maxLoc = k;
			}
		}

		for(int k = 0; k < length; k++)
		{
			if(max > maxArr[k])
			{
				int temp = maxArr[k];
				maxArr[k] = max;
				maxArr[maxLoc] = temp;
				break;
			}
		}

		fout<<"Case #"<<curCase<<": ";

		if(num == 0)
		{
			fout<<"0 0"<<endl;
		}
		else
		{
			for(int k = 0; k < length; k++)
			{
				fout<<minArr[k];
			}

			fout<<" ";

			for(int k = 0; k < length; k++)
			{
				fout<<maxArr[k];
			}

			fout<<endl;
		}

		curCase++;
	}

	return 0;
}