#include <iostream>
//#include <cstdlib> //DEBUG
//#include <string> //DEBUG
using namespace std;

int change[2];
string s;
int n;

void sw(char& a, char& b) {
    char tmp = a;
    a = b;
    b = tmp;
}

string s_max() {
    int curr_max;
    change[0] = change[1] = curr_max = n;
    for(int i = n; i >= 0; --i) {
        if(s[i] < s[curr_max]) {
            change[0] = i;
            change[1] = curr_max;
        } else if(s[i] > s[curr_max]) {
            curr_max = i;
        }
    }
    string ans = s;
    sw(ans[change[0]], ans[change[1]]);
    return ans;
}

string s_min() {
    int suf_min = 0;
    for(int i = n; i > 0; --i) {
        if(s[i] > '0' && s[i] < s[suf_min]) {
            suf_min = i;
        }
    }
    if(s[suf_min] < s[0]) {
        string ans = s;
        sw(ans[0], ans[suf_min]);
        return ans;
    }
    int curr_min;
    change[0] = change[1] = curr_min = n;
    for(int i = n; i > 0; --i) {
        if(s[i] > s[curr_min]) {
            change[0] = i;
            change[1] = curr_min;
        } else if(s[i] < s[curr_min]) {
            curr_min = i;
        }
    }
    string ans = s;
    sw(ans[change[0]], ans[change[1]]);
    return ans;
}

/* test 

bool is_number(string str) {
    if(str[0] < '1' || '9' < str[0]) {
        return false;
    }
    for(int i = 1; i < str.size(); ++i) {
        if(str[i] < '0' || '9' < str[i]) {
            return false;
        }
    }
    return true;
}

string s_max_deb() {
    int max_num = atoi(s.c_str());
    for(int i = 0; i <= n; ++i) {
        for(int j = i + 1; j <= n; ++j) {
            string prep = s;
            sw(prep[i], prep[j]);
            if(is_number(prep)) {
                max_num = max(max_num, atoi(prep.c_str()));
            }
        }
    }
    return to_string(max_num);
}

string s_min_deb() {
    int min_num = atoi(s.c_str());
    for(int i = 0; i <= n; ++i) {
        for(int j = i + 1; j <= n; ++j) {
            string prep = s;
            sw(prep[i], prep[j]);
            if(is_number(prep)) {
                min_num = min(min_num, atoi(prep.c_str()));
            }
        }
    }
    return to_string(min_num);
}

void test() {
    for(int i = 0; i < 10000; ++i) {
        s = to_string(i);
        n = s.size() - 1;
        string smin = s_min();
        string smindeb = s_min_deb();
        string smax = s_max();
        string smaxdeb = s_max_deb();
        if(smin != smindeb || smax != smaxdeb) {
            cout << "difference on test " << i << ":" << endl;
            cout << "smin : " << smin << " smax: " << smax << endl;
            cout << "sdeb : " << smindeb << " sdeb: " << smaxdeb << endl;
            return;
        }
    }
    cout << "test OK" << endl;
    return;
}

 ~test */

void run(int i) {
    cin >> s;
    n = s.size() - 1;
    cout << "Case #" << i << ": " << s_min() << " " << s_max() << endl;
}

int main() {
    ios_base::sync_with_stdio(0);
//    test();
    int t;
    cin >> t;
    for(int i = 1; i <= t; ++i) {
        run(i);
    }
    return 0;
}
