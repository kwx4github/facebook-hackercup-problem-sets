import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
	
	static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));
	static StringTokenizer datos = new StringTokenizer("");
	
	public static String next() throws IOException {
		while (!datos.hasMoreTokens()) {
			String s = in.readLine();
			if (s == null)
				return null;
			datos = new StringTokenizer(s);
		}
		return datos.nextToken();
	}
	
	public static Integer nextInt() throws IOException {
		String s = next();
		return s == null ? null : Integer.parseInt(s);
	}
	public static Long nextLong() throws IOException {
		String s = next();
		return s == null ? null : Long.parseLong(s);
	}
	
	public static void main(String[] args) throws IOException 
	{
		int n = nextInt();
		int t = 1;
		while(n-->0){
			String num = next();
			out.println(String.format("Case #%d: %s %s", t++, getSmaller(num), getBigger(num)));
		}
		out.flush();
	}
	
	public static int getSmaller(String n)
	{
		char[] res = n.toCharArray();
		int r = Integer.parseInt(n);
		for(int i=0;i<n.length();i++){
			for(int k=i+1;k<n.length();k++){
				if(i==0 && res[k]=='0') continue;
				char temp = res[i];
				res[i] = res[k];
				res[k] = temp;
				r = Math.min(r, Integer.parseInt(new String(res)));
				res = n.toCharArray();
			}
		}
		return r;
	}
	
	public static int getBigger(String n)
	{
		char[] res = n.toCharArray();
		int r = Integer.parseInt(n);
		for(int i=0;i<n.length();i++){
			for(int k=i+1;k<n.length();k++){
				if(i==0 && res[k]=='0') continue;
				char temp = res[i];
				res[i] = res[k];
				res[k] = temp;
				r = Math.max(r, Integer.parseInt(new String(res)));
				res = n.toCharArray();
			}
		}
		return r;
	}
}