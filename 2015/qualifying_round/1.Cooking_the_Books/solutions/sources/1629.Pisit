#include <iostream>
#include <algorithm>
#include <string>
using namespace std;

int main() {
    int n, t=1;

    cin >> n;

    for (t = 1; t <= n; t++) {
        string num, maxv, minv;
        cin >> num;

        maxv = num, minv = num;
        auto non_zero_it = find_if(num.begin()+1, num.end(), [](int n){ return n!='0'; });

        if (non_zero_it != num.end()) {
            bool change = false;
            for (int i = 0; i < minv.size(); i++) { if (minv[i] == '0') minv[i] = '9'+1; }
            auto last_min_it = min_element(minv.rbegin(), minv.rend());
            if (*last_min_it < minv[0]) {
                swap(minv[0], *last_min_it);
                change = true;
            }
            for (int i = 0; i < minv.size(); i++) { if (minv[i] == '9'+1) minv[i] = '0'; }

            if (!change) {
                for (int i = 1; i < minv.size()-1; i++) {
                    auto last_min_it = min_element(minv.rbegin(), minv.rend()-i);
                    if (*last_min_it < minv[i]) {
                        swap(minv[i], *last_min_it);
                        break;
                    }
                }
            }

            for (int i = 0; i < maxv.size()-1; i++) {
                auto last_max_it = max_element(maxv.rbegin(), maxv.rend()-i);
                if (*last_max_it > maxv[i]) {
                    swap(maxv[i], *last_max_it);
                    break;
                }
            }
        }

        cout << "Case #" << t << ": " << minv << " " << maxv << "\n";
    }

    return 0;
}
