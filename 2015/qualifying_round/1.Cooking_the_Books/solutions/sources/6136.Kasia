#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <string>
using namespace std;
typedef long long LL;
typedef pair<int, int> PII;
typedef vector<int> VI;
#define REP(I, N) for(int I=0; I<(N); ++I)
#define FOR(I, M, N) for(int I=(M); I<=(N); ++I)
#define FORD(I, M, N) for(int I=(M); I>=(N); --I)
#define FOREACH(IT, CON) for(__typeof(CON.begin()) IT=CON.begin(); IT!=CON.end(); ++IT)
#define ST first
#define ND second
#define MP make_pair
#define PB push_back
const int INF=1000000000;
const LL INFLL=1000000000000000000LL;
int n, t;
	vector<int> v;
	vector<int> s;
	vector<int> s2;
	vector<int> v2;
	vector<int> s3;
int main()
{
scanf("%d", &t);
for (int z=0;z<t;z++)
{
	scanf("%d", &n);
	if (n==0)
		printf("Case #%d: 0 0\n", z+1);
	else
	{
	while (n>0)
	{
		v.PB(n%10);
		s.PB(n%10);
		s3.PB(n%10);
		
			v2.PB(n%10);
			s2.PB(n%10);
		n/=10;
	}
	//printf("ff\n");
	if (v2.size()>0)
	{
		v2.pop_back();
		s2.pop_back();
	}
	//printf("fgdg\n");
	reverse(s.begin(), s.end());
	reverse(s3.begin(), s3.end());
	reverse(s2.begin(), s2.end());
	int w1=0;
	int w2 = 0;
	sort(v.begin(), v.end());
	sort(v2.begin(), v2.end());
	reverse(v.begin(), v.end());
	bool t=false;
	//printf("trzecie\n");
	for (int i=0; i<v.size()&&!t; i++)
	{
		//printf("%d %d\n", v[i], s[i]);
		if (s[i]==v[i])
			w2=w2*10+s[i];
		else
		{
			t=true;
			for (int j=s.size()-1; j>=0; j--)
			{
				//printf("a\n");
				if (s[j]==v[i])
				{
					swap(s[i], s[j]);
					break;	
				}
			}
			for (int j=i; j<v.size(); j++)
			{
				//printf("b\n");
				
				w2=w2*10+s[j];
			}
		}
	}
	int mini=20;
	//printf("ooo %d\n", v.size());
	for (int i=1; i<v.size(); i++)
	{
		if (s3[i]>0)
			mini = min(mini, s3[i]);
	}
	if (s3[0]>mini)
	{
		for (int j=s3.size()-1; j>=0; j--)
		{
			//printf("j: %d s[j]: %d mini: %d\n", j, s3[j], mini);
			if (s3[j]==mini)
			{
				swap(s3[0], s3[j]);
				break;	
			}
		}
		for (int j=0; j<v.size(); j++)
		{
			//printf("b %d\n", s3[j]);
		
			w1=w1*10+s3[j];
		}
	}
	else
	{
		w1=s3[0];
		t=false;
		for (int i=0; i<v2.size()&&!t; i++)
		{
			//printf("v[]: %d %d\n", v2[i], s2[i]);
			if (s2[i]==v2[i])
				w1=w1*10+s2[i];
			else
			{
				//printf("drugie\n");
				t=true;
				for (int j=s2.size()-1; j>=0; j--)
				{
					//printf("a\n");
					if (s2[j]==v2[i])
					{
						swap(s2[i], s2[j]);
						break;	
					}
				}
				for (int j=i; j<s2.size(); j++)
				{
					//printf("b\n");		
					w1=w1*10+s2[j];
				}
			}
		}
	}
	v.clear();
	s.clear();
	v2.clear();
	s2.clear();
	s3.clear();
	printf("Case #%d: %d %d\n", z+1, w1, w2);
	}
}
return 0;
}

