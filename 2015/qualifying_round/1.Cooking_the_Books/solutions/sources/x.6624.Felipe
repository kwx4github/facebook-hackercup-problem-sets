def swap(ls, i, j):
	x = ls[i]
	ls[i] = ls[j]
	ls[j] = x

def find(ls, x):
	i = 0
	while(ls[i] != x):
		i = i + 1
	return i

def findMin(ls):
	minValue = ls[0]
	for val in ls:
		if val < minValue and val != '0':
			minValue = val
	return minValue

def cook(n):
	n = n.strip()
	if n == '0':
		return ('0', '0')	
	nstr = list(n)
	smallestDigit = findMin(nstr)
	biggestDigit = max(nstr)

	smallestDigitPos = find(nstr, smallestDigit)
	biggestDigitPos = find(nstr, biggestDigit)
	
	smallest = list(nstr)
	swap(smallest, smallestDigitPos, 0)
	
	biggest = list(nstr) 
	swap(biggest, biggestDigitPos, 0)

	return (''.join(smallest), ''.join(biggest))

f = open('cooking_the_books.txt')

t = int(f.readline())
i = 1
for line in f.readlines():
	if(line.strip() != ''):
		result = cook(line)
		print 'Case #' + str(i) + ': ' + result[0] + ' ' + result[1]
		i = i + 1 
