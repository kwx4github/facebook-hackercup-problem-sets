import java.util.*;
import java.io.*;
import java.lang.Math;
import java.util.Arrays;

class Hacker
{
public static void main(String args[]) throws IOException
{
int t,n,i,j,c,z;
int l,p,r,g,m;
String s = new String();
PrintWriter out  = new PrintWriter(System.out);
Reader.init(System.in);
t=Reader.nextInt();
char k;
for(i=0;i<t;i++)
{
s=Reader.next();
k=s.charAt(0);
c=0;
z=0;
char a[] = s.toCharArray();
char b[] = s.toCharArray();
char max=' ';
char min='A';
for(j=0;j<s.length();j++)
{
if(a[j]>max)
{
max=a[j];
c=j;
}
if(a[j]<min)
{
min=a[j];
z=j;
}
}
a[0]=max;
a[c]=k;
String x = new String(a);
if(min!='0')
{
b[0]=min;
b[z]=k;
}

String y = new String(b);
out.println("case #"+(i+1)+": "+y+" "+x);
}
out.close();
}
}


class Reader {
    static BufferedReader reader;
    static StringTokenizer tokenizer;
 
    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                     new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }
 
    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            //TODO add check for eof if necessary
            tokenizer = new StringTokenizer(
                   reader.readLine() );
        }
        return tokenizer.nextToken();
    }
 
    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
 
    static long nextLong() throws IOException {
        return Long.parseLong( next() );
    }
 
    static double nextDouble() throws IOException {
        return Double.parseDouble( next() );
    }
} 


















