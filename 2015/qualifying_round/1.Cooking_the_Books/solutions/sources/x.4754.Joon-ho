package facebookHackerCup;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;

public class p1 {
	
	int	max_idx;
	int	min_idx;
	
	public void solve(byte[] in) {
		int	len		= in.length;
		max_idx		= 0;
		min_idx		= 0;
		
		int	idx	= 1;
		for(; idx<len; ++idx) {
			if(in[idx] == '9') {
				max_idx	= idx;
				break;
			}
			if(in[idx] > in[max_idx]) {
				max_idx	= idx;
			}
			if(in[idx] != '0' && in[idx] < in[min_idx]) {
				min_idx	= idx;
			}
		}
		
		for(int i=len-1; i>=idx; --i) {
			if(in[i] == '1') {
				min_idx	= i;
				break;
			}
			if(in[idx] != '0' && in[i] < in[min_idx]) {
				min_idx	= i;
			}
		}
	}
	
	public void makeMax(byte[] in) {
		byte	tmp	= in[max_idx];
		in[max_idx]	= in[0];
		in[0]		= tmp;
	}
	
	public void makeMin(byte[] in) {
		byte	tmp			= in[min_idx];
		in[min_idx]			= in[0];
		in[0]		= tmp;
	}
	
	public static void main(String[] args) {
		BufferedReader		reader	= null;
		FileOutputStream	out		= null;

		p1	inst	= new p1();
		
		try {
//			reader     = new BufferedReader(new FileReader(new File("src/facebookHackerCup/cooking_the_books_example_input.txt")));
			reader     = new BufferedReader(new FileReader(new File("src/facebookHackerCup/cooking_the_books.txt")));
			out = new FileOutputStream("output.txt");
	        
			int	loop	= 0;
			if(reader.ready()) {
				loop	= Integer.parseInt(reader.readLine());
			}
			
			for(; loop>=0; loop--) {
				int	cnt	= 1;
				while(reader.ready()) {	// 변경
		            String content	= reader.readLine();
		            byte[]	tmp		= content.getBytes();
		            
		            inst.solve(tmp);
		            
		            String	a	= "Case #" + cnt + ": ";
		            cnt++;
		            
		            out.write(a.getBytes());
		            
		            inst.makeMin(tmp);
		            out.write(tmp);
		            inst.makeMin(tmp);
		            
		            out.write(' ');
		            inst.makeMax(tmp);
		            out.write(tmp);
		            
		            out.write('\r');
		            out.write('\n');
		        }
			}
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			if (out != null) {
				try {
					out.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}
}
