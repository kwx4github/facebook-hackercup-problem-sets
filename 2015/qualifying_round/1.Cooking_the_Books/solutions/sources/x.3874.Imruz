//BISMILLAHIR RAHMANIR RAHIM
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<string>
#include<map>
#include<queue>
#include<stack>
#include<vector>
#include<set>
#include<iostream>
#include<iomanip>
#include<ctime>
using namespace std;
typedef long long ll;
#define     mem(x,y) memset(x,y,sizeof(x))
#define     PB(x) push_back(x)
#define     POB() pop_back()
#define     SZ(a) a.size()
#define     len(a) strlen(a)
#define     sf scanf
#define     pf printf

#define     inf 1<<25
#define     sz 2000
#define     eps 1e-9
#define     mod  1000000007
 int gcd(int a, int b) { return (b != 0 ? gcd(b, a%b) : a);}
int lcm(int a, int b) { return (a / gcd(a, b) * b);}

int R[]={1,-1,0,0,1,-1,-1,1};   int C[]={0,0,1,-1,1,-1,1,-1};
int KR[]={-2,-2,-1,1,2,2,-1,1}; int KC[]={1,-1,2,2,1,-1,-2,-2};

//int pml=10000008,np=0;
//char prm[10000009];
//int prime[800000];
//void sieve(void){int i,j;for(i=4;i<pml;i+=2) prm[i]='*';for(i=3;i*i<=pml;i++){  for(j=2;i*j<=pml;j++)prm[i*j]='*';}
//prm[0]='*';/*prime[0]=2;np=1;for(i=3;i<pml;i++){if(prm[i]!='*')prime[np++]=i;}*/}
struct P
{
    double x,y;
    P(double x=0.0, double y=0.0)
    {
        this ->x=x;
        this ->y=y;
    }
};
P mkv(P ae,P be){return P(be.x-ae.x,be.y-ae.y);}
double dtp(P ae,P be){return (ae.x*be.x+ae.y*be.y);}
double crp(P ae,P be){return (ae.x*be.y-ae.y*be.x);}
double val(P ae){return sqrt(dtp(ae,ae));}
P vresize(P ae,double llen){double v=val(ae);return P(ae.x*llen/v,ae.y*llen/v);}
double ART(P ae,P be){return crp(ae,be)/2.0;}
 P rot(P ae,double ang){return P(ae.x*cos(ang)-ae.y*sin(ang),ae.y*cos(ang)+ae.x*sin(ang));}
int main()
{
       freopen("output.txt","w",stdout);
       freopen("cooking_the_books.txt","r",stdin);
   //ios_base::sync_with_stdio(false);
   long long a,b,c,d,h,m,n,p,x,y,i,j,k,l,q,r,t,cnt,sm,tmp,ind;

    scanf("%lld",&t);
    for(x=1;x<=t;x++)
    {
         vector<long long>v,vp;
        scanf("%lld",&n);
        pf("Case #%lld: ",x);
        if(n==0)
            pf("0 0\n");
        else
        {
            while(n)
            {
                d=n%10;
                vp.push_back(d);
                n=n/10;
            }
            for(i=vp.size()-1;i>=0;i--)
                v.push_back(vp[i]);
            d=0;
            r=1;
            while(r)
            {
                p=v[d];
                r=0;
                ind=d;
                for(i=d+1;i<v.size();i++)
                {
                    if(d==0)
                    {
                        if(v[i]<=p&&v[i]!=0)
                        {
                             ind=i;
                            p=v[i];
                        }
                    }
                    else
                    {
                    if(v[i]<=p)
                    {
                        ind=i;
                        p=v[i];
                    }
                    }
                }
            if(ind!=d)
            {
                tmp=v[ind];
                v[ind]=v[d];
                v[d]=tmp;
            }
            else
            {
                r=1;
                d++;
            }
            if(d==v.size())
                break;
            }
            sm=0;
            for(i=0;i<v.size();i++)
            {
                sm=sm*10+v[i];
            }
            v.clear();
            for(i=vp.size()-1;i>=0;i--)
                v.push_back(vp[i]);
            d=0;
            r=1;
            while(r)
            {
                p=v[d];
                ind=d;
                r=0;
                for(i=d+1;i<v.size();i++)
                {
                    if(v[i]>p)
                    {
                        ind=i;
                        p=v[i];
                    }
                }
            if(ind!=d)
            {
                tmp=v[ind];
                v[ind]=v[d];
                v[d]=tmp;
            }
            else
            {
                r=1;
                d++;
            }
            if(d==v.size())
                break;
            }
            cnt=0;
            for(i=0;i<v.size();i++)
            {
                cnt=cnt*10+v[i];
            }
            v.clear();
            vp.clear();
            pf("%lld %lld\n",sm,cnt);
        }
    }

    return 0;
}
