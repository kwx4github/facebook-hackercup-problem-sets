import sys
# solve1 for min, solve2 for max
def solve1(s, zero = 0):
	if len(s) == 1:
		return s
	t = list(map(int,s))
	t1 = ''
	i = t[::-1].index(min(t))
	i = len(t) - i - 1
	if t[i] == t[0] or t[i] == zero:
		m = ''.join(str(p) for p in t[1:])
		t1 = str(t[0]) + solve1(m, zero = -1)
	else:
		t[0], t[i] = t[i], t[0]
		t1 = ''.join(str(p) for p in t)
	return t1

def solve2(s):
	if len(s) == 1:
		return s
	t = list(map(int,s))
	t2 = ''
	if 0 in t:
		m1 = max(t[1:])
		if m1 == 0:
			t2 = ''.join(str(p) for p in t)
		else:
			u = t[1:][::-1]
			i = u.index(m1)
			i = len(t) - i - 1
			if t[0] != t[i]:
				t[0], t[i] = t[i], t[0]
				t2 = ''.join(str(p) for p in t)
			else:
				m = ''.join(str(p) for p in t[1:])
				t2 = str(t[0]) + solve2(m)
	else:
		i = t[::-1].index(max(t))
		i = len(t) - i - 1
		if t[i] == t[0]:
			m = ''.join(str(p) for p in t[1:])
			t2 = str(t[0]) + solve2(m)
		else:
			t[0], t[i] = t[i], t[0]
			t2 = ''.join(str(p) for p in t)
	return t2

# -----------------------------

sys.stdin = open('cooking_the_books.txt', 'r')
sys.stdout = open('cooking_the_books_out.txt', 'w')


n = int(input())
for x in xrange(1, n+1):
	s = raw_input()
	a, b = solve1(s), solve2(s)
	print 'Case #' + str(x) + ':', a, b