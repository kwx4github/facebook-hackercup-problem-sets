import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.math.BigInteger;
import java.util.StringTokenizer;


/**
 * A. Cooking the Books
 * @author Albert Choi
 */
public class A {
	static BufferedReader _reader = new BufferedReader(new InputStreamReader(System.in));
	static String _s;
	static StringTokenizer _st;
	static int _l;
	static String nline() throws IOException { _s = _reader.readLine(); _st = new StringTokenizer(_s); ++_l; return _s; }
	static int nint() throws IOException { return Integer.parseInt(nword()); }
	static long nlong() throws IOException { return Long.parseLong(nword()); }
	static String nword() throws IOException { return _st.nextToken(); }
	static double ndouble() throws IOException { return Double.parseDouble(nword()); }
	static BigInteger nbig() throws IOException { return new BigInteger(nword()); }
	static PrintStream sout = System.out, serr = System.err;
	
	public static void main(String[] args) throws IOException {
		nline();
		int T = nint();
		
		for (int t=1; t<=T; t++) {
			String sans = doProblem();
			sout.println("Case #" + t + ": " + sans);
		}
	}
	
	static String doProblem() throws IOException {
		nline();
		final int N = nint();
		int min=N, max=N; 
		String s = String.valueOf(N);
		char[] arr = s.toCharArray();

		for (int i=0; i<arr.length; i++) {
			for (int j=0; j<arr.length; j++) {
				if (i==0 && arr[j]=='0') continue;
				if (j==0 && arr[i]=='0') continue;
				char tmp = arr[i];
				arr[i] = arr[j];
				arr[j] = tmp;
				int cand = Integer.parseInt(String.valueOf(arr));
				if (cand > max) max = cand;
				if (cand < min) min = cand;
				arr[j] = arr[i];
				arr[i] = tmp;
			}
		}
		return min+" "+max;
	}

}
