#include <algorithm>
#include <numeric>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <sstream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>
#include <stdio.h>
#include <assert.h>
typedef long long ll;
#define mset(a, val) memset(a, val, sizeof(a))
#define up(i, s, t) for (ll i = (s); i < (t); i += 1)
#define down(i, s, t) for (ll i = (s); i > (t); i -= 1)
#define rd1(a) scanf("%d", &a)
#define rd2(a, b) scanf("%d %d", &a, &b)
#define rd3(a, b, c) scanf("%d %d %d", &a, &b, &c)
#define rd4(a, b, c, d) scanf("%d %d %d %d", &a, &b, &c, &d)
#define pii pair<int, int>

using namespace std;
const int MAXINT = 0x70707070;
const ll MAXLONG = (ll) 1 << 60;

bool cmpLess(int a, int b) {
	return a < b;	
}

bool cmpGreater(int a, int b) {
	return a > b;
}

string calc(string s, bool (*cmp)(int, int)) {
	int n = s.length();
	if (n <= 1) return s;
	for (int i = 0; i < n; i ++) {
		char ca = s[i];
		char cb = s[i], idx = i;
		for (int j = i + 1; j < n; j ++) {
			if (cmp(s[j], ca)) {
				if (s[j] == '0' && i == 0) continue;
				
				if (cmp(s[j], cb)) {
					idx = j;
					cb = s[j];
				}
			}
		}
		if (cmp(cb, ca)) {
			swap(s[i], s[idx]);
			return s;
		}
	}
	return s;
}

int main () {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	int t;
	cin >> t;
	for (int i = 1; i <= t; i ++) {
		printf("Case #%d: ", i);
		string s;
		cin >> s;
		string small = calc(s, cmpLess);
		string big = calc(s, cmpGreater);
		cout << small << " " << big << endl;
	}
	return 0;
}
