#include <bits/stdc++.h>
#include<vector>
#include<string>
#include<stack>
#include<queue>
#include<map>
#include<sstream>
#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<vector>
#include<string>
#include<stack>
#include<queue>
#include<map>
#include<sstream>
#define FOR(i, s, e) for(int i=s; i<e; i++)
#define loop(i, n) for(int i=0; i<n; i++)
#define getint(n) scanf("%d", &n)
#define pb(a) push_back(a)
#define ll long long
#define SZ(a) int(a.size())
#define read() freopen("input.txt", "r", stdin)
#define write() freopen("output.txt", "w", stdout)
#define mem(a, v) memset(a, v, sizeof(a))
#define all(v) v.begin(), v.end()
#define pi acos(-1.0)
#define check printf("t\n")
#define mod abs
#define pf(k) printf("%d\n",k)
#define sf(k) scanf("%d",&k)
#define llpf(k)  printf("%lld\n",k)
#define llsf(k) scanf("%lld",&k)
#define double_sf(k,t) scanf("%d %d",&k,&t)
#define double_pf(k,t) printf("%d %d\n",k,t)
#define Fors(i, sz) for( size_t i = 0; i < sz.size (); i++ )
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define pi acos(-1.0)
#define N 1000

using namespace std;
int main()
{
    //ios_base::sync_with_stdio(false);

    freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int t,t1,k;

    string num,ans,temp_acs,temp_dec,temp;
    char swp;
    sf(t);
    int len,n=0,i=0;
    len=num.length();

    //bool zer0= false;
    for(int c = 1; c <= t; c++)
    {
        bool z= false;
        cin>>num;
        temp_acs = num;
        temp = num;
        sort(temp_acs.begin(), temp_acs.end());
        len=num.length();
        int a=0,n=0;
        while(temp_acs[a] == '0')
        {
            a++;
            z = true;
        }
        while(a < len && n < len)
        {
            if(num[n] == '0')
            {
                n++;
            }
            else if(z && n)
            {

                t1 =  num.find_last_of(temp_acs[0]);

                num[t1] = num[n];
                num[n] = temp_acs[0];

                break;
            }
            else if(num[n] != temp_acs[a])
            {
                t1 =  num.find_last_of(temp_acs[a]);
                num[t1] = num[n];
                num[n] = temp_acs[a];
                break;
            }
            else
            {
                a++;
                n++;
            }

        }

        //cout<<num<<endl;
        a = len-1;
        n = 0;
        while(a >= 0)
        {
            if(temp[n] != temp_acs[a])
            {
                t1 =  temp.find_last_of(temp_acs[a]);
                temp[t1] = temp[n];
                temp[n] = temp_acs[a];
                break;
            }
            else
            {
                a--;
                n++;
            }
        }
        cout<<"Case #" << c << ": " << num << " " << temp << endl;
    }
return 0;
    }

