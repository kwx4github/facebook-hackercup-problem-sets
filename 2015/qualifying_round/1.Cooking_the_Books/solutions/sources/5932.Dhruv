import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class CookingTheBooks {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine());
		String zero="000000000",one="111111111",two="222222222",three="333333333",four="444444444",five="555555555",six="666666666",seven="777777777",eight="888888888",nine="999999999";
		for(int testcase=1;testcase<=t;testcase++) {
			String input = br.readLine().trim();
			char[] nums = input.toCharArray();
			if(nums.length==1) {
				System.out.println("Case #"+testcase+": "+nums[0]+" "+nums[0]);
				continue;
			}
			int digits[] = new int[10];
			for(char c:nums) {
				digits[c-'0']++;
			}
			String possibleMax = nine.substring(0, digits[9])+eight.substring(0,digits[8])+seven.substring(0,digits[7])
					+six.substring(0,digits[6])+five.substring(0,digits[5])+four.substring(0,digits[4])
					+three.substring(0,digits[3])+two.substring(0,digits[2])+one.substring(0,digits[1])+zero.substring(0,digits[0]);
			String possibleMin = one.substring(0,digits[1])+two.substring(0,digits[2])+three.substring(0,digits[3])
					+four.substring(0,digits[4])+five.substring(0,digits[5])+six.substring(0,digits[6])
					+seven.substring(0,digits[7])+eight.substring(0,digits[8])+nine.substring(0, digits[9]);
			possibleMin = possibleMin.substring(0, 1)+zero.substring(0,digits[0])+possibleMin.substring(1);
			
			// calc min
			if(!possibleMin.equals(input)) {
				char tmp[] = possibleMin.toCharArray();
				int i=0;
				while(i<tmp.length && tmp[i]==nums[i])
					i++;
				int j=tmp.length-1;
				while(j>=0 && tmp[i]!=nums[j])
					j--;
				nums[j] = nums[i];
				nums[i] = tmp[i];
				possibleMin="";
				for(char c:nums)
					possibleMin=possibleMin+c+"";
				nums[i] = nums[j];
				nums[j] = tmp[i];
			}
			
			// calc max
			if(!possibleMax.equals(input)) {
				char tmp[] = possibleMax.toCharArray();
				int i=0;
				while(i<tmp.length && tmp[i]==nums[i])
					i++;
				int j=tmp.length-1;
				while(j>=0 && tmp[i]!=nums[j])
					j--;
				nums[j] = nums[i];
				nums[i] = tmp[i];
				possibleMax="";
				for(char c:nums)
					possibleMax=possibleMax+c+"";
				nums[i] = nums[j];
				nums[j] = tmp[i];
			}
			
			System.out.print("Case #"+testcase+": "+possibleMin+" "+possibleMax+"\n");
		}
	}
}
