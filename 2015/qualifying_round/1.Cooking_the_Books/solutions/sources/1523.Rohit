///ROHIT PATIYAL///

#include <iostream>
#include <cstdio>	//for printf and scanf (faster io)
#include <cmath> 	//for logl2() and pow etc math functions
#include <algorithm>	//for sort and other algorithms
#include <vector> 	//for vectors(resizable arrays)
					
using namespace std;

#define lli long long int
#define ull unsigned long long	//(0 - 18446744073709551615) ie (0 - 10x10^19) 	int - 0 to 4294967295 ie (0 - 10^9)
#define rep(i,b) for(i=0;i<b;i++)
#define repab(i,a,b) for(i=a;i<b;i++)
#define printArray(a,size) for(lli z=0;z<size;z++){cout<<a[z]<<endl;};

void swap(string *s, int i, int j){
	char temp = (*s)[i];
	(*s)[i] = (*s)[j];
	(*s)[j] = temp;
}



//max stack size allowed is 10^8
int main(){
	//max stack size allowed is 10^6
	int t, T, q, Q, a, b, A, B, k, K, n, N, L, R, i, j;
	scanf("%d",&T);
	rep(t,T){
		string digits;
		cin>>digits;
		//printArray(digits, digits.size());
		int size = digits.size();
		int swapj = 0;
		int swapi = 0;
		bool done = false;
		for(i=0;i<size;i++){
			char min = digits[i];
			for(j=size-1; j>i; j--){
			//	cout<<digits[j]<<" "<<digits[i]<<" "<<min<<endl;
				
				if((!(i==0 && digits[j] == '0')) && digits[j] < digits[i] && (digits[j]) < min){
					min = digits[j];
					swapj = j;
					swapi = i;
					done = true;
					
				}
			}
			if(done == true)
				break;
		}


		swap(&digits, swapi, swapj);
		printf("Case #%d: ", t+1);
		cout<<digits<<" ";
		swap(&digits, swapi, swapj);


		swapj = 0;
		swapi = 0;

		done = false;
		for(i=0;i<size;i++){
			char max = digits[i];
			for(j=size-1; j>i; j--){
				if(digits[j] > digits[i] && (digits[j]) > max){
					max = digits[j];
					swapj = j;
					swapi = i;
					done = true;
				}
			}
			if(done == true)
				break;
		}
	
		

		swap(&digits, swapi, swapj);
		cout<<digits<<endl;

	}



	return 0;
} 
