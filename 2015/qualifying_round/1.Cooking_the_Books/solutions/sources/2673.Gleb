#include <iostream>
#include <string>
#include <algorithm>

int powers_of_ten[] = {
  1, 10, 100, 1000, 10000, 100000, 1000000,
  10000000, 100000000, 1000000000 };

int solve_min(int n)
{
  std::string number = std::to_string(n);
  int result = n;
  for (int i = 0; i < number.size(); ++i)
  {
    for (int j = 0; j < i; ++j)
    {
      std::swap(number[i], number[j]);
      if (number[0] != '0')
      {
        result = std::min(result, std::stoi(number));
      }
      std::swap(number[i], number[j]);
    }
  }
  return result;
}

int solve_max(int n)
{
  std::string number = std::to_string(n);
  int result = n;
  for (int i = 0; i < number.size(); ++i)
  {
    for (int j = 0; j < i; ++j)
    {
      std::swap(number[i], number[j]);
      if (number[0] != '0')
      {
        result = std::max(result, std::stoi(number));
      }
      std::swap(number[i], number[j]);
    }
  }
  return result;
}

int main()
{
  int t;
  std::cin >> t;
  for (int test_number = 0; test_number < t; ++test_number)
  {
    int n;
    std::cin >> n;
    std::cout << "Case #" << test_number + 1 << ": " <<
      solve_min(n) << " " << solve_max(n) << std::endl;
  }

  return 0;
}
