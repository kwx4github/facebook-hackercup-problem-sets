import java.awt.Point;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.TreeMap;

public class ana {

	static Scanner sc = null;
	 static PrintWriter out = null;
	// static PrintWriter out = new PrintWriter(System.out);

	// static PrintStream out = System.out;

	public static void main(String[] args) {
		try {
			sc = new Scanner(new File("input.txt"));
			out = new PrintWriter(new FileWriter("op.txt"));
		} catch (Exception e) {
		}
		int t = sc.nextInt();
		for (int tt = 1 ; tt <= t ; tt++) {
			String s = sc.next();
			if (s.equals("0")) {
				out.println("Case #"+tt+": "+"0 " + "0");
				continue;
			}
			char[] max = s.toCharArray(), min = s.toCharArray();
			int maxdp[] = new int[max.length], mindp[] = new int[min.length];
			maxdp[max.length - 1] = max.length - 1;
			mindp[min.length - 1] = min.length - 1;
			for (int i = max.length - 2; i >= 0; i--) {
				if (max[i] > max[maxdp[i + 1]])
					maxdp[i] = i;
				else
					maxdp[i] = maxdp[i + 1];
				if (min[i] < min[mindp[i + 1]])
					mindp[i] = i;
				else
					mindp[i] = mindp[i + 1];
			}
			boolean flag = true;
			for (int i = 0; i < max.length && flag; i++) {
				if (max[i] < max[maxdp[i]]) {
					char temp = max[i];
					max[i] = max[maxdp[i]];
					max[maxdp[i]] = temp;
					flag = false;
				}
			}
			flag = true;
			for (int i = (min[mindp[0]] == '0' ? 1 : 0); i < max.length && flag; i++) {
				if (min[i] > min[mindp[i]]) {
					char temp = min[i];
					min[i] = min[mindp[i]];
					min[mindp[i]] = temp;
					flag = false;
				}
			}
			out.println("Case #"+tt+": "+new String(min) + " " + new String(max));
			// System.out.println(new String(min) + " " + new String(max));
		}

		out.close();
	}

	static private class MyScanner {
		BufferedReader br;
		StringTokenizer st;

		public MyScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		public int mod(long x) {
			// TODO Auto-generated method stub
			return (int) x % 1000000007;
		}

		public int mod(int x) {
			return x % 1000000007;
		}

		boolean hasNext() {
			if (st.hasMoreElements())
				return true;
			try {
				st = new StringTokenizer(br.readLine());
			} catch (IOException e) {
				e.printStackTrace();
			}
			return st.hasMoreTokens();
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}

		public long nextLong() {
			return Long.parseLong(next());
		}
	}

}
