#!/usr/bin/python3

from sys import stdin

def main():
	T = int(stdin.readline().strip())
	for nCase in range(1, T+1):
		N = int(stdin.readline().strip())
		print("Case #{}: {}".format(nCase, solve(N)))  

def solve(N):
	resultMin = resultMax = N # N is a feasable candidate for both
	orig = str(N)
	nDigits = len(orig)
	
	# swap all pairs of digits
	for i in range(nDigits - 1): # no new unique swaps for last digit
		for j in range(i + 1, nDigits): # swaps with lower indices already done
			data = list(orig) # mutable copy
			data[i], data[j] = data[j], data[i] # swap
			
			# check rule to avoid leading 0
			if (data[0] == "0"): continue
			
			# transform data to string for parsing
			data = "".join(data)
			
			candidate = int(data)
			resultMin = min(resultMin, candidate)
			resultMax = max(resultMax, candidate)
	
	return str(resultMin) + " " + str(resultMax)

main()
