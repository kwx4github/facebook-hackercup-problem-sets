#include <cstdio>
#include <vector>
#include <algorithm>
#include <utility>

using namespace std;

void intToDigitArray(int n, vector<int>& digitArray) {
  digitArray.clear();
  if (n == 0) {
    digitArray.push_back(0);
    return;
  }

  while (n != 0) {
    digitArray.push_back(n % 10);
    n /= 10;
  }

  reverse(digitArray.begin(), digitArray.end());
}

int digitArrayToInt(const vector<int>& digitArray) {
  int n = 0;

  for (int i = 0; i < digitArray.size(); ++i) {
    n = n * 10 + digitArray[i];
  }

  return n;
}

void swap(vector<int>& arr, int i, int j) {
  int temp = arr[i];
  arr[i] = arr[j];
  arr[j] = temp;
}

pair<int, int> tweakNumber(int n) {
  vector<int> digitArray;
  vector<int> tweakList;

  intToDigitArray(n, digitArray);

  tweakList.push_back(n);

  for (int i = 0; i < digitArray.size(); ++i) {
    for (int j = i + 1; j < digitArray.size(); ++j) {
      if (!i && !digitArray[j]) {
        continue;
      }
      int temp = digitArrayToInt(digitArray);
      swap(digitArray, i, j);
      tweakList.push_back(digitArrayToInt(digitArray));
      swap(digitArray, i, j);
    }
  }

  return pair<int, int>(
    *min_element(tweakList.begin(), tweakList.end()),
    *max_element(tweakList.begin(), tweakList.end())
  );
}

int main(void) {
  int numTest;
  int caseId;
  int n;
  pair<int, int> result;

  scanf("%d", &numTest);
  caseId = 1;

  while (caseId <= numTest) {
    scanf("%d", &n);
    result = tweakNumber(n);
    printf("Case #%d: %d %d\n", caseId, result.first, result.second);
    caseId++;
  }

  return 0;
}
