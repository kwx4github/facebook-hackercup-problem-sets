import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;


public class CookingBooks {

public static String[] findMinMax(int N) throws IOException {
		
	String[] numbers = new String[2];
	
	if (N == 0){
		numbers[0]=numbers[1]="0";
		return numbers;
	}
	
	String numMin = findMin(N);
	
	String numMax = findMax(N);
	
	numbers[0] = numMin.toString();
	numbers[1] = numMax.toString();
	return numbers;
}

public static String findMin(int N){
	char numMin[] = Integer.toString(N).toCharArray();
	
	//find least number except 0 and replace
	
	boolean isFound = false;
	
	for(int i=0;i<numMin.length-1;i++){
		int min = i;
		for(int j=numMin.length-1;j>=i;j--){
					
			if(i==0){
				if(numMin[j] < numMin[min] && numMin[j]!='0'){
					min = j;
					isFound = true;
					}
				else continue;
			}
			else if (numMin[j] < numMin[min]){
				min = j;
				isFound = true;
			}
		}
		if(isFound){
			char tempMax = numMin[min];
			numMin[min] = numMin[i];
			numMin[i] = tempMax;
			return new String(numMin);
		}
	}
	
	return new String(numMin);
}


public static String findMax(int N){
	char numMax[] = Integer.toString(N).toCharArray();
	//find max number except 0 and replace
	
	boolean isFound = false;
	for(int i=0;i<numMax.length-1;i++){
		int max = i;
		for(int j=i+1;j<numMax.length;j++){
			if (numMax[j] > numMax[max]){
				max = j;
				isFound = true;
			}
		}
		if(isFound){
			char tempMax = numMax[max];
			numMax[max] = numMax[i];
			numMax[i] = tempMax;
			return new String(numMax);
		}
	}
	
	
	return new String(numMax);
}
	
	public static void main(String[] args) throws IOException{
		if (0 < args.length){
			String filename = args[0];
		    File file = new File(filename);
		    BufferedReader reader = new BufferedReader(new FileReader(file));
		    String line;
		    int T=0;
		    if((line = reader.readLine()) != null)
		    	T = Integer.parseInt(line.trim());
		    
		    CookingBooks cb = new CookingBooks();
			for (int i=0;i<T;i++){
				int N=0;
				if((line = reader.readLine()) != null)
			    	N = Integer.parseInt(line.trim());
				String[] numbers = cb.findMinMax(N);

				System.out.println("Case #"+(i+1)+": "+numbers[0]+" "+numbers[1]);
			}
		}
	}
}
