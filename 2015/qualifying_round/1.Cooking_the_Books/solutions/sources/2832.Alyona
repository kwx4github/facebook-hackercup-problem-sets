package com.company.Qualification;

import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;

public class Books {

    public static void main(String[] args){
        getArrayFromFile(readFile("cooking_the_books.txt"));
    }

    public static void getArrayFromFile(String s){
        String[] values = s.split("\n");
        int count = Integer.parseInt(values[0]);
        ArrayList<String> results = new ArrayList<>(count);
        for (int i = 1; i <= count; ++i){
            ArrayList<String> res = allSwaps(values[i].toCharArray());
            Collections.sort(res);
            if (res.size() == 0)
                results.add(print(i, values[i], values[i]));
            else if (res.size() == 1)
                results.add(print(i, findMin(res), res.get(0)));
            else
                results.add(print(i, findMin(res), res.get(res.size() - 1)));
        }
        writeToFile(results);
    }

    public static String findMin(ArrayList<String> list){
        String result = "0";
        for (int i = 0; i < list.size(); ++i){
            if (list.get(i).toCharArray()[0] != '0') {
                result = list.get(i);
                break;
            }
        }
        return result;
    }

    public static String print(int caseNum, String min, String max){
        String result = "Case #" + caseNum + ": " + min + " " + max;
        System.out.println(result);
        return result;
    }

    public static void writeToFile(ArrayList<String> list){
        Writer writer = null;
        try {
            writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream("output.txt"), "utf-8"));
            for (String s : list) {
                writer.write(s);
                writer.append("\n");
            }
        } catch (IOException ex) {
            // report
        } finally {
            try {writer.close();} catch (Exception ex) {}
        }
    }


    public static String readFile(String fileName){
        String s = "";
        try {
            BufferedReader br = new BufferedReader(new FileReader(fileName));
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();

            while (line != null) {
                sb.append(line);
                sb.append(System.lineSeparator());
                line = br.readLine();
            }
            s = sb.toString();
        }catch (FileNotFoundException e){
            e.printStackTrace();
        }catch (IOException e){
            e.printStackTrace();
        }
        return s;
    }

    public static ArrayList<String> allSwaps(char[] ar){
        ArrayList<String> result = new ArrayList<>();
        for (int i = 0; i < ar.length; ++i){
            for (int j = 0; j < ar.length; ++j){
                if (ar[i] == '0' && j == 0)
                    continue;
                swap(ar, i, j);
                result.add(new String(ar));
                swap(ar, j, i);
            }
        }
        return result;
    }

    public static void swap(char[] ar, int i, int j){
        Character tmp = ar[i]; ar[i] = ar[j]; ar[j] = tmp;
    }


}
