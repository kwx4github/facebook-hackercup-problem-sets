#include <iostream>
#include <algorithm>
#include <conio.h>
#include <cstdio>
#include <vector>
#include <stack>
#include <deque>
#include <queue>

#define ll long long 
#define ull unsigned long long 
#define mp make_pair
#define INF 1 << 60
#define eb emplace_back

using namespace std;

static class taskA
{
public:
	static int number;

	static void taskA::run()
	{
		int tests;
		scanf("%d", &tests);
		
		
		for (int t = 1; t <= tests; t++)
		{
			int n;
			scanf("%d", &n);
			if (!n)
			{
				cout << "Case #" << t << ": " << n << endl;
				continue;
			}
			int minN = n, maxN = n;
			
			vector <int> a = getN(n);
			vector <int> minA = a, maxA = a;
			
			for (int i = 0; i < a.size(); i++)
			{
					for (int j = i + 1; j < a.size(); j++)
					{
						if ((!i && !a[j])) continue;
						swap(a[i], a[j]);
						int nn = getN(a);
						if (nn > maxN) {
							maxN = nn; maxA = a;
						}
						if (nn < minN) {
							minN = nn; minA = a;
						}
						swap(a[i], a[j]);
					}
			}
			printAns(t, minA, maxA);
			if (t < tests) printf("\n");
		}
	}

	static vector <int> getN(int n)
	{
		int index = 0;
		vector <int> a;
		while (n)
		{
			a.eb(n % 10);
			n /= 10;
		}
		reverse(a.begin(), a.end());
		return a;
	}

	static int getN(vector <int> a)
	{
		int n = 0;
		for (int i = 0; i < a.size(); i++)
		{
			n = n * 10 + a[i];
		}
		return n;
	}

	static void printN(vector <int> a)
	{
		for (int i = 0; i < a.size(); i++)
		{
			printf("%d", a[i]);
		}
	}

	static void printAns(int t, vector <int> minN, vector <int > maxN)
	{
		printf("Case #%d: ", t);
		printN(minN);
		printf(" ");
		printN(maxN);
	}
};

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	taskA::run(); return 0;
}