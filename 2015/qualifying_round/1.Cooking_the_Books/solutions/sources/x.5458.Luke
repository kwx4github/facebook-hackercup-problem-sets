import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;


public class CookingTheBooks {
private static int T;

public static void main(String[] args) {
    	
    	// Open the file
    	FileInputStream fstream;
		try {
			fstream = new FileInputStream("cooking_the_books.txt");
			BufferedReader br = new BufferedReader(new InputStreamReader(fstream));

	    	String strLine;
            int currentLine=1;
        
	    	//Read File Line By Line
	    	while ((strLine = br.readLine()) != null)   {
	    	  // Print the content on the console
	    		
	    	if (currentLine==1){
	    		T= Integer.parseInt(strLine);
   
                System.out.println("Started Process");	
	    	}else{
	    		
	    		//int number[]=new int[strLine.trim().length()];
	    		String[] parts = strLine.split("");
	    		
	    		int[] n1 = new int[parts.length];
	    		//int number[]=new int[strLine.trim().length()];
	    		for(int n = 0; n < parts.length; n++) {
		    		   n1[n] = Integer.parseInt(parts[n]);
		    		}
	    		
	    		String[] parts2 = strLine.split("");
	    		
	    		int[] n2 = new int[parts2.length];
	      		for(int n = 0; n < parts2.length; n++) {
		    		   n2[n] = Integer.parseInt(parts2[n]);
		    		}
	    		
	    		System.out.println("Processing "+(currentLine-1)+" of "+T);	;
	    		writeToFile("Case #"+(currentLine-1)+": "+processSmallNumber(n1)+" "+processLargeNumber(n2));		
	    				
	    	}
	    	
	    	  currentLine++;
	    	}

	    	//Close the input stream
	    	br.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("Parabens..iam done");	    
    }

	public static String processSmallNumber(int arr[]){
	String tempFinalString="";
		int small = arr[0];
		int index = 0;
		for (int i = 0; i < arr.length; i++)
		    if (arr[i] < small&&(arr[i]>0))
		    {
		        small = arr[i];
		        index = i;
		    }
		
		 
	arr[index]=arr[0];
	arr[0]=small;			
	     

           
		for (int i=0;i<arr.length;i++){
			tempFinalString=tempFinalString+arr[i];
		}
		return tempFinalString;
	}
	
	public static String processLargeNumber(int arr[]){
	String tempFinalString="";
		int large = arr[0];
		int index = 0;
		for (int i = 0; i < arr.length; i++)
		    if (arr[i] > large&&(arr[i]>0))
		    {
		        large = arr[i];
		        index = i;
		    }
		
		 
	arr[index]=arr[0];
	arr[0]=large;			
	     

           
		for (int i=0;i<arr.length;i++){
			tempFinalString=tempFinalString+arr[i];
		}
		return tempFinalString;
	}
	
	
    private static final String newLine = System.getProperty("line.separator");

    private static synchronized void writeToFile(String msg)  {
        String fileName = "cooking_the_books_output.txt";
        PrintWriter printWriter = null;
        File file = new File(fileName);
        try {
            if (!file.exists()) file.createNewFile();
            printWriter = new PrintWriter(new FileOutputStream(fileName, true));
            printWriter.write(msg+newLine);
        } catch (IOException ioex) {
            ioex.printStackTrace();
        } finally {
            if (printWriter != null) {
                printWriter.flush();
                printWriter.close();
            }
        }
    }
}
