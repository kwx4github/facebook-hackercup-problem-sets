#include <stdio.h>
#include <stdlib.h>
#include <string.h>

const MAX_SIZE = 999999999;

int ascFunc (const void * a, const void * b)
{
   return ( *(char*)a - *(char*)b );
}

int descFunc (const void * a, const void * b)
{
   return ( *(char*)b - *(char*)a );
}

int main() {

	int numCases = 0;
	scanf("%d\n", &numCases);

	char **cases = (char**)malloc(sizeof(char*) * numCases);
	char **minCases = (char**)malloc(sizeof(char*) * numCases);
	char **maxCases = (char**)malloc(sizeof(char*) * numCases);

	int i;
	for (i = 0; i < numCases; i++) {
		cases[i] = (char*)malloc(sizeof(char) * MAX_SIZE);

		int j = 0;
		char c;
		while ((c = getchar()) != '\n') {
			cases[i][j++] = c;
		}
		cases[i][j] = '\0';

		minCases[i] = (char*)malloc(sizeof(char) * strlen(cases[i]));
		qsort(cases[i], j, sizeof(char), ascFunc);
		strcpy(minCases[i], cases[i]);
		
		maxCases[i] = (char*)malloc(sizeof(char) * strlen(cases[i]));
		qsort(cases[i], j, sizeof(char), descFunc);
		strcpy(maxCases[i], cases[i]);
	}	



	for (i = 0; i < numCases; i++) {
		int numLeftZeros = strspn(minCases[i], "0");
		if (numLeftZeros > 0) {
			printf("Case #%d: %s %s\n", i+1, maxCases[i], maxCases[i]);
		} else {
			printf("Case #%d: %s %s\n", i+1, minCases[i], maxCases[i]);
		}
		
	}

	return 0;
}
