#include<stdio.h>
void bubblesort(int a[],int n)
{
    int i,j,temp;
    for ( i = 0 ; i<n ; i++ )
    for ( j =0; j<(n-1)-i ; j++ )
    if ( a[j] > a[j + 1] )
    {
        temp = a[j];
        a[j] = a[j + 1];
        a[j + 1]= temp;
    }
}
int main()
{
    int t,j;
    scanf("%d",&t);
    for(j=1;j<=t;j++)
    {
        long int n,m,l,s;
        scanf("%ld",&n);
        int a[10],b[10],c[10],i;
        i=0;
        m=n;
        while(m>0)
        {
            a[i]=m%10;
            m=m/10;
            i++;
        }
        int k;
        for(k=0;k<i;k++)
        {
            b[k]=a[k];
            c[k]=a[k];
        }
        if(n<=101)
        {
            l=n;
            s=n;
            printf("Case #%d: %ld %ld\n",j,s,l);
        }
        else
        {
            int s;
            bubblesort(a,i);
            for(k=i-1;k>=0;k--)
            {
                if(a[k]!=b[k])
                {
                    s=b[k];
                    b[k]=a[k];
                    int kk;
                    for(kk=k-1;kk>=0;kk--)
                    {
                        if(b[kk]==a[k])
                        {
                            b[kk]=s;
                            break;
                        }
                    }
                    break;
                }
            }
            if(a[0]==0)
            {
                int l,s;
                for(k=0;k<i;k++)
                {
                    if(a[k]!=0)
                    {
                        l=a[k];
                        break;
                    }

                }
                if(c[i-1]!=l)
                {
                    s=c[i-1];
                    c[i-1]=l;
                    for(k=0;k<i-1;k++)
                    {
                        if(c[k]==l)
                        {
                            c[k]=s;
                            break;
                        }
                    }
                }
                else
                {
                    int kk,ll;
                    for(kk=2;kk<k+2;kk++)
                    {
                        if(c[i-kk]!=0)
                            break;
                    }
                    if(kk==k+2)
                    {
                        ll=k;
                        for(k=i-2-ll;k>=0;k--)
                        {
                            if(a[i-1-k]!=c[k])
                            {
                                s=c[k];
                                c[k]=a[i-1-k];
                                    int kk;
                                for(kk=0;kk<k;kk++)
                                {
                                    if(c[kk]==a[i-1-k])
                                    {
                                        c[kk]=s;
                                        break;
                                    }
                                }
                                break;

                            }
                        }

                    }
                    else
                    {
                        int s;
                        s=c[i-kk];
                        c[i-kk]=0;
                        for(k=0;k<i-kk;k++)
                        {
                            if(c[k]==0)
                            {
                                c[k]=s;
                                break;
                            }
                        }
                    }
                }
            }
            else
            {
                for(k=i-1;k>=0;k--)
                {
                    if(a[i-1-k]!=c[k])
                    {
                        s=c[k];
                        c[k]=a[i-1-k];
                            int kk;
                        for(kk=0;kk<k;kk++)
                        {
                            if(c[kk]==a[i-1-k])
                            {
                                c[kk]=s;
                                break;
                            }
                        }
                        break;

                    }
                }
            }

            printf("Case #%d: ",j);
            for(k=i-1;k>=0;k--)
                printf("%d",c[k]);
                printf(" ");
            for(k=i-1;k>=0;k--)
                printf("%d",b[k]);
                printf("\n");
        }
    }
    return 0;
}
