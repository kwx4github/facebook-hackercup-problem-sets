package FBHackerCup;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.Scanner;

public class CookingTheBooks {

	public static void main(String[] args) throws IOException {
		final Scanner sc = new Scanner(new File("/Users/rglez/Desktop/input.txt"));
		
		BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(
		          new FileOutputStream("/Users/rglez/Desktop/output.txt")));
		
		int t = sc.nextInt();

		char[] min;
		char[] max;
		for (int c = 1; c <= t; c++) {
			final String num = String.valueOf(sc.nextInt());
			final int len = num.length();
			final char[] number = new char[len];
			for (int i = 0; i < len; i++) {
				number[i] = num.charAt(i);
			}
			min = Arrays.copyOf(number, len);
			max = Arrays.copyOf(number, len);
			
			for (int k1 = 0; k1 < len; k1 ++) {
				for (int k2 = k1 + 1; k2 < len; k2 ++) {
					// First line and number zero
					if (k1 == 0 && number[k2] == '0') {
						continue;
					}
					
					// Swap
					char temp = number[k1];
					number[k1] = number[k2];
					number[k2] = temp;
					
					Min(min, number);
					Max(max, number);
					
					// Restore
					temp = number[k1];
					number[k1] = number[k2];
					number[k2] = temp;
				}
			}
			
			writer.write("Case #" + c + ": " + String.copyValueOf(min) + " " + String.copyValueOf(max));
			writer.newLine();
		}
		
		sc.close();
		writer.close();
	}

	private static void Max(char[] max, char[] number) {
		int len = number.length;
		for (int i = 0; i < len; i++) {
			if (number[i] > max[i]) {
				copy(max, number);
				break;
			}
			if (number[i] < max[i]) {
				break;
			}
		}
	}

	private static void Min(char[] min, char[] number) {
		int len = number.length;
		for (int i = 0; i < len; i++) {
			if (number[i] < min[i]) {
				copy(min, number);
				break;
			}
			if (number[i] > min[i]) {
				break;
			}
		}
	}

	private static void copy(char[] min, char[] number) {
		int len = number.length;
		for (int i = 0; i < len; i++) {
			min[i] = number[i];
		}
	}

}
