#include <cstdio>
#include <algorithm>
#include<iostream>
#include<vector>
#include<climits>
#include <complex>
#include <iostream>
#include <valarray>
#include<cstring>
#include<queue>
#include<bitset>
#include<map>
#include<set>
#include<sstream>
#include<ctime>
#include <stack>
#include <iomanip>
#include <cassert>
#include<cmath>


using namespace std;


#define PB push_back
#define i64 long long
#define FOR(i,a,b) for(i=(a);i<(b);++i)
#define FORE(i,a,b) for(i=(a);i<=(b);++i)
#define REP(i,n) FOR(i,0,n)
#define REPE(i,n) FORE(i,0,n)
#define SZ(v) ((v).size())
#define LD long double
#define VI vector<int>
#define VS vector<string>
#define VD vector<double>
#define VLD vector<LD>
#define MSET(x,y) memset((x),(y),sizeof(x))
#define SZOF(x) sizeof((x))
#define VVI vector< VI >
#define PII pair< int,int >
#define VPII vector< PII >
#define MP make_pair
#define PIPII pair<int, PII >
#define PIPIPII pair< int, PIPII >
#define u64 unsigned i64
#define Vi64 vector<i64>
#define Vu64 vector<u64>

#define MAXN 22
char arr[MAXN];
char mx[MAXN],mn[MAXN];
VI pos[10];

void MAIN()
{
    int cases;
    scanf("%d",&cases);
    int lenn;
    int i;

    for(int t=1;t<=cases;++t)
    {
        scanf("%s",arr);
        lenn=strlen(arr);
        for(i=0;i<10;++i)
        {
            pos[i].clear();
        }

        for(i=0;i<lenn;++i)
        {
            pos[arr[i]-'0'].PB(i);
        }

        if(lenn==1)
        {
            strcpy(mx,arr);
            strcpy(mn,arr);
        }
        else
        {
            for(i=1;i<10;++i)
            {
                if(pos[i].size())
                {
                    break;
                }
            }

            strcpy(mn,arr);
            if(arr[0]<=i+'0')
            {
                strcpy(mn,arr);
            }
            else
            {
                swap(mn[0],mn[pos[i][pos[i].size()-1]]);
            }




            strcpy(mx,arr);


            for(i=9;i>0;--i)
            {
                if(pos[i].size())
                {
                    break;
                }
            }
            if(arr[0]>=i+'0')
            {
                strcpy(mx,arr);
            }
            else
            {
                swap(mx[0],mx[pos[i][pos[i].size()-1]]);
            }
        }

        printf("Case #%d: %s %s\n",t,mn,mx);
    }
}

int main()
{
    freopen("Cooking the Books.in","r",stdin);
    freopen("Cooking the Books.out","w",stdout);

    MAIN();
    return 0;
}




