import java.io.*;
import java.util.*;

public class A{

	
	public static void main(String[] args){
		
		//Scanner k = new Scanner(new File("E:/cooking_the_books.txt"));
		FI k = new FI(System.in);
		FO z = new FO();
		//PrintWriter z = new PrintWriter(new FileWriter("E:/output.txt"));
		
		
		int T = k.nextInt();
		int test = 1;
		while(T-->0){
			int n = k.nextInt();
			if(n == 0){
				z.println("Case #"+(test++)+": 0 0");
			}
			else{
				String s = n+"";
				StringBuilder minAns = new StringBuilder(s);
				StringBuilder maxAns = new StringBuilder(s);
				char [] y = s.toCharArray();
				int size = y.length;
				int maxpos = -1;
				int minpos = -1;
				char max = '0';
				char min = '9';
				for(int c = 0;c<size;c++){
					if(y[c]>=max && y[c] != '0'){
						max = y[c];
						maxpos = c;
					}
					
					if(y[c]<=min && y[c] != '0'){
						min = y[c];
						minpos = c;
					}
				}
				
				
				minAns.setCharAt(minpos,y[0]);
				minAns.setCharAt(0,y[minpos]);
				
				
				maxAns.setCharAt(maxpos,y[0]);
				maxAns.setCharAt(0,y[maxpos]);
				
				z.println("Case #"+(test++)+": "+minAns+" "+maxAns);
				
				
				
			}
			
		}
		z.flush();

	
	
	
	
	}
	

	
    public static class FI{
        InputStream in; byte b; byte[] buf; int bi, bz;
        FI(InputStream I) { in=I; buf=new byte[65536]; bi=bz=0; read(); }
        void skip() { while (b >= 0 && b <= 32) read(); }
        void read() {
            if (bi==bz) {
                bi=0; try { bz=in.read(buf); } catch(Exception e) { bz=-1; } }
            b = bz == -1 ? -1 : buf[bi++];  }
        // Optional methods
        boolean hasNext() { skip(); return b >= 0; }
        String next() {
            StringBuilder sb = new StringBuilder();
            for (skip(); b > 32; read()) sb.append((char)b);
            return sb.length() == 0 ? null : sb.toString(); }
        int nextInt() {
            int i=0; boolean s=false; skip();
            if (b == '-') { s=true; read(); }
            for (; b > 32; read()) i = i*10 + b-48; return s ? -i : i; }
        long nextLong() {
            long i=0; boolean s=false; skip();
            if (b == '-') { s=true; read(); }
            for (; b > 32; read()) i = i*10 + b-48; return s ? -i : i; }
        String nextLine() {
            StringBuilder sb = new StringBuilder();
            for (; b != 10 && b != 13; read()) sb.append((char)b);
            while (b == 10 || b == 13) read(); return sb.toString(); }
        String nextRealLine() {
            StringBuilder sb = new StringBuilder();
            for (; b != 10 && b != 13; read()) sb.append((char)b);
            byte p = b; read();
            if ((p == 10 && b == 13) || (p == 13 && b == 10)) read();
            return sb.toString(); }
    }
   
   
    public static class FO extends PrintWriter {
        FO() { super(new BufferedOutputStream(System.out)); }
    }


}