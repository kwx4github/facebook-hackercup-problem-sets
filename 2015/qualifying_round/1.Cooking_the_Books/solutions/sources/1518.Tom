import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.IntSummaryStatistics;

/**
 * Created by Tom Wu on 1/8/15.
 */
public class Cooking {

    private static int[] solveTestCase(String number) {
        int minMax[] = new int[2];
        minMax[0] = Integer.parseInt(number);
        minMax[1] = minMax[0];

        for (int i = 0; i < number.length(); i++) {
            for (int j = 0; j < i; j++){
                char digits[] = number.toCharArray();

                char temp = digits[i];
                digits[i] = digits[j];
                digits[j] = temp;
                String newNumber = new String(digits);
                int newInt = Integer.parseInt(newNumber);

                if (newInt > minMax[1]) {
                    minMax[1] = newInt;
                }
                if (newInt < minMax[0] && digits[0] != '0') {
                    minMax[0] = newInt;
                }
            }
        }

        return minMax;
    }

    private static void solveAllCases(String input, String output) {
        BufferedReader reader;
        PrintWriter writer;

        try {
            reader = new BufferedReader(new FileReader(input));
            writer = new PrintWriter(output, "UTF-8");

            // Total number of cases
            int numTestCases = Integer.parseInt(reader.readLine());

            System.out.println("Total cases = " + numTestCases);

            for (int testCase = 1; testCase <= numTestCases; testCase++) {
                int minMax[] = solveTestCase(reader.readLine());
                writer.println("Case #" + testCase + ": " + minMax[0] + " " + minMax[1]);
            }

            reader.close();
            writer.close();

        } catch (Exception e) {
            System.err.println(e);
        }

    }

    public static void main(String argv[]) {
        System.out.println("Started");

        solveAllCases("input.txt", "output.txt");

        System.out.println("Finished");
    }
}
