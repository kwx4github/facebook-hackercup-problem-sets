#!/usr/bin/ruby
def lowest(n, l)
	[n.to_i, *l.times.to_a.combination(2).map{|i, j|
		t = swap(n, i, j)
		if t[0] == '0' then n.to_i else t.to_i end
	}].min or n.to_i
end

def highest(n, l)
	[n.to_i, *l.times.to_a.combination(2).map{|i, j|
		t = swap(n, i, j)
		if t[0] == '0' then n.to_i else t.to_i end
	}].max or n.to_i
end

def swap(n, i, j)
	n[0...i] + n[j] + n[(i+1)...j] + n[i] + n[(j+1)..-1]
end

gets.strip.to_i.times.each do |c|
	n = gets.strip
	l = n.size
	puts "Case ##{c+1}: #{lowest(n, l)} #{highest(n, l)}"
end