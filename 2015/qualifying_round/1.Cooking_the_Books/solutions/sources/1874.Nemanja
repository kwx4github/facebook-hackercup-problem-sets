#include<fstream>
#include<iostream>

using namespace std;

ifstream fin;
ofstream fout;

string _swap(string s, int i, int j) {
    char p;

    p = s[i];
    s[i] = s[j];
    s[j] = p;

    return s;
}

string smaller(string a, string b) {
    for(int i = 0; i < a.length(); i++) {
        if(a[i] == b[i]) continue;
        if(a[i] > b[i]) return b;
        if(a[i] < b[i]) return a;
    }
    return a;
}

string larger(string a, string b) {
    for(int i = 0; i < a.length(); i++) {
        if(a[i] == b[i]) continue;
        if(a[i] < b[i]) return b;
        if(a[i] > b[i]) return a;
    }
    return a;
}

void solve(int k) {
    string n, _min, _max;
    fin >> n;
    if(n == "0") {
        fout << "Case #" << (k + 1) << ": 0 0" << endl;
        return;
    }
    _min = _max = n;

    for(int i = 0; i < n.length() - 1; i++) {
        for(int j = i + 1; j < n.length(); j++) {
            string _smaller, _larger;
            _smaller = smaller(_min, _swap(n, i, j));
            _larger = larger(_max, _swap(n, i, j));
            if(_smaller[0] != '0')
                _min = _smaller;
            if(_larger[0] != '0')
                _max = _larger;
        }
    }

    fout << "Case #" << (k + 1) << ": " << _min << " " << _max << endl;
}

int main() {
    int T;

    fin.open("input1.txt");
    fout.open("output1.txt");
    fin >> T;
    for(int i = 0; i < T; i++) {
        solve(i);
    }
    fin.close();
    fout.close();

    return 0;
}
