# -*- coding: utf-8 -*-
"""
Created on Fri Jan 09 12:37:17 2015

@author: Koen
"""

file_name = "cooking_the_books_input.txt"

# find minimum digit, not including 0
def my_min(input):
    min = input[0]
    for i in input:
        if i < min and not i == '0':
            min = i
    return min
    
def find_min(input):
    m = my_min(input)
    min_pos = [i for i, j in enumerate(input) if j == m]
    if min_pos:
        min_number = list(input)
        min_number[0], min_number[min_pos[0]] = min_number[min_pos[0]] , min_number[0]
        min_number = ''.join(min_number)
        return min_number
    return input
    
def find_max(input):
    m = max(input)
    max_pos = [i for i, j in enumerate(input) if j == m]
    if max_pos:
        max_number = list(input)
        max_number[0], max_number[max_pos[0]] = max_number[max_pos[0]] , max_number[0]
        max_number = ''.join(max_number)
        return max_number
    return input
    

def tweak_number(input):    
    
    # find min by finding lowest digit and swapping with first digit
    min_number = find_min(input)
    
    #find max by finding highest digit and swapping with first digit
    max_number = find_max(input)
    return min_number, max_number
    

lines = [line.strip() for line in open(file_name)]

if lines:
    items = lines.pop(0)

    for i, line in enumerate(lines):
        min_number, max_number = tweak_number(line)
        print "Case #"+ str(i+1)+":", min_number, max_number
else:
    print "No lines in input file!"