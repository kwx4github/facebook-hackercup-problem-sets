#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <algorithm>	// require sort next_permutation count __gcd reverse etc.
#include <cstdlib>	// require abs exit atof atoi 
#include <cstdio>		// require scanf printf
#include <functional>
#include <numeric>	// require accumulate
#include <cmath>		// require fabs
#include <climits>
#include <limits>
#include <cfloat>
#include <iomanip>	// require setw
#include <sstream>	// require stringstream 
#include <cstring>	// require memset
#include <cctype>		// require tolower, toupper
#include <fstream>	// require freopen
#include <ctime>		// require srand
#define rep(i,n) for(int i=0;i<(n);i++)
#define ALL(A) A.begin(), A.end()

using namespace std;

typedef long long ll;
typedef pair<int, int> P;

int s2i (string s ){
	stringstream ss(s);
	int res;
	ss >> res;
	return res;
}

string i2s (int n ){
	stringstream ss;
	ss << n;
	return ss.str();
}

P solve (string s ){
	P res = P(1000000000, 0 );
	int n = s.length();
	rep (i, n ){
		for (int j = 1; j < n; j++ ){
			string t = s;
			if (i == 0 && t[j] == '0' ) continue;
			swap (t[i], t[j] );
			int cand1 = s2i(t);
			res.first = min (res.first, cand1 );
			res.second= max (res.second, cand1 );
		} // end for
	} // end rep

	return res; 
}

int main()
{
	ios_base::sync_with_stdio(0);
	int T; cin >> T;

	rep (i, T ){
		string s; cin >> s;
		string small = "", large = "";
		if (s.length() == 1 ){
			large += s[0], small += s[0];
		}else{
			P res = solve (s );
			small = i2s(res.first );
			large = i2s(res.second );
		} // end if
		cout << "Case #"<< i+1 << ": " << small << ' ' << large << endl;
	} // end rep

	return 0;
}
