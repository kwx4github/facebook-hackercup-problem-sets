/* @author KARTIK KESHRI */
#include<bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include <math.h>
#include <string.h>
#include <limits.h>
#include <assert.h>
using namespace std;
#define get getchar//_unlocked
#define mod 1000000007
#define KARTIK main()
#define s(n) scanf("%d",&n)
#define p(n) printf("%d\n",n)
#define ss(n) scanf("%lld",&n)
#define pp(n) printf("%lld\n",n)
#define sss(n) scanf("%llu",&n)
#define ppp(n) printf("%llu\n",n)
#define st(s) scanf("%s",s)
#define pst(s) printf("%s\n",s)
#define bitcnt(x) __builtin_popcountll(x)
#define fo(i,x,n) for(long long i=x;i<=(n);i++)
#define fob(i,x,n) for(int i=long long(n);i>=x;i--)
#define sett(a,x) memset(a,x,sizeof(a)) //0 or -1
#define fill(ar,x,a,n) for(int i=a;i<=n;i++) ar[i]=x;
#define all(v) (v).begin(),(v).end()
#define tr(v,it) for(typeof(v) it=v.begin();it!=v.end();it++)
#define maxi(a,x,n) *max_element(a+x,a+n+1)
#define mini(a,x,n) *min_element(a+x,a+n+1)
#define mp(x,y) make_pair(x,y)
#define present(v,x) find(all(v),x)//-v.begin() give index
#define pb push_back
#define add(v) evaculate(all(v),(long long)0)
#define multiply(v) accumulate(all(v), long long(1), multiplies<long long>());
#define sqr(x) x*x
#define wh() int t; for(int i=0;i<t;i++)
#define MAX INT_MAX
typedef unsigned long long int llu;
typedef long long int ll;
typedef vector<ll> vi;
typedef pair<ll,ll> pi;
//const long double pi=3.1415926535897932384626433832795;

ll inp()
{
	ll n=0,s=1;
	char c;
	for(c=get();c<48||c>58;c=get())
	if(c=='-')s=-1;
	for(;c>47&&c<59;c=get())
	n=n*10+c-48;
	return n*s;
}
ll gcd(ll a,ll b)
{
     if(b==0)
     return a;
     else return gcd(b,a%b);
}


ll square(ll n) { return n*n; }

ll bigmod(ll b,ll p,ll m) {
if (p == 0)
return 1;
else if (p%2 == 0)
return square(bigmod(b,p/2,m)) % m; // square(x) = x * x
else
return ((b % m) * bigmod(b,p-1,m)) % m;
}

long long mulmod(long long a,long long b,long long c){
    long long x = 0,y=a%c;
    while(b > 0){
        if(b%2 == 1){
            x = (x+y)%c;
        }
        y = (y*2)%c;
        b /= 2;
    }
    return x%c;
}

ll a[50];
vector<ll>v,v1;
int KARTIK
{
 ll t,i,j,x,y,n,m,k,sum=0,ab,mi,ma;
 freopen("cooking_the_books.txt","r",stdin);
 freopen("out2.txt","w",stdout);
 ss(t);
 for(k=1;k<=t;k++)
 {
    mi=LONG_LONG_MAX;
    ma=LONG_LONG_MIN;

    ss(n);
    if(n==0)
    {
            printf("Case #%lld: 0 0\n",k);
            continue;
    }
    ab=n;
    while(ab>0)
    {
        v.pb(ab%10);
        ab/=10;
    }
    reverse(all(v));
    for(i=0;i<v.size();i++)
    {
        v1.pb(v[i]);
        if(mi>v[i]&&v[i]!=0)
        {
            mi=v[i];
            x=i;
        }
        if(ma<v[i])
        {
            ma=v[i];
            y=i;
        }

    }
   // cout<<x<<" "<<y<<"\n";
    swap(v[0],v[x]);
    swap(v1[0],v1[y]);
    printf("Case #%lld: ",k);
    for(i=0;i<v.size();i++) cout<<v[i];
    cout<<" ";
    for(i=0;i<v1.size();i++) cout<<v1[i];
    cout<<"\n";
    v.clear();
    v1.clear();
 }
// fclose(stdout);
 return 0;
}

