package com.olessavluk;

import com.sun.tools.javac.util.Pair;

import java.io.*;
import java.util.Scanner;

public class Main {

    public static Pair<String, String> permutation(String n) {
        StringBuilder smin = new StringBuilder(n), smax = new StringBuilder(n);
        int min, max;

        //max
        for (int i = 0; i < n.length(); i++) {
            max = i;
            for (int j = i + 1; j < n.length(); j++) {
                max = n.charAt(j) >= n.charAt(max) ? j : max;
            }

            if (n.charAt(i) < n.charAt(max)) {
                char tmp = smax.charAt(i);
                smax.setCharAt(i, smax.charAt(max));
                smax.setCharAt(max, tmp);
                break;
            }
        }

        //min
        for (int i = 0; i < n.length(); i++) {
            min = i;
            for (int j = i + 1; j < n.length(); j++) {
                boolean zeroCheck = n.charAt(j) != '0' || i!= 0;
                boolean lessCheck = n.charAt(j) <= n.charAt(min);
                min = (zeroCheck && lessCheck) ? j : min;
            }

            if (n.charAt(i) > n.charAt(min)) {
                char tmp = smin.charAt(i);
                smin.setCharAt(i, smin.charAt(min));
                smin.setCharAt(min, tmp);
                break;
            }
        }

        return new Pair<String, String>(smin.toString(), smax.toString());
    }

    public static void main(String[] args) {
        try {
            Scanner input = new Scanner(new InputStreamReader(
                    new FileInputStream("src/com/olessavluk/resources/in.txt"), "UTF-8")); //.useLocale(Locale.US);

            PrintWriter output = new PrintWriter(new File("src/com/olessavluk/resources/out.txt"));

            int N = input.nextInt();
            input.nextLine();

            String number;
            for (int i = 1; i <= N; i++) {
                number = input.nextLine();
                Pair res = permutation(number);
                output.println("Case #" + i + ": " + res.fst + " " + res.snd);
            }

            output.close();
            input.close();
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }
}
