using System;
using System.IO;
using System.Collections.Generic;
using System.Text;
class FHackerCup
{
    public static void Main()
    {
        //read a file
        string[] txt = File.ReadAllLines("input.txt");
        int t = int.Parse(txt[0]);
        int lineNumber = 1;
        StringBuilder sb = new StringBuilder();
        while (t-- > 0)
        {
            long n = long.Parse(txt[lineNumber]);
            sb.AppendFormat("Case #{0}: ", lineNumber);
            if (n == 0)
            {
                sb.Append("0 0");
                sb.AppendLine();
            }
            else
            {
                //get all digits 
                List<int> digits = new List<int>();
                while (n > 0)
                {
                    long digit = n % 10;
                    digits.Add((int)digit);
                    n = n / 10;
                }
                // 
                int leftmostdigit = digits[digits.Count - 1];
                int expos = digits.Count - 1;
                int maxdigit = leftmostdigit;
                for (int i = 0; i < digits.Count - 1; i++)
                {
                    if (digits[i] > maxdigit)
                    {
                        maxdigit = digits[i];
                        expos = i;
                    }
                }
                var maxDigitList = new List<int>();
                foreach (var d in digits)
                {
                    maxDigitList.Add(d);
                }
                int temp = maxDigitList[maxDigitList.Count - 1];
                maxDigitList[maxDigitList.Count - 1] = maxDigitList[expos];
                maxDigitList[expos] = temp;
                int exposmin = digits.Count - 1;
                int mindigit = leftmostdigit;
                for (int i = 0; i < digits.Count - 1; i++)
                {
                    if (digits[i] < mindigit && digits[i] != 0)
                    {
                        mindigit = digits[i];
                        exposmin = i;
                    }
                }
                temp = digits[digits.Count - 1];
                digits[digits.Count - 1] = digits[exposmin];
                digits[exposmin] = temp;
                
                digits.Reverse();
                foreach (var d in digits)
                {
                    sb.Append(d);
                }
                sb.Append(" ");
                maxDigitList.Reverse();
                foreach (var d in maxDigitList)
                {
                    sb.Append(d);
                }
                
                
                sb.AppendLine();
            }
            lineNumber++;
        }
        File.WriteAllText("output.txt", sb.ToString());

    }
}