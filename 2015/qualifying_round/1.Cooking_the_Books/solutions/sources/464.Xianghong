#include<stdio.h>
#include<string.h>

char s[16];
int l;

bool cmp(char s1[16],char s2[16])
{
  int i;
  for (i=0;i<l;i++)
    if (s1[i]!=s2[i]) break;
  return s1[i]<s2[i];
}

void solve()
{
  char res1[16];
  char res2[16];
  l=strlen(s);
  memcpy(res1,s,l);
  memcpy(res2,s,l);
  res1[l]='\0';
  res2[l]='\0';
  if (l==1)
  {
    printf("%s %s\n",res1,res2);
    return;
  }
  int i,j;
  for (i=0;i<l;i++)
    for (j=i+1;j<l;j++)
      if (!(i==0&&s[j]=='0'))
      {
        char cc=s[i];
        s[i]=s[j];
        s[j]=cc;
        if (cmp(s,res1)) memcpy(res1,s,l);
        if (cmp(res2,s)) memcpy(res2,s,l);
        s[j]=s[i];
        s[i]=cc;
      }
  printf("%s %s\n",res1,res2);
}

int main()
{
  freopen("/usr/local/google/home/lxhgww/Downloads/cooking_the_books.txt","r",stdin);
  freopen("/usr/local/google/home/lxhgww/Downloads/cooking_the_books_output.txt","w",stdout);
  int t,p;
  scanf("%d",&t);
  for (p=1;p<=t;p++)
  {
    scanf("%s",s);
    printf("Case #%d: ",p);
    solve();
  }
}

