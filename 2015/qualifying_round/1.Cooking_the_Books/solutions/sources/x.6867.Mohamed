using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace FBCup
{
    class Program
    {
        static void Main(string[] args)
        {
            StreamReader reader = new StreamReader("cooking_the_books.txt");
            StreamWriter writer = new StreamWriter("cooking_the_books_output.txt");
            string[] input = reader.ReadToEnd().Split('\n');
            int testCaseCount = int.Parse(input[0]);
            for (int i = 0; i < testCaseCount; i++)
            {
                int min = 0, max = 0, minIndex = 0, maxIndex = 0;
                char[] digits = input[i + 1].ToCharArray();
                string largest = input[i + 1], smallest = input[i + 1];
                for (int j = 0; j < digits.Length; j++)
                {
                    int currentDigit = int.Parse(digits[j].ToString());
                    max = min = currentDigit;
                    for (int k = j + 1; k < digits.Length; k++)
                    {
                        int tempDigit = int.Parse(digits[k].ToString());
                        if (min >= tempDigit && tempDigit != 0)
                        { min = tempDigit; minIndex = k; }
                        if (max <= tempDigit)
                        { max = tempDigit; maxIndex = k; }
                    }
                    if (max != currentDigit && largest.Equals(input[i + 1]))
                        largest = SwapCharacters(digits, j, maxIndex);
                    if (min != currentDigit && smallest.Equals(input[i + 1]))
                        smallest = SwapCharacters(digits, j, minIndex);
                    if (!smallest.Equals(input[i + 1]) && !largest.Equals(input[i + 1]))
                        break;
                }
                writer.WriteLine("Case #" + (i + 1) + ": " + smallest + " " + largest);
            }
            writer.Flush();
            writer.Close();
        }

        static string SwapCharacters(char[] digits, int position1, int position2)
        {
            char[] array = (char[])digits.Clone();
            char temp = array[position1];
            array[position1] = array[position2];
            array[position2] = temp;
            return new string(array);
        }
    }
}
