#include <stdio.h>
#include <algorithm>
int cas, n, len, max, min;
int dig[10];
int d2n() {
    if (!dig[len-1]) return -1;
    int ans = 0;
    for (int i=len-1; i>= 0; i--) ans = ans * 10 + dig[i];
    return ans;
}
int main() {
    scanf("%d", &cas);
    for (int iii=0; iii<cas; iii++) {
        scanf("%d", &n);
        max = n;
        min = n;
        len = 0;
        while (n) {dig[len++] = n%10; n = n/10;}
        for (int d1 = 0; d1<len; d1++) {
            for (int d2 = d1+1; d2<len; d2++) {
                std::swap(dig[d1], dig[d2]);
                int v = d2n();
                if (v!=-1) {
                    min = std::min(min, v);
                    max = std::max(max, v);
                }
                std::swap(dig[d1], dig[d2]);
            }
        }
        printf("Case #%d: %d %d\n", iii+1, min, max);
    }
    return 0;
}