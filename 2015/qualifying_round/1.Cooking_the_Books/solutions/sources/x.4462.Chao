#!/usr/bin/python

import sys

def new_value(digits, i, j, lend):
    # swap digits
    tmp         = digits[i]
    digits[i]   = digits[j]
    digits[j]   = tmp

    # get new integer
    ans = 0
    for i in range(0, lend):
        ans = ans * 10 + digits[i]

    return ans
    

def swap_dig(n):
    # get digit array, most significant digit is in low index
    digits  = []
    x       = n
    while x > 0:
        digits.append(x % 10)
        x = x / 10
    digits.reverse()

    # get swap indexes for max integer and min integer
    lend        = len(digits)
    min_pair    = None
    max_pair    = None
    found_max   = False
    found_min   = False
    for i in range(0, lend-1):
        maxd        = digits[i] + 1
        mind        = digits[i] - 1
        _found_max  = False 
        _found_min  = False 
        for j in range(i+1, lend):
            # get max digit
            # if there are multiple max digit, choose the last one
            if (not found_max) and digits[j] >= maxd:
                maxd        = digits[j]
                max_pair    = [i, j]
                _found_max  = True
                
            # get min digit,
            # if there are multiple min digit, choose the last one
            if (not found_min) and digits[j] != 0 and digits[j] <= mind:
                mind        = digits[j]
                min_pair    = [i, j]
                _found_min  = True
                
        found_max = found_max or _found_max
        found_min = found_min or _found_min
        if found_max and found_min:
            break
        
    # get max integer
    maxv = n
    if found_max:
        maxv = new_value(digits[:], max_pair[0], max_pair[1], lend)
        
    # get min integer
    minv = n
    if found_min:
        minv = new_value(digits[:], min_pair[0], min_pair[1], lend)
        
    return [minv, maxv]
             

    
def main(argv):
    # check argument
    if len(argv) != 2:
        print "Usage: ./", argv[0], " [input_file]"
        return -1

    # oepn and read file
    with open(argv[1]) as f:
        lines = f.readlines()
    
    lenl = len(lines)
    for i in range(1, lenl):
        pair = swap_dig(int(lines[i]))
        print "Case #%d: %d %d" % (i, int(lines[i]), pair[0], pair[1])


if __name__ == "__main__":
    main(sys.argv)


