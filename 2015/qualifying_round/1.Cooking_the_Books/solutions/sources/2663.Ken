#include <stdio.h>
#include <string.h>

void swap(char* str, int pos1, int pos2){
	char tmp;
	if (pos1 != -1){
		tmp = str[pos1];
		str[pos1] = str[pos2];
		str[pos2] = tmp;
	}	
}

int findMinPos(char* str, int pos1){
	int i,min;
	min = 10;
	for (i=pos1+1; i<strlen(str); i++)
		if (!((pos1 == 0)&&(str[i] == '0'))){
			if ((str[i]-'0') < min)
				min = str[i]-'0';
		}
	for (i=strlen(str)-1; i>pos1; i--)
		if ((str[i]-'0') == min)
			return i;
}

int findMaxPos(char* str, int pos1){
	int i,max;
	max = -1;
	for (i=pos1+1; i<strlen(str); i++)	
		if ((str[i]-'0') > max)
			max = str[i]-'0';	
	for (i=strlen(str)-1; i>pos1; i--)
		if ((str[i]-'0') == max)
			return i;
}

int main()
{
	int T,t,i,j;
	
	scanf("%d", &T);
	for(t=1; t<=T; t++){
		char str[32],minR[32],maxR[32];	
		scanf("%s", str);	
		strcpy(minR,str);
		strcpy(maxR,str);	
		printf("Case #%d: ", t);
		
		//find min		
		for (i=0; i<strlen(str)-1; i++){
			j = findMinPos(str,i);			
			if (str[j] < str[i]){
				swap(minR,i,j);				
				break;					
			}		
		}		
		printf("%s ", minR);
		
		//find max
			
		for (i=0; i<strlen(str)-1; i++){
			j = findMaxPos(str,i);			
			if (str[j] > str[i]){
				swap(maxR,i,j);			
				break;					
			}		
		}		
		printf("%s\n", maxR);
		
	}
	return 0;
}
