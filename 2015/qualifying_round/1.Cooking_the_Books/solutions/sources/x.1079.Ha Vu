/* G++ */
/* Cooking the Books */

/* input/output */
	#include <iostream>
	#include <cstdio>
	#include <fstream>

/* data structures */
	#include <cstring>
	#include <sstream>
	#include <vector>
	#include <map>
	#include <queue>
	#include <deque>
	#include <stack>
	
/* std algorithms and math functions */
	#include <algorithm>
	#include <cmath>
	#include <cstdlib>

/* i only use this shit in olympiads */
	using namespace std;

/* some useful defines */
	#define MAX(x, y) ((x) > (y))? (x):(y)
	#define MIN(x, y) ((x) < (y))? (x):(y)
	#define x first
	#define y second	
	#define ALL(a) (a).begin(), (a).end()
	#define SORT(a) sort(all(a))
	#define FOR(i, a, b) for(int i=a; i<b; i++)
	#define SWAP(t, a, b) {t tmp=a; a=b; b=tmp;}
	#define CASET(T) "Case #" << T << ": "

int SolveTestcase(size_t T)
{
	string s;
	cin >> s;
	char min='9'+1, max='0'-1, imin=-1, imax=-1;
	FOR(i, 0, s.size()){
		if ((s[i] <= min) && (s[i] >= '1')) {imin = i; min = s[i];}
		if ((s[i] >= max) && (s[i] <= '9')) {imax = i; max = s[i];}
	}	
	string mins=s, maxs=s;
	if (s != "0"){
		SWAP(char, mins[0], mins[imin]);
		SWAP(char, maxs[0], maxs[imax]);	
	}
	cout << CASET(T) << mins << " " << maxs << endl;
	return 0;
}

int main()
{
	size_t T;
	cin >> T;
	for (int i=0; i<T; i++){
		SolveTestcase(i+1);
	}	
	return 0;
}
