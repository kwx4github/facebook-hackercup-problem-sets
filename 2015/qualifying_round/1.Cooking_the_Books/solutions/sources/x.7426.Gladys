import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class CookingTheBook {

	public static void main(String[] args) {
		File inFile = new File("src/cooking_the_books.txt");
		File outFile = new File("src/cooking_the_books_output.txt");
		try {
			BufferedReader buff = new BufferedReader(new FileReader(inFile));
			FileWriter write = new FileWriter(outFile);
			
			int t = Integer.parseInt(buff.readLine());
			
			for(int i = 1; i <= t ; i++){
				int n = Integer.parseInt(buff.readLine());
				
				int min = getMin(n);
				int max = getMax(n);
				
				String nString = String.valueOf(n);
				int minPos = nString.indexOf(String.valueOf(min));
				int maxPos = nString.indexOf(String.valueOf(max));
	
				String minRes = "";
				String maxRes = "";
				
				if(min == 0){
					minRes = nString;
				}else{
					minRes = min + nString.substring(0, minPos) + nString.substring(minPos+1);
				}
				if(nString.length() == 1){
					maxRes = nString;
				}else{
					char[] nArr = nString.toCharArray();
					char m = nArr[maxPos];
					nArr[maxPos] = nArr[0];
					nArr[0] = m;
					
					maxRes = String.copyValueOf(nArr);
				}
				
				String res = "Case #"+(i)+": "+minRes + " "+maxRes;
				System.out.println(res);
				write.append(res+"\n");
			}
			write.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	private static int getMin(int n){
		String nString = String.valueOf(n);

		int min = Integer.parseInt(String.valueOf(nString.charAt(0)));
		for(int i = 1 ; i < nString.length(); i++){
			if(min > Integer.parseInt(String.valueOf(nString.charAt(i)))){
				min = Integer.parseInt(String.valueOf(nString.charAt(i)));
			}
		}
		return min;
	}
	
	private static int getMax(int n){
		String nString = String.valueOf(n);
		
		int max = Integer.parseInt(String.valueOf(nString.charAt(0)));
		for(int i = 1 ; i < nString.length(); i++){
			if(max < Integer.parseInt(String.valueOf(nString.charAt(i)))){
				max = Integer.parseInt(String.valueOf(nString.charAt(i)));
			}
		}
		
		return max;
	}
}
