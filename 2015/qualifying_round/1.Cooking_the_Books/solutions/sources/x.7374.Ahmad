#include <iostream>
#include <string>
#include<fstream>
using namespace std;

/*string minimum (string n)
{
    int pos,min=999999999;
    char x;
    string y;
    bool cond=false;
    for(int i=0;i<n.length();i++)
    {
        if(n[i]<=min && n[i]!='0')
        {
            min=n[i];
            pos=i;
        }
    }
    if(min==n[0]&& n.length()!=1)
    {
        cond=true;
        for(int j=0; j<n.length(); j++)
        {
            if(n[j]<=min)
            {
                min=n[j];
                pos=j;
            }
                //if(n[j]=='0')
                  //  continue;
                else
                {
                   /* x=n[j];
                    n[j]=n[pos];
                    n[pos]=x;
                    //break;
                }
        }
    }
    if(cond)
    {
        x=n[1];
        n[1]=n[pos];
        n[pos]=x;
    }
    else
    {
        x=n[0];
        n[0]=n[pos];
        n[pos]=x;
    }

    y=n;
    return (y);
}*/

string minimum(string n)
{
    int pos,pos2,min=999999999,min2=999999999;
    char x;
    string y;
    bool cond=false;

    for(int i=n.length()-1; i>=0; i--)
    {
        if(n[i]<=min)
        {
            min=n[i];
            pos=i;
        }
    }
    if(n[pos]=='0')
    {
        for(int j=n.length()-1; j>=0; j--)
        {
            if(n[j]!='0' && n[j]<=min2)
            {
                min2=n[j];
                pos2=j;

            }
        }
        if(pos2==0 && n.length()>1)
        {
            x=n[1];
            n[1]=n[pos];
            n[pos]=x;
        }
        else
        {
            x=n[0];
            n[0]=n[pos2];
            n[pos2]=x;
        }
    }
    else
    {
        if(pos==0 && n.length()>1)
        {
            for(int k=1; k<n.length(); k++)
            {
                if(n[k]==min)
                {
                    cond=true;
                    min2=n[k];
                    pos2=k;

                }
            }
            if(cond)
            {
                x=n[1];
                n[1]=n[pos2];
                n[pos2]=x;
            }
            else
            {
                x=n[0];
                n[0]=n[pos];
                n[pos]=x;
            }

        }
        else
        {
            x=n[0];
            n[0]=n[pos];
            n[pos]=x;
        }
    }
    y=n;
    return y;
}




string maximum (string n)
{
    int pos=0,posmax,max=0;
    char x;
    string y;
    //bool cond=false;
    for (int i=n.length()-1; i>=0; i--)
    {
        if(n[i]>max)
        {
            max=n[i];
            posmax=i;
        }
        if(i-1==0 && n[i-1]>=max)
            {
                //if(i-1==0)
                //{
                    pos=i;
                    break;
                //}
            }

    }
    //if(cond)
    //{
        x=n[pos];
        n[pos]=n[posmax];
        n[posmax]=x;
    //}
    /*else
    {
        x=n[0];
        n[0]=n[pos];
        n[pos]=x;
    }*/
    y=n;
    return (y);
}

int main()
{
    freopen("cooking_the_books.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int T;
    string N,reminder;
    cin>>T;
    getline(cin,reminder);
    for (int i=0; i<T ;i++)
    {
        getline(cin,N);
        cout<<"Case #"<<i+1<<": "<<minimum(N)<<" "<<maximum(N)<<endl;
    }
    return 0;
}
