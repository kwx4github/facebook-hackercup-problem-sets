#include <stdio.h>              
#include <string.h>
#include <stdlib.h>

struct Number {
	unsigned char digits[10];
	unsigned char count;

	Number(unsigned int val) {
		count = 0;
		while (val) {
			digits[count] = val % 10;
			val /= 10;
			count++;
		}
	}

	unsigned int Value() const {
		unsigned int ret = 0;
		for (int i = count - 1; i >= 0; --i) {
			ret *= 10;
			ret += digits[i];
		}
		return ret;
	}

	void Swap(int a, int b) {
		if ((a >= count) || (b >= count)) {
			return;
		}

		unsigned char tmp = digits[a];
		digits[a] = digits[b];
		digits[b] = tmp;
	}	
};

void solve(FILE *fin, FILE *fout) {
	unsigned int num;
	unsigned int min, max;

	fscanf(fin, "%d", &num);
	min = max = num;

	Number na(num);

	unsigned char count = na.count;

	for (int i = 0; i < count - 1; ++i) {
		for (int j = i + 1; j < count; ++j) {
			na.Swap(i, j);

			if (na.digits[na.count - 1] == 0) {
				continue;
			}

			unsigned int p = na.Value();

			if (p < min) {
				min = p;
			}

			if (p > max) {
				max = p;
			}

			na.Swap(i, j);
		}
	}

	fprintf(fout, "%d %d", min, max);
}

int main() {
	FILE *fin = fopen("input.txt", "rt");
	FILE *fout = fopen("output.txt", "wt");
	int n;

	fscanf(fin, "%d\n", &n);
	for (int i = 1; i <= n; ++i) {
		fprintf(fout, "Case #%d: ", i);
		solve(fin, fout);
		fprintf(fout, "\n");
	}

	fclose(fout);
	fclose(fin);
	return 0;
}
