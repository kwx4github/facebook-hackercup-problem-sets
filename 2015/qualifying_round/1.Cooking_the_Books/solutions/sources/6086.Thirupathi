#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int VectorToNumber(vector<int> a)
{
    int number = 0;
    for(int i=0; i<a.size(); i++)
        number = number * 10 + a[i];
    return number;
}

int main()
{
    ios_base::sync_with_stdio(false);
    int test, n;
    cin >> test;
    for(int t=1; t<=test; t++)
    {
        cin>>n;
        vector<int> a;
        int digits = 0;
        int temp = n;
        while(n > 0){
            a.push_back(n % 10);
            n /= 10;
            digits++;
        }
        n = temp;

        reverse(a.begin(), a.end());
        int maxAns, minAns;
        maxAns = minAns = n;
        for(int i=0; i<digits; i++)
            for(int j=i+1; j<digits; j++) {
                if(i == 0 && a[j] == 0)
                    continue;
                swap(a[i], a[j]);
                if(VectorToNumber(a) > maxAns)
                    maxAns = VectorToNumber(a);
                if(VectorToNumber(a) < minAns)
                    minAns = VectorToNumber(a);
                swap(a[i], a[j]);
            }

        cout << "Case #" << t << ": " << minAns << ' ' << maxAns << endl;
    }
    return 0;
}
