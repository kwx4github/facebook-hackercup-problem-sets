//BISMILLAHIR RAHMANIR RAHIM


#include<stdio.h>
#include<bits/stdc++.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<algorithm>
#include<queue>
#include<stack>
#include<time.h>
#include<map>
#include<iostream>
#include<vector>
#define pii pair<int,int>
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define SETINF(a) memset(a,126,sizeof a)
#define LLI long long int
#define ULL unsigned long long
#define PI acos(-1.0)
#define EPS 1e-9
#define inf 1<<30
#define f first
#define s second
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define countbit(x) __builtin_popcount(x)
#define lopi(i,a,b) for(int i=a;i<b;i++)
#define lopd(i,a,b) for(int i=a;i>b;i--)
#define repi(i,a,b) for(int i=a;i<=b;i++)
#define repd(i,a,b) for(int i=a;i>=b;i--)

//#define MAX(a) (*max_element(all(a)))
//#define MIN(a) (*min_element(all(a)))

using namespace std;

template< class T > inline T sq(T a) { return a * a; }
template< class T, class X > inline T _pow(T a,X y) {T z=1; repi(i,1,y){z*=a;} return z; }
template< class T > inline T gcd(T a, T b) {while(b) b ^= a ^= b ^= a %= b;return a;}
template< class T > inline T lcm(T a,T b) {a=abs(a);b=abs(b); return (a/gcd(a,b))*b;}
//template< class T > inline T extended(T a,T b,T &x,T &y) {a=abs(a);b=abs(b); T g,x1,y1; if(!b) {x=1;y=0;g=a; return g;} g=extended(b,a%b,x1,y1); x=y1; y=x1-(a/b)*y1; return g;}
template< class T, class X > inline bool getbit(T a, X i) { T t=1; return ((a&(t<<i))>0); }
template< class T, class X > inline T setbit(T a, X i) { T t=1;return (a|(t<<i)); }
template< class T, class X > inline T resetbit(T a, X i) { T t=1;return (a&(~(t<<i))); }
template< class T, class X > inline T togglebit(T a, X i) { T t=1;return (a^(t<<i)); }

template< class T,class X, class Y > inline T bigmod(T n,X m,Y mod){ULL ret=1, a = n%mod ; while(m){ if(m&1)ret=(ret*a)%mod; m>>=1; a=(a*a)%mod; }ret%=mod;return (T)ret;}
template< class T, class Y > inline T modinv(T n,Y mod) {return bigmod(n,mod-2,mod);}
//template< class T > inline T _gcd(T a,T b) {a=_abs(a);b=_abs(b); if(!b) return a; return _gcd(b,a%b);}
template<class T>inline T my_strrev(T array){int N=strlen(array);for(int i=0;i<N/2;++i)swap(array[i],array[N-i-1]);}

///-----------------//-----------------///



int main()
{
	 //ios_base::sync_with_stdio(false);
	     // freopen("output.txt","w",stdout);
   	     //freopen("input.txt","r",stdin);




long long int  t,mini,maxi,a,b,ii=1;
long long int n,temp,minia,maxia;

cin>>t;
while(t--)
{char aa[12],bb[12],cc[12];
    cin>>aa;
    temp=0;
    //cout<<aa<<endl;
    strcpy(bb,aa);
    strcpy(cc,aa);
    n=0;
    for(int i=0;i<strlen(aa);i++)n=n*10+(aa[i]-'0');


    maxi=n;
    mini=n;
    for(int i=0;i<strlen(aa);i++)
        for(int j=0;j<strlen(aa);j++)
    {temp=0;
    if(bb[i]-'0'==0||bb[j]-'0'==0)
    {

        if(i==0||j==0)
        {
           continue;
        }
        else
        {
             swap(bb[i],bb[j]);
        for(int i=0;i<strlen(bb);i++)temp=temp*10+(bb[i]-'0');
       // temp=atoi(bb);
        if(temp<mini)
            mini=temp;
        if(temp>maxi)
            maxi=temp;
        strcpy(bb,aa);
        }

    }
    else
    {
         swap(bb[i],bb[j]);
        for(int i=0;i<strlen(bb);i++)temp=temp*10+(bb[i]-'0');
       // temp=atoi(bb);
        if(temp<mini)
            mini=temp;
        if(temp>maxi)
            maxi=temp;
        strcpy(bb,aa);
    }

    }
    printf("Case #%d: ",ii++);
    cout<<mini<<" "<<maxi<<endl;



    /*
    temp=n;
    mini=0;
    maxi=0;
    for(int i=0;i<strlen(aa);i++)
    {
        a=aa[i]-'0';
        if(a<=aa[mini]-'0'&&a!=0)
            mini=i;
        if(a>=aa[maxi]-'0')
            maxi=i;
        //temp=temp/10;

    }

    ///minimum
    printf("Case #%d: ",ii++);
    for(int i=0;i<strlen(aa);i++)
    {if(aa[i]-'0'!=aa[mini]-'0')
        {swap(bb[i],bb[mini]);
        break;
        }

        }
    cout<<bb<<" ";
     for(int i=0;i<strlen(aa);i++)
    {if(aa[i]-'0'!=aa[maxi]-'0')
        {swap(cc[i],cc[maxi]);
        break;
        }


        }

   cout<<cc<<endl;

*/



}









return 0;
}
