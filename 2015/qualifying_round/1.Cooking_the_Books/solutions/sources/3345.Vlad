import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

import java.util.ArrayList;
import java.util.List;

class Solution {	
	public int findMin(int number) {
		List<Integer> digits = getDigits(number);
		int N = digits.size();
		int min = getNumber(digits);
		
		for (int i = 0; i < N; ++i) {
			for (int j = i + 1; j < N; ++j) {
				swap(digits, i, j);
				
				if (digits.get(N - 1) != 0) {
					int num = getNumber(digits);
					min = Math.min(num, min);
				}
				
				swap(digits, i, j);
			}
		}
		
		return min;
	}
	
	public int findMax(int number) {
		List<Integer> digits = getDigits(number);
		int N = digits.size();
		int max = getNumber(digits);
		
		for (int i = 0; i < N; ++i) {
			for (int j = i + 1; j < N; ++j) {
				swap(digits, i, j);
				
				if (digits.get(N - 1) != 0) {
					int num = getNumber(digits);
					max = Math.max(num, max);
				}
				
				swap(digits, i, j);
			}
		}
		
		return max;
	}
	
	private void swap(List<Integer> digits, int i, int j) {
		int aux = digits.set(i, digits.get(j));
		digits.set(j, aux);
	}
		
	private List<Integer> getDigits(int number) {
		List<Integer> digits = new ArrayList<Integer>();
		
		while (number > 0) {
			digits.add(number % 10);
			number /= 10;
		}
		
		return digits;
	}
	
	private int getNumber(List<Integer> digits) {
		int number = 0;
		
		for (int i = digits.size() - 1; i >= 0; --i) {
			int digit = digits.get(i);
			number = number * 10 + digit;
		}
		
		return number;
	}
}

public class Main {

	public static void main(String[] args) throws FileNotFoundException {
		Solution solution = new Solution();
		Scanner scanner = new Scanner(new File("input.txt"));
		
		int T = scanner.nextInt();
		
		for (int t = 1; t <= T; ++t) {
			int num = scanner.nextInt();
			int min = solution.findMin(num);
			int max = solution.findMax(num);
			
			System.out.println(String.format("Case #%d: %d %d", t, min, max));
		}
		
		scanner.close();
	}
}
