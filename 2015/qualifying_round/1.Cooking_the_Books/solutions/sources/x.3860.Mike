import java.io.File

import scala.io.Source

/**
 * Created by mikey on 9/01/15.
 */
object CookingTheBooks extends App {

  val lines = Source.fromFile(new File("src/main/resources/cooking_the_books.txt")).getLines.drop(1).toList
  for (caseCount <- 1 to lines.size) {
    val line = lines(caseCount - 1)
    val minDigits = line.map(_.asDigit).to[Array]
    var swapped = false
    for (index <- 0 until minDigits.size) {
      val minDigit = minDigits.drop(index).min
      val minIndex = minDigits.drop(index).indexOf(minDigit)
      if (!swapped && minDigits(index) > minDigit && (minDigit != 0 || index != 0)) {
        minDigits(minIndex + index) = minDigits(index)
        minDigits(index) = minDigit
        swapped = true
      }
    }
    val maxDigits = line.map(_.asDigit).to[Array]
    swapped = false
    for (index <- 0 until maxDigits.size) {
      val maxDigit = maxDigits.drop(index).max
      val maxIndex = maxDigits.drop(index).lastIndexOf(maxDigit)
      if (!swapped && maxDigits(index) < maxDigit) {
        maxDigits(maxIndex + index) = maxDigits(index)
        maxDigits(index) = maxDigit
        swapped = true
      }
    }
    println(s"Case #$caseCount: ${minDigits.mkString} ${maxDigits.mkString}")
  }
}
