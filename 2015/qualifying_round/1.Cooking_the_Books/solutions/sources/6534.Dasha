#include<iostream>
#include<stdio.h>
#include<string>
#include<algorithm>
#include<math.h>
#include<vector>
#include<map>
#define MAX_N 1
using namespace std;
const double epsilon=0.0000000001;
const int mod=1000000007;
double pi=2*acos(0.0);
vector <int> del;
vector <int> V[MAX_N];
vector <int> K[MAX_N];
bool flag[MAX_N];
int w[MAX_N];
int gcd(long long a, long long b)
{
	return a%b==0?b:gcd(b%a, a);
}
long long cnt, ans;
void DFS (int U)
{
	int i;
	if (flag[U]) return;
	flag[U]=true;
	cnt++;
	ans+=w[U];
	for(i=0;i<V[U].size();i++)
		DFS(V[U][i]);
}
int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int T, N, z, k;
	string step, min, max;
	cin>>T;
	for(int t=1; t<=T; t++)
	{
		cin>>N;
		z=N;
		k=0;
		while(z>0)
		{
			step+=z%10+48;
			z=z/10;
			k++;
		}
		for(int i=0; i<step.length()/2; i++)
			swap(step[i], step[step.length()-i-1]);
		min=step;
		max=step;
		for(int i=0; i<step.length(); i++)
			for(int j=i+1; j<step.length(); j++)
			{
				swap(step[i], step[j]);
				if (step[0]=='0') 
				{
					swap(step[i], step[j]);
					continue;
				}
				if (step<min) min=step;
				if (step>max) max=step;
				swap(step[i], step[j]);
			}
		if (N==0) min="0", max="0";
		cout<<"Case #"<<t<<": "<<min<<" "<<max<<"\n";
		step="";
	}
    return 0;
}
