

import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;


public class Cooking_the_book {

    static  int cases=0;
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        for(cases=0;cases<t;cases++)
        {int in=sc.nextInt();
       find(in);
            System.out.println();
        }
    }
    public static  void find(int in)
    {  int n=0;
        int temp=in;
        while(in>=1)
        {
           int a=in%10;
           n++;
           in=in/10;
        }
        int[] a=new int[n];
        in=temp;
        int i=0;
        while(in>=1)
        {
            a[i]=in%10;
           i++;
           in=in/10;
           
        }
        int[]a1=a;
        int[] a2=a;
        int n1=n;
        int n2=n;
        System.out.print("Case #"+(cases+1)+": ");
        min(a1,n1);
        System.out.print(" ");
        max(a2, n2);
        
      
    }
    public static void max(int[] a,int n)
    { int x=0,z=0;
        int no=0;
        int max=0,prev=0;
        if(n==1)
    {  
        max=a[0];
        x++;
    }
        else
        {
        
        
        int[] b=new int[n];
        for(int i=0;i<n;i++)
            b[i]=a[i];
      
        for(int i=0;i<n-1;i++)
        {
            for(int j=i+1;j<n;j++)
            {   int temp=a[i];
                a[i]=a[j];
                a[j]=temp;
               
              
             //   System.out.println(z); 
              if(a.length==n&&a[n-1]!=0)
                {  
                    for(int k=0;k<n;k++)
                  { 
                    no=(int) (no+(a[k]*Math.pow(10, k)));
                    if(max<=no)
                    {
                    max=no;
                    prev=no;
                    }
                      
                  }
                    x++;
               }
                
                
                no=0;
                for(int l=0;l<n;l++)
                  a[l]=b[l];
            }
            
        }
         
        for(int k=0;k<n;k++)
            {
                no=(int) (no+(a[k]*Math.pow(10, k)));
            }
    } if(x>0)
        System.out.print(max);
    else
            System.out.print(no);
    }
    public static void min(int[] a,int n)
    {   int x=0;
        int no=0;
        int min,prev=0;
        int[] b=new int[n];
        for(int i=0;i<n;i++)
            b[i]=a[i];
                 
        for(int k=0;k<n;k++)
                {
                 no=(int) (no+(a[k]*Math.pow(10, k)));
                
                }
                min=no;
                no=0;
        for(int i=0;i<n-1;i++)
        {
            for(int j=i+1;j<n;j++)
            {  

                int temp=a[i];
                a[i]=a[j];
                a[j]=temp;
                 
                if(a.length==n&&a[n-1]!=0)
                {   
                for(int k=0;k<n;k++)
                {
                 no=(int) (no+(a[k]*Math.pow(10, k)));
                                 
                }
                
                
                if(min>=no)
                {  
                    min=no;
                    prev=no;
                }
               
                x++;
                }
                
                no=0;
                for(int l=0;l<n;l++)
                  a[l]=b[l];
            }
             
        }
        
        //System.out.println(x);
        
            System.out.print(min);
          
    }

}
