#include<iostream>
using namespace std;

bool findbig(int a[],int n)
{

  int k=a[n];
  int ind=n;
    for(int i=0;i<n;i++)
    {

      if(a[i]>k) {k=a[i];ind=i;}
    }

    if(ind==n)
    {
        //cout<<"false";
        return false;
    }
    else
    {
        //cout<<"true";
        a[ind]=a[n];
        a[n]=k;
        return true;
    }
}

bool findsmall(int a[],int n,int s)
{


  int k=a[n];
  int ind=n;
    for(int i=0;i<n;i++)
    {
     // cout<<a[i]<<"*"<<k<<endl;
      if(a[i]<k && !(a[i]==0 && n==s))
        {

            k=a[i];ind=i;


        }
    }
   // cout<<"=> ind="<<ind<<"=> k"<<k<<endl;

    if(ind==n)
    {
        //cout<<"false";
        return false;
    }
    else
    {
        //cout<<"true";
        if(k==0 && n==s)
        {
            return false;
        }
        else
        {
        a[ind]=a[n];
        a[n]=k;
        return true;
        }
    }

}
int  haiku(int n)
{

    int a[15]={-1};
    int i=0;
    while(n!=0)
    {
        a[i++]=n%10;
        n/=10;

    }

    int digit=i-1;

    i--;
bool hk=true;
if(digit<1) hk=false;
    while(hk){
              //cout<<"\n"<<a[i]<<"=";
         if(findbig(a,i)) hk=false;

         i--;
         if(i==0) hk=false;
    }


    int rs=0;

    for(int i=digit;i>=0;i--) rs=rs*10+a[i];

    return rs;
}

int gudan(int n)
{

    int a[15]={-1};
    int i=0;
    while(n!=0)
    {
        a[i++]=n%10;
        n/=10;

    }

    int digit=i-1;

    i--;
bool hk=true;
if(digit<1) hk=false;
    while(hk){
              //cout<<"\n"<<a[i]<<"=";
         if(findsmall(a,i,digit)) hk=false;

         i--;
         if(i==0) hk=false;
    }


    int rs=0;

    for(int i=digit;i>=0;i--) rs=rs*10+a[i];

    return rs;
}


int main()
{
    int t;
    cin>>t;
    int i=1;
    while(t--)
    {

        int n;
        cin>>n;
        int big=haiku(n);  // ;-)
        int small=gudan(n); //<3 :*

        cout<<"Case #"<<i<<": "<<small<<" "<<big<<endl;
        i++;
    }

}
