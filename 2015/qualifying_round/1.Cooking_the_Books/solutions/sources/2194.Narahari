import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;


public class cookbook {
	
	static int t;
	static int n;
	static int digs;
	static int[] num;
	
	public static void main(String[] args) throws IOException {
		BufferedReader f = new BufferedReader(new FileReader("cook.txt"));
		StringTokenizer st = new StringTokenizer(f.readLine());
		t = Integer.parseInt(st.nextToken());
		for(int i = 0; i < t; i++) {
			st = new StringTokenizer(f.readLine());
			n = Integer.parseInt(st.nextToken());
			digs = 0;
			int temp = n;
			while(temp > 0) {
				temp /= 10;
				digs++;
			}
			num = new int[digs];
			temp = n;
			for(int j = digs - 1; j >= 0; j--) {
				num[j] = temp % 10;
				temp /= 10;
			}
			System.out.println("Case #" + (i + 1) + ": " + low(n) + " " + high(n));
		}
	}
	
	public static int low(int n){
		int ans = n;
		for(int i = 0; i < digs; i++) {
			for(int j = i + 1; j < digs; j++) {
				if(i == 0 && num[j] == 0) continue;
				int inda = digs - i - 1;
				int indb = digs - j - 1;
				int temp = (int) (n - num[i]*Math.pow(10, inda) + num[j]*Math.pow(10, inda));
				temp += num[i]*Math.pow(10, indb) - num[j]*Math.pow(10,  indb);
				if(temp < ans) {
					ans = temp;
				}
			}
		}
		return ans;
	}
	
	public static int high(int n){
		int ans = n;
		for(int i = 0; i < digs; i++) {
			for(int j = i + 1; j < digs; j++) {
				if(i == 0 && num[j] == 0) continue;
				int inda = digs - i - 1;
				int indb = digs - j - 1;
				int temp = (int) (n - num[i]*Math.pow(10, inda) + num[j]*Math.pow(10, inda));
				temp += num[i]*Math.pow(10, indb) - num[j]*Math.pow(10,  indb);
				if(temp > ans) {
					ans = temp;
				}
			}
		}
		return ans;
	}
}