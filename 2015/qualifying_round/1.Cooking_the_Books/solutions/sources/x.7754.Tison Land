
// Template by Hierony

#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <limits.h>

#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include <stack>
#include <queue>
#include <set>
#include <bitset>

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef pair<int,int> pii;
typedef pair<pii,pii> ppi;
typedef pair<LL,LL> pll;
typedef pair<string,string> pss;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<pii> vii;
typedef vector<LL> vl;
typedef vector<vl> vvl;
typedef vector<string> vstr;
typedef vector<char> vc;
typedef map <int,int> mii;

double PI = acos(-1);

#define REP(i,n) for(int (i) = 0; (i) < (int)(n); (i)++)
#define READ_int(data) scanf("%d",&data);
#define RESET(c,v) memset(c, v, sizeof(c))
#define MAX(a,b) a = max(a,b)
#define MIN(a,b) a = min(a,b)
#define pb push_back
#define mp make_pair
#define ALL(vec) vec.begin(),vec.end()
#define sI(val) scanf("%d",&val)
#define sID(val,val2) scanf("%d %d",&val,&val2)
#define INF 2123123123

inline string IntToString(int a){
    char x[100];
    sprintf(x,"%d",a); string s = x;
    return s;
}

inline int StringToInt(string a){
    char x[100]; int res;
    strcpy(x,a.c_str()); sscanf(x,"%d",&res);
    return res;
}

inline string GetString(void){
	char x[1000005];
	scanf("%s",x); string s = x;
	return s;
}


// FPB gan
int gcd(int  a, int b){
	if(b == 0)return a;
    else return gcd(b,a%b);
}

bitset<10000010> bs;
vi primes;

// Prima pertama terdapat di primes[1] yah :D
void sieve(LL upperbound){
	bs.set();
	bs[0]=bs[1]=0;
	primes.pb(0);
	for(LL i=2; i<=upperbound+1; i++)if(bs[i]){
	for(LL j=i*i; j<= upperbound+1; j+=i)bs[j] = 0;
			primes.pb((int) i);
	}
}

int main()
{
    int T;
    sI(T);
    string number = "123456789";

    REP(a,T)
    {
        string angka = GetString();
        map <char,int> flag;

        REP(b,angka.size())
        {
            flag[angka[b]] = 1;
        }

        // Mencari angka terkecil yang eksis
        char kecil,besar;
        int posKecil,posBesar;
        for(int c = 0; c < number.size(); c++)
        {
            //printf("number[c] : %c\t",number[c]);
            if(flag[number[c]] == 1)
            {
                kecil = number[c];

                // Tentukan pos kecil
                for(int d = 0; d < angka.size(); d++)
                {
                    if(angka[d] == kecil) posKecil = d;

                }

                break;
            }
        }

        for(int c = 8; c >= 0; c--)
        {
            if(flag[number[c]] == 1)
            {
                besar = number[c];
                posBesar = c;

                 // Tentukan pos besar
                for(int d = angka.size()-1; d >= 0; d--)
                {
                    if(angka[d] == besar) posBesar = d;

                }
                break;
            }
        }

        /* Debug
        printf("Angka Kecil : %c   Angka Besar : %c\n",kecil,besar);
        printf("PosKecil : %d   PosBesar : %d\n",posKecil,posBesar);
        */

        // Ubah Posisi
        string strKecil = angka;
        string strBesar = angka;

        // Kecil
        REP(b,strKecil.size())
        {
            if(posKecil == 0) break;
            if(strKecil[b] != kecil && strKecil[b] != '0')
            {
               // printf("strKecil[%d] : %c\n",b,strKecil[b]);
                char temp = strKecil[b];
                strKecil[b] = kecil;
                strKecil[posKecil] = temp;
                break;
            }
        }

        // Besar
        REP(b,strBesar.size())
        {
             if(strBesar[b] != besar && strBesar[b] != '0')
            {
                char temp2 = strBesar[b];
                strBesar[b] = besar;
                strBesar[posBesar] = temp2;
                break;
            }
        }

        printf("Case #%d: %s %s\n",a+1,strKecil.c_str(),strBesar.c_str());
    }


	return 0;
}
