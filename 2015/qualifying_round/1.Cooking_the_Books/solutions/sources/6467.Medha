/*
 * Hacker Cup Problem 1
 * author: Medha Baidya | baidya.medha@gmail.com | 540-449-6005
 * The algorithm genereates smalles and largest possible
 * with 1 swap for input. 
 */
package hackercup;


import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

public class CookingBook {
	int digitIndex[]= new int[10];
	int digitArr[];
	// create a File object
	File in;
	File out= new File("out.txt");
	Scanner scannerIn;	
    java.io.PrintStream output ;
    
	Scanner scannerOut;
	public void init(String in) throws FileNotFoundException
	{
		this.in= new File( in );
		if ( this.in.exists() )                          
			scannerIn = new Scanner( this.in );
		
		output = new java.io.PrintStream( out );
	}
	
	public void initializeData(String input)
	{
		digitArr= new int[input.length()];
		for(int i=0;i<10;i++)
		{
			digitIndex[i]=-1;
		}
		for(int i=0; i < input.length(); i++)
		{			
			if(input.charAt(i)=='\n')
				return;
			digitArr[i]=Character.getNumericValue(input.charAt(i));			
			digitIndex[digitArr[i]]=i;
		}
		//System.out.println(Arrays.toString(digitArr));
	}   

	    
	public void swap(int i, int j)
	{
		int temp = digitArr[i];
		digitArr[i] = digitArr[j];
		digitArr[j]=temp;
	}
	
	public String smallest()
	{
		String small=Arrays.toString(digitArr);
		for(int i=0; i< digitArr.length; i++)
		{
			int msb=digitArr[i];
			//System.out.println(msb);
			for(int j=0; j<msb;j++)
			{
				if(digitIndex[j]>i)
				{
					if(j==0 && i==0)
					{
						continue;
					}
					else
					{
						swap(i, digitIndex[j]);
						small=Arrays.toString(digitArr);						
						small= small.replaceAll("[,]", "");
						small= small.replace("[", "");
						small= small.replace("]", "");
						small= small.replace(" ", "");
						return small;
					}
				}
			}
		}
		small= small.replaceAll("[,]", "");
		small= small.replace("[", "");
		small= small.replace("]", "");
		small= small.replace(" ", "");
		return small;
	}
	
	public String largest()
	{
		String large=Arrays.toString(digitArr);
		for(int i=0; i< digitArr.length; i++)
		{
			int msb=digitArr[i];
			for(int j=digitIndex.length-1; j>msb;j--)
			{
				if(digitIndex[j]>i)
				{					
					swap(i, digitIndex[j]);
					large=Arrays.toString(digitArr);					
					large= large.replaceAll("[,]", "");
					large= large.replace("[", "");
					large= large.replace("]", "");
					large= large.replace(" ", "");
					return large;
				}
				}
			}
		large= large.replaceAll("[,]", "");
		large= large.replace("[", "");
		large= large.replace("]", "");
		large= large.replace(" ", "");
		return large;
	}	
	
	
	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub
		Scanner console=new  Scanner(System.in);
		System.out.println("Please enter the input file name");
		String file = console.nextLine();
		console.close();
		CookingBook c= new CookingBook();
		int numInput=0;
		String input;
		String small,lar;
		String outText;
		c.init(file);
		try{
		if(c.scannerIn.hasNext())
			numInput = c.scannerIn.nextInt();
		c.scannerIn.nextLine();
		//System.out.println(numInput);
		for(int i =0; i<numInput;i++ )
		{
			input = c.scannerIn.nextLine();
			c.initializeData(input);
			small = c.smallest();
			
			c.initializeData(input);
			lar= c.largest();
			
			outText= "Case #"+(i+1)+": "+small+" "+lar;
			c.output.println(outText);
			c.output.flush();
		}
		}
		finally{
			
			c.scannerIn.close();
			c.output.close();
		}
	}

}
