#include <stdio.h>
#include <stdlib.h>
#include <string.h>

static int T;

struct test_case {
	int len;
	char num[10];
};

struct test_case *tc;

void parse_input(const char *input_file);
char* get_large(char result[], char num[], int len);
char* get_small(char result[], char num[], int len);
void swap(char *a, char *b);
void release_data();

int main(int argc, char *argv[]) {
	parse_input(argv[1]);

	char result_large[10], result_small[10];

	int i;
	for (i = 0; i < T; i++) {
		printf("Case #%d: %s %s\n",
				i + 1,
				get_small(result_small, tc[i].num, tc[i].len),
				get_large(result_large, tc[i].num, tc[i].len));
	}

	release_data();

	return 0;
}

void parse_input(const char *input_file) {
	FILE *fp = fopen(input_file, "r");

	fscanf(fp, "%d", &T);
	tc = (struct test_case *)malloc(sizeof(struct test_case) * T);

	int i;
	for (i = 0; i < T; i++) {
		fscanf(fp, "%s", tc[i].num);
		tc[i].len = strnlen(tc[i].num, 9);
	}

	fclose(fp);
}

void release_data() {
	free(tc);
}

char* get_large(char result[], char src[], int len) {
	int i, j, maxi;
	strcpy(result, src);

	for (i = 0; i < len; i++) {
		maxi = i;
		for (j = i; j < len; j++) {
			if (result[j] > result[maxi])
				maxi = j;
		}
		if (maxi != i) {
			result[maxi] = src[i];
			result[i] = src[maxi];
			break;
		}
	}
	return result;
}

char* get_small(char result[], char src[], int len) {
	int i, j, mini;
	strcpy(result, src);

	for (i = 0; i < len; i++) {
		mini = i;
		for (j = i; j < len; j++) {
			if (result[j] < result[mini] && result[j] != '0') {
				mini = j;
			}
		}
		if (mini != i) {
			result[mini] = src[i];
			result[i] = src[mini];
			break;
		}
	}
	return result;
}
