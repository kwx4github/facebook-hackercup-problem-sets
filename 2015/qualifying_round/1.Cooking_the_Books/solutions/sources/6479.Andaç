import java.awt.List;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.LinkedList;


public class Digitswap {

	public static LinkedList<String> numbers = new LinkedList<String>();
	public static int lineNumber;
	
	public static String swapSmallest(String num) {
		String smallest = num;
		for(int i=1; i<num.length(); i++)
			for(int j=0; j<i; j++) {
				if(num.charAt(i)=='0' && j==0)
					continue;
				char[] temp = num.toCharArray();
				temp[i] = num.charAt(j);
				temp[j] = num.charAt(i);
				String num2 = new String(temp);
				if(num2.compareTo(smallest) < 0)
					smallest = num2;
			}
		
		return smallest;
	}
	
	public static String swapLargest(String num) {
		String largest = num;
		for(int i=1; i<num.length(); i++)
			for(int j=0; j<i; j++) {
				if(num.charAt(i)=='0' && j==0)
					continue;
				char[] temp = num.toCharArray();
				temp[i] = num.charAt(j);
				temp[j] = num.charAt(i);
				String num2 = new String(temp);
				if(num2.compareTo(largest) > 0)
					largest = num2;
			}
		
		return largest;
	}
	
	public static void check() {
		int i;
		try {
			PrintWriter wrt = new PrintWriter("cooking_the_books_example_output.txt", "UTF-8");
			for(i=0; i<lineNumber; i++) {
				String num = numbers.get(i);
				//System.out.print("Case #" + (i+1) + ": ");
				String line = "Case #" + (i+1) + ": " + swapSmallest(num) + " ";
				//System.out.print(" ");
				line += swapLargest(num);
				wrt.println(line);
				
			}
			wrt.close();
		}
		catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		try {
			BufferedReader br = new BufferedReader(new FileReader("input.txt"));
			int i;
			lineNumber = Integer.parseInt(br.readLine());
			for(i=0; i<lineNumber; i++)
				numbers.add(br.readLine());
			check();
			br.close();
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}
