#include <iostream>
#include<deque>
#include<vector>

using namespace std;

int main()
{
    int t;
    cin>>t;
    for(int i=0;i<t;i++)
    {
        long long n;
        cin>>n;
        //long long min_di=1000000000;
        //long long max_di=0;
        deque<int>num;
        deque<int>num1;
        vector<int>num2;
        int arr[10]={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
        //int arr2[10]={11,11,11,11,11,11,11,11,11,11};
        int temp=0;
        while(n!=0)
        {
            int rem=n%10;
            num.push_front(rem);
            num1.push_front(rem);
            num2.push_back(rem);
            n=n/10;
            temp++;
        }
        for(int j=0;j<(int)num.size();j++)
        {
            arr[num[j]]=j;
        }
        int flag=0;
        int cur_pos;
        int cur_val;
        int j;
        for( j=0;j<(int)num.size();j++)
        {
            cur_pos=j;
            cur_val=num[j];
            if(j==0)
            {
                for(int m=1;m<10;m++)
                {
                    if(arr[m]>cur_pos&&m<cur_val)
                    {
                        cur_pos=arr[m];
                        cur_val=m;
                        flag=1;
                    }
                }
            }
            else
            {
                for(int m=0;m<10;m++)
                {
                    if(arr[m]>cur_pos&&m<cur_val)
                    {
                        cur_pos=arr[m];
                        cur_val=m;
                        flag=1;
                    }
                }
            }
            if(flag==1)
            {
                int temp1;
                temp1=num[j];
                num[j]=num[cur_pos];
                num[cur_pos]=temp1;
                break;
            }
        }
        //cout<<j<<" "<<cur_pos<<" "<<cur_val<<endl;
        long long new_num=0;
        for(int k=0;k<(int)num.size();k++)
        {
            new_num=new_num*10+num[k];
        }
        long long ans1=new_num;
        flag=0;
        /*for(int l=0;l<(int)num2.size();l++)
        {
            arr[num1[l]]=l;
        }*/
        int prev_val=10;
        for( j=0;j<(int)num1.size();j++)
        {
            cur_pos=j;
            cur_val=num1[j];
            for(int m=0;m<prev_val;m++)
                {
                    if(m>cur_val&&arr[m]!=-1)
                    {
                        cur_val=m;
                        cur_pos=arr[m];
                        flag=1;
                    }
                }
            if(flag==1)
            {
                int temp1;
                temp1=num1[j];
                num1[j]=num1[cur_pos];
                num1[cur_pos]=temp1;
                break;
            }
            prev_val=num1[j];
        }
        //cout<<j<<" "<<cur_pos<<" "<<cur_val<<endl;
        new_num=0;
        for(int k=0;k<(int)num.size();k++)
        {
            new_num=new_num*10+num1[k];
        }
        cout<<"Case #"<<i+1<<": "<<ans1<<" "<<new_num<<endl;
    }
    return 0;
}
