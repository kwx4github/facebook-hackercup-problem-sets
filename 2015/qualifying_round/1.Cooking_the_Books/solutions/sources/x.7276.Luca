//============================================================================
// Name        : Cooking.cpp
// Author      : Luca Maria Castiglione
// Version     :
// Copyright   : Released under GPL
// Description : Cooking the Books
//============================================================================

#include <iostream>
#include <fstream>
#include <cstring>
#include <cstdlib>

#define	BSIZE	1024

int pos_min(char *number);
int pos_max(char *number);
void swap(char &a, char &b);

int main(int argc, char **argv)
{

   char 			buffer[BSIZE];
   int	 			*results[2];
   char 			*number, *min, *max, *in_file, *out_file;
   int   			n_cases, ppos_min, ppos_max,c;
   std::ifstream 	input;
   std::ofstream	output;

   c = 0; /* counter */

   /*Select the input file*/
   std::cout<<"Input file: ";
   std::cin.getline(buffer, BSIZE-1);

   in_file = new char[std::strlen(buffer)+1];
   std::strcpy(in_file, buffer);


   /*Name the output file*/
   std::cout<<std::endl<<"Output file: ";
   std::cin.getline(buffer, BSIZE-1);

   out_file = new char[std::strlen(buffer)+1];
   std::strcpy(out_file, buffer);

   /*How many cases?*/
   input.open(in_file, std::ios::in);
   input.getline(buffer, BSIZE, '\n');
   n_cases = atoi(buffer);


   results[0] = new int[n_cases];
   results[1] = new int[n_cases];
   /*std::cout << n_cases;*/

   while(c<n_cases)
   {
	   input.getline(buffer, BSIZE, '\n');
	   number = new char[std::strlen(buffer)+1];
	   std::strcpy(number, buffer);

	   min = new char[std::strlen(number)+1];
	   max  = new char[std::strlen(number)+1];


	   std::strcpy(min, number);
	   std::strcpy(max, number);

	   ppos_min = pos_min(number);
	   ppos_max = pos_max(number);

	   swap(min[0], min[ppos_min]);
	   swap(max[0], max[ppos_max]);

	   results[0][c] = atoi(min);
	   results[1][c] = atoi(max);

	   std::cout << std::endl << "Case #"<<c<<": "<<min << " " << max;
	   c++;
   }
   input.close();

   /*Write results*/
   output.open(out_file, std::ios::out);

   for(int i = 0; i<n_cases; i++)
	   output << "Case #"<<i+1<<": "<<results[0][i] << " " << results[1][i]<<std::endl ;

   output.close();


   /**/
   return EXIT_SUCCESS;
}



void swap(char &a, char &b) {
	char tmp;
	tmp = a;
	a = b;
	b = tmp;
}

int pos_min(char *number)
{
	unsigned int i;
	int min;

	min = 0;

	for(i=0; i<std::strlen(number); i++)
	{
		if((number[min]>number[i]) && ((number[i]-'0') != 0))
			min = i;

	}

	return min;
}

int pos_max(char *number) {
	unsigned int i;
	int max;

	max = 0;

	for(i=0; i<std::strlen(number); i++)
	{
		if(number[max]<number[i])
			max = i;

	}

	return max;

}
