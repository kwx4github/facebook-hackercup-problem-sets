#include <bits/stdc++.h>

using namespace std;

bool compare(const pair<int, int> &a, const pair<int, int> &b){
	return (a.first<b.first || ((a.first == b.first) && a.second>b.second));
}

int numberOfDigits(long long num){
	int d = 0;
	while(num!=0){
		num = num / 10;
		d++;
	}

	return d;
}

int main(){
	int t, l=1;
	scanf("%d", &t);

	while(t--){
		long long n, num;
		scanf("%lld", &n);

		num = n;
		printf("Case #%d: ", l++);
		int d = numberOfDigits(n);
		int arr[d], one[d], two[d];
		pair<int, int> a[d];
		for(int i=d-1 ; i>=0 ; i--){
			arr[i] = num % 10;
			one[i] = num % 10;
			two[i] = num % 10;
			a[i].first = arr[i];
			a[i].second = i;
			num = num / 10;
		}

		int swap = 1, flag = 1;
		sort(a, a + d);
		for(int i=0 ; i<d ; i++){
			for(int j=d-1 ; j>=0 ; j--){
				if(i==a[j].second || (i==0 && a[j].first==0))
					continue;
				if(arr[i]<a[j].first && i<a[j].second){
					swap = one[i];
					one[i] = one[a[j].second]; 
					one[a[j].second] = swap;
					flag = -1;
					break;
				}
			}
			if(flag == -1)
				break;
		}

		flag = 1;
		sort(a, a+d, compare);
		for(int i=0 ; i<d ; i++){
			for(int j=0 ; j<d ; j++){
				if(i==a[j].second || (i==0 && a[j].first==0))
					continue;
				if(arr[i]>a[j].first && i<a[j].second){
					swap = two[i];
					two[i] = two[a[j].second]; 
					two[a[j].second] = swap;
					flag = -1;
					break;
				}
			}
			if(flag == -1)
				break;
		}

		long long a1 = 0, b = 0, p = 1;
		for(int i=d-1 ; i>=0 ; i--){
			a1 += two[i] * p;
			b += one[i] * p;
			p = p * 10;
		}

		printf("%lld %lld\n", a1, b);
	}

	return 0;
}