#include <cstdio>
#include <algorithm>

using namespace std;

int pow10(int c) {
    int ret = 1;
    for (int i = 1; i <= c; i++) ret *= 10;
    return ret;
}

int dig(int n, int pos) {
    return (n/pow10(pos))%10;
}

int swapdig(int n, int a, int b) {
    return n - dig(n, a) * pow10(a) - dig(n, b) * pow10(b) + dig(n, a) * pow10(b) + dig(n, b) * pow10(a);
}

void solve() {
    int n; scanf("%d", &n);
    int mi = n, ma = n;
    for (int i = 0; pow10(i) < n; i++)
    for (int j = i+1; pow10(j) < n; j++) if (!(i == 0 && dig(n, j) == 0)) {
        mi = min(mi, swapdig(n, i, j));
        ma = max(ma, swapdig(n, i, j));
    }
    printf("%d %d\n", mi, ma);
}

int main() {
    int t; scanf("%d", &t);
    for (int i = 1; i <= t; i++) {
        printf("Case #%d: ", i);
        solve();
    }
    return 0;
}
