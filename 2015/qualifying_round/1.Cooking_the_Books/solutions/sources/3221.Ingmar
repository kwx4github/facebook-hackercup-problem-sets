#!/usr/bin/python

def smallest(raw):
    best = raw
    arr = []
    while raw>0:
        d = raw%10
        raw /= 10
        arr.insert(0,d)
        
    digits = len(arr)
    for i in range(digits):
        for j in range(digits):
            tmp = arr[i]
            arr[i] = arr[j]
            arr[j] = tmp
            
            if arr[0]>0:
                tot = 0
                for d in arr:
                    tot*=10
                    tot+=d
                if tot<best:
                    best = tot
            
            tmp = arr[i]
            arr[i] = arr[j]
            arr[j] = tmp
        
    return best
    
    
def largest(raw):
    best = raw
    arr = []
    while raw>0:
        d = raw%10
        raw /= 10
        arr.insert(0,d)
        
    digits = len(arr)
    for i in range(digits):
        for j in range(digits):
            tmp = arr[i]
            arr[i] = arr[j]
            arr[j] = tmp
            
            if arr[0]>0:
                tot = 0
                for d in arr:
                    tot*=10
                    tot+=d
                if tot>best:
                    best = tot
            
            tmp = arr[i]
            arr[i] = arr[j]
            arr[j] = tmp
        
    return best

def doit():
    #print repr(st)
    #a=raw_input().split()
    
    raw = input()
    if raw==0:
        print 0, 0
        return
    
    print smallest(raw), largest(raw)

    

cases = input()
for case in range(1, cases+1):
    
    print ("Case #" + str(case) + ":"), 
    doit()
    
        
