#include <bits/stdc++.h>
using namespace __gnu_cxx;
using namespace std;
string minimizeinside(string str)
{
    //cout<<"minimising: "<<str<<endl;
    int ln=str.length();
    if (ln <2)
        return str;
    char ch= *min_element(str.begin(),str.end());
    int i=ln-1,s;
    for(;i>=0;i--)
        if(str[i]==ch)
        {
            s=i;
            break;
        }
    swap(str[0],str[s]);
    return str;
}
string minimizewhole(string str)
{
    int ln=str.length();
    if (ln <2)
        return str;
    char ch=str[0];
    for(int i=0;i<ln;i++)
    {
        if(str[i]<ch&&str[i]!=48)
            ch=str[i];
    }
    int i=ln-1,s;
    for(;i>=0;i--)
        if(str[i]==ch)
        {
            s=i;
            break;
        }
    swap(str[0],str[s]);
    return str;
}
string maxmize(string str)
{
    int ln=str.length();
    if (ln <2)
        return str;
    char ch= *max_element(str.begin(),str.end());
    int i=ln-1,s;
    for(;i>=0;i--)
        if(str[i]==ch)
        {
            s=i;
            break;
        }
    swap(str[0],str[s]);
    return str;
}
int main()
{
    freopen("cooking_the_books.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int t,ho,ln;
    string str,neww,tomin,tomaks;
    cin>>t;
    for(int i=1;i<=t;i++)
    {
        cin>>str;
        ln=str.length();
        tomin=str;
        tomaks=str;
        ho=0;
        while(*min_element(str.begin()+ho,str.end()) == str[ho] && ho<ln)
              ho++;
        if (ho)
        {
            neww=minimizeinside(str.substr(ho,-1));
            tomin.replace(ho,-1,neww);
        }
        else{
            tomin=minimizewhole(str);
        }
        ho=0;
        while(*max_element(str.begin()+ho,str.end()) == str[ho]&& ho<ln)
              ho++;
        if (ho)
        {
            neww=maxmize(str.substr(ho,-1));
            tomaks.replace(ho,-1,neww);
        }
        else{
            tomaks=maxmize(str);
        }
        cout<<"Case #"<<i<<": "<<tomin<<" "<<tomaks<<endl;
    }

	return 0;
}
