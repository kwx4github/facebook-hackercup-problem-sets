#include <cstdio> 
#include <algorithm> 
#include <utility> 
#include <vector> 
#include <cstring> 
#include <string> 
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
#define INF                         (int)1e9
#define EPS                         1e-9
#define bitcount                    __builtin_popcount
#define gcd                         __gcd
#define forall(i,a,b)               for(int i=a;i<b;i++)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                    memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define mp                          make_pair
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))
#define checkbit(n,b)                ( (n >> b) & 1)
#define gc getchar_unlocked 

using namespace std ; 

inline void swap(int n1, int n2, int* arr)
{
	int temp = arr[n1] ; 
	arr[n1] = arr[n2] ; 
	arr[n2] = temp ; 
}
inline pair<int,int> getM(int* arr, int size)
{
	int min = arr[0] == 0? INF : arr[0] ; 
	int max = arr[0]  ; 
	int pos1 = 0 ,pos2 = 0  ; 
	for(int i=1; i<size; i++)
	{
		if(arr[i] > max)
		{
			max = arr[i] ; 
			pos1 = i  ;
		}
		else if((arr[i] < min) &&(arr[i] != 0))
		{
			min = arr[i] ; 
			pos2 = i ; 
		}
	}
	return make_pair(pos1,pos2) ; 
}

inline void print(int* arr, int size)
{
	for(int i=0; i<size; i++)
	{
		printf("%d", arr[i]) ; 
	}
}

int main()
{
	int tc ; 
	s(tc) ;
	gc() ; 
	int maxi = tc ; 
	int arr[10],narr[10] ; 
	while(tc--)
	{
		char c = 'e' ; 
		int i = 0 ; 
		while(c != '\n')
		{
			c = gc() ;
			arr[i++] = c - '0' ; 
		}
		i-- ; 
		pair<int, int> pp  = getM(arr, i) ; 
		for(int j=0; j<i; j++)
		{
			narr[j] = arr[j] ; 
		}
		swap(0,pp.second, arr) ; 
		printf("Case #%d: ", maxi - tc) ;
		print(arr, i) ; 
		printf(" ") ; 
		swap(0,pp.first, narr) ; 
		print(narr,i) ; 
		printf("\n") ; 

	}
}
