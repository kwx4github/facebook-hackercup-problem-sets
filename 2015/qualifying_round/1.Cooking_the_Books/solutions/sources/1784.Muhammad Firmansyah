import sys, traceback, time

def minimizeSwap(nums, canSwap0=False):
    Ns = nums[:]
    if (len(Ns) == 1): return Ns
    
    minNum = Ns[0]
    posMin = 0
    for i in range(1, len(Ns)):
        num = Ns[i]
        if (not canSwap0) and (num == 0): continue
        if (num <= minNum):
            minNum = num
            posMin = i
    
    if minNum != Ns[0]:
        Ns[posMin] = Ns[0]
        Ns[0] = minNum
    else:
        Ns2 = minimizeSwap(Ns[1:], True)
        Ns = [Ns[0]] + Ns2
    return Ns

def maximizeSwap(nums, canSwap0=False):
    Ns = nums[:]
    if (len(Ns) == 1): return Ns
    
    maxNum = Ns[0]
    posMax = 0
    for i in range(1, len(Ns)):
        num = Ns[i]
        if (num >= maxNum):
            maxNum = num
            posMax = i
    
    if maxNum != Ns[0]:
        Ns[posMax] = Ns[0]
        Ns[0] = maxNum
    else:
        Ns2 = maximizeSwap(Ns[1:], True)
        Ns = [Ns[0]] + Ns2
    return Ns

def main():
    # ##################### take the input #####################
    # file name parameters
    fin = r'\\ppfs6.physics.ox.ac.uk\Particle\kasim\Others\CodeJam\FB2015\qualification\A-practice.in'
    fout = r'\\ppfs6.physics.ox.ac.uk\Particle\kasim\Others\CodeJam\FB2015\qualification\A-practice.out'
    
    # read the input file
    f = open(fin, 'r')
    s = f.read()
    f.close()
    lines = s.split('\n')
    
    # #################### parse the input and process the input #######################
    answers = []
    T = eval(lines.pop(0))
    for i in range(T):
        t1 = time.clock()
        print i+1,
        
        Ns = [eval(p) for p in lines.pop(0)]
        resMin = minimizeSwap(Ns)
        resMax = maximizeSwap(Ns)
        
        resMin = eval("".join([str(p) for p in resMin]))
        resMax = eval("".join([str(p) for p in resMax]))
        
        answers.append(str(resMin) + " " + str(resMax))
        
        t2 = time.clock()
        print "in " + str(round((t2-t1)*1000)/1000.) + "s"
    
    # #################### write the output ####################
    s = []
    for j in range(1, T+1):
        strAns = "Case #" + str(j) + ": " + str(answers[j-1])
        s.append(strAns)
    
    s = "\n".join(s)
    f = open(fout, 'w')
    f.write(s)
    f.close()

try:
    main()
    print "Finish"
    raw_input()
except:
    traceback.print_exc()
    raw_input()
