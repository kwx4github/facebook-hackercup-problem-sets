#
# 15: Cooking the Books
# Facebook Hacker Cup Qualifer
# Author: Jeremy Kao
#
# Overview: Given n inputs, print "Case #n: smallest largest", where smallest
# and largest values are derived after one swap of input.
#

import sys

def getLargest( inputValueStr ):
    if len(inputValueStr) < 2:
        return inputValueStr

    digits = list(inputValueStr.strip())
    maxDigit = -1
    maxDigitIndex = 0
    toSwapIndex = 0
    for i, digitStr in enumerate(digits):
        digitInt = int(digitStr)
        if i == 0 and digitInt == 9:
            continue
        if digitInt >= maxDigit:
            maxDigit = digitInt
            maxDigitIndex = i

    for i, digitStr in enumerate(digits):
        digitInt = int(digitStr)
        if i < maxDigitIndex and maxDigit > digitInt:
            toSwapIndex = i
            break

    toSwap = digits[toSwapIndex]
    digits[toSwapIndex] = digits[maxDigitIndex]
    digits[maxDigitIndex] = toSwap

    return "".join(digits)

def getLargest2( inputValueStr ):
    if len(inputValueStr) < 2:
        return inputValueStr

    digits = list(inputValueStr.strip())
    for i in range(len(digits)):
        toSwapPtr = 0
        currDigit = int(digits[i])
        #find largest digit after currPtr
        for j in range(i+1, len(digits)):
            toSwapDigit = int(digits[j])
            if toSwapDigit > currDigit and toSwapDigit >= int(digits[toSwapPtr]):
                toSwapPtr = j
        if toSwapPtr > 0:
            toSwap = digits[toSwapPtr]
            digits[toSwapPtr] = digits[i]
            digits[i] = toSwap
            break

    return "".join(digits)


def getSmallest( inputValueStr ):
    if len(inputValueStr) < 2:
      return inputValueStr

    digits = list(inputValueStr.strip())
    minDigit = 10
    minDigitIndex = 0
    toSwapIndex = -1
    for i, digitStr in enumerate(digits):
      digitInt = int(digitStr)
      if digitInt <= minDigit:
        minDigit = digitInt
        minDigitIndex = i

    for i, digitStr in enumerate(digits):
        digitInt = int(digitStr)
        if minDigit == 0 and i == 0:
            continue
        if i < minDigitIndex and minDigit < digitInt:
            toSwapIndex = i
            break

    if toSwapIndex >= 0:
        toSwap = digits[toSwapIndex]
        digits[toSwapIndex] = digits[minDigitIndex]
        digits[minDigitIndex] = toSwap

    return "".join(digits)

def main():
  arguments = sys.argv
  fileName = ""
  linesInFile = []

  if len(arguments) > 1:
    fileName = arguments[1]
  else:
    print 'Please give input file.'
    return;

  with open(fileName) as file:
    linesInFile = file.readlines()

  for i in range(len(linesInFile)):
    if i == 0:
      continue
    smallestValue = getSmallest(linesInFile[i])
    largestValue = getLargest2(linesInFile[i])
    print "Case #%d: %s %s" % (i, smallestValue, largestValue)

main()
