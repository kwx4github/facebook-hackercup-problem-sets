import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Maryam
 */
class Solution {
    String temp;
    int max, min;
    char tempChar, tempCharArray[];
    String out="";
    int maxPos, minPos;
    int maxS, minS;
    String maxString, minString;
    boolean maxSwap, minSwap = false;
    File inFile = new File("input.txt");
    File outFile = new File("output.txt");
    
    void run(){
        try {
            BufferedWriter output = new BufferedWriter(new FileWriter(outFile));
            Scanner s = new Scanner(inFile);
            int num = s.nextInt();
            for(int i=0;i<num;i++){
                maxSwap = minSwap = false;
                maxPos = 0;
                minPos = 1000000000;
                temp = s.next();
                tempCharArray = temp.toCharArray();
                for (int j=1;j<temp.length();j++){
                   max = min = tempCharArray[j-1];
                   if(maxSwap&&minSwap)
                       break;
                   if(!maxSwap){
                       maxS = j-1;
                       getMax(j);
                   }
                   if(!minSwap){
                       minS = j-1;
                       getMin(j);
                   }
                }
                
                //max
                if(maxPos==0){
                    maxString = new String(tempCharArray);
                }
                else{
                    tempChar = tempCharArray[maxS];
                    tempCharArray[maxS] = tempCharArray[maxPos];
                    tempCharArray[maxPos] = tempChar;
                    maxString = new String(tempCharArray);
                }
                //min
                if(minPos==1000000000){
                    minString = temp;
                }
                else{
                    tempCharArray = temp.toCharArray();
                    tempChar = tempCharArray[minS];
                    tempCharArray[minS] = tempCharArray[minPos];
                    tempCharArray[minPos] = tempChar;
                    minString = new String(tempCharArray);
                }
                
                           
                output.write("Case #"+(i+1)+": "+minString+" "+maxString);
                output.newLine();
            }
            output.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Solution.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Solution.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    
    void getMax(int beg){
        for(int j=beg;j<temp.length();j++){
            tempChar = tempCharArray[j];
            if(tempChar>max){
                max = tempChar;
                maxPos = j;
                maxSwap = true;
            }                    
        }
    }
    
    void getMin(int beg){
        for(int j=beg;j<temp.length();j++){
            tempChar = tempCharArray[j];
            if(beg==1){
                if(tempChar<min && tempChar!='0'){
                    min = tempChar;
                    minPos = j;
                    minSwap = true;
                }
            }
            else{
                if(tempChar<min){
                    min = tempChar;
                    minPos = j;
                    minSwap = true;
                }
            }
        }
    }

}

public class Test{
    public static void main(String[] args) {
        Solution s = new Solution();
        s.run();
    }
}