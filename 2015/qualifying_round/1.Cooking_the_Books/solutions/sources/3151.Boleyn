module Main where

import           Data.List

solve testCase = do line <- getLine
                    let list = sort $ foldl (f line) [line] [1..length line - 1]
                    putStrLn $ "Case #" ++ show testCase ++ ": " ++ head list ++ " " ++ last list
                 where f line x y = if line !! y == '0'
                                       then x
                                       else map (\z -> swap y z line) [0..y - 1] ++ x
                       swap a b list = map (\x -> if x == a then list !! b else if x == b then list !! a else list !! x) [0..length list - 1]

main = do line <- getLine
          mapM_ solve [1..(read line)::Int]
          return ()
