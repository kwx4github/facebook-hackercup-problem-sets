
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cctype>
#include <cassert>
#include <string>
#include <list>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <utility>
#include <algorithm>

using namespace std;

#define ST first
#define ND second
#define PB push_back
#define SZ(a) ((int)((a).size()))
#define CLR(a, x) memset(a, x, sizeof a)
#define REP(i, n) for (auto i = 0; i < (n); i++)
#define FOR(i, a, b) for (auto i = (a); i < (b); i++)
#define FORT(it, l) for (auto it = (l).begin(); it != (l).end(); it++)
#define valid(i, j, n, m) (0 <= (i) && (i) < (n) && 0 <= (j) && (j) < (m))
#define EPSILON 0.000001
#define INF 1000000000
#define MOD 1000000007
#define PI M_PI

#define SCI(n) scanf("%d", &n)
#define SCL(n) scanf("%lld", &n)
#define SCF(f) scanf("%f", &f)
#define SCD(d) scanf("%lf", &d)
#define SCS(s) scanf("%s", s)
#define SCW(n) while (SCI(n) != EOF && n)
#define SCR(n) for (SCI(n); n--;)
#define readline(line) fgets(line, sizeof line, stdin)
#define wreadline(line) while (readline(line), !feof(stdin))

typedef long long int int64;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;

// #define DEBUG

void dbprintf(const char *fmt, ...)
{
#ifdef DEBUG
	va_list arg;
	va_start(arg, fmt);
	vprintf(fmt, arg);
	va_end(arg);
	fflush(stdout);
#endif
}

///////////////////////////////

int g[3], n, f[25][3];

int can(int k, int p, int c, int l)
{
	if (k == n)
		return g[0] == p && g[1] == c && g[2] == l;
	if (p > g[0] || c > g[1] || l > g[2])
		return 0;
	return can(k + 1, p + f[k][0], c + f[k][1], l + f[k][2]) || can(k + 1, p, c, l);
}

int main()
{
	int t, k = 1;
	SCR(t) {
		REP (i, 3)
			SCI(g[i]);
		SCI(n);
		REP (j, n) {
			REP (i, 3) {
				SCI(f[j][i]);
			}
		}
		printf("Case #%d: %s\n", k++, can(0, 0, 0, 0) ? "yes" : "no");
	}
	return 0;
}
