#include <cstdio>
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
#define SIZE 21
struct po{
	int p,c,f;
	po operator + (const po &x) const{
		po res;
		res.p = p + x.p;
		res.c = c + x.c;
		res.f = f + x.f;
		return res;
	}
	bool operator == (const po &x) const {
		return (p == x.p) && (c == x.c) && (f == x.f);
	}
}a[SIZE], dp[1<<SIZE], res;
int main() {
	int t, n;
	freopen("out.txt","w",stdout);
/**************INPUT SPACE***********************/
	scanf("%d",&t);
	for (int cas = 1; cas <= t; cas++) {
		int gP, gC, gF;
		scanf("%d%d%d", &res.p, &res.c, &res.f);
		scanf("%d",&n);
		for (int i = 0;i < n; i++) {
			scanf("%d%d%d",&a[i].p, &a[i].c, &a[i].f);
		}
/**************DEAL SPACE***********************/
		printf("Case #%d: ", cas);
		bool flag = false;
		dp[0].p = dp[0].c = dp[0].f = 0;
		for (int  i = 0; i < (1<<n) && flag == false; i++) {
			for (int j = 0; j < n && flag == false; j++) {
				if ((i & (1 << j)) == 0) {
					dp[i | (1 << j)] = dp[i] + a[j];
					if (dp[i | (1<<j)] == res) {
						flag = true;
					}
				}
			}
		}
		if (flag) printf("yes\n");
		else printf("no\n");
	}
	return 0;
}