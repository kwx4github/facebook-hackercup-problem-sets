#include<bits/stdc++.h>

using namespace std;
class food{
public:
  int p, c,f;
  food(int p, int c, int f):p(p),c(c),f(f){
  }
  bool operator<(int x){
    return (p<x) && (c<x) && (f<x);
  }
  food operator+(food f2)const{
    return food(p+f2.p, c+f2.c, f+f2.f);
  }
  bool operator<( food f2) const{
    return p<f2.p || p==f2.p && c<f2.c || p==f2.p && c==f2.c && f<f2.f;
  }
};
int main(){
  int T,t;
  cin>>T;
  for(t=0;t<T;t++){
    int gp, gc, gf;
    cin>>gp>>gc>>gf;
    int n;
    cin>>n;
    //int p[n],c[n],f[n];
    set<food> configs;
    configs.insert(food(0,0,0));
    for(int fno=0;fno<n;fno++){
      int phere, chere, fhere;
      scanf("%d%d%d",&phere,&chere,&fhere);
      vector<food> newstuff;
      for(set<food>::iterator it=configs.begin();it!=configs.end();it++){
	food newfood=(*it)+food(phere, chere, fhere);
	if(newfood<1001)newstuff.push_back(newfood);
      }
      for(int i=0;i<newstuff.size();i++)configs.insert(newstuff[i]);
    }
    bool ans=(configs.find(food(gp, gc, gf))==configs.end()?false:true);
    printf("Case #%d: %s\n",1+t, (ans?"yes":"no"));
  }      
  return 0;
}
