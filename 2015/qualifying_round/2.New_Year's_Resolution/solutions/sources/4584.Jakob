var fs = require('fs');
var outputLine = 0;
var output = '';

fs.readFile('nyinput.txt', function(err, d) {
    d = d.toString();
    d = d.split("\n");

    var len = parseInt(d[0]);
    var line = 1;

    for (var i = 0; i < len; i++) { //each line
        var prescription = d[line];
        line++;
        var count = parseInt(d[line]);
        var foods = [];
        for (var j = 0; j < count; j++) {
            line++;
            foods.push(d[line]);
        }
        line++;

        process(prescription, foods);

    }

    fs.writeFile('nyoutput.txt', output);
});

function addLine(test) {
    outputLine += 1;
    output += ((outputLine === 1) ? '' : "\n") + 'Case #' + outputLine + ": " + ((test) ? 'yes' : 'no');
}

function process(pre, foods) {
    var prespl = pre.split(' ');
    var gp = parseInt(prespl[0]);
    var gc = parseInt(prespl[1]);
    var gf = parseInt(prespl[2]);

    var p = [];
    var c = [];
    var f = [];

    var foodlen = foods.length;
    for (var i = 0; i < foodlen; i++) {
        var food = foods[i];
        var foodspl = food.split(' ');
        p.push(parseInt(foodspl[0]));
        c.push(parseInt(foodspl[1]));
        f.push(parseInt(foodspl[2]));
    }

    function hasSum() {
        var jitetlen = Math.pow(2,foodlen);
        for (var j = 0; j < jitetlen; j++) {
            var sump = 0;
            var sumc = 0;
            var sumf = 0;
            var getal = j;
            for (var k = foodlen - 1; k > -1; k--) {
                var power = Math.pow(2,k);
                if (getal >= power) {
                    sump += +p[k];
                    sumc += +c[k];
                    sumf += +f[k];
                    getal -= power;
                } else {
                }
            }
            if (sump == gp && sumc == gc && sumf == gf) {
                return true;
            }
        }
        return false;
    }

    addLine(hasSum());
}