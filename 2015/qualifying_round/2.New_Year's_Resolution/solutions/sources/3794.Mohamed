#include<iostream>
#include<vector>
#include<cmath>
#include<math.h>
using namespace std;
struct G
{
	int P, C, F;
}Full,Other;
vector<G>V;

int Can(int index, int P, int C, int F)
{
	if (P == Full.P && C == Full.C && F == Full.F)
		return 1;
	if (index == V.size())
		return 0;

	int Take = Can(index + 1, P + V[index].P, C + V[index].C, F + V[index].F);
	int Skip = Can(index + 1, P, C, F);
	return Take>=Skip?Take:Skip;
}
int main()
{
	freopen("Input.txt", "r", stdin);
	freopen("B.out", "w", stdout);
	int T, N;
	cin >> T;
	for (int CASE = 1; CASE <= T; CASE++)
	{
		V.clear();
		cin >> Full.P >> Full.C >> Full.F;
		cin >> N;
		for (int i = 0; i < N; i++)
		{
			cin >> Other.P >> Other.C >> Other.F;
			V.push_back(Other);
		}
		cout << "Case #"<<CASE<<": ";
		if (Can(0, 0, 0, 0))
		{
			cout << "yes\n";
		}
		else
		{
			cout << "no\n";
		}
	}
	return 0;
}
