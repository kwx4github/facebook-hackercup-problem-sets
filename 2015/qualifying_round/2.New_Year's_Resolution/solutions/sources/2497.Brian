-- @betaveros
{-# OPTIONS_GHC -fno-warn-missing-signatures #-}
import Control.Applicative
import Control.Monad
import Data.List
import Data.Monoid
import Text.Printf

type Food = (Sum Int, Sum Int, Sum Int)

inputFood :: IO Food
inputFood = do
    [a, b, c] <- map read . words <$> getLine
    return (Sum a, Sum b, Sum c)

tc :: Int -> IO ()
tc tci = do
    tgt <- inputFood
    n <- read <$> getLine
    fds <- replicateM n inputFood
    printf "Case #%d: %s\n" tci $
        if any ((== tgt) . mconcat) $ subsequences fds
            then "yes" else "no"

main :: IO ()
main = do
    tcn <- read <$> getLine
    forM_ [1..tcn] tc
