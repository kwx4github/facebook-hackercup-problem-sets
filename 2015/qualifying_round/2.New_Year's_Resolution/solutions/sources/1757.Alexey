#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <deque>
#include <cmath>
#include <ctime>
#include <stack>
#include <set>
#include <map>
#include <cassert>
#include <memory.h>

using namespace std;

#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()

typedef long long li;
typedef long double ld;
typedef vector<int> vi;
typedef pair <int, int> pi;

void solve();

void precalc();

#define FILENAME "souvenir"

int main() {
	string s = FILENAME;
#ifdef RIAD
	freopen("input", "r", stdin);
#ifndef DEBUG
	freopen("output", "w", stdout);
#endif
	//cout<<FILENAME<<endl;
	//assert (s != "change me please");
	clock_t start = clock();
#else
	//freopen(FILENAME ".in", "r", stdin);
	//freopen(FILENAME ".out", "w", stdout);
#endif
	cout.sync_with_stdio(0);
	cout.precision(20);
	cout << fixed;
	int t = 1;
	cin >> t;

	//precalc();
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
#ifdef DEBUG
	cerr << "\n\n" << (clock() - start) / 1.0 / CLOCKS_PER_SEC << "\n\n\n";
#endif
	return 0;
}

void solve() {
	int n;
	
	vector<int> ok(3);
	for (int i = 0; i < 3; ++i) {
		cin >> ok[i];
	}
	
	cin >> n;

	vector<vi> have(n, vi(3));
	for (int u = 0; u < n; ++u) {
		for (int i = 0; i < 3; ++i) {
			cin >> have[u][i];
		}
	}


	bool can = false;
	for (int mask = 0; mask < (1 << n); ++mask) {
		bool now = true;
		for (int j = 0; j < 3; ++j) {
			int get = 0;
			for (int i = 0; i < n; ++i) {
				if (mask & (1 << i)) {
					get += have[i][j];
				}
			}
			if (get != ok[j]) {
				now = false;
				break;
			}
		}
		if (now) {
			can = true;
			break;
		}
	}
	cout << (can ? "yes" : "no") << endl;
}