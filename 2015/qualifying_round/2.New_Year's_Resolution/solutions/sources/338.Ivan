//#pragma comment(linker,"/STACK:16777216") /*16Mb*/
//#pragma comment(linker,"/STACK:33554432") /*32Mb*/
#define _CRT_SECURE_NO_DEPRECATE
#include<sstream>
#include<iostream>
#include<numeric>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<memory>
#include<memory.h>
#include<string>
#include<vector>
#include<cctype>
#include<list>
#include<queue>
#include<deque>
#include<stack>
#include<map>
#include<complex>
#include<set>
#include<algorithm>

using namespace std;

typedef unsigned long long      ui64;
typedef long long               i64;
typedef	vector<int>             VI;
typedef	vector<bool>            VB;
typedef	vector<VI>              VVI;
typedef	vector<string>          VS;
typedef	pair<int,int>           PII;
typedef map<string,int>         MSI;
typedef set<int>                SI;
typedef set<string>             SS;
typedef complex<double>         CD;
typedef vector< CD >            VCD;
typedef map<int,int>            MII;
typedef	pair<double,double>     PDD;

#define PB                      push_back
#define MP                      make_pair
#define X                       first
#define Y                       second
#define FOR(i, a, b)            for(int i = (a); i < (b); ++i)
#define RFOR(i, a, b)           for(int i = (a) - 1; i >= (b); --i)
#define CLEAR(a, b)             memset(a, b, sizeof(a))
#define SZ(a)                   int((a).size())
#define ALL(a)                  (a).begin(), (a).end()
#define RALL(a)                 (a).rbegin(), (a).rend()
#define INF                     (2000000000)

#ifdef _DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

void solve() {
	int A,B,C;
	cin >> A >> B >> C;
	
	int n;
	cin >> n;

	VI a(n), b(n), c(n);
	FOR(i,0,n) {
		cin >> a[i] >> b[i] >> c[i];
	}

	bool res = false;
	FOR(mask,0,1<<n) {
		int sumA = 0, sumB = 0, sumC = 0;
		FOR(i,0,n) {
			
			if(mask & (1<<i)) {
				sumA += a[i];
				sumB += b[i];
				sumC += c[i];

				if(sumA > A || sumB > B || sumC > C) {
					break;
				}
			}
		}

		if(A == sumA && B == sumB && C == sumC) {
			res = true;
			break;
		}
	}
	if(res) {
		printf("yes");
	}
	else {
		printf("no");
	}
}

int main() {
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	int test;
	scanf("%d",&test);
	FOR(test_id,1,test+1) {
		printf("Case #%d: ", test_id);
		cerr << "case #" << test_id << "";
		solve();
		printf("\n");
		cerr << ".\n";
	}
	return 0;
}