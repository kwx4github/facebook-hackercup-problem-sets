#include <algorithm>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <map>
#include <queue>
#include <string>
#include <stack>
#include <set>
#include <vector>
 
using namespace std;
 
typedef long long    LL;
typedef vector <int> VI;
typedef vector <LL>  VL;
typedef vector <VI>  VVI;
typedef vector <VL>  VVL;
 
// Input Macros
#define s(n)               scanf("%d",&n)
#define sl(n)              scanf("%lld",&n)
#define sc(n)              scanf("%c",&n)
#define sf(n)              scanf("%lf",&n)
#define ss(n)              scanf("%s",n)
 
// Output Macros
#define p(n)               printf("%d\n",n)
#define pl(n)              printf("%lld\n",n)
 
// Useful Hardware Instructions
#define bitcount           __builtin_popcount
#define gcd                __gcd
 
// Useful Container Manipulation / Traversal Macros
#define forall(i,a,b)      for(int i=a; i<b; i++)
#define foreach(itr, c)    for( typeof((c).begin()) itr = (c).begin();  itr != (c).end(); ++itr)
#define whole(a)           a.begin(), a.end()
#define in(a,b)            ((b).find(a) != (b).end())
#define pb                 push_back
#define pf                 push_front
#define fill(a,v)          memset(a, v, sizeof a)
#define mp                 make_pair
 
// Some Useful Functions
#define maX(a,b)           ((a) > (b) ? (a) : (b))
#define miN(a,b)           ((a) < (b) ? (a) : (b))
 
// Useful Constants
#define MOD                1000000007
#define INF                (int)1e9
#define EPS                1e-9
 
struct value
{
    int p;
    int c;
    int f;
};

int main()
{
    //freopen("in2.txt","r",stdin);
    int T;
    s(T);
    int caseNum = 0;
    while(T--)
    {
        caseNum++;
        int preq,creq,freq;
        s(preq);s(creq);s(freq);
        int N;
        int found = 0;
        s(N);
        value food[N];
        for(int i=0; i < N; i++)
        {
            s(food[i].p);
            s(food[i].c);
            s(food[i].f);
        }
        for(int mask = 0; mask < (1<<N); mask++)
        {
            int psum = 0;
            int csum = 0;
            int fsum = 0;
            for(int i=0; i < N; i++)
            {
                if(mask&(1<<i))
                {
                    psum += food[i].p;
                    csum += food[i].c;
                    fsum += food[i].f;
                }
            }
            if((psum == preq)&&(csum == creq)&&(fsum == freq))
            {
                found = 1;
                break;
            }
        }
        if(found)
        {
            printf("Case #%d: ",caseNum);
            printf("yes\n");
        }
        else
        {
            printf("Case #%d: ",caseNum);
            printf("no\n");
        }
    }
    return 0;
}