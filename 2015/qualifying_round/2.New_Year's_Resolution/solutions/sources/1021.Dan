#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <cassert>

using namespace std;

#define forall(i,n) for(int i=0; i<(int)(n); i++)

template<class T, class T1, class T2> inline bool Within(T x, T1 xMin, T2 xMax)
    {return (x >= xMin && x <= xMax);}
template<class T, class T1> inline bool Within(T x, T1 xMax)
    {return (x >= 0 && x < xMax);}

typedef vector<int> IntVec;

bool Test(
    int c1, int c2, int c3,
    const IntVec& v1, const IntVec& v2, const IntVec& v3,
    int i
) {
    if (c1==0 && c2==0 && c3==0)
	return true;
    if (i<0 || c1<0 || c2<0 || c3<0)
	return false;
    bool rc = Test(c1, c2, c3, v1, v2, v3, i-1);
    if (rc)
	return true;
    rc = Test(c1-v1[i], c2-v2[i], c3-v3[i], v1, v2, v3, i-1);
    return rc;
}

int main() {
    int nTasks;
    cin >> nTasks;
    for (int iTask=1; iTask<=nTasks; iTask++) {
	int c1, c2, c3, nFoods;
	cin >> c1 >> c2 >> c3;
	cin >> nFoods;
	IntVec v1(nFoods), v2(nFoods), v3(nFoods);
	forall (i, nFoods)
	    cin >> v1[i] >> v2[i] >> v3[i];
	bool rc = Test(c1, c2, c3, v1, v2, v3, nFoods-1);
	cout << "Case #" << iTask << ": " << (rc ? "yes" : "no") << '\n';
    }
}
