using System;
using System.Collections;
using System.Collections.Generic;
 
class TEST{
	static void Main(){
		int T=int.Parse(Console.ReadLine());
		for(int i=1;i<=T;i++){
			Sol mySol =new Sol(i);
			mySol.Solve();
		}
	}
}

class Sol{
	public void Solve(){
		
		int[] G=ria();
		int N=ri();
		int[][] A=new int[N][];
		for(int i=0;i<N;i++)A[i]=ria();
		
		bool chk=false;
		for(int i=0;i<(1<<N);i++){
			int[] sum=new int[3];
			for(int j=0;j<N;j++){
				if(((i>>j)&0x1)>0){
					sum[0]+=A[j][0];
					sum[1]+=A[j][1];
					sum[2]+=A[j][2];
				}
			}
			//Console.WriteLine("case:"+i+" "+String.Join(" ",sum));
			if(sum[0]==G[0]&&sum[1]==G[1]&&sum[2]==G[2]){
				chk=true;
				break;
			}
		}
		
		Console.WriteLine(chk?"yes":"no");
	}

	public Sol(int T){
		Console.Write("Case #{0}: ",T);
	}




	static String rs(){return Console.ReadLine();}
	static int ri(){return int.Parse(Console.ReadLine());}
	static long rl(){return long.Parse(Console.ReadLine());}
	static double rd(){return double.Parse(Console.ReadLine());}
	static String[] rsa(){return Console.ReadLine().Split(' ');}
	static int[] ria(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>int.Parse(e));}
	static long[] rla(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>long.Parse(e));}
	static double[] rda(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>double.Parse(e));}

}

struct Pair{
	public char C;
	public int N;
	public Pair(char c,int n){
		this.N=n;
		this.C=c;
	}
}