file_input = open("new_years_resolution.txt")
file_output = open("new_years_resolution_example_output.txt", "w")

number_of_cases = file_input.readline().strip()

def sum_element(element1, element2):
    g_p = element1[0] + element2[0]
    g_c = element1[1] + element2[1]
    g_f = element1[2] + element2[2]
    return g_p, g_c, g_f

def calculate(foods, totals):
    result = foods[:]
    for index, food in enumerate(foods):
        for food1 in result[index+1:]:
            new_element = sum_element(food, food1)
            if (new_element[0] == totals[0] and new_element[1] == totals[1] and new_element[2] == totals[2]):
                return "yes"
            elif(new_element[0] <= totals[0] and new_element[1] <= totals[1] and new_element[2] <= totals[2]):
                result.append(sum_element(food, food1))
    return "no"

for case in range(1, int(number_of_cases)+1):
    totals = tuple(map(int, file_input.readline().strip().split(" ")))
    number_of_foods = int(file_input.readline().strip())
    foods = []
    for food in range(number_of_foods):
        foods.append(tuple(map(int, file_input.readline().strip().split(" "))))
    if (number_of_foods == 1 and foods[0][0] == totals[0] and foods[0][1] == totals[1] and foods[0][2] == totals[2]):
        answer = "yes"
    else:
        foods = sorted(foods, key=lambda k: k[0], reverse=True)
        answer = calculate(foods, totals)

    if (case == int(number_of_cases)):
        file_output.write("Case #{0}: {1}".format(case, answer))
    else:
        file_output.write("Case #{0}: {1}\n".format(case, answer))

file_input.close()
file_output.close()