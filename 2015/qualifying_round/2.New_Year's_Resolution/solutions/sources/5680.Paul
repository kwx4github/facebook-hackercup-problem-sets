import itertools
from collections import defaultdict

def powerset(iterable):
    xs = list(iterable)
    return itertools.chain.from_iterable(itertools.combinations(xs, n) for n in range(len(xs) + 1))

def main():
    with open("new_years_resolution.txt", "r") as f:
        case = int(f.readline())
        intsplitter = lambda f : [int(x) for x in f.readline().strip().split()]

        def find_combination(foods):
            for comb in powerset(foods):
                zipped = zip(*comb)
                if zipped and sum(zipped[0]) == gp and sum(zipped[1]) == gc and sum(zipped[2]) == gf:
                    print comb, (gp, gc, gf)
                    return True
            return False
        
        for i in range(case):
            gp, gc, gf = intsplitter(f)
            n = int(f.readline())
            foods = [intsplitter(f) for _ in range(n)]

            print "Case #{}: {}".format(i + 1, "yes" if find_combination(foods) else "no")
                    
if __name__ == '__main__':
    main()
