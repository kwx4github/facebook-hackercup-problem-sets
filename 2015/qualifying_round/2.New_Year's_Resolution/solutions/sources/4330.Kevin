package NYResolution;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

/**
 * Created by kevin on 1/9/15.
 */
public class NYResolution {
    public static void main(String args[]) throws IOException {
        String input_file_name = "new_years_resolution.txt";
        String output_file_name = "new_years_resolution_output.txt";

        File input_file = new File(input_file_name);
        File output_file = new File(output_file_name);
        Scanner scan = new Scanner(input_file);
        FileWriter writer = new FileWriter(output_file);

        int T = scan.nextInt();

        ArrayList<int[]> list = new ArrayList<int[]>();

        int testCaseNumber = 1;
        while(testCaseNumber <= T) {
            int[] goal = new int[3];
            for (int i = 0; i < 3; i++) {
                goal[i] = scan.nextInt();
            }

            int N;
            N = scan.nextInt();

            ArrayList<int[]> listOfFoods = new ArrayList<int[]>();
            for (int i = 0; i < N; i++) {
                int[] food = new int[3];
                for(int j = 0; j < 3; j++) {
                    food[j] = scan.nextInt();
                }
                listOfFoods.add(food);
            }

            if(solver(goal, listOfFoods)){
                writer.write("Case #" + testCaseNumber + ": yes\n");
            }
            else{
                writer.write("Case #" + testCaseNumber + ": no\n");
            }

            testCaseNumber++;
        }

        for (int[] testCase : list){

            System.out.println(Arrays.toString(testCase));
        }

        writer.close();
        scan.close();
    }
    static boolean solver(int[] goal, ArrayList<int[]> listOfFoods){
        ArrayList<int[]> main_bucket = new ArrayList<int[]>();
        boolean flag = true;

        for(int[] f : listOfFoods){
            if(flag && f[0] == goal[0] && f[1] == goal[1] && f[2] == goal[2]){
                flag = false;
                return true;
            }
            ArrayList<int[]> temp_bucket = new ArrayList<int[]>();
            for(int[] b : main_bucket){
                if(f[0] + b[0] == goal[0] && f[1] + b[1] == goal[1] && f[2] + b[2] == goal[2]){
                    return true;
                }
                if (!(f[0] + b[0] > goal[0]) || !(f[1] + b[1] > goal[1]) || !(f[2] + b[2] > goal[2])){
                    temp_bucket.add(new int[]{f[0]+ b[0], f[1]+ b[1], f[2]+ b[2]});
                }
            }
            main_bucket.addAll(temp_bucket);
            main_bucket.add(f);
        }
        return false;
    }
}
