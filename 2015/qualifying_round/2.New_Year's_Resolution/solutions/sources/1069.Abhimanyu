import java.io.InputStream;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.Scanner;

public class NewYearResolution {

  private InputStream input;
  private PrintStream output;
  private Scanner inputSc;

  public NewYearResolution(InputStream input, PrintStream output) {
    this.input = input;
    this.output = output;
    init();
  }

  private void init() {
    inputSc = new Scanner(input);
  }

  public void solve() {
    int testCaseCount = inputSc.nextInt();
    for (int testN = 1; testN <= testCaseCount; testN++) {
      solveTestCase(testN);
    }
  }

  private void solveTestCase(int testN) {
    int[] sum = new int[3];
    for (int i = 0; i < 3; i++) {
      sum[i] = inputSc.nextInt();
    }
    int n = inputSc.nextInt();
    int[][] set = new int[n][3];
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < 3; j++) {
	set[i][j] = inputSc.nextInt();
      }
    }

    output.println("Case #" + testN + ": "
	+ (hasSolution(sum, set) ? "yes" : "no"));
  }

  boolean hasSolution(int[] sum, int[][] set) {
    int n = set.length;
    int maxSelection = (1 << n) - 1;
    for (int selection = 1; selection <= maxSelection; selection++) {
      int[] mySum = new int[3];
      for (int i = 0; i < n; i++) {
	if ((selection & (1 << i)) != 0) {
	  for (int j = 0; j < 3; j++) {
	    mySum[j] += set[i][j];
	  }
	}
      }
      if (Arrays.equals(sum, mySum)) {
	return true;
      }
    }
    return false;
  }

  public static void main(String[] args) {
    NewYearResolution obj = new NewYearResolution(System.in, System.out);
    obj.solve();
  }
}
