using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace ConsoleApplication1
{
    class Program
    {
        public class Nutrient
        {
            public int SumP = 0;
            public int SumC = 0;
            public int SumF = 0;
        }
        static void Main(string[] args)
        {
            string[] lines = File.ReadAllLines("input.txt");

            int t = int.Parse(lines[0].ToString());
            string[] result = new string[t];
            int linek = 1;
            
            for (int i = 1; i <= t; i++)
            {
                var valid = false;
                string[] gfc = lines[linek].Split(' ');
                linek++;
                int gp = int.Parse(gfc[0]);
                int gc = int.Parse(gfc[1]);
                int gf = int.Parse(gfc[2]);
                int n = int.Parse(lines[linek].ToString());
               
                List<Nutrient> queue = new List<Nutrient>();
                
                string[] prev = new string[10000000];
                linek++;
                for (int j = 0; j < n; j++)
                {
                    string[] pfc = lines[linek].Split(' ');
                    linek++;
                    int p = int.Parse(pfc[0]);
                    int c = int.Parse(pfc[1]);
                    int f = int.Parse(pfc[2]);


                    int qLen = queue.Count;
                    for (var l = qLen - 1; l >= 0; l--)
                    {
                        Nutrient newNutrient = new Nutrient();
                        newNutrient.SumP = queue[l].SumP + p;
                        newNutrient.SumF = queue[l].SumF + f;
                        newNutrient.SumC = queue[l].SumC + c;
                        if (newNutrient.SumP == gp && newNutrient.SumF == gf && newNutrient.SumC == gc)
                        {
                            valid = true;
                            break;
                        }
                        queue.Add(newNutrient);
                    }
                    if ((p == gp && f == gf && c == gc))
                    {
                        valid = true;
                    }
                    else
                    {
                        queue.Add(new Nutrient() { SumP = p, SumC = c, SumF = f });
                    }
                }
                if (valid)
                {
                    result[i-1] = "Case #" + i + ": yes";
                }
                else
                {
                    result[i-1] = "Case #" + i + ": no";
                }
            }
            File.WriteAllLines("output.txt", result);
        }
  
    }
}
