#include <iostream>
#include <map>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>
#include <math.h>
#include <queue>
#include <set>
#include <string.h>
#include <iomanip>
#include <stdio.h>
#include <ctype.h>

//#pragma comment (linker, "/STACK:167177216")
//-Wl, --stack=

using namespace std;
#define mp(a, b)  make_pair(a, b);

long long fac(int a){
    long long ans = 1;
    for(int i = 2; i <= a; i++){
        ans*=i;
    }
    return ans;
}
const int N = 10005;
int used[N];
int G[N][3][3];
string toStr(int a){
    string ans = "";
    while(a != 0){
        ans.push_back((char)(a%10 + '0'));
        a = a/10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

int toInt(string s){
    int ans = 0;
    for(int i = 0; i < s.length(); i++){
        ans*=10;
        ans+=(s[i]-'0');
    }
    return ans;
}

vector<pair<int, pair<int, int>>> mas;

bool rec(int ostP, int ostC, int ostF, vector<bool> used){
    if(ostP < 0 || ostC < 0 || ostF < 0){
        return false;
    }
    if(ostP == 0 && ostC == 0 && ostF == 0){
        return true;
    }
    bool ans = false;
    for(int i = 0;i < mas.size(); i++ ){
        if(used[i]) continue;
        used[i] = true;
        bool k = rec(ostP - mas[i].first, ostC  - mas[i].second.first, ostF - mas[i].second.second, used);
        used[i] = false;
        
        if(k) ans = true;
    }
    return ans;
}


int main(int argc, const char * argv[])
{
    ///////////////Conect File////////////////////////
    for(int i = 0; i < argc; i++){
        if((string)argv[i] == "viLap"){
            freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
        }
    }
    ///////////////////////////////////////////////////
    int T;
    cin >> T;
    for(int i = 1; i <= T; i++){
        bool ans = false;
        mas.clear();
        int GP, GC, GF;
        cin >> GP >> GC >> GF;
        int N;
        cin >> N;
        for(int j = 0; j < N; j++){
            int p, c, f;
            cin >> p >>c >>f;
            if(p <= GP && c <= GC && f <= GF){
                mas.push_back(make_pair(p, make_pair(c, f)));
            }
        }
        vector<bool> used(mas.size(), 0);
        ans = rec(GP, GC, GF, used);
        
        cout << "Case #" <<i << ": ";
        if(ans) cout << "yes";
        else cout <<"no";
        cout <<endl;
    }
    
    
    return 0;
}


