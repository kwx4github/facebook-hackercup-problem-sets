package yelp;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class Anagrams {
	
	static int [][] foods;
	static HashMap<String, Boolean> db;
	private static String getMaxMin(String number) {
		int min=Integer.MAX_VALUE,max=Integer.MIN_VALUE,minIndex=-1,maxIndex=-1;
		char temp;
		if(number.length()==1)
			return number+" "+number;
		for(int i=0;i<number.length();i++)
		{
			temp=number.charAt(i);
			if(temp!='0' && (int)temp<=min)
			{
				min=(int)temp;
				minIndex=i;
			}
			if((int)temp>=max)
			{
				max=(int)temp;
				maxIndex=i;
			}
		}
		String maxs,mins;
		if(maxIndex==0)
			maxs=number;
		else
			maxs=number.charAt(maxIndex)+number.substring(1,maxIndex)+number.charAt(0)+number.substring(maxIndex+1);
		if(minIndex==0)
			mins=number;
		else
			mins=number.charAt(minIndex)+number.substring(1,minIndex)+number.charAt(0)+number.substring(minIndex+1);
		return mins+" "+maxs;
	}
	
	
	private static boolean Fats(int p,int c, int f ,int i) {
		if(p==0 && c==0 && f==0)
			return true;
		if(i==foods.length || p<0 || c<0 || f<0)
			return false;
		return Fats(p-foods[i][0], c-foods[i][1], f-foods[i][2], i+1) || Fats(p, c, f, i+1);
	}
	
	private static boolean Fat(int p,int c, int f ,int i) {
		if(db.containsKey(p+" "+c+" "+f+" "+i))
			return db.get(p+" "+c+" "+f+" "+i);
		if(p==0 && c==0 && f==0){
			return true;
		}
		if(i==foods.length || p<0 || c<0 || f<0)
			return false;
		boolean b1=Fat(p-foods[i][0], c-foods[i][1], f-foods[i][2], i+1);
		db.put((p-foods[i][0])+" "+ (c-foods[i][1])+" "+ (f-foods[i][2])+" "+ (i+1), b1);
		boolean b2=Fat(p, c, f, i+1);
		db.put(p+" "+c+" "+f+" "+(i+1), b2);
		return b1 || b2;
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader("new_years_resolution.txt"));
		BufferedWriter bw = new BufferedWriter(new FileWriter("output.txt"));

		String sCurrentLine;
		
		int lines=Integer.parseInt(br.readLine()),p,c,f;
		String [] sp;
		for(int i=0;i<lines;i++)
		{
			sCurrentLine=br.readLine();
			sp=sCurrentLine.split(" ");
			p=Integer.parseInt(sp[0]);
			c=Integer.parseInt(sp[1]);
			f=Integer.parseInt(sp[2]);
			sCurrentLine = br.readLine();
			int no=Integer.parseInt(sCurrentLine);
			Anagrams.foods=new int[no][3];
			Anagrams.db=new HashMap<String, Boolean>();
			for(int j=0;j<no;j++)
			{
				sCurrentLine=br.readLine();
				sp=sCurrentLine.split(" ");
				Anagrams.foods[j][0]=Integer.parseInt(sp[0]);
				Anagrams.foods[j][1]=Integer.parseInt(sp[1]);
				Anagrams.foods[j][2]=Integer.parseInt(sp[2]);
			}
			if(Anagrams.Fat(p, c, f, 0))
			bw.write("Case #"+(i+1)+": yes");
			else
				bw.write("Case #"+(i+1)+": no");
			if(i!=lines-1)
				bw.write('\n');
		}
		bw.close();
		br.close();
//		31524
//		897
//		123
//		10
//		5 Case #1: 
//		System.out.println(Anagrams.getMaxMin("89797"));

	}
}
