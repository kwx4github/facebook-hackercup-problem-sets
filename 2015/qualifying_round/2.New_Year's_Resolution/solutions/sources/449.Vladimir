import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;

public class B {

    private static final String FILE_IN = B.class.getSimpleName() + ".in";
    private static final String FILE_OUT = B.class.getSimpleName() + ".out";

    private final void solveTest(final int testId, final Scanner in, final PrintWriter out) throws Exception {

        int p = in.nextInt();
        int c = in.nextInt();
        int f = in.nextInt();

        int n = in.nextInt();

        int[][] a = new int[n][3];
        for (int i = 0; i < n; ++i) {
            a[i][0] = in.nextInt();
            a[i][1] = in.nextInt();
            a[i][2] = in.nextInt();
        }

        boolean can = false;

        for (int m = 1; m < (1 << n); ++m) {
            int pCount = 0;
            int cCount = 0;
            int fCount = 0;

            for (int i = 0; i < n; ++i) {
                if ((m & (1 << i)) == 0) {
                    continue;
                }

                pCount += a[i][0];
                cCount += a[i][1];
                fCount += a[i][2];
            }

            if (pCount == p && cCount == c && fCount == f) {
                can = true;
                break;
            }
        }

        out.printf("Case #%d: %s%n", testId, can ? "yes" : "no");
    }

    private final void solve(final Scanner in, final PrintWriter out) throws Exception {
        for (int testId = 1, testCount = in.nextInt(); testId <= testCount; ++testId) {
            solveTest(testId, in, out);
        }
    }

    public static void main(String[] _args) {
        final String[] args = _args;
        Thread th = new Thread(null, new Runnable() {
            @Override
            public void run() {
                runMain(args);
            }
        }, "test", 16 << 20);
        th.setPriority(Thread.MAX_PRIORITY);
        th.start();
        try {
            th.join();
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
    }

    private static final void runMain(String[] args) {
        try {
            final Scanner in = new Scanner(new File(FILE_IN));
            final PrintWriter out = new PrintWriter(new File(FILE_OUT));
            new B().solve(in, out);
            out.close();
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }
    }
}
