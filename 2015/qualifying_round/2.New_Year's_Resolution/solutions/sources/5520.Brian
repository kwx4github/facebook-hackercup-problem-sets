#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>

using namespace std;

int main() {
  int case_number = 1;
  int T; cin >> T;
  while (T--) {
    int Gp; cin >> Gp;
    int Gc; cin >> Gc;
    int Gf; cin >> Gf;

    vector<int> P;
    vector<int> C;
    vector<int> F;

    int N; cin >> N;
    int n = N;
    while (N--) {
      int p; cin >> p; P.push_back(p);
      int c; cin >> c; C.push_back(c);
      int f; cin >> f; F.push_back(f);
    }

    bool answer = false;
    if (n > 0) {
      for (int i = 1; i <= pow(2, n) - 1; i++) {
        int gp = Gp;
        int gc = Gc;
        int gf = Gf;
        for (int j = 0; j < n; j++) {
          if ((1 << j) & i) {
            gp -= P[j];
            gc -= C[j];
            gf -= F[j];
          }
        }
        if (gp == 0 && gc == 0 && gf == 0) {
          answer = true;
          break;
        }
      }
    }

    cout << "Case #" << case_number << ": " << (answer ? "yes" : "no") << endl;
    case_number++;
  }
  return 0;
}
