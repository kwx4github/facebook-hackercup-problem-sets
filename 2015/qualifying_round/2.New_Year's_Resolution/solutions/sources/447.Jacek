#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORD(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define REP(i,n) FOR(i,0,n)
#define REPD(i,n) FORD(i,0,n)
#define VAR(v,w) __typeof(w) v=(w)
#define FORE(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define PB push_back
#define ALL(c) (c).begin(),(c).end()
#define SIZE(c) ((int)(c).size())
#define MP make_pair
#define FT first
#define SD second
#define CLEAR(a) memset((a), 0, sizeof(a))
#define INT(x) int x; scanf("%d", &x)
#define LLG(x) LL x; scanf("%lld", &x)
#define STR(n,x) char x[n]; scanf("%s", x)
#define LINE(n,x) char x[n]; gets(x)

typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<VI> VVI;
typedef vector<PII> VII;
typedef vector<double> VD;
typedef vector<LD> VLD;
typedef vector<LL> VLL;
typedef vector<bool> VB;

void GEN(int a, int b, int c, int r, int k, int x[]) {
	x[0] = a;
	FOR(i,1,k) x[i] = (LL(x[i - 1]) * b + c) % r;
}

void oneCase();

int main() {
	int ttt;
	scanf("%d\n", &ttt);
	REP(tt, ttt) {
		printf("Case #%d: ", tt + 1);
		oneCase();
		fprintf(stderr, "Case #%d.\n", tt + 1);
		fflush(stderr);
	}
}




int p[30], c[30], f[30];

void oneCase() {
	INT(gp);
	INT(gc);
	INT(gf);
	INT(n);
	REP(i,n) scanf("%d%d%d", &p[i], &c[i], &f[i]);
	int n2 = 1 << n;
	REP(m,n2) {
		int pp = 0, cc = 0, ff = 0;
		REP(i,n) if (m & (1 << i)) {
			pp += p[i];
			cc += c[i];
			ff += f[i];
		}
		if (pp == gp && cc == gc && ff == gf) {
			printf("yes\n");
			return;
		}
	}
	printf("no\n");
}
