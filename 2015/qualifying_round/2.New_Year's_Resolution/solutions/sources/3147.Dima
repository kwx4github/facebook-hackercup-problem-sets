class Array
    def sum
        self.inject{|sum,x| sum + x }
    end
end
class Product
  attr_accessor :protein,:carbohydrates,:fat
  def initialize( protein, carbohydrates, fat )  
     @protein = protein
     @carbohydrates  = carbohydrates
     @fat  = fat
   end 
end
f = File.open("c:/users/dima/desktop/new_years_resolution.txt", "r")
f2  = File.open("c:/users/dima/desktop/out2.txt", 'w') 
quantityofcases = f.readline.to_i
time  = Time.now
for itr in 1..quantityofcases do
 products = []
   stringarray = f.readline.strip.split
   sum1 = stringarray.shift.to_i
   sum2 = stringarray.shift.to_i
   sum3 = stringarray.shift.to_i
   quantityoffoods = f.readline.to_i
   for itr2 in 1..quantityoffoods do
      foods = f.readline.strip.split
      products << Product.new(foods.shift.to_i,foods.shift.to_i,foods.shift.to_i)
    end
#file read and interpreted
def check arraycombination,sumproteintemplate, sumcarbohydratesmplate, sumfattemplate
     arraycombination.each { |e|
    sumprotein=sumcarbohydrates=sumfat = 0
    e.each {|x| 
    sumprotein += x.protein 
    sumcarbohydrates += x.carbohydrates
    sumfat += x.fat }
   if sumprotein ==sumproteintemplate and sumcarbohydrates == sumcarbohydratesmplate and  sumfat ==sumfattemplate
     return true
    end 
  }
  false
 end
  def ispossible? array, sumproteintemplate, sumcarbohydratesmplate, sumfattemplate
 for i in 1..(array.length) do
   if check(array.combination(i).to_a,sumproteintemplate, sumcarbohydratesmplate, sumfattemplate)
    return true
   end
 end 
 false
end

if ispossible?(products,sum1,sum2,sum3)
  f2.puts "Case ##{itr}: yes"
else
  f2.puts "Case ##{itr}: no"
end
end
p Time.now - time
f.close
f2.close

