//includes
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <list>
#include <utility>
#include <algorithm>
#include <cassert>

using namespace std;

//defines-general
typedef long long ll;
typedef long double ld;
#define to(a) __typeof(a)
#define fill(a,val)  memset(a,val,sizeof(a))

//defines-vector
typedef vector<int> vi;
typedef vector<long long> vll;
#define all(vec)  vec.begin(),vec.end()
#define pb push_back
#define sz size()
#define contains(vec,x) (find(vec.begin(),vec.end(),x)!=vec.end())

//defines-iteration
#define repi(i,a,b) for(__typeof(b) i = a;i<b;i++)
#define repii(i,a,b) for(__typeof(b) i = a;i<=b;i++)
#define repr(i,b,a) for(__typeof(b) i = b;i>a;i--)
#define repri(i,b,a) for(__typeof(b) i = b;i>=a;i--)
#define tr(vec,it)  for(__typeof(vec.begin())  it = vec.begin();it!=vec.end();++it)

//defines-pair
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
#define ff first
#define ss second
#define mp make_pair

#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d\n",a)
#define pl(a) printf("%lld\n",a)

ll gp,gc,gf;
ll food[21][3];
ll n;

bool solve(ll idx,ll p,ll c,ll f)
{
    if(p==gp && c==gc && f==gf)
        return true;
    if(p>gp || c > gc || f > gf || idx >= n)
        return false;
    repi(i,idx+1,n)
    {
        if(solve(i,p+food[i][0],c+food[i][1],f+food[i][2]))
            return true;
    }
    return false;
}

int main()
{
    ll test;
    sl(test);
    repii(tt,1,test)
    {
        cin >> gp >> gc >> gf;
        cin >> n;
        repi(i,0,n)
            cin >> food[i][0] >> food[i][1] >> food[i][2];
        if(solve(-1,0,0,0))
            printf("Case #%lld: yes\n", tt);
        else printf("Case #%lld: no\n", tt);

    }
    return 0;
}
