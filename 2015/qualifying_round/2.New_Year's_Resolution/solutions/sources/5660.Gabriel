#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;
// p c g
vector<pair<int,pair<int,int> > > v;
int G,P,C;
bool subsets(){
	
	int c=0,p=0,g=0;
	int n=v.size();
	for(int mask=0;mask<(1<<n);mask++){
		c = 0;
		p = 0;
		g = 0;
		for(int j=0;j<v.size();j++){
			if(mask&(1<<j)){
				p+=v[j].first;//vector
				c+=v[j].second.first;
				g+=v[j].second.second;
			}
		}
		if(p==P and c==C and g==G) return true;
	}

	return false;
}

int main(){
	int N,T,X,Y,n,g,p,c;
	cin>>T;
	for(int test=1 ; test <= T;test++){
		cin>>P>>C>>G>>N;
		for(int i=0;i<N;i++){
			cin>>p>>c>>g;
			v.push_back(make_pair(p,make_pair(c,g)));
		}
		if(subsets())
			cout<<"Case #"<<test<<": yes"<<endl;
		else
			cout<<"Case #"<<test<<": no"<<endl;

		v.clear();
	}
	return 0;
}