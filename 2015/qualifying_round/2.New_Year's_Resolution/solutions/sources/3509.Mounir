#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int P[20], C[20], F[20];
int Gp,Gc,Gf;
int N;

// Subset sum problem
int m_search(int n, int Gp_sum, int Gc_sum, int Gf_sum) {

    if ( (Gp_sum == 0) && (Gc_sum == 0) && (Gf_sum == 0) ) return 1;
    if (n == 0) return 0;

    // if last element is so big
    if ( (P[n-1] > Gp_sum) || (C[n-1] > Gc_sum) || (F[n-1] > Gf_sum) )
        return m_search(n-1,Gp_sum,Gc_sum,Gf_sum);

    // else
    return m_search(n-1,Gp_sum,Gc_sum,Gf_sum) || m_search(n-1,Gp_sum-P[n-1],Gc_sum-C[n-1],Gf_sum-F[n-1]); // exclude || include

}

int main() {
    FILE * fi = fopen("new_years_resolution.txt","r");
    FILE * fo = fopen("output.txt","w");
    int T;
    int i;
    fscanf(fi,"%d\n",&T);
    for (i=1;i<=T;i++) {
        char res[10];
        int res_n;
        int k;
        fscanf(fi,"%d %d %d\n",&Gp,&Gc,&Gf);
        fscanf(fi,"%d\n",&N);
        for (k=0;k<N;k++) fscanf(fi,"%d %d %d\n",&P[k],&C[k],&F[k]);
        // solve
        res_n = m_search(N,Gp,Gc,Gf);
        // output
        if (res_n == 0) strcpy(res,"no");
        if (res_n == 1) strcpy(res,"yes");
        fprintf(fo,"Case #%d: %s\n",i,res);
    }
    fclose(fi);
    fclose(fo);
    return 0;
}
