//============================================================================
// Name        : Practice.cpp
// Author      : Code 08
// Version     :
// Copyri   :
// Description :
//============================================================================

#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <math.h>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <iostream>

using namespace std;

#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define sz(v) ((ll)v.size())
#define clr(v, d) memset(v, d, sizeof(v))

typedef stringstream ss;
typedef long long ll;
typedef pair<ll, ll> ii;
typedef vector<vector<ii> > vii;
typedef vector<string> vs;
typedef vector<ll> vi;
typedef vector<double> vd;
typedef long double ld;
typedef vector<vector<ll> > matrix;

int dx[] = { 1, -1, 0, 0 };
int dy[] = { 0, 0, 1, -1 };

const ll oo = (ll) 1e9 + 1;
const double eps = 1e-9;
const ll mod = 1000000007;

//freopen("in.in","r",stdin);
//freopen("out.out","w",stdout);

struct node {
	int p , c , f;
	node(int p, int c, int f): p(p), c(c), f(f) {}
};

int main(){
	freopen("in.in","r",stdin);
	freopen("out.out","w",stdout);

	int test;
	cin>>test;
	int tc=0;
	while(test--){
		tc++;
		int n;


		ll p,c,f;
		cin>>p>>c>>f;
		cin>>n;
		node total = node(p,c,f);
		vector<node>arr;
		for(int i=0;i<n;i++){
			cin>>p>>c>>f;
			arr.push_back(node(p,c,f));
		}
		bool ok = false;
		for(ll i=1;i<(1<<n);i++){
			ok=false;
			p=0;
			c=0;
			f=0;
			for(int index=0;index<n;index++){
				if((i>>index)&1==1){
					p+=arr[index].p;
					c+=arr[index].c;
					f+=arr[index].f;
				}
			}
			if(p==total.p && c==total.c && f==total.f){
				ok=true;
				break;
			}
		}
		if(ok){
			cout<<"Case #"<<tc<<": yes"<<endl;
		}
		else{
			cout<<"Case #"<<tc<<": no"<<endl;
		}
	}
	return 0;
}
