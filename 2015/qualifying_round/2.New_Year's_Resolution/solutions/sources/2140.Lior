using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication5
{
    class Program
    {
        static int[] nums;
        static int[,] foods;

        static void Main(string[] args)
        {
            var a = new int[] { 1, 2, 3 }.Select(x => x * 2);

            var sr = new StreamReader("input.txt");

            var numProblems = int.Parse(sr.ReadLine());

            var sw = new StreamWriter("output.txt");

            for (var iProblem = 0; iProblem < numProblems; iProblem++)
            {
                nums = sr.ReadLine().Split(' ').Select(x => int.Parse(x)).ToArray();
                var numFoods = int.Parse(sr.ReadLine());
                foods = new int[numFoods, 3];
                for (int i = 0; i < numFoods; i++)
                {
                    var food = sr.ReadLine().Split(' ');
                    foods[i, 0] = int.Parse(food[0]);
                    foods[i, 1] = int.Parse(food[1]);
                    foods[i, 2] = int.Parse(food[2]);
                }

                    sw.WriteLine("Case #" + (iProblem + 1) + ": " + (Rec(new int[] { 0, 0, 0 }, 0) ? "yes" : "no"));
            }

            sw.Close();
        }

        static bool Rec(int[] sums, int iFood)
        {
            if (sums[0] == nums[0] && sums[1] == nums[1] && sums[2] == nums[2])
            {
                return true;
            }

            if (sums.Any(x => x < 0))
            {
                return false;
            }

            if (foods.GetLength(0) > iFood)
            {
                var sums1 = sums.ToArray();
                sums1[0] += foods[iFood, 0];
                sums1[1] += foods[iFood, 1];
                sums1[2] += foods[iFood, 2];

                return (Rec(sums1, iFood + 1) || Rec(sums.ToArray(), iFood + 1));
            }

            return false;
        }
    }
}
