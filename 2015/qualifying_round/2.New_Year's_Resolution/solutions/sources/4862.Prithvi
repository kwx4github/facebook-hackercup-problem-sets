import java.util.Scanner;
import java.util.ArrayList;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Collections;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.FileWriter;

public class TestStuff {
	private ArrayList <Boolean> newarray;
	private ArrayList <Integer> alldata;
	public TestStuff () {
		newarray = new ArrayList <Boolean>();
		alldata = new ArrayList <Integer>();
	}
	public static void main (String [] args) {
		TestStuff m = new TestStuff();
		m.getData();
	}

	public void getData() {
		Scanner fromfile = Squeeze.openToRead("input2.txt");
		int numof = fromfile.nextInt();
		while(fromfile.hasNext()) {
			alldata.add(fromfile.nextInt());
		}
		for (int x = 0; x < alldata.size(); x++) {
			int protein = alldata.get(x);
			int carbs = alldata.get(x+1);
			int fat = alldata.get(x+2);
			//System.out.println("\n" + protein + " " + carbs + " "  + fat);
			ArrayList <Integer> protarr = new ArrayList <Integer>();
			ArrayList <Integer> carbarr = new ArrayList <Integer>();
			ArrayList <Integer> fatarr = new ArrayList <Integer>();
			int len = alldata.get(x+3);
			int at = x +4;
			//System.out.println(len);
			for (int y = at; y < (len * 3) + at; y+=3) {
				//System.out.println(alldata.get(y) + " " +alldata.get(y+1) + " " + alldata.get(y + 2) + " -reg");
				protarr.add(alldata.get(y));
				carbarr.add(alldata.get(y+1));
				fatarr.add(alldata.get(y+2));
			}
			parseData(protein, carbs, fat, protarr, carbarr, fatarr);
			x += 3 + (len*3);
		}
		printToFile();
		fromfile.close();
	}

	public void printToFile () {
		PrintWriter outfile = Squeeze.openToWrite("output2.txt");
		outfile.print("\n\n");
		for (int x = 0; x < newarray.size(); x++) {
			outfile.print("\nCase #" + (x+1) + ": ");
			if (newarray.get(x) == true)
				outfile.print("yes");
			else
				outfile.print("no");
		}
		outfile.println("\n\n");
		outfile.close();
	}

	public void parseData(int protein, int carb, int fat, ArrayList<Integer>  protarr, ArrayList<Integer>  carbarr, ArrayList<Integer>  fatarr) {
		newarray.add(checkAll(0,0,0, protein, carb, fat, protarr, carbarr, fatarr));
	}

	public boolean checkAll(int protnow, int carbnow, int fatnow, int protein, int carb, int fat, ArrayList<Integer>  protarr, ArrayList<Integer>  carbarr, ArrayList<Integer>  fatarr) {
		if (protnow > protein || carbnow > carb || fatnow > fat) {
			return false;
		}
		else if (protnow == protein && carbnow == carb && fatnow == fat)
			return true;
		else {
			boolean isfound = false;
			for (int x = 0; x < protarr.size(); x++) {
				if(checkAll(protnow + protarr.get(x), carbnow + carbarr.get(x), fatnow + fatarr.get(x), protein, carb, fat, protarr, carbarr, fatarr)) 
					isfound = true;
			}
			return isfound;
		}
	}

	public static Scanner openToRead(String filestring) {
		Scanner fromfile = null;
		File filename = new File(filestring);
		try {
			fromfile = new Scanner(filename);
		}
		catch (FileNotFoundException e){
			System.out.println("Sorry, " + filestring + ". cannot be found.");
			System.exit(1);
		}
		return fromfile;
	}
	
	public static PrintWriter openToWrite (String filestring) {
		PrintWriter outfile = null;
		try {
			outfile = new PrintWriter(filestring);
		}
		catch (Exception e) {
			System.out.println("Sorry, " + filestring + " cannot be found.");
			System.exit(1);
		}
		return outfile;
	}

}