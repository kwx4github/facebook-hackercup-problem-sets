#include <iostream>
#include <string>
using namespace std;

typedef struct comp_ {
    int p, c, f;
}MacroNutrient;

MacroNutrient minusNutrients(MacroNutrient a, MacroNutrient b) {
    MacroNutrient res;
    res.p = a.p - b.p;
    res.c = a.c - b.c;
    res.f = a.f - b.f;
    return res;
}


bool evaluate_rec(MacroNutrient goal, MacroNutrient candidates[], int nbr_cand, int current_cand = 0) {
    if(goal.c == 0 && goal.p == 0 && goal.f == 0) return true;
    if(current_cand == nbr_cand) return false;

    bool with = evaluate_rec(minusNutrients(goal,candidates[current_cand]), candidates, nbr_cand, current_cand+1);
    if(with) return true;

    return evaluate_rec(goal, candidates, nbr_cand, current_cand+1);
}

int main()
{
    int t;

    cin >> t;

    bool is_possible;

    MacroNutrient goal;
    MacroNutrient cand[20];
    int nbr_cand;

    for(int i = 1; i <= t; i++) {
        cin >> goal.p;
        cin >> goal.c;
        cin >> goal.f;
        cin >> nbr_cand;
        for(int j = 0; j < nbr_cand; j++) {
            cin >> cand[j].p;
            cin >> cand[j].c;
            cin >> cand[j].f;
        }

        is_possible = evaluate_rec(goal, cand, nbr_cand);

        cout << "Case #"<< i <<": ";
        if(is_possible)
            cout << "yes";
        else
            cout << "no";
        cout << endl;
    }

    return 0;
}
