#include<iostream>
using namespace std;
#include<fstream>
#include<algorithm>

class node{
	
	public:
	long long int p;
	long long int f;
	long long int c;

};
node arr[30];
bool comp(node a,node b){
	
	return a.p<b.p;
	
}

long long int counter=0;

void subset(long long int i,long long int n,long long int sum1[],long long int p,long long int q,long long int r){
	if(i==n){
	//	cout << sum1[0]<<" "<<sum1[1]<<" "<<sum1[2]<<endl;
		if(sum1[0]==p && sum1[1]==q && sum1[2]==r)
		counter=1;
		
		return;	
	}
	
	else if(i<n){
		//cout << sum1[0] <<" " << sum1[1]<<" aa "<<sum1[2]<<endl;
		long long int a1[3];
		//a1[0]=0;
		//a1[1]=0;
		//a1[2]=0;
		
		subset(i+1,n,sum1,p,q,r);
		
		a1[0]=sum1[0]+arr[i].p;
		a1[1]=sum1[1]+arr[i].f;
		a1[2]=sum1[2]+arr[i].c;
		
		subset(i+1,n,a1,p,q,r);		
	}
	return ;
	

}

int main(){
	
	ifstream ifile("C:/New folder/ip1.txt");
    ofstream ofile("C:/New folder/out1.txt");
	
	long long int y,t,n,i,j,a,b,c,sum1[4];

	ifile>>t;
	y=t;
	while(t--){
		counter=0;
		ifile >>a>>b>>c;
		
		ifile >>n;
		
		for(i=0;i<n;i++)
		ifile >> arr[i].p>>arr[i].f>>arr[i].c;
		
	//	sort(arr,arr+n,comp);
		sum1[0]=0;
		sum1[1]=0;
		sum1[2]=0;
		
		subset(0,n,sum1,a,b,c);
		
		
		ofile <<"Case #"<<y-t<<": ";
		
		
		if(counter==1)
		ofile<<"yes";
		else
		ofile<<"no";
		ofile<<endl;
	}
	
	
	
	
	return 0;
}
