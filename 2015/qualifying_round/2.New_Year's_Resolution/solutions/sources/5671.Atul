#/usr/local/bin/python

# Atul Kulkarni
# New Year's Resolution

ansStack = "no" 

def recurStack(pStack, cStack, fStack, aStack, cIndex, sumInStack, sumInCStack, sumInFStack, fromIndex, endIndex):
  global ansStack
  
  if (sumInStack == int(gValue[0])):
    for idx in range(len(cIndex)):
      sumInCStack += cStack[cIndex[idx]]
      sumInFStack += fStack[cIndex[idx]]

    if (sumInCStack == int(gValue[1]) and
        sumInFStack == int(gValue[2])):
      ansStack = "yes"

  for currentIndex in range(fromIndex, endIndex):
    if (sumInStack + pStack[currentIndex] <= int(gValue[0])):
      aStack.append(pStack[currentIndex])
      cIndex.append(currentIndex)
      
      sumInStack += pStack[currentIndex]

      recurStack(pStack, cStack, fStack, aStack, cIndex, sumInStack, sumInCStack, sumInFStack, currentIndex + 1, endIndex)

      sumInStack -= aStack.pop()
      cIndex.pop()

with open('new_years_resolution.txt') as input:
  lines = input.readlines()

T = int(lines[0]);
open('new_years_resolution_output.txt', 'w')
if(T >= 1 and T <= 20):
  counter = 1 
  length = len(lines)
  outputList = []
  for iterT in range(int(T)):
    proteinList = []
    carbohydrateList = []
    fatList = []

    gValue = lines[counter].split()

    if((int(gValue[0]) >= 10 and int(gValue[0]) <= 1000) and
        (int(gValue[1]) >= 10 and int(gValue[1]) <= 1000) and
        (int(gValue[2]) >= 10 and int(gValue[2]) <= 1000)):
      N = int(lines[counter+1])

      if (N >= 1 and N <= 20):
        counter = counter+1
        tempList = []
        pcfList = []

        pStack = []
        cStack = []
        fStack = []

        for iterLine in range(N):
          pcfList.insert(iterLine, lines[counter+1+iterLine])
          tempList = lines[counter+1+iterLine].split()
          if((int(tempList[0]) >= 10 and int(tempList[0]) <= 1000) and
            (int(tempList[1]) >= 10 and int(tempList[1]) <= 1000) and
            (int(tempList[2]) >= 10 and int(tempList[2]) <= 1000)):
            pStack.insert(iterLine, int(tempList[0]))  
            cStack.insert(iterLine, int(tempList[1]))  
            fStack.insert(iterLine, int(tempList[2])) 
        
        aStack = []
        cIndex = []
        sumInStack = 0
        sumInCStack = 0
        sumInFStack = 0

        ansStack = "no"

        recurStack(pStack, cStack, fStack, aStack, cIndex, sumInStack, sumInCStack, sumInFStack, 0, len(pStack))
        
        outputList.insert(iterT, ansStack)

        counter = counter + N + 1 

        with open('new_years_resolution_output.txt', 'a') as output:
          output.write("Case #%d: %s\n" %(iterT+1, outputList[iterT]))
          output.close()
