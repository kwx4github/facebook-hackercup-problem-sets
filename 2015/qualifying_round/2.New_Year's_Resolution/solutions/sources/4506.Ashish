#include<iostream>
#include<fstream>
#include<vector> 
using namespace std;
ofstream fout("out.txt");
int getAns(int array[], int array1[], int array2[],int length,int p, int c, int f,int caseno)
{
  long int numOfSubsets = 1 << length,i;  
   	for(i = 1; i < numOfSubsets;i++)
 	{
	 	long int pos = length - 1;
	 	int total = 0;
     	long int bitmask = i;
     	vector<int> idxArr;
     	while(bitmask > 0)
    	{
     		if(bitmask & 1)
     		{
     			total+=(array[pos]);
     			idxArr.push_back(pos);
     		}
			bitmask >>= 1;
     		pos--;
     		if(total==p)
     		{
     			int tempTotal=0;
     			for(int j = 0;j < idxArr.size();j++)
     			{
     				tempTotal += array1[idxArr.at(j)];
     			}
     			if(tempTotal==c)
     			{
     				tempTotal=0;
     				for(int j = 0;j < idxArr.size();j++)
     				{
     					tempTotal += array2[idxArr.at(j)];
     				}
     				if(tempTotal==f)
     				{
     					fout<<"Case #"<<caseno<<": yes\n";
     					//cout<<"Yes\t No of Totalsubsets="<<numOfSubsets<<"\tChecked:"<<i<<"\n";
						 return 0;
     				}
     			}
     		}
    	}  
    	idxArr.clear();
    }
    //cout<<"No\t no of Totalsubsets="<<numOfSubsets<<"\tChecked:"<<i<<"\n";
    fout<<"Case #"<<caseno<<": no\n";
    return 1;
}
int main()
{
	ifstream fin("new_years_resolution.txt");
	int t,n,gp,gc,gf,*p,*c,*f;
	fin>>t;
	for(int tno=1;tno<=t ;tno++)
	{
		fin>>gp>>gc>>gf>>n;
		p = new int[n];
		c = new int[n];
		f = new int[n];
		for(int i=0;i<n;i++)
		{
			fin>>p[i]>>c[i]>>f[i];
		}
		getAns(p, c, f,n, gp,gc,gf,tno);//=='n')	
	}
	return 0;
}
