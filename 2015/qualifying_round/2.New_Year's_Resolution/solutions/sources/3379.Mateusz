#include <iostream>
#include <algorithm>
#include <fstream>
#include <vector>

using namespace std;

typedef unsigned long long ull;

ull pot[21];

bool dasie(vector<int> gdzie1, vector<int> gdzie2, vector<int> gdzie3, int ile1, int ile2, int ile3, int ileElem)
{
    for(ull i = 0; i < pot[ileElem]; i++)
    {
        ull tak = i;
        int suma1 = 0, suma2 = 0, suma3 = 0;
        int wskaznik = 0;
        while(tak > 0)
        {
            if(tak % 2)
            {
                suma1 += gdzie1[wskaznik];
                suma2 += gdzie2[wskaznik];
                suma3 += gdzie3[wskaznik];
            }

            tak /= 2;
            wskaznik++;
        }
        if(suma1 == ile1 && suma2 == ile2 && suma3 == ile3)
            return true;
    }
    return false;
}

int main()
{
    ifstream(fin)("new_years_resolution.txt");
    ofstream(fout)("new_years_resolution_output.txt");
    int t;
    fin >> t;

    pot[0] = 1;

    for(int i = 1; i < 21; i++)
        pot[i] = pot[i - 1] * 2;

    vector<int> pvec, cvec, fvec;
    for(int i = 0; i < t; i++)
    {
        fout << "Case #" << i + 1 << ": ";
        int p, c, f;
        fin >> p >> c >> f;
        int n;
        fin >> n;
        for(int j = 0; j < n; j++)
        {
            int tempp, tempc, tempf;
            fin >> tempp >> tempc >> tempf;
            pvec.push_back(tempp);
            cvec.push_back(tempc);
            fvec.push_back(tempf);
        }
        if(dasie(pvec, cvec, fvec, p, c, f, n))
            fout << "yes" << endl;
        else
            fout << "no" << endl;
        pvec.clear();
        cvec.clear();
        fvec.clear();
    }

    fin.close();
    fout.close();

    return 0;
}
