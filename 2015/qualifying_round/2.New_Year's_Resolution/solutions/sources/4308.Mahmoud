#define _CRT_SECURE_NO_DEPRECATE
#include <vector>
#include <list>
#include <map>
#include <math.h>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <string>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <string.h>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <ctime>
using namespace std;

struct food
{
	int protiene;
	int carpohyrates;
	int fats;
};

vector<food> vec;
int p, c, f;

bool bt(int indx, int pr, int cr, int ft)
{
	if (pr > p || cr > c || ft > f)
		return false;
	if (indx == vec.size())
	{
		if (pr == p && cr == c && ft == f)
			return true;
		return false;
	}
	return bt(indx, pr + vec[indx].protiene, cr+vec[indx].carpohyrates, ft+vec[indx].fats) || bt(indx + 1, pr + vec[indx].protiene, cr+vec[indx].carpohyrates, ft+vec[indx].fats) || bt(indx + 1, pr, cr, ft);
}


int main()
{
	//freopen("new_years_resolution.txt", "r", stdin);
	//freopen("output1.txt", "w", stdout);
	
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		cin >> p >> c >> f;
		int k;
		cin >> k;
		food d;
		for (int i = 0; i < k; i++)
		{
			cin >> d.protiene >> d.carpohyrates >> d.fats;
			vec.push_back(d);
		}
		if (bt(0, 0, 0, 0))
			cout << "Case #" << i << ": yes" << endl;
		else
			cout << "Case #" << i << ": no" << endl;

		vec.clear();
	}
}