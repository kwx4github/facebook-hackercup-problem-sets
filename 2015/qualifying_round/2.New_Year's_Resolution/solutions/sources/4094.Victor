import java.io.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by victor on 1/9/15.
 */
public class NewYearsResolution {

    private static class Meal {
        final int gp;
        final int gc;
        final int gf;

        public Meal(int gp, int gc, int gf) {
            this.gp = gp;
            this.gc = gc;
            this.gf = gf;
        }

        public Meal(String line) {
            String[] goal = line.split(" ");
            gp = Integer.parseInt(goal[0]);
            gc = Integer.parseInt(goal[1]);
            gf = Integer.parseInt(goal[2]);
        }

        public Meal add(Meal other) {
            return new Meal(gp + other.gp, gc + other.gc, gf + other.gf);
        }

        public boolean exactFit(Meal other) {
            return gp == other.gp && gc == other.gc && gf == other.gf;
        }

        public boolean overflows(Meal other) {
            return gp > other.gp || gc > other.gc || gf > other.gf;
        }
    }

    public static boolean solve(List<Meal> food, Meal goal) {
        return solve(food, goal, new Meal(0,0,0));
    }

    private static boolean solve(List<Meal> food, Meal goal, Meal current) {
        if (current.exactFit(goal))
            return true;
        if (current.overflows(goal))
            return false;
        if (food.isEmpty())
            return false;
        List<Meal> next = food.subList(1, food.size());
        return solve(next, goal, current) || solve(next, goal, current.add(food.get(0)));
    }

    public static void main(String[] args) throws IOException {
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {
            int t = Integer.parseInt(reader.readLine());
            for (int i = 1; i <= t; i++) {
                Meal goal = new Meal(reader.readLine());
                int n = Integer.parseInt(reader.readLine());
                List<Meal> food = new ArrayList<>(n);
                for (int j = 0; j < n; j++)
                    food.add(new Meal(reader.readLine()));
                System.out.printf("Case #%d: %s%n", i, solve(food, goal)? "yes" : "no");
            }
        }
    }

    public static class FileRunner {
//        private static final String IN_FILE = Consts.baseDir + "new_years_resolution_example_input.txt";
        private static final String IN_FILE = Consts.baseDir + "new_years_resolution.txt";
        private static final String OUT_FILE = Consts.baseDir + "new_years_resolution_output.txt";

        public static void main(String[] args) {
            try (FileInputStream inputStream = new FileInputStream(IN_FILE);
                 PrintStream outputStream = new PrintStream(new FileOutputStream(OUT_FILE))) {
                System.setIn(inputStream);
                System.setOut(outputStream);

                NewYearsResolution.main(args);
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }
    }
}
