/*
Author: Golam Rahman Tushar
........Aust Cse 27th batch.........
*/

//{ Template

//{ C-headers
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <climits>
#include <cfloat>
#include <cctype>
#include <cassert>
#include <ctime>
//}
//{ C++-headers
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <utility>
#include <string>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <map>

using namespace std;
//}

//}
//{ Floating-points
#define EPS DBL_EPSILON
#define abs(x) (((x) < 0) ? - (x) : (x))
#define zero(x) (abs (x) < EPS)
#define equal(a,b) (zero ((a) - (b)))
#define PI 2 * acos (0.0)
#define INF (1<<29)
#define ll long long
#define CountOne(mask) __builtin_popcountll(mask)

template<class T1> void debug(T1 e){cout<<e<<endl;}
template<class T1,class T2> void debug(T1 e1,T2 e2){cout<<e1<<"\t"<<e2<<endl;}
template<class T1,class T2,class T3> void debug(T1 e1,T2 e2,T3 e3){cout<<e1<<"\t"<<e2<<"\t"<<e3<<endl;}
template <typename T>
std::string to_string(T const& value) {
    stringstream sstr;
    sstr << value;
    return sstr.str();
}
//}
template <class T> T gcd(T a,T b){if(b==0) return a;else return gcd(b,a%b);}
template <class T> T lcm(T a,T b){return (a*b)/gcd(a,b);}
template <class T> T power( T a, T b){if(b==0) return 1; T x=a;for(T i=2;i<=b;i++) a=a*x;return a;}
template <class T> T BigMod(T a,T b,T c){if(a==0) return 0;if(b==0) return 1;if(b%2==0){T x=BigMod(a,b/2,c)%c;return (x*x)%c;}else return  ((a%c)*BigMod(a,b-1,c)%c)%c;}

bool isVowel(char ch){ch=tolower(ch);if(ch=='a' | ch=='e' || ch=='i' || ch=='o' || ch=='u')return true;return false;}

/*................Code Starts Here................*/

struct info {
    int p, c, f;
}food[1007];

int P, C, F, n;

bool solve(int idx, int p, int c, int f) {
    if(p>P || c>C || f>F) return false;
    if(p==P && c==C && f==F) return true;
    if(idx>=n) return false;

    bool ans1 = false;
    if(food[idx].p+p <=P && food[idx].c <= C && food[idx].f <= F)
        ans1 = solve(idx+1, food[idx].p+p, food[idx].c+c, food[idx].f+f);
    return ans1 || solve(idx+1, p, c, f);
}

int main() {
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int t, Case=1, i;
    scanf("%d",&t);

    while(t--) {
        scanf("%d %d %d",&P, &C, &F);
        scanf("%d",&n);

        for(i=0;i<n;i++) {
            scanf("%d %d %d",&food[i].p, &food[i].c, &food[i].f);
        }

        printf("Case #%d: ",Case++);
        if(solve(0, 0, 0, 0)) cout<<"yes"<<endl;
        else cout<<"no"<<endl;
    }
    return 0;
}
