#include <iostream>
#include <vector>
using namespace std;

struct pcf{
  
  int p;
  int c;
  int f;
  
};

vector<bool>trobat;
vector<pcf>vec;
bool trobi;
void recurs(int p, int c, int f, int sump, int sumc, int sumf,int i){
  
  if(sump==p and sumc==c and sumf==f){trobi=true;return;}
  else{
    
    if(sumc<c and sump<p and sumf<f and i< vec.size()){
      
      
      if(not trobat[i]){
	  
	  sumc=sumc+vec[i].c;
	  sump=sump+vec[i].p;
	  sumf=sumf+vec[i].f;
	  trobat[i]=true;
	  recurs(p,c,f,sump,sumc,sumf,i+1);
	  
	  sumc=sumc-vec[i].c;
	  sump=sump-vec[i].p;
	  sumf=sumf-vec[i].f;
	  trobat[i]=false;
      }
      recurs(p,c,f,sump,sumc,sumf,i+1);
    }
    
  }
  
}



int main(){
  
 int n;
 cin>>n;
for(int j=0;j<n;++j){
   int p,c,f,naux;
   cout << "Case #"<<j+1<< ":";
   cin>>p>>c>>f>>naux;
   
   vec=vector <pcf>(naux);
   trobat=vector<bool>(naux,false);
   for(int i=0;i<naux;++i){
     cin >> vec[i].p >> vec[i].c >> vec[i].f;
   }
   trobi=false;
   recurs(p,c,f,0,0,0,0);
     
     if(trobi)cout << " yes" << endl;
     else cout << " no" << endl;
  }
  
}