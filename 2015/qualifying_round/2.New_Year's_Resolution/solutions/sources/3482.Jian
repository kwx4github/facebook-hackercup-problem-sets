#include <assert.h>
#include <cstring>
#include <iostream>
#include <fstream>
#include <climits>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <map>
#include <list>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>

using namespace std;

bool f[1001][1001][1001];

int main() {

	int n;
	cin >> n;

	for (int i = 1; i <= n; i++ ) {
		int A, B, C;
		cin >> A >> B >> C;
		int n;
		cin >> n;
		vector<int> a, b, c;
		for (int j = 0; j < n; j++) {
			int t1, t2, t3;
			cin >> t1 >> t2 >> t3;
			a.push_back(t1);
			b.push_back(t2);
			c.push_back(t3);
		}
		memset(f, false, sizeof(f));
		f[0][0][0] = true;
		for (int i = 0; i < n; i++) {
			for (int j1 = A; j1 >= a[i]; j1--)
			for (int j2 = B; j2 >= b[i]; j2--)
			for (int j3 = C; j3 >= c[i]; j3--) {
				if (f[j1 - a[i]][j2 - b[i]][j3 - c[i]]) f[j1][j2][j3] = true;
			}
		}
		if (f[A][B][C]) {
			printf("Case #%d: yes\n", i);
		} else {
			printf("Case #%d: no\n", i);
		}
	}

	return 0;
}