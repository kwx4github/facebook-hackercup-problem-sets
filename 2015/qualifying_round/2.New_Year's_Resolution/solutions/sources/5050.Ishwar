 
#define LOCAL
#include <functional>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <numeric>
#include <cstring>
#include <climits>
#include <cassert>
#include <cstdio>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <list>
#include <set>
#include <map>

using namespace std; 
 

typedef long long LL;
//typedef long double DB;
typedef double DB;
typedef unsigned int UINT;
typedef unsigned long long ULL;

typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<string> VS;
typedef vector<LL> VL;
typedef vector<DB> VF;
typedef set<int> SI;
typedef set<string> SS;
typedef map<int, int> MII;
typedef map<string, int> MSI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
typedef vector<PII> VII;
typedef vector<VI> VVI;
typedef vector<VII> VVII;


//sorting q sort function 
int ascend (const void * a, const void * b)
{
  return ( *(int*)a - *(int*)b );
}
int descend (const void * a, const void * b)
{
  return ( *(int*)b - *(int*)a );
} 
 
 //printf and scanf 
 int p,c,f,n;
 int food[20][3];
 int fc[20];
 bool ispos(int level,int p)
 {
 	
 	if(p<0)
	 	return false;	
 	if(p==0){
 		int cc=0,ff=0;
 		for(int i=0;i<level;i++){
 			cc+=fc[i]*food[i][1];
 			ff+=fc[i]*food[i][2];
 		}
 		if(ff==f && cc==c)
 		{
 			 	 
 			return true; 
 		}
 			
 	}
 	if(level>=n)
 		return false;
 	
 	for(int i=0;i<= ( p/food[level][0] ); i++)	{
 		fc[level]=i;
 		if( ispos(level+1,p-i*food[level][0]) ){
 			fc[level]=0;
 			return true;
 		}
 	}
 	
 	return false;
 			
 
 }
 
 
int main(){
   
   int t;
   cin>>t;
   int l=0;
   while(t--)
   {
   	 
   	cin>>p>>c>>f;
   	cin>>n;
   	 
   	for(int i=0;i<n;i++)
   		for(int j=0;j<3;j++)
   			cin>>food[i][j];
   	 
   	if(ispos(0,p))
   	cout<<"Case #"<<++l<<": yes"<<endl; 
   	else
   	cout<<"Case #"<<++l<<": no"<<endl; 
   
   }
}








