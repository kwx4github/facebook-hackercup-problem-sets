#include <iostream>
#include <cstdio>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <algorithm>
#include <cmath>
#include <string>
#include <cstring>
#include <sstream>
using namespace std;

#define rep(i, s, t) for (int i = (s); i < (t); i ++)
#define repd(i, s, t) for (int i = (s); i > (t); i --)
#define ll long long

const int maxn = 25;
int T, N, P, C, F;
int p[maxn], c[maxn], f[maxn];
static int cas;
bool flag;

void bfs(int pos, int pp, int cc, int ff) {
  if (pos >= N) return;

  bfs(pos+1, pp, cc, ff);

  pp -= p[pos];
  cc -= c[pos];
  ff -= f[pos];

  if (pp == 0 && cc == 0 && ff == 0) {
    flag = true;
    return;
  }
  if (pp <= 0 || cc <= 0 || ff <= 0) {
    return;
  }
  bfs(pos+1, pp, cc, ff);
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  cin >> T;
  while (T --) {
    flag = false;
    cin >> P >> C >> F;
    cin >> N;
    rep(i, 0, N)
      cin >> p[i] >> c[i] >> f[i];
    bfs(0, P, C, F);
    cout << "Case #" << ++cas << ": ";
    if (flag) cout << "yes";
    else cout << "no";
    cout << endl;
  }
}
