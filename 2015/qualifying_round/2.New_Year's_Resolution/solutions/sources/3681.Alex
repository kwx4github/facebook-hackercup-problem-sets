#include <iostream>
#include <vector>

using namespace std;

struct X {
  int A;
  int B;
  int C;
  X (int a, int b, int c) : A(a), B(b), C(c) {}
};

int main ()
{
  int T;
  cin >> T;
  for(int t = 0; t < T; t++) {
    int cA, cB, cC;
    cin >> cA >> cB >> cC;
    int N;
    cin >> N;
    vector<X> v;
    for(int n = 0; n < N; n++) {
      int A, B, C;
      cin >> A >> B >> C;
      v.push_back(X(A, B, C));
    }
    bool possible = false;
    for(int i = 0; i < (1<<N); i++) {
      int sA = 0, sB = 0, sC = 0;
      for(int k = 0; k < N; k++) {
        if ((i&(1<<k)) > 0) {
          sA += v[k].A;
          sB += v[k].B;
          sC += v[k].C;
        }
      }
      if (sA == cA && sB == cB && sC == cC) {
        possible = true;
        break;
      }
    }
    cout << "Case #" << t+1 << ": ";
    cout << (possible ? "yes" : "no") << endl;
  }
}
