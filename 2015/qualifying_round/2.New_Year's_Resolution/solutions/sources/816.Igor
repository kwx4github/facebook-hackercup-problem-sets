#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <sstream>
#include <vector>
#include <ctime>
#include <stack>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
 
#define REP(i, n) for(int i = 0; i < n; ++i)
#define RREP(i, n) for(int i = n - 1; i >= 0; --i)
#define FOR(i, x, y) for(int i = x; i <= y; ++i)
#define RFOR(i, x, y) for(int i = x; i >= y; --i)
#define SZ(a) (int)(a).size()
#define ALL(a) (a).begin(),(a).end()
#define SORT(a) sort(ALL(a)) 
#define CLEAR(x) memset(x,0,sizeof x);
#define COPY(FROM, TO) memcpy(TO, FROM, sizeof TO);
#define UNIQUE(c) SORT(c),(c).resize(unique(ALL(c))-(c).begin())
#define pb push_back
#define sqr(x) (x)*(x)
#define X first
#define Y second
#define y1 Y1
#define y2 Y2
const long double pi=acos(-1.0);
const long double eps = 1e-9;
const int MAXN = 1000007;
const double INF = 1000000000000000.0;

#define PSS pair<string, string>

int p, c, f;
int n;
int d[22][3];

bool solve()
{
	int p, c, f;
	cin >> p >> c >> f >> n;
	
	REP(i, n)
		REP(j, 3)
			cin >> d[i][j];
	
	REP(mask, (1 << n))
	{
		int s1 = 0, s2 = 0, s3 = 0;
		REP(p, n)
			if (mask & (1 << p))
			{
				s1 += d[p][0];
				s2 += d[p][1];
				s3 += d[p][2];
			}
		if (s1 == p && s2 == c && s3 == f) return true;
	}
	return false;
}

int main()
{
	ios_base::sync_with_stdio(0);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
	int tests;
	cin >> tests;
	FOR(ttt, 1, tests)
	{
		auto r = solve();
		string rr = r ? "yes" : "no";		
		cout << "Case #" << ttt << ": " << rr << endl;
	}
}
