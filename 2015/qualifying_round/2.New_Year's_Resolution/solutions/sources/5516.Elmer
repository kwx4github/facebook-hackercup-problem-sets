#include <bits/stdc++.h>
using namespace std;
#define input freopen("in.txt","r",stdin)
#define output freopen("output.out","w",stdout)
#define FOR(i,a,b) for(int i=a;i<b;i++)
  #define FORD(i,a,b) for(int i=a;i>=b;i--)
  #define REP(i,n) FOR(i,0,n)
  #define PB push_back
  #define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)
  #define mod 1000000007
  #define MAXN 1000010
  #define EPS 1e-8
  #define PI acos(-1)
  #define Vector Point
  struct alimento{
	int x,y,z;
	alimento resta(alimento a,alimento b)
	{
	    a.x=a.x-b.x;
	    a.y=a.y-b.y;
	    a.z=a.z-b.z;
	    return a;
	}
};

bool isSubsetSum(alimento set[], int n, alimento sum)
{
   // Base Cases
   if (sum.x == 0 && sum.y==0 && sum.z==0)
     return true;
   if (n == 0 && (sum.x != 0 || sum.y!=0 || sum.z!=0))
     return false;

   if (set[n-1].x > sum.x && set[n-1].y > sum.y && set[n-1].z > sum.z)
     return isSubsetSum(set, n-1, sum);

 return isSubsetSum(set, n-1, sum) || isSubsetSum(set, n-1,sum.resta(sum,set[n-1]));
}
int main()
{   input;
output;
    int t1;
    cin>>t1;
    int n;
    alimento a;
    FOR(i,0,t1)
    {cin>>a.x>>a.y>>a.z;

    cin>>n;


    alimento a1[n];

     FOR(j,0,n)
        {   cin>>a1[j].x>>a1[j].y>>a1[j].z;
        }

        if(isSubsetSum(a1,n,a))cout<<"Case #"<<i+1<<": "<<"yes"<<endl;

        else cout<<"Case #"<<i+1<<": "<<"no"<<endl;
    }


    return 0;
}
