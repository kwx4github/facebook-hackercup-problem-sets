#include <iostream>
#include <vector>

using std::vector;

bool solve(int gp, int gc, int gf,
           vector<int> p, vector<int> c, vector<int> f,
           int i)
{
    if (gp == 0 && gc == 0 && gf == 0) return true;
    if (gp < 0 || gc < 0 || gf < 0) return false;
    if (i == p.size()) return false;

    return solve(gp - p[i], gc - c[i], gf - f[i], p, c, f, i + 1) ||
           solve(gp, gc, gf, p, c, f, i + 1);
}

int main()
{
    int t;
    std::cin >> t;

    for (int ti = 0; ti < t; ++ti) {
        int gp, gc, gf;
        std::cin >> gp >> gc >> gf;
        int n;
        std::cin >> n;
        vector<int> p, c, f;
        for (int i = 0; i < n; ++i) {
            int pi, ci, fi;
            std::cin >> pi >> ci >> fi;
            p.push_back(pi);
            c.push_back(ci);
            f.push_back(fi);
        }
        std::cout << "Case #" << ti + 1 << ": "
                  << (solve(gp, gc, gf, p, c, f, 0) ? "yes" : "no")
                  << std::endl;
    }

    return 0;
}
