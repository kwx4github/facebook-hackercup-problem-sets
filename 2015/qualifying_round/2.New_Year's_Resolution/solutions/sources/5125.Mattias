using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace facebook_new_years
{
    class Program
    {
        static void Main(string[] args)
        {
            var output = new List<string>();
            using (System.IO.StreamReader file = new System.IO.StreamReader(@"new_years_resolution.txt"))
            {
                var T = file.ReadLine();
                int TN = 0;
                int.TryParse(T, out TN);
                for (int i = 0; i<TN; i++)
                {
                    //Total amount of food
                    int Pr, Ca, Fa;
                    var eat = file.ReadLine();
                    var eats = eat.Split(' ');
                    int.TryParse(eats[0], out Pr);
                    int.TryParse(eats[1], out Ca);
                    int.TryParse(eats[2], out Fa);
                    //number of foods
                    int fn;
                    int.TryParse(file.ReadLine(), out fn);
                    //Read foods
                    var foods = new Food();
                    for (int j=0; j<fn; j++)
                    {
                        int Prs, Cas, Fas;
                        var eatLine = file.ReadLine();
                        var eatLines = eatLine.Split(' ');
                        int.TryParse(eatLines[0], out Prs);
                        int.TryParse(eatLines[1], out Cas);
                        int.TryParse(eatLines[2], out Fas);
                        foods.protein.Add(Prs);
                        foods.carbohydrates.Add(Cas);
                        foods.fat.Add(Fas);
                    }
                    if (foods.Fits(Pr, Ca, Fa))
                    {
                        output.Add("yes");
                    }
                    else
                    {
                        output.Add("no");
                    }


                }
            }
            using (System.IO.StreamWriter oFile = new System.IO.StreamWriter(@"output.txt"))
            {
                int i = 0;
                foreach(var line in output)
                {
                    i++;
                    oFile.WriteLine(string.Format("Case #{0}: {1}", i, line));
                }
            }
        }

    }

    class Food
    {
        public List<int> protein { get; set; }
        public List<int> carbohydrates { get; set; }
        public List<int> fat { get; set; }

        public Food()
        {
            protein = new List<int>();
            carbohydrates = new List<int>();
            fat = new List<int>();
        }

        public bool Fits(int Pr, int Ca, int Fa)
        {
           
            var powerPr = GetPowerSet<int>(protein);
            
            int possibleIndex =-1;
            List<int> possiblePermutations = new List<int>();
            foreach(var subset in powerPr)
            {
                possibleIndex++;
                if (subset.Sum() == Pr)
                    possiblePermutations.Add(possibleIndex);
            }
            if (possiblePermutations.Count == 0)
                return false;

            var powerCa = GetPowerSet<int>(carbohydrates);
            var powerFa = GetPowerSet<int>(fat);

            //check others based on the possible permutations
            foreach(int permutation in possiblePermutations)
            {
                if (powerCa.ElementAt(permutation).Sum() == Ca && powerFa.ElementAt(permutation).Sum() == Fa)
                    return true;
            }
            return false;
            
        }

        public IEnumerable<IEnumerable<T>> GetPowerSet<T>(List<T> list)
        {
            return from m in Enumerable.Range(0, 1 << list.Count)
                   select
                       from i in Enumerable.Range(0, list.Count)
                       where (m & (1 << i)) != 0
                       select list[i];
        }
    }
}
