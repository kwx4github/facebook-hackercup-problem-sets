#include<stdio.h>
#include<iostream>

struct node
{
int p,c,f;
};

bool solve(node data[],int gp,int gc,int gf,int n)
{
	bool a1=false,a2=false;

	if(gp==0 && gc==0 && gf==0)
		return true;
	if(gp<0 || gc<0 || gf<0 || n<0)
		return false;
	a1= solve(data,gp,gc,gf,n-1);
	if(gp-data[n].p >=0 && gc -data[n].c >=0 && gf-data[n].f >=0)
	{
		a2=solve(data,gp-data[n].p,gc -data[n].c,gf-data[n].f,n-1);
	}
	return a1||a2;
}


void myprint(int gp,int gc,int gf,int n, node data[])
{
printf("%d\t%d\t%d\n",gp,gc,gf);
printf("%d\n",n);
for(int i=0;i<n;i++)
{
printf("%d\t%d\t%d\n",data[i].p,data[i].c,data[i].f);
}
}
int main()
{
int t;
scanf("%d",&t);
int i=1;
int gp,gc,gf;
int n;
bool ans;
while(i<=t)
{
scanf("%d%d%d",&gp,&gc,&gf);
scanf("%d",&n);
node data[n];
for(int j=0;j<n;j++)
{
scanf("%d%d%d",&data[j].p,&data[j].c,&data[j].f);
}
ans = solve(data,gp,gc,gf,n-1);
printf("Case #%d: ",i);
if(ans)
	printf("yes\n");
else
	printf("no\n");
i++;
}
return 0;
}
