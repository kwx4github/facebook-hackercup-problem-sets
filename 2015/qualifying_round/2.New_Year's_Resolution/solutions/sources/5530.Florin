using System;
using System.Collections.Generic;
using System.IO;

namespace ConsoleApplication5
{
	class Program
	{
		static void Main(string[] args)
		{
			var stream = new StreamReader(@"c:\users\florin\documents\visual studio 2012\Projects\ConsoleApplication5\ConsoleApplication5\input.in");
			var resultStream = new StreamWriter(@"c:\users\florin\documents\visual studio 2012\Projects\ConsoleApplication5\ConsoleApplication5\output.out");
			
			int t = int.Parse(stream.ReadLine());

			for (int i = 0; i < t; ++i)
			{
				List<Tuple<int, int, int>> mat = new List<Tuple<int, int, int>>(); 

				string[] tokens = stream.ReadLine().Split();
				int targetA = int.Parse(tokens[0]);
				int targetB = int.Parse(tokens[1]);
				int targetC = int.Parse(tokens[2]);

				int n = int.Parse(stream.ReadLine());

				for (int j = 0; j < n; ++j)
				{
					tokens = stream.ReadLine().Split();
					int a = int.Parse(tokens[0]);
					int b = int.Parse(tokens[1]);
					int c = int.Parse(tokens[2]);

					mat.Add(new Tuple<int, int, int>(a, b, c));
				}

				resultStream.WriteLine("Case #{0}: {1}", i + 1, solve(targetA, targetB, targetC, mat));
			}

			resultStream.Close();
			stream.Close();
		}

		static string solve(int a, int b, int c, List<Tuple<int,int,int>> mat)
		{
			bool[][][] posib = new bool[a + 1][][];
			for (int i = 0; i <= a; ++i)
			{
				posib[i] = new bool[b + 1][];
				for (int j = 0; j <= b; ++j)
				{
					posib[i][j] = new bool[c + 1];
				}
			}

			for (int l = 0; l < mat.Count; ++l)
			{
				for (int i = 10; i + mat[l].Item1 <= a; ++i)
				{
					for (int j = 10; j + mat[l].Item2 <= b; ++j)
					{
						for (int k = 10; k + mat[l].Item3 <= c; ++k)
						{
							if (posib[i][j][k])
							{
								posib[i + mat[l].Item1][j + mat[l].Item2][k + mat[l].Item3] = true;

								if (i + mat[l].Item1 == a && j + mat[l].Item2 == b && k + mat[l].Item3 == c)
								{
									return "yes";
								}
							}
						}
					}
				}

				if (mat[l].Item1 <= a && mat[l].Item2 <= b && mat[l].Item3 <= c)
				{
					posib[mat[l].Item1][mat[l].Item2][mat[l].Item3] = true;

					if (mat[l].Item1 == a && mat[l].Item2 == b && mat[l].Item3 == c)
					{
						return "yes";
					}
				}
			}

			return "no";
		}
	}
}
