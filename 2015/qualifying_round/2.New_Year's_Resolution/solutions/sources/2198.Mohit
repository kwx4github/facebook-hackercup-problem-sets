/*mohitmangnani*/
#include<bits/stdc++.h>

#define ll long long int
#define pb push_back
#define mp make_pair
#define s(x) scanf("%lld", &x)
#define SET(x, a) memset(x, a, sizeof(x));
#define trace(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

using namespace std;

ll a[1 << 20],b[1 << 20],c[1 << 20];
int main()
{
	ll test;
	s(test);

	for (int t = 1; t <= test; t++) {
		ll n,gp,gc,gf;
		s(gp);s(gc);s(gf);
		s(n);
		ll pro[n],carb[n],fat[n];
		for (int i = 0; i < n; i++) {
			s(pro[i]);s(carb[i]);s(fat[i]);
		}
		ll ans1,ans2,ans3;
		ll range = pow(2,n);
		bool flag = false;
		a[0] = gp;b[0] = gc;c[0] = gf;
		for (int i = 1; i < range; i++) {
			ans1 = 0;ans2 = 0; ans3 = 0;
			for (int j = 0; j < n; j++) {
				if ((int)pow(2,j) & i) {
					int temp = pow(2,j);
					a[i] = a[temp ^ i] - pro[j];
					b[i] = b[temp ^ i] - carb[j];
					c[i] = c[temp ^ i] - fat[j];
					if (a[i] == 0 && b[i] == 0 && c[i] == 0) {
						flag = true;
					}
					break;
				}
			}

			if (flag) {
				break;
			}
		}

		if (flag == false) {
			cout << "Case #" << t << ": " << "no\n";
		} else {
			cout << "Case #" << t << ": " << "yes\n";
		}

	}

	return 0;
}
