package qualification.round.twothousandandfifteen;

import java.util.Scanner;

public class NewYearsResolution {
	private static int[] foodP;
	private static int[] foodC;
	private static int[] foodF;
	private static int foodsCount;
	private static int targetP, targetC, targetF;

	private static String checkTargetPossible() {
		int maxMask = (1 << foodsCount) - 1;
		for (int currentMask = 0; currentMask <= maxMask; ++currentMask) {
			if (isMatch(currentMask)) {
				return "yes";
			}
		}

		return "no";
	}

	private static boolean isMatch(int mask) {
		int currentF = 0;
		int currentC = 0;
		int currentP = 0;
		for (int i = 0; i < foodsCount; ++i) {
			int currentBit = (mask >> i) & 1;
			currentF += foodF[i] * currentBit;
			currentC += foodC[i] * currentBit;
			currentP += foodP[i] * currentBit;
		}

		return currentF == targetF && currentP == targetP
				&& currentC == targetC;
	}

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int tests = scanner.nextInt();
		for (int i = 0; i < tests; ++i) {
			targetP = scanner.nextInt();
			targetC = scanner.nextInt();
			targetF = scanner.nextInt();

			foodsCount = scanner.nextInt();
			foodP = new int[foodsCount];
			foodC = new int[foodsCount];
			foodF = new int[foodsCount];
			for (int j = 0; j < foodsCount; ++j) {
				foodP[j] = scanner.nextInt();
				foodC[j] = scanner.nextInt();
				foodF[j] = scanner.nextInt();
			}

			String answer = checkTargetPossible();
			System.out.println(String.format("Case #%d: %s", i + 1, answer));
		}
	}
}
