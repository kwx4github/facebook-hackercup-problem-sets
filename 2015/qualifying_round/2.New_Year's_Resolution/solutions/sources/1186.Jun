//c++ standard libraries
#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstddef>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
//#include <ios_base>
#include <iostream>
#include <iterator>
#include <list>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <string>
#include <typeinfo>
#include <utility>
#include <vector>
#include <limits>

//c standard libraries
#include <assert.h>
#include <ctype.h>
#include <errno.h>
#include <float.h> 
#include <limits.h>
#include <locale.h> 
#include <math.h> 
#include <setjmp.h>
#include <signal.h> 
#include <stdarg.h> 
#include <stddef.h> 
#include <stdio.h>
#include <stdlib.h> 
#include <string.h> 
#include <time.h>

void newYearsResolution()
{
	int T, N, Gp, Gc, Gf;
	scanf("%d", &T);
	for (int t = 1; t <= T; ++t)
	{
		scanf("%d %d %d", &Gp, &Gc, &Gf);
		scanf("%d", &N);
		std::vector<int> P(N);
		std::vector<int> C(N);
		std::vector<int> F(N);
		for (int k = 0; k < N; ++k)
			scanf("%d %d %d", &P[k], &C[k], &F[k]);

		int a = (1 << N);
		bool ok = false;
		for (int k = 0; k < a; ++k)
		{
			int p = 0;
			int c = 0;
			int f = 0;
			for (int i = 0; i < N; ++i)
			{
				if (k & (1 << i))
				{
					p += P[i];
					c += C[i];
					f += F[i];
				}
			}

			if (p == Gp && c == Gc && f == Gf)
			{
				ok = true;
				break;
			}
		}
		
		printf("Case #%d: %s\n", t, ok ? "yes" : "no");
	}	
}


int main()
{
	freopen("new_years_resolution.txt", "r", stdin);
	freopen("new_years_resolution_output.txt", "w", stdout);

	newYearsResolution();
}
