#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <vector>
#include <tuple>
#include <functional>
using namespace std;

int main()
{
#ifndef __OLIMP__
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	int T = 0, TC;
	int N;
	int p, c, f;
	int mp, mc, mf;

	scanf("%d", &TC);
	while (T++ < TC)
	{
		vector<tuple<int, int, int>> res;
		res.push_back(make_tuple(0, 0, 0));

		scanf("%d %d %d", &p, &c, &f);
		scanf("%d", &N);
		for (int i = 0; i < N; i++)
		{
			scanf("%d %d %d", &mp, &mc, &mf);
			if (mp <= p && mc <= c && mf <= f)
			{
				for (int j = res.size() - 1; j >= 0; j--)
				{
					int tp = get<0>(res[j]);
					int tc = get<1>(res[j]);
					int tf = get<2>(res[j]);
					if (mp + tp <= p && mc + tc <= c && mf + tf <= f)
					{
						res.push_back(make_tuple(mp + tp, mc + tc, mf + tf));
					}
				}
			}
		}

		bool fCorrect = false;
		for (int i = 0; i < res.size(); i++)
		{
			int tp = get<0>(res[i]);
			int tc = get<1>(res[i]);
			int tf = get<2>(res[i]);
			if (tp == p && tc == c && tf == f)
			{
				fCorrect = true;
				break;
			}
		}

		printf("Case #%d: ", T);
		if (fCorrect)
		{
			printf("yes\n");
		}
		else
		{
			printf("no\n");
		}
	}

	return 0;
}