package fbhack_qr30;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;

class Food
{
	int p, c, f;
	
	public Food(int p, int c, int f)
	{
		this.p = p;
		this.c = c;
		this.f = f;
	}
	
	public Food(Food f)
	{
		this.p = f.p;
		this.c = f.c;
		this.f = f.f;
	}
	
	public Food(String line)
	{
		String[] values = line.split(" ");
		try
		{
			this.p = Integer.parseInt(values[0]);
			this.c = Integer.parseInt(values[1]);
			this.f = Integer.parseInt(values[2]);
		}
		catch(NumberFormatException nfe)
		{
			nfe.printStackTrace();
		}
	}
	
	public Food add(Food f)
	{
		return new Food(this.p + f.p, this.c + f.c, this.f + f.f);
	}
	
	public Food subtract(Food f)
	{
		return new Food(this.p - f.p, this.c - f.c, this.f - f.f);
	}
	
	public boolean isNegative()
	{
		if(this.p < 0 || this.c < 0 || this.f < 0) return true;
		else return false;
	}
	
	public boolean isZero()
	{
		if(this.p == 0 && this.c == 0 && this.f == 0) return true;
		else return false;
	}
}

public class NewYearsResolution
{	
	private static boolean check(Food diet, ArrayList<Food> food, int i, int fc)
	{
		if(diet.isZero()) return true;

		boolean res = false;
		for(int j = i; j < fc; j++)
		{					
			diet = diet.subtract(food.get(j));
			if(!diet.isNegative())
			{
				res = check(diet, food, j+1, fc);
				if(res) return true;
			}
			
			diet = diet.add(food.get(j));
		}
		
		return res;
	}
	
	public static void main(String args[])
	{
		BufferedReader br = null;
		BufferedWriter bw = null;
		
		try
		{
			br = new BufferedReader(new FileReader("/Users/dogirala/Documents/workspace/fbhack_qr30/files/new_years_resolution.txt"));
			bw = new BufferedWriter(new FileWriter("/Users/dogirala/Documents/workspace/fbhack_qr30/files/new_years_resolution_out.txt"));

			int t = Integer.parseInt(br.readLine());
			boolean res = false;
			
			for(int i = 1; i <= t; i++)
			{
				Food total = new Food(br.readLine());
				int fc = Integer.parseInt(br.readLine());
				
				ArrayList<Food> food = new ArrayList<Food>();
				Food diet = new Food(total);
				
				while(fc-- > 0) food.add(new Food(br.readLine()));
				fc = food.size();
				
				res = check(diet, food, 0, food.size());
				
				bw.write("Case #" + i + ": " + (res?"yes":"no"));
				if(i < t) bw.write("\n");
			}
			
			br.close();
			bw.close();
		}
		catch(FileNotFoundException fne)
		{
			fne.printStackTrace();
		}
		catch(NumberFormatException nfe)
		{
			nfe.printStackTrace();
		}
		catch(IOException ioe)
		{
			ioe.printStackTrace();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
}
