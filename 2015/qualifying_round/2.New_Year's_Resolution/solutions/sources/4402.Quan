def lint(lst):
    return map(lambda x:int(x), lst)

def sub(a, b):
    ret = list(a)
    for i in range(0, len(ret)):
        ret[i] -= b[i]
    return ret

def calc(dp, total, foods, i):
    nfoods = len(foods)
    if i >= nfoods:
        for k in range(0, len(total)):
            if 0 != total[k]:
                return False

        return True

    key = tuple(total+[i])
    if key in dp:
        return dp[key]

    consume = True
    for k in range(0, len(total)):
        if total[k] < foods[i][k]:
            consume = False

    ret = calc(dp, total, foods, i+1)
    if (not ret) and consume:
        ret = calc(dp, sub(total, foods[i]), foods, i+1)

    dp[key] = ret
    return ret

def run():
    n = int(raw_input())
    for i in range(0, n):
        total = lint(raw_input().split())
        nfoods = int(raw_input())
        foods = []
        for _ in range(0, nfoods):
            s = lint(raw_input().split())
            foods.append(s)
        
        dp = {}
        ret = calc(dp, total, foods, 0)
        print "Case #{0}: {1}".format(i+1, ["no", "yes"][ret])

if __name__ == "__main__":
    run()
