#include<iostream>
#include<bits/stdc++.h>
using namespace std;

// Returns true if there is a subset of set[] with sun equal to given sum
bool isSubsetSum(int set[], int n, int sum)
{
    // The value of subset[i][j] will be true if there is a subset of set[0..j-1]
    //  with sum equal to i
    bool subset[sum+1][n+1];

    // If sum is 0, then answer is true
    for (int i = 0; i <= n; i++)
      subset[0][i] = true;

    // If sum is not 0 and set is empty, then answer is false
    for (int i = 1; i <= sum; i++)
      subset[i][0] = false;

     // Fill the subset table in botton up manner
     for (int i = 1; i <= sum; i++)
     {
       for (int j = 1; j <= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i >= set[j-1])
           subset[i][j] = subset[i][j] || subset[i - set[j-1]][j-1];
       }
     }

    /* // uncomment this code to print table
     for (int i = 0; i <= sum; i++)
     {
       for (int j = 0; j <= n; j++)
          printf ("%4d", subset[i][j]);
       printf("\n");
     } */

     return subset[sum][n];
}

int main()
{
    int T;
    freopen("input.txt","r",stdin);

    freopen("write.txt","w",stdout);

    scanf("%d",&T);
    for(int i=1;i<=T;i++){
        int gp,gc,gf;
        scanf("%d %d %d",&gp,&gc,&gf);

        int n;
        scanf("%d",&n);
        //int p[n],c[n],f[n];
        int *p,*c,*f;
        p = new int[n];
        c = new int[n];
        f = new int[n];

        for(int x=0;x<n;x++){
            scanf("%d %d %d",&p[x],&c[x],&f[x]);
        }

        //cout << "P: " ;
        for(int y=0;y<n;y++){
           // printf("%d, ",p[y]);
        }//cout << endl;cout << "C:";
        for(int y=0;y<n;y++){
           // printf("%d,",c[y]);
        }//cout << endl;cout << "F:";
        for(int y=0;y<n;y++){
           // printf("%d, ",f[y]);
        }//cout << endl;
        //cout << "gp: " << gp << " gc: " << gc << " gf: " <<gf <<  endl;


        //cout << " p: " << isSubsetSum(p,n,gp) << " c:" << isSubsetSum(c,n,gc) << " f:" << isSubsetSum(f,n,gf);cout << endl;

        if(isSubsetSum(p,n,gp) ==true && isSubsetSum(c,n,gc)==true && isSubsetSum(f,n,gf)==true){
            printf("Case #%d: yes\n",i);
        }
        else{
            printf("Case #%d: no\n",i);
        }
        delete[] p;
        delete[] c;
        delete[] f;


    }
}
