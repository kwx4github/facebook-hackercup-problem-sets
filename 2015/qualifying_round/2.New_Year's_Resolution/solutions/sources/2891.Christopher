#!/usr/bin/python
# -*- coding: utf-8 -*-

def subset_sum(subsets, goal):
    return goal >= 1 and len(subsets) > 0 and (
        subsets[0] == goal or
        subset_sum(subsets[1:], goal - subsets[0]) or
        subset_sum(subsets[1:], goal)
    )


if __name__ == '__main__':
    with open('new_years_resolution_input.txt') as problem_input:
        with open('new_years_resolution_output.txt', 'w') as problem_output:
            test_cases = int(problem_input.readline().strip())

            for test_case in xrange(test_cases):
                goals = [int(amount) for amount in problem_input.readline().strip().split()]
                num_foods = int(problem_input.readline().strip())

                foods = [[int(amount) for amount in problem_input.readline().strip().split()] for _ in xrange(num_foods)]

                goal  = goals[0] * 1000 * 1000 + goals[1] * 1000 + goals[2]
                foods = [p * 1000 * 1000 + c * 1000 + f for p, c, f in foods]

                possible = 'yes' if subset_sum(foods, goal) else 'no'

                output = 'Case #{0}: {1}\n'.format(test_case + 1, possible)

                problem_output.write(output)
