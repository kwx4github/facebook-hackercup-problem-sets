import java.io.*;
import java.util.*;
public class NewYears {
	static boolean good = false;
	static void recurse(int[][] foods, int[] goals, int index) {
		if(good)
			return;
		if(goals[0] == 0 && goals[1] == 0 && goals[2] == 0) {
			good = true;
			return;
		}
		if(goals[0] < 0 || goals[1] < 0 || goals[2] < 0 || index >= foods.length)
			return;
		goals[0] -= foods[index][0];
		goals[1] -= foods[index][1];
		goals[2] -= foods[index][2];
		recurse(foods, goals, index + 1);
		goals[0] += foods[index][0];
		goals[1] += foods[index][1];
		goals[2] += foods[index][2];
		recurse(foods, goals, index + 1);
	}
	public static void main(String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new FileReader("new_years_resolution.txt"));
		PrintWriter output = new PrintWriter(new BufferedWriter(new FileWriter("newyears.output")));
		int n = Integer.parseInt(in.readLine());
		for(int ct = 1; ct <= n; ct++) {
			StringTokenizer t = new StringTokenizer(in.readLine());
			int[] goals = {Integer.parseInt(t.nextToken()), Integer.parseInt(t.nextToken()), Integer.parseInt(t.nextToken())};
			int m = Integer.parseInt(in.readLine());
			int[][] all = new int[m][3];
			for(int i = 0; i < m; i++) {
				t = new StringTokenizer(in.readLine());
				for(int k = 0; k < 3; k++)
					all[i][k] = Integer.parseInt(t.nextToken());
			}
			good = false;
			recurse(all, goals, 0);
			if(ct < n)
				output.printf("Case #%d: %s\n", ct, (good) ? "yes" : "no");
			else
				output.printf("Case #%d: %s", ct, (good) ? "yes" : "no");
		}
		output.close();
		in.close();
	}
}