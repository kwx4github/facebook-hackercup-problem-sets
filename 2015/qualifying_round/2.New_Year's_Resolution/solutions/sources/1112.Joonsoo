#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <cfloat>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iostream>
#include <limits.h>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <tuple>
#include <utility>
#include <vector>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

#define rep(i,m) for(int i=0;i<(int)(m);++i)
#define sz(c) (int((c).size()))
#define fill(a,b) memset(a,b,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define mp make_pair
#define two(x) (1<<(x))
#define twoll(x) ((long long)1<<(x))
#define contain(m,x) (((m)&two(x))!=0)
#define containll(m,x) (((m)&twoll(x))!=0)

int n, P, C, F, p[22], c[22], f[22];

int main(int argc, char *argv[]) {
	ios_base::sync_with_stdio(false); cout.precision(10); cout << fixed;
	freopen("new_years_resolution.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
	clock_t start_time = clock(), check_time;
	int total_cases; cin >> total_cases;
	for (int cur_case = 1; cur_case <= total_cases; ++cur_case) {
		cin >> P >> C >> F >> n;
		rep(i, n) cin >> p[i] >> c[i] >> f[i];
		bool ok = 0;
		rep(m, two(n)) {
			int pp = 0, cc = 0, ff = 0;
			rep(i, n) if (contain(m, i)) pp += p[i], cc += c[i], ff += f[i];
			if (P == pp && C == cc && F == ff) {
				ok = 1;
				break;
			}
		}
		cout << "Case #" << cur_case << ": " << (ok ? "yes" : "no") << endl;

		check_time = clock(); cerr << "Case #" << cur_case << " elapsed time: " << check_time - start_time << "ms" << endl; start_time = clock();
	}
	return 0;
}
