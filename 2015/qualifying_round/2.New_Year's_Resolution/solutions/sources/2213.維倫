#include <cstdio>

#define LANCER

using namespace std;

const int MAXN = 2000;

struct FOOD
{
  int p,c,f;
  FOOD(int p=0,int c=0,int f=0):p(p),c(c),f(f) {}
};

FOOD operator + (FOOD &a,FOOD &b) { return FOOD(a.p+b.p,a.c+b.c,a.f+b.f); }
bool operator == (FOOD &a,FOOD &b) { return (a.p==b.p)&&(a.c==b.c)&&(a.f==b.f); }
bool operator != (FOOD &a,FOOD &b) { return !(a==b); }
bool operator > (FOOD &a,FOOD &b) { return (a.p>b.p)||(a.c>b.c)||(a.f>b.f); }

int n;
FOOD ara[MAXN];
FOOD SUM;
//int P[MAXN],C[MAXN],F[MAXN];
//int gp,gc,gf;

void input(void)
{
  //scanf("%d %d %d",&gp,&gc,&gf);
  scanf("%d %d %d",&SUM.p,&SUM.c,&SUM.f);
  scanf("%d",&n);
  for(int i=0;i<n;i++)
    scanf("%d %d %d",&ara[i].p,&ara[i].c,&ara[i].f);
}

bool DFS(int depth,FOOD sum)
{
  if(sum==SUM) return true;
  if(depth==n) return sum==SUM;
  if(DFS(depth+1,sum)) return true;
  if(DFS(depth+1,sum+ara[depth])) return true;
  return false;
}

int main(void)
{
  #ifdef LANCER
    freopen("new_years_resolution.txt","r",stdin);
    //freopen("new_years_resolution_example_input.txt","r",stdin);
    freopen("new_years_resolution_self_output.txt","w",stdout);
  #endif

  int T;
  scanf("%d",&T);
  for(int tt=1;tt<=T;tt++)
  {
    input();
    printf("Case #%d: %s\n",tt,DFS(0,FOOD(0,0,0)) ? "yes" : "no");
  }
  return 0;
}
