//
//  main.cpp
//  2
//
//  Created by Rajdeep Singhal on 10/01/15.
//  Copyright (c) 2015 Rajdeep Singhal. All rights reserved.
//

#include <iostream>
#include <algorithm>
#include <fstream>
#include <stack>
using namespace std;
int sumInStack = 0;
int tc,c=1,gp,gc,gf,f[20][3],n,fl,a[20];
int Gc=0,Gf=0;
stack<int> s1,s2 ;
void populateSubset(int data[], int fromIndex, int endIndex) {
    
   
    if (sumInStack == gp) {
        Gc=0;Gf=0;
        while (!s1.empty()) {
            Gc += f[s1.top()][1];
            Gf += f[s1.top()][2];
            s2.push(s1.top());
            s1.pop();
        }
        while (!s2.empty()) {
            s1.push(s2.top());
            s2.pop();
        }
        if((Gc == gc) && (Gf == gf))
            fl = 1;
    }
    
    for (int currentIndex = fromIndex; currentIndex < endIndex; currentIndex++) {
        
        if (sumInStack + data[currentIndex] <= gp) {
            s1.push(currentIndex);
            sumInStack += data[currentIndex];
            populateSubset(data, currentIndex + 1, endIndex);
            sumInStack = sumInStack - data[currentIndex];
            s1.pop();
        }
    }
    
}

int main() {
    
    ifstream in("/Users/Rajdeep/Desktop/in1.txt");
    ofstream out("/Users/Rajdeep/Desktop/out1.txt");
   
    in>>tc;
    while (tc--) {
        fl=0;
        
        in>>gp>>gc>>gf;
        
        in>>n;
        
        for (int i = 0; i<n; i++) {
            for (int j = 0; j<3; j++) {
                in>>f[i][j];
            }
        }
        for (int i=0; i<n; i++) {
            a[i]=f[i][0];
        }
        populateSubset(a, 0, n);
        //cout<<fl;
        if (fl) {
            out<<"Case #"<<c<<":"<<" yes"<<endl;
        }
        else
            out<<"Case #"<<c<<":"<<" no"<<endl;
        
        c++;
    }
    
    return 0;
}
