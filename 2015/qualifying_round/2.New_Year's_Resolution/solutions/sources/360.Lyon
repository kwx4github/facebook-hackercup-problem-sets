#include <bits/stdc++.h>
using namespace std;

const int N = 22;
int P, C, F;
int p[N], c[N], f[N];

bool DFS(int i, int sp, int sc, int sf) {
	if (sp == P && sc == C && sf == F) {
		return 1;
	}
	if (i <= 0) {
		return 0;
	}
	if (DFS(i - 1, sp + p[i], sc + c[i], sf + f[i])) {
		return 1;
	}
	if (DFS(i - 1, sp, sc, sf)) {
		return 1;
	}

	return 0;
}

int main() {
	int T, n;

	ios::sync_with_stdio(0);
	cin >> T;
	for (int cas = 1; cas <= T; ++cas) {
		cin >> P >> C >> F >> n;
		for (int i = 1; i <= n; ++i) {
			cin >> p[i] >> c[i] >> f[i];
		}
		cout << "Case #" << cas << ": " << (DFS(n, 0, 0, 0) ? "yes" : "no") << endl;
	}

	return 0;
}
