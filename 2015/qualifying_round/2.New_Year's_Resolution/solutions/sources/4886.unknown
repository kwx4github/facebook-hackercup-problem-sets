#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

ifstream fin("new_years_resolution.txt");
ofstream fout("output.txt");
int T, N;
int GP, GC, GF;
int tmpP, tmpC, tmpF;
bool possible;
class Food {
public:
	Food(){	}
	Food(int _P, int _C, int _F): P(_P), C(_C), F(_F)
	{	}
	int P, C, F;

};
vector<Food> foods;

int main( ) {

	fin >> T;
	for(int case_number = 1; case_number <= T; case_number++) {
		foods.clear();
		cout << "Case #" << case_number << ": ";
		fout << "Case #" << case_number << ": ";

		fin >> GP >> GC >> GF;
		fin >> N;
		while(N--){
			fin >> tmpP >> tmpC >> tmpF;
			foods.push_back( Food(tmpP, tmpC, tmpF) );
		}

		for(long long subset = 1; subset<(1<<foods.size()); subset++){
			possible = false;
			tmpP = 0; tmpC = 0; tmpF = 0;
			for(long long i=0; i<foods.size(); i++){
				if( ((subset&(1<<i))) != 0){
					tmpP += foods[i].P;
					tmpC += foods[i].C;
					tmpF += foods[i].F;
				}
			}
			if ( tmpP == GP && tmpC == GC && tmpF == GF ){
				possible = true;
				cout << "yes";
				fout << "yes";
				break;
			}
		}

		if ( !possible ){
			cout << "no";
			fout << "no";
		}

		

		if ( case_number != T ){
			cout << endl;
			fout << endl;
		}
	}

	return 0;
}