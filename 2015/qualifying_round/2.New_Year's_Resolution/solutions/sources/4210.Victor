#include <cmath>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <iostream>
#include <deque>
#include <queue>
#include <functional>
#include <map>
#include <bitset>
#include <stack>
using namespace std;
#define fr(a,b,c) for(int a=b;a<c;a++)
#define addEdge(a,b) to[z] = b; ant[z] = adj[a]; adj[a] = z++
#define addEdgeC(a,b,c) from[z] = a; to[z] = b; ant[z] = adj[a]; adj[a] = z; cost[z] = c; edges[z] = z; z++;
#define rp(a,b) fr(a,0,b)
#define MP make_pair
#define F first
#define S second
const int infinity = 0x3f3f3f3f;
typedef pair<int,int> pii;
typedef long long ll;

int T,N,GC,GP,GF,P,C,F;
int food[30][3];

bool aller(int i, int qP, int qC, int qF){
	if(qP > GP || qC > GC || qF > GF) return false;
	if(i >= N){
		if(qP == GP && qC == GC && qF == GF) return true;
		else return false;
	}else{
		return (aller(i+1,qP+food[i][0],qC+food[i][1],qF+food[i][2]) || 
			aller(i+1,qP,qC,qF));
	}
}

int main(){
	scanf("%d",&T);
	rp(t,T){
		scanf("%d%d%d",&GP,&GC,&GF);
		scanf("%d",&N);
		rp(n,N){
			scanf("%d%d%d",&food[n][0],&food[n][1],&food[n][2]);
		}
		printf("Case #%d: ",t+1);
		if(aller(0,0,0,0))printf("yes\n");
		else printf("no\n");
	}
}