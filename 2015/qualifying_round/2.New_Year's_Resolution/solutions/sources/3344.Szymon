cases = int(raw_input())

def add_tuples(a,b):
	return (a[0]+b[0], a[1]+b[1], a[2]+b[2])

def read_tuple():
	a,b,c = [ int(n) for n in raw_input().split(' ')]
	return (a,b,c)

for case in range(1, cases + 1):
	expected = read_tuple()
	n = int(raw_input())
	vectors = [read_tuple() for _ in range(n)]
	zero = (0,0,0)
	can_build = False
	for subset in range(2**n):
		subset_vector = zero
		for i in range(n):
			if subset & (1<<i) > 0:
				subset_vector = add_tuples(subset_vector, vectors[i])
		if subset_vector == expected:
			can_build = True
			break
	print("Case #%d: %s" % (case, "yes" if can_build else "no"))