package hackercup2015.qualificationround;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

public class NewYearResolution {

	String input;
	String output;
	BufferedReader reader;
	PrintWriter writer;
	

	public NewYearResolution(String input, String output) {
		super();
		this.input = input;
		this.output = output;
	}

	public String readNextLine() {
		String line = null;
		if (reader == null) {
			File file = new File(input);
			try {
				reader = new BufferedReader(new FileReader(file));
			} catch (FileNotFoundException e) {
				System.out.println("File Initialization Error");
				e.printStackTrace();
			}
		}

		try {
			line = reader.readLine();
		} catch (IOException e) {
			System.out.println("File read error");
			e.printStackTrace();
		}

		return line;
	}

	public void writeOuput(int caseNo, String result) {
		if (writer == null) {
			File file = new File(output);
			try {
				writer = new PrintWriter(new FileWriter(file));
			} catch (IOException e) {
				System.out.println("Output file initialization error");
				e.printStackTrace();
			}
		}
		System.out.println("in out put : " + result);

		writer.println("Case #" + caseNo + ": " + result);
		writer.flush();
	}
	
	public void start(){
		int T = Integer.parseInt(readNextLine());
		for( int t = 0; t < T; t++ ){
			String[] gStr = readNextLine().split(" ");
			int gp = Integer.parseInt(gStr[0]);
			int gc = Integer.parseInt(gStr[1]);
			int gf = Integer.parseInt(gStr[2]);
			
			int N = Integer.parseInt(readNextLine());
			int[][] pcf = new int[N][3];
			for( int j = 0; j < N; j++){
				String[] pcfStr = readNextLine().split(" ");
				pcf[j][0] = Integer.parseInt(pcfStr[0]);
				pcf[j][1] = Integer.parseInt(pcfStr[1]);
				pcf[j][2] = Integer.parseInt(pcfStr[2]);
			}
			
			List<Integer> combination = new ArrayList<Integer>();
			
			
			int cnt = 0;
			boolean possible = false;
			while(combination.size()< N){
				
				int size = combination.size();
				if( cnt%N == 0){
					if(size == 0 ){
						combination.add(0);
					}else if(combination.get(0) == N-size){
						int value = 0;
						while(value < size){
							combination.set(value,value);
							value++;
						}
						combination.add(value);
						cnt = value;
					}else{
						int i = size-1, j = 1;
						for( ; i >= 0; i--, j++ ){
							if(!(combination.get(i)+j == N) )
								break;
						}
						
						int value = combination.get(i)+1;

						for( int k = i; k < combination.size(); k++){
							combination.set(k, value++);
						}
						cnt = value-1;
					}
				}else{
					combination.set(size-1,cnt);
				}
				cnt = (cnt + 1) % N;
				int tgp = 0;
				int tgc = 0;
				int tgf = 0;
				for (Integer integer : combination) {
					tgp = tgp + pcf[integer][0];
					tgc = tgc + pcf[integer][1];
					tgf = tgf + pcf[integer][2];
				}
				
				if( tgp == gp && tgc == gc && tgf == gf ){
					possible = true;
					break;
				}
				
			}
			
			if(possible == true){
				writeOuput((t+1),"yes");
			}else{
				writeOuput((t+1),"no");
			}
			
		}
	}
	
	public static void main(String[] args) {
		(new NewYearResolution("F:/HackerCupIO/input.txt", "F:/HackerCupIO/q2output.txt")).start();
		
	}



}
