#include <iostream>
#include <cstdio>
#include <cstdlib>

using namespace std;

struct st{
	int a;
	int b;
	int c;
};
st A[20], tmp[20], in;
int  P, C, F,N;
bool flg;
void comb(int n, int r, int *arr, int sz);
int main() {
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	int T;
	cin >> T;
	for (int TC = 1; TC <= T; ++TC)
	{
		cin >> P >> C >> F>>N;
		int cnt = 0;
		for (int i = 0; i < N; ++i)
		{
			cin >> A[i].a >> A[i].b >> A[i].c;
			if ((A[i].a <= P) && (A[i].b <= C) && (A[i].c <= F))
			{
				tmp[cnt].a = A[i].a;
				tmp[cnt].b = A[i].b;
				tmp[cnt].c = A[i].c;
				cnt++;
			}
		}
		flg = false;
		for (int i = 1; i <= cnt; ++i)
		{
			int *arr = new int[i];
			comb(cnt,i,arr,i);
			if (flg)
			{
				cout << "Case #"<<TC<<" yes" << endl;
				break;
			}
		}
		if (!flg)
			cout << "Case #" << TC << " no" << endl;
	}
	return 0;
}

void comb(int n, int r, int *arr, int sz) {
	for (int i = n; i >= r; i--) {

		arr[r - 1] = i;
		if (r > 1) {

			comb(i - 1, r - 1, arr, sz);
		}
		else
		{
			int sp = 0, sc = 0, sf = 0;
			for (int i = 0; i < sz; i++) 
			{
				sp += tmp[arr[i] - 1].a;
				sc += tmp[arr[i] - 1].b;
				sf += tmp[arr[i] - 1].c;
				if ((sp>P) || (sc > C) || (sf > F))
					break;
			}
			if ((sp == P) && (sc == C) && (sf == F))
			{
				flg = true;
				return;
			}
		}
	}
}
