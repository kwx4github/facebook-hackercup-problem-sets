#include <bits/stdc++.h>
#define f(i,a,b) for(int i=(a);i<(b);i++)
using namespace std;
typedef struct element
{
    int p;int c;int f;
    element operator+ (element o)
    {
        return {p+o.p,c+o.c,f+o.f};
    }
    element operator=(element o)
    {
        p=o.p;c=o.c;f=o.f;
        return {p,c,f};
    }
    void print(){cout<<p<<" "<<c<<" "<<f<<endl;}
}element;
int t,p,c,f,k,n;
element tab[21],somme;
bool tb[21],result;
void backtrack(int where, bool t[])
{
    if(where==n)
    {
        somme={0,0,0};
        f(i,0,n)
        {
            if(t[i])somme=somme+tab[i];
        }
        if(somme.c==c&&somme.f==f&&somme.p==p)
        {
            result=true;
        }
    }
    else
    {
        t[where]=false;
        if(!result)backtrack(where+1,t);
        t[where]=true;
        if(!result)backtrack(where+1,t);
    }
}
int main()
{
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int t;cin>>t;
    f(i,0,t)
    {
        cin>>p>>c>>f>>n;
        f(j,0,n)
        {
            cin>>tab[j].p>>tab[j].c>>tab[j].f;
           // cout<<tab[j].p<<" "<<tab[j].c<<" "<<tab[j].f<<endl;
        }
        result=false;
        backtrack(0,tb);
        cout<<"Case #"<<i+1<<": "<<(result?"yes":"no")<<endl;
        /*
        f(i,0,n)
        {
            k=1;
            boucle:
                somme={tab[i].p,tab[i].c,tab[i].f};
                cout<<"start:"<<endl;
                tab[i].print();
                if(somme.c==c&&somme.f==f&&somme.p==p)
                        goto success;
                f(l,i+k,n)
                {
                    somme=somme+tab[l];
                    tab[l].print();
                    cout<<"\t";somme.print();
                    if(somme.c==c&&somme.f==f&&somme.p==p)
                        goto success;
                    if(somme.c>c || somme.f>f || somme.p>p)
                        goto out;
                }
                out:
                cout<<"end"<<endl;
                if(k++<n)goto boucle;
                /*out:
                    cout<<"end"<<endl;
                    continue;
                    */
    }
    return 0;
}
