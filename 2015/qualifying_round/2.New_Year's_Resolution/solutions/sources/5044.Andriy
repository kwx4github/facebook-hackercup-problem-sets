//
//  main.cpp
//  FHC_Pattern
//
//  Created by Andriy Medvid on 11.01.15.
//  Copyright (c) 2015 Andriy Medvid. All rights reserved.
//

#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <cstring>

using namespace std;

#define MAX_NUM 1000000000

#define IN_NAME ("new_years_resolution.txt")
#define OUT_NAME ("new_years_resolution.out")

void OutCase(int caseNum) {
    cout << "Case #" << (caseNum+1) << ": ";
}

int main(int argc, const char * argv[]) {
    
    freopen(IN_NAME, "r", stdin);
    freopen(OUT_NAME, "w", stdout);
    
    int T;
    
    int n;
    
    int goal[3];
    
    int test[3];
    
    int food[21][3];
    
    cin >> T;
    
    for(int tIter = 0; tIter < T; tIter++) {
        
        cin >> goal[0] >> goal[1] >> goal[2];
        cin >> n;
        for(int i = 0; i < n; i++) {
            cin >> food[i][0] >> food[i][1] >> food[i][2];
        }
        
        bool exist = false;
        
        for(int mask = 0; mask < (1 << n); mask++) {
            test[0] = 0; test[1] = 0; test[2] = 0;
            for(int i = 0; i < n; i++) {
                if(mask & (1 << i)) {
                    test[0] += food[i][0];
                    test[1] += food[i][1];
                    test[2] += food[i][2];
                }
            }
            if(test[0] == goal[0] && test[1] == goal[1] && test[2] == goal[2]) {
                exist = true;
                break;
            }
        }
        
        OutCase(tIter);
        // out answer
        
        cout << (exist?"yes" : "no");
        
        cout << endl;
    }
    
    return 0;
}


