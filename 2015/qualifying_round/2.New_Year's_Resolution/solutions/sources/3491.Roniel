#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <iostream>
#include <sstream>
#include <vector>
#include <list>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <utility>
#include <algorithm>
#include <limits>
#include <iomanip>

#define INF 1000000000
#define Inf 1000000000000000000

using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vii> vvii;

int n,gp,gc,gf,vet[25][3];

bool solve(int v, int p, int c, int f) {
  if (p == gp && c == gc && f == gf) return true;
  if (p > gp || c > gc || f > gf) return false;
  int atual = -1, i = 0;
  while(i < n) {
    if (v & (1 << i)) atual = i;
    ++i;
  }
  if (atual == -1) atual = 0;
  else atual++;
  if (atual == n) return false;
  for(i = atual; i < n; ++i) {
    if (solve((v | (1 << i)), p + vet[i][0], c + vet[i][1], f + vet[i][2])) return true;
  }
  return false;
}

int main() {
  //freopen("in","r",stdin);
  //freopen("30out","w",stdout);
  int t;
  scanf("%d",&t);
  for(int cas = 1; cas <= t; cas++) {
    scanf("%d %d %d",&gp,&gc,&gf);
    scanf("%d",&n);
    for(int i = 0; i < n; ++i)
      scanf("%d %d %d",&vet[i][0],&vet[i][1],&vet[i][2]);

    printf("Case #%d: %s\n",cas,solve(0,0,0,0) ? "yes" : "no");
  }
  return 0;
}
