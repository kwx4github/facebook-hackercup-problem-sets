/* New Year's Resolution */

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include <stdbool.h>

#define FOODS 20 // Total number of foods available for Alex
#define MACRONU 3 // Number of macro nutrients in each food

bool isAlexFoodPossible(int food[][MACRONU], int n, int gp, int gc, int gf)
{
	bool flag = false;
	
    long power_set_size = pow (2, n);
	long counter;
	int j;
	int sump = 0, sumc = 0, sumf = 0;
	
	for (counter = 1; counter < power_set_size; counter++)
	{
		sump = 0, sumc =0, sumf = 0;
		for (j = 0; j < n; j++)
		{
			if (counter & (1<<j))
			{
				sump += food[j][0];
				sumc += food[j][1];
				sumf += food[j][2];
			}
		}
		
		if (sump == gp && sumc == gc && sumf == gf)
		{
			flag = true;
			return flag;
		}
	}
	
	return flag;
}


int main (void)
{
	int T;
	int _N;
	int _GP, _GC, _GF; // Required levels
	int _food[FOODS+1][MACRONU];
	int kase;
	int i;
	
	FILE* in = fopen("new_years_resolution.txt", "r");
	FILE* out = fopen("new_years_resolution_output.txt", "w");
	
	fscanf (in, "%d",&T);
	for (kase = 1; kase <= T; kase++)
	{
		fscanf (in, "%d %d %d",&_GP,&_GC,&_GF);
		fscanf (in, "%d",&_N);
		for (i = 0; i < _N; i++)
		{
			fscanf (in, "%d %d %d",&_food[i][0], &_food[i][1], &_food[i][2]);
		}
		if ( isAlexFoodPossible(_food, _N, _GP, _GC, _GF) )
		    fprintf (out, "Case #%d: yes\n", kase);
		else
		    fprintf (out, "Case #%d: no\n", kase);
	}
	
	fclose(in);
	fclose(out);
	
	return 0;
}
