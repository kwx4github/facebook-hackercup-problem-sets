package facebook.qualification_2014;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.HashSet;
import java.util.Locale;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class NewYearResolution {

    static PrintStream out;

    static PrintStream openOut(String name) {
        try {
            return new PrintStream(new FileOutputStream(name, false));
        } catch (IOException e) {
            throw new RuntimeException(e.getMessage(), e);
        }
    }

    public static void main(String[] args) {
        try (PrintStream out = openOut("output.txt")) {
            Locale.setDefault(Locale.US);
            final Scanner scanner = new Scanner(System.in);
            final int T = scanner.nextInt();
            for (int i = 0; i < T; i++) {
                int Gp = scanner.nextInt();
                int Gc = scanner.nextInt();
                int Gf = scanner.nextInt();
                int N = scanner.nextInt();
                int[][] food = new int[N][3];
                for (int j = 0; j < N; j++) {
                    food[j][0] = scanner.nextInt();
                    food[j][1] = scanner.nextInt();
                    food[j][2] = scanner.nextInt();
                }
                out.format("Case #%s: %s", i + 1, solution(Gp, Gc, Gf, food, new HashSet<>()) ? "yes" : "no").println();
            }
        }
    }

    static boolean solution(int Gp, int Gc, int Gf, int[][] food, Set<String> cantEat) {
        if (Gp == 0 && Gc == 0 && Gf == 0) {
            return true;
        }
        if (Gp <= 0 || Gc <= 0 || Gf <= 0) { // there is no food with zero nutrition
            return false;
        }
        if (cantEat.contains("" + Gp + ":" + Gc + ":" + Gf)) {
            return false;
        }
        for (int[] f : food) {
            if (solution(Gp - f[0], Gc - f[1], Gf - f[2], food, cantEat)) {
                return true;
            }
        }
        cantEat.add("" + Gp + ":" + Gc + ":" + Gf);
        return false;
    }
}
