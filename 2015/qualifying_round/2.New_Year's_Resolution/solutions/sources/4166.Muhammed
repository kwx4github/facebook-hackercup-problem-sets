import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class Second {

	static int[] arr1;
	static int[] arr2;
	static int[] arr3;

	static boolean dfs(int i, int remainP, int targetP, int remainC,
			int targetC, int remainF, int targetF) {
		if (i == arr1.length && (remainP != 0 || remainC != 0 && remainF != 0)) {
			return false;
		}
		if (remainP < 0 || remainC < 0 && remainF < 0) {
			return false;
		}
		if (remainP == 0 && remainC == 0 && remainF == 0) {
			return true;
		}

		return dfs(i + 1, remainP - arr1[i], targetP, remainC - arr2[i],
				targetC, remainF - arr3[i], targetF)
				|| dfs(i + 1, remainP, targetP, remainC, targetC, remainF,
						targetF);

	}

	public static void main(String[] args) throws IOException {
		Scanner s = new Scanner(new File("input.txt"));
		BufferedWriter output = new BufferedWriter(new FileWriter("output.txt"));

		int t = s.nextInt();
		int count = 1;
		while (t-- > 0) {
			String decide = "no";
			int Gp = s.nextInt();
			int Gc = s.nextInt();
			int Gf = s.nextInt();

			int N = s.nextInt();

			arr1 = new int[N];
			arr2 = new int[N];
			arr3 = new int[N];

			for (int i = 0; i < N; i++) {
				arr1[i] = s.nextInt();
				arr2[i] = s.nextInt();
				arr3[i] = s.nextInt();
			}

			// Arrays.sort(arr1);
			// Arrays.sort(arr2);
			// Arrays.sort(arr3);

			boolean check = false;

			check = dfs(0, Gp, Gp, Gc, Gc, Gf, Gf);

			if (check)
				decide = "yes";

			// System.out.printf("Case #%d: %s \n", count++, decide);
			output.write("Case #" + count++ + ": " + decide+"\n");
		}
		output.close();
	}
}
