#!/usr/bin/env python

def canEatExact(gp, gc, gf, foods, n):
  if gp == 0 and gc == 0 and gf == 0:
    return True
  
  if gp < 0 or gc < 0 or gf < 0:
    return False

  if n < 0:
    return False

  eat = canEatExact(gp - foods[-1][0], gc - foods[-1][1], gf - foods[-1][2], foods[:-1], n - 1)
  dontEat = canEatExact(gp, gc, gf, foods[:-1], n - 1)
  
  return eat or dontEat

fin = open('new_years_resolution.in', 'r')
fout = open('new_years_resolution.out', 'w')

T = int(fin.readline())

for t in xrange(T):
  gp, gc, gf = map(int, fin.readline().replace('\n', '').split(' '))
  N = int(fin.readline())
  foods = []
  
  for n in xrange(N):
    P, C, F = map(int, fin.readline().replace('\n', '').split(' '))
    foods.append([P, C, F])

  fout.write('Case #%d: %s\n' % (t + 1, 'yes' if canEatExact(gp, gc, gf, foods, N - 1) else 'no'))
