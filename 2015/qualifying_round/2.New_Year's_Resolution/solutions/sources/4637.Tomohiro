import java.io.File;
import java.util.*;
import java.util.stream.IntStream;

public class Main {

    public static void main(String[] args) {
		try {
			Scanner sc = new Scanner(new File(args[0]));
			int t;
			t = sc.nextInt();
			System.out.println(t);
			for (int i = 0; i < t; i++) {
				int gp, gc, gf;
				gp = sc.nextInt();
				gc = sc.nextInt();
				gf = sc.nextInt();
				int n;
				n = sc.nextInt();
				List<Integer> pList = new ArrayList<>();
				List<Integer> cList = new ArrayList<>();
				List<Integer> fList = new ArrayList<>();
				for (int j = 0; j < n; j++) {
					int p, c, f;
					pList.add(sc.nextInt());
					cList.add(sc.nextInt());
					fList.add(sc.nextInt());
				}
				List<Integer> pCombos = new ArrayList<>();
				List<Integer> cCombos = new ArrayList<>();
				List<Integer> fCombos = new ArrayList<>();
				pCombos.add(0);
				cCombos.add(0);
				fCombos.add(0);
				for (int j = 0; j < n; j++) {
					List<Integer> pCopy = new ArrayList<>(pCombos);
					for (int k : pCopy) {
						pCombos.add(k + pList.get(j));
					}
					List<Integer> cCopy = new ArrayList<>(cCombos);
					for (int k : cCopy) {
						cCombos.add(k + cList.get(j));
					}
					List<Integer> fCopy = new ArrayList<>(fCombos);
					for (int k : fCopy) {
						fCombos.add(k + fList.get(j));
					}
				}
				boolean done = false;
				int size = pCombos.size();
				for (int j = 0; j < size; j++) {
					if (pCombos.get(j) != gp) continue;
					if (cCombos.get(j) != gc) continue;
					if (fCombos.get(j) != gf) continue;
					done = true;
					System.out.println("Case #" + (i+1) + ": yes");
					break;
				}
				if (!done) System.out.println("Case #" + (i+1) + ": no");
			}
		} catch (final Exception e) {
			e.printStackTrace();
			System.err.println("Error");
		}
	}
}
