#include <cstdio>
#include <iostream>
#include <vector>
#include <string>

using namespace std;

struct product
{
    int p, c, f;
};

bool gen(vector <product> &now, int k, product must)
{
    if (k == now.size())
    {
        if (must.p == 0 && must.c == 0 && must.f == 0)
            return true;
        else
            return false;
    }
    if (gen(now, k + 1, must))
    {
        return true;
    }
    must.p -= now[k].p;
    must.c -= now[k].c;
    must.f -= now[k].f;
    if (must.p < 0 || must.c < 0 || must.f < 0)
    {
        return false;
    }
    return gen(now, k + 1, must);
}

string get()
{
    product must;
    cin >> must.p >> must.c >> must.f;
    int n;
    cin >> n;
    vector <product> prod;
    for (int i = 0; i < n; ++i)
    {
        product buf;
        cin >> buf.p >> buf.c >> buf.f;
        prod.push_back(buf);
    }
    if (gen(prod, 0, must))
    {
        return "yes";
    }
    else
    {
        return "no";
    }
}


int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int t;
    cin >> t;
    for (int i = 0; i < t; ++i)
    {
        cout << "Case #" << i + 1 << ": " << get() << "\n";
    }
}
