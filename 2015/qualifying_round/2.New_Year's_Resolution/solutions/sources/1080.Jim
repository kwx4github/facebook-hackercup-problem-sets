#include <stdio.h>
#include <vector>
#include <algorithm>
#include <math.h>
using namespace std;

int foods1[21];
int foods2[21];
int foods3[21];
int needed1, needed2, needed3;
int t, n;

//bool included[21];

bool recurse(int numFood, int amount1, int amount2, int amount3){
	//printf("numFood  = %d, amount1 = %d, amount2 = %d, amount3 = %d\n", numFood, amount1, amount2, amount3);
	if(amount1 == needed1 && amount2 == needed2 && amount3 == needed3){
		//for(int i = 0; i < n; i++){printf("%d", included[i]);}
		//printf("\nreturning true\n");
		return true;
	}
	if(amount1 > needed1 || amount2 > needed2 || amount3 > needed3 || numFood == n){
		//for(int i = 0; i < n; i++){printf("%d", included[i]);}
		//printf("\nreturning false\n");
		return false;
	}
	//returnVal = false;
	bool returnVal = recurse(numFood+1, amount1, amount2, amount3);
	//included[numFood] = true;
	returnVal = returnVal || recurse(numFood+1, amount1+foods1[numFood], amount2+foods2[numFood], amount3+foods3[numFood]);
	//included[numFood] = false;
	return returnVal;
}

int main(){
	
	/*for(int i = 0; i < 21; i++){
		included[i] = false;
	}*/
	
	scanf("%d", &t);
	for(int i = 0; i < t; i++){
		scanf("%d %d %d", &needed1, &needed2, &needed3);
		//printf("%d %d %d\n", needed[0], needed[1], needed[2]);
		scanf("%d", &n);
		for(int j = 0; j < n; j++){
			scanf("%d %d %d", &foods1[j], &foods2[j], &foods3[j]);
		}
		bool possible = recurse(0, 0, 0, 0);
		printf("Case #%d: ", i+1);
		if(possible){
			printf("yes\n");
			continue;
		}
		printf("no\n");
	}
	
	
	return 0;
}
