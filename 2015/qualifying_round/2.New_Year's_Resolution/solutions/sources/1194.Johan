
#include <iostream>

bool brute(int GP, int GC, int GF, int NF, int const * P, int const * C, int const * F) {
	if (GP == 0 && GC == 0 && GF == 0)
		return true;
	if (NF == 0 || GP < 0 || GC < 0 || GF < 0)
		return false;
	return brute(GP, GC, GF, NF - 1, P + 1, C + 1, F + 1) ||
		brute(GP - P[0], GC - C[0], GF - F[0], NF - 1, P + 1, C + 1, F + 1);
}

int main() {
	int N;
	std::cin >> N;
	for (int n = 1; n <= N; ++n) {
		// Get needz and foodz
		int GP, GC, GF, NF;
		std::cin >> GP >> GC >> GF >> NF;
		int P[NF], C[NF], F[NF];
		for (int f = 0; f < NF; ++f)
			std::cin >> P[f] >> C[f] >> F[f];
		// Brute force all combinations =D
		bool result = brute(GP, GC, GF, NF, P, C, F);
		std::cout << "Case #" << n << ": " << (result ? "yes" : "no") << std::endl;
	}
}
