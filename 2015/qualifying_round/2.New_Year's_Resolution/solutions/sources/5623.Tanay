#include<bits/stdc++.h>
#define sl(n) scanf("%lld",&n);
#define sc(n) scanf(" %c",&n);
#define pl(n) printf("%lld",n);
#define pc(n) printf("%c",n);
#define pn printf("\n");
#define pt printf(" ");
#define bsearch(arr,ind) (int)(lower_bound(all(arr),ind)-arr.begin())
#define toDigit(c) (c-'0')
typedef long long int LL;
using namespace std;
LL gcd (LL a, LL b){if (b == 0) {return a;}return gcd(b, a % b);}
LL power(LL a, LL p, LL mod)
{LL ret = 1;while(p){if(p&1)ret = (ret*a)%mod;a=(a*a)%mod;p/=2;}return ret;}

LL gp,gc,gf;

string powerset(LL a[],LL b[],LL c[],int set_size)
{
    /*set_size of power set of a set with set_size
      n is (2**n -1)*/
    unsigned int pow_set_size = pow(2, set_size);
    int counter, j;

    /*Run from counter 000..0 to 111..1*/
    LL sum1=0,sum2=0,sum3=0;
    for(counter = 0; counter < pow_set_size; counter++)
    {
      for(j = 0; j < set_size; j++)
       {
          /* Check if jth bit in the counter is set
             If set then pront jth element from set */
          if(counter & (1<<j))
            {
                sum1+=a[j];
                sum2+=b[j];
                sum3+=c[j];

            }//printf("%c", set[j]);
       }if(sum1==gp && sum2==gc && sum3==gf)
       {
           return "yes";
       }else
       {
         sum1=0;
         sum2=0;
         sum3=0;
       }

       //printf("\n");
    }
    return "no";
}



int main()
{   freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);


    LL t,n,x;
    sl(t);
    for(LL p=1;p<=t;p++)
    {
        sl(gp);
        sl(gc);
        sl(gf);
        sl(n);

        //vector<LL> a(n);
        //vector<LL> b(n);
        //vector<LL> c(n);
        LL a[1000];
        LL b[1000];
        LL c[1000];
        for(x=0;x<n;x++)
        {

            //cin>>a[x][0]>>a[x][1]>>a[x][2];
            cin>>a[x]>>b[x]>>c[x];


        }
        string s=powerset(a,b,c,n);
            cout<<"Case #"<<p<<": "<<s<<endl;
    }



return 0;
}

