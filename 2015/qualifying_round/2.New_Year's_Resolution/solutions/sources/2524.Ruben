package nl.dcm360.fbhc15.q

import scala.io.Source

object NewYear {
  val inputFile = "input/new_years_resolution.txt"
  
    def output(no:Int, answer:Boolean){
    val yesNo = if(answer) "yes" else "no"
    println("Case #"+no+": "+yesNo)
  }
  
  def recSolve(foods:List[Array[Int]], n1:Int, n2:Int, n3:Int, target:Array[Int]): Boolean = foods match {
    case Nil => (n1 == target(0)) && (n2 == target(1)) && (n3 == target(2))
    case head::tail => 
      if((n1 > target(0)) && (n2 > target(1)) && (n3 > target(2))) false
      else recSolve(tail, n1 + head(0), n2 + head(1), n3 + head(2), target) || recSolve(tail, n1, n2, n3, target)
  }
  
  def main(args: Array[String]): Unit = {
    val inputLines = Source.fromFile(inputFile).getLines
    val challengeCount = inputLines.next.toInt
    for(challenge <- 1 to challengeCount){
      val targets = inputLines.next.split("\\s").map(_.toInt)
      val foodCount = inputLines.next.toInt
      val foods = (for(food <- 1 to foodCount) yield inputLines.next.split("\\s").map(_.toInt)).toList
      output(challenge, recSolve(foods, 0, 0, 0, targets))
    }
  }

}