import java.io.*;

public class NewYearsResolution {

    private static boolean canEat = false;


    public static void permutation(int[][] existingFood, int[] neededAmount, int iteration, StringBuilder strBuilder) {
        strBuilder.append("Case #");
        strBuilder.append(iteration);
        for (int i = 0; i < existingFood.length; i++) {
            permutation(existingFood,i,subtractArrays(neededAmount,existingFood[i]));
            if (canEat == true) {
                strBuilder.append(": yes");
                break;
            }
        }
        if (canEat == false) {
            strBuilder.append(": no");
        }
        canEat = false;
    }

    private static void permutation(int[][] array, int index, int[] amountLeft) {
        int arrayCmp = compareArray(amountLeft);
        if(!canEat) {
            if (arrayCmp == 0) {
                canEat = true;
                return;
            } else if (arrayCmp == 1 && index < array.length) {
                for (int i = index + 1; i < array.length; i++) {
                    permutation(array,i,subtractArrays(amountLeft,array[i]));
                }
            } else {
                return;
            }
        } else {
            return;
        }
    }

    private static int compareArray(int[] array) {
        if(array[0] == 0 && array[1] == 0 && array[2] == 0) {
            return 0;
        } else if(array[0] < 0 || array[1] < 0 || array[2] < 0) {
            return -1;
        } else {
            return 1;
        }
    }

    private static int[] subtractArrays(int[] first, int[] second) {
        return new int[]{first[0] - second[0], first[1] - second[1], first[2] - second[2]};
    }

    private static int[] parseArray(String str) {
        String[] needeFood = str.split(" ");
        return new int[]{Integer.parseInt(needeFood[0]), Integer.parseInt(needeFood[2]), Integer.parseInt(needeFood[2])};
    }

    public static void main(String[] args) throws IOException{
        BufferedReader reader = new BufferedReader(new FileReader(args[0]));
        int numberOfCases = Integer.parseInt(reader.readLine().toString());
        StringBuilder strBuilder = new StringBuilder();
        for (int i = 0; i < numberOfCases; i++) {
            int[] neededFood = parseArray(reader.readLine());
            int existingFoodCount = Integer.parseInt(reader.readLine());
            int[][] food = new int[existingFoodCount][3];
            for (int j = 0; j < existingFoodCount; j++) {
                food[j] = parseArray(reader.readLine());
            }
            permutation(food,neededFood,i + 1, strBuilder);
            strBuilder.append("\n");
        }
        BufferedWriter writer = new BufferedWriter(new FileWriter(args[1]));
        writer.write(strBuilder.toString());
        writer.flush();
        reader.close();
    }
}
