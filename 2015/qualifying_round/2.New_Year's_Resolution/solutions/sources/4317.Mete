package question1;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class NewYear
{

	/**
	 * @param args
	 */
	public static void main(String[] args)
	{
		Scanner s = new Scanner(System.in);

		int testCases = s.nextInt();
		for (int i = 0; i < testCases; i++)
		{
			NewYear newYear = new NewYear();

			int expectedP = s.nextInt();
			int expectedC = s.nextInt();
			int expectedF = s.nextInt();

			int numberFood = s.nextInt();

			List<Integer> p = new ArrayList<Integer>();
			List<Integer> c = new ArrayList<Integer>();
			List<Integer> f = new ArrayList<Integer>();

			for (int j = 0; j < numberFood; j++)
			{
				p.add(s.nextInt());
				c.add(s.nextInt());
				f.add(s.nextInt());
			}
			System.out.println("Case #" + (i + 1) + ": " + newYear.checkAll(p, c, f, expectedP, expectedC, expectedF));
		}
	}

	public String checkAll(List<Integer> p, List<Integer> c, List<Integer> f, int expectedP, int expectedC, int expectedF)
	{
		if (checker(p, c, f, expectedP, expectedC, expectedF, 0, 0, 0))
		{
			return "yes";
		} else
			return "no";
	}

	public boolean checker(List<Integer> p, List<Integer> c, List<Integer> f, int expectedP, int expectedC, int expectedF, int currentP, int currentC, int currentF)
	{
		if (currentP + p.get(0) == expectedP && currentC + c.get(0) == expectedC && currentF + f.get(0) == expectedF)
		{
			return true;
		} else if (currentP + p.get(0) < expectedP && currentC + c.get(0) < expectedC && currentF + f.get(0) < expectedF)
		{
			if (p.size() == 1)
			{
				return false;
			} else
			{
				ArrayList<Integer> newP = new ArrayList<Integer>(p);
				ArrayList<Integer> newC = new ArrayList<Integer>(c);
				ArrayList<Integer> newF = new ArrayList<Integer>(f);

				ArrayList<Integer> newP2 = new ArrayList<Integer>(p);
				ArrayList<Integer> newC2 = new ArrayList<Integer>(c);
				ArrayList<Integer> newF2 = new ArrayList<Integer>(f);

				newP.remove(0);
				newC.remove(0);
				newF.remove(0);

				newP2.remove(0);
				newC2.remove(0);
				newF2.remove(0);

				return checker(newP, newC, newF, expectedP, expectedC, expectedF, currentP + p.get(0), currentC + c.get(0), currentF + f.get(0)) || checker(newP2, newC2, newF2, expectedP, expectedC, expectedF, currentP, currentC, currentF);
			}
		}
		// bigger than goal
		else
		{
			if (p.size() == 1)
			{
				return false;
			} else
			{
				ArrayList<Integer> newP = new ArrayList<Integer>(p);
				ArrayList<Integer> newC = new ArrayList<Integer>(c);
				ArrayList<Integer> newF = new ArrayList<Integer>(f);

				newP.remove(0);
				newC.remove(0);
				newF.remove(0);

				return checker(newP, newC, newF, expectedP, expectedC, expectedF, currentP, currentC , currentF );
			}
		}
	}
}
