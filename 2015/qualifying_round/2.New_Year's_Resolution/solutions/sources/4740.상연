#include<stdlib.h>
#include<stdio.h>

FILE * ifd;
FILE * ofd;

void Judge( int *, int cal[20][3],const int);

int main(void)
{
	int Gcal[3];
	int cal[20][3];
	int T,N,i,j;

	ifd = fopen("input.txt", "r");
	ofd = fopen("output.txt", "w");
	fscanf(ifd, "%d\n", &T);

	for(i=0 ; i<T ; i++)
	{
		fscanf(ifd, "%d %d %d\n", &Gcal[0], &Gcal[1], &Gcal[2]);
	
		fscanf(ifd, "%d\n", &N);
		for(j=0 ; j<N ; j++)
			fscanf(ifd, "%d %d %d\n", &cal[j][0], &cal[j][1], &cal[j][2]);
		Judge(Gcal,cal,N);
	}

	fclose(ifd);
	fclose(ofd);
	return 0;
}

void Judge( int * G, int cal[20][3],const int N)
{
	int i,j;
	int index[20];
	int index_Num, index_Point, index_Val;
	int temp[3];
	static int count=0;

	count++;

	for(index_Num=0 ; index_Num<N ; index_Num++)
	{

		for(i=0 ; i<=index_Num ; i++)
			index[i]=i;

		index_Point = index_Num;
		while(1)
		{
			temp[0]=temp[1]=temp[2]=0;
			for(i=0 ; i<=index_Num ; i++)
			{
				j=index[i];
				temp[0] = temp[0]+ cal[j][0];
				temp[1] = temp[1]+ cal[j][1];
				temp[2] = temp[2]+ cal[j][2];

				if(temp[0]>=G[0] || temp[1]>=G[1] || temp[2]>=G[2])
				{
					if(temp[0]==G[0] && temp[1]==G[1] && temp[2]==G[2])
					{
						fprintf(ofd, "Case #%d: yes\n", count);
						return;
					}
					else
						break;
				}
			}

			if(index[0] == N-index_Num-1)
				break;
		
			if(index[index_Point] == N-(index_Num-index_Point+1))
			{
				index_Point--;
				index_Val = ++index[index_Point];
				for(j=index_Point+1 ; j<=index_Num ; j++)
					index[j] = ++index_Val;
				if(index[index_Point] != N-(index_Num-index_Point+1))
					index_Point = index_Num;
			}
			else if(index[index_Point]<N-(index_Num-index_Point+1))
				index[index_Point]++;
				
		}
	}
	fprintf(ofd, "Case #%d: no\n", count);

}