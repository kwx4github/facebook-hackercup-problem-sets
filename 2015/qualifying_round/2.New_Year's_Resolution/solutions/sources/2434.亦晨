#include <iostream>

using namespace std;

int t, n, g[20][3];
int p, c, f;

bool resolution(int g[20][3], int result[3], int n, int i, int flag) {
    int temp_result[3];
    temp_result[0] = result[0];
    temp_result[1] = result[1];
    temp_result[2] = result[2];

    if (i == n - 1 && flag == 1) {
        if ((temp_result[0] + g[i][0]) == p &&
            (temp_result[1] + g[i][1]) == c &&
            (temp_result[2] + g[i][2]) == f) {
            return true;
        } else {
            return false;
        }
    } else if (i == n - 1 && flag == 0) {
        if (temp_result[0] == p &&
            temp_result[1] == c &&
            temp_result[2] == f) {
            return true;
        } else {
            return false;
        }
    }

    if (flag == 1) {
        temp_result[0] += g[i][0];
        temp_result[1] += g[i][1];
        temp_result[2] += g[i][2];
    }

    if (resolution(g, temp_result, n, i + 1, 1) ||
        resolution(g, temp_result, n, i + 1, 0)) {
        return true;
    } else {
        return false;
    }
}

int main(int argc, char const* argv[])
{
    cin >> t;
    for (int i = 0; i < t; i++) {
        int result[3] = {0};

        cin >> p >> c >> f >> n;
        for (int j = 0; j < n; j++) {
            cin >> g[j][0] >> g[j][1] >> g[j][2];
        }
 
        cout << "Case #";
        if (resolution(g, result, n, 0, 1) || resolution(g, result, n, 0, 0)) {
            cout << i + 1 << ": yes" << endl;
        } else {
            cout << i + 1 << ": no" << endl;
        }
    }

    return 0;
}
