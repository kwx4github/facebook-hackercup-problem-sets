#include <iostream>
#include <cstdio>
#include <string>
#include <utility> // pair
#include <vector>
#include <algorithm>
#include <cstring> //memset
using namespace std;
  
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii; 
typedef long long ll;
#define ff first 
#define ss second 
#define sz(a) int((a).size()) 
#define pb push_back 
#define mp make_pair
#define all(c) (c).begin(),(c).end() 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define rep(i,n) for (i=0; i<n ; i++)
#define rep1(i,n) for (i=1; i<=n ; i++)
#define MAX 1111111

// Global
pair <int, ii> arr[21];
int g_p, g_c, g_f, n;

bool solve(int x, pair<int, ii> piii) {
    if (x > n) 
        return false;
    if (piii.ff == g_p && piii.ss.ff == g_c && piii.ss.ss == g_f) 
        return true; 
    for (int i = x + 1; i < n; i++) {
        pair <int, ii> temp = mp (piii.ff + arr[i].ff, mp(piii.ss.ff + arr[i].ss.ff, piii.ss.ss + arr[i].ss.ss)); 
        if (solve(i, temp)) 
            return true; 
    }
    return false; 
}

int main() {

    freopen("in.txt", "r", stdin);
    freopen("30.txt", "w", stdout);

    int t, k, i, p, c, f;
    scanf("%d", &t);
    rep1(k, t) {
        scanf("%d %d %d", &g_p, &g_c, &g_f);
        scanf("%d", &n);
        rep(i, n) {
            scanf("%d %d %d", &p, &c, &f);
            arr[i] = mp(p, mp(c, f));
        }   
        bool flag = false; 
        rep(i, n) {
            if (solve(i, mp(arr[i].ff, mp(arr[i].ss.ff, arr[i].ss.ss)))) 
                flag = true;
        }
        if (flag) 
            printf("Case #%d: yes\n", k); 
        else printf("Case #%d: no\n", k); 
    }
}