#include <iostream>

using namespace std;

int p[20], c[20], f[20];
int count1 = 0;

bool func(int row, int tp, int tc, int tf) {
  //cout << "running func " << row << " " << tp << " " << tc << " " << tf << endl;

  if ((tp == p[row]) && (tc == c[row]) && (tf == f[row])) {
    //cout << "Found match" << endl;
    return true;
  }

  bool include_row = true;

  // If any number is higher than target
  if ((tp < p[row]) || (tc < c[row]) || (tf < f[row])) {

    include_row = false;
  }

  bool possible = false;

  if (include_row) {
    // Include this row
    if (row < (count1 - 1)) {
      possible = func(row+1, tp-p[row], tc-c[row], tf-f[row]);
    }
  }

  if (possible) {
    return true;
  }
  else {
    // Do not include this row
    if (row < (count1 - 1)) {
      return func(row+1, tp, tc, tf);
    }
  }

  return false;
}

int main() {

  FILE * fp = fopen("input2.txt", "r");

  int num_tests;
  fscanf(fp, "%d", &num_tests);

  // For each test
  for (int i=0;i < num_tests; i++) {
    int tp,tc,tf;
    fscanf(fp, "%d %d %d", &tp, &tc, &tf);

    int n;
    fscanf(fp, "%d", &n);
    count1 = 0;

    for (int i=0; i<n; i++) {
      int x,y,z;
      fscanf(fp, "%d %d %d", &x, &y, &z);

      if ((x > tp) || (y > tc) || (z > tf)) {
        // Reject this sample
        continue;
      }

      p[count1] = x;
      c[count1] = y;
      f[count1] = z;
      count1++;
    }

    if (func(0, tp, tc, tf)) {
      cout << "Case #" << i + 1 << ": yes" << endl;
    } else {
      cout << "Case #" << i + 1 << ": no" << endl;
    }
  }

  
}
