#include<iostream>
#include<vector>
#include<algorithm>
#include<cmath>
using namespace std;
int brr[21],arr[21];
int p,q,r;
pair<int, pair<int,int> > vec[21];
bool powerSet(int *set, int set_size,int total)
{
	int sum,col,s1,s2;
     unsigned int pow_set_size = pow(2, set_size);
    int counter, j;
    for(counter = 0; counter < pow_set_size; counter++)
    {
    	col=0,s1=0,s2=0,sum=0;
      for(j = 0; j < set_size; j++)
       {
          if(counter & (1<<j))
          {
         //   printf("%d", set[j]);
         	sum+=set[j];
         //	brr[col++]=j;
         	s1+=vec[j].second.first;
      		s2+=vec[j].second.second;
     		}
       }

		if(sum==p && s1==q && s2==r)
			return true;
    }
    return false;
}
int main()
{
	int t,a=1,n,x,y,z;
//	freopen("in2.txt","r",stdin);
//			freopen("out2.txt","w",stdout);
	scanf("%d",&t);
	while(t--)
	{
			
		scanf("%d%d%d",&p,&q,&r);
		scanf("%d",&n);
		for(int i=0;i<n;i++)
		{
			scanf("%d%d%d",&x,&y,&z);
			vec[i]=(make_pair(x,make_pair(y,z)));
		}
		for(int i=0;i<n;i++)
		{
			arr[i]=vec[i].first;
		}
		printf("Case #%d ",a);
		if((powerSet(arr,n,p))==true)
			printf("yes\n");
		else
			printf("no\n");	
		a++;
	}
	return 0;
}
