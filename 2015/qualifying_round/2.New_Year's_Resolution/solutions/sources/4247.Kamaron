#include <iostream>
#include <fstream>
#include <random>
#include <chrono>
#include <vector>
using namespace std;

int main()
{
	ifstream fin("input.txt");
	ofstream fout("output.txt");

	int nCases = 0;
	fin >> nCases;

	for (int i = 1; i <= nCases; ++i)
	{
		// Input...
		int goalP = -1, goalC = -1, goalF = -1;
		fin >> goalP >> goalC >> goalF;
		bool canWe = false;
		int nFoods = -1;
		fin >> nFoods;
		vector<int> pAmt(nFoods), cAmt(nFoods), fAmt(nFoods);
		for (int j = 0; j < nFoods; ++j)
		{
			fin >> pAmt[j];
			fin >> cAmt[j];
			fin >> fAmt[j];
		}

		// Solve!
		unsigned int flag = 0x00;
		for (unsigned int flag = 0x00; flag < (unsigned int)(1 << nFoods); ++flag)
		{
			// Check sums against flag. If it works, wonderful.
			int p = 0, c = 0, f = 0;
			for (unsigned int bit = 0; bit < nFoods; ++bit)
			{
				if (flag & 1 << bit)
				{
					p += pAmt[bit];
					c += cAmt[bit];
					f += fAmt[bit];

					if (p > goalP || c > goalC || f > goalF) break;
				}

				if (p == goalP && c == goalC && f == goalF)
				{
					canWe = true;
				}
			}
		}

		fout << "Case #" << i << ": " << (canWe ? "yes" : "no") << endl;
	}

	fin.close();
	fout.close();

	return 0;
}