#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <memory>
#include <cstring>
#include <cassert>
#include <numeric>
#include <sstream>
#include <complex>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <cctype>
#include <unordered_map>
#include <unordered_set>
using namespace std;

#define REP2(i, m, n) for (int i = (int)(m); i < (int)(n); i++)
#define REP(i, n) REP2(i, 0, n)
#define ALL(S) (S).begin(), (S).end()

template <typename T, typename E>
ostream &operator<<(std::ostream &os, const std::pair<T, E> &p){
  return os << "(" << p.first << ", " << p.second << ")";
}

typedef long long ll;

string solve(){
  int N, GP, GC, GF;
  cin >> GP >> GC >> GF;
  cin >> N;
    
  vector<int> P(N), C(N), F(N);
  REP(i, N){
    cin >> P[i] >> C[i] >> F[i];
  }
  
  REP(mask, 1 << N){
    int SP = 0, SC=  0, SF = 0;
    REP(i, N){
      if (mask & (1 << i)) {
        SP += P[i];
        SC += C[i];
        SF += F[i];
      }
    }
    if (GP == SP && GC == SC && GF == SF) return "yes";
  }
  return "no";
}

int main(){
  ios::sync_with_stdio(false);

  int T;
  cin >> T;
  REP(t, T){
    cout << "Case #" << t + 1 << ": " << solve() << endl;
  }
  return 0;
}
