using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Facebook
{
    class NewYearResolution
    {
        public static void solve()
        {
            FileInfo fin = new FileInfo("new_years_resolution.txt");
            FileInfo fout = new FileInfo("out.txt");
            using (StreamReader sr = fin.OpenText())
            {
                using (StreamWriter sw = fout.CreateText())
                {
                    int t = int.Parse(sr.ReadLine());
                    for (int i = 1; i <= t; i++)
                    {
                        string[] integers = sr.ReadLine().Split(new char[] { ' ' });
                        int gp = int.Parse(integers[0]);
                        int gc = int.Parse(integers[1]);
                        int gf = int.Parse(integers[2]);
                        int n = int.Parse(sr.ReadLine());
                        int[] p = new int[n];
                        int[] c = new int[n];
                        int[] f = new int[n];
                        for (int j = 0; j < n; j++)
                        {
                            integers = sr.ReadLine().Split(new char[] { ' ' });
                            p[j] = int.Parse(integers[0]);
                            c[j] = int.Parse(integers[1]);
                            f[j] = int.Parse(integers[2]);
                        }
                        string result = Process(gp, gc, gf, p, c, f) ? "yes" : "no";
                        sw.WriteLine("Case #" + i + ": " + result);
                    }
                }
            }
        }

        private static bool Process(int gp, int gc, int gf, int[] p, int[] c, int[] f)
        {
            int upperLimit = (1 << 21) - 1;
            for (int mask = 1; mask < upperLimit; mask++)
            {
                int psum = 0;
                int csum = 0;
                int fsum = 0;
                for (int i = 0; i < p.Length; i++)
                {
                    if (psum >= gp || csum >= gc || fsum >= gf)
                    {
                        break;
                    }
                    int pos = 1 << (i+1);
                    if ((mask & pos) != 0)
                    {
                        psum += p[i];
                        csum += c[i];
                        fsum += f[i];
                    }
                }
                if (psum == gp && csum == gc && fsum == gf)
                {
                    return true;
                }
            }

            return false;
        }
    }
}
