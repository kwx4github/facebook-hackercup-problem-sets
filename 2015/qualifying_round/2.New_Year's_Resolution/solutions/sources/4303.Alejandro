
open (FILE,"<input.txt") || die "No se pudo abrir el archivo de entrada ";
open (DEST,">output.txt") || die "No se pudo abrir el archivo de salida ";

$T=<FILE>;
chomp($T);

if ($T >= 1 && $T <=20){
	
	$caso=1;
	while ($caso <= $T){
		$lineaGPCF = <FILE>;
		chomp($lineaGPCF);
		#print "lineaGPCF : ".$lineaGPCF."\n";
		#print "Case #".$caso.": ";
		
		$N = <FILE>;
		chomp($N);
		#print $N."\n";
		
		@arr = ();
		$j=0;
		while($j<$N){
			$arr[$j] = <FILE>;
			chomp($arr[$j]);
			#print $arr[$j]."\n";
			$j++;			
		}
		
		if ($N >= 1 && $N <=20){
			calorias($lineaGPCF,@arr);
		}
		$caso++;
	}

}

sub calorias{

	#print "N ".$#_."\n";
	#print "Alim1 ". @_[0]."\n";
	$lineaGPCF = @_[0];
	@partes = split(" ",$lineaGPCF);
	$gp = $partes[0];
	$gc = $partes[1];
	$gf = $partes[2];
	
	if ($gp >= 10 && $gp <= 1000 && $gc >= 10 && $gc <= 1000 && $gf >= 10 && $gf <= 1000){
		#print "lineaGPCF: ".$gp."-".$gc."-".$gf."\n";
		my @matrix;
		my @P;
		my @C;
		my @F;
		#encontrar si la suma de las lineas de los arreglos es igual a 
		#las calorias deseadas
		$ind2 = 1;
		for ($ind1=1; $ind1<=$#_; $ind1++){
			@partes = split(" ",@_[$ind1]);
			$P[$ind1] = $partes[0];
			$C[$ind1] = $partes[1];
			$F[$ind1] = $partes[2];
			#print "Alim: ".$P[$ind1]."-".$C[$ind1]."-".$F[$ind1]."\n";		
		}
	
		$suma1 = 0;
		$suma2 = 0;
		$suma3 = 0;
		$match = 0;
		$pos = -1;
	
		#$match = false;
		suma(\@P,\@C,\@F,0,0,0,$gp,$gc,$gf);
	
		#print "Case #: ".$match."\n";
		if ($match == 1){
			print DEST "Case #".$caso.": yes\n";
		}else{
			print DEST "Case #".$caso.": no\n";
		}
	
	}
	
}

sub suma{
	if ($match == 0){
	my @b =@{$_[0]};
	my @c =@{$_[1]};
	my @d =@{$_[2]};
	my $v1 =@_[3];
	my $v2 =@_[4];
	my $v3 =@_[5];
	my $target1 =@_[6];
	my $target2 =@_[7];
	my $target3 =@_[8];	
	
		#print "arr : "."@b"."\n";
		#print "size: ". $#b."\tv".$v."\t"."@b"."\n";
		#print "v1: ". $v1."\tv2: ".$v2."\tv3: ".$v3."\n";
		#print "T: ". $target1."\n";
	
		if ($v1 == $target1 && $v2 == $target2 && $v3 == $target3){
			#print "yes\n";
			#print "v1: ". $v1."\tv2: ".$v2."\tv3: ".$v3."\n";
			#print "Encontradoooooooooo\n";
			$match = 1;
			#return true;
		}else{
			if($#b >= 1){
				for (my $i=1; $i<=$#b; $i++){					
					
					if ($v1+$b[$i] <= $target1){
						#print "i: ".$i." ";
						@resto1 = &fnResto(\@b,$i);
						@resto2 = &fnResto(\@c,$i);
						@resto3 = &fnResto(\@d,$i);
						
						suma(\@resto1,\@resto2,\@resto3,$v1+$b[$i],$v2+$c[$i],$v3+$d[$i],$target1,$target2,$target3);
					}
					#print "resto "."@resto"."\n";
				}	
			}
		}
		#print " - \n - ";
	}
}

sub fnResto{
	my @arrResto =@{$_[0]};
	my $v =@_[1];	
	
	my @newArr;
	$ik=1;
	for ($ij=0; $ij<=$#arrResto; $ij++){
		if ($ij > $v){
			$newArr[$ik] = $arrResto[$ij];
			$ik++;
		}
	}
	return @newArr;
}

sub fnCopiaArreglo{
	my @arrAnterior =@{$_[0]};
	my @copyArr;
	for (my $il=0; $il<=$#arrResto; $il++){
		$copyArr[$il] = $arrAnterior[$il];
	}
	return @copyArr;
}