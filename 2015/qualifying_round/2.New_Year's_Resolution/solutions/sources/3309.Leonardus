import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.Scanner;

public class FBB {

	public final static String IN_FILE = "test/FBB.in";
	public final static String OUT_FILE = "test/FBB.out";

	private static Scanner IN;

	public static void main(String[] args) throws Exception {
		InputStream in = new FileInputStream(IN_FILE);
		PrintWriter out = new PrintWriter(new FileWriter(OUT_FILE));
		IN = new Scanner(in);

		int T = IN.nextInt();
		for (int t = 1; t <= T; t++) {
			int p = IN.nextInt();
			int c = IN.nextInt();
			int f = IN.nextInt();

			int n = IN.nextInt();

			int[] GP = new int[n];
			int[] GC = new int[n];
			int[] GF = new int[n];
			for (int i = 0; i < n; i++) {
				GP[i] = IN.nextInt();
				GC[i] = IN.nextInt();
				GF[i] = IN.nextInt();
			}

			boolean[] XP = new boolean[p + 1];
			boolean[][] NP = new boolean[p + 1][n];

			XP[0] = true;

			for (int i = 0; i <= p; i++) {
				if (!XP[i])
					continue;
				for (int j = 0; j < n; j++) {
					if (i + GP[j] > p)
						continue;

					XP[i + GP[j]] = true;
					NP[i + GP[j]][j] = true;
				}
			}

			boolean found = look(p, c, f, GP, GC, GF, NP);
			out.println("Case #" + t + ": " + (found ? "yes" : "no"));
		}

		out.flush();
		out.close();
	}

	private static boolean look(int p, int c, int f, int[] GP, int[] GC, int[] GF, boolean[][] NP) {
		if (p == 0)
			return c == 0 && f == 0;
		if (c < 0 || f < 0)
			return false;

		for (int i = 0; i < NP[p].length; i++) {
			if (!NP[p][i])
				continue;

			int pp = p - GP[i];
			int cc = c - GC[i];
			int ff = f - GF[i];

			boolean found = look(pp, cc, ff, GP, GC, GF, NP);
			if (found)
				return true;
		}

		return false;
	}
}
