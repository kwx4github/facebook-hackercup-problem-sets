#include <iostream>

using namespace std;

bool subsetSum(int input[][3], int n, int sum1, int sum2, int sum3)
{
    if (sum1 == 0 && sum2 == 0 && sum3 == 0)
        return true;
    if (n == 0 && (sum1 != 0 || sum2 !=0 || sum3 != 0))
        return false;

    if (input[n-1][0] > sum1 || input[n-1][1] > sum2 || input[n-1][2] > sum3)
        return subsetSum(input, n-1, sum1, sum2, sum3);

    return subsetSum(input, n-1, sum1, sum2, sum3) ||
        subsetSum(input, n-1, sum1 - input[n-1][0], sum2 - input[n-1][1], sum3 - input[n-1][2]);
}

int main()
{
    int numCases;
    cin >> numCases;
    //cout << numCases << endl;
    int count = 0;
    while (count < numCases) {
        int gp, gc,gf;
        int numFoods;
        cin >> gp >> gc >> gf;
        cin >> numFoods;
        int foodTable[numFoods][3];
        for (int i = 0; i < numFoods; i++)
            cin >> foodTable[i][0] >> foodTable[i][1] >> foodTable[i][2];
        
        int result = subsetSum(foodTable, numFoods, gp, gc, gf);
        count++;
        cout << "Case #" << count << ": " << (result?"yes":"no") << endl;
    }
    return 0;
}