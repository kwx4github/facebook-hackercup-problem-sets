import sys

def canSatifyTargets(pTarget, cTarget, fTarget, foods):
  possible = [(0, 0, 0)]
  for food in foods:
    pCur, cCur, fCur = food
    for pos in possible:
      p, c, f = pos
      pNew = pCur + p
      cNew = cCur + c
      fNew = fCur + f
      if pNew == pTarget and cNew == cTarget and fNew == fTarget:
        return True
      if pNew > pTarget or cNew > cTarget or fNew > fTarget:
        continue
      possible.append((pNew, cNew, fNew))


def parseFoodLine(line):
  return tuple(map(int, line.split(' ')))

if __name__ == "__main__":
  lines = open(sys.argv[-1]).readlines()
  numCases = int(lines[0])
  iterator = iter(lines[1:])
  for case in range(numCases):
    pTarget, cTarget, fTarget = parseFoodLine(iterator.next())
    numFoods = int(iterator.next())
    foods = []
    for __ in range(numFoods):
      foods.append(parseFoodLine(iterator.next()))
    result = canSatifyTargets(pTarget, cTarget, fTarget, foods)
    print('Case #{0}: {1}'.format(case + 1, 'yes' if result else 'no'))
