#include <iostream>
#include <vector>
#include <stdio.h>

using namespace std;

struct Foods_value{
    int prot;
    int ch;
    int fat;
};

bool Lines_up_good(int gp,int gc,int gf,int foods,vector<Foods_value> Foods){
int number_calc = 1;
number_calc = number_calc<<foods;
Foods_value goal;
goal.ch=0;
goal.fat=0;
goal.prot=0;

for( int i =0; i<number_calc; i++){

goal.ch=0;
goal.fat=0;
goal.prot=0;
int otmestvane = 1;

    for( int j=0; j<foods; j++){
        if( i&(otmestvane<<j)){
            goal.ch+=Foods[j].ch;
            goal.fat+=Foods[j].fat;
            goal.prot+=Foods[j].prot;
        }
    }
    if(goal.ch == gc && goal.fat == gf && goal.prot == gp)
        return true;
}
return false;
}

int main(){

freopen("new_years_resolution.txt","r",stdin);
freopen("results_problem_2.txt","w", stdout);

int Tests;
cin>>Tests;

int gp, gc, gf;
int foods;
vector<bool> results;
for(int i =0; i<Tests; i++){
    cin>>gp>>gc>>gf;
    cin>>foods;
    int pr, ch, fat;
    vector<Foods_value> Foods;
    Foods_value meal;
    for(int j=0; j<foods; j++){
        cin>>meal.prot;
        cin>>meal.ch;
        cin>>meal.fat;
        Foods.push_back(meal);
    }
     bool good;
     good = Lines_up_good(gp, gc, gf, foods,  Foods);
     results.push_back(good);

}

int till=results.size();
for( int i =0; i<till; i++){
    cout<<"Case #"<<i+1<<": ";
    if(results[i] == true){
        cout<<"yes"<<endl;}
    else{
        cout<<"no"<<endl;}
}

return 0;
}
