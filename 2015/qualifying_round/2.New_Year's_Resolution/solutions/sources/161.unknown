#include <iostream>
#include <cstdio>
#include <string.h>
#include <algorithm>
#include <string>
#include <cassert>
using namespace std;
#define debug(x) cout << #x << " = " << x << endl;
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define rrep(i,b,a) for(int i = (b); i >= (a); --i)
#define clr(a,x) memset(a,(x),sizeof(a))
#define LL long long
#define eps 1e-9
#define mt make_tuple
const int maxn = 20 + 5;
int Gp,Gc,Gf;
int p[maxn],c[maxn],f[maxn];
int n;
void input()
{
    scanf("%d%d%d",&Gp,&Gc,&Gf);
    cin >> n;
    rep(i,0,n) cin >> p[i] >> c[i] >> f[i];
}

bool dfs(int cur,int cp,int cc,int cf)
{
    if (cp > Gp) return false;
    if (cc > Gc) return false;
    if (cf > Gf) return false;
    if (cur == n) {
        return cp == Gp && cc == Gc && cf == Gf;
    }
    return dfs(cur+1,cp,cc,cf) ||
        dfs(cur+1,cp+p[cur],cc+c[cur],cf+f[cur]);
}

void solve()
{
    if (dfs(0,0,0,0)) puts("yes");
    else puts("no");
}

int main()
{
    freopen("C:\\in.txt","r",stdin);
    freopen("C:\\out.txt","w",stdout);
    int T; cin >> T;
    rep(cas,1,T+1) {
        input();
        printf("Case #%d: ",cas);
        solve();
    }
}
