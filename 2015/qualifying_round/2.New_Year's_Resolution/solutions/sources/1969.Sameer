#include <bits/stdc++.h>
#include <assert.h>
 
using namespace std;
 
typedef long long ll;
typedef long double ld;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;
 
#define rep(i,n) for(int i = 0; i < n; i++)
#define reps(i,a,n) for(int i = a; i < n; i++)
#define s(n) cin >> n
#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define rsz(x,n) x.clear(); x.resize(n)
#define rrsz(x,a,n) x.clear(); x.resize(n,a)
#define wt while(true)
#define all(x) x.begin(),x.end()
#define pb push_back
#define ls(x) (((x) << 1) + 1)
#define rs(x) ((ls(x)) + 1)
#define md(a,b) (((a) + (b)) >> 1)
#define INF (1e9 + 7)
 
int t, u, v, n, k, m, c, d, f, e, l, r, q;
struct calorie{
	ll prot;
	ll carb;
	ll fat;
	calorie () {
		prot = carb = fat = 0;
	}
	calorie (ll prot, ll carb, ll fat) : prot(prot), carb(carb), fat(fat) {
	}
	calorie operator+ (const calorie & a) {
		return calorie(this -> prot + a.prot, this -> carb + a.carb, this -> fat + a.fat);
	}
	void operator+= (calorie & a) {
		this -> prot += a.prot;
		this -> carb += a.carb;
		this -> fat += a.fat;
	}
	bool operator== (calorie & a) {
		return (this -> prot == a.prot && this -> carb == a.carb && this -> fat == a.fat);
	}
	void operator>> (istream & i) {
		i >> this -> prot;
		i >> this -> carb;
		i >> this -> fat;
	}
	void operator<< (ostream & o) {
		o << this -> prot;
		o << this -> carb;
		o << this -> fat;
	}
};
ll gp, gc, gf;
vector < calorie > x;
int main () {
    csl;
	freopen("new_years_resolution.txt", "r", stdin);
	freopen("ss.txt", "w", stdout);
	cin >> t;
	reps (j, 1, t + 1) {
		cout << "Case #" << j << ": ";
		cin >> gp >> gc >> gf;
		cin >> n;
		x.resize(n);
		rep (i, n) {
			x[i] >> cin;
		}
		calorie sink = calorie(gp, gc, gf);
		calorie source = calorie();
		string ans = "no";
		rep (i, 1 << n) {
			rep (j, n) {
				if (((1 << j) & i))
					source += x[j];
			}
			if (source == sink) ans = "yes";
			source = calorie();
		}
		cout << ans << '\n';
	}
    return 0;
}