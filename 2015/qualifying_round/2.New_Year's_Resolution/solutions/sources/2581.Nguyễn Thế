#include <bits/stdc++.h>
using namespace std;

#define fto(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define fdw(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define fill(ar, val) memset(ar, val, sizeof(ar))
#define out(x,y) cout << x << y
#define out3(x,y,z) cout << x << y << z
#define debug(a) cout << #a << " = " << a << endl
#define ooLL 1000000000000LL
#define oo 1000000000
#define maxn 100005

#define sz(a) int((a).size())
#define all(c) (c).begin(), (c).end()
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())

set<pair<pair<int, int> , int> > s;
set<pair<pair<int, int> , int> >:: iterator it;

int n, numtest, gp, gc, gf, p, f, c, p1 ,f1, c1, p2, f2, c2;
pair<pair<int, int> , int> tmp;

int main() {
    #ifndef ONLINE_JUDGE
    freopen("in.inp","r",stdin);
    freopen("ou.out","w",stdout);
    #endif

    cin >> numtest;
    fto(test, 1, numtest) {
        cin >> gp >> gc >> gf;
        cin >> n;

        s.clear();
        fto(i,1,n) {
            cin >> p >> c >> f;
            for(it = s.begin(); it != s.end(); it++) {
                p1 = it->first.first;
                c1 = it->first.second;
                f1 = it->second;

                p2 = p1 + p;
                c2 = c1 + c;
                f2 = f1 + f;
                tmp = make_pair(make_pair(p2, c2), f2);
                if (p2<=1000 && c2<=1000 && f2<=1000 && s.find(tmp)==s.end()) s.insert(tmp);
             /*   if (p2==gp && c2==gc && f2==gf) {
                    cout << "Case #" << test << ": yes" << endl;
                    break;
                }*/
            }
            tmp = make_pair(make_pair(p, c), f);
            if (s.find(tmp)==s.end()) s.insert(tmp);

      /*  for(it = s.begin(); it != s.end(); it++) {
            p1 = it->first.first;
            c1 = it->first.second;
            f1 = it->second;
            debug(p1);
            debug(c1);
            debug(f1);
            cout << endl;
        }*/

        }
        tmp = make_pair(make_pair(gp ,gc), gf);
        if (s.find(tmp)==s.end()) cout << "Case #" << test << ": no" << endl;
        else cout << "Case #" << test << ": yes" << endl;
    }
}
