#! /usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import itertools
import math
from collections import Counter, defaultdict

class Main(object):
    
    def __init__(self):
        pass

    def solve(self):
        '''
        insert your code
        '''
        t = input()
        for i in range(t):
            gp, gc, gf = map(int, raw_input().split())
            n = input()
            bit = 2 ** n
            data = []
            for j in range(n):
                p, c, f = map(int, raw_input().split())
                data.append((p, c, f))
            for b in range(bit):
                b = bin(b)[2:]
                cp = 0
                cc = 0
                cf = 0
                for j in reversed(range(len(b))):
                    if b[j] == '1':
                        cp += data[n-j-1][0]
                        cc += data[n-j-1][1]
                        cf += data[n-j-1][2]
                # print cp, cc, cf
                if cp == gp and cc == gc and cf == gf:
                    print 'Case #' + str(i+1) + ': ' + 'yes'
                    break
            else:
                print 'Case #' + str(i+1) + ': ' + 'no'


        return None

if __name__ == '__main__':
    m = Main()
    m.solve()
