
#include <iostream>
#include <vector>
using namespace std;

bool qtySatisfied(vector<int>& vp, 
	vector<int>& vc, 
	vector<int>& vf, 
	int N, 
	int GP, 
	int GC, 
	int GF)
{
	if (GP == 0 && GC == 0 && GF == 0) {
		return true;
	}
	else if (N == 0) {
		return false;
	}

	if (vp[N - 1] > GP || vc[N - 1] > GC || vf[N - 1] > GF)
		return qtySatisfied(vp, vc, vf, N - 1, GP, GC, GF);

	return qtySatisfied(vp, vc, vf, N - 1, GP, GC, GF) ||
		qtySatisfied(vp, vc, vf, N - 1, GP - vp[N - 1], GC - vc[N - 1], GF - vf[N - 1]);
}

int main()
{
	char inp[11];
	int T;
	int GP, GC, GF;
	int p, c, f;
	int N;
	cin >> T;
	int caseN = 1;
	char* ans[2] = { "no", "yes" };
	vector<int> vp(30, 0), vc(30, 0), vf(30, 0);
	for (; caseN <= T; caseN++) {
		
		cin >> GP >> GC >> GF;
		cin >> N;
		
		for (int i = 0; i < N;i++) {
			cin >> p >> c >> f;
			vp[i] = p;
			vc[i] = c;
			vf[i] = f;
			
		}
		bool sat = qtySatisfied(vp, vc, vf, N, GP, GC, GF);
		
		cout << "Case #" << caseN << " " << ans[sat] << endl;
	}
	return 0;
}

