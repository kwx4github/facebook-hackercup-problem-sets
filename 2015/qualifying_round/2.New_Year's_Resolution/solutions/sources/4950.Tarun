#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int possible_nutrition(int nutri[][3], int n, int total[], int find[], int index){
    int matches = 0;
    for(int i = 0; i < 3; i++){
        if(find[i] == total[i]){
            matches++;
        }else if(find[i] > total[i]){
            return 0;
        }
    }
    if(matches == 3){
        return 1;
    }
    if(index == n){
        return 0;
    }
    find[0] += nutri[index][0];
    find[1] += nutri[index][1];
    find[2] += nutri[index][2];
    int result = possible_nutrition(nutri, n, total, find, index + 1);
    if(result == 1)
        return result;
    find[0] -= nutri[index][0];
    find[1] -= nutri[index][1];
    find[2] -= nutri[index][2];
    return possible_nutrition(nutri, n, total, find, index + 1);
}

int main(){
    int t, n, real_n, flag;
    int sum_nutri[3], test[3], find_sum_nutri[3];
    int nutri[20][3];
    FILE *input_file = fopen("new_years_resolution.txt", "r");
    FILE *output_file = fopen("new_years_resolution_broken.txt", "w");
    fscanf(input_file, "%d", &t);
//    scanf("%d", &t);
    for(int i = 0; i < t; i++){
        for(int j = 0; j < 3; j++){
            find_sum_nutri[j] = 0;
            fscanf(input_file, "%d", &sum_nutri[j]);
//            scanf("%d", &sum_nutri[j]);
        }
        fscanf(input_file, "%d", &n);
//        scanf("%d", &n);
        real_n = 0;
        for(int j = 0; j < n; j++){
            flag = 0;
            for(int k = 0; k < 3; k++){
                fscanf(input_file, "%d", &test[k]);
//                scanf("%d", &test[k]);
                if(test[k] > sum_nutri[k]){
                    flag = 1;
                }
            }
            if(flag != 1){
                nutri[real_n][0] = test[0];
                nutri[real_n][1] = test[1];
                nutri[real_n][2] = test[2];
                real_n++;
            }
        }
        fprintf(output_file, "Case #%d: ", i + 1);
//        printf("Case #%d: ", i + 1);
        if(possible_nutrition(nutri, real_n, sum_nutri, find_sum_nutri, 0)){
            fprintf(output_file, "yes\n");
        }else{
            fprintf(output_file, "no\n");
        }
    }
    return 0;
}
