<?php

$fh = fopen('new_years_resolution.txt', 'r');
$hm = 0;
$txt = "";
$c = 1;
while ($line = fgets($fh)) {
    if ($hm == 0) {
        $hm = (int)$line;
    } else {
        $data = array();
        $target = explode(" ", $line);

        $number_of_foods = (int)fgets($fh);

        for ($i = 0; $i < $number_of_foods; $i++) {
            $food_stats = explode(" ", fgets($fh));
//            print_r($food_stats);
//            echo "<br>";
            $data[] = $food_stats;
        }

        $solver = new resolutionSolver();
        $solver->target = $target;
        $solver->findTheSum($data, 0, count($data));

        echo $solver->found ? "yes" : "no";
        echo "<br>";

        $txt .= "Case #" . $c . ": " . ($solver->found ? "yes" : "no") . PHP_EOL;
        $c++;
    }
}
fclose($fh);

$output = fopen("output.txt", "w");

fwrite($output, $txt);
fclose($output);


//dfs ftw
class resolutionSolver
{
    public $target = [0, 0, 0];
    public $stack = array();
    private $sumInStack = [0, 0, 0];
    public $found = false;

    public function findTheSum($data, $from, $end)
    {
        if ($this->sumInStack[0] == $this->target[0] && $this->sumInStack[1] == $this->target[1] && $this->sumInStack[2] == $this->target[2]) {
            $this->found = true;
            return;
        }

        for ($current = $from; $current < $end; $current++) {
            if (count($this->sumInStack) && $this->sumInStack[0] < $this->target[0] && $this->sumInStack[1] < $this->target[1] && $this->sumInStack[2] < $this->target[2]) {
                $this->stack[] = $data[$current];

                $this->sumInStack[0] += $data[$current][0];
                $this->sumInStack[1] += $data[$current][1];
                $this->sumInStack[2] += $data[$current][2];

                $this->findTheSum($data, $current + 1, $end);

                $backTo = array_pop($this->stack);
                $this->sumInStack[0] -= $backTo[0];
                $this->sumInStack[1] -= $backTo[1];
                $this->sumInStack[2] -= $backTo[2];
            }
        }

    }
}