#define debu
#include <bits/stdc++.h>
using namespace std;
char grid[20000000][20];
int grid_index=0;
void powerSet(char *arr, int arrLen, int pos, int startPos, int length)
{
   if (length == 0)
      sprintf(grid[grid_index++],"%.*s", pos, arr);
   else
      for (int i = startPos; i < arrLen; i++)
      {
         swap(arr[pos], arr[i]);
         powerSet(arr, arrLen, pos+1, i+1, length - 1);
         swap(arr[pos], arr[i]);
      }
}
void powerSet(char *arr, int arrLen)
{
    grid_index=0;
    for (int i = 1; i <= arrLen; i++)
      powerSet(arr, arrLen, 0, 0, i);
}
int sum(int j, int c[])
{
    int s=0;
    for(int i=0; i<strlen(grid[j]); i++)
    {
        s+=c[grid[j][i]-65];
    }
    //cout<<s<<endl;
    return s;
}
#ifdef debug
int main()
{
    char asd[]="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    powerSet(asd,1);
    for(int i=grid_index-1; i>=0; i--)
        cout<<grid[i]<<endl;
    return 0;
}
#else

int main()
{
    freopen("test.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int t;
    scanf("%d ",&t);
    for(int i=1; i<=t; i++)
    {
        int C,P,F,c[20],p[20],f[20],N;
        bool flag=false;
        cin>>P>>C>>F>>N;
        for(int j=0; j<N; j++)
            cin>>p[j]>>c[j]>>f[j];
        char asd[]="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        powerSet(asd,N);
        for(int j=grid_index-1; j>=0; j--)
        {
            if(sum(j,c)==C && sum(j,p)==P && sum(j,f)==F)
            {
                flag=true;
                break;
            }
        }
        cout<<"Case #"<<i<<": "<<(flag==true ? "yes" : "no")<<endl;
    }
    return 0;
}
#endif
