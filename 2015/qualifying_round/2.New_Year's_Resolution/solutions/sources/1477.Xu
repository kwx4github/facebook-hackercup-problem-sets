#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <iterator>
#define REP(i,a,n) for(int i = (a); i < (int)(n); ++i)
#define foreach(itr,c) for(decltype((c).begin()) itr=(c).begin(); itr != (c).end(); itr++)
#define mp(a,b) make_pair(a,b)

using namespace std;

//typedef __int64 ll;
//typedef unsigned __int64 ull;
typedef long long ll;
typedef unsigned long long ull;


template<typename T>
inline T ABS(T a) { return a > 0 ? a : -a; }
template<typename T>
inline T MIN(T a, T b) { return a < b ? a : b; }
template<typename T>
inline T MAX(T a, T b) { return a > b ? a : b; }
template<typename T>
inline T CHKMIN(T &a, T b) { if(a > b) a = b; return a; }
template<typename T>
inline T CHKMAX(T &a, T b) { if(a < b) a = b; return a; }
template<typename T>
inline void SWAP(T &a, T &b) { static T c; c = a; a = b; b = c; }

int n, g[30][3], tar[3];

int solve() {
  int s[3];
  REP(i, 0, (1 << n)) {
    s[0] = s[1] = s[2] = 0;
    REP(j, 0, n) {
      if((i >> j) & 1) {
        s[0] += g[j][0];
        s[1] += g[j][1];
        s[2] += g[j][2];
      }
    }
    if(s[0] == tar[0] && s[1] == tar[1] && s[2] == tar[2]) return 1;
  }
  return 0;
}

int main() {
  freopen("new_years_resolution.txt", "r", stdin);
	freopen("new_years_resolution.out", "w", stdout);
  int t;
  scanf("%d", &t);
  for(int tt = 1; tt <= t; ++tt) {
    scanf("%d %d %d", tar, tar + 1, tar + 2);
    scanf("%d", &n);
    REP(i, 0, n) scanf("%d %d %d", g[i], g[i] + 1, g[i] + 2);
    printf("Case #%d: %s\n", tt, solve()?"yes":"no");
  }
  return 0;
}
