#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <algorithm>
#include <cassert>
#include <math.h>

using namespace std;

#define forn(i,n) for (int i = 0; i<int(n); ++i)
typedef long double ld;
const ld EPS = 1e-14;
#define Less(x,y) (x<(y+EPS))
#define Equ(x,y) (abs(x-y)<0.0000000001)


struct Jir{
	int a, b, c;
	Jir(int a = 0, int b = 0, int c = 0){
		this->a = a;
		this->b = b;
		this->c = c;
	}
};

int main(){
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int T;
	cin >> T;
	forn(u, T){
		cout << "Case #" << u+1 << ": ";
		int a, b, c;
		cin >> a >> b >> c;

		int n;
		cin >> n;
		vector<Jir> jir(n);
		vector<Jir> dp(n);
		forn(i, n){
			cin >> jir[i].a >> jir[i].b >> jir[i].c;			
		}

		char isGood = false;
		for (int i = 1; i < (1 << n); i++){
			int qa = 0, qb = 0, qc = 0;
			for (int j = 0; j < n; j++){
				if ((1 << j)&i){
					qa += jir[j].a;
					qb += jir[j].b;
					qc += jir[j].c;
				}
			}
			ld aa = (ld)qa / a;
			ld bb = (ld)qb / b;
			ld cc = (ld)qc / c;
			if (Equ(aa, bb) && Equ(aa, cc) && Equ(bb, cc)){
				cout << "yes"<<endl;
				isGood = true;
				break;
			}
		}
		if (!isGood){
			cout << "no"<<endl;
		}
	}

	return 0;
}