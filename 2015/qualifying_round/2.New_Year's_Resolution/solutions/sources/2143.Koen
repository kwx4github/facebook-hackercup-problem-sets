#include <iostream>
#include <vector>
#include <tuple>

int P,C,F;
int Pc,Cc,Fc;
std::vector<std::tuple<int, int, int > > vec;

bool check(int i){
	if(Pc == P && Cc == C && Fc == F) return true;
	if(Pc > P || Cc > C || Fc > F) return false;
	if(i == vec.size()) return false;
	bool r = check(i+1);
	if(r) return r;
	int p = std::get<0>(vec[i]);
	int c = std::get<1>(vec[i]);
	int f = std::get<2>(vec[i]);
	Pc+=p; Cc+=c; Fc+=f;
	r = check(i+1);
	Pc-=p; Cc-=c; Fc-=f;
	return r;
}

int main(){
	int N;
	std::cin >> N;
	for(int p=1; p<=N; ++p){
		vec.clear();
		int M;
		Pc = 0; Cc = 0; Fc = 0;
		std::cin >> P >> C >> F;
		std::cin >> M;
		for(int i=0; i<M; ++i){
			int p, c, f;
			std::cin >> p >> c >> f;
			vec.push_back(std::make_tuple(p, c, f));
		}
		bool chk = check(0);
		if(chk) std::cout << "Case #" << p << ": yes" << std::endl;
		else std::cout << "Case #" << p << ": no" << std::endl;
	}
}