#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int N;
int ps[20];
int cs[20];
int fs[20];

//brute force everything recursively, it's only 2^20
bool getResult(int pos, int p, int c, int f){
	if(p < 0 || c < 0 || f < 0){
		return false;
	}

	if(pos == N){
		return (p == 0) & (c == 0) & (f == 0);
	}

	int newp = p - ps[pos];
	int newc = c - cs[pos];
	int newf = f - fs[pos];

	return (getResult(pos+1, p, c, f) || getResult(pos+1, newp, newc, newf));
}

int main(){
	ifstream fin("in");
	ofstream fout("out");

	int T;
	bool result;
	fin >> T;

	int gp, gc, gf;

	for(int i = 1; i <= T; i++){
		fin >> gp >> gc >> gf;
		fin >> N;

		for(int j = 0; j < N; j++){
			fin >> ps[j] >> cs[j] >> fs[j];
		}

		result = getResult(0, gp, gc, gf);
		string msg = result ? "yes" : "no";
		fout << "Case #" << i << ": " << msg;
		if(i < T) {
			fout << endl;
		}
	}

	fin.close();
	fout.close();
}