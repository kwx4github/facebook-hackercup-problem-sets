#include <bits/stdc++.h>

using namespace std;
#define V vector
#define tD typedef
tD long long ll;
tD V<int> vi;
tD V<vi> vii;
tD V<ll> vll;
tD V<string> vs;
tD long double ld;
tD pair<int, int> pii;
#define mt make_tuple
#define fr(x,y) for(int x=0;x<(y); ++x)
#define fi(n) fr(i,n)
#define fj(n) fr(j,n)
#define fk(n) fr(k,n)
#define eb emplace_back
#define pb push_back
#define sz size()
#define DEBUG 0

int main() {
  int T; cin >> T;
  for (int qw = 1; qw <= T; qw++) {
    vector<ll> limits(3, 0);
    fi(3) cin >> limits[i];
    int n; cin >> n;
    vector<vector<ll>> food;
    fi(n) {
      food.eb(3, 0);
      fj(3) { cin >> food.back()[j]; }
    }
    bool possible = false;
    fi (1 << n) {
      vector<ll> eaten(3, 0);
      fj(n) {
	if ((1 << j) & i) {
	  fk(3) {
	    eaten[k] += food[j][k];
	  }
	}
      }
      if (eaten == limits) {
	possible = true;
	break;
      }
    }
    cout << "Case #" << qw << ": " << (possible ? "yes" : "no") << endl;
  }
}
