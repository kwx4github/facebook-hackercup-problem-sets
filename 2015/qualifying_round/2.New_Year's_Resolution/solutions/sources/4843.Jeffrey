#include <iostream>
#include <fstream>

using namespace std;

struct food {
	int protein;
	int carbs;
	int fat;
};

int main() {
	string inputFileName = "new_years_resolution.txt";
	string outputFileName = "newYearsFoodGoalOutput.txt";
	int caseCount;

	ifstream fin;
	fin.open(inputFileName);
	if (fin.is_open()) {
		cout << "File opened successfully.";
	}
	else {
		cout << "File to be read could not be opened.";
		system("pause");
		return 0;
	}

	ofstream fout;
	fout.open(outputFileName);
	if (fout.is_open()) {
		cout << "Output File opened successfully." << endl;
	}
	else {
		cout << "Output File could not be opened.";
		system("pause");
		return 0;
	}

	fin >> caseCount;
	//cout <<"caseCount is: " << caseCount << endl;

	int foodCount;
	food goal;
	food foods[20];
	for (int caseNum = 1; caseNum <= caseCount; caseNum++) {
		//get all the case info.
		fin >> goal.protein;
		fin >> goal.carbs;
		fin >> goal.fat;

		//cout << "Goal is: " << goal.protein << " " << goal.carbs << " " << goal.fat << endl;

		fin >> foodCount;

		//cout << "FoodCount is: " << foodCount << endl;
		//system("pause");

		for (int i = 0; i < foodCount; i++) {
			fin >> foods[i].protein;
			fin >> foods[i].carbs;
			fin >> foods[i].fat;

			//cout << "Food# " << i << " is: " << foods[i].protein << " " << foods[i].carbs << " " << foods[i].fat << endl;
		}
		//determine if the goal can be achieved.
		food foodSum;
		bool found = false;
		for (int i = 0; i < pow(2, foodCount); i++) {
			//The bits of the integer i represent whether a food is chosen to be eaten.
			foodSum.protein = 0;
			foodSum.carbs = 0;
			foodSum.fat = 0;

			//combo is a copy of i so it can be manipulated.
			int combo = i;
			for (int j = 0; j < foodCount; j++) {
				//check each digit one means he should eat it. 
				if (combo % 2 == 1) {
					foodSum.protein += foods[j].protein;
					foodSum.carbs += foods[j].carbs;
					foodSum.fat += foods[j].fat;
				}
				//cout << "combination was: " << combo;
				combo = combo >> 1;
				//cout << " now combination is: " << combo << endl;
			}
			if (foodSum.protein == goal.protein && foodSum.carbs == goal.carbs &&foodSum.fat == goal.fat) {
				//this is the right combo.
				fout << "Case #" << caseNum << ": yes" << endl;
				//cout << "Case# " << caseNum << ": yes" << endl;

				found = true;
				break;
			}

			//cout << "TestCase " << i << " is: " << foodSum.protein << " " << foodSum.carbs << " " << foodSum.fat << endl;

		}
		if (!found) {
			fout << "Case #" << caseNum << ": no" << endl;
			//cout << "Case# " << caseNum << ": no" << endl;

		}
		//cout << endl << endl << endl;
	}//end of case.
	system("pause");
}//end of main()