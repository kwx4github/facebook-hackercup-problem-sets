#!/usr/bin/env python3

from collections import namedtuple
from functools import lru_cache

__author__ = 'Tyler Crompton'

Food = namedtuple('Food', ('protein', 'carbs', 'fat'))


@lru_cache(maxsize=None)
def can_fully_fill(remaining_protein, remaining_carbs, remaining_fats, foods):
    if remaining_protein == 0 and remaining_carbs == 0 and remaining_fats == 0:
        return True

    for food in foods:
        if remaining_protein - food.protein >= 0 and remaining_carbs - food.carbs >= 0 and remaining_fats - food.fat >= 0:
            if can_fully_fill(remaining_protein - food.protein, remaining_carbs - food.carbs, remaining_fats - food.fat, foods):
                return True

    return False


if __name__ == '__main__':
    number_of_test_cases = int(input())

    for i in range(number_of_test_cases):
        desired_protein, desired_carbs, desired_fat = map(int, input().split())

        foods = frozenset(Food(*map(int, input().split())) for j in range(int(input())))

        print('Case #{}: {}'.format(i + 1, 'yes' if can_fully_fill(desired_protein, desired_carbs, desired_fat, foods) else 'no'))
