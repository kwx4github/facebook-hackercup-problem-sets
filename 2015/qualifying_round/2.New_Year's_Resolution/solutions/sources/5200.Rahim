using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace ProbB_NewYearResolution
{
    static class Program
    {
        public static IEnumerable<IEnumerable<T>> Combinations<T>(this IEnumerable<T> elements, int k)
        {
            return k == 0 ? new[] { new T[0] } :
              elements.SelectMany((e, i) =>
                elements.Skip(i + 1).Combinations(k - 1).Select(c => (new[] { e }).Concat(c)));
        }
        static void Main(string[] args)
        {
            string s_in = @"..\..\new_years_resolution.txt";
            string s_out = @"..\..\out.txt";

            TextReader tr = new StreamReader(new FileStream(s_in, FileMode.Open));
            if (File.Exists(s_out)) File.Delete(s_out);
            TextWriter tw = new StreamWriter(new FileStream(s_out, FileMode.Create));

            int T = int.Parse(tr.ReadLine());
            
            for (int t = 0; t < T; t++)
            {
                int[] iM = tr.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();
                int iFcount = int.Parse(tr.ReadLine());
                int[,] iArrOld = new int[iFcount, 3];
                int iNew = 0;
                for (int i = 0; i < iFcount; i++)
                {
                  int[] iTT =  tr.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();
                  //for (int j = 0; j < 3; j++)
                  //{
                      if (iTT[0]<=iM[0]&&iTT[1]<=iM[1]&&iTT[2]<=iM[2])
                      {
                          iArrOld[i, 0] = iTT[0];
                          iArrOld[i, 1] = iTT[1];
                          iArrOld[i, 2] = iTT[2];
                          iNew++;
                      }                      
                  //}
                }
                if (iNew==0)
                {
                   tw.WriteLine(string.Format("Case #{0}: {1}", (t + 1), "no"));
                   continue;
                }
                Console.WriteLine("ZZziNew" + iNew.ToString());
                int[,] iArr = new int[iNew, 3];
                int[] iA1 = new int[iNew];
                int[] iA2 = new int[iNew];
                int[] iA3 = new int[iNew];
                int iZZ = 0;
                for (int i = 0; i < iFcount; i++)
                {                    
                    if (iArrOld[i,0]!=0)
                    {
                        iArr[iZZ, 0] = iArrOld[i, 0]; iA1[iZZ] = iArrOld[i, 0];
                        iArr[iZZ, 1] = iArrOld[i, 1]; iA2[iZZ] = iArrOld[i, 1];
                        iArr[iZZ, 2] = iArrOld[i, 2]; iA3[iZZ] = iArrOld[i, 2];
                        iZZ++;
                    }
                }
                Array.Sort(iA1); Array.Sort(iA2); Array.Sort(iA3);
                int[] iTxx = new int[3]; int iSxx = 0;
                
                for (int i = iNew-1; i >-1 ; i--)
                {
                    iSxx += iA1[i];
                    if (iSxx > iM[0]) break;  
                    iTxx[0] = iTxx[0]+1;
                    if (iSxx >= iM[0]) break;                   
                }
                iSxx = 0;
                for (int i = iNew - 1; i > -1; i--)
                {
                    iSxx += iA2[i];
                    if (iSxx > iM[1]) break;
                    iTxx[1] = iTxx[1] + 1;
                    if (iSxx >= iM[1]) break;
                }
                iSxx = 0;
                for (int i = iNew - 1; i > -1; i--)
                {
                    iSxx += iA3[i];
                    if (iSxx > iM[2]) break;
                    iTxx[2] = iTxx[2] + 1;
                    if (iSxx >= iM[2]) break;
                }
                int iFrom = iTxx.Max();
                iTxx = new int[3];  iSxx = 0;

                for (int i = 0; i <iNew; i++)
                {
                    iSxx += iA1[i];
                    if (iSxx > iM[0]) break;
                    iTxx[0]++;
                    if (iSxx >= iM[0]) break;
                }
                iSxx = 0;
                for (int i = 0; i < iNew; i++)
                {
                    iSxx += iA2[i];
                    if (iSxx > iM[1]) break;
                    iTxx[1]++;
                    if (iSxx >= iM[1]) break;
                }
                iSxx = 0;
                for (int i = 0; i < iNew; i++)
                {
                    iSxx += iA3[i];
                    if (iSxx > iM[2]) break;
                    iTxx[2]++;
                    if (iSxx >= iM[2]) break;
                }
                int iTo = iTxx.Min();

                if (iFrom>iTo)
                {
                    tw.WriteLine(string.Format("Case #{0}: {1}", (t + 1), "no"));
                    continue;                    
                }

                for (int i = 0; i < iNew; i++) iA1[i] = i;

                for (int i = iFrom; i < iTo+1; i++)
                {
                    
                    var result = Combinations(iA1, i);
                    foreach (var item in result)
                    {
                        int iSum = 0;
                        int[] iC = item.ToArray();
                        for (int j = 0; j < i; j++)
                        {
                            iSum += iArr[iC[j],0];
                        }
                        if (iSum==iM[0])
                        {
                            int iSum2 = 0;
                            for (int j = 0; j < i; j++)
                            {
                                iSum2 += iArr[iC[j], 1];
                            }
                            if (iSum2 == iM[1])
                            {
                                int iSum3 = 0;
                                for (int j = 0; j < i; j++)
                                {
                                    iSum3 += iArr[iC[j], 2];
                                }
                                if (iSum3 == iM[2])
                                {
                                    goto DD;
                                }
                            }
                        }
                    }


                }

                tw.WriteLine(string.Format("Case #{0}: {1}", (t + 1), "no"));
                continue;
            DD: 
                tw.WriteLine(string.Format("Case #{0}: {1}", (t + 1), "yes"));
                continue;


                /*Console.WriteLine("T"+t.ToString()+"iFrom"+iFrom+"iTo"+iTo);
                for (int i = 0; i < iNew; i++)
                {
                    for (int j = 0; j < 3; j++)
                    {
                        Console.Write(iArr[i,j].ToString() + " ");
                    }
                    Console.WriteLine();
                }
                tw.WriteLine(string.Format("Case #{0}: {1}", (t + 1), " "));*/


            }



            tw.Flush();
            tw.Close();

        }
    }
}
