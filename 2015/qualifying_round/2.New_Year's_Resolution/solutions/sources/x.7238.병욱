#include <iostream>
#include <queue>
using namespace std;

const int SIZE = 20;
int agp[SIZE], agc[SIZE], agf[SIZE];

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int t = 0;
	cin >> t;

	for (int i = 1; i <= t; i++)
	{
		int gp, gc, gf;
		bool pp = false, pc = false, pf = false;
		cin >> gp >> gc >> gf;

		int n;
		cin >> n;

		int ic = 0;
		for (int j = 0; j < n; j++)
		{
			int p, c, f;
			cin >> p >> c >> f;

			if (p <= gp && c <= gc && f <= gf)
			{
				agp[ic] = p;
				agc[ic] = c;
				agf[ic] = f;
				ic++;
			}
		}

		queue<int> qp, qc, qf;
		qp.push(0);
		qc.push(0);
		qf.push(0);
		int ps = 0, cs = 0, fs = 0;
		for (int j = 0; j < ic; j++)
		{
			ps = qp.size() * 2; cs = qc.size() * 2; fs = qf.size() * 2;
			while (ps-- > 0 && cs-- > 0 && fs-- > 0)
			{
				if (qp.size() == 0) break;
				if (qc.size() == 0) break;
				if (qf.size() == 0) break;
				int np = qp.front(); qp.pop();
				int nc = qc.front(); qc.pop();
				int nf = qf.front(); qf.pop();
				if (np == gp) pp = true;
				if (nc == gc) pc = true;
				if (nf == gf) pf = true;
				if (pp && pc && pf) break;
				if (np > gp) continue;
				if (nc > gc) continue;
				if (nf > gf) continue;

				qp.push(np + agp[j]);
				qp.push(np);
				qc.push(nc + agc[j]);
				qc.push(nc);
				qf.push(nf + agf[j]);
				qf.push(nf);
			}
			if (pp && pc && pf) break;
		}

		cout << "Case #" << i << ": ";
		cout << ((pp && pc && pf) ? "yes" : "no") << endl;
	}

	return 0;
}
