#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

int t,n,nc,np,nf,p,c,f;
bool odp;
struct meal_combination{
	int p;
	int c;
	int f;
};
vector <meal_combination> g;
meal_combination sudo_make_me_a_sandwich(int a, int b, int c)
{
	meal_combination temp;
	temp.p=a;
	temp.c=b;
	temp.f=c;
	return temp;
}
int main()
{
	scanf("%d", &t);
	for(int x=0; x<t; x++)
	{
		odp=false;
		g.erase(g.begin(),g.end());
		scanf("%d %d %d",&np,&nc,&nf);
		scanf("%d", &n);
		g.push_back(sudo_make_me_a_sandwich(0,0,0));
		for(int y=0; y<n; y++)
		{
			scanf("%d %d %d", &p, &c, &f);
			for(int z=g.size()-1; z>=0; z--)
			{
				g.push_back(sudo_make_me_a_sandwich(g[z].p+p,g[z].c+c,g[z].f+f));
			}
		}
		for(int y=0; y<g.size(); y++)
		{
			if(g[y].p==np && g[y].c==nc && g[y].f==nf)
			odp=true;
		}
		if(odp)
		printf("Case #%d: yes\n", x+1);
		else
		printf("Case #%d: no\n", x+1);
		
	}
}
