#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}

#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }

#define maxn 200005

int test;
int A[3], a[25][3], f[1 << 20][3];
int n;

void solve(int itest){
	cout << "Case #" << itest << ": ";
	Rep(i, 3) cin >> A[i];
	cin >> n;
	Rep(i, n){
		Rep(j, 3) cin >> a[i][j];
	}

	ms(f, 0);
	bool ok = false;
	For(mask, 1, (1 << n) - 1){
		Rep(i, n) if(getbit(mask, i)){
			int m = offbit(mask, i);
			Rep(j, 3) f[mask][j] = f[m][j] + a[i][j];
			if(f[mask][0] == A[0] && f[mask][1] == A[1] && f[mask][2] == A[2]) ok = true;
			break;
		}
	}

	if(ok) cout << "yes\n";
	else cout << "no\n";
}

int main(){
  freopen("in.txt", "r", stdin);
  freopen("out.txt", "w", stdout);
//    ios_base::sync_with_stdio(false);
//    cin.tie(NULL);

	cin >> test;
	For(itest, 1, test){
		solve(itest);
	}

    return 0;
}
