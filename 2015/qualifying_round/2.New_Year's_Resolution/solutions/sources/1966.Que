#include <iostream>
#include <vector>

using namespace std;

bool goodfood(int gp, int gc, int gf, const vector<int> &p, const vector<int> &c, const vector<int> &f, int start) {
	if (gp == 0 && gc == 0 && gf == 0) {
		return true;
	} else {
		if (start == p.size()) {
			return false;
		} else {
			return goodfood(gp-p[start], gc-c[start], gf-f[start], p, c, f, start+1) || goodfood(gp, gc, gf, p, c, f, start+1);
		}
	}
}

int main() {
	int T, N;
	int gp, gc, gf;
	cin >> T;

	for (int i=0; i<T; ++i) {
		cin >> gp >> gc >> gf;
		cin >> N;
		vector<int> p(N, 0);
		vector<int> c(N, 0);
		vector<int> f(N, 0);
		for (int j=0; j<N; ++j) {
			cin >> p[j] >> c[j] >> f[j];
		}
		cout << "Case #" << i+1 << ": ";  
		if (goodfood(gp, gc, gf, p, c, f, 0)) {
			cout << "yes" << endl;
		} else {
			cout << "no" << endl;
		}
		
	}
	return 0;
}