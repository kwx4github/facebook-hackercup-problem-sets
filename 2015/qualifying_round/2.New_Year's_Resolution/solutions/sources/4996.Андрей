#include <iostream>
#include <iomanip>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

class Nutrients {
public :
    int p, c, f;
    Nutrients operator+=(Nutrients r) {
        this->p += r.p;
        this->c += r.c;
        this->f += r.f;
        return *this;
    }

    bool operator==(Nutrients r) {
        return p == r.p && c == r.c && f == r.f;
    }
};

int main() {
    freopen("/media/henko/B8CC5382CC5339B8/Study/Winter2014-2015/CLionProjects/Proj1/new_years_resolution.txt", "r", stdin);
    freopen("/media/henko/B8CC5382CC5339B8/Study/Winter2014-2015/CLionProjects/Proj1/output.txt", "w", stdout);

    int t;
    cin >> t;
    for (int i = 1; i <= t; ++i) {
        Nutrients needs;
        cin >> needs.p >> needs.c >> needs.f;
        int n;
        cin >> n;
        vector <Nutrients> food(n);
        for (int i = 0; i < n; ++i) {
            cin >> food[i].p >> food[i].c >> food[i].f;
        }
        int mask = 1;
        int maxMask = 1 << n;
        bool yes = false;
        while (mask < maxMask) {
            Nutrients sum;
            sum.f = sum.c = sum.p = 0;
            for (int j = 0; j < n; ++j) {
                if (1 & mask >> j) {
                    sum += food[j];
                }
            }
            if (sum == needs) {
                yes = true;
                break;
            }
            ++mask;
        }
        cout << "Case #" << i << ": " << (yes ? "yes\n" : "no\n");
    }
    return 0;
}
