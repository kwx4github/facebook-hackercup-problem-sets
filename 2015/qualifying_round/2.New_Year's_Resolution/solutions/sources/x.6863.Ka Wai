#include <stdio.h>
#include <string.h>
int total=0;

/*int max(int f[20], int t, int total)
{
	int i, m=0, p=0;
	//printf("m %d\n",t);
	for (i=0;i<total;i++)
		if (m<f[i]&&f[i]<=t)
		{
			p=i;
			m=f[i];
		}
	return p;
}

int check(int f1[20],int f2[20],int f3[20], int total, int t1, int t2, int t3, int pos)
{
	int i,j;
	for (i=total-1;i>=0;i--)
	{
		//printf("to %d\n",total);
		int sum1=t1, sum2=t2, sum3=t3;
		if (pos==1)
		{
			int hi=max(f1,f1[total-1],total);
			
			do{
				printf("%d\n",f1[hi]);
				sum1-=f1[hi];
				sum2-=f2[hi];
				sum3-=f3[hi];
				hi=max(f1,sum1,total);	
			}while (sum1>0&&sum2>0&&sum3>0);
		}
		else if (pos==2)
		{
			int hi=max(f2,f2[total-1],total);
			do{
				sum1-=f1[hi];
				sum2-=f2[hi];
				sum3-=f3[hi];
				hi=max(f2,sum2,total);	
			}while (sum1>0&&sum2>0&&sum3>0);
		}
		else if (pos==3)
		{
			int hi=max(f3,f3[total-1],total);
			do{
				sum1-=f1[hi];
				sum2-=f2[hi];
				sum3-=f3[hi];
				hi=max(f3,sum3,total);	
			}while (sum1>0&&sum2>0&&sum3>0);
		}
		if (sum1==0&&sum2==0&&sum3==0)
			return 1;
	}
	return 0;
}*/

int recSubset(int a[20], int b[20], int c[20], int target, int t2, int t3, int i, int sumSoFar, int s2, int s3) {
	//basecases
	//we got it
	if (sumSoFar == target&&s2==t2&&s3==t3) return 1;
	//we reached the end and sum is not equal to target
	if (i == total) return 0;
	//recursive case: try next element both in and out of the sum
	int with = recSubset(a,b,c, target,t2,t3, i+1, sumSoFar + a[i],s2+b[i],s3+c[i]);
	int without = recSubset(a,b,c, target,t2,t3, i+1, sumSoFar,s2,s3);
	return (with || without);
}

int main()
{
	FILE *fp,*fp2;
	int counter=0, t1=0, t2=0, t3=0, i,j, to=0;
	char buff[20];
	int f1[20], f2[20], f3[20];
	fp=fopen("new_years_resolution.txt","r");
	fp2=fopen("output.txt","w");
	char * pch;
	total=0;
	while ((fgets(buff, 20, fp))!=NULL)
	{
		buff[strlen(buff)-1]='\0';
		if (counter==0)
		{
			//total=atoi(buff);
			//printf("%d",total);
		}
		else if (counter==1)
		{
			pch = strtok(buff," ");
			t1=atoi(pch);
			pch = strtok (NULL," ");
			t2=atoi(pch);
			pch = strtok (NULL," ");
			t3=atoi(pch);

			//printf("t %d %d %d\n",t1,t2,t3);
		}
		else if (counter==2)
		{
			total=atoi(buff);
			//printf("%d",total);
		}
		else if (counter>=3)
		{
			pch = strtok(buff," ");
			f1[counter-3]=atoi(pch);
			pch = strtok (NULL," ");
			f2[counter-3]=atoi(pch);
			pch = strtok (NULL," ");
			f3[counter-3]=atoi(pch);
			//printf("ft %d %d %d %d\n",counter-3 ,f1[counter-3],f2[counter-3],f3[counter-3]);
			if (total==(counter-2))
			{
				counter=0;
				int temp=0;
				to++;
				/*for (i=0;i<total-1;i++)
					for (j=0;j<total-1-i;j++)
						if (f3[j+1]<f3[j])
						{
							temp=f3[j];
							f3[j]=f3[j+1];
							f3[j+1]=temp;
							temp=f2[j];
							f2[j]=f2[j+1];
							f2[j+1]=temp;
							temp=f1[j];
							f1[j]=f1[j+1];
							f1[j+1]=temp;
						}
				if (check(f1,f2,f3,total,t1,t2,t3,3)==1)
					printf("Case #%d: yes\n",to);
				else printf("Case #%d: no\n",to);
				for (i=0;i<total-1;i++)
					for (j=0;j<total-1-i;j++)
						if (f2[j+1]<f2[j])
						{
							temp=f3[j];
							f3[j]=f3[j+1];
							f3[j+1]=temp;
							temp=f2[j];
							f2[j]=f2[j+1];
							f2[j+1]=temp;
							temp=f1[j];
							f1[j]=f1[j+1];
							f1[j+1]=temp;
						}
				if (check(f1,f2,f3,total,t1,t2,t3,2)==1)
					printf("Case #%d: yes\n",to);
				else printf("Case #%d: no\n",to);
				for (i=0;i<total-1;i++)
					for (j=0;j<total-1-i;j++)
						if (f1[j+1]<f1[j])
						{
							temp=f3[j];
							f3[j]=f3[j+1];
							f3[j+1]=temp;
							temp=f2[j];
							f2[j]=f2[j+1];
							f2[j+1]=temp;
							temp=f1[j];
							f1[j]=f1[j+1];
							f1[j+1]=temp;
						}
				for (i=0;i<total;i++)
					printf("f %d %d %d\n",f1[i],f2[i],f3[i]);
				*///if (check(f1,f2,f3,total,t1,t2,t3,1)==1)
				if (recSubset(f1,f2,f3, t1,t2,t3, 0, 0,0,0))
					fprintf(fp2,"Case #%d: yes\n",to);
				else fprintf(fp2,"Case #%d: no\n",to);
				
			}
		}
		//printf("%d %d\n",total, counter-2);
		counter++;
	}
	fclose(fp);
	fclose(fp2);
}
