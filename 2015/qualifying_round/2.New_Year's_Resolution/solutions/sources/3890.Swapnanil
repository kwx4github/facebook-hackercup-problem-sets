#include <bits/stdc++.h>

#define scd(n) scanf("%d",&n)
#define sclld(n) scanf("%lld",&n)
#define scf(n) scanf("%f",&n)
#define sclf(n) scanf("%lf",&n)
#define prd(n) printf("%d\n",n)
#define prlld(n) printf("%lld\n",n)
#define prf(n) printf("%f\n",n)
#define prlf(n) printf("%lf\n",n)
#define pr(s) printf("%s\n", s);

#define tc(t) int t; scanf("%d",&t); while(t-->0)
#define rep(i, a, b) for(int i=a; i<b; i++)

typedef long long int lld;
using namespace std;

int cs=1;
int x[22], n, p, c, f, gp[22], gc[22], gf[22], flag;

bool check(int k){
    int s2=0, s3=0;
    rep(i, 1, k+1){
        if(x[i]){
            s2+=gc[i];
            s3+=gf[i];
        }
    }
    if(s2==c && s3==f){
        cout<<"Case #"<<cs++<<": yes"<<endl;
        flag=1;
        return true;
    }
    else return false;
}
bool sofs(int s, int k, int r){
    x[k]=1;
    if(s+gp[k]==p){if(check(k))return true; else;}
    else if(s+gp[k]+gp[k+1]<=p)sofs(s+gp[k], k+1, r-gp[k]);
    if(s+r-gp[k]>=p && s+gp[k+1]<=p){
        x[k]=0;
        sofs(s, k+1, r-gp[k]);
    }
    return false;
}
void mySort(int gp[], int gc[], int gf[], int n){
    rep(i, 1, n+1)
    rep(j, 1, n)
    if(gp[j]>gp[j+1]){
        swap(gp[j], gp[j+1]);
        swap(gc[j], gc[j+1]);
        swap(gf[j], gf[j+1]);
    }
    //rep(i, 1, n+1)cout<<gp[i]<<" "<<gc[i]<<" "<<gf[i]<<endl;
}
int main(){
    tc(t){
        flag=0;
        cin>>p>>c>>f;
        cin>>n;
        int r=0;
        rep(i, 1, n+1){
            cin>>gp[i]>>gc[i]>>gf[i];
            r+=gp[i];
        }
        mySort(gp, gc, gf, n);
        bool f=sofs(0, 1, r);
        if(flag==0)cout<<"Case #"<<cs++<<": no"<<endl;
    }
    return 0;
}
