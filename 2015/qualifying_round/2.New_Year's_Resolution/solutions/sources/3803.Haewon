__author__ = 'Haewon'


def list_subtract(x,y):
    z = []
    for i in range(len(x)):
        z.append(x[i]-y[i])
    return z


def find_sum(target, value_list):
    print(target, value_list)
    if target == [0, 0, 0]:
        return True
    while len(value_list) > 0:
        value = value_list.pop(0)
        gap = list_subtract(target, value)
        if min(gap) < 0:
            continue
        sorted_value_list = sorted(value_list, key=lambda x: min(list_subtract(gap, x)))
        for v in sorted_value_list:
            if min(list_subtract(gap, v)) < 0:
                sorted_value_list.remove(v)

        if find_sum(gap, sorted_value_list):
            return True

    return False


def main_function(desired, nutrient_list):
    min_gap_nutrient_list = sorted(nutrient_list, key=lambda x: min(list_subtract(desired, x)))
    for nutrient in min_gap_nutrient_list:
        if min(list_subtract(desired, nutrient)) < 0:
            min_gap_nutrient_list.remove(nutrient)

    return find_sum(desired, min_gap_nutrient_list)

#################################################33

#input read
input_file = open("input1.txt")
num_cases = int(input_file.readline())

#output write
output_file = open("output1.txt", 'w')

for i in range(num_cases):
    #read the inputs

    line = input_file.readline()
    desired = [int(x) for x in line.split()]

    line = input_file.readline()
    n = int(line)

    nutrient_list = list([])
    for j in range(n):
        line = input_file.readline()
        nutrients = [int(x) for x in line.split()]
        nutrient_list.append(nutrients)

    result = main_function(desired, nutrient_list)

    if result is True:
        output = "Case #%d: yes\n" %(i+1)
    else:
        output = "Case #%d: no\n" %(i+1)

    output_file.write(output)

    print(i+1)

input_file.close()
output_file.close()