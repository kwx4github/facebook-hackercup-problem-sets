import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.LineNumberReader;

/**
 *
 * @author Ashutosh Gupta
 */
public class NYRAshutosh {
    
    private static File f = new File("C:\\Users\\Ashu\\Desktop\\SolutionNYR.txt");
   
    public static void main(String[] args) throws IOException {
        FileReader fr = new FileReader("C:\\Users\\Ashu\\Downloads\\new_years_resolution_example_input.txt");
        LineNumberReader lnr = new LineNumberReader(fr);
        int t = Integer.parseInt(lnr.readLine().trim());
        FileWriter fw = new FileWriter(f);
        
        for (int i = 0; i < t; i++) {
            String str[] = lnr.readLine().trim().split(" ");
            int sum = add(Integer.parseInt(str[0]), Integer.parseInt(str[1]), Integer.parseInt(str[2]));
            int size = Integer.parseInt(lnr.readLine().trim());
            int arr[] = new int[size];
            for (int j = 0 ; j < size ; j++) {
                String str1[] = lnr.readLine().trim().split(" ");
                arr[j] = add(Integer.parseInt(str1[0]), Integer.parseInt(str1[1]), Integer.parseInt(str1[2]));
            }
            if (isSubsetSum(arr, arr.length, sum) == true) {
                fw.write("Case #" + (i + 1) + ": " + "yes\n");
            } else {
                fw.write("Case #" + (i + 1) + ": " + "no\n");
            }
        }
        fw.flush();
    }
    
    public static int add(int x, int y, int z) { return (x+y+z); }
    
    public static boolean isSubsetSum(int[] array, int n, int sum) {

        boolean subset[][] = new boolean[sum + 1][n + 1];

        for (int i = 0; i <= n; i++) {
            subset[0][i] = true;
        }

        for (int i = 1; i <= sum; i++) {
            subset[i][0] = false;
        }

        for (int i = 1; i <= sum; i++) {
            for (int j = 1; j <= n; j++) {
                subset[i][j] = subset[i][j - 1];
                if (i >= array[j - 1]) {
                    subset[i][j] = subset[i][j] || subset[i - array[j - 1]][j - 1];
                }
            }
        }
        return subset[sum][n];
    }
}