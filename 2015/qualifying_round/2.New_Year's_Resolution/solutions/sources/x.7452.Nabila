var	
	p, c, f: array[ 0..25 ] of longInt;
	vis: array[ 0..25 ] of boolean;
	found: boolean;
	n: longInt;

procedure backtrack( cur, gp, gc, gf: longInt; vis: array of boolean );

var i: longInt;

begin
	if not( vis[cur] ) then
	begin
		vis[cur] := true;
		if ( gp - p[cur] = 0 ) and ( gc - c[cur] = 0 ) and ( gf - f[cur] = 0 ) then
			found := true;
		if ( gp - p[cur] >= 0 ) and ( gc - c[cur] >= 0 ) and ( gf - f[cur] >= 0 ) then
			for i := cur + 1 to n do
				backtrack( i, gp - p[cur], gc - c[cur], gf - f[cur], vis )
		else
			for i := cur + 1 to n do
				backtrack( i, gp, gc, gf, vis );
	end;
end;

var	
	fin, fout: textFile;
	t, tc, gp, gc, gf, i: longInt;

begin
	assign( fin, 'new_years_resolution.txt' );
	assign( fout, 'new_years_resolution.out' );
	reset( fin );
	rewrite( fout ); 
	
	readln( fin, t );
	for tc := 1 to t do
	begin
		readln( fin, gp, gc, gf );
		readln( fin, n );
		fillChar( p, sizeOf( p ), 0 );
		fillChar( c, sizeOf( c ), 0 );
		fillChar( f, sizeOf( f ), 0 );
		fillChar( vis, sizeOf( vis ), false );
		for i := 1 to n do
			readln( fin, p[i], c[i], f[i] );
		found := false;
		backtrack( 1, gp, gc, gf, vis );
		write( fout, 'Case #', tc, ': ' );
		if found then
			writeln( fout, 'yes' )
		else 
			writeln( fout, 'no' );
	end;
	
	close( fin );
	close( fout );
end.