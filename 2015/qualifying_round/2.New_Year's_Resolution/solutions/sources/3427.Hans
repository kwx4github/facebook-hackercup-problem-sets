#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) begin(c), end(c)
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for(auto i = begin(c); i != end(c); i++)
#define mp make_pair
#define pb push_back
#define has(c,i) ((c).find(i) != (c).end())
#define DBG(...) ({ if(1) fprintf(stderr, __VA_ARGS__); })
#define DBGDO(X) ({ if(1) cerr << "DBGDO: " << (#X) << " = " << (X) << endl; })

int TC, N;
int GP, GC, GF;
int P[32], C[32], F[32];
int p, c, f;

int main() {
	ios::sync_with_stdio(false);
	cin >> TC;
	FOR(tc, 1, TC+1) {
		cin >> GP >> GC >> GF;
		cin >> N;
		assert(N < 24);

		FOR(i,0,N)
			cin >> P[i] >> C[i] >> F[i];

		bool result = false;
		FOR(bm, 0, 1<<N) {
			p = c = f = 0;
			FOR(i,0,N) if (bm & (1 << i)) {
				p += P[i];
				c += C[i];
				f += F[i];
			}
			if (GP == p && GC == c && GF == f) {
				result = true;
				break;
			}
		}

		printf("Case #%d: %s\n", tc, result ? "yes" : "no");
	}
}
