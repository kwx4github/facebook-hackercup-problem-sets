//
//  main.cpp
//  FacebookHackerCup
//
//  Created by Varun Varadarajan on 1/11/15.
//  Copyright (c) 2015 Varun Varadarajan. All rights reserved.
//

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool isSubsetSum(vector<int> proteins, vector<int> carbs, vector<int> fat, int n, int sum1, int sum2, int sum3)
{
    // Base Cases
    if (!sum1 && !sum2 && !sum3)
        return true;
    if (n == 0 && (sum1 != 0 || sum2 != 0 || sum3 != 0))
        return false;
    
    // If last element is greater than sum, then ignore it
    if (proteins[n-1] > sum1 || carbs[n-1] > sum2 || fat[n-1] > sum3)
        return isSubsetSum(proteins, carbs, fat, n-1, sum1, sum2, sum3);
    
    /* else, check if sum can be obtained by any of the following
     (a) including the last element
     (b) excluding the last element   */
    return isSubsetSum(proteins, carbs, fat, n-1, sum1, sum2, sum3) || isSubsetSum(proteins, carbs, fat, n-1, sum1-proteins[n-1], sum2-carbs[n-1], sum3-fat[n-1]);
}

int main()
{
    int T, i;
    cin>>T;
    for(i=1; i<=T; i++)
    {
        int Gp, Gc, Gf, N;
        vector<int> P,C,F;
        cin>>Gp>>Gc>>Gf>>N;
        for(int j=0; j<N; j++)
        {
            int x,y,z;
            cin>>x>>y>>z;
            P.push_back(x);
            C.push_back(y);
            F.push_back(z);
        }
        if (isSubsetSum(P, C, F, N, Gp, Gc, Gf))
        {
            cout<<"Case #"<<i<<": yes"<<endl;
        }
        else
        {
            cout<<"Case #"<<i<<": no"<<endl;
        }
    }
    return 0;
}