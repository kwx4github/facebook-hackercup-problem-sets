#include<iostream>
#include<map>
#include<string>
#include<string.h>
#include<vector>
#include<stdio.h>
#include <cstdio>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <sstream>
#include <cmath>
#include <bitset>
#include <limits.h>
#include <limits>
#include <utility>
#include <set>
#include <numeric>
#include <functional>
#define all(v) v.begin(),v.end()
#define R(i) freopen(i,"r",stdin)
#define W(i) freopen(i,"w",stdout)
#define R_W R("i.txt"),W("o.txt");
#define FOR(i,f,t) for(int i=f;i<t;i++)
#define r(e) for(int i=0;i<e;i++)
#define inf numeric_limits<int>::max()
#define minf numeric_limits<int>::min()
#define DFS_WHITE -1
#define DFS_BLACK 1
using namespace std;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
vector< vi > AdjList;
int data[25][3];
int main(){
	R_W;
	int t;
	cin >> t;
	int cases=1;
	while (t--)
	{
		int n;
		int a, b, c;
		cin >> a >> b >> c;
		cin >> n;
		r(n)
		{
			cin >> data[i][0] >> data[i][1] >> data[i][2];
		}
		int end = (1 << n);
		bool found = false;
		for (int i = 0; i < end; i++)
		{
			int x=0, y=0, z=0;
			for (int j = 0; j < n; j++){
				if ((i&(1 << j)) != 0)
				{
					x += data[j][0];
					y += data[j][1];
					z += data[j][2];
				}
			}
			if (x == a && y == b && z == c){
				found = true;
				break;
			}
		}
		if (found){
			printf("Case #%d: yes\n",cases++);
		}
		else{
			printf("Case #%d: no\n", cases++);
		}
	}
	return 0;
}