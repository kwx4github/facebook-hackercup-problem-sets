#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <cstring>

using namespace std;

#define mp make_pair
#define pp push_back
#define Sort(x) sort(x.begin(), x.end())
#define rep(i, x, y) for(int i = x; i < y; ++i)
#define Rep(i, x, y) for(int i = x; i <= y; ++i)
#define dRep(i, x, y) for(int i = x;i >= y; --i)
#define vi vector<int>
#define vvi vector<vector<int> >
#define ll long long
#define all(v) v.begin(),v.end()
#define ii pair<int, int>
#define mem(x, v) memset(x, v, sizeof(x))
#define nl '\n'
#define MOD 1000000007
#define readFile(fileName) freopen(fileName, "r", stdin)
#define writeFile(fileName) freopen(fileName, "w",stdout)

int P[100], C[100], F[100];
int n;
bool found;
void solve(int index, int p, int c, int f)
{
	if(!p && !c && !f)
		found = 1;

	if(index == n)
	{
		return;
	}

	

	if(found)
		return;
	
	solve(index + 1, p, c, f);
	solve(index + 1, p - P[index], c - C[index], f - F[index]);
}

int main()
{
	int t;
	readFile("new_years_resolution.txt");
	writeFile("new_years_resolution_output.txt");
	cin >> t;
	int p, c, f;
	Rep(i, 1, t)
	{
		cin >> p >> c >> f;
		cin >> n;
		rep(j, 0, n)
		{
			cin >> P[j] >> C[j] >> F[j];
		}
		found = 0;
		solve(0, p, c, f);
		cout << "Case #" << i << ": ";
		if(found)
			cout << "yes" << nl;
		else
			cout << "no" << nl;

	}


	return 0;
}