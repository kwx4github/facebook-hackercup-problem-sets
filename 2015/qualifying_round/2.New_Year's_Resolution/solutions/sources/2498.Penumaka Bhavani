#include <iostream>
#include <set>
#include <utility>
using namespace std;
pair < int , pair <int,int> > p1[22];
set < pair <int, pair <int, pair <int, int> > > > s1;
int N;

		int	GP, GC, GF;
bool func(int i, int p, int c, int f) {
	if ( s1.find (make_pair(i,make_pair(p,make_pair(c,f))) ) != s1.end() )
		return false;
	if ( GP == p && c == GC && GF == f ) {
		return true;
	}
	if ( p > GP || c > GC || f > GF ) 
		return false;
	if ( i == N ) {
		return false;
	}
	if ( func(i+1,p+p1[i].first,c+p1[i].second.first,f+p1[i].second.second) ) {
		return true;
	}
	else if ( func(i+1,p,c,f) ) {
		return true;
	}
	s1.insert(make_pair(i,make_pair(p,make_pair(c,f))));
	return false;
}
int main() {
	int T;
	cin >> T;
	for ( int i = 0 ; i < T; i++ ) {
		cin >> GP >> GC >> GF;
		s1.clear();		
		cin >> N;
		for ( int j = 0 ; j < N; j++ ) {
			int P, C, F;
			cin >> P >> C>> F; 
			p1[j].first = P;
			p1[j].second.first = C;
			p1[j].second.second = F;
		}
		cout << "Case #"<<(i+1)<<": ";
		if ( func(0,0,0,0) ) cout << "yes" <<endl;
		else cout << "no" << endl;
	}
}
