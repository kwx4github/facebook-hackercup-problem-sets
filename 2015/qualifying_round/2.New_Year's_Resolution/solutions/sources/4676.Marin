import java.util.*;
import java.io.*;

public class Main {
  
  public static void main(String[] args) throws IOException {
    
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int T = Integer.parseInt(br.readLine());
    
    for (int i = 0; i < T; i++) {
      String[] pcf = br.readLine().split(" ");
      int Gp = Integer.parseInt(pcf[0]);
      int Gc = Integer.parseInt(pcf[1]);
      int Gf = Integer.parseInt(pcf[2]);
      int N = Integer.parseInt(br.readLine());
      int gp[] = new int[N];
      int gc[] = new int[N];
      int gf[] = new int[N];
      for (int j = 0; j < N; j++) {
        String[] currPcf = br.readLine().split(" ");
        int p = Integer.parseInt(currPcf[0]);
        int c = Integer.parseInt(currPcf[1]);
        int f = Integer.parseInt(currPcf[2]);
        gp[j] = p;
        gc[j] = c;
        gf[j] = f;
      }
      String poss = possible(N, Gp, Gc, Gf, gp, gc, gf);
      System.out.println("Case #" + (i + 1) + ": " + poss);
    }
  }
  
  private static String possible(int N, int Gp, int Gc, int Gf, 
                                 int[] gp, int[] gc, int[] gf) {
    
    String ret = "no";
    int M = 1;
    for (int i = 1; i <= N; i++) M *= 2;
    
    for (int i = 0; i < M; i++) {
      int sumP = 0;
      int sumC = 0;
      int sumF = 0;
      boolean b = false;
      for (int k = 0; k < N; k++) {
        if (((1 << k) & i)!= 0) {
          sumP += gp[k];
          sumC += gc[k];
          sumF += gf[k];
          if (sumP > Gp || sumC > Gc || sumF > Gf) {
            b = true;
            break;
          }  
        }
      }
      if (!b && sumP == Gp && sumC == Gc && sumF == Gf) {
        ret = "yes";
        break;
      }
    }
    return ret;
  }
  
}