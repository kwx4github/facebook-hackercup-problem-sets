#include<iostream>
#include<fstream>
#include<vector>
#include<set>
using namespace std;

bool exact_sum( int P_calories[], int C_calories[], int F_calories[], int n, int sum1, int sum2, int sum3)
{
	if( sum1 == 0 && sum2 == 0 && sum3 == 0)
		return true;
	if( n == 0 && (sum1 != 0 || sum2 != 0 || sum3 != 0) )
		return false;

	if( P_calories[n-1] > sum1 || C_calories[n-1] > sum2 || F_calories[n-1] > sum3 )
		return exact_sum( P_calories, C_calories, F_calories, n-1, sum1, sum2, sum3);

	return exact_sum( P_calories, C_calories, F_calories, n-1, sum1, sum2, sum3)\
	|| exact_sum( P_calories, C_calories, F_calories, n-1, sum1- P_calories[n-1], sum2- C_calories[n-1], sum3 - F_calories[n-1]);
}

int main()
{
	ifstream input;
	input.open("new_years_resolution.txt");
	ofstream output;
	output.open("output.txt");
	int time = 0;
	input >> time;
	for(int i = 0; i != time; i++ )
	{
		int require_calories[3];
		for(int j = 0; j != 3; j++ )
			input >> require_calories[j];
		int food_num = 0;
		input >> food_num;

		int P_calories[20];
		int C_calories[20];
		int F_calories[20];
		for( int j = 0; j!= food_num; j++ )
		{
			input >> P_calories[j];
			input >> C_calories[j];
			input >> F_calories[j];
		}
		bool exact = exact_sum(P_calories, C_calories, F_calories, 20, require_calories[0], require_calories[1], require_calories[2] );
		if(exact == true)
			output << "Case #" << i+1 << ": yes" << endl;
		else
			output << "Case #" << i+1 << ": no" << endl;
	}
}