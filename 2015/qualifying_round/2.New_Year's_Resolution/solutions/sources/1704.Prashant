/*
Prashant Gupta(GHOST_YO)
IIITA
*/
/*
start of libraries to be included in the program
*/
#include <cmath>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cstdio>
#include <set>
#include <queue>
#include <map>
#include <string>
#include <cstring>
#include <ctime>
#include <stack>
/*
end of libraries to be included in the program
*/
using namespace std;
/*
start of MACRO definition
*/
#define For(i,a,b) for(i=a;i<=b;i++)
#define Ford(i,a,b) for(i=a;i>=b;i--)
#define Rep(i,c) for((type of c.begin()) i;i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sr(x) (int)x.size()
#define modul 1000000007
#define nmax 500100
#define BUG(x) {cout << #x << " = " << x << endl;}
#define PR(x,a,b) {cout << #x << " = "; For(i,a,b) cout << x[i] << ' '; cout << endl;}
#define fillchar(x,a,b,delta) For(_,a,b) x[_]=delta;
#define Bit(s,i) ((s&(1<<i))>0)
#define Two(x) (1<<x)
#define pii pair<int,int>
#define ll long long
#define e 1e-6
#define PI acos(-1)
#define piii pair < pii ,int >
#define make(a,b,c) mp(mp(a,b),c)
/*
end of MACRO definition
*/
int main()
{
    ll t,n,m,i,j,k,l,ans,count,temp,sump, sumc, sumf, flag, p, c, f;

    FILE *fi = fopen("in.txt", "r");
    FILE *fo = fopen("out.txt", "w");

    fscanf(fi, "%lld", &t);

    For(k, 0, t - 1) {
        fscanf(fi, "%lld %lld %lld %lld", &p, &c, &f, &n);

        ll pp[n], cc[n], ff[n];

        For(i, 0, n - 1) {
            fscanf(fi, "%lld %lld %lld", &pp[i], &cc[i], &ff[i]);
        }

        ll power = 1;
        For(i, 0, n - 1) {
            power *= 2;
        }

        flag = 0;
        For(i, 1, power - 1) {
            sump = sumc = sumf = 0;

            For(j, 0, n - 1) {
                if(i & ((ll)1 << j)) {
                    sump += pp[j];
                    sumc += cc[j];
                    sumf += ff[j];
                }
            }

            if(sump == p && sumc == c && sumf == f) {
                flag = 1;
                break;
            }
        }

        if(flag) {
            fprintf(fo, "Case #%lld: yes\n", k + 1);
        }
        else {
            fprintf(fo, "Case #%lld: no\n", k + 1);
        }
    }
    return 0;
}
