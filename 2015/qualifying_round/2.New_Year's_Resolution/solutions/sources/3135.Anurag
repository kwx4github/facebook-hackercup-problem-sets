#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <iomanip>
#include <string>
using namespace std;

bool ans(int n, int current, int gp[], int gc[], int gf[], int p, int c, int f) {
	if (p == 0 && c == 0 && f == 0) return true;
	if (p < 0 || c < 0 || f < 0 || current == n) return false;
	return (ans(n, current+1, gp, gc, gf, p, c, f) || ans(n, current+1, gp, gc, gf, p-gp[current], c-gc[current], f-gf[current]));
}

int main(void)
{
	int t;
	cin >> t;
	for (int _t = 1; _t <= t; _t++) {
		int p,c,f;
		cin >> p >> c >> f;
		int n;
		cin >> n;
		int gp[n], gc[n], gf[n];
		for (int i = 0;i < n; i++) cin >> gp[i] >> gc[i] >> gf[i];
		bool possible = ans(n, 0, gp, gc, gf, p, c, f);
		if (possible) cout << "Case #" << _t << ": yes" << endl;
		else cout << "Case #" << _t << ": no" << endl;
	}
	return 0;
}

