import java.util.*;
import java.io.*;
public class resol{
public static boolean pudo = true;
public static int cant[][];
public static int dp[][][] = new int[1001][1001][50];
public static int si[][][] = new int[1001][1001][50];
public static void main(String args[]) throws IOException{
BufferedReader lector = new BufferedReader(new InputStreamReader(System.in));
int c = Integer.parseInt(lector.readLine());
for(int cc = 1;cc<=c;cc++){
String t[] = lector.readLine().split(" ");
int r[]= new int[3];
for(int m =0;m<3;m++)
r[m]=Integer.parseInt(t[m]);
int a = Integer.parseInt(lector.readLine());
cant = new int[a][3];
for(int n = 0;n<a;n++){
String tt[] = lector.readLine().split(" ");
for(int m =0;m<3;m++)
cant[n][m]=Integer.parseInt(tt[m]);
}
pudo = hagale(r[0],r[1],r[2]);
System.out.println("Case #"+cc+": "+(pudo?"yes":"no"));
}
}
public static boolean hagale(int a,int b,int c){
if(a<0 || b<0 || c<0)return false;
if(a==0 && c==0 && b==0)return true;
if((si[a][b][c/20]&(1<<(c%20)))!=0)return (dp[a][b][c/20]&(1<<c%20))==1;
boolean t = false;
for(int n =0;n<cant.length;n++)
t|=hagale(a-cant[n][0],b-cant[n][1],c-cant[n][2]);
dp[a][b][c/20] |= t?(1<<c%20):0;
return t;
}
}

