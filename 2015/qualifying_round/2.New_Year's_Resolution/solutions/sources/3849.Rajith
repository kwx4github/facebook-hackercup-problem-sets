/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package fun;

/**
 *
 * @author Raj90 
 */
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.FilterWriter;
import java.io.PrintWriter;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
public class HackerCup_A {
    static BufferedReader in;
    static PrintWriter out;
    static StringTokenizer stk;

    public static void main(String[] args) throws Exception {
        //in = new BufferedReader(new InputStreamReader(System.in));
        in = new BufferedReader(new FileReader("B.txt"));
        out = new PrintWriter(new FileWriter("B_ans.txt"));
        stk = new StringTokenizer(in.readLine());
        int i,j,k,l,m,n,t,a[],b[],c[],p;
        //System.out.println(Integer.toBinaryString(9));
        t=ni();
        
        
        for(i=1;i<=t;i++){
            k=ni();l=ni();m=ni();
            boolean f=false;
            n=ni();
            System.out.println("////////////////n = "+i);
            a=new int[n];b=new int[n];c=new int[n];
            for(j=0;j<n;j++){
                a[j]=ni();
                b[j]=ni();
                c[j]=ni();
                //System.out.println(a[j]);
            }
            int limit=(int)Math.pow(2.0, n);
            
            for(j=1;j<limit;j++){
               String s= Integer.toBinaryString(j);
               int suma=0,sumb=0,sumc=0;
               int x=0;
                //System.out.println(s);
               for(p=s.length()-1;p>=0;p--){
                   if(s.charAt(p)=='1'){
                       //System.out.println(n+" "+x);
                       suma+=a[n-1-x];
                       sumb+=b[n-1-x];
                       sumc+=c[n-1-x];
                       
                   }
                   x++;
               }
               if(suma==k&&sumb==l&&sumc==m){
                   f=true;
                   out.println("Case #"+i+": yes");
                   break;
               }
            }
            if(!f)
                out.println("Case #"+i+": no");
        }
        out.flush();
        out.close();
        in.close();
}
static void printf(String format, Object... args) {
        System.out.printf(format, args);
        out.printf(format, args);
    }

    static int ni() throws Exception {
        while (!stk.hasMoreTokens()) {
            stk = new StringTokenizer(in.readLine());
        }
        return Integer.parseInt(stk.nextToken());
    }

    static long nl() throws Exception {
        while (!stk.hasMoreTokens()) {
            stk = new StringTokenizer(in.readLine());
        }
        return Long.parseLong(stk.nextToken());
    }

    static double nd() throws Exception {
        while (!stk.hasMoreTokens()) {
            stk = new StringTokenizer(in.readLine());
        }
        return Double.parseDouble(stk.nextToken());
    }

    static String ns() throws Exception {
        while (!stk.hasMoreTokens()) {
            stk = new StringTokenizer(in.readLine());
        }
        return stk.nextToken();
    }

    static int min(int a, int b) {
        return a < b ? a : b;
    }

    static int max(int a, int b) {
        return a > b ? a : b;
    }

    static long min(long a, long b) {
        return a < b ? a : b;
    }

    static long max(long a, long b) {
        return a > b ? a : b;
    }

    static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }

    static long gcd(long a, long b) {
        if (b == 0) {
            return a;
        }
        return gcd(b, a % b);
    }
}


