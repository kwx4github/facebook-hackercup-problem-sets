#include <bits/stdc++.h>
using namespace std;

#define iota(i,n,b,s) for(int i=int(b);i!=int((b)+(s)*(n));i+=(s))
#define range(i,n,m) iota(i,(((n)>(m))?((n)-(m)):((m)-(n))),(n),((n)>(m)?-1:1))
#define rep(i,n) iota(i,(n),0,1)
#define loop for(;;)

#define INF (1e9)
#define EPS (1e-9)
#define cons(a,b) (make_pair(a,b))
#define car(a) (a.first)
#define cdr(a) (a.second)
#define cadr(a) (car(cdr(a)))
#define cddr(a) (cdr(cdr(a)))
#define all(a) a.begin(), a.end()
#define trace(var) cerr<<">>> "<<#var<<" = "<<var<<endl;

typedef long long Integer;
typedef double Real;
typedef vector<int> vi;
typedef vector<string> vs;
typedef map<string,int> Dictionary;
const Real PI = acos(-1);

template<class S, class T>
ostream& operator<<(ostream& os, pair<S,T> p) {
  os << '(' << car(p) << ", " << cdr(p) << ')';
  return os;
}

template<class T>
ostream& operator<<(ostream& os, vector<T> v) {
  if (v.size() == 0) {
    os << "(empty)";
    return os;
  }
  os << v[0];
  for (int i=1, len=v.size(); i<len; ++i) os << ' ' << v[i];
  return os;
}

int dx[] = { -1, 0, 1, 0 };
int dy[] = {  0, -1, 0, 1 };

const int M = 1002;
vector<vector<int>> memo[M][M]; // DP of (a, b)

int main() {

  int n; cin >> n;
  rep (_, n) {
    cout << "Case #" << (_ + 1) << ": ";
    int a, b, c; cin >> a >> b >> c;

    rep (i, M) {
      rep (j, M) {
        memo[i][j] = {};
      }
    }
    memo[0][0] = {{}};

    vector<int> xs;
    vector<int> ys;
    vector<int> zs;

    int m; cin >> m;
    rep (_, m) {
      int x, y, z; cin >> x >> y >> z;
      xs.push_back(x);
      ys.push_back(y);
      zs.push_back(z);
    }

    // DP
    rep (_, m) {
      int x = xs[_];
      int y = ys[_];
      for (int i = a + 2; i >= x; --i) {
        for (int j = b + 2; j >= y; --j) {
          if (memo[i - x][j - y].size() == 0) continue;
          for (auto is : memo[i - x][j - y]) {
            is.push_back(_);
            memo[i][j].push_back(is);
          }
        }
      }
    }

    if (memo[a][b].size() == 0) {
      cout << "no" << endl;
      goto more;
    }

    for (vector<int>&is : memo[a][b]) {
      int sum = 0;
      for (int i : is) {
        sum += zs[i];
      }
      if (sum == c) {
        cout << "yes" << endl;
        goto more;
      }
    }
    cout << "no" << endl;
more:;


  }
  return 0;
}
