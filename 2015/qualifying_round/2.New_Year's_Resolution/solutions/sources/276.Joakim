#include <map>
#include <set>
#include <stack>
#include <queue>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <climits>
#include <sstream>
#include <cstdlib>
#include <fstream>
#include <iostream>
#include <algorithm>
using namespace std;
#define FOR(it,st,en) for(int it=(st);it<(int)(en);++it)
#define REP(it,en) FOR(it,0,en)
#define ITE(it,c) for(auto it=(c).begin();it!=(c).end();++it)
#define ALLOF(c) (c).begin(), (c).end()
#define PB push_back
#define MP make_pair
#define X first
#define Y second
typedef long long int LL; 
typedef long double LD;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;
const int INF=(int)1e9; 
const double EPS=(LD)1e-7;

VI P,C,F;
int Gp,Gc,Gf;
int N;

bool rec(int p){
	if(Gp==0 && Gc==0 && Gf==0)return true;
	if(Gp<0 || Gc<0 || Gf<0) return false;
	if(p==N)return false;
	if(rec(p+1))return true;
	Gp-=P[p];
	Gc-=C[p];
	Gf-=F[p];
	if(rec(p+1))return true;
	Gp+=P[p];
	Gc+=C[p];
	Gf+=F[p];
	return false;
}

string solve(){
	cin>>Gp>>Gc>>Gf;
	cin>>N;
	P.assign(N,0);
	C.assign(N,0);
	F.assign(N,0);
	REP(i,N)cin>>P[i]>>C[i]>>F[i];
	if(rec(0))return "yes";
	else return "no";
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int T;
    cin>>T;
    REP(i,T){
    	cout<<"Case #"<<i+1<<": "<<solve()<<endl;
    }
	return 0;
}