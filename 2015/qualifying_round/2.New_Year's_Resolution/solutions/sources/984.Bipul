import java.util.Scanner;
class Food{
	private int p,c,f;
	void set(int p,int c,int f){
		this.p = p;
		this.c = c;
		this.f = f;
	}
	boolean isEqual(Food a){
		if(p==a.p && c==a.c && f==a.f)
			return true;
		return false;
	}
	boolean isGreater(Food a){
		if(p>a.p || c>a.c || f>a.f)
			return true;
		return false;
	}
	void add(Food a){
		p+=a.p;
		c+=a.c;
		f+=a.f;
	}
	void subtract(Food a){
		p-=a.p;
		c-=a.c;
		f-=a.f;
	}
}
public class Diet{
	public static boolean testFood(Food need,Food F[],int N){
		Food total = new Food();
		return check(need,F,N,0,total);
	}
	public static boolean check(Food need,Food F[],int N,int n,Food total){
		if(total.isEqual(need))
			return true;
		if(n>=N)
			return false;
		total.add(F[n]);
		if(total.isGreater(need) || !check(need,F,N,n+1,total)){
			total.subtract(F[n]);
			return check(need,F,N,n+1,total);
		}
		else
			return true;
	}
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		int N;
		Food need = new Food();
		Food F[] = new Food[20];
		for(int i=0; i<20; i++)
			F[i] = new Food();
		for(int t=1; t<=T; t++){
			need.set(sc.nextInt(),sc.nextInt(),sc.nextInt());
			N = sc.nextInt();
			int n=0;
			while(n<N){
				F[n].set(sc.nextInt(),sc.nextInt(),sc.nextInt());
				if(F[n].isGreater(need))
					N--;
				else
					n++;
			}
			Boolean canEat = false;
			for(n=0; n<N; n++)
				if(F[n].isEqual(need)){
					canEat = true;
					break;
				}
			if(canEat || testFood(need,F,N))
				System.out.println("Case #"+t+": yes");
			else
				System.out.println("Case #"+t+": no");
		}
	}
}