/*
Programming competition file template
Made by Horatiu Lazu
*/
import java.io.*;
import java.util.*;
import java.lang.*;
import java.awt.*;

class Problem{
	public static void main (String [] args){
		new Problem();
	}
	
	boolean [] cases = new boolean[100];
	
 void combinations2(int [] [] arr, int len, int startPosition, int[] [] result, int p, int c, int f, int test){
	        if (len == 0){
					 int ps = 0;
					 int cs = 0;
					 int fs = 0;
					 for(int i =0;i < result.length; i++){
						ps += result[i][0];
						cs += result[i][1];
						fs += result[i][2];
					 }
	            if (ps == p && c == cs && f == fs)
						cases[test] = true;
	            return;
	        }       
	        for (int i = startPosition; i <= arr.length-len; i++){
	            result[result.length - len][0] = arr[i][0];
					 result[result.length - len][1] = arr[i][1];
					 result[result.length - len][2] = arr[i][2];
	            combinations2(arr, len-1, i+1, result, p, c, f, test);
	        }
	    }       
	

	public Problem(){
		try{
			BufferedReader in;
			in = new BufferedReader (new InputStreamReader (System.in)); //Used for CCC
			//in = new BufferedReader(new FileReader("A.in")); //Used for JDCC & others
			
			PrintWriter out = new PrintWriter(new FileWriter("answers2.txt"));
			int testCases = Integer.parseInt(in.readLine());
			for(int qq = 0; qq < testCases; qq++){
				StringTokenizer st = new StringTokenizer (in.readLine()); 
				int p = Integer.parseInt(st.nextToken());
				int c = Integer.parseInt(st.nextToken());
				int f = Integer.parseInt(st.nextToken());
				int foods = Integer.parseInt(in.readLine());
				int [] [] info = new int [foods][3];
				for(int i =0; i < foods; i++){
					st = new StringTokenizer(in.readLine());					info[i][0] = Integer.parseInt(st.nextToken());
					info[i][1] = Integer.parseInt(st.nextToken());
					info[i][2] = Integer.parseInt(st.nextToken());
				}
				for(int i =0; i <= info.length; i++){
					combinations2(info, i, 0, new int[i][3], p, c, f, qq);	
				}
				
			}
			for(int i =0; i < testCases; i++){
				out.println("Case #" + (i + 1) + " " + ((cases[i] == false) ? ("no") : ("yes")) + "");	
			}
			//String[] arr = {"A","B","C","D","E","F"};
			//combinations2(arr, 3, 0, new String[3]);
			
			out.close();
			
		}
		catch(IOException e){
			System.out.println("IO: General");
		}
	}
}