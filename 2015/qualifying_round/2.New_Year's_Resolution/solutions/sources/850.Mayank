#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<map>
#include<stdlib.h>
#include<algorithm>
#include<limits.h>
#include<stack>
#include<deque>
#include<set>

using namespace std;

#define i_n(a) scanf("%d",&a)
#define l_n(a) scanf("%I64d",&a)
#define LL long long int
#define pb(a) push_back(a)
#define pp pair<int,int>
#define vv vector<int>
#define vvp vector<pp>
#define i_p(a) printf("%d\n",a)
#define l_p(a) printf("%I64d\n",a)
#define pnt(expr) printf(#expr"\n")
#define reset(a,val) memset(a,val,sizeof(a))
#define m1 10000000000
#define mod 1000000007
#define pr(cn,x) ((cn).find(x)!=(cn).end())
#define tr(cn,it) for(typeof((cn).begin()) it=(cn).begin();it!=(cn).end();it++)
#define read() freopen("B.txt","r",stdin)
#define write() freopen("Bans.txt","w",stdout)
bool cmp(const pair<int, int>& p1, const pair<int, int>& p2)
{
    return p1.first < p2.first;
}
int sol(string a)
{
    int ans=0;
    int l;
    l=a.size();
    for(int i=0;i<l;i++)
    {
        ans*=10;
        ans+=a[i]-'0';
    }
    return ans;

}
struct node
{
    int x;
    int y;
    int z;
};
int main()
{
//    read();
  //  write();
int t;
i_n(t);
for(int x=1;x<=t;x++)
{
    int a,b,c;
    i_n(a);i_n(b);i_n(c);
    node in[25];
    int n;
    i_n(n);
    for(int i=0;i<n;i++)
    {
        i_n(in[i].x);
        i_n(in[i].y);
        i_n(in[i].z);
    }
    int flag=0;
    for(int i=0;i<(1<<n);i++)
    {
        int ans_a=0,ans_b=0,ans_c=0;
        for(int j=0;j<n;j++)
        {
            if(i&(1<<j))
            {
                ans_a+=in[j].x;
                ans_b+=in[j].y;
                ans_c+=in[j].z;
            }
        }
        if(ans_a==a&&ans_b==b&&ans_c==c)
        {
            flag=1;
            break;
        }
    }
    if(flag)
        printf("Case #%d: yes\n",x);
    else
        printf("Case #%d: no\n",x);
}
  return 0;
}
