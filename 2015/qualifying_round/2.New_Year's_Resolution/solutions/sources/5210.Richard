#include<set>
#include<map>
#include<list>
#include<cmath>
#include<queue>
#include<stack>
#include<ctime>
#include<cstdio>
#include<string>
#include<vector>
#include<climits>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#include <unordered_set>
#include <unordered_map>
using namespace std;
const int maxn = 1e5 + 10;
typedef long long LL;
typedef unsigned long long ULL;
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define mp make_pair
#define pb push_back
#define CLR(a,x) memset(a,x,sizeof(a))

struct Node
{
    int P, C, F;
};
Node num[1000];
int n;
int Gp, Gc, Gf;
vector<int> cur;
bool dfs(int i, int sum)
{
    if(sum==0)
    {
        int sumc=0, sumf=0;
        for(auto i: cur) sumc+=num[i].C, sumf+=num[i].F;
        return sumc==Gc && sumf==Gf;
    }
    else if(sum<0 || i>=n) return 0;
    if(dfs(i+1, sum)) return 1;
    cur.push_back(i);
    if(dfs(i+1, sum-num[i].P)) return 1;
    cur.pop_back();
    return 0;
}

int main()
{
    int t;
    freopen("new_years_resolution.txt","r",stdin);freopen("new_years_resolution_out.txt","w",stdout);
    cin>>t;
    for(int ci=1;ci<=t;ci++)
    {
        cin>>Gp>>Gc>>Gf;
        cin>>n;
        for(int i=0;i<n;i++) cin>>num[i].P>>num[i].C>>num[i].F;
        cur.clear();
        cout<<"Case #"<<ci<<": ";
        puts(dfs(0, Gp)?"yes":"no");
    }
	return 0;
}
