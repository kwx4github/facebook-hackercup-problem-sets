import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

/**
 * Created by jordanly on 1/8/15.
 */
public class New_Resolutions {
    public static void main(String[] args) throws FileNotFoundException {
        Scanner in = new Scanner(new File("input.txt"));
        int numTests = in.nextInt();
        for (int i = 0; i < numTests; i++) {
            System.out.print("Case #" + (i + 1) + ": ");
            int goalP = in.nextInt();
            int goalC = in.nextInt();
            int goalF = in.nextInt();

            int numFoods = in.nextInt();
            int[] foodP = new int[numFoods];
            int[] foodC = new int[numFoods];
            int[] foodF = new int[numFoods];
            for (int j = 0; j < numFoods; j++) {
                foodP[j] = in.nextInt();
                foodC[j] = in.nextInt();
                foodF[j] = in.nextInt();
            }

            boolean canSolve = solve(0, 0, 0,
                    goalP, goalC, goalF,
                    foodP, foodC, foodF,
                    0);
            if (canSolve) {
                System.out.print("yes");
            } else {
                System.out.print("no");
            }

            System.out.println();
        }
    }

    public static boolean solve(int p, int c, int f,
                                int gp, int gc, int gf,
                                int[] fp, int[] fc, int[] ff,
                                int index) {
        if (p == gp && c == gc && f == gf) {
            return true;
        }
        if (p > gp || c > gc || f > gf) {
            return false;
        }

        while (index < fp.length) {
            int newP = p + fp[index];
            int newC = c + fc[index];
            int newF = f + ff[index];
            if (solve(newP, newC, newF, gp, gc, gf, fp, fc, ff, index + 1) ||
                    solve(p, c, f, gp, gc, gf, fp, fc, ff, index + 1)) {
                return true;
            }
            index++;
        }

        return false;
    }
}
