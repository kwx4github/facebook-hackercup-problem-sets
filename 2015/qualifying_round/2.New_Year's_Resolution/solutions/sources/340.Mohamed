#include <algorithm>
#include <assert.h>
#include <climits>
#include <cstring>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <list>
#include <cmath>
#include <fstream>
#include <iostream>
#include <sstream>
#include <numeric>
#include <limits>
#include <iomanip>
using namespace std;

#define sz(a) ((int)a.size())
#define all(a) a.begin(), a.end()
#define LL long long
#define LD long double
#define vi vector<int>
#define vl vector<LL>
#define vs vector<string>
#define vb vector<bool>
#define ii pair<int, int>
#define vii vector<ii>
#define SET(v, i) (v | (1 << i))
#define TEST(v, i) (v & (1 << i))
#define TOGGLE(v, i) (v ^ (1 << i))

bool Solve(const vi& p, const vi& c, const vi& f,
           int gp, int gc, int gf, int ind) {
  int n = sz(p);
  if (!gp && !gc && !gf) return true;
  if (ind >= n) return false;

  return
      Solve(p, c, f, gp - p[ind], gc - c[ind], gf - f[ind], ind + 1) ||
      Solve(p, c, f, gp, gc, gf, ind + 1);
}

int main() {
  int t;
  cin >> t;
  for (int test = 1; test <= t; ++test) {
    int gp, gc, gf;
    cin >> gp >> gc >> gf;
    int n;
    cin >> n;
    vi p(n), c(n), f(n);
    for (int i = 0; i < n; ++i)
      cin >> p[i] >> c[i] >> f[i];

    printf("Case #%d: %s\n", test, (Solve(p, c, f, gp, gc, gf, 0) ? "yes" : "no"));
  }
  return 0;
}
