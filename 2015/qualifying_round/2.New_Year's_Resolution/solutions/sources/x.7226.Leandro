""" New Year's Resolution

Input
    Input begins with an integer T, the number of test cases. For each test case,
    the first line consists of three space-separated integers: GP, GC, and GF, 
    which represent the amount of protein, carbohydrates, and fat that Alex wants
    to eat. The next line has the number of foods for that test case, an integer
    N. The next N lines each consist of three space-separated integers: P, C, and
    F, which represent the amount of protein, carbohydrates, and fat in that food,
    respectively.

Output
    For each test case i, print a line containing "Case #i: " followed by either
    "yes" if it is possible for Alex to eat the exact amount of each macronutrient,
    or "no" if it is not possible.

Constraints
    1 ≤ T ≤ 20 
    1 ≤ N ≤ 20 
    10 ≤ GP, GC, GF ≤ 1000 
    10 ≤ P, C, F ≤ 1000 
"""

def isSubsetSum(set_, n, sum_):
    if (sum_ == 0):
        return True
    if (n == 0 and sum_ != 0):
        return False

    if (set_[n-1] > sum_):
        return isSubsetSum(set_, n-1, sum_);

    return isSubsetSum(set_, n-1, sum_) or isSubsetSum(set_, n-1, sum_-set_[n-1]);


T = 0 # Test cases
N = 0 # Number of foods
i = 1

## One line [GP, GC GF] ##
G  = []
GP = 0 # Protein Alex wants
GC = 0 # Carbo Alex wants
GF = 0 # Fat Alex wants

## One line [P, C, F] ##
foods = [[],[],[]]

runTime = 0
with open("new_years_resolution.txt") as f:
    for line in f:
        if runTime == 0:
            T = int(line[:-1])
            runTime += 1
        elif runTime == 1:
            G = line[:-1]
            GSplit = G.split(" ")
            GP = int(GSplit[0])
            GC = int(GSplit[1])
            GF = int(GSplit[2])
            runTime += 1
        elif runTime == 2:
            N = int(line[:-1])
            runTime += 1
        else:
            food = line[:-1]
            foodSplit = food.split(" ")
            foods[0].append(int(foodSplit[0]))
            foods[1].append(int(foodSplit[1]))
            foods[2].append(int(foodSplit[2]))
            N -= 1
            if N == 0: 
                runTime = 1
                # print(foods)
                if isSubsetSum(foods[0], len(foods[0]), GP) and isSubsetSum(foods[1], len(foods[0]), GC) and isSubsetSum(foods[2], len(foods[0]), GF):
                    print("Case #"+str(i)+": yes")
                    i += 1
                else: 
                    print("Case #"+str(i)+": no")
                    i += 1
                foods = [[],[],[]]