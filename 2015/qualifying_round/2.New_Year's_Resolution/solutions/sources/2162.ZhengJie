#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdio>
#include<vector>
#include<cassert>
#include<cstring>
#include<cstdlib>
#include<utility>
#include<iostream>
#include<algorithm>
#include<functional>
#define REP(x,y,z) for(int x=y;x<=z;x++)
#define FORD(x,y,z) for(int x=y;x>=z;x--)
#define MSET(x,y) memset(x,y,sizeof(x))
#define FOR(x,y) for(__typeof(y.begin()) x=y.begin();x!=y.end();x++)
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define SZ size()
#define M 22
using namespace std;
typedef long long LL;
struct Tri
{
	int x,y,z;
	Tri ()
	{
		x = y = z = 0;
	}
	void input()
	{
		scanf("%d %d %d",&x,&y,&z);
	}
	Tri operator + (Tri a)
	{
		Tri re;
		re.x = x + a.x;
		re.y = y + a.y;
		re.z = z + a.z;
		return re;
	}
	bool operator == (Tri a)
	{
		return x==a.x && y==a.y && z==a.z;
	}
};
int t,n;
Tri in[M],tar;
bool flg;
int main()
{
	Tri tmp;
	
	scanf("%d",&t);
	REP(tt,1,t)
	{
		flg=false;
		tar.input();
		scanf("%d",&n);
		REP(i,0,n-1)in[i].input();

		REP(i,0,(1<<n)-1)
		{
			if(flg) break;
			
			tmp = Tri();
			REP(j,0,n-1)if((1<<j) & i)
				tmp = tmp + in[j];
			if(tmp == tar) flg = true;
		}

		printf("Case #%d: %s\n",tt,flg?"yes":"no");
	}
	return 0;
}

