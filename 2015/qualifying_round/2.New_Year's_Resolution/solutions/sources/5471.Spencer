#!/usr/bin/env ruby

def run(filename)
  inputs = File.read(filename).each_line.map { |n| n.strip! }

  num_test_cases = inputs.shift.to_i

  output = File.open('my_output.txt', 'w+')

  1.upto(num_test_cases).each do |test_case_num|
    target = inputs.shift.split(' ').map(&:to_i)
    num_foods = inputs.shift.to_i

    puts "\n\nSTARTING CASE #{test_case_num}..."
    puts "target: #{target.inspect}"
    puts "num_foods: #{num_foods}"

    foods = []

    1.upto(num_foods).each do |food_num|
      foods.push(inputs.shift.split(' ').map(&:to_i))
    end

    puts "foods: #{foods.inspect}"

    output.write("Case ##{test_case_num}: #{fit?(target, foods) ? 'yes' : 'no'}\n")
  end
end

def fit?(target, foods)
  0.upto(foods.length-1) do |selection_index|
    return true if fit_helper(target, foods, [0,0,0], selection_index, [])
  end

  false
end

def fit_helper(target, foods, total, selection_index, my_foods)
  current_food = foods[selection_index]

  new_total = [
    total[0] + current_food[0],
    total[1] + current_food[1],
    total[2] + current_food[2]]

  if (new_total[0] == target[0]) && (new_total[1] == target[1]) && (new_total[2] == target[2])
    puts "current_food: #{current_food.inspect}"
    puts "WINNER: #{my_foods.inspect}"
    return true
  end

  (selection_index+1).upto(foods.length-1) do |new_selection_index|
    if new_total[0] <= target[0] && new_total[1] <= target[1] && new_total[2] <= target[2]
      return true if fit_helper(target, foods, new_total, new_selection_index, my_foods.dup << foods[selection_index])
    end
  end

  false
end

run(ARGV[0])
