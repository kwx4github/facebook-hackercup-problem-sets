//Bismillahir Rahmanir Rahmeem

#include<stdio.h>
#include<algorithm>
#include<iostream>
#include<math.h>
#include<string.h>
#include<map>
#include<queue>
#include<stack>
#include<utility>
#include<stdlib.h>
#include<string>
#include<set>
#include<iomanip>
#define INF 1e9
#define lld long long int
#define clr(a) memset(a,0,sizeof(a))
#define reset(a) memset(a,-1,sizeof(a))
#define act(a) memset(a,1,sizeof(a))
#define FRO freopen("input.txt","r",stdin);
#define FROut freopen("output.txt","w",stdout);
#define ui unsigned int
#define came "came"
#define pii pair<int,int>
#define plii pair<long long int, int>
#define pll pair<long long,long long>
#define pic pair<int,char>
#define ninf (-1e9)-2
#define inf (1e9)+2
#include<fstream>
#include <assert.h>

#define foreach(x) for(__typeof(x.begin()) it=x.begin(); it!=x.end();it++)

using namespace std;
#define pid pair<int,double>
#define pdi pair<double,int>

#define pb push_back
#define mp make_pair
#define print(x) printf("%d\n",x)
#define pi 3.14159265359

int totalx,totaly,totalz;

struct tri
{
    int x,y,z;
    tri()
    {
        x=y=z;
    }
    tri(int a, int b, int c)
    {
        x=a,y=b,z=c;
    }
    void input()
    {
        scanf("%d %d %d",&x,&y,&z);
    }
};

int n;
tri val[25];

bool ok(int mask)
{
    int i,j;
    int p,r,q;
    p=r=q=0;
    for(i=0;i<n;i++)
    {
        if(mask & 1<<i)
        {
            p+=val[i].x;
            q+=val[i].y;
            r+=val[i].z;
        }
    }
    if(p==totalx && q==totaly && r== totalz)
    {
        return true;
    }
    return false;
}

int main()
{
    FRO
    FROut
    int ca,t;
    int i,j;
    scanf("%d",&t);
    for(ca=1;ca<=t;ca++)
    {
        int lim;
        scanf("%d %d %d",&totalx,&totaly,&totalz);
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            val[i].input();
        }
        lim=1<<n;
        printf("Case #%d: ",ca);
        for(i=0;i<lim;i++)
        {
            if(ok(i))
            {
                printf("yes\n");
                break;
            }
        }
        if(i==lim)
        {
            printf("no\n");
        }
    }
    return 0;
}
