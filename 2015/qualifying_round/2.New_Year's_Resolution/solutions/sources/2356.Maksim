#include <iostream>
#include <string>
#include <vector>
#include <stdlib.h>
#include <stdio.h>
#include <fstream>

using namespace std;

class NewYearsResolution {
public:
	void Solve(string inFile, string outFile);
	NewYearsResolution();
	~NewYearsResolution();
};

void NewYearsResolution::Solve(string inFile, string outFile) {
	int T, N, Gp, Gc, Gf;

	ifstream fin;
	ofstream fout;

	fin.open(inFile);
	fout.open(outFile);

	fin >> T;
	for (int t = 0; t < T; t++) {
		fin >> Gp >> Gc >> Gf;

		fin >> N;
		vector<vector<int>> foods;

		for (int i = 0; i < N; i++) {
			vector<int> dayFood;
			int P, C, F;
			fin >> P >> C >> F;
			dayFood.push_back(P);
			dayFood.push_back(C);
			dayFood.push_back(F);
			foods.push_back(dayFood);
		}

		int ssMask = 1;
		ssMask = ssMask << N;

		bool result = false;
		for (int mask = 1; mask < ssMask; mask++) {
			int elem = 0;
			int currMask = mask;
			int sumP = 0, sumC = 0, sumF = 0;
			while (currMask > 0) {
				int subElem = currMask % 2;
				currMask = currMask >> 1;

				if (subElem != 0) {
					sumP += foods[elem][0];
					sumC += foods[elem][1];
					sumF += foods[elem][2];

					if (sumP == Gp && sumC == Gc && sumF == Gf) {
						result = true;
						break;
					}
					else if (sumP > Gp || sumC > Gc || sumF > Gf)
						break;
				}
				elem++;
			}
			if (result)
				break;
		}
		cout << t + 1 << endl;
		if (result)
			fout << "Case #" << t + 1 << ": yes" << endl;
		else
			fout << "Case #" << t + 1 << ": no" << endl;
	}

	fin.close();
	fout.close();
}

NewYearsResolution::NewYearsResolution() {

}

NewYearsResolution::~NewYearsResolution() {

}

int main(int argc, char** argv) {
	NewYearsResolution NYR;

	NYR.Solve("nyr.in", "nyr.out");

	return 0;
}