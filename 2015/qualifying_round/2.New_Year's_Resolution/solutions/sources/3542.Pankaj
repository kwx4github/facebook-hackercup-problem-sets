#include<stdio.h>
#include<utility>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<sstream>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#include<cstdlib>
#include<ctime>

using namespace std;

#define PB push_back
#define MP make_pair
#define rep(i,a,b) for(i=a;i<b;i++)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define mod 1000000007

template< class T > T abs(T &n) { return (n < 0 ? -n : n); }
template< class T > T max(T &a, T &b) { return (!(a < b) ? a : b); }
template< class T > T min(T &a, T &b) { return (a < b ? a : b); }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }

typedef pair<int,int> PI;
typedef vector<int> VI;
typedef vector<PI> VPI;
typedef long long int LL;

const int MAX = 100;
int GP, GC, GF;
int N;
int P[MAX], C[MAX], F[MAX];
int flag=0;

void is_possible(int p, int c, int f, int i){
    if(p==GP && c==GC && f==GF) flag=1;
    int j;
    rep(j,i,N) is_possible(p+P[j], c+C[j], f+F[j], j+1);
}

int main(){
    int T;
    si(T);
    int t=0;
    while(T--){
        t+=1;
        scanf("%d%d%d", &GP, &GC, &GF);
        scanf("%d", &N);
        int i;
        rep(i,0,N) scanf("%d%d%d", &P[i], &C[i], &F[i]);
        flag=0;
        is_possible(0, 0, 0, 0);
        cout << "Case #" << t <<": ";
        if(flag) cout << "yes";
        else cout << "no";
        cout << endl;
    }
    return 0;
}
