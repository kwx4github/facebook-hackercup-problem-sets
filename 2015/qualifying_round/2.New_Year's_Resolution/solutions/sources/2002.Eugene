#include <iostream>

using namespace std;

int g[3];
int p[20][3];
int cur[3];

bool recur(int depth)
{
	if (depth == 20) 
	{
		if (cur[0] == g[0] && cur[1] == g[1] && cur[2] == g[2])
		{
			return true;
		}
	}

	// either include food #d, or don't
	bool good = false;
	good = good || recur(depth + 1); // don't include
	for (int i = 0; i < 3; i++)
		cur[i] += p[depth][i];
	good = good || recur(depth + 1); // include
	for (int i = 0; i < 3; i++)
		cur[i] -= p[depth][i];
	return good;	
}

void go(int t)
{
	if (recur(0))
	{
		cout << "Case #" << t << ": yes\n";
	}
	else
	{
		cout << "Case #" << t << ": no\n";
	}
}

int main()
{
	int T; cin >> T;
	for (int t = 0; t < T; t++)
	{
		for (int i = 0; i < 3; i++)
		{
			p[i][0] = p[i][1] = p[i][2] = 0;
		}
		cur[0] = cur[1] = cur[2] = 0;
		cin >> g[0] >> g[1] >> g[2];
		cin >> n;
		for (int i = 0; i < n; i++)
		{
			cin >> p[i][0] >> p[i][1] >> p[i][2];
		}
		go(t + 1);
	}
	return 0;
}
