#include <algorithm>
#include <cmath>
#include <iostream>
#include <fstream>
#include <map>
#include <queue> // push, front, pop
#include <sstream>
#include <string>
#include <stack> // push, top, pop
#include <set>
#include <vector>
#include <list> // list.insert(it, data); data inserted before it..
#include <iomanip>
#include <stdio.h>

#define PI 3.14159265358979323846264338327950288
#define fill_(x,v) memset(x,v,sizeof(x))
#define min(x,y) (((x)>(y)) ? (y) :(x))
#define max(x,y) (((y)>(x)) ? (y) :(x))
#define Pi  3.1415926535
#define ll long long

using namespace std;

ifstream fin("c:\\tmp\\new_years_resolution.txt");
ofstream fout("c:\\tmp\\out.txt");

bool check(const vector<int> X, int Gx, int m) {
	int sum = 0;
	for (int i = 0; i < X.size(); i++) {
		if ( m & (1 << i) ) {
			sum += X[i];
		}
	}
	return sum == Gx;
}

bool run() {
	int Gp, Gc, Gf;
	fin >> Gp >> Gc >> Gf;
	int n;
	fin >> n;
	vector<int> P, C, F;
	for (int i = 0; i < n; i++) {
		int p, c, f;
		fin >> p >> c >> f;
		P.push_back(p);
		C.push_back(c);
		F.push_back(f);
	}
 	
 	for (int m = 0; m < (1 << n); m++) {
 		if (check(P, Gp, m) && check (C, Gc, m) && check(F, Gf, m)) {
 			return true;
		 }
	}
	return false;
}

int main() {
	int N;
	fin >> N;
	//char inp[1000];
  //fin.getline(inp, 1000);
  
	for( int n = 1; n <= N; n++){
		//fout<<"Case #"<<n<<": ";
		
		bool ret = run();
		fout<<"Case #"<<n<<": "<<(ret? "yes" : "no")<<endl;
		//printf("Case #%d: %d\n", n, ret);
		//cout<<"Case #"<<n<<": "<endl;
		//fout << fixed;
		//fout<<"Case #"<<n<<": "<<setprecision(10)<<ret<<endl;
   }
   return 0;
}
