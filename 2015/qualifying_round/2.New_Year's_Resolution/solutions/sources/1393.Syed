#include <iostream>
#include <iomanip>
#include <cstdio>
#include <set>
#include <vector>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <utility>
#include <iterator>
#include <cmath>
#include <algorithm>
#include <memory.h>
#include <string>
#include <cstring>
#include <sstream>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <cctype>
#include <fstream>
#include <climits>
#include <numeric>
#include <bitset>
#include <complex>
#include <functional>
#include <list>
using namespace std;
typedef long long int LL;
typedef unsigned long long int uLL;
inline int _Int() { char INPUT[15]; scanf("%s",INPUT); return atoi(INPUT); }
inline LL _LL() { char INPUT[70]; scanf("%s",INPUT); return atoll(INPUT); }
LL bigMod(LL A,LL P,int M){ LL R=1; for(A%=M; P; P>>=1) { if(P&1) R=(R*A)%M; A=(A*A)%M; } return R; } /** (A^P) % M **/
LL bigMul(LL A,LL B,LL M) { LL R=0; for(A%=M; B; B>>=1) { if(B&1) R=(R+A)%M; A=(A+A)%M; } return R; } /** (A*B) % M **/
LL _bigMod(LL A,LL P,LL M){ LL R=1; for(A%=M; P; P>>=1) { if(P&1) R=bigMul(R,A,M); A=bigMul(A,A,M); } return R; } /** advance bigMod **/
template<class T>T GCD(T x, T y) { while(x) x^=y^=x^=y%=x; return y; } /** GCD(a,b) **/
#define pb  push_back
#define pob pop_back
#define pi  acos(-1)
/*************************************************************************************************************************
**                                            Syed Zafrul Lipu (ShockProof)                                              *
**                                            CSE, University of Asia Pacific                                            *
**************************************************************************************************************************/

struct data {
    int x,y,z;
};
data A, N[22];
int n;

bool call(int pos, int X, int Y, int Z) {
    if(X<0||Y<0||Z<0) return 0;
    if(pos==-1) {
        return (!X&&!Y&&!Z);
    }
    bool a=call(pos-1,X,Y,Z);
    bool b=call(pos-1,X-N[pos].x,Y-N[pos].y,Z-N[pos].z);
    return (a|b);
}

int main()
{
    freopen("new_years_resolution.txt","r",stdin);
    freopen("new_years_resolution_out.txt","w",stdout);

    int t=_Int(),tc=0;
    while(t--) {

        A.x=_Int();
        A.y=_Int();
        A.z=_Int();
        n=_Int();
        for(int i=0; i<n; i++) {
            N[i].x=_Int();
            N[i].y=_Int();
            N[i].z=_Int();
        }
        bool ans=call(n-1,A.x,A.y,A.z);
        if(ans) printf("Case #%d: yes\n",++tc);
        else printf("Case #%d: no\n",++tc);
    }

    return 0;
}
