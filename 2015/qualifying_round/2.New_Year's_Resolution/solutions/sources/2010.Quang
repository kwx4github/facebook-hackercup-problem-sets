var fs = require('fs');

function Generate(n) {
	var combi = [];
	var temp= "";

	var letLen = Math.pow(2, n);
	for (var i = 0; i < letLen ; i++){
		temp= [];
		for (var j=0;j<n;j++) {
			if ((i & Math.pow(2,j))){ 
			temp.push(true);
			}
			else {
			temp.push(false);
			}
		}
		if (temp.length > 0) {
			combi.push(temp);
		}
	}
	
	return combi;
}

fs.readFile('2.txt', 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  var res = data.split("\n");
  var result = '';
  var t = parseInt(res[0]);
  var line = 1;
  for (var i = 1; i < t + 1; i++) {
	var req = res[line].split(' ');
	for (var j = 0; j < req.length; j++) {
		req[j] = parseInt(req[j]);
	}
	line++;
	var n = parseInt(res[line]);
	var food = [];
	var ed = line + n;
	
	var ingres = []
	for (line = line + 1; line < ed + 1; line++) {
		var ingre = res[line].split(" ");
		for (var j = 0; j < ingre.length; j++) {
			ingre[j] = parseInt(ingre[j]);
		}
		ingres.push(ingre);
	}
	
	ok = false;

	var combi = Generate(n);

	for (var k = 0; k < combi.length; k++) {
		var sum = [0, 0, 0];
		for (var kk = 0; kk < n; kk++) {
			if (combi[k][kk] == true) {
				sum[0] = sum[0] + ingres[kk][0];
				sum[1] = sum[1] + ingres[kk][1];
				sum[2] = sum[2] + ingres[kk][2];
			}
		}
		if ((sum[0] == req[0]) && (sum[1] == req[1]) && (sum[2] == req[2])) {
			ok = true;
			break;
		}
	}
	var answer = 'no';
	if (ok == true) answer = 'yes';
	result += 'Case #' + i + ': ' + answer + '\n';

  }
  fs.writeFile('2.out', result);
});
