
#include <fstream>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
#include <map>
#include <iostream>
#include <iomanip>
#include <cmath>
using namespace std;

int max(int a,int b){
    return a < b ? b : a;
}
int min(int a,int b){
    return a > b ? b : a;
}


int gp=0,gc=0,gf=0;
vector<vector<int>> pcf;
vector<int> line;
int ans=-1;

void findcalori(int sum, int deep){
    
    if(ans==1){
        return;
    }
    if(sum==gp){
        int carbon=0;
        for(int i=0;i<line.size();i++){
            carbon = carbon + pcf[line[i]][1];
        }
        if(carbon!=gc){
            return;
        }
        int fat=0;
        for(int i=0;i<line.size();i++){
            fat = fat + pcf[line[i]][2];
        }
        if(fat!=gf){
            return;
        }
        ans=1;
        return;
    }
    deep++;
    if(deep>=pcf.size()){
        return;
    }
    line.push_back(deep);
    findcalori(sum+pcf[deep][0],deep);
    line.pop_back();
    findcalori(sum,deep);
    
}


string solve(){
    ans=-1;
    findcalori(0,-1);
    if(ans==1){
        return "yes";
    }else{
        return "no";
    }
}


int main(int argc, const char * argv[])
{
    
    std::ifstream ifs( "a.txt" );
    
    int T;
    ifs >> T;
    int t=1;
    while(t<=T){

        
        ifs >> gp >> gc >> gf;
        int N=0;
        ifs >> N;
        
        
        pcf.clear();
        for(int i=0;i<N;i++){
            int tmp;
            vector<int> tmp2;
            tmp2.clear();
            
            ifs >> tmp;
            tmp2.push_back(tmp);
            
            ifs >> tmp;
            tmp2.push_back(tmp);
            
            ifs >> tmp;
            tmp2.push_back(tmp);
            
            pcf.push_back(tmp2);
            
            //std::cout << pcf[i][0] << " " << pcf[i][1] << " " << pcf[i][2] << std::endl;
        }
        
        string ret = solve();
        std::cout << "Case #" << t << ": " << ret << std::endl;
        
        t++;
    }
    return 0;
    
}