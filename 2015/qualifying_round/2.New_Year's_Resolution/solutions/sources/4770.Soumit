#include <stdio.h>
struct food{
    int c;
    int p;
    int f;
};
int find(struct food [],int,struct food);
int main()
{
    FILE *in,*out;
    in=fopen("inp.txt","r");
    out=fopen("out.txt","w");
    int T;
    fscanf(in,"%d",&T);
    int t;
    for(t=1;t<=T;t++)
    {
        struct food req;
        int gp,gc,gf;
        fscanf(in,"%d%d%d",&gp,&gc,&gf);
        req.p=gp;
        req.c=gc;
        req.f=gf;
        struct food arr[22];
        int n,i;
        fscanf(in,"%d",&n);
        for(i=1;i<=n;i++)
        {
            int pin,cin,fin;
            fscanf(in,"%d%d%d",&pin,&cin,&fin);
            arr[i].p=pin;
            arr[i].c=cin;
            arr[i].f=fin;
        }
        int ans=find(arr,n,req);
        if(ans)
            fprintf(out,"Case #%d: yes\n",t);
        else
            fprintf(out,"Case #%d: no\n",t);
    }
    fclose(in);
    fclose(out);
    return 0;
}
int find(struct food arr[],int i,struct food sum)
{
    if(i==0 && (sum.c!=0 || sum.f!=0 || sum.p!=0))
    {
        return 0;
    }
    else if(i!=0 && (sum.c-arr[i].c)==0 && (sum.f-arr[i].f)==0 && (sum.p-arr[i].p)==0)
        return 1;
    else if(sum.c<0 || sum.p<0 || sum.f<0)
        return 0;
    else
    {
        int flag=0;
        flag=find(arr,i-1,sum);
        if(!flag)
        {
            sum.c-=arr[i].c;
            sum.p-=arr[i].p;
            sum.f-=arr[i].f;
            flag=find(arr,i-1,sum);
        }
        return flag;
    }
}
