#include <iostream>

using namespace std;



class nutrients {
public:
	int n1, n2, n3;

	nutrients() {
		n1 = n2 = n3 = 0;
	}
	nutrients operator+(nutrients n) {
		n.n1 += n1;
		n.n2 += n2;
		n.n3 += n3;
		return n;
	}
	bool operator==(nutrients& n) {
		return (n1 == n.n1) && (n2 == n.n2) && (n3 == n.n3);
	}
	bool operator>(nutrients& n) {
		return (n1 > n.n1) || (n2 > n.n2) || (n3 > n.n3);
	}
};



nutrients target;

int foodnum;
nutrients foods[20];

bool satisfiable(int f, nutrients tillnow) {
	if (f == foodnum) return tillnow == target;
	if (tillnow > target) return false;

	nutrients eat = tillnow + foods[f];
	return satisfiable(f + 1, tillnow) || satisfiable(f + 1, eat);
}



int main() {
	FILE * out; fopen_s(&out, "new_years_resolution out.txt", "wt");

	int cases; scanf_s("%d", &cases);
	for (int c = 1; c <= cases; c++) {
		scanf_s("%d %d %d", &target.n1, &target.n2, &target.n3);

		scanf_s("%d", &foodnum);
		for (int i = 0; i < foodnum; i++)
			scanf_s("%d %d %d", &foods[i].n1, &foods[i].n2, &foods[i].n3);

		char* answer = satisfiable(0, nutrients()) ? "yes" : "no";
		printf("Case #%d: %s\n", c, answer);
		fprintf(out, "Case #%d: %s\n", c, answer);
	}

	fflush(out);
	fclose(out);
	return 0;
}