import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
	
	static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));
	static StringTokenizer datos = new StringTokenizer("");
	
	public static String next() throws IOException {
		while (!datos.hasMoreTokens()) {
			String s = in.readLine();
			if (s == null)
				return null;
			datos = new StringTokenizer(s);
		}
		return datos.nextToken();
	}
	
	public static Integer nextInt() throws IOException {
		String s = next();
		return s == null ? null : Integer.parseInt(s);
	}
	public static Long nextLong() throws IOException {
		String s = next();
		return s == null ? null : Long.parseLong(s);
	}
	
	static int food[][];
	static int n;
	
	public static void main(String[] args) throws IOException 
	{
		int t = nextInt();
		for(int cs=1;cs<=t;cs++){
			int protein = nextInt();
			int carb = nextInt();
			int fat = nextInt();
			n = nextInt();
			food = new int[n][3];
			for(int i=0;i<n;i++){
				food[i][0] = nextInt();
				food[i][1] = nextInt();
				food[i][2] = nextInt();
			}
			String res = solve(0,protein, carb, fat) ? "yes" : "no";
			out.println("Case #"+cs+": " + res);
		}
		out.flush();
	}
	
	public static boolean solve(int ind, int p, int c, int f)
	{
		if(p==0 && c==0 && f==0) return true;
		if(p<0 || c<0 || f<0) return false;
		if(ind==n) return false;
		boolean res = solve(ind+1, p - food[ind][0], c - food[ind][1], f - food[ind][2]);
		if(res) return true;
		res = solve(ind + 1, p, c, f);
		return res;
	}
}