#include <cstdio>
#include <cassert>
#include <ctime>

#define eprintf(...) fprintf(stderr, __VA_ARGS__)

int main() {
    clock_t start = clock();
    int tests;
    assert(scanf("%d", &tests) == 1);
    for (int test = 1; test <= tests; test++) {
        eprintf("Test %d\n", test);
        clock_t testStart = clock();
        int n, gp, gc, gf;
        assert(scanf("%d%d%d", &gp, &gc, &gf) == 3);
        assert(scanf("%d", &n) == 1);
        int p[n];
        int c[n];
        int f[n];
        for (int i = 0; i < n; i++) {
            assert(scanf("%d%d%d", &p[i], &c[i], &f[i]) == 3);
        }
        bool ok = false;
        for (int mask = 0; !ok && mask < (1 << n); mask++) {
            int tp = 0, tc = 0, tf = 0;
            for (int i = 0; i < n; i++) {
                if ((mask >> i) & 1) {
                    tp += p[i];
                    tc += c[i];
                    tf += f[i];
                }
            }
            ok |= tp == gp && tc == gc && tf == gf;
        }
        printf("Case #%d: %s\n", test, ok ? "yes" : "no");
        eprintf("Test %d end: %.2f\n", test, (double)(clock() - testStart) / CLOCKS_PER_SEC);
    }
    eprintf("Total: %.2f\n", (double)(clock() - start) / CLOCKS_PER_SEC);
    return 0;
}
