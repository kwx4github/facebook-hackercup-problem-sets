#include<iostream>
#include<cstdio>
#include<climits>
#include<vector>
#include<algorithm>
#include<map>
#include<set>

#define MIN(a, b) (((a) < (b))?(a):(b))
#define MAX(a, b) (((a) > (b))?(a):(b))

using namespace std;

const char INPUT[] = "new_years_resolution.txt";
const char OUTPUT[] = "HelloWorld.outp";

const int MAX_FOOD = 20 + 10;

bool test(int id, const int num_food, int food[MAX_FOOD][3],
    int curP, int curC, int curF, const int Gp, const int Gc, const int Gf){
  if (curP == Gp && curC == Gc && curF == Gf){
    return true;
  } else if (id >= num_food || curP > Gp || curC > Gc || curF > Gf){
    return false;
  }

  //Test No
  if (test(id + 1, num_food, food, curP, curC, curF, Gp, Gc, Gf)){
    return true;
  } else { //Test yes
    curP += food[id][0];
	curC += food[id][1];
	curF += food[id][2];

	return test(id + 1, num_food, food, curP, curC, curF, Gp, Gc, Gf);
  }
}

int main(void){
  freopen(INPUT, "r", stdin);
  freopen(OUTPUT, "w", stdout);

  int num_test;
  cin >> num_test;

  for (int id_test = 0; id_test < num_test; ++ id_test){
    int Gp, Gc, Gf;
	cin >> Gp >> Gc >> Gf;
	int num_food;
	cin >> num_food;
	int food[MAX_FOOD][3];
	for (int id_food = 0; id_food < num_food; ++ id_food){
	  cin >> food[id_food][0] >> food[id_food][1] >> food[id_food][2];
	}

	//TODO sort food

	cout << "Case #" << id_test + 1 << ": ";
	int curP = 0, curC = 0, curF = 0;
	if (test(0, num_food, food, curP, curC, curF, Gp, Gc, Gf) == true){
	  cout << "yes" << endl;
	} else {
	  cout << "no" << endl;
	}
  }
  return 0;
}
