#include<stdio.h>
#include<string.h>

int total,w[3][21],used[21];
int cs[3]; // cs=Current Sum
bool done = false;

void subset(int k, int d1, int d2, int d3)
{
	if (k >= total) return;  // boundry check

	used[k] = 1; // use element k

	for(int i=0;i<3;i++)
		cs[i] += w[i][k];

	if(cs[0] == d1 && cs[1] == d2 && cs[2] == d3) 
	{
		done = true;
		return;
	}

	if(cs[0] < d1 && cs[1] < d2 && cs[2] < d3)   // only when current sum is not enough
		subset(k + 1, d1, d2, d3); 

	used[k] = 0; // not use element k

	for(int i=0;i<3;i++)
		cs[i] -= w[i][k];

	subset(k+1, d1, d2, d3);
}


int main()
{
	int T,N;
	int Gp,Gc,Gf;


	FILE *fin = fopen("in.txt","r");
	FILE *fout = fopen("out.txt","w");

	while(fscanf(fin,"%d",&T)==1)
	{
		for(int i=1;i<=T;i++)
		{
			fscanf(fin,"%d %d %d",&Gp, &Gc, &Gf);

			fscanf(fin,"%d",&N);

			for(int j=0;j<N;j++)
			{
				fscanf(fin,"%d %d %d",&w[0][j], &w[1][j], &w[2][j]);
				used[j] = 0;
			}

			cs[0] = cs[1] = cs[2] = 0;
			total = N;
			done = false;

			subset(0, Gp, Gc, Gf);

			if(done)
				fprintf(fout,"Case #%d: yes\n",i);
			else
				fprintf(fout,"Case #%d: no\n",i);

		}
	}

	fclose(fout);
	fclose(fin);

	return 0;
}