class SumTuple(tuple):
    def __add__(self, other):
        return SumTuple(other[idx] + self[idx] for idx in range(len(self)))

def simple_subset_sum(values, goal):
    n = len(values)
    q = [set([values[i]]) for i in range(n)]
    q[0].add(values[0])
    for i in range(1, n):
        for s in q[i-1]:
            q[i].add(s)
            tmp = s+values[i]
            if all(tmp[i] <= goal[i] for i in range(3)):
                q[i].add(tmp)

    return goal in q[-1]

T = input()

for case in range(T):
    goal = SumTuple(int(el) for el in raw_input().split())

    N = input()

    foods = [SumTuple(int(el) for el in raw_input().split()) for food in range(N)]

    fn = simple_subset_sum
    print "Case #{case}: {result}".format(case=case+1, result="yes" if fn(foods, goal) else "no")
