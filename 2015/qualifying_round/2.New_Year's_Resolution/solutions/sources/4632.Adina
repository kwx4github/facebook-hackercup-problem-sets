#include <cstdio>
#include <iostream>
#include <fstream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctype.h>
#include <cstring>
#include <string>
#include <ctime>
#include <cassert>
#include <utility>

using namespace std;

struct Nutrient{
    int x, y, z; // protein, carbohydrates, fat
    Nutrient(int p, int c, int f) {
        x = p;
        y = c;
        z = f;
    }
};

vector<Nutrient> v;
int n;
bool sol;

void backT(int k, Nutrient ask) {
    if(k == n) {
        if(ask.x == 0 && ask.y == 0 && ask.z == 0) {
            sol = true;
        }
        return;
    }
    for(int i = 0; i < 2; i++) {
        if(i == 1) {
            Nutrient c = v[k];
            ask.x  -= c.x;
            ask.y  -= c.y;
            ask.z  -= c.z;
        }
        backT(k + 1, ask);
    }
}


int main() {
	freopen("date.in", "r", stdin);
	freopen("date.out","w", stdout);

    int T, p, c, f;
    scanf("%d", &T);
    for(int t = 0; t < T; t++) {
        scanf("%d %d %d", &p, &c, &f);
        scanf("%d", &n);
        v.clear();
        Nutrient ask = Nutrient(p, c, f);
        sol = false;
        for(int i = 0; i < n; i++) {
            scanf("%d %d %d", &p, &c, &f);
            v.push_back(Nutrient(p, c, f));
        }
        backT(0, ask);
        if(sol)
            printf("Case #%d: yes", t + 1);
        else
            printf("Case #%d: no", t + 1);
        printf("\n");
    }

	return 0;
}
