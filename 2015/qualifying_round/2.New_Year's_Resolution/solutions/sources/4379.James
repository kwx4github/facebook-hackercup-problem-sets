#include <iostream>
#include <fstream>
#include <sstream>
#include <algorithm>
#include <numeric>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <cctype>
#include <climits>
#include <string>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

#define INF	(int)1e9
#define EPS 1e-9

struct food{
	int p;
	int c;
	int f;
	food(int ps, int cs, int fs) : p(ps), c(cs), f(fs) {}
};

vector<food> foods;

int main(){
	int tc, casenum = 1;
	scanf("%d", &tc);
	while(tc-- > 0){
		foods.clear();
		int gp, gc, gf;
		scanf("%d %d %d", &gp, &gc, &gf);
		int n, p, c, f;
		scanf("%d", &n);
		for(int i = 0; i < n; i++){
			scanf("%d %d %d", &p, &c, &f);
			foods.push_back(food(p,c,f));
		}
		bool possible = false;
		for(int i = 0; i < (1<<n); i++){
			int sp = 0, sc = 0, sf = 0;
			for(int j = 0; j < n; j++){
				if(i & (1 << j)){
					sp += foods[j].p;
					sc += foods[j].c;
					sf += foods[j].f;
				}
			}
			if(sp == gp && sc == gc && sf == gf){
				possible = true;
				break;
			}
		}
		if(possible) printf("Case #%d: yes\n", casenum++);
		else printf("Case #%d: no\n", casenum++);
	}
}