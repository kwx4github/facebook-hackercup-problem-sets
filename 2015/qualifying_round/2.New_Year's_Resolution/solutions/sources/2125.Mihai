#include <stdio.h>
#include <string>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>

#define OUPUT_FILE "out.txt"

using namespace std;

bool findSum(long P, long C, long F, const vector<long>& pp, const vector<long>& cc, const vector<long>& ff)
{
    if (P == 0 && C == 0 && F == 0)
        return true;

    long selectedItems = 1;
    long maxSelected = (1 << pp.size()) - 1;
    while (selectedItems <= maxSelected)
    {
        int bitNo = 0;
        long tmp = selectedItems++;
        long sump = 0;
        long sumc = 0;
        long sumf = 0;

        while (tmp > 0)
        {
            if (tmp & 1)
            {
                sump += pp[bitNo];
                sumc += cc[bitNo];
                sumf += ff[bitNo];

                if (sump == P && sumc == C && sumf == F)
                    return true;

                if (sump > P || sumc > C || sumf > F)
                    break;
            }

            bitNo++;
            tmp >>= 1;
        }
    }

    return false;
}
void parseInputAndSolve(const string& inFileName)
{
    int T;
    long GP, GC, GF, P, C, F, N;
    ifstream in(inFileName);
    ofstream out(OUPUT_FILE);

    if (!out.is_open())
        cout << "Error!" << endl;

    in >> T;
    for (int testCase = 1; testCase <= T; testCase++)
    {
        in >> GP >> GC >> GF;
        in >> N;
        vector<long> pp(N), cc(N), ff(N);
        for (int i = 0; i < N; i++)
        {
            in >> P >> C >> F;
            pp[i] = P;
            cc[i] = C;
            ff[i] = F;
        }
       
        bool isPossible  = findSum(GP, GC, GF, pp, cc, ff);

        out << "Case #" << testCase << ": " << (isPossible ? "yes" : "no") << endl;
    }

    out.close();
}

int main(int argc, char* argv[])
{
    if (argc < 2)
        cout << "Please pass your input file... dude!" << endl;

    parseInputAndSolve(string(argv[1]));    

    return 0;
}

