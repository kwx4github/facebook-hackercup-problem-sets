#include<iostream>
#include<stdio.h>
using namespace std;


bool isSubsetSum(int set[],int set1[],int set2[], int n, int sum,int sum1,int sum2)
{
    
   // Base Cases
   if (sum == 0 && sum1==0 && sum2==0)
     return true;
   if (n == 0 && (sum != 0|| sum1!=0 || sum2!=0))
     return false;
 
   // If last element is greater than sum, then ignore it
   if (set[n-1] > sum || set1[n-1]>sum1 || set2[n-1]>sum2)
     return isSubsetSum(set,set1,set2, n-1, sum,sum1,sum2);
 
   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(set,set1,set2, n-1, sum,sum1,sum2) || isSubsetSum(set,set1,set2, n-1, sum-set[n-1],sum1-set1[n-1],sum2-set2[n-1]);
}

int main()
{
   int t,gp,gc,gf,i,k,n,p[25],c[25],f[25],sump,sumc,sumf;
   cin>>t;
   for(k=1;k<=t;k++)
   {
      cin>>gp>>gc>>gf;
      cin>>n;
      sump=sumc=sumf=0;
      for(i=0;i<n;i++)
      {
         cin>>p[i]>>c[i]>>f[i];
         sump+=p[i];
         sumc+=c[i];
         sumf+=f[i];
      }
      /*if(sump<gp || sumc<gc || sumf<<gf)
      {
         cout<<"Case #"<<k<<": no"<<endl;
      }
      else if(sump==gp && sumc==gc && sumf==gf)
      {
         cout<<"Case #"<<k<<": yes"<<endl;
      }*/
      if(isSubsetSum(p,c,f,n,gp,gc,gf)==true)
         {
            cout<<"Case #"<<k<<": yes"<<endl;
         }
      else
      {
         cout<<"Case #"<<k<<": no"<<endl;
      }
   }
   return 0;
}
