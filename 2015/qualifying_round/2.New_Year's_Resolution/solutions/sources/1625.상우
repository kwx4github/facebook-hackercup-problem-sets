#include <iostream>
#include <vector>
#include <string.h>
using namespace std;
bool check;
int gp;
int gc;
int gf;
struct Pcf{
	int p;
	int c;
	int f;
};

void dfs(const vector<Pcf>& v, int index, int p, int c, int f){
	if (gp == p && gc == c && gf == f){
		check = true;
	}

	for (int i = index + 1; i < v.size(); i++){
		dfs(v, i, p + v[i].p, c + v[i].c, f + v[i].f);
	}
	return;
}
bool solve(const vector<Pcf>& v){
	check = false;
	for (int i = 0; i < v.size(); i++){
		dfs(v, i, v[i].p, v[i].c, v[i].f);
	}
	return check;
}
int main(){
	int T;
	cin >> T;
	int c = 1;
	while (T--){
		int n;

		cin >> gp;
		cin >> gc;
		cin >> gf;
		cin >> n;
		vector<Pcf> v(n);
		for (int i = 0; i < n; i++){
			cin >> v[i].p;
			cin >> v[i].c;
			cin >> v[i].f;
		}


		cout << "Case #" << c << ": " << (solve(v) ? "yes" : "no") << endl;
		c++;
	}
	return 0;
}