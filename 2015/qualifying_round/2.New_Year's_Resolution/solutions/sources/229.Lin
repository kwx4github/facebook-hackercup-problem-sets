#include <iostream>
#include <vector>
using namespace std;

bool dfs(int GP, int GC, int GF, vector<int> &VP, vector<int> &VC, vector<int> &VF, vector<bool> &marked, int N, int k) {
	if (k == N) {
		int x = 0, y = 0, z = 0;
		for (int i = 0; i < N; ++i) {
			if (marked[i]) {
				x += VP[i];
				y += VC[i];
				z += VF[i];
			}
		}
		if (x == GP && y == GC && z == GF) {
			return true;
		} else {
			return false;
		}
	} else {
		marked[k] = true;
		if (dfs(GP, GC, GF, VP, VC, VF, marked, N, k + 1)) {
			return true;
		}
		marked[k] = false;
		if (dfs(GP, GC, GF, VP, VC, VF, marked, N, k + 1)) {
			return true;
		}
		return false;
	}
}

int main() {
	freopen("new_years_resolution.txt", "r", stdin);
	freopen("new_years_resolution_output.txt", "w", stdout);
	int T;
	cin >> T;
	for (int i = 0; i < T; ++i) {
		int GP, GC, GF, N;
		cin >> GP >> GC >> GF >> N;
		vector<int> VP(N), VC(N), VF(N);
		vector<bool> marked(N);
		for (int j = 0; j < N; ++j) {
			cin >> VP[j] >> VC[j] >> VF[j];
		}
		if (dfs(GP, GC, GF, VP, VC, VF, marked, N, 0)) {
			cout << "Case #" << i + 1 << ": yes" << endl;
		} else {
			cout << "Case #" << i + 1 << ": no" << endl;
		}
	}
	fclose(stdin);
	fclose(stdout);
	return 0;
}