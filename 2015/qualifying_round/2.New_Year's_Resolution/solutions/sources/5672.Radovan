#include <iostream>

using namespace std;

#define REP(i,n) for(int i=0;i<n;i++)

typedef long long int LLINT;

void solve(LLINT sum, LLINT* sums, int n, int i, LLINT partialsum, bool & ok) {

    // cout << "x" << partialsum << endl;

    if(partialsum == sum) { ok = true; return;}
    if(ok || i >= n) return;

    solve(sum, sums, n, i+1, partialsum + sums[i], ok);
    solve(sum, sums, n, i+1, partialsum, ok);
}

void solve(LLINT sum, LLINT* sums, int n, bool & ok) {
    solve(sum, sums, n, 0, 0, ok);
}

void process(int caseNum) {
    int GP, GC, GF;
    cin >> GP >> GC >> GF;

    LLINT sum = GP*10000LL*10000LL + GC*10000LL + GF;

    int n;
    cin >> n;

    LLINT * sums = new LLINT[n];

    REP(i, n) {
        int P, C, F;
        cin >> P >> C >> F;
        sums[i] = P*10000LL*10000LL + C*10000LL + F;
        // cout << sums[i] << endl;
    }

    bool ok = false;

    solve(sum, sums, n, ok);

    cout << "Case #" << caseNum<< ": ";

    if(ok) cout << "yes";
    else cout << "no";

    cout << endl;
}

int main() {
    int n;
    cin >> n;
    REP(i,n) process(i+1);
    return 0;
}