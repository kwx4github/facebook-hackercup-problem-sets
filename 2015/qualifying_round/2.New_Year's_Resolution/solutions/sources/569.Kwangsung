#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

bool solve(int idx, int Gp, int Gc, int Gf, const vector<vector<int>>& foods) {
    if (Gp == 0 && Gc == 0 && Gf == 0)
        return true;
    if (Gp < 0 || Gc < 0 || Gf < 0)
        return false;
    if (idx == foods.size())
        return false;

    return solve(idx+1, Gp, Gc, Gf, foods) || solve(idx+1, Gp-foods[idx][0], Gc-foods[idx][1], Gf-foods[idx][2], foods);
}

int main() {
    int T;
    cin >> T;

    for (int i = 1; i <= T; ++i) {
        int Gp, Gc, Gf, N;
        cin >> Gp >> Gc >> Gf >> N;

        vector<vector<int>> foods(N, vector<int>(3,0));

        for (int j = 0; j < N; ++j)
            cin >> foods[j][0] >> foods[j][1] >> foods[j][2];

        printf("Case #%d: %s\n", i, solve(0, Gp, Gc, Gf, foods) ? "yes" : "no");
    }

    return 0;
}
