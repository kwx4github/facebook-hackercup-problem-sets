import sys
import time

def nextMatrix(matrix):
  i=0
  matrix[i] = not matrix[i]
  while matrix[i]:
    i += 1
    matrix[i] = not matrix[i]

def solve0(target,products):
  matrix = [True]*len(products)
  while(any(matrix)):
    result = [0,0,0]
    for _,product in filter(lambda x:x[0],zip(matrix,products)):
      result = map(sum,zip(result,product))
    if result==target:
      return True
    nextMatrix(matrix)
  return False

def solve(target,products):
  l = len(products)
  matrix = 2**l-1
  while(matrix>0):
    result = [0,0,0]
    for i in range(l):
      mask = 1 << i
      if mask & matrix:
        result[0] = result[0] + products[i][0]
        result[1] = result[1] + products[i][1]
        result[2] = result[2] + products[i][2]
    if result==target:
      return True
    matrix -= 1
  return False

print >> sys.stderr, 'Starting!'
T = input()+1
for i in range(1,T):
  start_time = time.time()
  target = map(int,raw_input().split())
  N = input()
  products = []
  for j in range(N):
    products.append(map(int,raw_input().split()))
  print "Case #%d: %s" % (i,'yes' if solve(target,products) else 'no')
  end_time = time.time()
  print >> sys.stderr, 'Processed test no. %d - time: %f seconds' % (i, end_time-start_time)
