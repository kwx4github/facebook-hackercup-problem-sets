#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <string>
using namespace std;
#define si(n) scanf("%d",&n)
#define sf(n) scanf("%f",&n)
#define sl(n) scanf("%lld",&n)
#define lld long long
#define ld long double
#define pb push_back 
lld modpow(lld a,lld n,lld temp){lld res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;}
long long mul_inv(long long  a, long long b)
{
    return modpow(a,b-2,b);
}


struct Diet
{
    
    int p;
    int c;
    int f;
};

int test_cases()
{
    int t;

    int n,i;
    int pm,cm,fm;
    cin>>pm;
    cin>>cm;
    cin>>fm;
    int m;
    cin >> m;
    Diet diet[10000];
    for(i=0;i<m;i++)
    {
        diet[i] = Diet();
        cin >>diet[i].p;
        cin >>diet[i].c;
        cin >>diet[i].f;
    }
    int bin=pow(2,m)-1;
    while(bin)
    {
        int temp=bin;
        int psum=0,csum=0,fsum=0;
        int pt=m-1;
        while(temp)
        {
            if(temp&1)
            {
                psum+=diet[pt].p;
                csum+=diet[pt].c;
                fsum+=diet[pt].f;
            }
            temp>>=1;
            pt--;
        }
        if(psum==pm && csum==cm && fsum==fm)
        {
            cout<< "yes"<<endl;
            return 0;
        }
        
        psum=0;csum=0;fsum=0;

        bin--;
    }
    cout << "no"<<endl;

    return 0;
}

int main(){
    bool tests=true;
    int count = 1;
    if(tests){
        int t; si(t);
        while(t--)
        {
            cout << "Case #" << count  << ": ";
            test_cases();
            count++;
        }
    }
    else test_cases();
    return 0;
}
