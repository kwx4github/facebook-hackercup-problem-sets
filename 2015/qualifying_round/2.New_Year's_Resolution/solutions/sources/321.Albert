#include <iostream>

using namespace std;

struct food {
  int P;
  int C;
  int F;
};

bool solve(int GP, int GC, int GF, int N, food * foods, bool * used, int aP, int aC, int aF, int index) {
  if (aP>GP || aC>GC || aF>GF) return false;
  if (index == N) {
    if (GP == aP && GC == aC && GF == aF) return true;
    return false;
  }
  else {
    bool ok = false;
    ok = ok || solve(GP, GC, GF, N, foods, used, aP, aC, aF, index+1);
    used[index] = true;
    ok = ok || solve(GP, GC, GF, N, foods, used, aP + foods[index].P, aC + foods[index].C, aF + foods[index].F, index+1);
    used[index] = false;
    return ok;
  }
}

int main() {
  int T;
  cin >> T;
  for (int i=0; i<T; i++) {
    int GP, GC, GF;
    cin >> GP >> GC >> GF;
    int N;
    cin >> N;
    food * foods = new food[N];
    bool * used = new bool[N];
    for (int j=0; j<N; j++) {
      int P, C, F;
      cin >> P >> C >> F;
      food f;
      f.P = P;
      f.C = C;
      f.F = F;
      foods[j] = f;
      
      used[j] = false;
    }
    
    bool ok = solve(GP, GC, GF, N, foods, used, 0, 0, 0, 0);
    
    cout << "Case #" << i+1 << ": ";
    if (ok) cout << "yes";
    else cout << "no";
    cout << endl;
  }
}