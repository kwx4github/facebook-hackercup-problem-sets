#include <bits/stdc++.h>

#define rep(i,n) for(i=1;i<=n;i++)
#define Rep(i,n) for(i=0;i<n;i++)
#define For(i,a,b) for(i=a;i<=b;i++)

#define pb(x) push_back(x)
#define sz(x) x.size()

#define mem(ara,val) memset(ara,val,sizeof(ara))
#define eps 1e-9

#define si(x) scanf("%d",&x)
#define sii(x,y) scanf("%d %d",&x,&y)
#define siii(x,y,z) scanf("%d %d %d",&x,&y,&z)
#define sl(x) scanf("%lld",&x)
#define sll(x,y) scanf("%lld %lld",&x,&y)
#define slll(x,y,z) scanf("%lld %lld %lld",&x,&y,&z)
#define ss(ch) scanf("%s",ch)
#define pi(x) printf("%d",x)
#define pii(x,y) printf("%d %d",x,y)
#define piii(x,y,z) printf("%d %d %d",x,y,z)
#define pl(x) printf("%lld",x)
#define pll(x,y) printf("%lld %lld",x,y)
#define plll(x,y,z) printf("%lld %lld %lld",x,y,z)
#define ps(ch) printf("%s",ch)
#define Afridi 0
#define NL printf("\n")
#define SP printf(" ")
#define loj(x) printf("Case %d:",x)
#define Loj(x) printf("Case %lld:",x)
#define debug(x) printf("wow  %d !!\n",x)
#define Max 1000000
#define INF INT_MAX

typedef long long LL;
typedef unsigned long long ULL;

using namespace std;

LL Set(LL N,LL pos){return N=N | (1<<pos);}
LL reset(LL N,LL pos){return N= N & ~(1<<pos);}
bool check(LL N,LL pos){return (bool)(N & (1<<pos));}

bool dp[(1 << 20) + 10];
LL visit[(1 << 20) + 10],CS;
LL n,C,P,F;

struct node
{
    LL c,p,f;
};
node ara[25];

LL Find(LL mask)
{
    LL c=0,p=0,f=0,i;
    Rep(i,n)
    {
        if(check(mask,i))
        {
            c+=ara[i].c;
            p+=ara[i].p;
            f+=ara[i].f;
        }
    }
    if(c == C && f == F && p == P)return 0;
    if(c > C)return 1;
    if(p > P)return 1;
    if(f > F)return 1;
    else return -1;
}

bool fun(LL mask)
{
    LL my = Find(mask);
    if(my == 0)return 1;
    if(my>0)return 0;
    if(mask == (1 << n)-1)return 0;

    if(visit[mask] == CS)return dp[mask];

    LL i;
    bool ans = 0;
    Rep(i,n)
    {
        if(check(mask,i) == 0)
        {
            ans = ans | fun(Set(mask,i));
        }
    }

    visit[mask] = CS;
    return dp[mask] = ans;
}

int main()
{
    //freopen("new_years_resolution.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    LL t,T,i;
    sl(T);
    rep(t,T)
    {
        slll(P,C,F);
        sl(n);
        Rep(i,n)
        {
            slll(ara[i].p,ara[i].c,ara[i].f);
        }
        CS++;
        bool ans = fun(0);
        printf("Case #%lld: ",t);
        if(ans)puts("yes");
        else puts("no");
    }
    return 0;
}
