#include <set>
#include <bitset>
#include <queue>
#include <deque>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cstring>
#include <string>
#include <cassert>

#include <vector>
#include <list>
#include <map>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

typedef vector <int> vi;
typedef vector <vi> vvi;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <string> vs;

typedef long long LL; //NOTES:int64
typedef unsigned long long ULL; //NOTES:uint64
typedef unsigned uint;

const double pi = acos(-1.0); //NOTES:pi
const double eps = 1e-11; //NOTES:eps
const int MAXI = 0x7fffffff;
const int dx[] = {1, 0, -1, 0};
const int dy[] = {0, 1, 0, -1};
const char dz[] = "SENW";

#define rep(i,n)        for (int i=0;i<n;i++)
#define loop(i,a,b)     for (int i=(a),_b=(b); i<_b; i++)
#define rloop(i,b,a)    for (int i=(b)-1,_a=(a); i>=_a; i--)
#define Reset(a,b)      memset((a),(b),sizeof(a))

#define endline         putchar('\n')
#define space           putchar(' ')
#define EXIT(x)         {cout << x;return 0;}

#define fi              first
#define se              second
#define pb              push_back

#define S(x)            scanf("%d",&x);
#define input freopen("input.txt","r",stdin);
#define deb(i,a,n) for(i=0;i<n;i++){cout<<a[i]<<" ";}
#define db(x,y)          printf("%d %d\n",x,y);
#define debug(args...)	{dbg,args; cerr<<endl;}
#define dline			cerr<<endl
#define INF				(int)1e9
#define LINF			(long long)1e18
#define EPS				1e-9
#define maX(a,b)		((a)>(b)?(a):(b))
#define miN(a,b)		((a)<(b)?(a):(b))
#define abS(x)			((x)<0?-(x):(x))
#define mod             1000000007

bool isPossible(int G_P, int G_C, int G_F, int PCF_arr[][3], int start_i, int end_i) {
	int fac = 0;
	//cout<<start_i<<endl;
	//cout<<PCF_arr[start_i][0]<<" "<<PCF_arr[start_i][1]<<" "<<PCF_arr[start_i][2]<<endl;
	//cout<<G_P<<" "<<G_C<<" "<<G_F<<endl;
	if (G_P%PCF_arr[start_i][0] == 0 && G_C%PCF_arr[start_i][1] == 0 && G_F%PCF_arr[start_i][2] == 0 &&
		G_P/PCF_arr[start_i][0] == G_C/PCF_arr[start_i][1] && G_C/PCF_arr[start_i][1] == G_F/PCF_arr[start_i][2]) {
		//cout<<"fac for __"<<start_i<<" : "<<G_P/PCF_arr[start_i][0]<<endl;
		return true;
	} else if (start_i == end_i) {
		return false;
	}
	
	while (true) {
		int new_P = G_P - fac*PCF_arr[start_i][0];
		int new_C = G_C - fac*PCF_arr[start_i][1];
		int new_F = G_F - fac*PCF_arr[start_i][2];
		if ( new_P >= 0 && new_C >= 0 && new_F >= 0) {
			if (isPossible(new_P, new_C, new_F, PCF_arr, start_i + 1, end_i)) {
				//cout<<"fac for "<<start_i<<" : "<<fac<<endl;
				return true;
			}
		} else {
			return false;
		}
		fac++;
	}
}

int main() {
	int T;
	cin >>T;
	for (int i = 0; i < T; i++) {
		int G_P,G_C,G_F,N;
		cin>>G_P;
		cin>>G_C;
		cin>>G_F;
		cin>>N;
		int PCF_arr[N][3];
		for (int j =0; j < N; j++) {
			cin>>PCF_arr[j][0];
			cin>>PCF_arr[j][1];
			cin>>PCF_arr[j][2];
		}
		bool isP = isPossible(G_P, G_C, G_F, PCF_arr, 0, N - 1);
		cout<<"Case #"<<i+1<<": ";
		if (isP) {
			cout<<"yes";
		} else {
			cout<<"no";
		}
		cout<<endl;
	}
}