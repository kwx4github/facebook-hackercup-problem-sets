#include <iostream>
#include <vector>
#include <cstring>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <utility>
#include <algorithm>
#include <cstdlib>
#include <cstdio>

using namespace std;

int main() {
  ios_base::sync_with_stdio(false);
  freopen("new_years_resolution.txt", "rt", stdin);
  freopen("new_years_resolution.out", "wt", stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; ++i) {
    cout << "Case #" << i << ": ";
    int gp, gc, gf;
    cin >> gp >> gc >> gf;
    int n;
    cin >> n;
    int p[n], c[n], f[n];
    bool flag = true;
    for (int i = 0; i < n; ++i) {
      cin >> p[i] >> c[i] >> f[i];
    }
    for (int mask = 0; mask < (1<<n); ++mask) {
      int ps[n], cs[n] , fs[n];
      int top = 0;
      for (int j = 0; j < n; ++j) {
        if ((mask&(1<<j)) > 0) {
          ps[top] = p[j];
          cs[top] = c[j];
          fs[top++] = f[j];
        }
      }
      // cout << "Subset" << i << ": ";
      pair < pair < int, int> , int > ret;
      ret = make_pair(make_pair(0, 0), 0);
      for (int j = 0; j < top; ++j) {
        ret.first.first += ps[j];
        ret.first.second += cs[j];
        ret.second += fs[j];
      }
      if ((ret.first.first == gp) && (ret.first.second == gc) && (ret.second == gf)) {
        cout << "yes" << endl;
        flag = false;
      }
    }
    if (flag)
      cout << "no" << endl;
  }
  return 0;
}
