class Body(object):
    def __init__(self, protein, carb, fat):
        self.protein = protein
        self.carb = carb
        self.fat = fat


    def can_eat(self, p, c, f):
        return self.protein >= p and self.carb >= c and self.fat >= f


    def eat(self, p, c, f):
        return self.protein - p, self.carb - c, self.fat - f


    def is_full(self):
        return self.protein == self.carb == self.fat == 0


# solver
def solve(p_need, c_need, f_need, foods):
    if not foods:
        return False    
    body = Body(p_need, c_need, f_need)
    if body.is_full():
        return True
    eaten = []
    for food in foods:
        if body.can_eat(*food):
            p_need, c_need, f_need = body.eat(*food)
            eaten.append(solve(p_need, c_need, f_need, foods))

    if not eaten:
        return False
    return any(eaten)



# start
with open('input.txt') as f:
    data = f.readlines()[1:]

ans = []

i = 0
while i < len(data):
    p_need, c_need, f_need = [int(x) for x in data[i].split()]
    i += 1
    N = int(data[i])
    foods = []
    for j in range(N):
        i += 1
        foods.append([int(x) for x in data[i].split()])
    result = solve(p_need, c_need, f_need, foods)
    ans.append(result)
    i += 1

# write answer
answer = ""
for i, a in enumerate(ans):
    answer += "Case #%d: %s\n" % (i+1, 'yes' if a else 'no')

with open('ans_new_year.txt', 'w') as f:
    f.write(answer)



