//bansal0301
#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<algorithm>
#include<string.h>
#include<math.h>
#include<limits.h>
#include<vector>
#include<queue>
#include<ctype.h>
#include<map>
# define CASE int t;scanf("%d",&t);while(t--)
# define LL long long int
using namespace std;
int MIN(int a ,int b)
{
if(a>b)
return b;
return a;
}
int MAX(int a,int b)
{
if(a>b)
return a;
return b;
}
int main()
{

int T,t;
scanf("%d",&T);
for(t=1;t<=T;t++)
{
    int GP,GC,GF,p,c,f,n,i,j;
    scanf("%d %d %d",&GP,&GC,&GF);
    scanf("%d",&n);
    int a[n+2][5];

    for(i=1;i<=n;i++)
    {
        scanf("%d %d %d",&a[i][0],&a[i][1],&a[i][2]);

    }
    vector<pair<int ,int> >adj[GP+2][n+2];
    //cout<<"#\n";
    for(i=1;i<=n;i++)
    {
        p=a[i][0];
        c=a[i][1];
        f=a[i][2];
        if(p<=GP)
        {
        adj[p][i].push_back(make_pair(c,f));
     //   printf("i=%d p=%d c=%d f=%d \n",i,p,c,f);
        }
        for(j=1;j<=GP;j++)
        {

            for(int k=0;k<adj[j][i-1].size();k++)
            {
                int t1,t2,t3;
                t1=j;
                t2=adj[j][i-1][k].first;
                t3=adj[j][i-1][k].second;
                adj[j][i].push_back(make_pair(t2,t3));
       //          printf("i=%d p=%d c=%d f=%d \n",i,j,t2,t3);
                if(j+p<=GP)
                {
                    adj[j+p][i].push_back(make_pair(c+t2,f+t3));
         //            printf("i=%d p=%d c=%d f=%d \n",i,j+p,c+t2,f+t3);
                }

            }
        }
    }
   int flag=0;
    for(int k=0;k<adj[GP][n].size();k++)
    {
        int t2,t3;
        //printf("GP=%d n=%d\n",GP,n);
        t2=adj[GP][n][k].first;
        t3=adj[GP][n][k].second;
        //printf("t2=%d t3=%d\n");
        //printf("GC=%d GF=%d flag=%d\n",GC,GF,flag);
        if(t2==GC&&t3==GF)
        {
            flag=1;
          //  printf("\t kshaf\n");
            // printf("t2=%d t3=%d\n");
          //printf("GC=%d GF=%d flag=%d\n",GC,GF,flag);

            break;
        }
    }

    if(flag==0)
    {

    printf("Case #%d: no\n",t);
    }
    else
    {
     printf("Case #%d: yes\n",t);

    }

}

return 0;
}
