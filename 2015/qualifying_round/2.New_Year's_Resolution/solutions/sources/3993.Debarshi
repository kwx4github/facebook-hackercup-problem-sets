#include <cstdio>
#include <algorithm>
#include <iostream>
#include <ctime>
#include <cstdlib>
#include <vector>
#include <cstring>
#include <memory>
#include <queue>
#include <climits>
#include <vector>
#include <queue>

using namespace std;

int limit[3];
int store[20][3];
int cum[3]={0};

bool backTrack(int i,int N)
{
	if(i==(N-1))
	{
		if((cum[0]==limit[0]) && (cum[1]==limit[1]) && (cum[2]==limit[2]))
			return true;
		else
			return false;
	}
	if((cum[0]>limit[0])||(cum[1]>limit[1])||(cum[2]>limit[2]))
	{
		return false;
	}
	else if((cum[0]==limit[0]) && (cum[1]==limit[1]) && (cum[2]==limit[2]))
		return true;
	else
	{
		i++;
		//include i.e.1
		cum[0]+=store[i][0];
		cum[1]+=store[i][1];
		cum[2]+=store[i][2];

		bool value=backTrack(i,N);

		cum[0]-=store[i][0];
		cum[1]-=store[i][1];
		cum[2]-=store[i][2];

		if(value==true)
			return true;

		value=backTrack(i,N);
		
		return value;
	}
}

int main()
{
	int T;
	scanf("%d",&T);
	for(int t=1;t<=T;t++)
	{
		scanf("%d %d %d",&limit[0],&limit[1],&limit[2]);
		int N;
		scanf("%d",&N);
		for(int i=0;i<N;i++)
		{
			scanf("%d %d %d",&store[i][0],&store[i][1],&store[i][2]);
		}
		bool possible=backTrack(-1,N);

		cum[0]=0;
		cum[1]=0;
		cum[2]=0;

		if(possible)
			printf("Case #%d: yes\n",t);
		else
			printf("Case #%d: no\n",t);

	}
	return EXIT_SUCCESS;
}