#!/usr/bin/env python
# -*- coding: utf-8 -*-

def check(foods, good, ind, var):
    j = 0
    is_good = True
    cur_sum = 0
    while is_good and j < len(var):
        if var[j] == '1':
            cur_sum += foods[j][ind]
            if cur_sum > good[ind]:
                is_good = False
        else: # '0'
            pass
        j += 1
        if j == len(var) and cur_sum != good[ind]:
            is_good = False
    # print 'check: ind:', ind, ' var:', var, ' res:', is_good 
    return is_good

def find_possible(foods, good, ind, vars):
    res = list()
    if len(vars) == 1 and vars == ['all']:
        for dv in xrange(2 ** len(foods) - 1):
            value = ('0'*len(foods) + bin(dv)[2:])[-(len(foods)):]
            if check(foods, good, ind, value):
                res.append(value)
    elif len(vars) == 0:
        pass
    else:
        for var in vars:
            if check(foods, good, ind, var):
                res.append(var)
    return res

def main():
    in_file = open('B_in.txt')
    out_file = open('B_out.txt', 'w')
    index = 0
    lines = in_file.readlines()
    count = int(lines[0].rstrip('\n'))
    j = 1
    for i in xrange(count):
        res = 'no'
        he_want_line = lines[j].rstrip('\n').split(' ')
        he_want = [int(he_want_line[0]), int(he_want_line[1]), int(he_want_line[2])]
        food_count = int(lines[j + 1].rstrip('\n'))
        foods = list()
        for k in xrange(food_count):
            cur_line = lines[j + 2 + k].rstrip('\n').split(' ')
            cur = [int(cur_line[0]), int(cur_line[1]), int(cur_line[2])]
            foods.append(cur)
        # print 'index:', (index + 1)
        # print 'he_want:', he_want
        # print 'food_count:', food_count, ' foods:', foods
        if food_count == 1:
            if he_want == foods[0]:
                res = 'yes'
        else:
            s1 = find_possible(foods, he_want, 0, ['all'])
            s2 = find_possible(foods, he_want, 1, s1)
            s3 = find_possible(foods, he_want, 2, s2)
          # if index == 0:
          #     # print 's1:', s1
          #     # print 's2:', s2
          #     # print 's3:', s3
            if len(s3) != 0:
                res = 'yes'
        out_file.write('Case #' + str(index + 1) + ': ' + res + '\n')
      # print ('Case #' + str(index + 1) + ': ' + res + '\n')
        j += 2 + food_count
        index += 1
    in_file.close()
    out_file.close()

if  __name__ ==  "__main__" :
    main()
