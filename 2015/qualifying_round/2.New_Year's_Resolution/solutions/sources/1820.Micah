import java.util.*;
public class Resolution {

    static Scanner sc = new Scanner(System.in);
    
    public static void main(String[] str) {

    	int t = Integer.valueOf(sc.nextLine());
    	for (int i = 0; i < t; i++) {
    		String[] line2 = sc.nextLine().split(" +");
	    	int targetP = Integer.valueOf(line2[0]);
	    	int targetC = Integer.valueOf(line2[1]);
	    	int targetF = Integer.valueOf(line2[2]);
    		int n = Integer.valueOf(sc.nextLine());
    		boolean ans = f(n, targetP, targetC, targetF);
    		if (ans)
    			System.out.println("Case #" + (i + 1) + ": yes");
    		else
    			System.out.println("Case #" + (i + 1) + ": no");
    	}

    }

    static boolean f(int n, int targetP, int targetC, int targetF) {

    	int[] p = new int[n];
    	int[] c = new int[n];
    	int[] f = new int[n];

    	for (int i = 0; i < n; i++) {
    		
    		String[] line = sc.nextLine().split(" +");
    		p[i] = Integer.valueOf(line[0]);
    		c[i] = Integer.valueOf(line[1]);
    		f[i] = Integer.valueOf(line[2]);
    		
    	}

    	return isPossible(p, c, f, targetP, targetC, targetF);
    }

    static boolean isPossible(int[] p, int[] c, int[] f, int tP, int tC, int tF) {

    	if (0 == tP && 0 == tC && 0 == tF)
    		return true;

    	if (0 > tP || 0 > tC || 0 > tF)
    		return false;

    	for (int i = 0; i < p.length; i++) {

    		if (isPossible(p, c, f, tP - p[i], tC - c[i], tF - f[i]))
    			return true;
    	}

    	return false;

    }

}