<?php
/**
 * Created by PhpStorm.
 * User: penyaev
 * Date: 11.01.15
 * Time: 3:24
 */

function get_combinations_for_sum($rsorted_array, $desired_sum) {
  $result = array();
  $offset = 0;
  foreach ($rsorted_array as $key => $value) {
    $offset++;
    if ($value == $desired_sum) {
      $result[] = array($key);
      continue;
    }
    if ($value < $desired_sum) {
      $combinations = get_combinations_for_sum(array_slice($rsorted_array, $offset, null, true), $desired_sum - $value);
      foreach ($combinations as $combination) {
        array_unshift($combination, $key);
        sort($combination);
        $result[] = $combination;
      }
    }
  }
  return $result;
}




$filename = 'new_years_resolution.txt';
$file = fopen($filename, 'r');
if (!$file) {
  die ('Failed to open file '.$file);
}

$test_cases = intval(fgets($file));
for ($test_case = 1; $test_case <= $test_cases; ++$test_case) {
  list ($g_p, $g_c, $g_f) = array_map(function ($x) { return intval($x); }, explode(' ', fgets($file)));
  $food_count = intval(fgets($file));
  $array_p = array();
  $array_c = array();
  $array_f = array();
  for ($food_index = 0; $food_index < $food_count; ++$food_index) {
    list ($p, $c, $f) = array_map(function ($x) { return intval($x); }, explode(' ', fgets($file)));

    $array_p[$food_index] = $p;
    $array_c[$food_index] = $c;
    $array_f[$food_index] = $f;
  }

  arsort($array_p);
  arsort($array_c);
  arsort($array_f);

  $combinations_p = array_map(function ($x) { return implode('', $x); }, get_combinations_for_sum($array_p, $g_p));
  $combinations_c = array_map(function ($x) { return implode('', $x); }, get_combinations_for_sum($array_c, $g_c));
  $combinations_f = array_map(function ($x) { return implode('', $x); }, get_combinations_for_sum($array_f, $g_f));

  $result_combinations = array_intersect($combinations_p, $combinations_c, $combinations_f);

  printf('Case #%d: %s'.PHP_EOL, $test_case, count($result_combinations) ? 'yes' : 'no');
}


fclose($file);
