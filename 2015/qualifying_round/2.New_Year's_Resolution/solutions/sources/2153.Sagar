#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <algorithm>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

#define TYPE(m,a) __typeof(a) m = a
#define ALL(x) x.begin(), x.end()
#define SORT(x) sort(x.begin(),x.end())
#define PB(x) push_back((x))
#define FORALL(it,v) for(TYPE(it, (v).begin()); it != (v).end(); ++it)
#define PRINT1D(array, max_index) cout<<endl<<#array<<":   "; for(int i=0; i < (max_index); i++) cout<<array[i]<<"  ";
#define PRINT2D(array, maxr, maxc) cout<<endl<<#array<<":   "; for(int i=0; i < (maxr); i++) { for(int j=0;j<(maxc);j++) cout<<array[i][j]<<"  "; if(i!=(maxr) - 1)cout<<endl<<#array<<":   ";}

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef vector<VI> VVI;
typedef vector<VD> VVD;
typedef vector<VS> VVS;
typedef vector<long long> VL;
typedef vector<VL> VLL;
typedef vector<bool> VB;
typedef vector<VB> VBB;
void fileIO(){freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);}
typedef struct content{
    int pro;
    int car;
    int fat;
} Food;
int main()
{
    fileIO();
    int t7863;
    cin>>t7863;
    int pt=0;
    while(t7863--){
        int n;
        vector<int> gFood(3,0);
        cin>>gFood[0]>>gFood[1]>>gFood[2]>>n;

        vector< vector<int> > food(n, vector<int>(3,0));
        cout<<"Case #"<<++pt<<": ";
        for(int i=0;i<n;i++){
            for(int j=0;j<3;j++){
                cin>>food[i][j];
            }
        }
        int match = 1;
        int x = 1<<n;
        //cout<<x;
        for(int i=0;i<x;i++){
            vector<int> p(3,0);
            int q=0x1;
            for(int j=0;j<n;j++){
                if(q<<j & i){
                    for(int k=0;k<3;k++){
                        p[k] += food[j][k];
                        //cout<<p[k];
                    }
                }
            }

            match = 1;
            for(int j=0;j<3;j++){
                if(p[j]!=gFood[j]){
                    match = 0;
                }
            }
            if(match==1){
                cout<<"yes"<<endl;
                break;
            }
        }

        if(match==0){
            cout<<"no"<<endl;
        }
    }
}
