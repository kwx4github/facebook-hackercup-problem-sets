#include<bits/stdc++.h>

#define pb push_back
#define mp make_pair

using namespace std;

bool mom[110][110][4];
int n,m,sx,sy,dx,dy,dp[110][110];
string str[110];

int chan(char ch) {
	return (ch=='^')?0:((ch=='>')?1:((ch=='v')?2:3));
}

int xi[] = {0,1,0,-1};
int yi[] = {-1,0,1,0};

void dfs1(int x,int y,int dir,int id)
{
	if(x<0 || x>=n || y<0 || y>=m) return;
	if(str[x][y] != 'S' && str[x][y] != 'G' && str[x][y] != '.') return;
	mom[x][y][id] = 1;
	dfs1(x+xi[dir],y+yi[dir],dir,id);
}

int main()
{
	int t;
	cin >> t;
	int te = 1;
	while(t--) {
		cin >> n >> m;
		for(int i=0;i<n;i++) cin >> str[i];

		for(int i=0;i<n;i++) for(int j=0;j<m;j++) {
			if(str[i][j] == 'S') sx = i,sy = j;
			else if(str[i][j] == 'G') dx = i,dy = j;
		}

		for(int i=0;i<n;i++) for(int j=0;j<m;j++) for(int k=0;k<4;k++) mom[i][j][k] = 0;

		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				if(str[i][j] == '<' || str[i][j] == '^' || str[i][j] == '>' || str[i][j] == 'v') {
					int dir = chan(str[i][j]);
					for(int k=0;k<4;k++) {
						int nd = (dir+k)%4;
						dfs1(i+xi[nd],j+yi[nd],nd,k);
					}
				}
			}
		}

		for(int i=0;i<n;i++) for(int j=0;j<m;j++) dp[i][j] = 1e9;

		queue<int> q;

		dp[sx][sy] = 0;
		q.push(sx);
		q.push(sy);

		while(!q.empty()) {
			int xx = q.front();
			q.pop();
			int yy = q.front();
			q.pop();

			for(int i=0;i<4;i++) {
				if(xx+xi[i]>=0 && xx+xi[i]<n && yy+yi[i]>=0 && yy+yi[i]<m) {
					if(str[xx+xi[i]][yy+yi[i]] == '.' || str[xx+xi[i]][yy+yi[i]] == 'S' || str[xx+xi[i]][yy+yi[i]] == 'G') {
						if(dp[xx][yy]+1 < dp[xx+xi[i]][yy+yi[i]] && mom[xx+xi[i]][yy+yi[i]][(dp[xx][yy]+1)%4] == 0) {
							dp[xx+xi[i]][yy+yi[i]] = 1+dp[xx][yy];
							q.push(xx+xi[i]);
							q.push(yy+yi[i]);
						} else if(dp[xx][yy]+2 < dp[xx+xi[i]][yy+yi[i]] && mom[xx+xi[i]][yy+yi[i]][(dp[xx][yy]+2)%4] == 0 && mom[xx][yy][(dp[xx][yy]+1)%4] == 0) {
							dp[xx+xi[i]][yy+yi[i]] = 2+dp[xx][yy];
							q.push(xx+xi[i]);
							q.push(yy+yi[i]);
						} else if(dp[xx][yy]+3 < dp[xx+xi[i]][yy+yi[i]] && mom[xx+xi[i]][yy+yi[i]][(dp[xx][yy]+3)%4] == 0 && mom[xx][yy][(dp[xx][yy]+1)%4] == 0 && mom[xx][yy][(dp[xx][yy]+2)%4] == 0) {
							dp[xx+xi[i]][yy+yi[i]] = 3+dp[xx][yy];
							q.push(xx+xi[i]);
							q.push(yy+yi[i]);
						} else if(dp[xx][yy]+4 < dp[xx+xi[i]][yy+yi[i]] && mom[xx+xi[i]][yy+yi[i]][(dp[xx][yy]+4)%4] == 0 && mom[xx][yy][(dp[xx][yy]+1)%4] == 0 && mom[xx][yy][(dp[xx][yy]+2)%4] == 0 && mom[xx][yy][(dp[xx][yy]+3)%4] == 0) {
							dp[xx+xi[i]][yy+yi[i]] = 4+dp[xx][yy];
							q.push(xx+xi[i]);
							q.push(yy+yi[i]);
						} 
					}
				}
			}
		}

		cout << "Case #" << te++ << ": ";
		if(dp[dx][dy]==1e9) cout << "impossible";
		else cout << dp[dx][dy];
		cout << endl;	
	}
}