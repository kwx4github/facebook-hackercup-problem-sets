#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys

input = sys.stdin.read()
tokens = input.split("\n")
tokenI = 0


def solve():
    global tokens
    global tokenI

    GP, GC, GF = tokens[tokenI].split()
    tokenI+=1
    GP = int(GP)
    GC = int(GC)
    GF = int(GF)

    #print GP, GC, GF

    N = int(tokens[tokenI])
    tokenI+=1

    my_dict = {}
    my_dict[(0,0,0)] = True

    for i in range(N):
        P, C, F = tokens[tokenI].split()
        tokenI+=1
        P = int(P)
        C = int(C)
        F = int(F)
        #print P, C, F

        toAdd = []
        for key in my_dict:
            LP, LC, LF = key
            #print LP, LC, LF
            if LP + P < 1001 and LC + C < 1001 and LF + F < 1001:
                toAdd.append((LP + P, LC + C, LF + F))

        for ta in toAdd:
            my_dict[ta] = True

    if my_dict.has_key((GP, GC, GF)):
        print "yes"
    else:
        print "no"

def mainLoop():
    global tokens
    global tokenI

    T = int(tokens[tokenI])
    tokenI+=1

    # print T

    for i in range(T):
        print "Case #%d:" % (i+1) , 
        solve()

# print tokens

mainLoop()
