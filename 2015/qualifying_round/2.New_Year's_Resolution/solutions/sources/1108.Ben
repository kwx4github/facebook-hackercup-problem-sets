def test(pg, cg, fg, foods, memo):
    if pg == 0 and cg == 0 and fg == 0:
        return True
    if len(foods) == 0 or pg < 0 or cg < 0 or fg < 0:
        return False
    if (pg,cg,fg) not in memo:
        (p,c,f) = foods[0]
        if test(pg - p, cg - c, fg - f, foods[1:], memo) or test(pg, cg, fg, foods[1:], memo):
            memo[(pg,cg,fg)] = len(foods)
        else:
            memo[(pg,cg,fg)] = -1

    return memo[(pg,cg,fg)] > -1 and memo[(pg,cg,fg)] <= len(foods)

def parseTriples():
    return map(int, str.split(raw_input()))

T = int(raw_input())
for t in xrange(1, T+1):
    pg, cg, fg = parseTriples()
    N = int(raw_input())
    foods = [parseTriples() for n in xrange(N)]
    if test(pg, cg, fg, foods, {}):
        print "Case #%d"%t, "yes"
    else:
        print "Case #%d"%t, "no"
