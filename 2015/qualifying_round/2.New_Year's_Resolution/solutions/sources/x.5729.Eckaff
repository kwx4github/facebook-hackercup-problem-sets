#include <cstdio>
#include <climits>
#include <algorithm>
#include <vector>
#include <tuple>

using namespace std;

typedef tuple<int, int, int> iii;

bool caneat(iii *foo, int len, int ga, int gb, int gc) {
    int a, b, c;
    tie(a, b, c) = *foo;
    if (ga < 0 || gb < 0 || gc < 0) return false;
    if (len == 1) {
        if (ga == a && gb == b && gc == c) return true;
        else return false;
    }
    if (caneat(foo+1, len-1, ga-a, gb-b, gc-c)) return true;
    else return caneat(foo+1, len-1, ga, gb, gc);
}

int main() {
    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; i++) {
        int ga, gb, gc;
        scanf("%d %d %d", &ga, &gb, &gc);
        int n;
        scanf("%d", &n);
        iii a[20];
        for (int j = 0; j < n; j++) {
            scanf("%d %d %d", &get<0>(a[j]), &get<1>(a[j]), &get<2>(a[j]));
        }
        printf("Case #%d: %s\n", i+1, caneat(a, n, ga, gb, gc) ? "yes" : "no");
    }
    return 0;
}
