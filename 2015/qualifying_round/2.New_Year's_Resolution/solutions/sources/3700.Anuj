import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;


public class NewYearResolution {

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new FileReader("res/NewYearResolution/new_years_resolution.txt"));
		BufferedWriter bw = new BufferedWriter(new FileWriter("res/NewYearResolution/NewYearResolutionOutput.txt"));
		int t = Integer.parseInt(br.readLine());
		for(int i = 1; i <= t; i++) {
			CalorieContent totalCal = new CalorieContent(br.readLine().split(" "));
			int n = Integer.parseInt(br.readLine());
			CalorieContent[] foodCal = new CalorieContent[n];
			for(int j = 0; j < n; j++) {
				foodCal[j] = new CalorieContent(br.readLine().split(" "));
			}
			if(isExactCalorieIntakePossible(totalCal, foodCal, 0)) {
				bw.write("Case #" + i + ": yes");
			} else {
				bw.write("Case #" + i + ": no");
			}
			if(i != t) {
				bw.write("\n");
			}
		}
		br.close();
		bw.close();
	}
	
	private static boolean isExactCalorieIntakePossible(CalorieContent totalCalLeft, CalorieContent[] foodCal, int index) {
		for(int i = index; i < foodCal.length; i++) {
			CalorieContent tempCal = new CalorieContent(totalCalLeft);
			tempCal.protein -= foodCal[i].protein;
			tempCal.carbs -= foodCal[i].carbs;
			tempCal.fat -= foodCal[i].fat;
			if(tempCal.getValue() == 0) {
				return true;
			} else if(tempCal.getValue() > 0) {
				if(isExactCalorieIntakePossible(tempCal, foodCal, i + 1)) {
					return true;
				}
			} else {
				if(isExactCalorieIntakePossible(totalCalLeft, foodCal, i + 1)) {
					return true;
				}
			}
		}
		return false;
	}

	private static class CalorieContent {
		private int protein;
		private int carbs;
		private int fat;
		
		public CalorieContent(String[] calorie) {
			this.protein = Integer.parseInt(calorie[0]);
			this.carbs = Integer.parseInt(calorie[1]);
			this.fat = Integer.parseInt(calorie[2]);
		}
		
		public CalorieContent(CalorieContent newCal) {
			this.protein = newCal.protein;
			this.carbs = newCal.carbs;
			this.fat = newCal.fat;
		}
		
		private int getValue() {
			if(protein == 0 && fat == 0 && carbs == 0) {
				return 0;
			} else if (protein >= 10 && fat >= 10 && carbs >= 10) {
				return 1;
			} else {
				return -1;
			}
		}
	}
}
