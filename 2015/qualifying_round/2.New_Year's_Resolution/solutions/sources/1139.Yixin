#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

bool eatExact(vector<int> &coll, int Gp, int Gc, int Gf) {
	int N = coll.size()/3;
	int M = 1;
	for(int i = 0; i < N; i ++) {
		M *= 2;
	}
	for(int i = 0; i < M; i ++) {
		int tmp = i;
		int p = Gp;
		int c = Gc;
		int f = Gf;
		for(int j = 0; j < N; j ++) {
			if(tmp % 2 == 1) {
				p -= coll[j*3];
				c -= coll[j*3 + 1];
				f -= coll[j*3 + 2];
				if(p == 0 && c == 0 && f == 0) {
					return true;
				}
				if(p < 0 || c < 0 || f < 0) {
					break;
				}
			}
			tmp /= 2;
		}
	}
	return false;
}

int main() {
	int T;
	cin>>T;
	for (int i = 1; i <= T; i++) {
		int Gp, Gc, Gf;
		int N;
		cin>>Gp>>Gc>>Gf>>N;
		int tmp;
		vector<int> coll;
		for(int j = 0; j < 3*N; j ++) {
			cin>>tmp;
			coll.push_back(tmp);
		}
		bool flag = eatExact(coll, Gp, Gc, Gf);
		if(flag) {
			cout << "Case #" << i << ": " <<"yes"<<endl;
		} else {
			cout << "Case #" << i << ": " <<"no"<<endl;
		}
	}
	return 0;
}
