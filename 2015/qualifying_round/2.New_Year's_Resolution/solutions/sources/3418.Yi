#include<stdio.h>
#include<iostream>
#include<vector>

using namespace std;

bool solve(int pro, int cab, int fat, vector<int> pros, vector<int> cabs, vector<int> fats, int index) {
  if (pro == 0 && cab == 0 && fat == 0)
    return true;
  if (index == pros.size())
    return false;
  bool temp;
  if( pro >= pros[index] && cab >= cabs[index] && fat >= fats[index]) {
    if(solve(pro-pros[index], cab-cabs[index], fat-fats[index], pros, cabs, fats, index + 1))
      return true;
    else
      return solve(pro, cab, fat, pros, cabs, fats, index+1);
  }
  else
    return solve(pro, cab, fat, pros, cabs, fats,index+1);
}

int main() {
  int T, N;
  cin >> T;
  int count = 1;
  while (T--) {
    int pro, cab, fat;
    cin >> pro >> cab >> fat;
    cin >> N;
    vector<int> pros (N, 0);
    vector<int> cabs (N, 0);
    vector<int> fats (N, 0);

    for(int i = 0; i < N; i++) {
      cin >> pros[i] >> cabs[i]>>  fats[i];
    }

    bool ret = solve(pro, cab, fat, pros, cabs, fats, 0);
    if(ret)
      cout << "Case #" << count++<< ": yes" << endl;
    else
      cout << "Case #" << count++ << ": no" << endl;
  }
  return 0;
}
