text_file = open("new_years_resolution.txt", "r")
lines = text_file.readlines()
integers = []

for e in lines:
    temp = 0
    for i in e:
        if ((not (ord(i) == 10)) and (not (ord(i) == 32))):
            temp *= 10
            temp += (ord(i)-48)
        if ((ord(i) == 32) or (ord(i) == 10)):
            integers.append(temp)
            temp = 0
print integers

def pot(n):
    c = 1
    for e in range(0,n):
        c *= 2
    return c

def toBin(n):
    a = []
    c = 1
    temp = n
    while (c <= n):
        c *= 2
    while c >= 1:
        if ((temp - c) >= 0):
            a.append(1)
            temp -= c
        else:
            a.append(0)
        c /= 2
    b = []
    for e in range(1,len(a)):
        b.append(a[e])
    return b

def isPossible(a,b,c, foodlist):
    #food = (3049, 298, 2987)
    newlist = []
    for e in foodlist:
        if ((e[0] <= a) and (e[1] <= b) and(e[2] <= c)):
            newlist.append(e)
    newlist.sort()
    possible = False
    counter = pot(len(newlist))-1
    perm = 1
    while ((counter > 0) and (not possible)):
        atemp = 0
        btemp = 0
        ctemp = 0
        table = toBin(perm)
        ct = 0 #reading from front
        while ((len(table)) < (len(newlist))):
               table.reverse()
               table.append(0)
               table.reverse()
        for e in table:
            if (e == 1):
                atemp += (newlist[ct])[0]
                btemp += (newlist[ct])[1]
                ctemp += (newlist[ct])[2]
            ct += 1
        possible = ((atemp == a) and (btemp == b) and (ctemp == c))
        perm += 1
        counter -= 1
    return possible

c = 1
num = 1
buildOutput = ""
while c < len(integers)-2:
    ai = integers[c]
    bi = integers[c+1]
    ci = integers[c+2]
    c += 3
    foodlistin = []
    c += 1
    for e in range(0,integers[c-1]):
        foodlistin.append((integers[c], integers[c+1], integers[c+2]))
        c += 3
    temp = isPossible(ai,bi,ci,foodlistin)
    if temp:
        buildOutput += "Case #" + str(num) + ": yes\n"
        print "Case #" + str(num) + ": yes"
    else:
        print "Case #" + str(num) + ": no"
        buildOutput += "Case #" + str(num) + ": no\n"
    num += 1


text_file = open("Output.txt", "w")
text_file.write(buildOutput)
text_file.close()
        

