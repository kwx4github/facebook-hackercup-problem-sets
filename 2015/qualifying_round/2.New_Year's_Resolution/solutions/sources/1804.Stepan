// Happy new year! ;)

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cassert>
#include <cctype>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <string>
#include <iomanip>
#include <numeric>
#include <vector>
#include <queue>
#include <stack>
#include <deque>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <tuple>
using namespace std;

#ifdef KVARK
	#include "debug.h"
#else
	#define dbg(...) (void(1))
	#define dbgp(...) (void(1))
	#define dbg_range(...) (void(1))
#endif
#define endl "\n"



void task(){
	ios_base::sync_with_stdio(0);
	int tests;
	cin >> tests;
	for (int test = 1; test <= tests; ++test) {
		int a_, b_, c_;
		cin >> a_ >> b_ >> c_;
		int n;
		cin >> n;
		int a[22], b[22], c[22];
		for (int i = 0; i < n; ++i)
			cin >> a[i] >> b[i] >> c[i];
		int ok = 0;
		for (int mask = 0; mask < 1 << n; ++mask) {
			int aa = 0, bb = 0, cc = 0;
			for (int i = 0; i < 20; ++i)
				if ((mask & (1 << i)) > 0)
					aa += a[i], bb += b[i], cc += c[i];
			if (aa == a_ && bb == b_ && cc == c_)
				ok = 1;
		}

		cout << "Case #" << test << ": " << (ok ? "yes" : "no") << (test < tests ? "\n" : "");
	}
}

int main() {
#ifdef KVARK
	freopen("new_years_resolution.txt", "r", stdin);
	//freopen("debug.txt", "w", stderr);
	freopen("output.txt", "w", stdout);
#else
	freopen("cooking_the_books.txt", "r", stdin);
	//freopen("debug.txt", "w", stderr);
	freopen("output.txt", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif

	task();

#ifdef KVARK
	//my_debug::printProcessInfo();
#endif
	return 0;
}
