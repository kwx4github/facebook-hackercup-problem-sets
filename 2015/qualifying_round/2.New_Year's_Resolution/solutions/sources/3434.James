#include <iostream>
#include <cstring>

using namespace std;

int pp[22];
int cc[22];
int ff[22];
//char mem[1001][1001][1001][21];
int n;
bool found;

bool solve(int p, int c, int f, int cur) {
  //cout << p << " " << c << " " << f << " " << cur << endl;
  if (found) return true;
  /*
  if (mem[p][c][f][cur] != -1) {
    if (mem[p][c][f][cur] == 1) {
      found = true;
    }
    return mem[p][c][f][cur];
  }
  */
  if (p == 0 && c == 0 && f == 0) {
    found = true;
    return true;
  }
  if (p < 0 || c < 0 || f < 0) return false;
  if (cur == n) return false;
  if (solve(p-pp[cur],c-cc[cur],f-ff[cur],cur+1) || solve(p,c,f,cur+1)) {
    //mem[p][c][f][cur] = 1;
    return true;
  } else {
    //mem[p][c][f][cur] = 0;
    return false;
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  int t;
  cin >> t;
  for (int ii = 1; ii <= t; ii++) {
    found = false;
    //memset(mem, -1, sizeof mem);
    int p, c, f;
    cin >> p >> c >> f;
    cin >> n;
    for (int i = 0; i < n; i++) {
      cin >> pp[i] >> cc[i] >> ff[i];
    }
    if (solve(p, c, f, 0)) {
      cout << "Case #" << ii << ": yes\n";
    } else {
      cout << "Case #" << ii << ": no\n";
    }
  }
  return 0;
}