#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:256000000")
#define _USE_MATH_DEFINES
#include<iostream>
#include<vector>
#include<string>
#include<stack>
#include<algorithm>
#include<cmath>
#include<set>
#include<queue>
#include<sstream>
#include<utility>
#include<map>
#include<ctime>
#include<cstdio>
#include<cassert>
#include<functional>




using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef pair<char, char> pcc;
typedef pair<double, double> pdd;

#define show(x) cerr << x
#define debug(x) show(#x << ": " << (x) << endl)

const long double PI = 3.14159265358979323846;
const long double gammama = 0.57721566490153286060;
const long double eps = 1e-5;
const int INF = 1000 * 1000 * 1000 + 1;
const ll LINF = (ll)1000 * 1000 * 1000 * 1000 * 1000 * 1000;
const ll mod = 1000 * 1000 * 1000 + 7;


void solve() {
      vector<vector<int> > a(3, vector<int>(1));
      cin >> a[0][0] >> a[1][0] >> a[2][0];
      int n;
      cin >> n;
      for (int i = 0; i < 3; ++i)
            a[i].resize(n + 2);
      for (int i = 0; i < n; ++i)
            for (int j = 0; j < 3; ++j)
                  cin >> a[j][i + 1];
      int up = 1 << n;
      for (int mask = 0; mask < up; ++mask) {
            for (int i = 0; i < 3; ++i)
                  a[i][n + 1] = 0;
            for (int i = 0; i < n; ++i) {
                  if ((mask >> i) & 1) {
                        for (int j = 0; j < 3; ++j) {
                              a[j][n + 1] += a[j][i + 1];
                        }
                  }
            }
            bool ok = true;
            for (int i = 0; i < 3; ++i)
                  ok = ok && (a[i][0] == a[i][n + 1]);
            if (ok) {
                  cout << "yes\n";
                  return;
            }
      }
      cout << "no\n";
}

#define LOCAL

int main() {
      //ios_base::sync_with_stdio(0);
#ifdef LOCAL
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
#endif
      int numberOfTests;
      cin >> numberOfTests;
      for (int testId = 0; testId < numberOfTests; ++testId) {
            cout << "Case #" << testId + 1 << ": ";
            solve();
            std::cerr << testId << endl;
      }

#ifdef LOCAL
      cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
#endif	
      return 0;
}
