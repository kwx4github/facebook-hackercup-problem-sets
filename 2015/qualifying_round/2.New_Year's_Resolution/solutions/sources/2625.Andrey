#include <bits/stdc++.h>
using namespace std ;

struct Solve {

Solve(){
}

void solveOne( ifstream &in, ofstream &out ){
    int target1, target2, target3 ; in >> target1 >> target2 >> target3 ;
    int n ; in >> n ;
    vector< int > values1( n ), values2( n ), values3( n ) ;
    int maskAll = 0 ;
    for ( int i = 0 ; i < n ; ++i ){
        maskAll = maskAll * 2 + 1 ;
        in >> values1[ i ] >> values2[ i ] >> values3[ i ] ;
    }
    for ( int mask = 0 ; mask <= maskAll ; ++mask ){
        int value1 = 0, value2 = 0, value3 = 0 ;
        for ( int index = 0, maskOne = 1 ; index < n ; ++index ){
            if ( ( mask & maskOne ) > 0 ){
                value1 += values1[ index ] ;
                value2 += values2[ index ] ;
                value3 += values3[ index ] ;
            }
            maskOne *= 2 ;
        }
        if ( value1 == target1 && value2 == target2 && value3 == target3 ){
            out << "yes" ;
            return ;
        }
    }
    out << "no" ;
}

void solveAll(){
    ifstream in( "C:\\data\\in.txt", ios::in ) ;
    ofstream out( "C:\\data\\out.txt", ios::out ) ;
    int tasksCount ; in >> tasksCount ;
    for ( int task = 1 ; task <= tasksCount ; ++task ){
        out << "Case #" << task << ": " ;
        solveOne( in, out ) ;
        out << endl ;
    }
}

} ;

int main(){ 
    Solve solve ;
   solve.solveAll() ;
   return 0 ;
}











