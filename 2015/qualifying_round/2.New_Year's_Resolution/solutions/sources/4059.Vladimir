<?php
	$input = fopen('new_years_resolution.txt', 'r');
	$output = fopen('output.txt', 'w');

	$test_case_count = substr(fgets($input), 0, -1);

	for ($i = 1; $i <= $test_case_count; $i++) {
		$expect = fgets($input); if (!$expect) return;

		$expect = substr($expect, 0, -1);
		$expect = preg_replace('|\s+|', ' ', $expect);
		$expect = explode(' ', $expect);

		$product_count = fgets($input); if (!$product_count) return;

		$products = array(
			0 => array(),
			1 => array(),
			2 => array(),
		);

		for ($j = 1; $j <= (int)$product_count; $j++) {
			$product = fgets($input); if (!$product) return;

			$product = substr($product, 0, -1);
			$product = preg_replace('|\s+|', ' ', $product);
			$product = explode(' ', $product);

			$products[0][] = $product[0];
			$products[1][] = $product[1];
			$products[2][] = $product[2];
		}

		foreach($products as $key=>$product) {
			$clear_products = array(
				0 => array(),
				1 => array(),
				2 => array(),
			);

			foreach($products[$key] as $i_key=>$i_product) {
				if ($i_product <= $expect[$key]) {
					$clear_products[0][] = $products[0][$i_key];
					$clear_products[1][] = $products[1][$i_key];
					$clear_products[2][] = $products[2][$i_key];
				}
			}

			$products = $clear_products;
		}

		if (isExactAmountExists($expect[0], $expect[1], $expect[2], $products[0], $products[1], $products[2])) {
			fputs($output, sprintf("Case #%d: yes\n", $i));
			continue;
		}

		fputs($output, sprintf("Case #%d: no\n", $i));
	}

	fclose($input);
	fclose($output);

	function isExactAmountExists($expect_protein, $expect_carbohydrates, $expect_fat, $protein, $carbohydrates, $fat) {
		$found = false;

		for ($i = 1, $max = pow(2, count($protein) + 1) - 1; $i <= $max; $i++) {
			$map = str_pad(decbin($i), count($protein), '0', STR_PAD_LEFT);

			$sum = 0;

			foreach($protein as $key=>$val) {
				if ($map[$key] == 1) {
					$sum += $val;
				}
			}

			if ($sum == $expect_protein) {
				$sum = 0;

				foreach($carbohydrates as $key=>$val) {
					if ($map[$key] == 1) {
						$sum += $val;
					}
				}

				if ($sum == $expect_carbohydrates) {
					$sum = 0;

					foreach($fat as $key=>$val) {
						if ($map[$key] == 1) {
							$sum += $val;
						}
					}

					if ($sum == $expect_fat) {
						$found = true;
						break;
					}
				}
			}
		}
		return $found;
	}