package test;

import java.io.*;
import java.util.*;


public class New_Years_Resolution {
	public static void main(String []args) {
		BufferedReader br = null;
		BufferedWriter bw = null;
		int T = 0, D = 3;
		
		try {
			br = new BufferedReader(new FileReader("C:\\users\\guzh\\desktop\\new_years_resolution.txt"));
			File output = new File("C:\\users\\guzh\\desktop\\new_years_resolution_output.txt");
			output.createNewFile();
			bw = new BufferedWriter(new FileWriter(output));
			
			String line = br.readLine();
			if (line != null) T = Integer.parseInt(line);
			line = br.readLine();
			
			int count1 = 1;
			while (line != null && count1 <= T) {
				List<Integer> goal = new ArrayList<Integer>();
				String nums[] = null;
				if (line != null)  nums = line.split(" ");
				for (String num : nums) goal.add(Integer.parseInt(num));
				
				line = br.readLine();
				int N = Integer.parseInt(line);
				
				line = br.readLine();
				int count2 = 0;
				List<List<Integer>> foods = new ArrayList<List<Integer>>();
				while (line != null && count2 < N) {
					nums = line.split(" ");
					List<Integer> food = new ArrayList<Integer>();
					for (String num : nums) food.add(Integer.parseInt(num));
					foods.add(food);
					
					line = br.readLine();
					count2++;
				}
				List<Integer> sum = new ArrayList<Integer>();
				for (int i = 0; i < D; i++) sum.add(0);
				if (helper(goal, foods, 0, sum, D))
					bw.write("Case #" + count1 + ": yes\n");
				else
					bw.write("Case #" + count1 + ": no\n");
				count1++;
			}
			br.close();
			bw.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		

	}
	static boolean helper(List<Integer> goal, List<List<Integer>> foods, int i, List<Integer> sum, int D) {
		boolean flag = true;
		for (int j = 0; j < D; j++) {
			if (goal.get(j) < sum.get(j)) return false;
			else if (goal.get(j) > sum.get(j)) flag = false;
		}
		if (flag) return true;
		for (int j = i; j < foods.size(); j++) {
			List<Integer> sum2 = new ArrayList<Integer>();
			for (int k = 0; k < D; k++) {
				sum2.add(sum.get(k) + foods.get(j).get(k));				
			}
			if (helper(goal, foods, j + 1, sum2, D)) return true;
		}
		return false;
	}
}
