// Bismillahirrahmanirrahim
// AgriCoder IPB
#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <string>
#include <cctype>
#include <cstdlib>
#include <utility>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <sstream>

using namespace std;

#define FOR(i, agri, coder) for (int i = (int)agri; i <= (int)coder; i++)
#define REP(agri,coder) for (int agri = 0; agri < (int)coder; agri++)
#define FOREACH(i,agricoder) for (typeof((agricoder).end()) i = (agricoder).begin(); i != (agricoder).end(); ++i)
#define RESET(agri,coder) memset(agri, coder, sizeof(agri))
#define pb push_back
#define mp make_pair
#define INF 1000000000
#define NL printf("==========================\n")

int arahbar[8] = {0,1,0,-1,1,1,-1,-1};
int arahkol[8] = {1,0,-1,0,1,-1,-1,1};
typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;

typedef struct {
    int x,y,z;
} makanan;
int main() {
    int satu,dua,tiga;
    int tests;
    int n;
    makanan ivan[30];
    scanf("%d",&tests);
    FOR(zz,1,tests) {
        scanf("%d %d %d",&satu,&dua,&tiga);
        scanf("%d",&n);
        REP(i,n) scanf("%d %d %d",&ivan[i].x,&ivan[i].y,&ivan[i].z);

        bool bisa = false;
        REP(i, 1<<n) { // setiap kemungkinan
            makanan temp;
            temp.x = temp.y = temp.z = 0;

            REP(j,n) {
                if (i & (1<<j)) {
                    temp.x += ivan[j].x;
                    temp.y += ivan[j].y;
                    temp.z += ivan[j].z;
                }
            }
            if (temp.x==satu && temp.y == dua && temp.z==tiga) {
                bisa = true;
                break;
            }
        }

        printf("Case #%d: ",zz);
        if (bisa) printf("yes\n");
        else printf("no\n");
    }
    return 0;
}


// Alhamdulillahirabbilalamin
