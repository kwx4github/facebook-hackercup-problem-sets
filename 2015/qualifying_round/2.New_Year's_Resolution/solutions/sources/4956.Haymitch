f = open("new_years.txt", "r")

s = f.read().split()

def tokens():
  i = 0
  l = len(s)
  while i < l:
    yield s[i]
    i += 1

token = tokens()

T = int(next(token))
Gp = []
Gc = []
Gf = []
N = -1
xs = []

def update((Cp, Cc, Cf), current):
  succ = current + 1
  mask = 1
  for i in xs:
    b1 = (current & mask) != 0
    b2 = (succ & mask) != 0
    if (b1 == b2):
      return (Cp, Cc, Cf)
    elif (b2 == False):
      (Cp, Cc, Cf) = (Cp - Gp[i], Cc - Gc[i], Cf - Gf[i])
    elif (b2 == True):
      (Cp, Cc, Cf) = (Cp + Gp[i], Cc + Gc[i], Cf + Gf[i])
    mask = mask << 1
  return (Cp, Cc, Cf)

for i in xrange(T):
  P = int(next(token))
  C = int(next(token))
  F = int(next(token))
  N = int(next(token))
  xs = range(N); xs.reverse()
  Gp = [0] * N
  Gc = [0] * N
  Gf = [0] * N
  get = False
  for j in xrange(N):
    Gp[j] = int(next(token))
    Gc[j] = int(next(token))
    Gf[j] = int(next(token))
  vals = (Cp, Cc, Cf) = (0, 0, 0)
  for choice in xrange((1 << N) - 1):
    vals = update(vals, choice)
    if (vals == (P, C, F)):
      get = True
      break
  if get:
    print "Case " + str(i + 1) +": yes"
  else:
    print "Case " + str(i + 1) +": no"

  
