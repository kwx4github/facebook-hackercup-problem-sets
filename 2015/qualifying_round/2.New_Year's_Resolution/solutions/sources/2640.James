//
//  AppDelegate.m
//  HackerCup2015ObjC
//
//  Created by James Webb on 1/10/15.
//  Copyright (c) 2015 James Webb. All rights reserved.
//

#import "AppDelegate.h"

@interface NSString (jw)

-(int)digitAtIndex:(NSUInteger)index;
-(NSString *)stringBySwappingValuesAtIndices:(NSUInteger)index1 and:(NSUInteger)index2;

@end

@implementation NSString (jw)

-(int)digitAtIndex:(NSUInteger)index
{
    return [self substringWithRange:NSMakeRange(index, 1)].intValue;
}

-(NSString *)stringBySwappingValuesAtIndices:(NSUInteger)index1 and:(NSUInteger)index2
{
    NSRange range1 = NSMakeRange(index1, 1);
    NSRange range2 = NSMakeRange(index2, 1);
    
    NSString *digit1 = [self substringWithRange:range1];
    NSString *digit2 = [self substringWithRange:range2];
    
    NSString *result = [self stringByReplacingCharactersInRange:range1 withString:digit2];
    result = [result stringByReplacingCharactersInRange:range2 withString:digit1];
    
    return result;
}

@end

@interface AppDelegate ()

@end

@implementation AppDelegate


- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    NSArray *lines = [[NSString stringWithContentsOfFile:@"/Users/james/Downloads/new_years_resolution.txt" encoding:NSUTF8StringEncoding error:nil] componentsSeparatedByString:@"\n"];
    
    int count = [lines[0] intValue];
    int casePointer = 1;
    
    for (NSUInteger i=1; i<=count; i++) {
        printf("%s\n", [self handleCaseInArray:lines startingAtLine:casePointer caseIndex:i].UTF8String);
        
        casePointer += ((NSString *)lines[casePointer + 1]).integerValue + 2;
    }

    return YES;
}

-(NSString *)handleCaseInArray:(NSArray *)lines startingAtLine:(NSUInteger)index caseIndex:(NSUInteger)caseIndex
{
    NSArray *targetsAsStrings = [lines[index++] componentsSeparatedByString:@" "];
    
    int targets[3];
    
    for (int i=0; i<3; i++) {
        targets[i] = [targetsAsStrings[i] intValue];
    }
    
    int foodsCount = [lines[index++] intValue];
    
    NSMutableArray *foodsAsStrings = [NSMutableArray arrayWithCapacity:foodsCount];
    
    for (int i=0; i<foodsCount; i++) {
        [foodsAsStrings addObject:lines[index++]];
    }
    
    int foods[foodsCount][3];
    
    for (int i=0; i<foodsCount; i++) {
        NSArray *subFoods = [foodsAsStrings[i] componentsSeparatedByString:@" "];

        for (int j=0; j<3; j++) {
            foods[i][j] = [subFoods[j] intValue];
        }
    }
    
    BOOL match = NO;
    
    NSUInteger maxConfig = 1 << foodsCount;
    
    int testFood[3];
    
    // For every possible combination of foods, or until a match is found
    for (NSUInteger i=0; i<maxConfig && !match; i++) {

        // Reset the subtotal for this combination
        for (int j=0; j<3; j++) {
            testFood[j] = 0;
        }
        
        // Go through each food, and see if it's in this combination. If it is, add its components.
        for (int j=0; j<foodsCount; j++) {
            if (1 << j & i) {
                for (int k=0; k<3; k++) {
                    testFood[k] += foods[j][k];
                }
            }
        }
        
        // If all three match the target, success.
        match = ((testFood[0] == targets[0]) && (testFood[1] == targets[1]) && (testFood[2] == targets[2]));
    }
    
    return [NSString stringWithFormat:@"Case #%lu: %s", caseIndex, match ? "yes" : "no"];
}











@end
