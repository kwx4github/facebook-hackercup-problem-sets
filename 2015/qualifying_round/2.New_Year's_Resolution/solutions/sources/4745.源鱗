//============================================================================
// Name        : Facebook_hack_cup_2015_Q2.cpp
// Author      : jackson huang
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================


#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <string>
#include <vector>
#include <iostream>
#include <map>
#include <set>
#include <algorithm>
#include <queue>
#include <stack>
#include <sstream>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define all(x) x.begin() , x.end()
#define SZ(x) (int)(x.size())
#define STRLEN(x) (int)(strlen(x))
#define F0(i,n) for(i=0;i<n;i++)
#define F1(i,n) for(i=1;i<=n;i++)
ll gcd(ll x, ll y) { return y ? gcd(y, x%y) : x; }

const int maxn = 1000 ;
char line[maxn] ;
int cnt ;
int i,j,k,m,n,x,y,z;
int tt, tn;

template <class T>
void printAll(vector<T> vecs){
	for(int i = 0 ; i< SZ(vecs) ; i++){
		cout << vecs[i] << " " ;
	}
	cout << endl;
}
template <class T>
void printAll( T vecs[] , int length){
	for(int i = 0 ; i< length ; i++){
		cout << vecs[i] << " " ;
	}
	cout << endl;
}
int nCr(int n, int r) {
   if(r>n) {printf("FATAL ERROR"); return 0;}
   if(n==0 || r==0 || n==r) {
      return 1;
   } else {
      return (int)lround( ((double)n/(double)(n-r)/(double)r) * exp(lgamma(n) - lgamma(n-r) - lgamma(r)));
   }
}
int nPr(int n, int r) {
   if(r>n) {printf("FATAL ERROR"); return 0;}
   if(n==0 || r==0) {
      return 1;
   } else {
      if (n==r) {
         r = n - 1;
      }
      return (int)lround( ((double)n/(double)(n-r)) * exp(lgamma(n) - lgamma(n-r)));
   }
}

int N ;

int *C ,*P , *F;

bool check (int Gc, int Gp , int Gf , int i){
//	printf("%d %d %d %d\n" , Gc , Gp, Gf, i) ;

	if(i>=N){
		return false;
	}

	int newGc = Gc - C[i] ;
	int newGp = Gp - P[i] ;
	int newGf = Gf - F[i] ;

	if(newGc == 0 && newGp == 0 && newGf ==0){
		return true;

	}

	if(newGc < 0 || newGp < 0 || newGf < 0){
		return check(Gc, Gp , Gf, i+1 ) ;
	}

	if(check(newGc , newGp , newGf , i+1)){
		return true;
	}else if(check(Gc, Gp , Gf, i+1)){
		return true;
	}

	return false;

}

void main2(){
	int Gc, Gp, Gf ;
	cin >> Gc >> Gp >> Gf ;

//	printf("%d %d %d\n" , Gc , Gp ,Gf) ;

	cin >> N ;
//	cout << N << endl ;

	C = new int[N] ;
	P = new int[N] ;
	F = new int[N] ;
//	int C[N] , P[N] , F[N] ;
	F0(i,N){
		cin >> C[i] >> P[i] >> F[i] ;
//		printf("%d %d %d\n" , C[i] , P[i] ,F[i]) ;

	}

	if(check(Gc,Gp,Gf,0)){
		printf("yes\n");
	}else{
		printf("no\n");
	}

	delete C;
	delete P;
	delete F;

}

int main() {
//	    freopen("test.in", "r", stdin);

	    freopen("new_years_resolution.txt", "r", stdin);
	    freopen("result.txt", "w", stdout);


	    scanf("%d\n" , &tn) ;

	    F1(tt,tn) {
	    	printf("Case #%d: ", tt);
	    	main2();

	    }

	return 0;
}




