#include<bits/stdc++.h>
using namespace std;

typedef struct node
{
	int p;
	int c;
	int f;
}node;


int isPossible(node arr[], node req, int x, int n)
{
	if(x == n)
	{
		if(req.p == 0 && req.c == 0 && req.f == 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	else
	{
		node temp;
		temp.p = req.p - arr[x].p;
		temp.c = req.c - arr[x].c;
		temp.f = req.f - arr[x].f;
		int ans1 = isPossible(arr,temp,x+1,n);
		int ans2 = isPossible(arr,req,x+1,n);
		return (ans1 || ans2);
	}
}
int main()
{
	ifstream cin("in.txt");
	ofstream cout("out1.txt");
	int t;
	cin>>t;
	int k = 0;
	while(t--)
	{
		k++;
		cout<<"Case #"<<k<<": ";
		int n;
		node req;
		cin>>req.p>>req.c>>req.f;
		cin>>n;
		node arr[n];
		for(int i=0;i<n;i++)
		{
			cin>>arr[i].p>>arr[i].c>>arr[i].f;
		}
		int ans = isPossible(arr, req,0,n);
		if(ans)
		cout<<"yes"<<endl;
		else
		cout<<"no"<<endl;
		
		
	}
	return 0;
}
