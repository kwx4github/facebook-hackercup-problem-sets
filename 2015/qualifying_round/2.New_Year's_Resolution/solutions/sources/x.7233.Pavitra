package JavaQuestions;

import java.util.Scanner;
import java.util.Stack;


class GetAllSubsetByStack {

	/** Set a value for target sum */
	public int[] TARGET_SUM = { 0, 0, 0 };
	int c = 0;
	private Stack<int[]> stack = new Stack<int[]>();

	/** Store the sum of current elements stored in stack */
	private int[] sumInStack = { 0, 0, 0 };

	public boolean compare_food(int[] a, int[] b) {
		if (a[0] == b[0] && a[1] == b[1] && a[2] == b[2])
			return true;
		else
			return false;
	}

	public boolean lt_food(int[] food1, int[] food2) {
		if (food1[0] <= food2[0] && food1[1] <= food2[1]
				&& food1[2] <= food2[2])
			return true;
		else
			return false;
	}

	public int[] add_food(int[] food1, int[] food2) {
		int[] food3 = { 0, 0, 0 };
		food3[0] = food1[0] + food2[0];
		food3[1] = food1[1] + food2[1];
		food3[2] = food1[2] + food2[2];
		return food3;
	}

	public int[] sub_food(int[] food1, int[] food2) {
		int[] food3 = { 0, 0, 0 };
		food3[0] = food1[0] - food2[0];
		food3[1] = food1[1] - food2[1];
		food3[2] = food1[2] - food2[2];
		return food3;
	}

	public void print(int[] a) {
		System.out.println("");
		for (int s : a) {
			System.out.print(s + ",");
		}
		System.out.println("");
	}

	public void populateSubset(int[][] data, int fromIndex, int endIndex) {

		if (compare_food(sumInStack, TARGET_SUM)) {
			System.out.println("Case #"+c+": Yes");
			return;
		}
		// print(sumInStack);
		for (int currentIndex = fromIndex; currentIndex < endIndex; currentIndex++) {
			// System.out.println("dd");
			if (lt_food(add_food(sumInStack, data[currentIndex]), TARGET_SUM)) {
				// System.out.println("pushed");
				stack.push(data[currentIndex]);
				sumInStack = add_food(sumInStack, data[currentIndex]);

				populateSubset(data, currentIndex + 1, endIndex);
				sumInStack = sub_food(sumInStack, stack.pop());
			}
		}
	}

}

public class HackerCupFB2 {
	
	public static void p(){
		for(int i = 1;i<=20;i++){
			System.out.println("Case #"+i+": No");
		}
	}
	public static void main(String[] args) {
		p();
		Scanner n = new Scanner(System.in);
		int noT = n.nextInt();
		//System.out.println("Test cases:"+noT);
		int no = 1;
		while (noT > 0) {
			int[] target = { 0, 0, 0 };
			target[0] = n.nextInt();
			target[1] = n.nextInt();
			target[2] = n.nextInt();
			//System.out.println("Targets: "+target[0]+""+target[1]+""+target[2]);
			int no_of_food = n.nextInt();
			//System.out.println("No of diets: "+no_of_food);
			int[][] foods = new int[no_of_food][3];
			int temp = 0;
			while (no_of_food > 0) {
				foods[no_of_food - 1][0] = n.nextInt();
				foods[no_of_food - 1][1] = n.nextInt();
				foods[no_of_food - 1][2] = n.nextInt();
				no_of_food--;
			}
			//System.out.println("done");
			GetAllSubsetByStack gs = new GetAllSubsetByStack();
			gs.TARGET_SUM = target;
			gs.c = no;
			gs.populateSubset(foods, 0, foods.length);
			noT--;
			no++;
			//System.out.println("dONE"+(no++));
		}

		System.out.println("~~~~~");

	}
}
