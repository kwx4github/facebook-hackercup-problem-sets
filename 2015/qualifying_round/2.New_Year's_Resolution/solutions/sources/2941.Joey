infile = open("B-in.txt", "r")

lines = infile.readlines()

foods = []
memo = {}

def possible(p, c, f):
  if p < 0 or c < 0 or f < 0:
    return False
  if p == 0 and c == 0 and f == 0:
    return True
  if not memo.has_key((p,c,f)):
    ans = False
    for food in foods:
      p1, c1, f1 = food
      ans = ans or possible(p-p1,c-c1,f-f1)
      if ans:
        break
    memo[(p,c,f)] = ans
  return memo[(p,c,f)]

  

T = int(lines[0])
idx = 1

for t in range(1,T+1):
  GP, GC, GF = tuple(map(int, lines[idx].strip().split(' ')))
  idx += 1
  N = int(lines[idx])
  idx += 1
  foods = []
  memo = {}
  for n in range(N):
    foods.append(tuple(map(int, lines[idx].strip().split(' '))))
    idx += 1
  
      
  
  print 'Case #{0}: {1}'.format(t, 'yes' if possible(GP,GC,GF) else 'no')
  
