#include <iostream>
#include <cstdio>
#include <cstring>
#include <map>
#include <vector>
#include <fstream>
#include <cmath>
#include <algorithm>
#ifndef ONLINE_JUDGE
#define gc getchar
#else
#define gc getchar_unlocked
#endif
#define ll long long
#define nl() printf ("\n")
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(x) printf ("%d",x)
#define pl(x) printf ("%lld",x)
#define pc(x) printf ("%c",x)
#define ps(x) printf ("%s",x)
#define pb(x) push_back(x)
#define mp(a,b) make_pair(a,b)
#define repu(i,a,n,step) for (i = a; i < n; i += step)
#define repd(i,a,n,step) for (i = a - 1; i >= n; i += step)
using namespace std;
int readi () {
	int n=0,sign=0;
	char c=gc();
	while (c<48) {
		if (c==45) sign=1;
		c=gc();
	}
	while (c>47) {
		n=n*10+c-'0';
		c=gc();
	}
	if (sign) return (-n);
	return n;
}
ll readl () {
	ll n=0;int sign=0;
	char c=gc();
	while (c<48) {
		if (c==45) sign=1;
		c=gc();
	}
	while (c>47) {
		n=n*10+c-'0';
		c=gc();
	}
	if (sign) return (-n);
	return n;
}
double power(double x, int y)
{
    double temp;
    if( y == 0)
       return 1;
    temp = power(x, y/2);
    if (y%2 == 0)
        return temp*temp;
    else
    {
        if(y > 0)
            return x*temp*temp;
        else
            return (temp*temp)/x;
    }
}
int k = 1;
int main() {
        int t,gp,gc,gf,n,i,flag=0;
        ifstream otherfile ("new_years_resolution.txt");
        ofstream myfile ("out2.txt");
        otherfile >> t;
        while (t--) {
                otherfile >>gp>>gc>>gf;
                otherfile >> n;
                int p[n],c[n],f[n];
                repu(i,0,n,1) {
                        otherfile>>p[i]>>c[i]>>f[i];
                }
                ll last = (1<<n) - 1;
                ll temp,cursum1,cursum2,cursum3,j = 0;
                flag = 0;
                repu(i,0,last+1,1) {
                        temp = i;
                        cursum1 = cursum2 = cursum3 = j = 0;
                        while (j < n) {
                                if (temp % 2 == 1) {
                                        cursum1 += p[j];
                                        cursum2 += c[j];
                                        cursum3 += f[j];
                                }
                                temp >>= 1;
                                j++;
                        }
                        if (cursum1 == gp && cursum2 == gc && cursum3 == gf) {
                                flag = 1;
                                break;
                        }
                }

                if (flag == 1) {
                        myfile <<"Case #"<<k<<": yes\n";
                }
                else {
                        myfile <<"Case #"<<k<<": no\n";
                }
                k++;
        }
return 0;
}
