import sys


def compute(N, GPCF, PCF):
    N2 = 2 ** N
    s = 0
    for n in xrange(N2):
        b = bin(N2 + n)[3:]
        PCF_filter = [PCF[i] for i in xrange(N) if b[i] == '1']
        PCF_sum = map(sum, zip(*PCF_filter))
        if GPCF == PCF_sum:
            return 'yes'
    return 'no'


def parse():
    GPCF = map(int, sys.stdin.readline().strip().split())
    N = int(sys.stdin.readline().strip())
    PCF = []
    for i in xrange(N):
        PCF.append(map(int, sys.stdin.readline().strip().split()))
    return N, GPCF, PCF


if __name__ == "__main__":
    sys.setrecursionlimit(100000)
    T = int(sys.stdin.readline().strip())
    for i in xrange(T):
        data = parse()
        result = compute(*data)
        print "Case #%d: %s" % (i + 1, result)
