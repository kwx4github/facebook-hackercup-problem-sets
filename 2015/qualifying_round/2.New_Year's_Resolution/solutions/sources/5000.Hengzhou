#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <stack>
#include <cstdio>
using namespace std;
#define _CRT_SECURE_NO_WARNINGS 1
const int N = 1001;
const int INF = 1 << 24;
int sz[20][3];
int dp[N][N];
int n, flag, pMax, cMax, fMax;

void swap(int &a, int &b) { int tmp = a; a = b; b = tmp; }

inline int MAX(int a, int b){ return a > b ? a : b; }
int getNum(vector<int> v)
{
	int ans = 0;
	for (int i = v.size() - 1; i >= 0; i--)
	{
		ans += v[i];
		if (i)
			ans *= 10;
	}
	return ans;
}

bool checkYes(int a, int b, int c){ return a == pMax && b == cMax && c == fMax ? 1 : 0; }
void dfs(int step, int p, int c, int f)
{
	if (flag) return;
	int o;
	for (int i = step; i < n; i++)
	{
		if (p + sz[i][0] <= pMax && c + sz[i][1] <= cMax && f + sz[i][2] <= fMax)
		{
			p += sz[i][0];
			c += sz[i][1];
			f += sz[i][2];		
			if (checkYes(p, c, f))
			{
				flag = 1;
				return;
			}
			dfs(step + 1, p, c, f);
			p -= sz[i][0];
			c -= sz[i][1];
			f -= sz[i][2];
		}

	}
}
void subTen(int &a) { a -= 10; }

int main()
{
	int t;

	FILE *stream;
	freopen_s(&stream, "new_years_resolution.txt", "r", stdin);
	freopen_s(&stream, "output2.txt", "w", stdout);

	cin >> t;
	for (int m_case = 0; m_case < t; m_case++)
	{
		cin >> pMax >> cMax >> fMax;
		cin >> n;
		for (int i = 0; i < n; i++)
		{
			cin >> sz[i][0] >> sz[i][1] >> sz[i][2];
		}
		flag = 0;
		dfs(0, 0, 0, 0);
		if (flag)
			cout << "Case #" << m_case + 1 << ": " << "yes" << endl;
		else
			cout << "Case #" << m_case + 1 << ": " << "no" << endl;
	}	
	fclose(stdin);
	fclose(stdout);
	return 0;
}
