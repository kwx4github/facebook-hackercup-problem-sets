#include<iostream>
using namespace std;


bool solve (int p[],int c[],int f[],int n,int gp,int gc,int gf)
{
	if(gp==0&&gc==0&&gf==0)
		return 1;
	if(n==0&&(gp!=0||gc!=0||gf!=0))
		return 0;
	if(p[n-1]>gp || c[n-1]>gc || f[n-1]>gf)
		return solve(p,c,f,n-1,gp,gc,gf);
	return solve(p,c,f,n-1,gp,gc,gf) || solve(p,c,f,n-1,gp-p[n-1],gc-c[n-1],gf-f[n-1]);
}

int main()
{
	int t,n,gp,gc,gf,p[20],c[20],f[20],i,k;
	bool flag;
	cin >> t;
	k=t;
	while(t--)
	{
		cin >> gp >> gc >> gf;
		cin >> n;
		cout << "Case #" << k-t << ":" << " ";
		for(i=0;i<n;i++)
		{
			cin >> p[i] >>c[i] >> f[i];
		}
		flag=solve(p,c,f,n,gp,gc,gf);
		if(flag==true)
			cout << "yes\n";
		else cout << "no\n";
	}
	return 0;
}
