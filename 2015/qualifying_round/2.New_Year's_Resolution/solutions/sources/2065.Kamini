#include <cstdio>
#include <cstdlib>
int nc;
typedef struct data
{
	int a;
	int b;
	int c;
}data;
int solve(data [], data [], int, int, data, int, data const);
int main()
{
	int t,i,j,k,n,size;
	data arr[21],sum,temp,temp_sum;
	int f1,f2,f3;
	scanf("%d",&t);
	for(j=1;j<=t;j++)
	{
		nc = 0;
		f1 = 0;
		scanf("%d %d %d",&sum.a,&sum.b,&sum.c);
		scanf("%d",&n);
		temp_sum.a=temp_sum.b=temp_sum.c=0;
		i=1;
		for(k=0;k<n;k++)
		{
			scanf("%d %d %d",&temp.a, &temp.b, &temp.c);
			if(temp.a<sum.a&&temp.b<sum.b&&temp.c<sum.c)
			{
				arr[i].a=temp.a;
				temp_sum.a+=temp.a;
				arr[i].b=temp.b;
				temp_sum.b+=temp.b;
				arr[i].c=temp.c;
				temp_sum.c+=temp.c;
				i++;
			}
			else if(temp.a==sum.a&&temp.b==sum.b&&temp.c==sum.c)
			{
				i++;
				f1 = 1;
			}
		}
		if(f1)
		{
			printf("Case #%d: yes\n",j);
			continue;
		}
		if(temp_sum.a<sum.a||temp_sum.b<sum.b||temp_sum.c<sum.c)
		{
			printf("Case #%d: no\n",j);
			continue;
		}
		data *vec = (data*)malloc(n*sizeof(data));
		data temp = {0, 0, 0};
		if (solve(arr, vec, i, 0, temp, 0, sum))
			printf("Case #%d: yes\n",j);
		else
			printf("Case #%d: no\n",j);
		free(vec);
	}
	return 0;
}
int solve(data arr[], data tuple[], int s_size, int t_size, data sum, int itr, data const target_sum)
{
	nc++;
	if(sum.a==target_sum.a&&sum.b==target_sum.b&&sum.c==target_sum.c)
	{
		return 1;
	}
	else
	{
		int flag = 0;
		data temp;
		for(int i=itr; i<s_size; i++)
		{
			tuple[t_size].a = arr[i].a;
			temp.a = sum.a + arr[i].a;
			tuple[t_size].b = arr[i].b;
			temp.b = sum.b + arr[i].b;
			tuple[t_size].c = arr[i].c;
			temp.c = sum.c + arr[i].c;
			if(solve(arr,tuple,s_size,t_size+1,temp,i+1,target_sum))
			{
				flag = 1;
				break;
			}
		}
		return flag;
	}
}
