#include <iostream>
#include <stdio.h>
#include <fstream>
#include <string.h>

#include <string>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <set>
#include <deque>
#include <utility>
#include <sstream>
#include <queue>
#include <stack>
#include <bitset>

#include <math.h>
#include <iomanip>
#include <algorithm>
#include <limits.h>

#define MP make_pair
#define PB push_back
#define FI first
#define SE second
#define INPUT "/Users/manuelalejandrovergaradiaz/Documents/Manu/Programation/Programation/Programation/new_years_resolution.txt"
#define OUTPUT "/Users/manuelalejandrovergaradiaz/Documents/Manu/Programation/Programation/Programation/output"
#define FILE 1

#define MAX 1000
#define MAXN 100010
#define INF -1
#define EPS 0.0000001
#define PI acos(-1)
#define sbit(a) a&(-a)
#define gauss(a) a*(a+1)/2
#define Node pair<int, long long>

typedef long long ll;

using namespace std;

int T, N, cases;
tuple<int, int, int> G;
vector< tuple<int,int,int> > v;

bool solve(int cur, int gp, int gc, int gf) {
    if(gp > get<0>(G) || gc > get<1>(G) || gf > get<2>(G)) return false;
    if(gp == get<0>(G) && gc == get<1>(G) && gf == get<2>(G)) return true;
    bool ans = false;
    for(int i = cur; i < N && !ans; i++) {
        ans |= solve(i+1, gp+get<0>(v[i]), gc+get<1>(v[i]), gf+get<2>(v[i]));
    }
    return ans;
}

int main() {
    
    if(FILE) {
        freopen(INPUT, "r", stdin);
        freopen(OUTPUT, "w", stdout);
    }
    
    cin >> T;
    while(T--) {
        v.clear();
        cin >> get<0>(G) >> get<1>(G) >> get<2>(G);
        cin >> N;
        for(int i = 0; i < N; i++) {
            tuple<int, int, int> t;
            cin >> get<0>(t) >> get<1>(t) >> get<2>(t);
            v.PB(t);
        }
        cout << "Case #" << ++cases << ": ";
        if(solve(0, 0, 0, 0)) cout << "yes\n";
        else cout << "no\n";
    }
    
    return 0;
}