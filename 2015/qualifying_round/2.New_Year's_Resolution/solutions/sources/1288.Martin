#include <fstream>
#include <string>

std::ifstream input;
std::ofstream output;
int N, iN;
int sum[3];
int foods[20][3];

bool Eat(int i, int n, int * actualSum) {
	if (actualSum[0] == sum[0] && actualSum[1] == sum[1] && actualSum[2] == sum[2])
		return true;
	if (i >= n)
		return false;
	if (actualSum[0] > sum[0] || actualSum[1] > sum[1] || actualSum[2] > sum[2])
		return false;
	int newSum[3];
	newSum[0] = actualSum[0] + foods[i][0];
	newSum[1] = actualSum[1] + foods[i][1];
	newSum[2] = actualSum[2] + foods[i][2];
	if (Eat(i + 1, n, actualSum) || Eat(i + 1, n, newSum))
		return true;
}

void Solve() {
	int n;
	input >> n;
	for (int i = 0; i < n; ++i)
		input >> foods[i][0] >> foods[i][1] >> foods[i][2];
	int actualSum[3];
	actualSum[0] = actualSum[1] = actualSum[2] = 0;
	output << "Case #" << iN << ": " << (Eat(0, n, actualSum) ? "yes" : "no") << std::endl;
}

int main() {	
	input.open("new_years_resolution.txt");
	output.open("output.txt");
	input >> N;
	for (iN = 1; iN <= N; ++iN) {
		input >> sum[0] >> sum[1] >> sum[2];
		Solve();
	}
	input.close();
	output.close();
}
