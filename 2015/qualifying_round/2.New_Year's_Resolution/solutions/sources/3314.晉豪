#include <stdio.h>
#include <stdlib.h>

int main(){
	int T = 0;
	scanf("%d",&T);
	int count = 1;
	while(T>0){
	int Pp = 100;
	int Cc = 100;
	int Ff = 100;
	scanf("%d %d %d",&Pp,&Cc,&Ff);
	int index = 0;
	scanf("%d",&index);
	int array[1];
	array[1] = 0;

	int i;
	int P[index];
	int C[index];
	int F[index];
	
	int result1;
	int result2;

	for(i=0 ; i<index ; i++){
		scanf("%d %d %d",&P[i],&C[i],&F[i]);
	}
	result1 = permutation(array , 1 , index , 1 , P , C , F , Pp , Cc , Ff);
	result2 = permutation(array , 1 , index , 0 , P , C , F , Pp , Cc , Ff);
	if(result1>0 | result2>0)
		printf("Case #%d: yes\n",count);
	else
		printf("Case #%d: no\n",count);
	T = T - 1;
	count = count + 1;
	}
	return 0;
}
int permutation(int array[] , int layer , int index , int new_input , 
				int P[] , int C[] , int F[] , int Pp , int Cc , int Ff){
	int tmp[layer];
	int i;
	int tmp_Pp = 0;
	int tmp_Cc = 0;
	int tmp_Ff = 0;
	for(i=0 ; i<layer-1 ; i++){
		tmp[i] = array[i];
	}
	tmp[layer-1] = new_input;

	if(layer==index){
		for(i=0 ; i<index ; i++){
			if(tmp[i]==1){
				tmp_Pp += P[i];
				tmp_Cc += C[i];
				tmp_Ff += F[i];
			}
			if(tmp_Pp==Pp && tmp_Cc==Cc && tmp_Ff==Ff){
				//printf("yes\n");
				return 1;
			}
		}
		return 0;
	}
	else {
		return permutation(tmp , layer+1 , index , 1 , P , C , F , Pp , Cc , Ff) +
		permutation(tmp , layer+1 , index , 0 , P , C , F , Pp , Cc , Ff);
	}
}
