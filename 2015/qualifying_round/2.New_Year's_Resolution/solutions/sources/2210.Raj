#include <stdio.h>

struct food
{
    int p;
    int c;
    int f;
};

int isSubset(struct food stuff[], int n,int gp, int gc, int gf)
{
    if(gp == 0 && gc == 0 && gf == 0)
        return 1;
    else if(n == 0 && !(gp == 0 && gc == 0 && gf == 0))
        return 0;

    if(stuff[n-1].p > gp || stuff[n-1].c > gc || stuff[n-1].f > gf)
        return isSubset(stuff, n-1, gp, gc, gf);

    return isSubset(stuff, n-1, gp, gc ,gf) || isSubset(stuff, n-1, gp - stuff[n-1].p, gc - stuff[n-1].c,gf - stuff[n-1].f);

}

int main()
{
    int n,t,i,j;
    struct food stuff[25];
    int gp,gc,gf,c;

    FILE *input, *output;
    input = fopen("new_years_resolution.txt","r");
    output = fopen("output1.txt","w");

    fscanf(input,"%d",&t);
    for(i=1; i<=t; i++)
    {
        fscanf(input,"%d %d %d",&gp,&gc,&gf);
        fscanf(input,"%d",&n);

        for(j=0; j<n; j++)
        {
            fscanf(input,"%d %d %d",&stuff[j].p,&stuff[j].c,&stuff[j].f);
        }

        c = isSubset(stuff,n,gp,gc,gf);

        if(c == 0)
            fprintf(output,"Case #%d: no\n",i);
        else if(c == 1)
            fprintf(output,"Case #%d: yes\n",i);
    }

    fclose(input);
    fclose(output);

    return 0;
}

