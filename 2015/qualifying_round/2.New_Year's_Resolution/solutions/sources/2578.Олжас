import java.io.*;
import java.math.*;
import java.util.*;

public class QualB implements Runnable {
	BufferedReader in;
	PrintWriter out;
	StringTokenizer st;
	boolean file = true;
	String fileName = "B-small";

	public static void main(String[] args) throws Exception {
		new QualB().run();
	}

	private String next() throws Exception {
		if (st == null || !st.hasMoreElements())
			st = new StringTokenizer(in.readLine());
		return st.nextToken();
	}

	private int nextInt() throws Exception {
		return Integer.parseInt(next());
	}

	private long nextLong() throws Exception {
		return Long.parseLong(next());
	}

	private double nextDouble() throws Exception {
		return Double.parseDouble(next());
	}

	public void run() {
		try {
			if (file)
				in = new BufferedReader(new FileReader(fileName+".in"));
			else
				in = new BufferedReader(new InputStreamReader(System.in));
			if (file)
				out = new PrintWriter(new FileWriter(fileName+".out"));
			else
				out = new PrintWriter(System.out);
			solve();
		} catch (Exception ex) {
			throw new RuntimeException(ex);
		} finally {
			out.close();
		}
	}

	public void solve() throws Exception {
		Locale.setDefault(Locale.US);
		int cases = nextInt();
		for(int step = 1; step <= cases; step++){
			int a = nextInt(), b = nextInt(), c = nextInt(), n = nextInt();
			int [][]arr = new int[n][3];
			for(int i=0; i<n; i++) {
				for(int j=0; j<3; j++)
					arr[i][j] = nextInt();
			}
			boolean res = false;
			for (int mask=1; mask< (1<<n); mask++) {
				int []sums = new int[]{0,0,0};
				for (int i=0; i<n; i++) {
					if ((mask & 1<<i) > 0) {
						for(int k=0;k<3; k++)
							sums[k]+=arr[i][k];
					}
				}
				if (sums[0] == a && sums[1] == b && sums[2] == c) {
					res = true;
					break;
				}
			}
			out.println("Case #"+step+": "+(res ? "yes": "no"));
		}
	}
	
}