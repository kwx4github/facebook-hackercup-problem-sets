import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;


public class New_Years_Resolution {

	/**
	 * @param args
	 */
	public static void main(String[] args)throws NumberFormatException, IOException, InterruptedException {
		// TODO Auto-generated method stub
		
		FileInputStream fstream = new FileInputStream("new_years_resolution.txt");
		DataInputStream entrada = new DataInputStream(fstream);
	    BufferedReader buffer = new BufferedReader(new InputStreamReader(entrada));
	    
	   	int t = Integer.parseInt(buffer.readLine());
	   	New_Years_Resolution obj = new New_Years_Resolution();
	   	
	    for (int i = 0; i < t; i++) {
	    	String []values = buffer.readLine().split(" ");
	    	int[] Gval= new int[3];
	    	for (int k = 0; k < Gval.length; k++) {
	    		Gval[k]=Integer.parseInt(values[k]);
	    	}
	    	
	    	int n = Integer.parseInt(buffer.readLine());
	    	ArrayList<int []> val = new ArrayList<int []>();
	    	int va[]= new int[3];
	    	
	    	int []sum = new int[3];
	    	for (int j = 0; j < n; j++) {
	    		boolean add= true;
				String []v = buffer.readLine().split(" ");
				
					va[0]= Integer.parseInt(v[0]);
					va[1]= Integer.parseInt(v[1]);
					va[2]= Integer.parseInt(v[2]);
					if(va[0] > Gval[0] || va[1] > Gval[1] || va[2] > Gval[2]){
						add=false;
					
					}else{
						sum[0] += va[0];
						sum[1] += va[1];
						sum[2] += va[2];
					}
				
				if(add){
					val.add(va.clone());
					//System.out.println(val.get(val.size()-1)[0] + " " +val.get(val.size()-1)[1] + " " +val.get(val.size()-1)[2] + " ");
					
				}
				
			}
	    	
	    	String res ="yes";
	    	int x=0;
	    	for (int k = 0; k < 3; k++) {
				if(sum[k]<Gval[k])
					res="no";
				
			}	
	    	//System.out.println("sum: " + sum[0] + " "+ sum[1] + " " + sum[2]);
	    	//System.out.println("G: " + Gval[0] + " "+ Gval[1] + " " + Gval[2]);
	    	if(sum[0]==Gval[0] && sum[1]==Gval[1] && sum[2]==Gval[2]){
	    		x=1;
	    	}
				
	    	if(res == ("yes") && x==0){
	    		res= obj.validar(val, sum, Gval);
	    	}
	    	
	    	System.out.println("Case #"+(i+1)+": " + res);
	    } 
	}
	
	public String validar(ArrayList<int[]> values, int[] sum, int[] Gval) throws InterruptedException{
		String res="no";
		String binaryString="";
		for (int i = 0; i < values.size(); i++) {
			binaryString+="1";
		}
		//System.out.println(binaryString);
		
		int decimal = Integer.parseInt(binaryString, 2);
		//System.out.println(decimal);
		for (int i = 1; i < decimal; i++) {
			
			sum = new int[3];
			String x =Integer.toBinaryString(i);
			
			
			while(x.length()<values.size()){
				x="0"+x;
			}
			
			//System.out.println(i + " " +x);
			for (int j = 0; j < values.size(); j++) {
				
				//System.out.print ((char)x.charAt(j)+" * " + values.get(j)[0] + " / ");
				sum[0]+=Integer.parseInt((char)x.charAt(j)+"") * values.get(j)[0];
				//System.out.print ((char)x.charAt(j)+" * " + values.get(j)[1]+ " / ");
				sum[1]+=Integer.parseInt((char)x.charAt(j)+"") * values.get(j)[1];
				//System.out.println  ((char)x.charAt(j)+" * " + values.get(j)[2]);
				sum[2]+=Integer.parseInt((char)x.charAt(j)+"") * values.get(j)[2];
			}

			//System.out.println("sum: " + sum[0] + " "+ sum[1] + " " + sum[2]);
	    	//System.out.println("G: " + Gval[0] + " "+ Gval[1] + " " + Gval[2]);
			if(sum[0]==Gval[0] && sum[1]==Gval[1] && sum[2]==Gval[2]){
				
				res="yes";
				//System.out.println(x);
	    		break;
	    	}
				
		}
		
		return res;
		
	}
}
