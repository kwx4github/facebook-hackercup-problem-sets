#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <functional>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <utility>
#include <valarray>
#include <vector>
#include <ext/algorithm>
#include <ext/hash_map>
#include <ext/hash_set>
#include <ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define F(i,a,b)for(int i=a;i<b;++i)
#define rep(i,n)F(i,0,n)
#define all(a)a.begin(),a.end()
template<class T>vector<T>&operator<<(vector<T>& v,T t){v.push_back(t);return v;} 

int T,N, gp, gc, gf, P[21], C[21], F[21];

int solve() {
  rep(i, (1 << (N+1))) {
    int p = 0;
    int c = 0;
    int f = 0;
    int ii = i;
    rep(j, N) {
      if (ii & 1) {
        p += P[j];
        c += C[j];
        f += F[j];
      }
      ii >>= 1;
    }
    if (p == gp && c == gc && f == gf) return true;
  }
  return false;
}

int main() {
  cin >> T;
  rep(t, T) {
    cin >> gp >> gc >> gf;
    cin >> N;
    rep(n, N) {
      cin >> P[n] >> C[n] >> F[n];
    }
    printf("Case #%d: %s\n", t + 1, solve() ? "yes" : "no");
  }
}
