

    #include<bits/stdc++.h>
    #include<cstdio>
    #include<algorithm>
    #include<iostream>
    #include<cstring>
    #include<string>
    #include<stack>
    #include<queue>
    #include<cmath>
    #include<limits>
    #include<set>
    #include<vector>
    #include<map>
    #include<list>

    using namespace std;

    #define lli long long int
    #define F(i,a,b) for(int i=a ; i<b; i++)
    #define ll long long
    #define pii pair<int,int>
    #define pip pair<int,pii>
    #define ff first
    #define ss second
    #define fill(a,b) memset(a,b,sizeof(a));
    #define MOD 1000000007

    bool isSubsetSum(int set1[],int set2[],int set3[], int n, int sum1,int sum2,int sum3)
    {
       if (sum1 == 0 && sum2==0 && sum3==0)
         return true;
       if (n == 0 && (sum1 != 0 || sum2!=0 || sum3!=0))
         return false;

       if (set1[n-1] > sum1 || set2[n-1] > sum2 || set3[n-1] > sum3)
         return isSubsetSum(set1,set2,set3, n-1, sum1,sum2,sum3);

       return isSubsetSum(set1,set2,set3, n-1, sum1,sum2,sum3) || isSubsetSum(set1,set2,set3, n-1, sum1-set1[n-1],sum2-set2[n-1],sum3-set3[n-1]);
    }

    int main()
    {
        int t;
        scanf("%d",&t);
        for(int i=0;i<t;i++)
        {
            int gp,gc,gf,food;
            scanf("%d%d%d",&gp,&gc,&gf);
            scanf("%d",&food);

            int  P[food],C[food],F[food];

            for(int j=0;j<food;j++)
                scanf("%d%d%d",&P[j],&C[j],&F[j]);

            cout<<"Case #"<<(i+1)<<": ";

            if(isSubsetSum(P,C,F,food,gp,gc,gf))
                cout<<"yes"<<endl;
            else
                cout<<"no"<<endl;


        }
        return 0;
    }






