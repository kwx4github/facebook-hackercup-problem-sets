using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace Solution
{
    class Program
    {
        public class Solver
        {
            const long mod = 1000000007;
            public int t;
            public string Output;
            int a, b , c, n;
            int[,] tot;
            public Solver(int t)
            {
                this.t = t;
            }
            public void ReadInput()
            {
                int[] s = ReadIntArray();
                a = s[0];
                b = s[1];
                c = s[2];
                n = ReadInt();
                tot = new int[n,3];
                for (int i = 0; i < n; i++)
                {
                    s = ReadIntArray();
                    if (s[0] > a || s[1] > b || s[2] > c)
                    {
                        i--;
                        n--;
                    }
                    else
                    {
                        tot[i, 0] = s[0];
                        tot[i, 1] = s[1];
                        tot[i, 2] = s[2];
                    }
                }
            }
            public void Solve()
            {
                long com = 1 << n;
                bool res = false;
                for (int i = 0; i < com; i++)
                {
                    int suma = 0, sumb = 0, sumc = 0;
                    for (int j = 0; j < n; j++)
                    {
                        if ((i & (1 << j)) > 0)
                        {
                            suma += tot[j, 0];
                            sumb += tot[j, 1];
                            sumc += tot[j, 2];
                        }
                        if (suma > a || sumb > b || sumc > c)
                            break;
                    }
                    if (suma == a && sumb == b && sumc == c)
                        res = true;

                    if(res)
                        break;
                }
                Output = res ? "yes" : "no";
            }
            public void Print()
            {
                Console.WriteLine(string.Format("Case #{0}: {1}", t, Output));
            }
            static Solver()
            {
            }
            # region Helper Methods
            public static int ReadInt()
            {
                return Convert.ToInt32(Console.ReadLine());
            }
            public static uint ReadUInt()
            {
                return Convert.ToUInt32(Console.ReadLine());
            }
            public static long ReadLong()
            {
                return Convert.ToInt64(Console.ReadLine());
            }
            public static ulong ReadULong()
            {
                return Convert.ToUInt64(Console.ReadLine());
            }
            public static float ReadFloat()
            {
                return Convert.ToSingle(Console.ReadLine());
            }
            public static double ReadDouble()
            {
                return Convert.ToDouble(Console.ReadLine());
            }
            public static decimal ReadDecimal()
            {
                return Convert.ToDecimal(Console.ReadLine());
            }
            public static int[] ReadIntArray()
            {
                string[] str = Console.ReadLine().Split(' ');
                int[] a = new int[str.Length];
                for (int i = 0; i < a.Length; i++)
                {
                    a[i] = Convert.ToInt32(str[i]);
                }
                return a;
            }
            public static uint[] ReadUIntArray()
            {
                string[] str = Console.ReadLine().Split(' ');
                uint[] a = new uint[str.Length];
                for (int i = 0; i < a.Length; i++)
                {
                    a[i] = Convert.ToUInt32(str[i]);
                }
                return a;
            }
            public static long[] ReadLongArray()
            {
                string[] str = Console.ReadLine().Split(' ');
                long[] a = new long[str.Length];
                for (int i = 0; i < a.Length; i++)
                {
                    a[i] = Convert.ToInt64(str[i]);
                }
                return a;
            }
            public static ulong[] ReadULongArray()
            {
                string[] str = Console.ReadLine().Split(' ');
                ulong[] a = new ulong[str.Length];
                for (int i = 0; i < a.Length; i++)
                {
                    a[i] = Convert.ToUInt64(str[i]);
                }
                return a;
            }
            public static float[] ReadFloatArray()
            {
                string[] str = Console.ReadLine().Split(' ');
                float[] a = new float[str.Length];
                for (int i = 0; i < a.Length; i++)
                {
                    a[i] = Convert.ToSingle(str[i]);
                }
                return a;
            }
            public static double[] ReadDoubleArray()
            {
                string[] str = Console.ReadLine().Split(' ');
                double[] a = new double[str.Length];
                for (int i = 0; i < a.Length; i++)
                {
                    a[i] = Convert.ToDouble(str[i]);
                }
                return a;
            }
            public static decimal[] ReadDecimalArray()
            {
                string[] str = Console.ReadLine().Split(' ');
                decimal[] a = new decimal[str.Length];
                for (int i = 0; i < a.Length; i++)
                {
                    a[i] = Convert.ToDecimal(str[i]);
                }
                return a;
            }
            # endregion
        }
        #region Main
        static void Main(string[] args)
        {
            using (StreamReader reader = new StreamReader("input.txt"))
            {
                Console.SetIn(reader);
                using (StreamWriter writer = new StreamWriter("output.txt"))
                {
                    Console.SetOut(writer);
                    int t = Solver.ReadInt();
                    Solver[] sols = new Solver[t];
                    for (int i = 0; i < t; i++)
                    {
                        sols[i] = new Solver(i + 1);
                        sols[i].ReadInput();
                    }
                    for (int i = 0; i < t; i++)
                    {
                        sols[i].Solve();
                    }
                    for (int i = 0; i < t; i++)
                    {
                        sols[i].Print();
                    }
                }
            }
            System.Diagnostics.Process.Start("output.txt");
        }
        #endregion Main
    }
}
