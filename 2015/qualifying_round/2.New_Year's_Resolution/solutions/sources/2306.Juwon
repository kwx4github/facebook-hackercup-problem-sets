#include <cstdio>

struct tuple {
    int p, c, f;
};

int n;
tuple G, data[20];

int solve() {
    for (int i = 1; i < (1 << n); ++i) {
        tuple tmp;
        tmp.p = tmp.c = tmp.f = 0;
        for (int j = 0; j < n; ++j) {
            if (i & (1 << j)) {
                tmp.p += data[j].p;
                tmp.c += data[j].c;
                tmp.f += data[j].f;
            }
        }
        if (tmp.p == G.p && tmp.c == G.c && tmp.f == G.f) {
            return 1;
        }
    }
    return 0;
}

int main() {
    int T;
    scanf("%d", &T);
    for (int cs = 1; cs <= T; ++cs) {
        scanf("%d %d %d", &G.p, &G.c, &G.f);
        scanf("%d", &n);
        for (int i = 0; i < n; ++i) {
            scanf("%d %d %d", &data[i].p, &data[i].c, &data[i].f);
        }
        printf("Case #%d: %s\n", cs, solve() ? "yes" : "no");
    }
    return 0;
}
