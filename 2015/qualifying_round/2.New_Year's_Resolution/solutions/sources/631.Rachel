import java.util.*;
import java.io.*;

public class NewYearsResolution {

	public static void main(String[] args) throws IOException {
		
		BufferedReader f = new BufferedReader(new FileReader("new_years_resolution.txt"));
		int T = Integer.parseInt(f.readLine());
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("NewYearsResolutionout.txt")));
		for (int i = 0; i < T; i++) {
			StringTokenizer st = new StringTokenizer(f.readLine());
			int P = Integer.parseInt(st.nextToken());
			int C = Integer.parseInt(st.nextToken());
			int F = Integer.parseInt(st.nextToken());
			int N = Integer.parseInt(f.readLine());
			int[][] foods = new int[N][3];
			for (int j = 0; j < N; j++) {
				st = new StringTokenizer(f.readLine());
				foods[j][0] = Integer.parseInt(st.nextToken());
				foods[j][1] = Integer.parseInt(st.nextToken());
				foods[j][2] = Integer.parseInt(st.nextToken());
			}
			int highest = pow(2, N);
			boolean canBeMade = false;
			for (int k = 0; k < highest; k++) {
				int sumP = 0;
				int sumC = 0;
				int sumF = 0;
				for (int m = 0; m < N; m++) {
					if ((k&pow(2,m)) > 0) {
						sumP += foods[m][0];
						sumC += foods[m][1];
						sumF += foods[m][2];
					}
				}
				if ((sumP == P) && (sumC == C) && (sumF == F)) {
					canBeMade = true;
					break;
				}
			}
			if (canBeMade) {
				out.println("Case #" + (i+1) + ": yes");
			}
			else {
				out.println("Case #" + (i+1) + ": no");
			}
		}
		f.close();
		out.close();
		
		
		
		
		
		
		
		
	}
	
	private static int pow(int base, int exp) {
		int ret = 1;
		for (int i = 0; i < exp; i++) {
			ret *= base;
		}
		return ret;
	}

}
