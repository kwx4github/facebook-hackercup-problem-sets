#include <iostream>
#include <cstdio>
#include <cstring>
#include <iomanip>
#include <vector>
#include <string>
#include <fstream>
#include <sstream>
#include <list>
#include <cctype>
#include <algorithm>
#include <deque>
#include <stack>
#include <queue>
#include <cmath>
#include <sstream>
#include <map>
#include <functional>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
#include <ctime>
#include <complex>
#define INT_MAX 2147483647
#define INT_MIN -2147483648
#define PI acos(-1.0)
#define E 2.71828182845904523536
#define sz(X) (int)(X).size()
#define all(X) (X).begin(),(X).end()
#define allr(X) (X).rbegin(),(X).rend()
#define lst(X) (X)[sz((X))-1]
#define mset(X,s) memset((X),(s),sizeof(X))
typedef long long ll;

using namespace std;
struct food
 {
     int p,c,f;
     food(){};
     food(int p,int c,int f):p(p),c(c),f(c){};
     bool operator<=(food d)
     {
         return (p<=d.p)&&(c<=d.c)&&(f<=d.f);
     }
     food operator-(food d)
     {
         food df(p-d.p,c-d.c,f-d.f);
         return df;
     }
     bool operator==(food d)
     {
         return (p==d.p)&&(c==d.c)&&(f==d.f);
     }
 };
 food dest;
 vector<food>liste;
 bool test(int i,food d)
 {
     if(i==sz(liste))
     {
         if(d==food(0,0,0))
            return true;
         return false;
     }
     return test(i+1,d)||test(i+1,d-liste[i]);
 }
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("new_years_resolution.txt","rt",stdin);
        freopen("new_years_resolution_out.txt","wt",stdout);
    #endif // ONLINE_JUDGE
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int t;
    cin>>t;
    string s;
    int N;
    for(int x=1;x<=t;x++){
        cin>>dest.p>>dest.c>>dest.f;
        cin>>N;
        liste=vector<food>(N);
        for(int i=0;i<N;i++)
            cin>>liste[i].p>>liste[i].c>>liste[i].f;
        cout<<"Case #"<<x<<": "<<(test(0,dest)?"yes":"no")<<endl;
    }
    return 0;

}


