#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<map>
using namespace std;

struct node
{
    int p;
    int c;
    int f;
}s[11000];

map<int, int> dp[1010][1010];

int main()
{
    int gp,gc,gf;
    int T;
    int ca = 1;
    freopen("new_years_resolution.txt", "r", stdin);
    freopen("res.txt", "w", stdout);
    scanf("%d", &T);
    while(T--)
    {
        scanf("%d%d%d", &gp, &gc,&gf);
        for(int i = 0; i <= gp; i++)
            for(int j = 0; j <= gc; j++)
                dp[i][j].clear();
        int n;
        scanf("%d", &n);
        for(int i = 0; i < n; i++)
        {
            scanf("%d%d%d", &s[i].p, &s[i].c, &s[i].f);
        }
        dp[0][0][0] = 1;
        for(int z = 0; z < n; z++)
        {
            for(int i = gp; i >= s[z].p; i--)
            {
                for(int j = gc; j >= s[z].c; j--)
                {
                    for(int k = gf; k >= s[z].f; k--)
                    {
                        if(dp[i - s[z].p][j - s[z].c].count(k - s[z].f) > 0)
                        {
                            dp[i][j][k] = 1;
                        }
                    }
                }
            }
        }
        printf("Case #%d: ", ca++);
        if(dp[gp][gc].count(gf) > 0)
            printf("yes\n");
        else
            printf("no\n");
    }
}
