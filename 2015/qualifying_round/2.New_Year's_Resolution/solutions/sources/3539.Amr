#include <bits/stdc++.h>

using namespace std;

#define sz(x) ((int) (x).size())
#define mp make_pair
#define pb push_back
#define all(v) (v).begin( ), (v).end( )
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define I (1ll << 32)
double pi = 3.1415926536;
const int oo = (int) 1e9;
const long long OO = numeric_limits<long long>::max();

int dx[] = { 0, 1, 0, -1 };
int dy[] = { 1, 0, -1, 0 };

int di[] = {0, 0, 1, -1, 1, -1, 1, -1};
int dj[] = {1, -1, 0, 0, 1, -1, -1, 1};

int f1[] = { 0, 0, 0, 1, 1, 1, -1, -1, -1 };
int f2[] = { -1, 0, 1, -1, 0, 1, -1, 0, 1 };

int protein , carbo , fats;

bool rec(vector<int>myvec1 , vector<int>myvec2 , vector<int>myvec3 , int idx , int sum1 , int sum2 , int sum3){

	if(sum1 == protein && sum2 == carbo && sum3 == fats){
		return true;
	}

	if(idx == sz(myvec1)){
		return false;
	}

	bool flag = false;

	for(int i = idx ; i < sz(myvec1) ; i++){
		if(sum1 + myvec1[i] <= protein && sum2 + myvec2[i] <= carbo && sum3 + myvec3[i] <= fats && !flag){
			flag = rec(myvec1 , myvec2 , myvec3 , i + 1 , sum1 + myvec1[i] , sum2 + myvec2[i] , sum3 + myvec3[i]);
		}
	}

	return flag;
}

int main() {
ios_base::sync_with_stdio(false);
//cin.tie(NULL);
//cout.tie(NULL);
//cout.setf(ios::fixed);
freopen("input.txt","r",stdin);
freopen("output.txt","w",stdout);

	int t;
	cin >> t;

	int testCases = 1;

	while(t--){
		int r;

		cin >> protein >> carbo >> fats;
		cin >> r;

		vector<int>a,b,c;

		while(r--){
			int x , y , z;
			cin >> x >> y >> z;
			a.push_back(x);
			b.push_back(y);
			c.push_back(z);
		}

		bool flag = false;
		string answer;

		for(int i = 0 ; i < sz(a) ; i++){
			if(a[i] <= protein && b[i] <= carbo && c[i] <= fats && !flag)
				flag = rec(a , b , c , i + 1 , a[i] , b[i] , c[i]);
		}



		//cout << flag1 << " " << flag2 << " " << flag3 << endl;
		if(flag)
			answer = "yes";
		else
			answer = "no";

		cout << "Case #" << testCases++ << ": " << answer;

		cout << endl;
	}

	return 0;
}
