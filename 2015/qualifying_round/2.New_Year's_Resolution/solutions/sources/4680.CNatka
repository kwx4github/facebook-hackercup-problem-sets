#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
bool neWyearrEsolutionRemains(vector<int> & P,vector<int> & C,vector<int> & F, int N, int sumP, int sumC, int sumF)
{
   if (sumP == 0 && sumC == 0 && sumF == 0)					return true;
   if (N == 0 && (sumP != 0 || sumC != 0 || sumF != 0))     return false;
   if (P[N-1] > sumP || C[N-1] > sumC || F[N-1] > sumF)     return neWyearrEsolutionRemains(P,C,F,N-1,sumP,sumC,sumF);
   return neWyearrEsolutionRemains(P,C,F,N-1,sumP,sumC,sumF) || neWyearrEsolutionRemains(P,C,F,N-1,sumP-P[N-1],sumC-C[N-1],sumF-F[N-1]);
}
int main()
{
	int T; cin >> T;
	for(int i=1;i<=T;i++)
	{
		int GP, GC, GF; cin >> GP >>GC >>GF;
		int N; cin >> N;
		vector<int> P(N),C(N),F(N);
		for(int i=0;i<N;i++)		cin >> P[i] >> C[i] >> F[i];
		if(neWyearrEsolutionRemains(P,C,F,N,GP,GC,GF) == true)		cout<<"Case #"<<i<<": yes"<<endl;
		else														cout<<"Case #"<<i<<": no"<<endl;
	}
	cin.get(); cin.get();
	return 0;
}