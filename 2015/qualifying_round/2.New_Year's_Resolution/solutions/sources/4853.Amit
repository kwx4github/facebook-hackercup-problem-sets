
#include "stdafx.h"
#include <iostream>
#include <fstream>
#include <string>
#include <vector>

using namespace std;

struct Food {
	int Pro;
	int Carb;
	int Fat;

	Food(int p, int c, int f) :
		Pro(p),
		Carb(c),
		Fat(f)
	{}
};

bool is_possible(int n, int tp, int tc, int tf, const vector<Food>& foods)
{
	if ((n == 0) && (tp == 0 && tc == 0 && tf == 0)) return true;
	if (n == 0) return false;
	if (tp < 0 || tc < 0 || tf < 0) return false;

	return is_possible(n - 1, tp - foods[n - 1].Pro, tc - foods[n - 1].Carb, tf - foods[n - 1].Fat, foods) ||
		is_possible(n - 1, tp, tc, tf, foods);
}

void run()
{
	ifstream infile("C:/Users/amitanan/Downloads/new_years_resolution.txt");
	ofstream outfile("C:/Users/amitanan/Downloads/results_q2.txt");
	if (!infile.is_open()) { return; }

	int T;

	infile >> T;
	for (int i = 1; i <= T; i++)
	{
		int N, TP, TC, TF;
		vector<Food> foods;

		infile >> TP >> TC >> TF;
		infile >> N;
		for (int j = 0; j < N; j++) {
			int currp, currc, currf;
			infile >> currp >> currc >> currf;
			foods.push_back(Food(currp, currc, currf));
		}

		if (is_possible(N, TP, TC, TF, foods)) {
			outfile << "Case #" << i << ": yes" << endl;
		}
		else {
			outfile << "Case #" << i << ": no" << endl;
		}
	}
	outfile.close();
}

int _tmain(int argc, _TCHAR* argv[])
{
	run();
	getchar();
	return 0;
}
