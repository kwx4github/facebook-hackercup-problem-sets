#include <iostream>
#include <fstream>

using namespace std;

int pro[1000] = {};
int carb[1000] = {};
int fat[1000] = {};

bool match(int, int, int, int, int, int, int, int);

int main()
{
	int cases, curCase;
	ifstream fin ("test.txt");
	ofstream fout ("out.txt");

	fin>>cases;
	curCase = 1;

	while(curCase <= cases)
	{
		int totPro, totCarb, totFat, items;

		fin>>totPro>>totCarb>>totFat>>items;

		for(int k = 0; k < items; k++)
			fin>>pro[k]>>carb[k]>>fat[k];

		bool success = false;

		if(match(totPro, totCarb, totFat, 0, 0, 0, 0, items-1))
			success = true;

		fout<<"Case #"<<curCase<<": ";

		if(success)
			fout<<"yes"<<endl;
		else
			fout<<"no"<<endl;

		for(int k = 0; k < items; k++)
		{
			pro[k] = 0;
			carb[k] = 0;
			fat[k] = 0;
		}

		curCase++;
	}

	return 0;
}

bool match(int proSum, int carbSum, int fatSum, int curPro, int curCarb, int curFat, int index, int n)
{
	if(curPro == proSum && curCarb == carbSum && curFat == fatSum)
		return true;

	if(curPro > proSum || curCarb > carbSum || curFat > fatSum || index > n)
		return false;

	if(match(proSum, carbSum, fatSum, curPro + pro[index], curCarb + carb[index], curFat + fat[index], index + 1, n))
		return true;

	return match(proSum, carbSum, fatSum, curPro, curCarb, curFat, index + 1, n);
}