#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
//#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for( it = coll.begin(); it != coll.end(); ++it)
const int MAXN = 35000;
typedef long long LL;

int a, b, c;
int n;
vector<pair<pair<int, int>, int>> food(20);

bool rec(int i, int ta, int tb, int tc)
{
	if (i == n)
	{
		if (ta == a && tb == b && tc == c) return true;
		else return false;
	}

	if (rec(i + 1, ta + food[i].first.first, tb + food[i].first.second, tc + food[i].second)) return true;
	return rec(i + 1, ta, tb, tc);
}

int main() {
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

	int T;
	cin >> T;
	for (int t = 0; t < T; t++)
	{
		
		cin >> a >> b >> c;
		
		cin >> n;
		for (int i = 0; i < n; i++)
		{
			cin >> food[i].first.first >> food[i].first.second >> food[i].second;
		}
		cout << "Case #" << t + 1 << ": ";
		if (rec(0, 0, 0, 0)) cout << "yes";
		else cout << "no";
		cout << endl;
	}

	return 0;
}