#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
using namespace std;

struct Triple
{
	int x1, x2, x3;
	Triple() : x1(0), x2(0), x3(0) {}
	Triple(int _x1, int _x2, int _x3) : x1(_x1), x2(_x2), x3(_x3) {}
	void scan()
	{
		scanf("%d%d%d", &x1, &x2, &x3);
	}
	bool operator == (Triple t)
	{
		return x1 == t.x1 && x2 == t.x2 && x3 == t.x3;
	}
	Triple operator + (Triple t)
	{
		return Triple(x1 + t.x1, x2 + t.x2, x3 + t.x3);
	}
};

bool bit(int mask, int pos)
{
	return (mask & (1 << pos)) != 0;
}

string solve()
{
	Triple need;
	need.scan();
	int n;
	scanf("%d", &n);
	vector<Triple> list(n);
	for (int i = 0; i < n; i++)
		list[i].scan();

	for (int mask = 0; mask < (1 << n); mask++)
	{
		Triple cur;
		for (int i = 0; i < n; i++)
		{
			if (bit(mask, i))
				cur = cur + list[i];
		}
		if (cur == need)
			return "yes";
	}
	return "no";
}

int main()
{
	freopen("input2.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int t;
	scanf("%d", &t);
	for (int i = 0; i < t; i++)
	{
		string res = solve();
		printf("Case #%d: %s\n", i + 1, res.c_str());
	}

	return 0;
}
