import scala.collection.mutable.ArrayBuffer

object Solution {

  def solve(food : Array[Array[Int]], index : Int, left : (Int, Int, Int)) : Boolean = {
    left match {
      case (0, 0, 0) => true
      case (x, y, z) if (x < 0 || y < 0 || z < 0 || index == food.length) => false
      case (x, y, z) => solve(food, index + 1, left) || solve(food, index + 1, (left._1 - food(index)(0), left._2 - food(index)(1), left._3 - food(index)(2)))
    }
  }

  def main(args: Array[String]) {
    val T = scala.io.StdIn.readInt
    for (t <- 1 to T) {
      val Array(p, c, f) = scala.io.StdIn.readLine.split(" ").map(_.toInt)
      val n = scala.io.StdIn.readInt
      val food = Array.tabulate(n) {
        i => scala.io.StdIn.readLine.split(" ").map(_.toInt)
      }
      println("Case #" + t + ": " + (if (solve(food, 0, (p, c, f))) "yes" else "no"))
    }
  }

}