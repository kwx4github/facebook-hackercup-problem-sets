//Abinash Ghosh(Om)
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <climits>
#include <iostream>
#include <iomanip>
#include <vector>
#include <list>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <sstream>
#include <algorithm>
using  namespace  std;

#define PI acos(-1.0)
#define MAX 10000007
#define EPS 1e-9
#define mem(a,b) memset(a,b,sizeof(a))
#define gcd(a,b) __gcd(a,b)
#define pb push_back
#define mp make_pair
#define x first
#define y second
#define Sort(x) sort(x.begin(),x.end())
#define FOR(i, b, e) for(int i = b; i <= e; i++)
#define pr(x) cout<<x<<"\n"
#define pr2(x,y) cout<<x<<" "<<y<<"\n"
#define pr3(x,y,z) cout<<x<<" "<<y<<" "<<z<<"\n";
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

typedef  long long ll;
typedef  pair <int, int> pii;
typedef  pair <double , double> pdd;
typedef  pair <ll , ll > pll;
typedef  vector <int> vi;
typedef  vector <pii> vpii;
typedef  vector <ll > vl;


//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};
//int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};
//int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
// scanf("%d",&n);

int main()
{
//     READ("new_years_resolution.txt");
//    WRITE("out.txt");
    int T,P,C,F,n;
    int a[25],b[25],c[25];
    scanf("%d",&T);
    FOR(t,1,T)
    {
        scanf("%d%d%d",&P,&C,&F);
        scanf("%d",&n);
        FOR(i,1,n)
        {
            scanf("%d%d%d",&a[i],&b[i],&c[i]);
        }
        bool ans=false;
        for(int i=1; i<(1<<n); i++)
        {
            int d=0,e=0,f=0;

            for(int j=1; j<=n; j++)
            {
                //int ff=(1<<j);
                 //pr3(ff,i,j);
                if((1<<(j-1))&i)
                {
                    d+=a[j];
                    e+=b[j];
                    f+=c[j];
                   //printf("%d ",j);
                }
            }
            if(d==P&&e==C&&f==F)
            {
                ans=true;
                break;
            }
           // printf("\n");
        }
        if(ans)printf("Case #%d: yes\n",t);
        else printf("Case #%d: no\n",t);
    }
    return 0;
}


