#include <iostream>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>


#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()

using namespace std;

struct mtuple {
    int a, b, c;
    mtuple() {
        a = b = c = 0;
    }

    mtuple(int a, int b, int c) : a(a), b(b), c(c) {
    }

    mtuple operator+(const mtuple other) const
    {
        return mtuple(a + other.a, b + other.b, c + other.c);
    }

    bool operator==(const mtuple other) const
    {
        return a == other.a && b == other.b && c == other.c;
    }
};

int solve() {
    mtuple e;
    int n;
    cin >> e.a >> e.b >> e.c >> n;
    vector<mtuple> v(n);
    for (int i = 0; i < n; ++i)
        cin >> v[i].a >> v[i].b >> v[i].c;
    bool ans = false;
    for (int mask = 0; mask < (1 << n); mask++)
    {
        mtuple res(0, 0, 0);
        for (int i = 0; i < n; ++i)
            if ((1 << i) & mask) {
                res = res + v[i];
            }
        if (res == e)
            ans = true;
    }
    if (ans)
        cout << "yes\n";
    else
        cout << "no\n";
}

int main(int argc, char **argv)
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    int tests;
    cin >> tests;
    for (int testcnt = 0; testcnt < tests; testcnt++) {
        cout << "Case #" << testcnt + 1 << ": ";
        solve();
    }
    return 0;
}
