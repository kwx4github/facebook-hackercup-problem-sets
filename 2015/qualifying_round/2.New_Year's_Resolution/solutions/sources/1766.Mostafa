/*
 * p2.cpp
 *
 *  Created on: Jan 9, 2015
 *      Author: mostafaizz
 */


#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

/*
 * ind: is the index to be examined
 * GP,GC,GF: starting with the original and decrease until ZERO
 */
bool solve(int ind,int GP,int GC,int GF,
		vector<int> &P,vector<int> &C,vector<int> &F)
{
	if(!GP && !GC && !GF)
	{
		return true;
	}
	if(ind >= P.size())
	{
		return false;
	}
	return (solve(ind + 1, GP - P[ind],GC - C[ind],GF - F[ind],P,C,F) ||
			solve(ind + 1,GP,GC,GF,P,C,F));
}

int main()
{
	int T,N;
	int GP, GC, GF;

	cin >> T;
	for(int i = 1;i <= T;i++)
	{
		cin >> GP >> GC >> GF;
		cin >> N;
		vector<int> P(N,0), C(N,0), F(N,0);
		for(int j = 0;j < N;j++)
		{
			cin >> P[j] >> C[j] >> F[j];
		}
		bool flag = solve(0,GP,GC,GF,P,C,F);
		cout << "Case #" << i <<": ";
		if(flag)
		{
			cout << "yes" << endl;
		}
		else
		{
			cout << "no" << endl;
		}
	}
	return 0;
}
