#include <iostream>
struct diet
{
	int p;
	int c;
	int f;
};
struct all
{
	bool p;
	bool c;
	bool f;
};
using namespace std;

bool isSubsetSum(int set[], int n, int sum)
{
   if (sum == 0)
     return true;
   if (n == 0 && sum != 0)
     return false;
   if (set[n-1] > sum)
     return isSubsetSum(set, n-1, sum);
   return isSubsetSum(set, n-1, sum) || isSubsetSum(set, n-1, sum-set[n-1]);
}

int main()
{
  int t,i,j,num,n,set[20],sum;
	diet g,d[20];
	all res;
	cin>>t;
	for(i=0;i<t;i++)
	{
		cin>>g.p;
		cin>>g.c;
		cin>>g.f;
		cin>>num;
		for(j=0;j<num;j++)
		{
			cin>>d[j].p;
			cin>>d[j].c;
			cin>>d[j].f;
		}
		for(j=0;j<num;j++)
		{
			set[j]=d[j].p;
		}	
		  n = sizeof(set)/sizeof(set[0]);
		  sum=g.p;	  
		  if (isSubsetSum(set, n, sum) == true)
			 res.p=true;
		  else
			  res.p=false;
		 
		 
		 for(j=0;j<num;j++)
		{
			set[j]=d[j].c;
		}	
		  n = sizeof(set)/sizeof(set[0]);
		  sum=g.p;	  
		  if (isSubsetSum(set, n, sum) == true)
			 res.c=true;
		  else
			  res.c=false;
		
		 for(j=0;j<num;j++)
		{
			set[j]=d[j].f;
		}	
		  n = sizeof(set)/sizeof(set[0]);
		  sum=g.p;	  
		  if (isSubsetSum(set, n, sum) == true)
			 res.f=true;
		  else
			  res.f=false;
		
		 if(res.p==true && res.c==true && res.f==true)
			 cout<<"Case #"<<i+1<<": "<<"yes"<<endl;
		 else
			 cout<<"Case #"<<i+1<<": "<<"no"<<endl;

	}
  return 0;
}