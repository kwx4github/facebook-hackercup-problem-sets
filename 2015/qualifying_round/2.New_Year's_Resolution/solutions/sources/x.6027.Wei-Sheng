#include <iostream>
#include <vector>
#include <string>
using namespace std;

struct Balance {int GP; int GC; int GF;};
struct Food {vector<int> P; vector<int> C; vector<int> F; int size;};
int brute_force (Balance balance, Food food, vector<int> used)
{
    int ret1 = 0;
    int ret2 = 0;
    vector<int>::iterator it;
    int i;

    for (it=used.begin(); it!=used.end(); it++)
    {
        if (*it == -1)
        {
             *it = 1;
             ret1 = brute_force (balance, food, used);
             *it = 0;
             ret2 = brute_force (balance, food, used);
        }    
        if (ret1 == 1) return 1;
        if (ret2 == 1) return 1;
    }

    for (i=0, it=used.begin(); it!=used.end(); i++, it++)
    {
        if (*it == -1)
            return 0;
    }

    for (i=0, it=used.begin(); it!=used.end(); i++, it++)
    {
        if (*it == 1)
        {
            balance.GP -= food.P.at(i);
            balance.GC -= food.C.at(i);
            balance.GF -= food.F.at(i);
        }       
    }

    if (balance.GP==0 && balance.GC==0 && balance.GF==0)
        return 1;
    else 
        return 0;
}

int main()
{
    int input_n;
    int round = 1;

    cin >> input_n;
    for (; input_n>0; input_n--, round++)
    {
        struct Balance balance; cin >> balance.GP >> balance.GC >> balance.GF;
        int food_n; cin >> food_n;
        struct Food food;
        int inP, inC, inF;
        int cnt = 0;
        int ans = 0;
        vector<int> used;

        for (; food_n>0; food_n--)
        {       
            cin >> inP >> inC >> inF;
            if (inP <= balance.GP && inC <= balance.GC && inF <= balance.GF)
            {
                food.P.push_back (inP);
                food.C.push_back (inC);
                food.F.push_back (inF);
                used.push_back(-1);
            }
            else
                cnt++;
        }
        food_n -= cnt;
        food.size = food_n;

        ans = brute_force (balance, food, used);
        if (ans) 
            cout << "Case #" << round << ": yes" << endl;
        else
            cout << "Case #" << round << ": no" << endl;
    }
}
