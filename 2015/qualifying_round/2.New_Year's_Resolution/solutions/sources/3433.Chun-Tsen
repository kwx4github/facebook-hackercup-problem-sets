#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>

#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, A, B) for (int I = (A); I < (B); ++I)
#define RI(X) scanf("%d", &(X))
#define RII(X, Y) scanf("%d%d", &(X), &(Y))
#define RIII(X, Y, Z) scanf("%d%d%d", &(X), &(Y), &(Z))
#define DRI(X) int (X); scanf("%d", &X)
#define DRII(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define DRIII(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define RS(X) scanf("%s", (X))
#define CASET int ___T, case_n = 1; scanf("%d ", &___T); while (___T-- > 0)
#define MP make_pair
#define PB push_back
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define LEN(X) ((int)strlen(X))
#define F first
#define S second
//#ifdef ONLINE_JUDGE
#define FILEIO(name) \
    freopen(name".in", "r", stdin); \
    freopen(name".out", "w", stdout);
//#else
//#define FILEIO(name)
//#endif

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> ii;

int A[3],B[30][3],n;

bool go(int a,int b,int c){
    //cout<<a<<' '<<b<<' '<<c<<endl;
    if(a==0&&b==0&&c==0)return true;
    if(a<0||b<0||c<0)return false;
    REP(i,0,n){
        for(int x=1;x>0;x/=2){
            if(go(a-B[i][0]*x,b-B[i][1]*x,c-B[i][2]*x))
                return true;
        }
    }
    return false;
}

int main()
{
    FILEIO("new_years_resolution");
    DRI(T);
    REP(ks,1,T+1){
        fprintf(stderr,"%d\n",ks);
        REP(i,0,3)RI(A[i]);
        RI(n);
        REP(i,0,n){
            REP(j,0,3)RI(B[i][j]);
        }
        printf("Case #%d: ",ks);
        if(go(A[0],A[1],A[2])){
            puts("yes");
        }
        else puts("no");
    }
    return 0;
}
