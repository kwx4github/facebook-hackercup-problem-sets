//#include <bits/stdc++.h>
    #include <cstring>
    #include <vector>
    #include <list>
    #include <map>
    #include <set>
    #include <deque>
    #include <queue>
    #include <stack>
    #include <bitset>
    #include <algorithm>
    #include <functional>
    #include <numeric>
    #include <utility>
    #include <sstream>
    #include <iostream>
    #include <iomanip>
    #include <cstdio>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #include <memory.h>
    #include <cassert>
    #include <climits>
    using namespace std;
    //end of header files

    #define inf INT_MAX
    #define NO 100005
    #define MOD 10000007

    #define FOR(i,a,b) for(int i=(a);i<(b);i++)
    #define REPI(n) FOR(i,0,n)
    #define REPJ(n) FOR(j,0,n)
    #define REPK(n) FOR(k,0,n)

    #define MIN(a,b) ((a) < (b) ? (a) : (b))
    #define MAX(a,b) ((a) > (b) ? (a) : (b))

    #define Clear(a) memset(a,0,sizeof(a))              //clearing memory of an array
    #define setfalse(a) memset(a,false,sizeof(a))       //setting the array into false
    #define settrue(a) memset(a,true,sizeof(a))         //setting the array into true
    #define clrstr(a) memset(a,'\0',sizeof(a))          //setting string array to null

    #define open freopen("input.txt","r",stdin)         //opening input file
    #define close freopen ("output.txt","w",stdout)     //opening output file

    #define Case(a) printf("Case %d: ",a)               //printing case number
    #define caseh(a) printf("Case #%d: ",a)             //printing case number having '#'
    #define getcase(a) scanf("%d",&a)                   //scanning case number
    #define caseloop(a,b) for(a=1;a<=b;a++)  

    #define inp2(n,m) scanf("%d%d",&n,&m)
    #define inps(s) scanf("%s",s)
    #define out(n) printf("%d\n",n)
    #define out2(n,m) printf("%d %d\n",n,m)

    #define inll(n) scanf("%I64d",&n)
    #define inll2(n,m) scanf("%I64d%I64d",&n,&m)
    #define outll(n) printf("%I64d\n",n)
    #define outll(n) printf("%I64d\n",n)
    #define outll2(n,m) printf("%I64d %I64d\n",n,m)
    #define int_bits __builtin_popcount
    #define ll_bits __builtin_popcountll

    #define take(ar,n) REPI(n)cin>>ar[i] ;
    #define ctake(ar,n,br) REPI(n){cin>>ar[i];br[i]=ar[i];}
    #define print(ar,n) REPI(n)cout<<ar[i]<<" "; 
    
    typedef long long int LL;
    //fast input
    
    int prot[ 100005 ] , carb[ 100005 ] , fat[ 100005 ] , n , gp , gc , gf ;
    
    bool possible( int index , int a , int b , int c ){
         
         if( a == gp && b == gc && c == gf )return true ;
         else if( ( a > gp && b > gc && c > gf ) || ( index > n ) ) return false ;
         else return possible( index + 1 , a + prot[ index ] , b + carb[ index ] , c + fat[ index ] ) || possible( index + 1 , a , b , c ) ;
                  
    }

    int main(){


        //open ; close ;
        int tc ;
        scanf("%d", &tc) ;
        
        FOR( test , 1 , tc + 1 ){
             
             scanf( "%d %d %d" , &gp , &gc , &gf ) ;
             scanf( "%d" , &n ) ;
             
             REPI( n ){
                   
                   scanf( "%d %d %d" , &prot[ i + 1 ] , &carb[ i + 1 ] , &fat[ i + 1 ] ) ;
                         
             }
             
             caseh( test ) ;
             if( possible( 1 , 0 , 0 , 0 ) ){
                 
                 printf("yes\n") ;
                 
             }
             else printf("no\n") ;
             
                  
        }
        

        return 0 ;

    }
