#include <bits/stdc++.h>
#define forall(i,a,b)                   for(int i=a;i<=b;i++)
#define pb                              push_back
#define mp      			make_pair
#define MOD                             1000000007

#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map <string, int> msi;

bool isSubsetSum(vi a,vi b,vi c, int n, int sum1,int sum2,int sum3)
{
   // Base Cases
   if (sum1 == 0&&sum2==0&&sum3==0)
     return true;

   if (n == 0 && (sum1 != 0 ||sum2!=0 || sum3!=0))
     return false;

   // If last element is greater than sum, then ignore it
   if (a[n-1] > sum1||b[n-1]>sum2||c[n-1]>sum3)
     return isSubsetSum(a,b,c, n-1, sum1,sum2,sum3);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(a,b,c, n-1, sum1,sum2,sum3) || isSubsetSum(a,b,c, n-1, sum1-a[n-1],sum2-b[n-1],sum3-c[n-1]);
}

int main()
{
	 #ifndef ONLINE_JUDGE
     freopen("in.txt","r",stdin);
     freopen("out.txt","w",stdout);
     #endif
	 ios_base::sync_with_stdio(false);

	int t;
	cin>>t;
	forall(zz,1,t)
	{
	    int x,y,z;
	    cin>>x>>y>>z;
	    int n;
	    cin>>n;
	    vi a,b,c;
	    int arr[n+1][3];
	    forall(i,0,n-1)
	    {
	        forall(j,0,2)
	        {
	            int xx;
	            cin>>xx;
	            arr[i][j]=xx;
	            if(j==0)a.pb(xx);
	            else if(j==1)b.pb(xx);
	            else c.pb(xx);
	        }
	    }
            if(isSubsetSum(a,b,c,n,x,y,z))
            cout << "Case #" << zz << ": " << "yes" << endl;
        else
            cout << "Case #" << zz << ": " << "no" << endl;








	}
	return 0;
}


