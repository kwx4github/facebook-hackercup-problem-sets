#include<cstdio>
#include<cmath>

struct Nutrients{
	int P;
	int C;
	int F;
};

bool IsPossible(Nutrients task, int items, Nutrients *food){
	Nutrients arr[20];
	Nutrients currentTask=task;
	if(task.P==0&&task.C==0&&task.F==0)return true;
	if(items==0)return false;

	for(int branchCount=0;branchCount<items;branchCount++){
		if (task.P-food[branchCount].P<0
			||task.C-food[branchCount].C<0
			||task.F-food[branchCount].F<0)
			continue;
		for(int i=0;i<items-1;i++){
			if(i==branchCount)arr[i]=food[items-1];
			else arr[i]=food[i];
		}
		currentTask.P=task.P-food[branchCount].P;
		currentTask.C=task.C-food[branchCount].C;
		currentTask.F=task.F-food[branchCount].F;
		if(IsPossible(currentTask,items-1,arr))return true;
	}
	return false;
}

void main(){
	FILE *fp1;
	FILE *fp2;
	fp1=fopen("new_years_resolution.txt","r");
	fp2=fopen("output.txt","w");

	int T;
	int N;
	Nutrients food[20];
	Nutrients task;
	char *str_y="yes";
	char *str_n="no";

	fscanf(fp1,"%d",&T);
	for(int cc=1;cc<=T;cc++){
		fscanf(fp1,"%d",&task.P);
		fscanf(fp1,"%d",&task.C);
		fscanf(fp1,"%d",&task.F);
		fscanf(fp1,"%d",&N);
		for(int fc=0;fc<N;fc++){
			fscanf(fp1,"%d",&food[fc].P);
			fscanf(fp1,"%d",&food[fc].C);
			fscanf(fp1,"%d",&food[fc].F);
		}
		if(IsPossible(task,N,food)){
			fprintf(fp2,"Case #%d: %s\n",cc,str_y);
		}
		else{
			fprintf(fp2,"Case #%d: %s\n",cc,str_n);
		}
	}
}

