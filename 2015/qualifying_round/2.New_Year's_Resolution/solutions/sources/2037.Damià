#include <iostream>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>

#define menja scanf ("%c", &fi)
#define FOR(v, i) for(int i = 0; i < v.size(); ++i)

using namespace std;

char fi;
const int INF = 2000000000;

typedef long long int lol;
typedef long double ld;
typedef vector<int> VI;
typedef vector<bool> VB;
typedef vector<double> VD;
typedef vector<ld> VLD;
typedef pair<int, int> ii;
typedef vector<VI> VVI;
typedef vector<ii> VII;
typedef vector<VII> VVII;
typedef pair<int, ii> iii;
typedef vector<iii> VIII;

struct usa {
  int p, c, f;
  usa(int pp, int cc, int ff) : p(pp), c(cc), f(ff) {}
};

bool guai(int tp, int tc, int tf, vector<usa> food, int n) {
  for (int i = 0; i < 1<<n; ++i) {
    int p = 0, c = 0, f = 0;
    for (int j = 0; j < n; ++j) if (i & 1<<j) { p += food[j].p; c += food[j].c; f += food[j].f; }
    if (p == tp and c == tc and f == tf) return true;
  }
  return false;
}

int main() {
  int t, n;
  int tp, tc, tf;
  int x, y, z;
  scanf ("%d\n", &t);
  for (int i = 1; i <= t; ++i) {
    scanf ("%d %d %d\n", &tp, &tc, &tf);
    scanf ("%d\n", &n);
    vector<usa> food;
    for (int pedra = 0; pedra < n; ++pedra) {
      scanf ("%d %d %d\n", &x, &y, &z);
      food.push_back(usa(x, y, z));
    }
    if (guai(tp, tc, tf, food, n)) printf ("Case #%d: yes\n", i);
    else printf ("Case #%d: no\n", i);
  }
}