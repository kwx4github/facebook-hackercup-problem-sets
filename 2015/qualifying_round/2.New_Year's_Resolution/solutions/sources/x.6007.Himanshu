package algo.Practice;

import java.util.Scanner;
public class NewYearResolutionMerged {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int T = sc.nextInt();
		String[] answers = new String[T];
		int index = 0;
		int p1 = 13, p2 = 59, p3 = 97;
		while (index < T) {
			int Gp = sc.nextInt();
			int Gc = sc.nextInt();
			int Gf = sc.nextInt();
			int N = sc.nextInt();
			int[] P = new int[N + 1];
			int[] C = new int[N + 1];
			int[] F = new int[N + 1];
			
			for (int i = 0; i < N; i++) {
				P[i + 1] = p1 * sc.nextInt();
				P[i + 1] += p2 * sc.nextInt();
				P[i + 1] += p3 * sc.nextInt();
			}
			int G = p1 * Gp + p2 * Gc + p3 * Gf;
			answers[index] = computeAnswer(G, Gp, Gc, Gf, N, P, C, F);
			index++;
		}
		for (int i = 0; i < index; i++) {
			System.out.println("Case #" + (i + 1) + ": " + answers[i]);
		}
	}

	private static String computeAnswer(int G, int Gp, int Gc,int Gf, int N, int[] P, int[] C, int[] F) {
		int maxIndex = G;
		int[][] food = new int[N + 1][maxIndex + 1];

		
		for (int i = 0; i < N; i++) {
				food[i][0] = 0;
		}
		
		for (int j = 0; j < maxIndex; j++) {
				food[0][j] = 0;
		}

		for (int i = 1; i <= N; i++) {
			for (int j = 1; j <= maxIndex; j++) {
				if (P[i] > j || P[i] > G) {
					food[i][j] = food[i - 1][j];		
				}
				else {
						int tempP = P[i] + food[i - 1][j - P[i]];
						if (tempP > j || tempP > G) {
							food[i][j] = food[i - 1][j];
						}
						else {
							food[i][j] = Math.max(tempP, food[i - 1][j]);
						}
					}
					if (food[i][j] == G) {
						return "yes";
					}
				}
			}
		int tP = food[N][maxIndex];
		if (tP == G) {
			return "yes";
		}
		else {
			return "no";
		}
	}
}
