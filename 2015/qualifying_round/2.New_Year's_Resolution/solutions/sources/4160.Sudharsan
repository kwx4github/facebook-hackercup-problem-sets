#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<fstream>
#include<stdlib.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define gc getchar//_unlocked

inline int in()
{
char temp;
	int x=0;
	temp=gc();
	while(temp<48)temp=gc();
	x+=(temp-'0');
	temp=gc();
	while(temp>=48){
		x=x*10;
		x+=(temp-'0');
		temp=gc();
	}
	return x;
}

int main()
{
	FILE *fp;
	fp=fopen("ip.txt","r");
	FILE *op;
	op=fopen("out.txt","w");
	int test;
	fscanf(fp,"%d",&test);
	for(int t=1;t<=test;t++)
	{
		int g1,g2,g3;
		fscanf(fp,"%d%d%d",&g1,&g2,&g3);
		int n;	fscanf(fp,"%d",&n);
		int a[21];
		int b[21];
		int c[21];
		for(int i=1;i<=n;i++)
			fscanf(fp,"%d%d%d",&a[i],&b[i],&c[i]);
//		printf("hello\n");
		int dp[2000][25]={0};
		vector<pair<int,int> > adp[2000][25];
		for(int i=10;i<=g1;i++)
		{
			for(int j=1;j<=n;j++)
			{
				if((a[j]<=i) && ((a[j]+dp[i-a[j]][j-1])>dp[i][j-1]))
				{
					dp[i][j]=a[j]+dp[i-a[j]][j-1];
//					printf("in %d %d %d\n",i,j,dp[i][j]);
					if(!adp[i-a[j]][j-1].size())
						adp[i][j].pb(mp(b[j],c[j]));
					else
						for(int k=0;k<adp[i-a[j]][j-1].size();k++)
							adp[i][j].pb(mp(b[j]+adp[i-a[j]][j-1][k].first,c[j]+adp[i-a[j]][j-1][k].second));
				}
				else if((a[j]>i) || ((a[j]+dp[i-a[j]][j-1])<dp[i][j-1]))
				{
					dp[i][j]=dp[i][j-1];
//					printf("out %d %d %d\n",i,j,dp[i][j]);
					for(int k=0;k<adp[i][j-1].size();k++)
							adp[i][j].pb(mp(adp[i][j-1][k].first,adp[i][j-1][k].second));
				}
				else if((a[i]<=i) && ((a[j]+dp[i-a[j]][j-1])==dp[i][j-1]))
				{
					dp[i][j]=dp[i][j-1];
//					printf("insideout %d %d %d\n",i,j,dp[i][j]);
					if(!adp[i-a[j]][j-1].size())
						adp[i][j].pb(mp(b[j],c[j]));
					else
						for(int k=0;k<adp[i-a[j]][j-1].size();k++)
							adp[i][j].pb(mp(b[j]+adp[i-a[j]][j-1][k].first,c[j]+adp[i-a[j]][j-1][k].second));
					for(int k=0;k<adp[i][j-1].size();k++)
							adp[i][j].pb(mp(adp[i][j-1][k].first,adp[i][j-1][k].second));
				}
			}
		}	
		if(dp[g1][n]!=g1)
		{
			fprintf(op,"Case #%d: no\n",t);
			goto next;
		}
		else
		{
//			printf("hello2\n");
			for(int k=0;k<adp[g1][n].size();k++)
				if((adp[g1][n][k].first==g2) && (adp[g1][n][k].second==g3))
				{
					fprintf(op,"Case #%d: yes\n",t);
					goto next;
				}	
		}
		fprintf(op,"Case #%d: no\n",t);
		next:;
	}
	return 0;
}

