#pragma warning ( disable : 4786 )

#include <iostream>
#include <sstream>

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>

#include <string>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
using namespace std;

//#define _rep( i, a, b, x ) for( __typeof(b) i = ( a ); i <= ( b ); i += x )
#define _rep( i, a, b, x ) for( i = ( a ); i <= ( b ); i += x )
#define rep( i, n ) _rep( i, 0, n - 1, 1 )

#define ff first
#define ss second

#define pii pair< int, int >
#define psi pair< string, int >

#define pb(x) push_back(x)
#define mp(x, y) make_pair(x, y)

#define set(p) memset(p, -1, sizeof(p))
#define clr(p) memset(p, 0, sizeof(p))

//typedef long long i64;
//typedef __int64 i64;
typedef long double ld;

//const double pi = (2.0*acos(0.0));
const double pi = acos(-1.0);
const double eps = 1e-9;
const int inf = (1<<28);
const int MAX = 25;

struct meal_plan {
	int p, c, f;
} mp[MAX];

int n, tp, tc, tf;

meal_plan get_total_meal(int mask) {
	meal_plan ret;
	ret.c = ret.f = ret.p = 0;
	
	for(int i=0, pos=1; i<n; i+=1,pos<<=1) {
		if(pos & mask) {
			ret.c += mp[i].c;
			ret.f += mp[i].f;
			ret.p += mp[i].p;
		}
	}

	return ret;
}

int main() {
	//freopen("new_years_resolution.txt", "r", stdin);
	//freopen("out_new_years_resolution.txt", "w", stdout);
	
	int i, j, k;
	int test, t = 0, kase=0;
	meal_plan tmp;
	bool flg;

	scanf("%d", &test);
	while(test--) {
		scanf("%d %d %d", &tp, &tc, &tf);
		scanf("%d", &n);

		for(i=0; i<n; i+=1) {
			scanf("%d %d %d", &mp[i].p, &mp[i].c, &mp[i].f);
		}

		flg = false;
		for(i=0; i<(1<<n); i+=1) {
			tmp = get_total_meal(i);
			if(tmp.p==tp && tmp.c==tc && tmp.f==tf) {
				flg = true;
				break;
			}
		}

		if(flg == true) {
			printf("Case #%d: yes\n", ++t);
		}
		else {
			printf("Case #%d: no\n", ++t);
		}
	}
	return 0;
}
