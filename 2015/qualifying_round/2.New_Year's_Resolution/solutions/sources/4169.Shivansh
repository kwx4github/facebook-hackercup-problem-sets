#include<stdio.h>

int max(int i,int j){
	if(i>j) return i;
	else return j;
}

int knapSack(int GC, int GP, int GF, int gc_array[], int gp_array[], int gf_array[], int n)
{
    if (n < 0) {
        if((GC==0)&&(GP==0)&&(GF==0)) return 0;
		else return -1;
    }
    if ((gc_array[n] > GC)||(gp_array[n] > GP)||(gf_array[n] > GF)) {
        return knapSack(GC,GP,GF,gc_array,gp_array,gf_array,n-1);
    } else {
        return max(knapSack(GC,GP,GF,gc_array,gp_array,gf_array,n-1), knapSack(GC-gc_array[n],GP-gp_array[n],GF-gf_array[n],gc_array,gp_array,gf_array,n-1));
    }
}

int main(){
	//no. of test cases
	FILE *f_input,*f_output;
	f_input=fopen("new_years_resolution.txt","r");
	f_output=fopen("output.txt","w");
	int t,temp;
	fscanf(f_input,"%d",&t);
	temp=t;
	while(t!=0){
	int gp,gc,gf,n,i;
	//input gp gc gf and no. of foods available
	fscanf(f_input,"%d %d %d",&gp,&gc,&gf);
	fscanf(f_input,"%d",&n);
	int gp_array[n];
	int gc_array[n];
	int gf_array[n];
	//input values of all given foods
	for(i=0;i<n;i++){
		fscanf(f_input,"%d %d %d",&gp_array[i],&gc_array[i],&gf_array[i]);
	}
	int result=knapSack(gc,gp,gf,gc_array,gp_array,gf_array,n);
	if(result>-1) {
        fprintf(f_output,"Case #%d: yes\n",(temp-t+1));
        printf("Case #%d: yes\n",(temp-t+1));
    }
	else {
        fprintf(f_output,"Case #%d: no\n",(temp-t+1));
        printf("Case #%d: no\n",(temp-t+1));
	}

	t--;
	}
	fclose(f_input);
	fclose(f_output);
	return 0;
}
