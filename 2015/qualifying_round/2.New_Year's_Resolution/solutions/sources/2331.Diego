#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <queue>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define INF 1000000000
#define FOR(i, a, b) for(int i=int(a); i<int(b); i++)
#define FORC(cont, it) for(typeof((cont).begin()) it = (cont).begin(); it != (cont).end(); it++)
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;

#define maxN 20

struct Food{
	int c, p, f;
};

int T, caso = 1, N;
Food foods[maxN], desired;

bool solve(int n, Food &ac) {
	if (n == N) return false;
	if (solve(n + 1, ac)) return true;
	ac.c += foods[n].c;
	ac.p += foods[n].p;
	ac.f += foods[n].f;
	if (ac.c == desired.c&&ac.p == desired.p&&ac.f == desired.f) return true;
	bool ret = solve(n + 1, ac);
	ac.c -= foods[n].c;
	ac.p -= foods[n].p;
	ac.f -= foods[n].f;
	return ret;
}

int main() {
	cin >> T;
	while (T--) {
		cin >> desired.p >> desired.c >> desired.f;
		cin >> N;
		FOR(i, 0, N) {
			cin >> foods[i].p >> foods[i].c >> foods[i].f;
		}
		cout << "Case #" << caso++ << ": ";
		Food s{ 0, 0, 0 };
		if (solve(0,s)) {
			cout << "yes";
		}
		else cout << "no";
		cout << endl;
	}
	return 0;
}
