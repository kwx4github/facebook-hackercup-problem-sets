#include <iostream>
#include <cstdio>
#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <climits>
#include <cctype>
#include <cmath>
#include <sstream>
#include <cstdlib>
#include <climits>
#include <ctime>
#include <set>
#include <map>
#include <numeric>
#include <utility>
#include <deque>
#include <queue>
#include <stack>
#include <iomanip>
#include <complex>
#include <list>
#include <bitset>
#include <fstream>
#include <limits>
#include <memory.h>
#define READ(s) freopen(s, "r", stdin)
#define WRITE(s) freopen(s, "w", stdout)
#include<sstream>
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
using namespace std;
struct Set{
int p,c,f;

};
vector<Set>vec;
int sum=0;
bool func(Set rest,int index)
{
rest.p-=vec[index].p;
rest.c-=vec[index].c;
rest.f-=vec[index].f;
sum=rest.p+rest.c+rest.f;

if(sum==0)
 {

   return true;
}
else if(sum>0&&index<vec.size()-1)
{
for(int i=index+1;i<vec.size();i++)
  if(func(rest,i))
    return true;
}
return false;
}
int main(int argc, char *argv[])
{


    READ("new_years_resolution (1).txt");
   WRITE("out.txt");
    int n,t;
    cin>>t;
    for(int i=0; i<t; i++)
    {
Set set1;
cin>>set1.p>>set1.c>>set1.f>>n;
vec.resize(n);
for(int j=0;j<n;j++)
{
cin>>vec[j].p>>vec[j].c>>vec[j].f;

}
bool  pt=false;
for(int j=0;j<n;j++)
{
   if(func(set1,j))
{pt=true;
    cout<<"Case #"<<i+1<<": yes"<<endl;
break;
}
}
if(pt==false)
 cout<<"Case #"<<i+1<<": no"<<endl;
    }



    return 0;
}
