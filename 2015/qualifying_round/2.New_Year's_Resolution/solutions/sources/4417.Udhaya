using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Collections;

namespace Facebook
{
    class NewYearResolution
    {
        static void combine(int[] a, ref List<int> outstr, ref List<int> indexStr, int index, int x, ref ArrayList Format)
        {
            for (int i = index; i < a.Length; i++)
            {

                int count = 0;
                foreach (var item in outstr)
                    count += item;

                if ((a[i] + count) == x)
                {
                    foreach (var item in outstr)
                      Console.Write("Each {0}", item);

                    indexStr.Add(i); 
                    Console.Write("Each {0}", a[i]);
                    Console.WriteLine(" Format : " + string.Join("-", indexStr.Select(y => y.ToString()).ToArray()));
                    Format.Add(string.Join("-", indexStr.Select(y => y.ToString()).ToArray()));
                    indexStr.Remove(i);
                }

                outstr.Add(a[i]);
                indexStr.Add(i);
                combine(a, ref outstr, ref indexStr, i + 1, x, ref Format);
                outstr.Remove(a[i]);
                indexStr.Remove(i);
            }
        }

        static bool IsPossible(int[] expOut, List<int>[] inputList)
        {
            bool ret = true;

            int i = 0;

            ArrayList[] totalList = new ArrayList[3];

            foreach (int x in expOut)
            {
                ArrayList Formart = new ArrayList();
                Console.WriteLine("Next Index..." + i);

                List<int> outList = new List<int>();
                List<int> indexList = new List<int>();
                combine(inputList[i].ToArray(), ref outList, ref indexList, 0, x, ref Formart);

                if (Formart.Count < 1)
                {
                    ret = false;
                    break;
                }

                totalList[i] = Formart;

                i++;                
            }

            if (ret)
            {
                foreach (string s in totalList[0])
                {
                    if (totalList[1].Contains(s))
                    {
                        if (totalList[2].Contains(s))
                        {
                            ret = true;
                            break;
                        }
                        else
                        {
                            ret = false;
                        }
                    }
                    else
                    {
                        ret = false;
                    }
                }
            }

            return ret;
        }

        static void Main()
        {
            int T = -1;
            int total = 0, count = 0;
            string[] fileContents = File.ReadAllLines("input.txt");
            string[] fileOutContents = null;
            
            total = int.Parse(fileContents[0]);
            fileOutContents = new string[total];
            
            for (int i = 1; i < fileContents.Length; i=count )
            {
                T++;
                int no = T + 1;
                string caseOutput = "Case #" + no + ": ";

                Console.WriteLine(caseOutput);

                string[] expectedOutput = fileContents[i].Split(new char[]{ ' ' }, StringSplitOptions.RemoveEmptyEntries);
                int entriesCount = int.Parse(fileContents[++i]);

                int[] expOutList = expectedOutput.Select(int.Parse).ToArray();

                List<int>[] inputList = new List<int>[3];

                for (int j = i+1; j <= i + entriesCount; j++)
                {
                    string[] givenInput = fileContents[j].Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
                    List<int> inList = givenInput.Select(int.Parse).ToList();

                    if (inputList[0] == null)
                    {
                        inputList[0] = new List<int>();
                        inputList[1] = new List<int>();
                        inputList[2] = new List<int>();
                    }

                    inputList[0].Add(inList[0]);
                    inputList[1].Add(inList[1]);
                    inputList[2].Add(inList[2]);
                }

                count = i + entriesCount;
                string result = IsPossible(expOutList, inputList) ? "yes" : "no";
                fileOutContents[T] = caseOutput + result;
                
                count++;
            }

            File.WriteAllLines("output.txt", fileOutContents);

            Console.WriteLine("Completed Total = {0} Processed = {1}", total, fileOutContents.Length);

            Console.ReadLine();
        }
    }     
    
    
}
