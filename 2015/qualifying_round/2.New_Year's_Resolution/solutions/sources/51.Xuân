T = int(raw_input())
for case in xrange(T):
    gp, gc, gf = map(int, raw_input().split(" "))
    N = int(raw_input())
    options = []
    answer = "no"
    for _ in xrange(N):
        p, c, f = map(int, raw_input().split(" "))
        options.append((p, c, f))
    for num in xrange(0, 1 << N):
        bits = map(lambda b: b == '1', bin(num)[2:])
        if len(bits) < N:
            diff = N - len(bits)
            prefix = [False for _ in xrange(diff)]
            prefix.extend(bits)
            bits = prefix
        cp, cc, cf = 0, 0, 0
        for idx, bit in enumerate(bits):
            if bit:
                cp += options[idx][0]
                cc += options[idx][1]
                cf += options[idx][2]
                if cp > gp or cc > gc or cf > gf:
                    break
        if cp == gp and cc == gc and cf == gf:
            answer = "yes"
            break
    print "Case #%d: %s" % (case + 1, answer)