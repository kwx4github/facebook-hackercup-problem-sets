#include <iostream>
#include <vector>
#include <tuple>
#include <algorithm>

#define FOR(i,a,b) for(ll i=(a); i<(b); ++i)

using namespace std;
typedef long long ll;
typedef tuple<ll,ll,ll> ti;

ti operator+(const ti& a, const ti& b) {
    return make_tuple(get<0>(a)+get<0>(b),get<1>(a)+get<1>(b),get<2>(a)+get<2>(b));
}

int main() {
    int T;
    cin >> T;
    FOR(t,0,T) {
        cout << "Case #" << t+1 << ": ";
        ll gp, gc, gf, n;
        cin >> gp >> gc >> gf >> n;
        vector<ti> possible {ti{0,0,0}};
        possible.reserve(1<<n);
        FOR(i,0,n) {
            ll p, c, f;
            cin >> p >> c >> f;
            FOR(j,0,1<<i) {
                possible.push_back(possible[j]+make_tuple(p,c,f));
            }
        }
        if(find(begin(possible),end(possible),make_tuple(gp,gc,gf)) != end(possible))
            cout << "yes";
        else
            cout << "no";
        cout << endl;
    }
}
