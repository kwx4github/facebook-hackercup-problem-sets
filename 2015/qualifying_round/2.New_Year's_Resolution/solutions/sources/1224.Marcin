#include <iostream>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

typedef pair<int, int> pii;
typedef pair<int, pii> tri;

set<tri> pos;
set<tri>::iterator iter;
vector<tri> wrzuc;

void clear()
{
    pos.clear();
    wrzuc.clear();
    
    pos.insert(tri(0, pii(0, 0)) );
}

void dodaj(tri a, tri b)
{
    tri helper;
    
    helper.first = a.first + b.first;
    helper.second.first = a.second.first + b.second.first;
    helper.second.second = a.second.second + b.second.second;
    
    wrzuc.push_back(helper);
}

int main()
{
    ios_base::sync_with_stdio(0);
    
    int testy;
    cin>>testy;
    
    for(int t=1; t<=testy; t++)
    {
        clear();
        
        int prot, carbo, fat;
        cin>>prot>>carbo>>fat;
        
        tri pat = tri(prot, pii(carbo, fat) );
        
        int n;
        cin>>n;
        
        while(n--)
        {
            int p, c, f;
            cin>>p>>c>>f;
            
            tri meal = tri(p, pii(c, f) );
            
            iter = pos.begin();
            
            while(iter != pos.end())
            {
                tri akt = *iter;
                dodaj(akt, meal);
                
                iter++;
            }
            
            for(int i=0; i<wrzuc.size(); i++)
            {
                if(pos.count(wrzuc[i]) == 0)
                    pos.insert(wrzuc[i]);
            }
            
            wrzuc.clear();
            
      
        }
        
        cout<<"Case #"<<t<<": ";
        
        if(pos.count(pat) != 0)
            cout<<"yes\n";
        else
            cout<<"no\n";
    }
    
    
    return 0;
}