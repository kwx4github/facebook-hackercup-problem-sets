#include <cstdio>
#include <cstdlib>
#include <algorithm>

FILE *out ;

const int SIZE_2N = (1 << 20) + 10 ;
const char ANS[2][10] = {"no" , "yes"} ;

int T , n ;
int tar[3] ;
int ary[SIZE_2N][3] ;
int vis[SIZE_2N] , sum[SIZE_2N][3] ;

void cal(int s)
{
	if(vis[s] == 1) return ;
	int a = (s & -s) , b = s - a ;
	cal(b) ;
	for(int i = 0 ; i < 3 ; ++i)
		sum[s][i] = ary[a][i] + sum[b][i] ;
}

bool chk(int s)
{
	if(vis[s] == 0) cal(s) ;
	int r = 1 ;
	for(int i = 0 ; i < 3 ; ++i)
		r = (r && (sum[s][i] == tar[i])) ;
	return r ;
}

void clear(void)
{
	for(int i = 0 ; i <= (1 << n) ; ++i)
	{
		vis[i] = 0 ;
		for(int j = 0 ; j < 3 ; ++j)
			ary[i][j] = sum[i][j] = 0 ;
	}
}

int main(void)
{
	out = fopen("b.out" , "w") ;
	scanf("%d" , &T) ;
	for(int count = 1 ; count <= T ; ++count , clear())
	{
		for(int i = 0 ; i < 3 ; ++i)
			scanf("%d" , &tar[i]) ;
		scanf("%d" , &n) ;
		for(int i = 0 ; i < n ; ++i)
			for(int j = 0 ; j < 3 ; ++j)
				scanf("%d" , &ary[1 << i][j]) ;
		
		int ans = 0 ;
		vis[0] = 1 ;
		for(int i = 1 ; ans == 0 && i < (1 << n) ; ++i)
			if(chk(i)) ans = 1 ;
		
		fprintf(out , "Case #%d: %s\n" , count , ANS[ans]) ;
	}
	
	return 0 ;
}

