#include <stdio.h>
#include <stdlib.h>

int found = 0;

void subset_2d_sum(int s[][3],
                int s_size,
                int sum1, int sum2, int sum3, int ite,
                int const target_sum1, int const target_sum2, int const target_sum3)
{
    if( (target_sum1 == sum1) && (target_sum2 == sum2) && ( target_sum3 == sum3)  )
    {
        found = 1;
        return;
    }
    else
    {
        // generate nodes along the breadth
        for( int i = ite; i < s_size; i++ )
        {
            // consider next level node (along depth)
            if(found == 1)
                return;
            subset_2d_sum(s, s_size, sum1 + s[i][0], sum2 + s[i][1], sum3 + s[i][2], i + 1, target_sum1, target_sum2, target_sum3);
        }
    }
}

int main()
{
    int array1[20][3];
    int i = 0, j = 0, k = 1, num_input = 0, target_sum1 = 0, target_sum2 = 0, target_sum3 = 0, size = 0;
    scanf("%d", &num_input);

    while(num_input > 0) {
        target_sum1 = 0; target_sum2 = 0; target_sum3 = 0; size = 0; found = 0;
        scanf("%d %d %d", &target_sum1, &target_sum2, &target_sum3);
        scanf("%d", &size);
        for( i = 0; i < size; i++) {
            for( j = 0; j < 3; j++) {
                scanf("%d", &array1[i][j]);
            }
        }
        subset_2d_sum(array1, size, 0, 0, 0, 0, target_sum1, target_sum2, target_sum3);
        if(found == 1)
            printf("Case #%d: yes\n", k);
        else
            printf("Case #%d: no\n", k);

        k++;
        num_input--;
    }
    return 0;
}
