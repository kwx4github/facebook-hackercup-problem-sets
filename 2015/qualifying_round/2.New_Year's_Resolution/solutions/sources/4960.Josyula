from itertools import combinations
def weightChecker(food, goal):
    for i in range(len(food)):
        for number in list(combinations(food, i+1)):
            if sum(number) == goal:
                print number, sum(number)
                return True

def listWeightChecker(totalvalues,fooditems):
    for foods in fooditems:
        protien = [food[0] for food in foods]
        carbs = [food[1] for food in foods]
        fats = [food[2] for food in foods]
        if sum(protien) == totalvalues[0] and sum(carbs) == totalvalues[1] and sum(fats) == totalvalues[2]:
            return True

def bruteforce( totalvalues, foods):
    pcf = [(int(food.split(" ")[0]),int(food.split(" ")[1]),int(food.split(" ")[2].strip("\n")))
    for food in foods]
    totalvalues = ( int(totalvalues.split(" ")[0]),
                    int(totalvalues.split(" ")[1]),
                    int(totalvalues.split(" ")[2].strip("\n"))
                    )
    #print pcf, type(pcf), type(pcf[0]), type(pcf[0][0])
    for i in range(len(pcf)):
        if listWeightChecker(totalvalues,list(combinations(pcf, i+1))): 
            return True

    

if __name__ == "__main__":
    inputfile = open("input.txt")
    values = inputfile.readlines()
    total = int(values[0])
    case = 1
    line = 0
    while total > 0:
        totalvalues = values[line+1]
        totalfood = int(values[line+2])
        line += 2
        if bruteforce(totalvalues, values[line+1:line+totalfood+1]):
            print "Case #{0}: {1}".format(case, "yes")
        else:
            print "Case #{0}: {1}".format(case, "no")
        case +=1 
        line += totalfood
        total -= 1
