#include <stdio.h>
int isSubset(int p[],int c[],int f[],int gp,int gc,int gf,int n)
{
	if(gp==0&&gc==0&&gf==0)
	   return 1;
	if(n==0&&(gp!=0||gc!=0||gf!=0))
	   return 0;
	if(((gp==0)&&(gc!=0||gf!=0))||((gc==0)&&(gp!=0||gf!=0))||((gf==0)&&(gc!=0||gp!=0)))
	   return 0;
	if(p[n-1]>gp||c[n-1]>gc||f[n-1]>gf)
	   return isSubset(p,c,f,gp,gc,gf,n-1);
	return(isSubset(p,c,f,gp-p[n-1],gc-c[n-1],gf-f[n-1],n-1)||isSubset(p,c,f,gp,gc,gf,n-1));   
}
int main(void) {
	int t,i;
	i=1;

	scanf("%d",&t);
	while(i<=t)
	{
		int n,j;
		
		int gp,gc,gf;
		scanf("%d%d%d",&gp,&gc,&gf);
		scanf("%d",&n);
		int p[n],c[n],f[n];
		for(j=0;j<n;j++)
		{
			scanf("%d%d%d",&p[j],&c[j],&f[j]);
			
		}
		//printf("%d %d %d %d %d %d %d\n",gp,gc,gf,n,p[0],c[0],f[0]);
		if(isSubset(p,c,f,gp,gc,gf,n))
		   printf("Case #%d: yes\n",i);
		else
		   printf("Case #%d: no\n",i);
	    i++; 	   
		
	}
	return 0;
}

