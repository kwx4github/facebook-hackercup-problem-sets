type
	visiting = array [0..35] of boolean;

var	
	protein, carbohidrat, fat: array [0..35] of longint;
	visited: visiting;
	get: boolean;
	n: longint;
	fin, fout: textfile;

procedure solve(now, Gp, Gc, Gf: longint; visited: visiting);

var i: longint;

begin
	if not(visited[now]) then
	begin
		visited[now] := true;
		if ((Gp - protein[now] = 0) and (Gc - carbohidrat[now] = 0) and (Gf - fat[now] = 0)) then
			get := true;
		if ((Gp - protein[now] >= 0) and (Gc - carbohidrat[now] >= 0) and (Gf - fat[now] >= 0)) then
			for i := (now + 1) to n do
				solve(i, (Gp - protein[now]), (Gc - carbohidrat[now]), (Gf - fat[now]), visited)
		else
			for i := now + 1 to n do
				solve(i, Gp, Gc, Gf, visited);
	end;
end;

var	
	t, test, Gp, Gc, Gf, i: longInt;

begin
	assign(fin, 'new_years_resolution.txt');
	assign(fout, 'fukyuhehehe.out');
	reset(fin);
	rewrite(fout); 
	readln(fin, t);
	for test := 1 to t do
	begin
		write(fout, 'Case #', test, ': ');
		readln(fin, Gp, Gc, Gf);
		readln(fin, n);
		fillChar(protein, sizeOf(protein), 0);
		fillChar(carbohidrat, sizeOf(carbohidrat), 0);
		fillChar(fat, sizeOf(fat), 0);
		fillChar(visited, sizeOf(visited), false);
		for i := 1 to n do
			readln(fin, protein[i], carbohidrat[i], fat[i]);
		get := false;
		for i := 1 to n do
			solve(i, Gp, Gc, Gf, visited);
		if (get) then
			writeln(fout, 'yes')
		else 
			writeln(fout, 'no');
	end;
	close(fin);
	close(fout);
end.