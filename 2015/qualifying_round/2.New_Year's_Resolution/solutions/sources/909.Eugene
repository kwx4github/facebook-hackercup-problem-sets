import scala.io.Source

object NewYearsResolution{

  def solve(goal: (Int, Int, Int), foods: Seq[(Int, Int, Int)]): Boolean = {
    (1 to foods.size).exists(n =>
      foods.combinations(n).exists(c =>
        c.fold((0, 0, 0))((a, f) => (a._1 + f._1, a._2 + f._2, a._3 + f._3)) == goal
      ))
  }

  def main(args: Array[String]) {
    val lines = Source.stdin.getLines()

    def getInt = lines.next().toInt

    def get3Ints = {
      val Array(p, c, f) = lines.next().split(" ").map {
        _.toInt
      }
      (p, c, f)
    }

    val testCount = getInt

    1 to testCount foreach { testNumber =>
      val goal = get3Ints
      val n = getInt
      val foods = 1 to n map { _ =>
        get3Ints
      }
      val answer = if (solve(goal, foods)) {
        "yes"
      } else {
        "no"
      }
      println(s"Case #$testNumber: $answer")
    }
  }
}
