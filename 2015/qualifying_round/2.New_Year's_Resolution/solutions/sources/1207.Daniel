#include <bits/stdc++.h>
#define f(i,x,y) for (int i = x; i < y; i++)
#define fd(i,x,y) for(int i = x; i>= y; i--)
#define FOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define vint vector<int>
#define ll long long
#define clr(A,x) memset(A, x, sizeof A)
#define pb push_back
#define pii pair<int,int>
#define fst first
#define snd second
#define ones(x) __builtin_popcount(x)
#define cua(x) (x)*(x)
#define eps (1e-9)
#define oo (1<<30)
#define debug(x) cout <<#x << " = " << x << endl
#define adebug(x,n) cout <<#x<<endl; f(i,0,n)cout<<x[i]<<char(i+1==n?10:32)
#define mdebug(x,m,n) cout <<#x<<endl; f(i,0,m)f(j,0,n)cout<<x[i][j]<<char(j+1==n?10:32)
#define N 1
using namespace std;
template<class T> inline void mini(T &a,T b){if(b<a) a=b;}
template<class T> inline void maxi(T &a,T b){if(b>a) a=b;}

struct food {
	int P,C,F;
	food() {}
	food(int P, int C, int F) : P(P), C(C), F(F) {}
	void read() {
		scanf("%d %d %d", &P, &C, &F);
	}
};

bool operator==(food a, food b) {
	return a.P == b.P && a.C == b.C && a.F == b.F;
}

food operator+(food a, food b) {
	return food(a.P + b.P, a.C + b.C, a.F + b.F);
}


int t, n;
food S, a[20], mask[1<<20];

int main(){
	cin >> t;
	f(caso,0,t) {
		S.read();
		cin >> n;
		f(i,0,n) a[i].read();

		mask[0] = {0, 0, 0};
		bool ok = 0;
		f(i,1,1<<n) {
			int j = __builtin_ctz(i);
			mask[i] = mask[i^(1<<j)] + a[j];
			if (mask[i] == S) ok = 1;
		}
		printf("Case #%d: %s\n", caso+1, ok? "yes" : "no");
	}
}


