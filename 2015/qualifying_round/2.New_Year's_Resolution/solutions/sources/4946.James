//jporcelli, competitive coding solution template

#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <bitset>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <map>
#include <set>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> ii;
typedef pair<string,int> si;
typedef pair<int,ii> iii;
typedef vector<si> vsi;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<string> vs;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
typedef map<string,vs> msvs;
typedef map<string,int> msi;
typedef map<string,string> mss;
typedef map<int,bool> mib;

#define REP(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define REPD(i,n) for(int i = (n) - 1; i >= 0; i--)
#define FOR(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define FORD(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define FORN(i,a,b) for(int i = (a), _b = (b); i < _b; i++)
#define FOREACH(it,c) for (__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define RESET(c,x) memset (c, x, sizeof (c))
#define DEBUG1(s,c) cout << s << c << endl

#define PI acos(-1)
#define sqr(x) ((x) * (x))
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define ALL(c) (c).begin(), (c).end()
#define SIZE(c) (int)(c).size()

#define INF 1000000000L

#define PROD //clocking off

#define MAX_SUM 1000
#define MAXN 20

bool finish; //glb kill

inline bool reject(int cur[], int g[]){
	if(cur[0]>g[0]||cur[1]>g[1]||cur[2]>g[2])
		return true;
	else 
		return false;
}

inline bool accept(int cur[], int g[], int k){
	if((cur[0] == g[0]) && (cur[1] == g[1]) && (cur[2] == g[2])){
		cout << "Case #" << k << ": " << "yes" << endl;

		finish=true;
		return true;
	}
	return false;
}

inline void bt(int f[][3], int g[], int cur[], int n, int k){
	if(reject(cur,g)) return;
	if(accept(cur,g,k)) return;
	REP(i,n){
		//make move
		cur[0]+=f[i][0];
		cur[1]+=f[i][1];
		cur[2]+=f[i][2];
		
		bt(f,g,cur,n,k);
		//unmake move
		cur[0]-=f[i][0];
		cur[1]-=f[i][1];
		cur[2]-=f[i][2];
		if(finish) return;
	}
}

class Main{
public:
	void solve(){
#ifndef PROD
clock_t stop_s,start_s;
start_s=clock();
#endif

		int t;
		cin >> t;
		FOR(k,1,t){
			int gp,gc,gf;
			cin >> gp >> gc >> gf;
			
			int g[3];
			g[0]=gp; g[1]=gc; g[2]=gf;
			
			int n;
			cin >> n;

			int f[n][3];
			REP(i,n){
				int a,b,c;
				cin >> a >> b >> c;
				f[i][0]=a; 
				f[i][1]=b; 
				f[i][2]=c;
			}

			int cur[3]={0};
			finish=false;
			bt(f,g,cur,n,k);

			if(!finish) 
				cout << "Case #" << k << ": " << "no" << endl;
		}

#ifndef PROD
stop_s=clock();
cout << "time: " << (stop_s-start_s)/double(CLOCKS_PER_SEC)*1000 << endl;
#endif
	}
};

int main(int argc, char *argv[]){
	Main m;
	m.solve();
	return 0;
}
