package timxad;

import java.io.*;
import java.util.StringTokenizer;

public class TaskB {
    public static void main(String[] args) {
//        InputStream inputStream = System.in;

        InputStream inputStream = null;
        try {
            inputStream = new FileInputStream(new File("input.txt"));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

//        OutputStream outputStream = System.out;

        OutputStream outputStream = null;
        try {
            outputStream = new FileOutputStream(new File("output.txt"));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);

        int nTest = in.nextInt();
        for (int i = 1; i <= nTest; ++i) {
            TaskSolver solver = new TaskSolver();
            solver.solve(i, in, out);
        }
        out.close();
    }
}

class TaskSolver {
    static int gp, gc, gf, n;
    static int[] p, c, f;
    
    static boolean isOk(int step, int cp, int cc, int cf) {
        if (cp == 0 && cc == 0 && cf == 0) {
            return step >= -1;
        }
        
        if (step == -1) {
            return false;
        }
        
        if (cp >= p[step] && cc >= c[step] && cf >= f[step]) {
            boolean take = isOk(step - 1, cp - p[step], cc - c[step], cf - f[step]);
            if (take) return true;
        }
        return isOk(step -1, cp, cc, cf);
    }
    
    public void solve(int testNumber, InputReader in, PrintWriter out) {
        String verdict = "error";
        
        gp = in.nextInt();
        gc = in.nextInt();
        gf = in.nextInt();
        n = in.nextInt();
        p = new int[n];
        c = new int[n];
        f = new int[n];
        
        for (int i = 0; i < n; ++i) {
            p[i] = in.nextInt();
            c[i] = in.nextInt();
            f[i] = in.nextInt();
        }

        verdict = isOk(n - 1, gp, gc, gf) ? "yes" : "no";

        out.println("Case #" + testNumber + ": " + verdict);
    }
}


class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

}
