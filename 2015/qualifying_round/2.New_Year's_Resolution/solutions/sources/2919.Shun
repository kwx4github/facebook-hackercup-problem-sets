#include <bits/stdc++.h>
using namespace std;

typedef ostringstream OSS;
typedef istringstream ISS;

typedef long long LL;
typedef pair<int, int> PII;

typedef vector<int> VI;
typedef vector<VI> VVI;
typedef vector<LL> VLL;
typedef vector<VLL> VVLL;
typedef vector<string> VS;
typedef vector<VS> VVS;
typedef vector<bool> VB;
typedef vector<VB> VVB;

typedef vector<PII> VPII;

#define fst first
#define snd second
#define MP make_pair
#define PB push_back
#define ALL(x) (x).begin(),(x).end()
#define RANGE(x,y,maxX,maxY) (0 <= (x) && 0 <= (y) && (x) < (maxX) && (y) < (maxY))
#define DUMP( x ) cerr << #x << " = " << ( x ) << endl

template < typename T > inline T fromString(const string &s) { T res; ISS iss(s); iss >> res; return res; };
template < typename T > inline string toString(const T &a) { OSS oss; oss << a; return oss.str(); };

const int INF = 0x3f3f3f3f;
const LL INFL = 0x3f3f3f3f3f3f3f3fLL;
const int DX[]={1,0,-1,0},DY[]={0,-1,0,1};

bool match(VI &a, VI &b) {
	for (int i = 0; i < 3; i++) {
		if (a[i] != b[i]) return false;
	}
	return true;
}

bool solve() {
	VI gs(3);
	for (auto &g : gs) cin >> g;
	int N;
	cin >> N;
	

	VVI fs(N, VI(3));
	for (auto &f : fs) {
		for (auto &a : f) {
			cin >> a;
		}
	}

	for (int p = 0; p < 1 << N; p++) {
		VI sum(3);

		for (int i = 0; i < N; i++) {
			if (!(1 << i & p)) continue;

			for (int j = 0; j < 3; j++) {
				sum[j] += fs[i][j];
			}
		}

		if (match(gs, sum)) return true;
	}

	return false;
}

int main(void) {
	int T;
	cin >> T;

	for (int ti = 1; ti <= T; ti++) {
		bool res = solve();
		cout << "Case #" << ti << ": " << (res ? "yes" : "no") << endl;
	}

	return 0;
}
