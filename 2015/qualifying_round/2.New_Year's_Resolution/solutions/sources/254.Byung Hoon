#include <iostream>
#include <cstdio>
#include <fstream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

typedef pair<int, int> ii;
typedef pair<ii, int> iii;

vector<iii> foods;

int T, P, C, F, N;

bool valid(int p, int c, int f, vector<bool> eaten) {
    //printf("valid(%d, %d, %d)\n", p, c, f);
    for (int i = 0; i < N; i++) {
        if (!eaten[i]) {
            // if all zero, return true;
            int newp = p - foods[i].first.first;
            int newc = c - foods[i].first.second;
            int newf = f - foods[i].second;
            
            //printf("If eat (%d, %d, %d), newp = %d, newc = %d, newf = %d\n", foods[i].first.first, foods[i].first.second, foods[i].second, newp, newc, newf);
            
            if (newp == 0 && newc == 0 && newf == 0) return true;
            if (min(min(newp, newc), newf) >= 0) {
                eaten[i] = true;
                if (valid(newp, newc, newf, eaten)) return true;
                eaten[i] = false;
            }
        }
    }
    return false;
}

void printFoods() {
    for (int i = 0; i < N; i++) {
        printf("(%d, %d, %d)\n", foods[i].first.first, foods[i].first.second, foods[i].second);
    }
}

int main() {
    ifstream cin("/Users/byunghoon/Desktop/Programs/Programs/in.txt");
    ofstream cout("/Users/byunghoon/Desktop/Programs/Programs/out.txt");
    
    cin >> T;
    
    for (int i = 0; i < T; i++) {
        cout << "Case #" << i+1 << ": ";
        cin >> P >> C >> F >> N;
        foods.clear();
        vector<bool> eaten(N, false);
        for (int j = 0; j < N; j++) {
            int a, b, c;
            cin >> a >> b >> c;
            foods.push_back(iii(ii(a, b), c));
        }
        //printFoods();
        bool isValid = valid(P, C, F, eaten);
        if (isValid) cout << "yes" << endl;
        else cout << "no" << endl;
    }
    return 0;
}