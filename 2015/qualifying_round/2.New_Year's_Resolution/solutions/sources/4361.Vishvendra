#include <iostream>
using namespace std;

bool _isDietPossibleRecur(int **arr, int si, int n, int sumP, int sumC, int sumF, int Gp, int Gc, int Gf) {
	if(si < n)	{
		if((sumP + arr[si][0] == Gp) && (sumC+arr[si][1] == Gc) && (sumF+arr[si][2] == Gf)) {
			return 1;
		}
		return _isDietPossibleRecur(arr, si+1, n, sumP+arr[si][0], sumC+arr[si][1], sumF+arr[si][2], Gp, Gc, Gf) || 
			_isDietPossibleRecur(arr, si+1, n, sumP, sumC, sumF, Gp, Gc, Gf);
	}
	return 0;
}

bool isDietPossible(int **arr, int n, int Gp, int Gc, int Gf) {
	int sum[3] = {0};
	return _isDietPossibleRecur(arr, 0, n, 0, 0, 0, Gp, Gc, Gf);
}

void input(int testcase_no) {
	int Gp,Gc,Gf;
	int t;	/*testcases*/
	cin>>Gp>>Gc>>Gf;
	cin>>t;
	int **arr = new int*[t];
	for (int i = 0; i < t; ++i)	{
		arr[i] = new int [3];
		for (int j = 0; j < 3; ++j)	{
			cin>>arr[i][j];
		}
	}
	if(isDietPossible(arr, t, Gp, Gc, Gf))
		cout<<"Case #"<<testcase_no<<": yes"<<endl;
	else
		cout<<"Case #"<<testcase_no<<": no"<<endl;
}

void test() {
	int testCases;
	cin>>testCases;
	for(int i = 1; i <= testCases; ++i) {
		input(i);
	}
}

int main(int argc, char const *argv[])	{
	test();
	return 0;
}