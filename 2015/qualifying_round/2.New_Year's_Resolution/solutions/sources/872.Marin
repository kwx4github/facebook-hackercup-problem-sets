import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;


public class NewYearsResolution {

	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new FileReader(new File("new_years_resolution.txt")));
		BufferedWriter bw = new BufferedWriter(new FileWriter(new File("new_years_resol_out.txt")));
		int T = Integer.parseInt(br.readLine());
		for(int caseNum = 1; caseNum<=T; caseNum++){
			String[] amount = br.readLine().split(" ");
			int Gp = Integer.parseInt(amount[0]);
			int Gc = Integer.parseInt(amount[1]);
			int Gf = Integer.parseInt(amount[2]);
			int N = Integer.parseInt(br.readLine());
			Food[] foods = new Food[N];
			for(int foodNum = 0; foodNum<N; foodNum++){
				String[] currFood = br.readLine().split(" ");
				foods[foodNum] = new Food(Integer.parseInt(currFood[0]), Integer.parseInt(currFood[1]), Integer.parseInt(currFood[2]));
			}
			boolean ans = containsSums(foods, foods.length, Gp, Gc, Gf);
			String word = "yes";
			if(!ans) word = "no";
			bw.write("Case #"+caseNum+": "+word+"\n");
		}
		br.close();
		bw.flush();
		bw.close();
	}
	
	public static boolean containsSums(Food[] foods, int currIndex, int Gp, int Gc, int Gf){
		if(Gp==Gc && Gc==Gf && Gf==0) return true;
		if(currIndex==0) return false;
		Food f = foods[currIndex-1];
		if(f.p>Gp || f.c>Gc || f.f>Gf) return containsSums(foods, currIndex-1, Gp, Gc, Gf);
		else return containsSums(foods, currIndex-1, Gp, Gc, Gf) || containsSums(foods, currIndex-1, Gp-f.p, Gc-f.c, Gf-f.f);
	}
	
	static class Food{
		int p;
		int c;
		int f;
		
		public Food(int p, int c, int f){
			this.p = p;
			this.c = c;
			this.f = f;
		}
		
	}
	
}
