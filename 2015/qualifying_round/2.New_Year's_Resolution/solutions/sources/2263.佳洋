/*
author:ljy
university:South China Agricultural University
language:C++
*/
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int inf = 0x7fffffff;
const double eps = 1e-9;
const double PI = acos(-1.0);
const int N = 105000;

int cas,n;

struct Food
{
    int calories[3];
    void input()
    {
        for(int i=0;i<3;i++)
            scanf("%d",calories+i);
    }
    void clear()
    {
        for(int i=0;i<3;i++)
            calories[i]=0;
    }
    bool operator > (const Food &rhs) const
    {
        for(int i=0;i<3;i++)
            if(calories[i]>rhs.calories[i])
                return true;
        return false;
    }
    bool operator == (const Food &rhs) const
    {
        for(int i=0;i<3;i++)
            if(calories[i]!=rhs.calories[i])
                return false;
        return true;
    }
    Food operator + (const Food &rhs) const
    {
        Food ans;
        for(int i=0;i<3;i++)
            ans.calories[i]=calories[i]+rhs.calories[i];
        return ans;
    }
    Food operator - (const Food &rhs) const
    {
        Food ans;
        for(int i=0;i<3;i++)
            ans.calories[i]=calories[i]-rhs.calories[i];
        return ans;
    }
    void output()
    {
        for(int i=0;i<3;i++)
            printf("%d ",calories[i]);
        puts("");
    }
}dest,data[30],res;

bool dfs(int u)
{
    if(res==dest)
        return true;
    if(res>dest)
        return false;
    if(u==n)
        return false;
    for(int i=u;i<n;i++)
    {
        res=res+data[i];
        if(dfs(i+1))
            return true;
        res=res-data[i];
    }
    return false;
}

void solve()
{
    dest.input();
    res.clear();
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        data[i].input();
    if(dfs(0))
        printf("Case #%d: yes\n",cas);
    else
        printf("Case #%d: no\n",cas);
}

int main()
{
    #ifdef LOCAL
        freopen("in","r",stdin);
        freopen("out","w",stdout);
    #endif
    int t;
    scanf("%d",&t);
    for(cas=1;cas<=t;cas++)
        solve();
    return 0;
}
