
n = gets.to_i

PROTEIN=0
CARBO=1
FAT=2


class Array
  def sum
    inject{|sum,x| sum + x }
  end
end


def test?(limits, meals)
  PROTEIN.upto(FAT) do |nut|
    amount = meals.map{|meal| meal[nut]}.sum
    return false if amount != limits[nut]
  end
  return true
end


def possible?(limits, meals)
  size = meals.size
  1.upto(size) do |subsize|
    meals.combination(subsize).each do |sub_meals|
      return true if test?(limits, sub_meals)
    end
  end
  return false
end


1.upto(n) do  |i|
  limits = gets.strip.split.map(&:to_i)
  nfood  = gets.strip.to_i
  meals = nfood.times.collect do 
    gets.strip.split.map(&:to_i)
  end

  answer = possible?(limits, meals) ?  "yes" : "no"

  puts "Case ##{i}: #{answer}"
end
