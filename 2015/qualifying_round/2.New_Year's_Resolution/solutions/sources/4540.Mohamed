#include <iostream>
#include <vector>
#include <fstream>
using namespace std;

struct food {
    int p, c, f;
};

int Gp, Gc, Gf;
int t, n;
vector<food> foods;
bool yes = false;

void solve(food k, int j)
{
    //cout << Gp << ' ' << Gc << ' ' << Gf << endl;
    //cout << k.p << ' ' << k.c << ' ' << k.f << endl;
    if (k.p == Gp && k.c == Gc && k.f == Gf)
    {
        //cout << f.p << ' ' << f.c << ' ' << f.f << endl;
        yes = true;
        return;
    }
    
    for (int i = j+1; i<foods.size(); i++)
    {
        food r;
        r.p = k.p + foods[i].p;
        r.c = k.c + foods[i].c;
        r.f = k.f + foods[i].f;
        solve(r, i);
    }
}

int main()
{
    ifstream f("new_years_resolution.txt");
    ofstream out("output.txt");
    int temp;
    f >> t;
    
    for (int i=0; i<t; i++)
    {
        f >> Gp >> Gc >> Gf;
        f >> n;
        //cout << Gp << ' ' << Gc << ' ' << Gf << endl;
        for (int j=0; j<n; j++)
        {
            food fod;
            
            f >> temp;
            fod.p = temp;
            f >> temp;
            fod.c = temp;
            f >> temp;
            fod.f = temp;
            //cout << fod.p << ' ' << fod.c << ' ' << fod.f << endl;
            foods.push_back(fod);
        }
        
        for (int j=0; j<foods.size(); j++)
        {
            if (!yes)
            {
                //cout << foods[j].p << ' ' << foods[j].c << ' ' << foods[j].f << endl;
                solve(foods[j], j);
            }
            else
            {
                out << "Case #" << i+1<< ": yes" << endl;
                yes = false;
                goto finnish;
            }
        }
        
        if (yes)
        {
            out << "Case #" << i+1<< ": yes" << endl;
            yes = false;
            goto finnish;
        }
        
        out << "Case #" << i+1<< ": no" << endl;
        
        
        finnish:
        foods.clear();
    }
}
