#include <algorithm>
#include <cstdio>
#include <iostream>
#include <string>

using namespace std;

const int MAXN = 20;

int GP, GC, GF;
int P[MAXN], C[MAXN], F[MAXN];
int tP, tC, tF;
bool really;

void findOut(int choice_left) {
    if (!really) {
        if (choice_left == 0) {
            //printf("tP = %d; tC = %d; tF = %d\n", tP, tC, tF);
            if (tP == GP && tC == GC && tF == GF) {
                really = true;
            }
        } else {
            const int cm1 = choice_left-1;
            findOut(cm1);
            tP += P[cm1];
            tC += C[cm1];
            tF += F[cm1];
            findOut(cm1);
            tP -= P[cm1];
            tC -= C[cm1];
            tF -= F[cm1];
        }
    }
}

void solve() {
    cin >> GP >> GC >> GF;
    
    int N;
    
    cin >> N;
    
    for (int i = 0; i < N; ++i) {
        cin >> P[i] >> C[i] >> F[i];
    }
    
    really = false;
    tP = tC = tF = 0;
    findOut(N);
    
    cout << (really ? "yes" : "no") << endl;
}

int main() {
    int T;
    cin >> T;
    for (int case_num = 1; case_num <= T; ++case_num) {
        printf("Case #%d: ", case_num);
        solve();
    }

    return 0;
}