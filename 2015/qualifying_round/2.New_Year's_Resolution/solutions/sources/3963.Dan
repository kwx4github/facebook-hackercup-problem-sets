#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <cmath>
using namespace std;

typedef long long ll;
#define maxN 29

ll t, gp, gc, gf, n;
ll curgp, curgc, curgf;
ll p[maxN], c[maxN], f[maxN];
ll a[maxN];
ll ok;

void solve ()
{
	memset(a, 0, sizeof(a));
	ll ptr;
	do
	{
		ptr = n - 1;
		while (ptr >= 0 && a[ptr] == 1) ptr--;
		if (ptr < 0) break;
		a[ptr] = 1;
		for (ll i = ptr + 1; i < n; i++) a[i] = 0;
		
		curgp = curgc = curgf = 0;
		for (ll i = 0; i < n; i++)
		{
			if (a[i])
			{
				curgp += p[i];
				curgc += c[i];
				curgf += f[i];
			}
			if (curgp > gp || curgc > gc || curgf > gf) break;	
		}
		if (curgp == gp && curgc == gc && curgf == gf)
		{
			ok = 1;
			break;
		}
	} while (ptr >= 0);
}

int main ()
{
	freopen ("in.txt", "r", stdin);
	freopen ("out.txt", "w", stdout);
	ios_base::sync_with_stdio(0);
	cin >> t;
	for (ll i = 1; i <= t; i++)
	{
		cin >> gp >> gc >> gf;
		cin >> n;
		for (ll j = 0; j < n; j++) cin >> p[j] >> c[j] >> f[j];
		
		cout << "Case #" << i << ": ";
		
		ok = 0;
		solve();
		
		if (ok) cout << "yes";
		else cout << "no";
		if (i != t) cout << '\n';
	}

	return 0;
}

