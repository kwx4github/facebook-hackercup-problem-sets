using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace Q2_NewYearsResolution
{
    class Program
    {
        static void Main(string[] args)
        {
            using (StreamReader sr = new StreamReader(@"e:\input.txt"))
            using (StreamWriter sw = new StreamWriter(@"e:\output.txt"))
            {
                string line;
                string[] split;

                line = sr.ReadLine();   // nb of cases
                int t = int.Parse(line);

                List<int[]> foods;

                // for each test case
                for (int i = 0; i < t; i++)
                {
                    foods = new List<int[]>();

                    // target
                    line = sr.ReadLine();
                    split = line.Split(' ');
                    int gp = int.Parse(split[0]);
                    int gc = int.Parse(split[1]);
                    int gf = int.Parse(split[2]);

                    // nb of foods
                    int n = int.Parse(sr.ReadLine());
                    for(int j = 0; j < n; j++)
                    {
                        int[] food = new int[3];
                        line = sr.ReadLine();
                        split = line.Split(' ');
                        food[0] = int.Parse(split[0]);
                        food[1] = int.Parse(split[1]);
                        food[2] = int.Parse(split[2]);
                        foods.Add(food);
                    }

                    // check if possible
                    bool isPossible = IsPossible(gp, gc, gf, 0, 0, 0, foods, 0);

                    // print                    
                    sw.WriteLine("Case #" + (i + 1) + ": " + (isPossible ? "yes" : "no"));
                    //Console.WriteLine("Case #" + (i + 1) + ": " + (isPossible ? "yes" : "no"));

                }
            }

            //Console.ReadKey();
        }

        private static bool IsPossible(int gp, int gc, int gf, int cp, int cc, int cf, List<int[]> foods, int idx)
        {
            if (gp == cp && gc == cc && gf == cf) return true;
            if (cp > gp || cc > gc || cf > gf) return false;

            int len = foods.Count;
            for (int i = idx; i < len; i++)
            {
                if (IsPossible(gp, gc, gf, cp + foods[i][0], cc + foods[i][1], cf + foods[i][2], foods, i + 1))
                {
                    return true;
                }
            }
            return false;
        }
    }
}
