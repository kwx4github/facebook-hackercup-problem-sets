#include <bits/stdc++.h>

using namespace std;

#define F	first
#define S 	second
#define VT	vector< pair <int, pair<int,int> > >

int qa,qb,qc;

VT backtracking(VT &vc, VT &all, int lev=-1) {
	int a=0,b=0,c=0;
	for(int i=0; i<vc.size(); i++) {
		a += vc[i].F;
		b += vc[i].S.F;
		c += vc[i].S.S;
	}
	if(a==qa && b==qb && c==qc) 
		return vc;
	if(a>qa || b>qb || c>qc)
		return VT();
	
	for(int i=lev+1; i<all.size(); i++) {
		vc.push_back(all[i]);
		VT sol = backtracking(vc,all,i);
		vc.pop_back();
		if(sol.size() != 0) return sol;
	}
	
	return VT();
}

int main() {
	int T;
	cin >> T;
	int i = 0;
	while(i<T) {
		cin >> qa >> qb >> qc;
		int k;
		cin >> k;
		VT vc (k);
		for(int j=0; j<k; j++) cin >> vc[j].F >> vc[j].S.F >> vc[j].S.S;
		i++;
		VT empty (0);
		VT sol = backtracking(empty,vc);
		cout << "Case #" << i << ": ";
		if(sol.size()!=0) cout << "yes" << endl;
		else cout << "no" << endl;
	}
	return 0;
}
