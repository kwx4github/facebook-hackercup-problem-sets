#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <assert.h>
 
using namespace std;
 
#define sz(a) (int)(a.size())
#define len(a) (int)(a.length())
#define pb push_back
#define mp make_pair
#define fi first
#define se second

int main() {
	freopen("new_years_resolution.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int t, cas = 1; cin >> t;
	while(t--) {
		cout << "Case #" << cas++ << ": ";
		int gp, gc, gf; cin >> gp >> gc >> gf;
		int n; cin >> n;
		vector <int> p(n), c(n), f(n);
		for(int i = 0; i < n; ++i) {
			cin >> p[i] >> c[i] >> f[i];
		}
		vector <pair <pair <int, int>, int> > v((1 << n));
		for(int mask = 0; mask < sz(v); ++mask) {
			v[mask] = mp(mp(0, 0), 0);
			for(int i = 0; i < n; ++i) {
				if(mask & (1 << i)) {
					v[mask].fi.fi += p[i];
					v[mask].fi.se += c[i];
					v[mask].se += f[i];
				}
			}
		}
		bool found = false;
		for(int mask = 0; mask < sz(v); ++mask) {
			if(v[mask].fi.fi == gp && v[mask].fi.se == gc && v[mask].se == gf) {
				found = true;
			}
		}
		cout << (found ? "yes" : "no") << '\n';
	}
	return 0;
}