#include <string>
#include <vector>
#include <set>
#include <map>
#include <iostream>
#include <algorithm>
#include <sstream>
#include <cmath>
#include <string.h>
#include <queue>
#include <cstdio>
#include <cassert>
#include <deque>
#include <stack>
#include <utility>
#include <numeric>
#include <ctime>

using namespace std;

#define forn(i, n) for (int i = 0; i < (int)(n); i++)
#define fore(i, l, r) for (int i = (int)(l); i < (int)(r); i++)
#define forv(i, v) forn(i, v.size())

#define mp make_pair
#define pb push_back
#define all(v) v.begin(), v.end()

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

void solveCase(int tc) {
    int n;
    int nx, ny, nz;
    cin >> nx >> ny >> nz;
    cin >> n;
    vector<int> x(n), y(n), z(n);
    for (int i = 0; i < n; i++) cin >> x[i] >> y[i] >> z[i];
    printf("Case #%d: ", tc);
    for (int mask = 0; mask < (1 << n); mask++) {
        int sx = 0, sy = 0, sz = 0;
        for (int i = 0; i < n; i++) {
            if (mask & (1 << i)) {
                sx += x[i], sy += y[i], sz += z[i];
            }
        }
        if (sx == nx && sy == ny && sz == nz) {
            cout << "yes" << endl;
            return;
        }
    }
    cout << "no" << endl;
}

int main() {
#ifdef NEREVAR_PROJECT
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int tc; cin >> tc;
    for (int i = 0; i < tc; i++) solveCase(i + 1);
    return 0;
}
