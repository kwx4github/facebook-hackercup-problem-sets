#include <iostream>
#include <queue>
#include <cstdio>
#include <algorithm>
#include <fstream.h>

using namespace std;

struct Tuple {
    int x, y, z;
    Tuple(int x, int y, int z) {
        this -> x = x;
        this -> y = y;
        this -> z = z;
    }
};

vector<Tuple> food;
Tuple protein = Tuple(0,0,0);
int nTest, N, cases;

bool solve(Tuple t, int index) {
    if(t.x == protein.x && t.y == protein.y && t.z == protein.z) return true;
    if(t.x > protein.x || t.y > protein.y || t.z > protein.z) return false;
    for(int i = index + 1; i < food.size(); i++) {
        if(solve(Tuple(t.x + food[i].x, t.y + food[i].y, t.z + food[i].z), i)) return true;
    }
    return false;
}


int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    cin >> nTest;
    while(nTest--) {
        food.clear();
        cin >> protein.x >> protein.y >> protein.z;
        cin >> N;
        for(int i = 0; i < N; i++) {
            Tuple aux = Tuple(0,0,0);
            cin >> aux.x >> aux.y >> aux.z;
            food.push_back(aux);
        }
        cout << "Case #" << ++cases << ": " << (solve(Tuple(0, 0, 0), -1) ? "yes\n" : "no\n");

    }
}
