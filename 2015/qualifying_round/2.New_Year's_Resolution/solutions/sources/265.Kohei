/*
ちょっと難しい
*/
 
//#define NDEBUG
 
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <map>
#include <set>
#include <vector>
#include <complex>
#include <queue>
#include <tuple>
#include <queue>

using namespace std;
typedef long long ll;
const int MN = 22;
int p[MN], c[MN], f[MN];
int main() {
    int T;
    cin >> T;
    for (int t = 0; t < T; t++) {
        int gp, gc, gf;
        cin >> gp >> gc >> gf;
        int n;
        cin >> n;
        for (int i = 0; i < n; i++) {
            cin >> p[i] >> c[i] >> f[i];
        }
        bool fl = false;
        for (int i = 0; i < (1<<n); i++) {
            int rp = 0, rc = 0, rf = 0;
            for (int j = 0; j < n; j++) {
                if (!(i & (1<<j))) continue;
                rp += p[j];
                rc += c[j];
                rf += f[j];
            }
            if (rp == gp && rc == gc && rf == gf) {
                fl = true;
                break;
            }
        }
        if (fl) {
            printf("Case #%d: yes\n", t+1);
        } else {
            printf("Case #%d: no\n", t+1);
        }
    }
    return 0;
}