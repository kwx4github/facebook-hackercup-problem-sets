#include <stdio.h>
#include <vector>

struct food {
	int P, C, F;
	
	food() { P=C=F=0;}
	food (int p, int c, int f) {
		P = p;
		C = c;
		F = f;
	}
};

using namespace std;
int main() {
	int T, Gp, Gc, Gf, N;
	vector<food> foodItems;
	scanf("%d", &T);
	
	for(int i=1; i<=T; ++i) {
		scanf("%d %d %d", &Gp, &Gc, &Gf);
		scanf("%d", &N);
		for(int j=0; j<N; j++) {
			food f;
			scanf("%d %d %d", &(f.P), &(f.C), &(f.F));
			if(f.P > Gp || f.C > Gc || f.F > Gf)
				continue;
			foodItems.push_back(f);
		}
		
		bool found = false;
		vector<food> computeBlock;
		computeBlock.push_back(food());
		
		for(int j=0; j<foodItems.size() && !found; ++j) {
			int blockSize = computeBlock.size();
			for(int k=0; k<blockSize && !found; ++k) {
				food f(computeBlock[k].P + foodItems[j].P, computeBlock[k].C + foodItems[j].C, computeBlock[k].F + foodItems[j].F);
				if(f.P > Gp || f.C > Gc || f.F > Gf)
					continue;
				if(f.P == Gp && f.C == Gc && f.F == Gf)
					found = true;
				computeBlock.push_back(f);
			}
		}
		computeBlock.clear();
		
		printf("Case #%d: %s\n", i, found?"yes":"no");
		foodItems.clear();
	}
	
	return 0;
}
