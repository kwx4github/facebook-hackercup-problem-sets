#include <bits/stdc++.h>
//#define DEBUG
using namespace std;

typedef struct nut{
    int p,f,c;

}nut;

nut add(nut &a,nut &b)
{
    nut c;
    c.p = a.p + b.p;
    c.f = a.f + b.f;
    c.c = a.c + b.c;
    return c;
}

int cmp(nut &a,nut &b)
{
    if(a.p > b.p || a.f > b.f || a.c > b.c)
        return -1;
    else if(a.p == b.p && a.f == b.f && a.c == b.c) return 0;
    else return 1;
}

bool sumSubset(int idx, nut sum,nut m, vector<nut> &food)
{
    int c = cmp(sum,m);
    if(c == 0)  return true;
    if(c == -1) return false;
    if(idx >= food.size())  return false;
    return sumSubset(idx+1,add(sum,food[idx]),m,food) ||
            sumSubset(idx+1,sum,m,food);
}

int main()
{
    #ifndef DEBUG

    freopen("b_in.txt","r",stdin);
    freopen("b_out.txt","w",stdout);

    #endif // DEBUG

    int t;
    scanf("%d", &t);
    for(int x = 1; x <= t; x++)
    {
        nut m;
        scanf("%d%d%d",&m.p,&m.c,&m.f);
        int n;
        scanf("%d", &n);
        vector<nut> food(n);
        for(int i = 0; i < n; i++)
            scanf("%d%d%d",&food[i].p,&food[i].c,&food[i].f);
        nut sum;
        sum.p = sum.f = sum.c = 0;
        if(sumSubset(0,sum,m,food))
        {
            printf("Case #%d: yes\n",x);
        }
        else
            printf("Case #%d: no\n",x);

    }
    return 0;
}
