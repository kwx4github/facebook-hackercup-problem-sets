#include <bits/stdc++.h>
using namespace std;
#define MAX1 1009
#define MAX2 29
#define INF 100000

int N, T, GP, GC, GF, t;
int P[MAX2], C[MAX2], F[MAX2];
int dp[MAX2][MAX1];

int solve(int qntP, int qntC, int qntF, int i)
{
	if ((qntP == 0)&&(qntC == 0)&&(qntF == 0)) return 0;
	if ((qntP < 0)||(qntC < 0)||(qntF < 0)) return INF;
	if (i >= N) return INF;
	if (dp[i][qntP] != -1) return dp[i][qntP];
	return dp[i][qntP] = min(solve(qntP, qntC, qntF, i+1), solve(qntP - P[i], qntC - C[i], qntF - F[i], i+1));
}

int main()
{
	scanf("%d", &T);
	while (t<T){
		scanf("%d %d %d", &GP, &GC, &GF);
		scanf("%d", &N);
		for (int i=0; i<N; ++i){
			scanf("%d %d %d", &P[i], &C[i], &F[i]);
		}
		memset(dp, -1, sizeof(dp));
		int ans = solve(GP, GC, GF, 0);

		printf("Case #%d: ", ++t);
		if (ans == 0) printf("yes");
		else printf("no");
		printf("\n");

	}
}