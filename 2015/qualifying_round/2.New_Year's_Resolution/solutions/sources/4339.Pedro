import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;

public class NewYearsResolution {

	private static void solve(String inputFile, String outputFile) throws Exception {
		
		BufferedReader in = new BufferedReader(new FileReader("src/" + inputFile));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/" + outputFile)));
        
        int T = Integer.parseInt(in.readLine());
        for (int t = 0; t < T; t++) {
			
        	// target values
			String[] G = in.readLine().split(" ");
			int gp = Integer.parseInt(G[0]);
			int gc = Integer.parseInt(G[1]);
			int gf = Integer.parseInt(G[2]);

			// food data
			int N = Integer.parseInt(in.readLine());
			int[] P = new int[N];
			int[] C = new int[N];
			int[] F = new int[N];
			for (int i = 0; i < N; i++) {
				String[] X = in.readLine().split(" ");
				P[i] = Integer.parseInt(X[0]);
				C[i] = Integer.parseInt(X[1]);
				F[i] = Integer.parseInt(X[2]);
			}
			
			// check all subsets using bit mask
			boolean possible = false;
			for (int subset = 0; subset < (1 << N); subset++) {
				int sumP = 0;
				int sumC = 0;
				int sumF = 0;
				for (int i = 0; i < N; i++) {
					int mask = 1 << i;
					if ((subset & mask) != 0) {
						sumP += P[i];
						sumC += C[i];
						sumF += F[i];
					}
				}
				if (sumP == gp && sumC == gc && sumF == gf) {
					possible = true;
					break;
				}
			}
			
			System.out.println("Case #" + (t+1) + ": " + (possible ? "yes" : "no"));
			out.println("Case #" + (t+1) + ": " + (possible ? "yes" : "no"));
		}

        in.close();
        out.close();
	}

	public static void main(String[] args) throws Exception {
		//solve("new_years_resolution_example_input.txt", "new_years_resolution_example_output.txt");
		solve("new_years_resolution.txt", "new_years_resolution_output.txt");
	}
}
