#include<bits/stdc++.h>

using namespace std;



int main()
{
   freopen("new_years_resolution.txt", "r", stdin);
   freopen("new_years_resolution_out.txt", "w", stdout);

  int T,cased=0,n,a[25],b[25],c[25],ga,gb,gc;
  cin>>T;

  while(T--)
  {
       cin>>ga>>gb>>gc;
      cin>>n;
      bool  flag=false;
      int suma,sumb,sumc;
      for(int i=0;i<n;i++)cin>>a[i]>>b[i]>>c[i];
      for(int i=0;i<(1<<n);i++)
      {
          suma=sumb=sumc=0;
          for(int j=0;j<n;j++)
          if(i&(1<<j))
          {
              suma+=a[j];
              sumb+=b[j];
              sumc+=c[j];
          }
          if(suma==ga and sumb==gb and sumc==gc) flag=true;
      }
      if(flag)printf("Case #%d: yes\n",++cased);
      else printf("Case #%d: no\n",++cased);
  }
  return 0;
}


/*
#include <iostream>
#include <algorithm>
#include <stdio.h>

using namespace std;

int main()
{
    freopen ("new_years_resolution_example_input.txt", "r", stdin);

    int line;
    cin >> line;

    for(int i=0; i<line; i++)
    {

        int allowedProtein, allowedCarbo, allowedFat;
        cin >> allowedProtein >> allowedCarbo >> allowedFat;

        int foods;
        cin >> foods;

        cout << "Case: " << i+1 << " Foods: " << foods << " Allowed: " << allowedProtein << " " << allowedCarbo << " " << allowedFat << endl;

        bool canEat = false;

        for(int f=0; f<foods; f++)
        {
            int protein, carbo, fat;
            cin >> protein >> carbo >> fat;

            cout << "---- Menu: " << protein << " " << carbo << " " << fat << endl;

            allowedProtein -= protein;
            allowedCarbo -= carbo;
            allowedFat -= fat;

            cout << "---- Remaining: " << allowedProtein << " " << allowedCarbo << " " << allowedFat << endl;

            if(allowedProtein == 0 || allowedCarbo == 0 || allowedFat == 0)
            {
                cout << "---- Can eat case # " << i+1 << endl;
                //if(canEat)
                    //canEat = true;
            }
        }

        //cout << "Case #" << i+1 << ": " <<  (canEat==true?"yes":"no") << endl;
    }

    return 0;
}

*/
