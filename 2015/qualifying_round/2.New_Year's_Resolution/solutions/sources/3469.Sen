#include <iostream>
#include <fstream>
#include <cstring>
#include <string>
#include <algorithm>
#include <functional>
#include <cmath>
#include <cstdint>

using namespace std;

bool dp[1000][1000][1000];

int main(int argc, char const *argv[])
{
    if (argc != 2)
    {
        return 1;
    }
    char name[256];
    strcpy(name, argv[1]);

    ifstream fin(name);
    strcat(name, ".out");
    ofstream fout(name);

    if (!fin.is_open() || !fout.is_open())
    {
        return 1;
    }

    int t, t1 = 0;

    fin >> t;

    while (t1++ < t)
    {
        uint64_t n, gp, gc, gf;
        fin >> gp >> gc >> gf >> n;
        int p[n], c[n], f[n];
        for (int i = 0; i < n; i++)
        {
            fin >> p[i] >> c[i] >> f[i];
        }
        //vector<vector<vector<bool> > > dp(gp + 1, vector<vector<bool> >(gc + 1, vector<bool>(gf + 1, false)));

        for (int j = 0; j <= gp; j++)
        {
            for (int k = 0; k <= gc; k++)
            {
                for (int l = 0; l <= gf; l++)
                {
                    dp[j][k][l] = false;
                }
            }
        }
        dp[0][0][0] = true;
        for (int i = 0; i < n && !dp[gp][gc][gf]; i++)
        {
            for (int j = 0; j + p[i] <= gp; j++)
            {
                for (int k = 0; k + c[i] <= gc; k++)
                {
                    for (int l = 0; l + f[i] <= gf; l++)
                    {
                        if (dp[j][k][l])
                        {
                            dp[j + p[i]][k + c[i]][l + f[i]] = true;
                        }
                    }
                }
            }
        }
        fout << "Case #" << t1 << ": ";
        if (dp[gp][gc][gf])
            fout << "yes";
        else
            fout << "no";
        fout << endl;
    }

    return 0;
}