
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
using namespace std;
ofstream target ("o.txt");

bool getsubsets(vector <int> set1, vector<int> set2, vector <int> set3, int gp,int gc,int gf,int testcase)
{               
	unsigned int pow_set_size = 1<<20;
    int counter, j;
 
    for(counter = 0; counter < pow_set_size; counter++)
    {
		int sumc=0, sumf=0, sump=0;
		for(j = 0; j < set1.size(); j++)
		{
			/* Check if jth bit in the counter is set
				If set then pront jth element from set */
			if(counter & (1<<j))
			{
				sump+=set1[j];
				sumc+=set2[j];
				sumf+=set3[j];

			}
		}
		if(sumc==gc&&sumf==gf&&sump==gp)
		{
			target<<"Case #"<<testcase+1<<": "<<"yes"<<endl;
			return true;
		}
	}    
	target<<"Case #"<<testcase+1<<": "<<"no"<<endl;
	return false;
}
   

int main()
{
	ifstream source ("new_years_resolution.txt");
	int T; 
	source >> T;
	int** p,** c,** f;
	int gp,gc,gf, N;
	p= new int *[T];
	c= new int *[T];
	f= new int *[T];
	for(int t = 0; t < T; t++) 
	{
		source>>gp>>gc>>gf;
		source>>N;
		p[t]= new int [N];
		c[t]= new int [N];
		f[t]= new int [N];
		vector <int> pp,cc,ff;
		for( int i=0; i<N;i++)
		{
			source>>p[t][i]>>c[t][i]>>f[t][i];
			pp.push_back(p[t][i]);
			cc.push_back(c[t][i]);
			ff.push_back(f[t][i]);
		}
		getsubsets(pp, cc, ff, gp,gc,gf,t);
		delete p[t];
		delete c[t];
		delete f[t];
	}
	system("pause");
}