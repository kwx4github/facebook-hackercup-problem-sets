#include <iostream>
#include <vector>
#include <bitset>
#include <cmath>
using namespace std;
typedef unsigned long long ull;

inline ull multiply(vector<int> &arr, bitset<20> &bset)
{
    ull result=0;
    for(int i=0;i<20;i++)
    {
        result+=(arr[i]*bset[i]);
    }
    return result;
}


int main()
{
    int t;
    cin>>t;
    for(int counter=1;counter<=t;counter++)
    {
        ull gp, gc, gf;
        cin>>gp>>gc>>gf;
        int n;
        cin>>n;
        vector<int> plist(20,0);
        vector<int> clist(20,0);
        vector<int> flist(20,0);
        ull maxnum=pow(2,n);
        for(int i=0;i<n;i++)
        {
            int p,c,f;
            cin>>p>>c>>f;
            plist[i]=p;
            clist[i]=c;
            flist[i]=f;
        }
        bool found=false;
        ull i=0;
        while(i<maxnum&&!found)
        {
            bitset<20> bset(i);
            ull t1=multiply(plist,bset);
            if(t1==gp)
            {
                ull t2=multiply(clist,bset);
                if(t2==gc)
                {
                    ull t3=multiply(flist,bset);
                    if(t3==gf)
                    {
                        found=true;
                    }
                }
            }
            i++;
        }
        if(found)
        {
            cout<<"Case #"<<counter<<": "<<"yes"<<"\n";
        }
        else
        {
            cout<<"Case #"<<counter<<": "<<"no"<<"\n";
        }
    }
}
