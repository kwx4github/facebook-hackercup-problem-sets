import com.google.common.staticresource.StaticFileResource;
import com.google.common.staticresource.StaticResource;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class NewYearsResolution {
  private static final StaticResource INPUT_FILE = StaticFileResource.find(NewYearsResolution.class, "newyears_input.txt");

  public static void main(String[] args) throws Exception {
    try (BufferedReader input = new BufferedReader(new InputStreamReader(INPUT_FILE.getInput()))) {
      int numCases = Integer.parseInt(input.readLine());
      for (int i = 1; i <= numCases; i++) {
        System.out.print("Case #" + i + ": ");
        solve(input);
      }
    }
  }

  public static void solve (BufferedReader input) throws Exception {
    StringTokenizer st = new StringTokenizer(input.readLine());
    int totP = Integer.parseInt(st.nextToken());
    int totC = Integer.parseInt(st.nextToken());
    int totF = Integer.parseInt(st.nextToken());

    int numFoods = Integer.parseInt(input.readLine());
    int[] protein = new int[numFoods];
    int[] carbs = new int[numFoods];
    int[] fats = new int [numFoods];

    for (int i = 0; i < numFoods; i++) {
      st = new StringTokenizer(input.readLine());
      protein[i] = Integer.parseInt(st.nextToken());
      carbs[i] = Integer.parseInt(st.nextToken());
      fats[i] = Integer.parseInt(st.nextToken());
    }

    for (int mask = 0; mask < (1 << numFoods); mask++) {
      int curP = 0, curC = 0, curF = 0;
      for (int i = 0; i < numFoods; i++) {
        if (((mask >> i) & 1) == 1) {
          curP += protein[i];
          curC += carbs[i];
          curF += fats[i];
        }
      }

      if (curP == totP && curC == totC && curF == totF) {
        System.out.println("yes");
        return;
      }
    }

    System.out.println("no");
  }
}
