/*
 * Food.cpp
 *
 *  Created on: Jan 10, 2015
 *      Author: saha
 */

#include <bits/stdc++.h>

using namespace std;

typedef pair<int,int>   PI;
typedef pair<int, PI >  PPI;
typedef vector<PPI> VPPI;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int, PPI> PPPI;
typedef map< PPPI, bool> MPPPIB;

MPPPIB table;

bool isZero(PPI x){
	if(x.first == 0 && x.second.first == 0 && x.second.second == 0)
		return true;
	else
		return false;
}

bool isGreater(PPI a, PPI b) {
	if(a.first > b.first || a.second.first > b.second.first || a.second.second > b.second.second)
		return true;
	else
		return false;
}
PPI substract(PPI a, PPI b) {
	return make_pair(a.first - b.first, make_pair(a.second.first - b.second.first, a.second.second - b.second.second));
}

bool subset_sum(VPPI list, int n, PPI sum) {
	if(isZero(sum))
		return true;
	if(n == 0 && false == isZero(sum))
		return false;

	if(table.count(make_pair(n,sum)))
		return table[make_pair(n,sum)];

	bool res = false;
	if(isGreater(list[n-1],sum))
		res = subset_sum(list, n-1, sum);
	else
		res = subset_sum(list, n-1, sum) || subset_sum(list, n-1, substract(sum,list[n-1]));

	table[make_pair(n,sum)] = res;
	return res;
}

int main() {
	int T,N;
	cin >> T;
	int cs = 1;
	while(T--){
		int P,C,F;
		cin >> P >> C >> F;
		cin >> N;
		VPPI nos;
		table.clear();
		int a,b,c;
		for(int i=0;i<N;i++) {
			cin >> a >> b >> c;
			nos.push_back(make_pair(a,make_pair(b,c)));
		}
		bool res = subset_sum(nos, N, make_pair(P,make_pair(C,F)));
		if(res)
			cout << "Case #" << cs++ << ": yes" << endl;
		else
			cout << "Case #" << cs++ << ": no" << endl;
	}
}


