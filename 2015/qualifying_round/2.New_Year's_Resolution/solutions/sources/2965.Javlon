
#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <stdio.h>
#include <math.h>
#include <set>
#include <bits/stl_list.h>

#define M 1000000000;
long long MAX = 10000000000;
using namespace std;
int t, n;
struct node{
    int p, c, f;
};
int gp,gc,gf;
vector<node> v;
bool rec(int i){
    if(i == v.size()){
        if(gc == 0 && gf == 0 && gp == 0)
            return true;
        return false;
    }
    if(rec(i+1)){
        return true;
    }
    gp -= v[i].p;
    gc -= v[i].c;
    gf -= v[i].f;
    if(rec(i+1)){
        return true;
    }
    gp += v[i].p;
    gc += v[i].c;
    gf += v[i].f;
    return false;
}
int main() {
    freopen("new_years_resolution.txt", "r", stdin);
    freopen("new_years_resolution_example_output.txt", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin >> t;
    for(int i = 0; i < t; ++i){
        cin >> gp >> gc >> gf;
        cin >> n;
        v.resize(n);
        for(int j = 0; j < n; ++j){
            cin >> v[j].p >> v[j].c >> v[j].f;
        }
        cout << "Case #"<<i+1<<": ";
        if(rec(0)){
            cout << "yes"<< endl;
        }else{
            cout << "no" << endl;
        }
        v.resize(0);
    }

    return 0;
}