#include <iostream>
#include <vector>

using namespace std;

struct Nut {
  int P, C, F;
};

bool testcase() {
  int g_p, g_c, g_f, N;
  cin >> g_p >> g_c >> g_f >> N;
  vector<Nut> nuts;
  for (int i = 0; i < N; ++i) {
    int P, C, F;
    cin >> P >> C >> F;
    nuts.push_back({P, C, F});
  }

  for (int mask = 0; mask < (1 << N); ++mask) {
    Nut currNuts = {0, 0, 0};
    for (int i = 0; i < N; ++i) {
      if (mask & (1 << i)) {
        currNuts.P += nuts[i].P;
        currNuts.C += nuts[i].C;
        currNuts.F += nuts[i].F;
      }
    }

    if (currNuts.P == g_p && currNuts.C == g_c && currNuts.F == g_f) {
      return true;
    }
  }

  return false;
}

int main(int argc, char const *argv[]) {
  ios_base::sync_with_stdio(false);
  int T;
  cin >> T;
  for (int t = 0; t < T; ++t) {
    cout << "Case #" << t+1 << ": " << (testcase() ? "yes" : "no") << "\n";
  }

  return 0;
}
