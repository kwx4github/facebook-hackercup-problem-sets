#include <stdio.h>
#include<bits/stdc++.h>
struct s{
int a,b,c;
};
using namespace std;
bool isSubsetSum(s set1[], int n, s sum)
{
//cout<<sum.a<<" "<<sum.b<<" "<<sum.c<<endl;
   if (sum.a == 0&&sum.b==0&&sum.c==0)
     return true;
   if ((n == 0) && (sum.a != 0||sum.b!=0||sum.c!=0))
     return false;

   if (set1[n-1].a > sum.a||set1[n-1].b>sum.b||set1[n-1].c>sum.c)
     return isSubsetSum(set1, n-1, sum);
s sum1={0};
 sum1.a=sum.a-set1[n-1].a;
 sum1.b=sum.b-set1[n-1].b;
 sum1.c=sum.c-set1[n-1].c;
   return isSubsetSum(set1, n-1, sum) || isSubsetSum(set1, n-1, sum1);
}

// Driver program to test above function
int main()
{
  //int set1[] = {3, 34, 4, 12, 5, 2};
  //int sum = 9;

  //int n = sizeof(set)/sizeof(set[0]);
 s set1[25];
 s sum,sum1;
 int t,n;
cin>>t;
  int casecount=0;
  while(t--)
  {
  casecount++;
  cin>>sum.a>>sum.b>>sum.c;
  cin>>n;
  for(int i=0;i<n;i++)
  {
  cin>>set1[i].a>>set1[i].b>>set1[i].c;
  }
  //for(int i=0;i<n;i++)
  //cout<<set1[i].a<<" "<<set1[i].b<<" "<<set1[i].c<<endl;
  if (isSubsetSum(set1, n, sum) == true)
     cout<<"Case #"<<casecount<<": "<<"yes\n";
     //printf("Found a subset with given sum");
  else
  cout<<"Case #"<<casecount<<": "<<"no\n";
     //printf("No subset with given sum");
  //return 0;
}
return 0;
}

