import java.io.*;
import java.util.*;
import java.math.*;

class fbhc2
{
	static boolean isSubsetSum(int p[],int c[],int f[], int n, int gp,int gc,int gf)
	{
	// Base Cases
	if (gp == 0 && gc==0 && gf==0)
		return true;
   if (n == 0 && (gc != 0 || gf!=0 ||gp!=0))
		return false;
 
   // If last element is greater than sum, then ignore it
   if (p[n-1] > gp ||c[n-1] > gc ||f[n-1] > gf)
     return isSubsetSum(p,c,f, n-1, gp,gc,gf);
   
 
   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(p,c,f,n-1,gp,gc,gf) || isSubsetSum(p,c,f, n-1, gp-p[n-1],gc-c[n-1],gf-f[n-1]);
}

	public static void main(String args[]) throws IOException
	{
		FileReader fr=new FileReader("input1.txt");
		BufferedReader br=new BufferedReader(fr);
		FileWriter fw=new FileWriter("output1.txt");
		BufferedWriter bw=new BufferedWriter(fw);
		int t=Integer.parseInt(br.readLine());
		for(int j=1;j<=t;j++)
		{
			String in[]=br.readLine().split(" ");
			int gp=Integer.parseInt(in[0]);
			int gc=Integer.parseInt(in[1]);
			int gf=Integer.parseInt(in[2]);
			int n=Integer.parseInt(br.readLine());
			int p[]=new int[n];
			int c[]=new int[n];
			int f[]=new int[n];
			for(int i=0;i<n;i++)
			{
				String in1[]=br.readLine().split(" ");
				p[i]=Integer.parseInt(in1[0]);
				c[i]=Integer.parseInt(in1[1]);
				f[i]=Integer.parseInt(in1[2]);
			}
			String res="";
			if(isSubsetSum(p,c,f,n,gp,gc,gf))
			{
				res="yes";
			}
			else
			{
				res="no";
			}
			String output="Case #"+j+":"+" "+res+"\n";
			//System.out.print(output);
			bw.write(output);
		}
		bw.close();
		fw.close();
	}
}   