#include <iostream>
#include <algorithm>
using namespace std;

int protein, carbohydrates, fat;
int n;

typedef struct {
	int protein;
	int carbohydrates;
	int fat;
}food;

food arr[20];

bool cmp(const food &a, const food &b){
	return a.protein < b.protein;
	if (a.protein < b.protein)
		return true;
	if (a.protein == b.protein){
		if (a.carbohydrates < b.carbohydrates)
			return true;
		if (a.carbohydrates == b.carbohydrates){
			if (a.fat < b.fat)
				return true;
		}
	}
	return false;
}


bool dfs(int currentP, int currentC, int currentF, int idx){
	currentP += arr[idx].protein;
	currentC += arr[idx].carbohydrates;
	currentF += arr[idx].fat;

	if (currentP > protein || currentC > carbohydrates || currentF > fat)
		return false;
	if (currentP == protein && currentC == carbohydrates && currentF == fat)
		return true;
	for (int i = idx + 1; i < n; i++){
		if (dfs(currentP, currentC, currentF, i))
			return true;
	}
	return false;
}


void logic(){
	for (int i = 0; i < 20; i++){
		arr[i].protein = 0;
		arr[i].carbohydrates = 0;
		arr[i].fat = 0;
	}

	cin >> protein >> carbohydrates >> fat;
	cin >> n;

	for (int i = 0; i < n; i++)
		cin >> arr[i].protein >> arr[i].carbohydrates >> arr[i].fat;

	sort(arr, arr + n, cmp);

	for (int i = 0; i < n; i++){
		if (dfs(0, 0, 0, i)){
			cout << "yes" << endl;
			return;
		}
	}
	cout << "no" << endl;
}
int main(){
	/*freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);*/

	int T;
	cin >> T;
	for (int i = 1; i <= T;i++){
		cout << "Case #" << i << ": ";
		logic();
	}
}
