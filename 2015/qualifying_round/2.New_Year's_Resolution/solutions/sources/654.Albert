import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.math.BigInteger;
import java.util.StringTokenizer;


/**
 * B. New Year's Resolution
 * @author Albert Choi
 */
public class B {
	static BufferedReader _reader = new BufferedReader(new InputStreamReader(System.in));
	static String _s;
	static StringTokenizer _st;
	static int _l;
	static String nline() throws IOException { _s = _reader.readLine(); _st = new StringTokenizer(_s); ++_l; return _s; }
	static String nword() 	{ return _st.nextToken(); }
	static int nint() 		{ return Integer.parseInt(nword()); }
	static long nlong() 	{ return Long.parseLong(nword()); }
	static double ndouble() { return Double.parseDouble(nword()); }
	static BigInteger nbig(){ return new BigInteger(nword()); }
	static PrintStream sout = System.out, serr = System.err;
	
	public static void main(String[] args) throws IOException {
		nline();
		int T = nint();
		
		for (int t=1; t<=T; t++) {
			String sans = doProblem();
			sout.println("Case #" + t + ": " + sans);
		}
	}
	
	static int[] p,c,f;
	static int P,C,F;
	static String doProblem() throws IOException {
		nline();
		P = nint(); C = nint(); F = nint();
		nline();
		int N = nint();

		p = new int[N];
		c = new int[N];
		f = new int[N];

		for (int i=0; i<N; i++) {
			nline();
			p[i] = nint(); c[i] = nint(); f[i] = nint();
		}

		return proc(new boolean[N], 0) ? "yes":"no"; 
	}

	static boolean proc(boolean[] state, int i) {
		if (i == state.length) {
			// verify
			int tp = 0, tc = 0, tf = 0;
			for (int j=0; j<state.length; j++) {
				if (state[j]) { 
					tp += p[j];
					tc += c[j];
					tf += f[j];
				}
			}
			return (tp == P && tc == C && tf == F);
		}

		state[i] = true;
		if (proc(state, i+1)) return true;

		state[i] = false;
		if (proc(state, i+1)) return true;

		return false;
	}
}
