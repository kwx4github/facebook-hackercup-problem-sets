
# coding: utf-8

# In[3]:

import math
import itertools
import numpy as np
import pandas as pd
from time import time


# In[15]:

def foo(t,x):
    
    if t in x: return 'yes'
    
    t = np.array(t.split(' ')).astype('int')
    arr = [np.array(a.split(' ')).astype('int') for a in x]
    p = np.array([a[0] for a in arr if a[0] <= t[0] and a[1] <= t[1] and a[2] <= t[2]])
    c = np.array([a[1] for a in arr if a[0] <= t[0] and a[1] <= t[1] and a[2] <= t[2]])
    f = np.array([a[2] for a in arr if a[0] <= t[0] and a[1] <= t[1] and a[2] <= t[2]])
    
    ps = p.sum()
    cs = c.sum()
    fs = f.sum()
    
    if ps < t[0] or cs < t[1] or fs < t[2]: return 'no'
    if ps == t[0] and cs == t[1] and fs == t[2]: return 'yes'
    
    pss = allsubsums(p,t[0])
    css = allsubsums(c,t[1])
    fss = allsubsums(f,t[2])
    
    for ps in pss:
        if ps in css and ps in fss: return 'yes'
    
    return 'no'

def allsubsums(array,num):
    subsums = []
    a = range(len(array))
    for l in range(1, len(array)+1):
        for subset in itertools.combinations(a, l):
            if sum([array[i] for i in subset]) == num: subsums.append(str(subset))
    return subsums


# In[16]:

o = open('output.txt', 'w')
i = open('input.txt', 'r')
s = i.read().split('\n')[1:-1]

n = 0
ix = 1
while n < len(s):
    l = s[n]
    p,c,f = l.split(' ')
    skip = int(s[n+1])
    r = foo(l,s[n+2:n+skip+2])
    print('Case #%d: %s' % (ix,r))
    o.write('Case #%d: %s\n' % (ix,r))
    ix += 1
    n += skip + 2
o.flush()
i.close()
o.close()


# In[126]:



