#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <map>
using namespace std;
typedef long long i64;

#define fu(i,m,n) for(int i=m; i<n; i++)
#define fd(i,m,n) for(int i=n-1; i>=m; i--)
#define fr(i,m,n) for(typeof(m) i=m; i!=n; ++i)
#define fa(i,c) fr(i,(c).begin(),(c).end())

int n[20][3];

bool doit(int* t, int N) {
  fu(i,0,3) if(t[i]<0) return false;
  if(t[0]+t[1]+t[2]==0) return true;
  if(N==0) return false;
  fu(i,0,3) t[i]-=n[N-1][i];
  if(doit(t,N-1)) return true;
  fu(i,0,3) t[i]+=n[N-1][i];
  if(doit(t,N-1)) return true;
  return false;
}

int main(void) {
	int TS; cin >> TS;
	for(int ts=1; ts<=TS; ts++) {
          int N,t[3];
          cin >> t[0] >> t[1] >> t[2];
          cin >> N;
          fu(i,0,N) cin >> n[i][0] >> n[i][1] >> n[i][2];
          cout << "Case #" << ts << ": ";
          cout << (doit(t, N) ? "yes" : "no");
          cout << endl;
	}
}
