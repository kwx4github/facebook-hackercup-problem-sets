#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
const int N = 1 << 20, M = 1005;
struct triple
{
	int a, b, c;
	triple() {};
	triple(int _a, int _b, int _c): a(_a), b(_b), c(_c) {}
	triple operator + (const triple &B) const
	{
		return triple(a + B.a, b + B.b, c + B.c);
	}
};
triple dp[N + 5];
int main()
{
	int t, n;
	scanf("%d", &t);
	for(int p = 1; p <= t; p++)
	{
		printf("Case #%d\n", p);
		int A, B, C;
		scanf("%d %d %d", &A, &B, &C);
		scanf("%d", &n);
		int x, y, z;
		for(int i = 0; i < n; i++)
		{
			scanf("%d %d %d", &x, &y, &z);			
			dp[1 << i] = triple(x, y, z);
		}
		dp[0] = triple(0, 0, 0);
		for(int i = 1; i < (1 << n); i++)
		{
			int x = (i & (-i));
			if(x == i) continue;
			else dp[i] = dp[i ^ x] + dp[x];
		}
		bool ans = false;
		for(int i = 0; i < (1 << n); i++)
			if(dp[i].a == A && dp[i].b == B && dp[i].c == C)
			{
				ans = true;
				break;
			}
		printf(ans == true? "yes\n": "no\n");
		for(int i = 1; i < (1 << n); i++) dp[i] = triple(0, 0, 0);
	}
}