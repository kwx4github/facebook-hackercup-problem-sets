

f = open('fb2_in4.txt', 'r')
t=f.readline();
dbg=False;
if dbg:    print(t);

out=open('out.txt','w');

for x in range(0,int(t)):
    print "x="+str(x+1);
    goal=f.readline().split();
    print "goal="+str(goal);
    test_cases=int(f.readline());
    print "tests="+str(test_cases);
    alldata=[];
    for y in range(0,int(test_cases)):
        alldata.append(f.readline().split());
    #print alldata;
    toremove=[];
    for z in range(0,len(alldata)):
        #print alldata[z];
        if int(alldata[z][0])>int(goal[0]):
            toremove.append(alldata[z]);
        elif int(alldata[z][1])>int(goal[1]):
            toremove.append(alldata[z]);
        elif int(alldata[z][2])>int(goal[2]):
            toremove.append(alldata[z]); 
    for z2 in range(0,len(toremove)):
        alldata.remove(toremove[z2]);
    if dbg: print alldata;
    print "testNOW="+str(len(alldata));

    found=False;
    for s in range(0,2**len(alldata)-1): # change!
        tmp=bin(s+1)[2:];
        #print tmp;
        binval='';
        for s2 in range(0,len(alldata)-len(tmp)):
            binval+='0';
        binval+=tmp;
        if dbg: print binval;
        goal0=0;
        goal1=0;
        goal2=0;
        for s3 in range(0,len(binval)):
            if binval[s3]=='1':
                #print s3;
                goal0+=int(alldata[s3][0]);
                goal1+=int(alldata[s3][1]);
                goal2+=int(alldata[s3][2]);
            if goal0>int(goal[0]):
                if dbg: print "over";
                break
            if goal1>int(goal[1]):
                if dbg: print "over";
                break
            if goal2>int(goal[2]):
                if dbg: print "over";
                break
        if dbg: print [goal0,goal1,goal2];
        if goal0==int(goal[0]):
            if goal1==int(goal[1]):
                if goal2==int(goal[2]):
                    print "yesssssssssssssss "+str(binval);
                    found=True;
                    break
    if found:
        print "yes";
        out.write('Case #'+str(x+1)+': yes\n');
    else:
        print "no";
        out.write('Case #'+str(x+1)+': no\n');


    
    print "---";
    
f.close();
out.close();


##
##for x in range(0,int(t)):
##    num=f.readline();
##    if dbg: print(num);
##    strlen=len(num);
##    maxim=-1;
##    maxpos=-1;
##    minim=10;
##    minpos=-1;
##    if int(num)==0:
##        if dbg: print 'Case #'+str(x+1)+': 0 - 0';  
##    else:
##        for y in range(0,strlen-1):
##            if dbg: print(num[y]);
##            if int(num[y])>maxim:
##                maxim=int(num[y]);
##                maxpos=y;
##            if (int(num[y])>0)and(int(num[y])<minim):
##                minim=int(num[y]);
##                minpos=y;
##        if dbg: print 'max='+str(maxim);
##        if dbg: print 'min='+str(minim);
##
##        pr1=str(maxim);
##        for y in range(1,strlen-1):
##            if y==maxpos:
##                pr1+=num[0];
##            else:
##                pr1+=num[y];
##        if dbg: print 'pr1='+str(pr1);
##        pr2=str(minim);
##        for y in range(1,strlen-1):
##            if y==minpos:
##                pr2+=num[0];
##            else:
##                pr2+=num[y];
##        if dbg: print 'pr2='+str(pr2);
##        #print str(int(num));
##        #print 'Case #'+str(x+1)+': '+pr2+' '+pr1;
##    #print '--';
##    maxim=int(num);
##    minim=int(num);
##
##    for i in range(0,strlen-1):   
##        #print 'i='+str(i);
##        for j in range(i+1,strlen-1):
##            #print 'j='+str(j);
##            newtry='';
##            if i!=0:
##                #print num[0:i];
##                newtry+=num[0:i];
##            #print num[j];
##            newtry+=num[j];
##            if j>=i+2:
##                #print num[i+1:j];
##                newtry+=num[i+1:j];
##            #print num[i];
##            newtry+=num[i];
##            #print num[j+1:-1];
##            newtry+=num[j+1:-1];
##            if len(str(int(newtry)))==len(newtry):
##                if int(newtry)<minim:
##                    minim=int(newtry);
##                if int(newtry)>maxim:
##                    maxim=int(newtry);
##    print 'Case #'+str(x+1)+': '+str(minim)+' '+str(maxim);
##    out.write('Case #'+str(x+1)+': '+str(minim)+' '+str(maxim)+"\n");
##
##out.close();    
##
##
##
##










            
