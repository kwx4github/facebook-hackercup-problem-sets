import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.net.SocketPermission;
import java.util.Arrays;
import java.util.Scanner;

public class NewYearsResolution {
    public static void main(String[] args) throws IOException {
        final String INPUT_FILE = "input.in";
        final String OUTPUT_FILE = "output.out";
        final Scanner scanner = new Scanner(new File(INPUT_FILE));
        final FileWriter fw = new FileWriter(new File(OUTPUT_FILE));
        try{
            StringBuffer stringBuffer = new StringBuffer();
            int t = scanner.nextInt();
            for(int i = 1; i <= t; i++) {
                int[] g = new int[3];
                for (int j = 0; j < 3; j++) {
                    g[j] = scanner.nextInt();
                }
                int n = scanner.nextInt();
                int[] p = new int [n];
                int[] c = new int [n];
                int[] f = new int [n];
                for (int j = 0; j < n; j++) {
                    p[j] = scanner.nextInt();
                    c[j] = scanner.nextInt();
                    f[j] = scanner.nextInt();
                }
                String caseResult = isPossibleToSumExactAmount(g[0], g[1], g[2], p, c ,f, 0, 0, 0, 0) == true ?
                        "yes" : "no";
                stringBuffer.append(String.format("Case #%d: %s\n", i, caseResult));
            }
            fw.write(stringBuffer.toString());
        }finally{
            fw.close();
            scanner.close();
        }

    }

    private static boolean isPossibleToSumExactAmount(int exactAmountOfP, int exactAmountOfC, int exactAmountOfF,
            int[] p, int[] c, int[] f, int currentSumOfP, int currentSumOfC, int currentSumOfF, int i){
        if(currentSumOfP == exactAmountOfP && currentSumOfC == exactAmountOfC && currentSumOfF == exactAmountOfF){
            return true;
        } else if(currentSumOfP > exactAmountOfP || currentSumOfC > exactAmountOfC || currentSumOfF > exactAmountOfF){
            return false;
        }
        if(i == p.length){
            return false;
        }
        return isPossibleToSumExactAmount(exactAmountOfP, exactAmountOfC, exactAmountOfF, p, c, f, currentSumOfP + p[i],
                currentSumOfC + c[i], currentSumOfF + f[i], i + 1) ||
                isPossibleToSumExactAmount(exactAmountOfP, exactAmountOfC, exactAmountOfF, p, c, f, currentSumOfP,
                        currentSumOfC, currentSumOfF, i + 1);
    }
}
