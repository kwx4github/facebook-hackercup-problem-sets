#include <cassert>
#include <cstring>

#include <algorithm>
#include <iostream>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < int(b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

struct Trip {
  int a, b, c;
  void read() { scanf("%d %d %d", &a, &b, &c); }
  friend Trip operator + (Trip A, Trip B) { return (Trip){A.a+B.a, A.b+B.b, A.c+B.c}; }
  friend bool operator == (Trip A, Trip B) { return A.a==B.a && A.b==B.b && A.c==B.c; }
};

int main(void) {
  int ntc; scanf("%d", &ntc);
  
  REP(tc, ntc) {
    Trip goal; goal.read();

    int n; scanf("%d", &n);
    vector<Trip> ts(n);
    REP(i, n) { ts[i].read(); }

    bool ans = false;
    REP(state, 1<<n) {
      Trip s = {0, 0, 0};
      REP(i, n) if (state&(1<<i)) s = s + ts[i];
      if (s == goal) ans = true;
    }

    printf("Case #%d: %s\n", tc+1, ans ? "yes" : "no");
  }
  return 0;
}   
