#include<iostream>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;
 
#define FOR(i,a,b) for(int i=a;i<b;++i)
#define REP(i,n) FOR(i,0,n)
#define RREP(i,n) for(int i=n-1;i>=0;--i)
#define EACH(it,v) for(typeof(v.begin()) it=v.begin();it!=v.end();++it)
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define CLEAR(x,with) memset(x,with,sizeof(x))
#define sz size()
#define len length()
#define mkp make_pair
typedef long long LL;
typedef vector <LL> VI;
typedef pair<int, int> PI;
typedef pair<int, PI> PII;

int main()
{
    int T;
    cin>>T;


    int x=1;
    while(T--)
    {
        int P,C,F;
        cin>>P>>C>>F;

        int N=0;
        cin>>N;
        VI p(20,0),c(20,0),f(20,0);


        REP(i,N)
        {
            cin>>p[i]>>c[i]>>f[i];
        }

        int n=pow(2,N);
        bool found = false;
        FOR(i,1,n)
        {
            int g=i;
            int h=0;
            int a=0,b=0,d=0;
            while(g)
            {
                if(g&1)
                {
                    a+=p[h];
                    b+=c[h];
                    d+=f[h];
                }
                if(a == P && b == C && d == F)
                {
                    cout<<"Case #"<<x<<": yes"<<endl;
                    found = true;
                    break;
                }
                h++;
                g=g>>1;
            }
            if(found)
                break;
        
        }
             if(!found)
                cout<<"Case #"<<x<<": no"<<endl;
            
   
        x++;
    }

    return 0;
}
        
                    

