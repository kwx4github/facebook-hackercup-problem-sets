#include <bits/stdc++.h>

#define MP           make_pair
#define PB           push_back
#define SZ(a)        ((int)a.size())
#define LENGTH(a)    ((int)a.length())
#define ALL(a)       a.begin(), a.end()
#define REP(i, n)    for(int i = 0; i < n; i++)
#define INC(i, a, b) for(int i = a; i <= b; i++)
#define DEC(i, a, b) for(int i = a; i >= b; i--)
#define CLEAR(a, b)  memset(a, b, sizeof a)

using namespace std;

typedef long long          LL;
typedef unsigned long long ULL;
typedef vector<int>        VI;
typedef pair<int, int>     II;
typedef vector<II>         VII;

const double PI  = acos(-1.0);
const double EPS = 1e-9;
const int    inf = 1000000000;
const LL     INF = ((LL)inf)*inf;

#define LIM 22
int nut[1<<LIM][3], done[1<<LIM];
int inp[LIM][3], n;

void fill(int c) {
	if(done[c] == 1) return;
	done[c] = 1;
	REP(i, n) if((c&(1<<i)) == 0) {
		nut[c|(1<<i)][0] = nut[c][0] + inp[i][0];
		nut[c|(1<<i)][1] = nut[c][1] + inp[i][1];
		nut[c|(1<<i)][2] = nut[c][2] + inp[i][2];
		fill(c|(1<<i));
	}
}

int main(int argc, char const *argv[])
{
	int tcase;
	scanf("%d", &tcase);
	REP(_t, tcase) {
		int gp, gc, gf;
		scanf("%d%d%d%d", &gp, &gc, &gf, &n);
		REP(i, n) scanf("%d%d%d", &inp[i][0], &inp[i][1], &inp[i][2]);
		CLEAR(nut, 0);
		CLEAR(done, 0);
		fill(0);
		bool ans = false;
		REP(i, 1<<n) {
			if(nut[i][0] == gp && nut[i][1] == gc && nut[i][2] == gf)
				ans = true;
		}
		printf("Case #%d: ", _t+1);
		if(ans == true) printf("yes\n");
		else printf("no\n");
	}
	return 0;
}