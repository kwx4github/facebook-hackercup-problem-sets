/** author : ayush sharma **/
#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<cstring>

#include<algorithm>
#include<string>
#include<sstream>
#include<vector>
#include<queue>
#include<set>
#include<map>
#include<stack>

#define FOR(i,a,b) for(int i=a; i<b; i++)
#define FORr(i,a,b) for(int i=a ; i>=b; i--)
#define pb push_back
#define mp make_pair
#define ub upper_bound
#define lb lower_bound
#define si1(n) scanf("%d",&n)
#define si2(n1, n2) scanf("%d%d",&n1,&n2)
#define si3(n1,n2,n3) scanf("%d%d%d",&n1, &n2, &n3)
#define si4(n1,n2,n3,n4) scanf("%d%d%d%d",&n1, &n2, &n3, &n4)
#define ff first
#define ss second
#define READ(x) freopen(x,"r",stdin)
#define WRITE(x) freopen(x,"w",stdout)
#define show1(a) cout<<a<<"\n"
#define show2(a, b) cout<<a<<"   "<<b<<"\n"
#define show3(a, b, c) cout<<a<<"   "<<b<<"    "<<c<<"\n"
#define show4(a, b, c,d) cout<<a<<"   "<<b<<"    "<<c<<"   "<<d<<"\n"

using namespace std;
typedef long long LL;
typedef pair <int,int> pii;
typedef pair <pii, int> piii;
typedef pair<string,int> psi;
typedef vector<int> vi;
typedef unsigned long long ull;
const int INFI = 1<<29;

int P, C, F, n;
struct item{
    int p, c, f;
    item(int _p, int _c, int _f) : p(_p), c(_c), f(_f) {}
};

vector<item> diet;
int PP[21];

int solve(int i, int p, int c, int f){
    if(p == P && c == C && f == F) return 1;
    if(i == n) return 0;
    //if(PP[i] != -1) return PP[i];
    int res;
    res = solve(i+1, p + diet[i].p, c + diet[i].c, f + diet[i].f);
    if(res == 0) res = solve(i+1, p, c, f);
    return res;
}

int main(){
    READ("in.txt");
    WRITE("out.txt");
    int test, tc = 1; si1(test);
    while(test--){
        si3(P,C,F);
        si1(n);
        diet.clear();
        FOR(i,0,n){
            int p, c, f; si3(p,c,f);
            item x(p,c,f);
            diet.pb(x);
        }
        int res = solve(0,0,0,0);
        printf("Case #%d: ",tc++);
        if(res == 1) printf("yes\n");
        else if(res == 0) printf("no\n");
    }
    return 0;
}
