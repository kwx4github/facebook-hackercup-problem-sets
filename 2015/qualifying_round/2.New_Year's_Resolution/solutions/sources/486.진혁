#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

#define MP make_pair
#define REP(v, repeat) for(int v=0; v<(repeat); ++v)
#define REPD(v, repeat) for(int v=(repeat)-1; v>=0; --v)
#define FOR(v, pos, end) for(int v=(pos); v<=(end); ++v)
#define FORD(v, pos, end) for(int v=(pos); v>=(end); --v)

typedef vector<int> VI;

int t, n;
VI p, c, f;

bool isPossible(const int idx, const int psum, const int csum, const int fsum)
{
	if (psum == 0 && csum == 0 && fsum == 0) return true;
	if (idx >= n || psum < 0 || csum < 0 || fsum < 0) return false;
	
	if (isPossible(idx + 1, psum, csum, fsum)) return true;
	if (isPossible(idx + 1, psum - p[idx], csum - c[idx], fsum - f[idx])) return true;
	return false;
}

int main()
{
#ifdef _CONSOLE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w+", stdout);
#endif

	scanf("%d", &t);
	FOR(tc, 1, t)
	{
		int P, C, F;
		scanf("%d%d%d", &P, &C, &F);
		scanf("%d", &n);
		p = VI(n); c = VI(n); f = VI(n);
		REP(i, n) scanf("%d%d%d", &p[i], &c[i], &f[i]);

		printf("Case #%d: %s\n", tc, isPossible(0, P, C, F) ? "yes" : "no");
	}
	return 0;
}