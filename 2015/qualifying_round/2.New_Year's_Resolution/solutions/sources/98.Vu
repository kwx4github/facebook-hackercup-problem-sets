#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pi;
const int MOD = 1000000007;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define foru(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define ford(i, a, b) for (int i = (a); i >= (b); --i)
#define sz(a) ((int) a.size())
#define pb(a) push_back(a)
#define mp(a, b) make_pair(a, b)
#define mem(a) memset(a, 0, sizeof(a))
#define all(a) a.begin(), a.end()

template<class T> inline T tmin(T a, T b) {return (a < b) ? a : b;}
template<class T> inline T tmax(T a, T b) {return (a > b) ? a : b;}
template<class T> inline void add_max(T &a, T b) {if (b > a) a = b;}
template<class T> inline void add_min(T &a, T b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {if (b == 0) return a; return gcd(b, a % b);}

const int N = 20;
int n, a[N][3], bits[1 << N];
int dp[1 << N][3];
int p, c, f;

int main(int argc, char *argv[]) {
    ios_base::sync_with_stdio(false);
    int ntest;
    cin >> ntest;
    foru(t, 1, ntest) {
        cin >> p >> c >> f >> n;
        mem(dp); mem(bits);
        repu(i, 0, n) repu(j, 0, 3) {
            cin >> a[i][j];
            dp[1 << i][j] = a[i][j];
        }
        bool ok = false;
        repu(i, 1, (1 << n)) {
            if (i & 1) {
                bits[i] = bits[i - 1];
                repu(j, 0, 3) dp[i][j] = dp[i - 1][j] + a[0][j];
                if (dp[i][0] == p && dp[i][1] == c && dp[i][2] == f) ok = true;
            }
            else {
                bits[i] = bits[i >> 1] + 1;
                int y = 1 << bits[i], x = i ^ y;
                repu(j, 0, 3) dp[i][j] = dp[x][j] + dp[y][j];
                if (dp[i][0] == p && dp[i][1] == c && dp[i][2] == f) ok = true;
            }
            if (ok) break;
        }
        printf("Case #%d: %s\n", t, ok ? "yes" : "no");
    }

    return 0;
}
