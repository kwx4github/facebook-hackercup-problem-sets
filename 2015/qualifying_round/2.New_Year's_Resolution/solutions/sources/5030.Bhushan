#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <string>
#include <cstring>
#include <cassert>
#include <limits>
#include <fstream>

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef long long ll;

#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define sqr(x) (x)*(x)

int main(){
	ifstream ifile;
	ofstream ofile;
	ifile.open("input.txt");
	ofile.open("output.txt");
	int t,t1;
	ifile>>t;t1=t;
	while(t--) {
		int P1,P2,P0,q;
		ifile>>P0>>P1>>P2>>q;
		int mat[q][3];
		bool ans=false;
		rep(i,q) ifile>>mat[i][0]>>mat[i][1]>>mat[i][2];
		for(int i=1;i<((int)1<<q);i++){
			int sum0=0,sum1=0,sum2=0;
			for(int j=0;j<q;j++){
				if(i&((int)1<<j)) {sum0+=mat[j][0];sum1+=mat[j][1];sum2+=mat[j][2];}
			}
			if(sum0==P0&&sum1==P1&&sum2==P2) {ans=true;break;}
		}

		ofile<<"Case #"<<t1-t<<": ";
		if(ans) ofile<<"yes\n";
		else ofile<<"no\n";
	}

	ifile.close();
	ofile.close();
	return 0;
}