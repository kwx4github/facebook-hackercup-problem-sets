package secondproblem;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class NewYearsResolution {
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	public static void main(String[] args) throws NumberFormatException, IOException {
		int _T, _N;

		_T = Integer.parseInt(br.readLine());

		for(int i = 0; i < _T; i++){
			//Reading input requirements
			int[] _G = new int[3];
			String input_cases = br.readLine();
			_G[0] = Integer.parseInt(input_cases.split(" ")[0]);
			_G[1] = Integer.parseInt(input_cases.split(" ")[1]);
			_G[2] = Integer.parseInt(input_cases.split(" ")[2]);

			//reading case number
			_N = Integer.parseInt(br.readLine());

			//reading cases
			int[][] _PCF = new int[_N][3];
			for(int j = 0; j < _N; j++){
				input_cases = br.readLine();
				_PCF[j][0] = Integer.parseInt(input_cases.split(" ")[0]);
				_PCF[j][1] = Integer.parseInt(input_cases.split(" ")[1]);
				_PCF[j][2] = Integer.parseInt(input_cases.split(" ")[2]);			
			}

			int[] sum = {0,0,0};
			//checking for the problem
			System.out.println("Case #"+ (i+1) +": "+ RecursiveSumCheck(_PCF, sum, _G, 0));
		}
	}

	private static boolean RecursiveSumCheck(int array[][], int sum[], int limit[], int x){
		if(sum[0] < limit[0] && sum[1] < limit[1] && sum[2] < limit[2] && x < array.length){
			for(int i = 0; i < array.length - x; i++){
				for(int j = 0; j < 3; j++){
					sum[j] = sum[j] + array[x+i][j];
				}
				if(RecursiveSumCheck(array, sum, limit, x+1)){
					return true; //since its achieved
				}else{
					for(int j = 0; j < 3; j++){
						sum[j] = sum[j] - array[x+i][j];
					}
				}
			}
		}else{
			if(sum[0] == limit[0] && sum[1] == limit[1] && sum[2] == limit[2]){
				return true; //Achieved
			}
			else{
				return false;
			}
		}
		return false; // Impossible state
	}

}
