package javaapplication27;

import java.util.Stack;

public class JavaApplication27 {

    public static void main(String[] args) {
        String input = "20," +
"734 644 887," +
"20," +
"676 968 23," +
"946 215 329," +
"122 851 31," +
"219 99 845," +
"311 57 422," +
"229 117 452," +
"114 78 48," +
"329 388 63," +
"855 924 12," +
"335 774 659," +
"463 361 424," +
"308 947 550," +
"191 252 239," +
"10 245 760," +
"133 369 824," +
"860 193 530," +
"10 485 782," +
"487 197 15," +
"852 61 373," +
"118 426 365," +
"100 100 100," +
"3," +
"10 10 40," +
"10 30 10," +
"10 60 50," +
"536 749 776," +
"20," +
"55 10 724," +
"122 264 654," +
"10 980 98," +
"494 242 170," +
"159 814 813," +
"615 278 95," +
"251 298 381," +
"310 43 52," +
"735 913 69," +
"195 29 266," +
"15 324 268," +
"12 831 11," +
"19 148 12," +
"30 323 24," +
"417 186 702," +
"799 890 338," +
"79 615 470," +
"540 62 142," +
"206 132 220," +
"347 15 916," +
"827 994 940," +
"20," +
"262 846 390," +
"19 543 52," +
"839 400 405," +
"23 859 592," +
"420 513 357," +
"562 331 218," +
"497 141 492," +
"748 632 524," +
"15 722 48," +
"80 521 176," +
"815 533 62," +
"508 51 171," +
"19 291 136," +
"674 895 157," +
"325 10 62," +
"209 362 439," +
"12 50 10," +
"88 373 711," +
"13 58 274," +
"287 342 443," +
"291 999 572," +
"20," +
"514 631 123," +
"688 547 135," +
"822 542 52," +
"95 22 100," +
"25 100 384," +
"28 174 413," +
"37 474 15," +
"702 511 465," +
"10 26 742," +
"616 863 74," +
"815 850 707," +
"364 10 563," +
"48 43 225," +
"725 75 62," +
"991 270 100," +
"26 131 867," +
"168 803 59," +
"289 408 23," +
"70 54 234," +
"459 876 640," +
"524 829 430," +
"20," +
"45 392 93," +
"140 56 30," +
"29 42 621," +
"249 829 584," +
"886 53 26," +
"691 215 765," +
"174 160 477," +
"65 481 367," +
"62 239 741," +
"48 361 10," +
"950 657 395," +
"82 712 883," +
"202 21 249," +
"973 273 110," +
"123 277 871," +
"11 15 67," +
"65 192 182," +
"730 28 717," +
"168 952 720," +
"55 829 760," +
"978 383 580," +
"20," +
"58 445 25," +
"462 16 364," +
"44 639 37," +
"22 876 239," +
"437 128 293," +
"540 588 21," +
"304 22 249," +
"310 957 587," +
"29 589 10," +
"99 983 763," +
"96 49 987," +
"119 10 62," +
"654 53 10," +
"151 435 15," +
"13 300 449," +
"399 656 102," +
"10 158 322," +
"215 688 112," +
"10 116 576," +
"207 283 517," +
"771 534 961," +
"20," +
"291 72 444," +
"15 249 256," +
"192 25 311," +
"325 131 10," +
"66 10 67," +
"969 135 19," +
"360 43 129," +
"187 104 756," +
"105 226 694," +
"179 41 837," +
"359 762 422," +
"278 241 278," +
"534 53 29," +
"314 123 740," +
"820 299 60," +
"562 920 100," +
"17 16 211," +
"11 64 16," +
"125 562 929," +
"661 269 546," +
"410 787 593," +
"20," +
"157 816 309," +
"51 78 20," +
"281 125 720," +
"29 881 205," +
"91 476 664," +
"552 985 252," +
"414 753 58," +
"98 261 469," +
"684 57 494," +
"206 276 570," +
"233 731 655," +
"16 226 814," +
"28 617 242," +
"756 600 176," +
"292 259 708," +
"949 52 312," +
"11 452 87," +
"448 919 291," +
"20 20 20," +
"281 54 17," +
"393 821 883," +
"20," +
"389 586 269," +
"363 927 476," +
"156 65 852," +
"92 924 146," +
"40 332 572," +
"205 135 101," +
"69 62 351," +
"156 849 10," +
"35 18 438," +
"355 39 774," +
"478 477 442," +
"59 744 795," +
"188 213 136," +
"11 712 410," +
"703 728 365," +
"91 960 333," +
"36 157 517," +
"880 71 23," +
"253 46 520," +
"924 39 79," +
"708 39 464," +
"20," +
"691 490 32," +
"10 10 785," +
"130 230 92," +
"83 66 217," +
"30 106 576," +
"10 734 108," +
"70 193 173," +
"501 467 154," +
"873 696 10," +
"259 285 183," +
"205 26 423," +
"10 100 10," +
"544 920 63," +
"357 856 93," +
"503 13 41," +
"372 62 393," +
"438 181 35," +
"877 369 662," +
"636 897 273," +
"23 987 807," +
"868 903 789," +
"20," +
"12 103 782," +
"696 535 181," +
"632 98 10," +
"154 74 998," +
"10 240 300," +
"95 10 698," +
"26 196 686," +
"384 930 414," +
"12 163 161," +
"163 38 440," +
"422 15 637," +
"355 25 10," +
"740 26 930," +
"277 740 302," +
"328 129 135," +
"20 714 250," +
"39 730 61," +
"822 578 333," +
"639 23 10," +
"485 16 75," +
"382 993 459," +
"20," +
"917 103 568," +
"776 500 372," +
"18 900 13," +
"92 367 16," +
"803 755 414," +
"94 321 521," +
"746 421 216," +
"313 321 18," +
"628 147 561," +
"451 65 898," +
"747 179 336," +
"249 37 590," +
"397 166 431," +
"248 550 433," +
"42 76 10," +
"94 56 10," +
"353 963 11," +
"307 821 100," +
"29 994 478," +
"588 35 454," +
"425 837 606," +
"20," +
"36 382 976," +
"898 10 596," +
"773 773 287," +
"160 170 135," +
"166 13 340," +
"412 94 139," +
"441 348 778," +
"676 103 850," +
"134 37 244," +
"12 146 165," +
"542 14 623," +
"264 248 10," +
"89 71 18," +
"173 27 452," +
"340 222 227," +
"62 560 446," +
"139 245 48," +
"15 830 769," +
"774 655 30," +
"429 216 92," +
"788 804 781," +
"20," +
"447 71 70," +
"274 994 525," +
"577 199 427," +
"543 963 263," +
"438 11 11," +
"484 844 38," +
"54 125 371," +
"123 10 217," +
"797 403 18," +
"41 527 163," +
"487 10 171," +
"16 762 912," +
"10 932 68," +
"694 118 222," +
"759 10 22," +
"670 917 553," +
"107 871 413," +
"119 82 410," +
"614 472 670," +
"230 100 99," +
"201 548 847," +
"20," +
"216 624 923," +
"662 104 10," +
"910 123 865," +
"577 48 802," +
"109 200 929," +
"411 12 198," +
"162 13 43," +
"544 150 494," +
"156 746 353," +
"146 25 126," +
"50 42 16," +
"747 210 189," +
"244 40 83," +
"368 16 942," +
"606 203 442," +
"13 908 775," +
"276 35 401," +
"384 559 659," +
"657 43 216," +
"29 210 622," +
"861 695 625," +
"20," +
"10 77 445," +
"958 23 124," +
"398 967 12," +
"23 379 811," +
"714 78 384," +
"59 37 16," +
"13 569 71," +
"113 129 32," +
"688 20 215," +
"158 267 96," +
"823 123 170," +
"353 483 10," +
"964 560 17," +
"75 11 154," +
"21 356 125," +
"10 281 16," +
"760 157 656," +
"13 651 599," +
"888 314 10," +
"474 876 659," +
"828 683 564," +
"20," +
"526 612 937," +
"85 194 532," +
"729 56 190," +
"29 46 518," +
"363 18 134," +
"60 741 529," +
"321 353 874," +
"90 376 71," +
"11 391 83," +
"52 179 772," +
"832 292 690," +
"524 434 459," +
"571 38 10," +
"32 415 58," +
"96 352 802," +
"47 848 436," +
"980 73 621," +
"174 60 10," +
"60 339 250," +
"64 39 423," +
"100 100 100," +
"5," +
"40 70 30," +
"30 10 40," +
"20 20 50," +
"10 50 90," +
"40 10 20," +
"812 491 534," +
"20," +
"663 690 103," +
"165 644 334," +
"49 26 10," +
"267 184 231," +
"242 323 171," +
"31 273 777," +
"549 35 588," +
"824 28 53," +
"553 68 206," +
"772 97 64," +
"21 698 558," +
"31 10 849," +
"10 261 792," +
"836 756 11," +
"403 860 794," +
"670 234 13," +
"196 646 532," +
"841 396 370," +
"994 67 441," +
"108 84 243";
        //String input = "5,100 100 100,1,100 100 100,100 100 100,3,10 10 40,10 30 10,10 60 50,100 100 100,5,40 70 30,30 10 40,20 20 50,10 50 90,40 10 20,292 264 512,20,909 302 261,705 597 823,291 51 126,28 697 57,593 31 826,311 256 57,292 14 47,29 730 716,12 529 146,768 16 439,37 472 15,350 192 34,163 468 238,69 173 10,203 72 690,424 875 213,223 593 292,151 46 10,88 90 16,773 653 711,991 827 352,20,29 560 929,139 681 102,144 853 10,84 729 80,218 20 67,140 80 901,428 20 500,520 970 128,422 419 30,413 101 192,467 448 501,32 939 684,34 20 38,251 317 132,588 437 10,648 21 79,391 25 14,499 22 24,854 77 361,405 25 20";
        String[] testc = input.split(",");
        int counter=1;
         boolean flag=false;
    
        
        int count = 1;
        int count1;
        int num_of_food = 0;;
        while (count != testc.length) {
            count1 = 0;
            String foodlimit;
          flag=false;
            foodlimit = testc[count];
            String foodl[] = foodlimit.split(" ");
            int foodlimitsum = 0;
            for (int i = 0; i < foodl.length; i++) {
                foodlimitsum = foodlimitsum + Integer.parseInt(foodl[i]);
            }
          
            count++;
            num_of_food = Integer.parseInt(testc[count]);
          
            count++;
            String[] food = new String[num_of_food];
            int foodsum[] = new int[num_of_food];
            for (int i = 0; i < num_of_food; i++) {
                food[count1] = testc[count];
                String foodl1[] = food[count1].split(" ");
                int fsum=0;
                for (int y = 0; y < foodl1.length; y++) {
                    fsum = fsum + Integer.parseInt(foodl1[y]);
                }
                foodsum[i]=fsum;
            
                count1++;
               
                count++;
            }
            JavaApplication27 get=new JavaApplication27();

            get.populateSubset(foodsum,0,foodsum.length,foodlimitsum);
            
            int co=0;
            int f[]=new int[3];
            int f1[]=new int[get.indexs.length];
            int f2[]=new int[get.indexs.length];
            int f3[]=new int[get.indexs.length];
            
             for(int q=0;q<get.indexs.length;q++){
             for(int q1=0;q1<get.indexs[q].length;q1++){
                 if((q==0&q1==0)|get.indexs[q][q1]!=0){
                  
                 String[] z=food[get.indexs[q][q1]].split(" ");
                 for(int x=0;x<z.length;x++){
                 f[x]=Integer.parseInt(z[x]);
                 }
                 f1[co]=f[0];
                 f2[co]=f[1];
                 f3[co]=f[2];
                 co++;
                
                 
                 }
                 
                 
             }
             int sum=0,sum1=0,sum2=0;
             for(int i=0;i<f1.length;i++){
             sum=sum+f1[i];
             sum1=sum1+f2[i];
             sum2=sum2+f3[i];
             }
             if(sum==Integer.parseInt(foodl[0])&sum1==Integer.parseInt(foodl[1])&sum2==Integer.parseInt(foodl[2])){
             flag=true;
             }
             }
       
           if(flag==true){
        System.out.println("Case #"+counter+": "+"yes");
        }else{
            System.out.println("Case #"+counter+": "+"no");
           }  
counter++;
        }
        
        
    }
     private Stack<Integer> stack=new Stack<Integer>();
    private int sumInStack=0;
     private Stack<Integer> indexstack=new Stack<Integer>();
     int indexs[][]=new int[20][20];
     int c=0;
   
    public void populateSubset(int[] data,int fromIndex,int endIndex,int TARGET_SUM){
        
    if(sumInStack==TARGET_SUM){
    print(stack,TARGET_SUM);
   
    }
    for(int currentIndex=fromIndex;currentIndex<endIndex;currentIndex++){
    if(sumInStack+data[currentIndex]<=TARGET_SUM){
    stack.push(data[currentIndex]);
    indexstack.push(currentIndex);
    sumInStack+=data[currentIndex];
    populateSubset(data,currentIndex+1,endIndex,TARGET_SUM);
    sumInStack-=(Integer)stack.pop();
    indexstack.pop();
    }
    }
    
    }
    private void print(Stack<Integer> stack,int TARGET_SUM){
     
        
        for(int i=0;i<indexstack.size();i++){
        indexs[c][i]=indexstack.get(i);
        }
        c++;
    StringBuilder sb=new StringBuilder();
    sb.append(TARGET_SUM).append("=");
    for(Integer i:stack){
    sb.append(i).append("+");
    }
 
    }
}
