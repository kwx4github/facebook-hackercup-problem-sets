cases = []
all_foods = []

with open("new_years_resolution.txt") as f:
    number_of_cases = int(f.readline())
    n = 0
    while n < number_of_cases:
        n = n + 1
        case = f.readline().split()
        cases.append(case)
        number_of_foods = int(f.readline())
        foods = []
        m = 0
        while m < number_of_foods:
            m = m + 1
            food = f.readline().split()
            foods.append(food)
        all_foods.append(foods)


def try_with(gP, gC, gF, foods, curr=0, sumP=0, sumC=0, sumF=0):
    for i, food in enumerate(foods):
        if i < curr:
            continue
        P = int(food[0])
        C = int(food[1])
        F = int(food[2])
        newSumP = sumP + P
        newSumC = sumC + C
        newSumF = sumF + F
        result = False
        if newSumP == gP and newSumC == gC and newSumF == gF:
            result = True
        elif newSumP < gP and newSumC < gC and newSumF < gF:
            result = try_with(gP, gC, gF, foods, i + 1, newSumP, newSumC, newSumF)
        if result:
            return True
    return False


with open("prob30_output.txt", "w") as f:
    for index, case in enumerate(cases):
        gP = int(case[0])
        gC = int(case[1])
        gF = int(case[2])

        canEat = try_with(gP, gC, gF, all_foods[index])

        if canEat:
            result = 'yes'
        else:
            result = 'no'

        f.write("Case #%d: %s\n" % (index + 1, result))
