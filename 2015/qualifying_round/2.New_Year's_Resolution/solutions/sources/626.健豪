#include <iostream>
#include <cstdio>
#include <algorithm>
#include <set>
#define MP(a, b) make_pair(a, b)
#define PB(a) push_back(a)

using namespace std;

typedef pair<int, int> pii;
typedef pair<pii, int> piii;
int A, B, C, ta, tb, tc;
set<piii> ss[2];

piii mp(int a, int b, int c) {
	return MP(MP(a, b), c);
}

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("OB.txt", "w", stdout);

	int T, kase = 1, n;
	scanf("%d", &T);
	while(T--) {
		ss[0].clear(); ss[1].clear();
		scanf("%d%d%d", &A, &B, &C);
		scanf("%d", &n);
		ss[0].insert(mp(0, 0, 0));
		int f = 0;
		for(int i=0; i<n; i++) {
			scanf("%d%d%d", &ta, &tb, &tc);
			for(set<piii>::iterator it = ss[f].begin(); it != ss[f].end(); ++it) {
				ss[!f].insert(*it);
				int na = (it->first).first + ta, nb = (it->first).second + tb;
				int nc = it->second + tc;
				if(na > A || nb > B || nc > C) continue;
				ss[!f].insert(mp(na, nb, nc));
			}
			ss[f].clear();
			f = !f;
		}
		printf("Case #%d: ", kase ++);
		if(ss[f].count(mp(A, B, C))) puts("yes");
		else puts("no");
	}
	return 0;
}
