#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
#include<utility>
#define part pair<int,int>
#define pi acos(-1)////cos-1(-1)=180*=pi
#define i64 __int64
#define EPS 1e-9
#define lld long long int
#define MOD 100000007
#define MAX 51
#define mem(ara,value) memset(ara,value,sizeof(ara))
using namespace std;

struct val{
    int pro;
    int car;
    int fat;
};

val food[25];
int n,flag;

int cal(int i,val amount)
{
    if(flag==1)
        return 0;
    if(i>=n)
    {
        if(amount.pro==0 && amount.car==0 && amount.fat==0)
            flag=1;
        return 0;
    }
    if( (amount.pro==0 || amount.car==0 || amount.fat==0) && (amount.pro+amount.car+amount.fat)!=0)
        return 0;
    cal(i+1,amount);
    if(amount.pro-food[i].pro>=0 && amount.car-food[i].car>=0 && amount.fat-food[i].fat>=0)
    {
        amount.pro=amount.pro-food[i].pro;
        amount.car=amount.car-food[i].car;
        amount.fat=amount.fat-food[i].fat;
        cal(i+1,amount);
    }
    return 0;
}

int main()
{
   	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
    int i,k,t;
    val need;
    scanf("%d",&t);
    for(k=1;k<=t;k++)
    {
        scanf("%d %d %d",&need.pro,&need.car,&need.fat);
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            scanf("%d %d %d",&food[i].pro,&food[i].car,&food[i].fat);
        }
        flag=0;
        cal(0,need);
        if(flag==1)
            printf("Case #%d: yes\n",k);
        else
            printf("Case #%d: no\n",k);
    }
    return 0;
}
