#include <bits/stdc++.h>

using namespace std;

struct food
{
    int p, c, f;
};

int n, gp, gc, gf, fl;
food a[25];

bool check(int cp, int cc, int cf)
{
    if (fl) return true;
    fl = (cp == gp && cc == gc && cf == gf);
    return fl;
}

void duyet(int p, int cp, int cc, int cf)
{
    if (cp + a[p].p <= gp && cc + a[p].c <= gc && cf + a[p].f <= gf)
    {
        if (p == n) fl = check(cp + a[p].p, cc + a[p].c, cf + a[p].f);
        else if (!fl) duyet(p+1, cp + a[p].p, cc + a[p].c, cf + a[p].f);
    }
    if (p == n) fl = check(cp, cc, cf);
    else if (!fl) duyet(p+1, cp, cc, cf);
}

int main()
{
    ios_base::sync_with_stdio(0);
    int t;
    cin >> t;
    for (int cs = 1; cs <= t; ++cs)
    {
        cin >> gp >> gc >> gf >> n;
        for (int i = 1; i <= n; ++i) cin >> a[i].p >> a[i].c >> a[i].f;
        fl = 0;
        duyet(1, 0, 0, 0);
        cout << "Case #" << cs << ": " << ((fl) ? "yes\n" : "no\n");
    }
}
