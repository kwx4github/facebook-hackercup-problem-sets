#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <cmath>

using namespace std;

typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef pair<bool, iii> bi;

int x, y, z, n, g1[25], g2[25], g3[25], test;

bool f(int mask, int a, int b, int c) {
    if (mask == (1 << n) - 1 && (a || b || c)) return false;
    if (a == 0 && b == 0 && c == 0) return true;
    for (int i=0; i<n; i++)
        if (!(mask & (1 << i)))
            if (f(mask | (1 << i), a - g1[i], b - g2[i], c - g3[i])) return true;
    return false;
}

/*bi f(int i, int mask) {
    if (mask == (1 << n) - 1 && (f.second.first || f.second.second.first || f.second.second.second)) return false;
    if (f.second.first == 0 && f.second.second.first == 0 && f.second.second.second == 0) return true;
    for (int j=0; j<n; j++)
        if (!(mask & (1 << j))) {
            bi next = f(j, mask | (1 << j));
            if (bi.first) ;
        }
    return false;
}*/

bool backtrack(int x, int y, int z) {
    for (int mask = 0; mask < (1 << n); mask ++) {
        int s1 = 0, s2 = 0, s3 = 0;
        for (int i=0; i<n; i++)
            if (mask & (1 << i)) {
                s1 += g1[i];
                s2 += g2[i];
                s3 += g3[i];
            }
        if (s1 == x && s2 == y && s3 == z) return true;
    }
    return false;
}

void process() {
    cin >> test;
    for (int t = 1; t<=test; t++) {
        cin >> x >> y >> z >> n;
        for (int i=0; i<n; i++)
            cin >> g1[i] >> g2[i] >> g3[i];
        cout << "Case #" << t <<": ";
        if (backtrack(x, y, z)) cout << "yes" << endl; else cout <<"no"<<endl;
    }
}

int main() {
    freopen("FHC2.inp","r",stdin);
    freopen("FHC2.out","w",stdout);
    process();
}
