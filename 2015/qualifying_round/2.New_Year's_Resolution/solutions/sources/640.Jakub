#include<iostream>
#include<utility>
#include<vector>

using namespace std;

vector<pair<int, pair<int, int> > > mozliwe;

pair<int, pair<int, int> > add_s(pair<int, pair<int, int> > a, pair<int, pair<int, int> > b){
   pair<int, pair<int, int> > c = make_pair(a.first + b.first, make_pair(a.second.first + b.second.first, a.second.second + b.second.second));
   return c;
}

void ansque(int i, bool f){
    cout << "Case #" << i << ": ";
    if(f) cout << "yes";
    else cout << "no";
    cout << endl;
}

int main(){
   ios_base::sync_with_stdio(false);
   int n, t, s, a, b, c;
   bool flaga;
   pair<int, pair<int, int> > finals, news, news2;
   cin >> t;
   for(int i = 1; i <= t; ++i){
      cin >> a >> b >> c;
      cin >> n;
      finals = make_pair(a, make_pair(b, c));
      mozliwe.push_back(make_pair(0, make_pair(0, 0)));
      flaga = false;
      for(int j = 0; j < n; ++j){
	 cin >> a >> b >> c;
	 if(flaga) continue;
	 news = make_pair(a, make_pair(b, c));
	 s = mozliwe.size();
	 for(int l = 0; l < s; ++l){
	    news2 = add_s(news, mozliwe[l]);
	    if(news2 == finals){
	      flaga = true;
	      break;
	      
	    }
	    mozliwe.push_back(news2);
	 }
      }
      mozliwe.clear();
      ansque(i, flaga);
   }
   return 0;
}