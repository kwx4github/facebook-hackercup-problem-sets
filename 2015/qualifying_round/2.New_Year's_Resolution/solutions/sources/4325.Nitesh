#include<iostream>
#include<cstdio>
#include<cstring>
#include<stdlib.h>
#include<algorithm>
#define getcx getchar_unlocked
#ifndef ONLINE_JUDGE
    #define getcx getchar
#endif
#define lli long long int
#define li long int
#define ts(t) while(t--)
using namespace std;
 
/* author: niteshsingh  Thapar University*/
 
inline int inp()
{
   int n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}
bool caneat(int p[],int c[],int f[], int n, int gp,int gc,int gf)
{
    if(n<0)
    return false;
     if (gf == 0 && gc == 0 && gp == 0)
     return true;
   if (n == 0 && (gf != 0 && gc != 0 && gp != 0))
     return false;
  if (p[n-1] > gp && c[n-1] > gc && f[n-1] > gf)
     return caneat(p,c,f,n-1,gp,gc,gf);
   return caneat(p,c,f,n-1,gp,gc,gf) || caneat(p,c,f,n-1,gp-p[n-1],gc-c[n-1],gf-f[n-1]);
}
int main()
{
 //  freopen("input-new.txt","r",stdin);
 //  freopen("outpot_new.txt","w",stdout);
int t,cn=0;
t=inp();
while(cn<t){
    cn++;
printf("Case #%d: ",cn);
char str[]="yes";
int gp,gc,gf,n,*p,*f,*c,flag=0,i=0;
gp = inp();
gc = inp();
gf = inp();
n = inp();
//printf("p=%d c=%d f=%d n=%d",gp,gc,gf,n);
p=(int *) malloc (n*sizeof(int));
c=(int *) malloc (n*sizeof(int));
f=(int *) malloc (n*sizeof(int));
memset(p,0,n);
memset(c,0,n);
memset(f,0,n);
while(i<n)
{
    p[i] = inp();
    c[i] = inp();
    f[i] = inp();
    i++;
}
if(!caneat(p,c,f,n,gp,gc,gf))
    {
    str[0]='n';
    str[1]='o';
    str[2]='\0';
    }
printf("%s\n",str);
 
}
}