from sys import stdin

def read_value ():
	splitted = (stdin.readline()).split()
	value = ()
	for i in range(3):
		value = value + (int(splitted[i]), )
	return value

def eat_yes_or_no(value, food):

	computed = {}
	n = len(food)
			
	def sub (u, v):
		r = ()
		for i in range(3):
			r = r + (u[i] - v[i], )
		return r;
		
	def smaller_or_equal (u, v):
		for i in range(3):
			if u[i] > v[i]:
				return False
		return True

	def equal (u, v):
		for i in range(3):
			if u[i] != v[i]:
				return False
		return True
		
	def compute (v, b):
		if (v, b) in computed:
			return computed[(v, b)]
		else:
			r = False
			for i in range(n):
				if (b & (1 << i) != 0) and smaller_or_equal(food[i], v):
					if equal(food[i], v):
						r = True
						break
					else:
						r = compute(sub(v, food[i]), b & ~(1 << i))
						if r is True:
							break
			computed[(v, b)] = r
			return r
		
	r = compute(value, (1 << n) - 1)
	if r is True:
		return "yes"
	else:
		return "no"
	
T = int(stdin.readline())
for i in range(T):
	value = read_value()
	food = ()
	N = int(stdin.readline())	
	for j in range(N):
		food = food + (read_value(), )
	r = eat_yes_or_no(value, food)
	print("Case #%d: %s" % (i + 1, r))