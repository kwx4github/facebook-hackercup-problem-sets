from FBHC_helper import work

def get_subsums(a):
	n = len(a)
	ret = [0] * (1 << n)
	for i in range(n):
		ret[1 << i] = a[i]
	for i in range(1, len(ret)):
		prev = i & (i - 1)
		ret[i] = ret[prev] + ret[i ^ prev]
	return ret

def one_test():
	goal = tuple(map(int, input().split()))
	n = int(input())
	a = [map(int, input().split()) for _ in range(n)]
	a = zip(*a)
	b = zip(*map(get_subsums, a))
	print("yes" if any(x == goal for x in b) else "no")

work(one_test)
