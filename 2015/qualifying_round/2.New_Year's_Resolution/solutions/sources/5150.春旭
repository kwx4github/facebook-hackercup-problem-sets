#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>

using namespace std;

int aLimit, bLimit, cLimit, n;
int a[100], b[100], c[100];
bool flag;

void dfs(int nowIndex, int aNow, int bNow, int cNow){
	if(flag) return;
	if(aNow > aLimit || bNow > bLimit || cNow > cLimit) return;
	if(aNow == aLimit && bNow == bLimit && cNow == cLimit){
		flag = true;
		return;
	}
	if(nowIndex == n)return;
	dfs(nowIndex + 1, aNow + a[nowIndex], bNow + b[nowIndex], cNow + c[nowIndex]);
	dfs(nowIndex + 1, aNow, bNow, cNow);
}

void solve(){
	cin >> aLimit >> bLimit >> cLimit;
	cin >> n;
	for(int i = 0; i < n; ++i) cin >> a[i] >> b[i] >> c[i];
	flag = false;
	dfs(0, 0, 0, 0);
	if(flag) cout << "yes"; else cout << "no";
	cout << endl;
}

int main(){
	ios::sync_with_stdio(false);
	int t;
	cin >> t;
	for(int i = 1; i <= t; ++i){
		cout << "Case #" << i <<": ";
		solve();
	}
	return 0;
}
