import numpy as np

def main(inp):
    lines = iter(inp)
    num_cases = int(next(lines))
    for i in range(num_cases):
        wanted = map(int, next(lines).split())
        num_foods = int(next(lines))
        foods = [map(int, next(lines).split()) for _ in range(num_foods)]
        res = is_possible(wanted, foods)
        print("Case #{}: {}".format(i+1, "yes" if res else "no"))

def is_possible(wanted, foods):
    # dynamic programming: can't eat more than 1 of any food
    #
    # table[a, i, j, k, ...] is the amount of nutrient a by eating
    # i of food 1, j of food 2, ...
        
    foods = np.array(foods)
    table = np.zeros([3] + [2] * len(foods))
    for i, food in enumerate(foods):
        bit = np.arange(2).reshape(
            [1]*(i+1) + [2] + [1]*(len(foods)-i-1))
        bit = bit * food.reshape([3] + [1] * len(foods))
        table += bit
    
    wanted = np.reshape(wanted, [3] + [1] * len(foods))
    return np.all(table == wanted, axis=0).any()


if __name__ == '__main__':
    import sys
    with sys.stdin as f:
        main(f)
