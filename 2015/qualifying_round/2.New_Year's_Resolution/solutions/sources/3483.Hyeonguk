#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

struct MyType
{
	int v[3];
};

int goal[3];
int eat[3];
vector<MyType> data;
int n;
bool ok;

void solve(int current)
{
	if (ok)
	{
		return;
	}
	for (int i = 0; i < 3; i++)
	{
		if (goal[i] < eat[i])
		{
			return;
		}
	}
	if (current == n)
	{
		for (int i = 0; i < 3; i++)
		{
			if (goal[i] != eat[i])
			{
				return;
			}
		}
		ok = true;
		return;
	}
	for (int i = 0; i < 3; i++)
	{
		eat[i] += data[current].v[i];
	}
	solve(current + 1);
	for (int i = 0; i < 3; i++)
	{
		eat[i] -= data[current].v[i];
	}
	if (ok)
	{
		return;
	}
	solve(current + 1);
}

void testCase()
{
	for (int i = 0; i < 3; i++)
	{
		scanf("%d", &goal[i]);
	}
	scanf("%d", &n);
	data.resize(n);

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			scanf("%d", &data[i].v[j]);
		}
	}
	ok = false;
	solve(0);
	printf("%s", ok ? "yes" : "no");
}

int main()
{
	int t;
	scanf("%d", &t);
	for (int i = 1; i <= t; i++)
	{
		printf("Case #%d: ", i);
		testCase();
		printf("\n");
	}
	return 0;
}