#include <iostream>
#include <string>
#include <algorithm>

class trip{
public:
    int a,b,c;
    trip(){}
    trip(int a1,int a2,int a3){
       a=a1;
       b=a2;
       c=a3;
    }
    friend std::istream &operator>>(std::istream  &input, trip &t){
        input >> t.a >> t.b >> t.c;
        return input;
    }

    friend trip sub(trip a1,trip a2){
        return trip(a1.a-a2.a,a1.b-a2.b,a1.c-a2.c);
    }

    bool equals(trip a1){
        return (a1.a==a && a1.b==b && a1.c==c);
    }

    bool isZero(){
        return (a==0 && b==0 && c==0);
    }
};

bool sumPos(trip a,trip *l,int n){
    if (n==1)
        return a.equals(l[0]) || a.isZero();
    return sumPos(sub(a,l[n-1]),l,n-1) || sumPos(a,l,n-1);
    }

int main(){
    int t,n,i=1;
    trip target;
    std::cin >> t;
    while (i<=t){
        std::cin >> target >> n;
        trip foods[n];
        for (int i=0;i<n;i++)
            std::cin >> foods[i];
        std::cout << "Case #" << i << ": ";
        if (sumPos(target,foods,n))
            std::cout << "yes\n";
        else std::cout << "no\n";
        i++;
        }
}
