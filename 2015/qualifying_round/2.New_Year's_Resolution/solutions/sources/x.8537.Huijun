import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class NewYearsResolution {
  static List<Integer> idxTrack = new ArrayList<Integer>();
  static int sumP;
  static int sumC;
  static int sumF;

  private static void reset() {
    idxTrack.clear();
    sumP = 0;
    sumC = 0;
    sumF = 0;
  }

  private static boolean dfs(int GP, int GC, int GF, int N, int P[], int C[], int F[], int start) {
    if (sumP > GP || sumC > GC || sumF > GF) {
      return false;
    } else if (sumP == GP && sumC == GC && sumF == GF) {
      return true;
    }
    for (int i = start; i < N; i++) {
      // push
      idxTrack.add(i);
      sumP += P[i];
      sumC += C[i];
      sumF += F[i];
      // recurse
      boolean b = dfs(GP, GC, GF, N, P, C, F, i + 1);
      if (b) {
        return b;
      }
      // pop
      int idx = idxTrack.get(idxTrack.size() - 1);
      idxTrack.remove(idxTrack.size() - 1);
      sumP -= P[idx];
      sumC -= C[idx];
      sumF -= F[idx];
    }
    return false;
  }

  private static boolean solve(int GP, int GC, int GF, int N, int P[], int C[], int F[]) {
    reset();
    return dfs(GP, GC, GF, N, P, C, F, 0);
  }

  public static void main(String[] args) throws FileNotFoundException {
    // TODO Auto-generated method stub
    Scanner in = new Scanner(new File("new_years_resolution.txt"));
    int T = in.nextInt();
    for (int i = 0; i < T; i++) {
      int GP, GC, GF;
      GP = in.nextInt();
      GC = in.nextInt();
      GF = in.nextInt();

      int N = in.nextInt();

      int P[] = new int[N];
      int C[] = new int[N];
      int F[] = new int[N];

      for (int j = 0; j < N; j++) {
        P[j] = in.nextInt();
        C[j] = in.nextInt();
        F[j] = in.nextInt();
      }

      System.out
          .println("Case #" + (i + 1) + ": " + (solve(GP, GC, GF, N, P, C, F) ? "yes" : "no"));
    }
    in.close();
  }

}
