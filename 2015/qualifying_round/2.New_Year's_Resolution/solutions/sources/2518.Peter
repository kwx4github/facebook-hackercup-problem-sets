import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

public class Q2_Resolutions {
	static String inFile = "in.txt";
	static String outFile = "Q2_out.txt";
	static InputStreamReader isr;
	static BufferedReader br;
	static PrintWriter pw;

	static int gint() throws NumberFormatException, IOException {
		return Integer.parseInt(br.readLine());
	}

	static int[] ginta() throws NumberFormatException, IOException {
		String l = br.readLine();
		String[] v = l.split(" ");
		int[] a = new int[v.length];

		for (int i = 0; i < a.length; i++) {
			a[i] = Integer.parseInt(v[i]);
		}

		return a;
	}

	public static void main(String[] args) throws NumberFormatException,
			IOException {
		isr = new InputStreamReader(new FileInputStream(inFile));
		br = new BufferedReader(isr);
		pw = new PrintWriter(outFile);

		int t = gint();
		for (int i = 1; i <= t; i++) {
			int[] d = ginta();
			int n = gint();
			int[][] f = new int[n][];
			for (int j = 0; j < n; j++) {
				f[j] = ginta(); 
			}
			
			String al = solve(i, d, f);
			pw.println(al);
		}
		
		pw.close();
	}

	static String solve(int casen, int[] d, int[][] f) {
		boolean ok = false;

		int n = f.length;
		for (int i = 0; i < (1 << n); i++) {
			int[] cur = new int[3];
			for (int j = 0; j < n; j++) {
				if (((i >> j) & 1) == 1) {
					cur[0] += f[j][0];
					cur[1] += f[j][1];
					cur[2] += f[j][2];
				}
			}
			
			if (eq(cur, d)) {
				ok = true;
				break;
			}
		}

		if (ok)
			return String.format("Case #%d: yes", casen);
		else
			return String.format("Case #%d: no", casen);
	}

	static boolean eq(int[] a, int[] b) {
		if (a == null || b == null)
			return false;
		if (a.length != b.length)
			return false;
		for (int i = 0; i < b.length; i++) {
			if (a[i] != b[i])
				return false;
		}

		return true;
	}

}
