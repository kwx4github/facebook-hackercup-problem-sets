#include <iostream>
#include<stack>
#include<string>
#include<vector>
#include<set>
#include<queue>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
using namespace std;

#define gc getchar
#define p 1000000007
#define MOD 1000000007
#define pc(x) putchar(x)
#define pi(n) printf("%d",n)
#define pis(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define pll(n) printf("%lld",n)
#define ps printf(" ")
#define pn printf("\n")
#define rep(i,n) for(i=0;i<n;i++)
#define fu(i,a,n) for(i=a;i<=n;i++)
#define fd(i,n,a) for(i=n;i>=a;i--)
#define INV 333333336
#define ll long long
#define ull unsigned long long
#define EPS 1e-9
#define infi 2000000000
#define linfi 2000000000000000000

inline int sn()
{
	int n=0;
	int ch=gc();
	while( ch <48 )ch=gc();
	while( ch >47 )
	n = (n<<3)+(n<<1) + ch-'0', ch=gc();
	    return n;
}

inline void wi(int n)
{
	int N = n, rev, count = 0;
	rev = N;
	if (N == 0) { pc('0');  return ;}
	while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
	rev = 0;
	while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
	while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
	while (count--) pc('0');
}

typedef struct 
{
	int a,b,c;
}node;

int main()
{
	int t,n,l,i,j,flag,q;
	scanf("%d",&t);
	for(q=1;q<=t;q++)
	{
		flag=0;
		
		node target,y,z;
		vector<node> x;
		scanf("%d %d %d",&target.a,&target.b,&target.c);
		
		y.a=0;
		y.b=0;
		y.c=0;
		x.push_back(y);
		scanf("%d",&n);
		rep(i,n)
		{
			scanf("%d %d %d",&y.a,&y.b,&y.c);
			l=x.size();
			rep(j,l)
			{
				z.a=x[j].a+y.a;
				z.b=x[j].b+y.b;
				z.c=x[j].c+y.c;
				if((z.a <= target.a) && (z.b <= target.b) && (z.c <= target.c))
					x.push_back(z);
				if((z.a == target.a) && (z.b == target.b) && (z.c == target.c))
					flag=1;
			}		
		}	
		//l=x.size();
		//pin(l);
		if(flag==1)
			printf("Case #%d: yes\n",q);
		else
			printf("Case #%d: no\n",q);	
	}
    return 0;
}











