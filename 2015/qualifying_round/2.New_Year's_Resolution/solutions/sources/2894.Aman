#include<iostream>
#include<algorithm>
#include<cstdio>
using namespace std;

typedef struct{
    int p, c, f;
}NODE;

bool getans(NODE *arr, int index, int n,  int sump, int sumc, int sumf, int gp, int gc, int gf)
{
    if(sump == gp && sumc == gc && sumf == gf)
        return true;

    if(index == n)
        return false;

    bool skip = getans(arr, index + 1, n, sump, sumc, sumf, gp, gc, gf);
    bool take = false;
    if((sump + arr[index].p) <= gp && (sumc + arr[index].c) <= gc && (sumf + arr[index].f) <= gf)
        take =  getans(arr, index + 1, n, sump + arr[index].p , sumc + arr[index].c, sumf + arr[index].f, gp, gc, gf);
    return skip || take;
}

int main()
{
    int t, count = 1;
    freopen("new_years_resolution.txt", "r", stdin);
    freopen("a.txt", "w", stdout);
    cin >> t;
    while(t--)
    {
        int gp, gc, gf;
        cin >> gp >> gc >> gf;
        int n;
        cin >> n;
        NODE arr[n];
        for(int i = 0; i < n; i++)
            cin >> arr[i].p >> arr[i].c >> arr[i].f;
        bool ans = getans(arr, 0, n, 0, 0, 0, gp, gc, gf);
        cout << "Case #" << count++ << ": ";
        if(ans == true)
            cout << "yes" << endl;
        else
            cout << "no" << endl;
    }
    return 0;
}
