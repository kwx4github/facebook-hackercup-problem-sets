import sys, itertools

input_file_name = 'input2.txt'
output_file_name = 'output2.txt'

f_in = open(input_file_name,'r')
f_out = open(output_file_name,'w')

def testcalories(nl, f, t):
    lenf = len(f)
    for j in range(nl):
        b = bin(nl+j)
        G = [0,0,0]
        for k in range(lenf):
            if int(b[k+3]) == 1:
                G[0] = G[0] + f[k][0]
                G[1] = G[1] + f[k][1]
                G[2] = G[2] + f[k][2]
        if G == t:
            return 'yes'        
    return 'no'

contents = f_in.readlines()
num_cases = int(contents.pop(0))

for case in range (num_cases):

    foodlist = []

    N = contents.pop(0)
    target = [int(n) for n in N.split()]

    N = contents.pop(0)
    numfoods = int(N)

    for i in range(numfoods):
        N = contents.pop(0)
        calories = [int(n) for n in N.split()]
        if (calories[0] > target[0]) or (calories[1] > target[1]) or (calories[2] > target[2]):
            pass # Too many calories
        else:
            foodlist.append(calories)

    numloop = 2**len(foodlist)

    # Check worst case scenarios

    check = 1
    answer = 'no' 
    TOTAL = [0,0,0]
    for i in range(len(foodlist)):
        TOTAL[0] = TOTAL[0] + foodlist[i][0]
        TOTAL[1] = TOTAL[1] + foodlist[i][1]
        TOTAL[2] = TOTAL[2] + foodlist[i][2]
    if TOTAL == target: # The meals all add up to exactly the target (confirmed)
        answer = 'yes'
    elif TOTAL[0] < target[0] or TOTAL[1] < target[1] or TOTAL[2] < target[2]:
        answer = 'no' # Not enough calories (confirmed)
        check = 0

    for i in range(len(foodlist)): # All meals, except one, add up to the target
        if ((TOTAL[0] - foodlist[i][0]) == target[0]) and ((TOTAL[1] - foodlist[i][1]) == target[1]) and ((TOTAL[2] - foodlist[i][2]) == target[2]):
            answer = 'yes' # confirmed
        
    if answer == 'no' and check == 1: 
        answer = testcalories(numloop, foodlist, target)
    
    print('Case #{}: {}'.format(case+1, answer))
    print('Case #{}: {}'.format(case+1, answer), file = f_out)
   
f_in.close()
f_out.close()
