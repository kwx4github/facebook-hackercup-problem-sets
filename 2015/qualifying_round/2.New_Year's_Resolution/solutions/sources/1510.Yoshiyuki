import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


public class Main {
	public static void main(String args[]) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine());
		for(int i = 1; i <= t; i++){
			int[] g = parseInt(br.readLine().split(" "));
			
			int n = Integer.parseInt(br.readLine());
			int[][] foods = new int[n][3];
			for(int j = 0; j < n; j++){
				foods[j] = parseInt(br.readLine().split(" "));
			}
			System.out.print("Case #" + i + ": ");
			System.out.println(dfs(g, foods, n) ? "yes" : "no");
		}
	}
	
	public static boolean dfs(int[] g, int[][] foods, int n){
		if(n == 0){
			if(g[0] == 0 && g[1] == 0 && g[1] == 0) return true;
			else return false;
		}
		boolean flag_noteat = dfs(g, foods, n-1);
		g[0] -= foods[n-1][0];
		g[1] -= foods[n-1][1];
		g[2] -= foods[n-1][2];
		boolean flag_eat = dfs(g, foods, n-1);
		g[0] += foods[n-1][0];
		g[1] += foods[n-1][1];
		g[2] += foods[n-1][2];
		return flag_noteat || flag_eat;
	}
	
	public static int[] parseInt(String[] arr){
		int[] res = new int[arr.length];
		for(int i = 0; i < arr.length; i++)res[i] = Integer.parseInt(arr[i]);
		return res;
	}
}
