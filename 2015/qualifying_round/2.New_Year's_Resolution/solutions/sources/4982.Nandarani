#!/usr/bin/python
 
import sys
import numpy
def combinations(iterable, r):
    # combinations('ABCD', 2) --> AB AC AD BC BD CD
    # combinations(range(4), 3) --> 012 013 023 123
    pool = list(iterable)
    n = len(pool)
    if r > n:
        return
    indices = range(r)
    yield list(pool[i] for i in indices)
    while True:
        for i in reversed(range(r)):
            if indices[i] != i + n - r:
                break
        else:
            return
        indices[i] += 1
        for j in range(i+1, r):
            indices[j] = indices[j-1] + 1
        yield list(pool[i] for i in indices)
  

def main(argv):
  s=sys.argv[1]
 
  fptr = open(s, 'r')
 
  num_case=fptr.readline()
  T=int(num_case)
  #print T

  if (T > 20):
     T=20
  i=0;
  while T>0:
    i=i+1
    s=fptr.readline()
    Grand=[]
    for num in s.split():
      Grand.append(int(num))
    #print Grand
    num=fptr.readline()    
    N=int(num);
    if(1 > N or N > 20):
      exit(3);
    items=[]
    while N>0:
      t=fptr.readline()
      item=[]
      for num in t.split():
        item.append(int(num))
        #print item
      items.append(item)
      N=N-1
    #print items 
    p=[]
    FOUND=0 
    for k in range(1,len(items)+1):
      p=list(combinations(items,k))
      V=[] 

      for j in p:
         V= [sum(x) for x in zip(*j)]
         
         if V==Grand:
           #print V
           FOUND=1;
           print "Case #"+str(i)+":"+"yes"
           break
    if FOUND==0:
        print "Case #"+str(i)+":"+"no"     
    T=T-1 
  fptr.close()





if __name__ == "__main__":
    main(sys.argv[1:])
