#include <iostream>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

unsigned long long int convbin (long long int num)
{
    unsigned long long int binver = 0;

    if (num == 1)
    {
        return 1;
    }
    else
    {
        unsigned long long int base = 1;
        while (num > 0)
        {
            int counter = 0;
            while (base <= num)
            {
                base = base * 2;
                counter++;
            }
            unsigned long long int acc = 1;
            for (int i = 0; i < counter-1; i++)
            {
                acc = acc * 10;
            }
            binver = binver + acc;
            num = num - (base/2);
            base = 1;
        }
        return binver;
    }
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int cases;
    cin >> cases;
    for (int i = 0; i < cases; i++)
    {
        int target[3];
        for (int q = 0; q < 3; q++)
        {
            cin >> target[q];
        }

        int foodnums;
        cin >> foodnums;
        int foodchart[foodnums][4];
        for (int q = 0; q < foodnums; q++)
        {
            for (int m = 0; m < 3; m++)
            {
                cin >> foodchart[q][m];
            }
            foodchart[q][3] = 0;
        }
        int things = 1;
        for (int q = 0; q < foodnums; q++)
        {
            things = things * 2;
        }
        if (foodnums == 20)
        {
            things = things-1;
        }
        cout << "Case #" << i+1 << ": ";
        for (int q = 0; q < things; q++)
        {
            unsigned long long int permut = convbin(q);
            //cout << permut << endl;
            int a = 0;
            int b = 0;
            int c = 0;
            for (int m = 0; m < foodnums; m++)
            {
                foodchart[m][3] = permut%10;
                permut = permut/10;
            }
            for (int m = 0; m < foodnums; m++)
            {
                a = a + foodchart[m][0] * foodchart[m][3];
                b = b + foodchart[m][1] * foodchart[m][3];
                c = c + foodchart[m][2] * foodchart[m][3];
                //cout << a << " " << b << " " << c << endl;
            }
            if (a == target[0] && b == target[1] && c == target[2])
            {
                cout << "yes" << endl;
                goto label;
            }
        }
        foodchart[19][3] = 1;
        for (int q = 0; q < things; q++)
        {
            unsigned long long int permut = convbin(q);
            //cout << permut << endl;
            int a = 0;
            int b = 0;
            int c = 0;
            for (int m = 0; m < foodnums; m++)
            {
                foodchart[m][3] = permut%10;
                permut = permut/10;
            }
            for (int m = 0; m < foodnums; m++)
            {
                a = a + foodchart[m][0] * foodchart[m][3];
                b = b + foodchart[m][1] * foodchart[m][3];
                c = c + foodchart[m][2] * foodchart[m][3];
                //cout << a << " " << b << " " << c << endl;
            }
            if (a == target[0] && b == target[1] && c == target[2])
            {
                cout << "yes" << endl;
                goto label;
            }
        }
        cout << "no" << endl;
        label: cout << "";
    }
}
