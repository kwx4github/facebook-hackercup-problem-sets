/// B 30
#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;
#define dbg cout<<"came here"<<endl;
void call(int x, int sz);
struct FOODS
{
    int P, C, F;
};
bool ok;
vector<FOODS>result;
vector<FOODS>s;
vector<int>flag;
int l, tz;
int Gp, Gc, Gf;
int main()
{
    freopen("new_years_resolution.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    int T;
    scanf("%d", &T);
    for(int cas = 1; cas <= T; ++cas)
    {
        ok = false;
        flag.clear();
        result.clear();
        s.clear();
        scanf("%d %d %d", &Gp, &Gc, &Gf);
        int N;
        scanf("%d", &N);
        l = N;
        FOODS tt;
        for(int kk = 0; kk < N; ++kk)
        {
            scanf("%d %d %d", &tt.P, &tt.C, &tt.F);
            s.push_back(tt);
        }
        tz=0;
        for(int i=0;i<N;++i)
            flag.push_back(0);
        call(0,tz);
        if(ok)
        {
            printf("Case #%d: yes\n", cas);
        }
        else
        {
            printf("Case #%d: no\n", cas);
        }
    }
    return 0;
}
void call(int x, int sz)
{
    if(result.size()==sz)
    {
        int tp = 0, tc = 0, tf = 0;
        for(int p=0;p<sz;++p)
        {
            tp += result[p].P;
            tc += result[p].C;
            tf += result[p].F;
        }
        if(tp == Gp && tc == Gc && tf == Gf)
        {
            ok = true;
            return;
        }
    }
    else
    {
        if(ok)
            return;
        for(int i=x;i<l;++i)
        {
            if(flag[i]==0)
            {
                flag[i]=1;
                result.push_back(s[i]);
                call(++x,sz);
                flag[i]=0;
                result.pop_back();
            }
        }
    }
    if(ok)
        return;
    if(result.size()==0 && tz<=l)
    {
        call(0,++tz);
    }
}
