/*#define name "asd"
	freopen(name ".in","r",stdin);
	freopen(name ".out","w",stdout);*/
#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
typedef pair<LL,LL> PII;
typedef vector<LL> VI;
#define MP make_pair
#define FOR(v,p,k) for(LL v=p;v<=k;++v)
#define FORD(v,p,k) for(int v=p;v>=k;--v)
#define REP(i,n) for(int i=0;i<(LL)(n);++i)
#define VAR(v,i) __typeof(i) v=(i)
#define FOREACH(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)
#define PB push_back
#define ST first
#define ND second
#define SIZE(x) (int)x.size()
#define ALL(c) c.begin(),c.end()
#define ll long long
#define int long long

int MOD = 1e9 + 7;
int rev = 500000004;
#undef int
int main(){
#define int long long
#define name "asd"
	freopen(name ".in","r",stdin);
	freopen(name ".out","w",stdout);
	ios_base::sync_with_stdio(0);
	int t;
	cin>>t;
	REP(q,t){
		int n;
		int a,b,c;
		cin>>a>>b>>c;
		cin>>n;
		set<int> pos;
		pos.insert(0);
		REP(i, n){
			int ta,tb,tc;
			cin>>ta>>tb>>tc;
			set<int> temp;
			FOREACH(it, pos){
				int tempor = *it;
				int ta1 = min(tempor % 1001 + ta, 1000LL);
				tempor /= 1001;
				int tb1 = min(tempor % 1001 + tb, 1000LL);
				tempor /= 1001;
				int tc1 = min(tempor % 1001 + tc, 1000LL);
				temp.insert(ta1 + 1001 * tb1 + 1001 * 1001 * tc1);
			}
			FOREACH(it, temp){
				pos.insert(*it);
			}
		}
		cout<<"Case #"<<q + 1<<": ";
		if(pos.find(a + b * 1001 + c * 1001 * 1001) != pos.end()){
			cout<<"yes";
		} else{
			cout<<"no";
		}
		cout<<'\n';
	}

	return 0;
}
