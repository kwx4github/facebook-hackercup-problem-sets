require 'set'

def solve_impl target, foods
	return true if target == [0] * target.size
	return false if target.count{|v| v < 0} > 0 or $cache.include?(target)
	foods.each do |food|
		return true if solve_impl(target.size.times.map{|i| target[i] - food[i]}, foods)
	end
	$cache << target	
	false
end

def solve target, foods
	$cache = Set.new
	solve_impl(target, foods)
end

gets.to_i.times do |i|
	target = gets.split.map(&:to_i)
	foods = gets.to_i.times.map{gets.split.map(&:to_i)}
	puts "Case ##{i + 1}: #{solve(target, foods) ? "yes" : "no"}"
end
