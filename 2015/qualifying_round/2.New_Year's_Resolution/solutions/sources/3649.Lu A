import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Luan
 */
public class FoodFinding {

    public static int numTestCases;

    public static void main(String[] args) throws FileNotFoundException, IOException {
        BufferedReader bfr = new BufferedReader(new FileReader(new File("new_years_resolution.txt")));

        BufferedWriter bw = new BufferedWriter(new FileWriter(new File("output.txt")));

        numTestCases = Integer.valueOf(bfr.readLine().trim());

        int[] requirement = new int[3];
        for (int i = 1; i <= numTestCases; i++) {
            String[] re = bfr.readLine().trim().split(" ");
            requirement[0] = Integer.valueOf(re[0]);
            requirement[1] = Integer.valueOf(re[1]);
            requirement[2] = Integer.valueOf(re[2]);
            int numfood = Integer.valueOf(bfr.readLine().trim());
            int[][] foods = new int[numfood][3];
            for (int j = 0; j < numfood; j++) {
                String[] fo = bfr.readLine().trim().split(" ");
                foods[j][0] = Integer.valueOf(fo[0]);
                foods[j][1] = Integer.valueOf(fo[1]);
                foods[j][2] = Integer.valueOf(fo[2]);
            }

            int[] filter = new int[numfood];
            Arrays.fill(filter, 0);
            //check each cases
            boolean stop = false;
            boolean found = false;
            while (!stop) {
                int index = -1;
                for (int j = filter.length - 1; j >= 0; j--) {
                    if (filter[j] == 0) {
                        index = j;
                        filter[index] = 1;
                        for (int k = index + 1; k < filter.length; k++) {
                            filter[k] = 0;
                        }
                        break;
                    }
                }
                if (index == -1) {
                    break;
                }

                //check
                int[] sum = new int[3];
                for (int j = 0; j < filter.length; j++) {
                    if (filter[j] == 1) {
                        sum[0] += foods[j][0];
                        sum[1] += foods[j][1];
                        sum[2] += foods[j][2];
                    }
                }

                if (sum[0] == requirement[0] && sum[1] == requirement[1] && sum[2] == requirement[2]) {
                    found = true;
                    break;
                }

            }

            if (found) {
                bw.write("Case #" + i + ": yes\n");
            } else {
                bw.write("Case #" + i + ": no\n");
            }
        }

        bw.close();
        bfr.close();

    }

}
