package com.grelobites.hackercup;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by juanpr on 1/11/15.
 */
public class NewYearResolution {


	private static String outputFileName;
	private static String inputFileName;

	public static void main(String[] args) throws IOException {
		parse(args);
		System.out.println("Loading file..." + inputFileName);
		File inputFile = new File(inputFileName);
		if(inputFile.exists() && inputFile.isFile()){
			String[] result = processFile(inputFile);
			writeResult(result);
		}else {
			System.out.println("Not exists or not a file");
		}
	}

	private static void parse(String[] args) {
		inputFileName = args[0];
		outputFileName = null;
		if(args.length > 1){
			outputFileName = args[1];
		}
	}

	private static String[] processFile(File inputFile) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader(inputFile));
		int numberOfTests = Integer.valueOf(br.readLine()).intValue();
		String[] result = new String[numberOfTests];
		for(int i=0;i<numberOfTests;i++){
			String foodWish = br.readLine();
			int numberOfFoods = Integer.valueOf(br.readLine()).intValue();
			List<String> foods = new ArrayList<String>();
			for(int j=0; j<numberOfFoods; j++){
				foods.add(br.readLine());
			}
			result[i] = ("Case #"+ (i+1) + ": " + (evalue(foodWish,foods)?"yes":"no"));
		}
		return result;
	}

	private static void writeResult(String[] result) throws IOException {
		if(outputFileName == null) {
			for (String number : result) {
				System.out.println(number);
			}
		}else{
			File outputfile = new File(outputFileName);
			FileOutputStream fos = new FileOutputStream(outputfile);
			BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(fos));
			for (int i = 0; i < result.length; i++) {
				bw.write(result[i]);
				bw.newLine();
			}
			bw.close();
		}
	}

	public static boolean evalue(String foodWish, List<String> foods) {
		int counter = 0;
		for(String food: foods) {
			counter++;
			if (foodWish.equals(food)) {
				return true;
			}
			String rest = minus(foodWish, food);
			if(!negative(rest)) {
				if (evalue(rest, foods.subList(counter, foods.size()))) {
					return true;
				}
			}
		}
		return false;
	}

	private static boolean negative(String falta) {
		String[] foods = falta.split(" ");
		for(String food:foods){
			if(Integer.valueOf(food) < 0){
				return true;
			}
		}
		return false;
	}

	private static String minus(String food1, String food2) {
		String[] foods1 = food1.split(" ");
		String[] foods2 = food2.split(" ");
		StringBuffer result = new StringBuffer();
		for(int i=0;i<3;i++) {
			result.append(String.valueOf(Integer.valueOf(foods1[i]) - Integer.valueOf(foods2[i])));
			result.append(" ");
		}
		return result.toString().trim();
	}
}
