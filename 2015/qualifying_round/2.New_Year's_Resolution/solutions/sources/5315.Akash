def findSubSum(P, C, F, n, Gp, Gc, Gf):
    if Gc == 0 and Gp == 0 and Gf == 0:
        return True
    if (not n) and (Gp or Gc or Gf):
        return False
    if P[n-1] > Gp or C[n-1] > Gc or F[n-1] > Gf:
        return findSubSum(P, C, F, n-1, Gp, Gc, Gf)

    return findSubSum(P, C, F, n - 1, Gp, Gc, Gf) or findSubSum(P, C, F, n - 1, Gp - P[n - 1], Gc - C[n - 1], Gf - F[n-1])

if __name__ == '__main__':
    P = [0] * 21
    C = [0] * 21
    F = [0] * 21

    for x in xrange(1, input() + 1):
        Gp, Gc, Gf = map(int, raw_input().split())
        n = input()
        for i in xrange(n):
            P[i], C[i], F[i] = map(int, raw_input().split())

        print ("Case #" + str(x) + ": yes") if findSubSum(P, C, F, n, Gp, Gc, Gf) else ("Case #" + str(x) + ": no")
