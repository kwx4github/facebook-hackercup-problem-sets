# def subset_sum(numbers, target, partial=[]):
#     s = int(sum(partial))
#     # check if the partial sum is equals to target
#     if s == target: 
#         print "sum(%s)=%d" % (partial, target)
#     if s >= target:
#         return  # if we reach the number why bother to continue

#     for i in range(len(numbers)):
#         #print 'hello'
#         n = numbers[i]
#         remaining = numbers[i+1:]
#         subset_sum(remaining, target, partial + [n]) 
def is_subset_sum(array,n,summ):
    if summ==0:
        return True
    if n==0 and  summ!=0:
        return False
    if array[n-1]>summ:
        return is_subset_sum(array,n-1,summ)
    return is_subset_sum(array,n-1 ,summ) or is_subset_sum(array,n-1,summ-array[n-1])

t=int(raw_input())
for case in xrange(t):
    string=raw_input()
    #print string
    G=string.split()
    n=int(raw_input())
    d={'p':[],'c':[],'f':[]}
    for i in xrange(n):
        new_string=raw_input()
        new_G=new_string.split()
        d['p'].append(int(new_G[0]))
        d['c'].append(int(new_G[1]))
        d['f'].append(int(new_G[2]))
    if is_subset_sum(d['p'],n,int(G[0])):
        if is_subset_sum(d['c'],n,int(G[1])):
            if is_subset_sum(d['f'],n,int(G[2])):
                print 'Case #%d:'%(case+1),'yes'
            else:
                print 'Case #%d:'%(case+1),'no'
        else:
            print 'Case #%d:'%(case+1),'no'
    else :
        print 'Case #%d:'%(case+1),'no'

