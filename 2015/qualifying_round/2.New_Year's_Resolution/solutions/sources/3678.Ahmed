<?php
    $lines = file('new_years_resolution.txt');
    $myfile = fopen("new_years_resolution_example_output.txt", "w") or die("Unable to open file!");
    $problems_count = $lines[0];
    $lines_count    = sizeof($lines);
    $problems_count = 1;
    for($l=1; $l<$lines_count; $l++) {
        $needs       = explode(' ', trim($lines[$l]));
        $foods_count = intval(trim($lines[$l+1]));
        $food_arr = array();
        for($t=0; $t<$foods_count; $t++)
        {
            $food_arr[] = explode(' ', trim($lines[$l+$t+2]));
        }
        $l += $foods_count + 1;
        
        $found = false;
        getProbabilities($food_arr, $needs, 0, 0, 0, array(), $found);
        
        if($found)
            {$txt = 'Case #'.$problems_count.': yes'."\n";}
        else
            {$txt = 'Case #'.$problems_count.': no'."\n";}
        $problems_count++;
        echo $txt.'<br/>';
        fwrite($myfile, $txt);
    }
    fclose($myfile);
    
    function getProbabilities($food_arr, $nv, $pv=0, $cv=0, $fv=0, $pi=array(), &$found=false)
    {
        if($found)
            {return;}
        $food_arr_size = sizeof($food_arr);
        foreach ($food_arr as $i => $food)
        {
            if(in_array($i, $pi))
                {continue;}
            $temp_p_val = intval(trim($food[0])) + $pv;
            $temp_c_val = intval(trim($food[1])) + $cv;
            $temp_f_val = intval(trim($food[2])) + $fv;
            $temp_i_arr = array_merge($pi, array($i));

            if($temp_p_val == $nv[0] && $temp_c_val == $nv[1] && $temp_f_val == $nv[2])
            {
                $found = true;
                return;
            }
            
            if($temp_p_val > $nv[0] || $temp_c_val > $nv[1] || $temp_f_val > $nv[2])
            {
                continue;
            }
            getProbabilities(array_slice($food_arr, 1, $food_arr_size, true), $nv, $temp_p_val, $temp_c_val, $temp_f_val, $temp_i_arr, $found);
        }
        return;
    }
    
?>
