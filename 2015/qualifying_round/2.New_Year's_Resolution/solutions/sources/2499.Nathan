f = open('new_years_resolution.txt', 'r')
out = open('new_years_resolution.out.txt', 'w+')

cases = int(f.readline())

GP = 0
GC = 1
GF = 2

def findFoodRoute(foods, eaten):
   
    if eaten == [0,0,0]:
        return True
   
    if eaten[GP] < 0 or eaten[GC] < 0 or eaten[GF] < 0:
        return False
       
    for i, food in enumerate(foods):
        eat = eaten[:]
        eat[GP] = eat[GP] - food[GP]
        eat[GC] = eat[GC] - food[GC]
        eat[GF] = eat[GF] - food[GF]
       
        result = findFoodRoute(foods[:i] + foods[i + 1:], eat)
       
        if(result):
            return True
       
    return False

for case in range(1, cases + 1):
   
    can_str = 'no'
   
    limits = map(int, f.readline().strip().split(" "))
   
    foods = []
    for food in range(int(f.readline().strip())):
        fud = map(int, f.readline().strip().split(" "))
       
        if(fud[GP] <= limits[GP] and fud[GC] <= limits[GC] and fud[GF] <= limits[GF]):
            foods = foods + [fud]
       
       
    if findFoodRoute(foods, limits):
        can_str = 'yes'
   
    ans = "Case #{0:d}: {1}".format(case, can_str)
    out.write(ans + "\n")
    print ans

f.close()
out.close()