#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
using namespace std;
int target[3];
int food[20][3];
vector <int> S;
int current_sum = 0;
void populate_set(int A[][3],int start,int last,int target[3],bool& ans)
{


    if (current_sum == target[0]) {

            int sec=0,third=0;
            for(int i=0; i < int(S.size()); i++)
            {

               sec +=A[S[i]][1];
               third +=A[S[i]][2];
            }

            if( sec == target[1] && third == target[2])
            {
                ans = 1;
                return;
            }
        }

        for (int i = start; i < last; i++) {

            if (current_sum + A[i][0] <= target[0]) {



                S.push_back(i);

                current_sum += A[i][0];


                populate_set(A, i+1, last,target,ans);
                current_sum -= A[S.back()][0];
                S.pop_back();

            }
        }



}
int main()
{
    freopen("input2_2.txt","r",stdin);
    freopen("output2_2.txt","w",stdout);
    int t,n,c=0;
    bool ans;
    scanf("%d",&t);
    while(t--)
    {
    	S.clear();
    	ans = 0;
        c++;
		printf("Case #%d: ",c);
        for(int i=0;i<3;i++)
            scanf("%d",&target[i]);
        scanf("%d",&n);
        for(int i=0;i<n;i++)
            for(int j=0;j<3;j++)
                scanf("%d",&food[i][j]);

        populate_set(food,0,n,target,ans);
        if(ans==1)
        	printf("yes\n");
        else
        	printf("no\n");





    }






}
