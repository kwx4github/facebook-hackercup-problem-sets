import sys

def isPossible(alist, n, total):
    if total[0] ==0 and total[1] == 0 and total[2] == 0:
        return True
    for t in total:
        if n == 0 and t != 0:
            return False

    for i in xrange(3):
        if alist[n-1][i] > total[i]:
            return isPossible(alist, n-1, total)

    newTotal = tuple(a_i - b_i for a_i, b_i in zip(total, alist[n-1]))
    return isPossible(alist, n-1, total) or isPossible(alist, n-1, newTotal)

t = int(sys.stdin.readline().strip())

for case in xrange(t):
    goals = tuple(int(s) for s in sys.stdin.readline().strip().split())
    n = int(sys.stdin.readline().strip())
    foodSet = []

    for food in xrange(n):
        foodSet.append(tuple(int(s) for s in sys.stdin.readline().strip().split()))

    ans = isPossible(foodSet, n, goals)

    print 'Case #%d: %s' % (case+1, 'yes' if ans else 'no')

