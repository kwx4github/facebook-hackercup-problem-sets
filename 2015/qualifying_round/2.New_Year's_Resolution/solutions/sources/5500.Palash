#include <stdio.h>
#include <stdlib.h>
 
#define ARRAYSIZE(a) (sizeof(a))/(sizeof(a[0]))
 
static int total_nodes;
	
bool st = false;
void subset_sum(int s[], int s2[], int s3[],  int t[],
                int s_size, int t_size,
                int sum, int ite,
                int const target_sum, int const sum2, int const sum3)
{
    if( target_sum == sum )
    {
        int Gct = 0, Gft = 0;
        for(int i = 0; i < t_size; i++) {
        	Gct += s2[t[i]];
        	Gft += s3[t[i]];
		}
		if(Gct == sum2 && Gft == sum3)
			st = true;
    
        return;
    }
    else
    {
        for( int i = ite; i < s_size; i++ )
        {
            t[t_size]= i;
            subset_sum(s, s2, s3, t, s_size, t_size + 1, sum + s[i], i + 1, target_sum, sum2, sum3);
        }
    }
}
void isSubsetSum(int s[], int s2[], int s3[], int size, int target_sum, int sum2, int sum3)
{
    int tuplu[20];
    subset_sum(s, s2, s3, tuplu, size, 0, 0, 0, target_sum, sum2, sum3);
}
 

int main() {
	FILE *ifp, *ofp;
	char outputFilename[] = "output.txt";
	ifp = fopen("new_years_resolution.txt", "r");
	int T;
	int count = 1;
	FILE *f = fopen(outputFilename,"w");
	fscanf(ifp,"%d", &T);
	for (; T > 0; T--) {
	    	int Gp, Gc, Gf;
	    	fscanf(ifp,"%d %d %d", &Gp, &Gc, &Gf);
		    int N;
		    fscanf(ifp,"%d", &N);
			int Gpval[N], Gcval[N], Gfval[N];
	    	for (int i = 0; i < N  ; i++) {
	    	    fscanf(ifp,"%d %d %d", &Gpval[i], &Gcval[i], &Gfval[i]);
	    	}
	    	isSubsetSum(Gpval, Gcval, Gfval, N, Gp, Gc, Gf);
	    	if(st) {
	    		fprintf(f,"Case #%d: yes\n",count);
	    		st = false;
			} else {
				fprintf(f,"Case #%d: no\n",count);
			}
			count++;
		}
		fclose(f);
		fclose(ifp);
		return 0;
}
