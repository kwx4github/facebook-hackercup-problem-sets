#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
using namespace std;

int g[3][25];

bool solve(int p, int c, int f, int n) {
    int subset = pow(2, n);

    for (int s = 1; s < subset; s++) {
        int psum = 0, csum = 0, fsum = 0;

        int bitm = s;
        for (int i = 0; i < n; i++) {
            if (bitm & 0x01) {
                psum += g[0][i];
                csum += g[1][i];
                fsum += g[2][i];
            }
            bitm >>= 1;
        }

        if (p==psum && c==csum && f==fsum) return true;
    }
    return false;
}

int main() {
    int t, T, n;
    int p, c, f;

    cin >> T;
    for (t = 1; t <= T; t++) {
        cin >> p >> c >> f;
        cin >> n;
        for (int i = 0; i < n; i++) {
            cin >> g[0][i] >> g[1][i] >> g[2][i];
        }

        if (solve(p, c, f, n)) cout << "Case #" << t << ": yes\n";
        else cout << "Case #" << t << ": no\n";
    }

    return 0;
}
