#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <fstream>

using namespace std;

#define REP(i,n) for(int i=0; i<n; i++)
#define REPs(i,x,n) for(int i=x; i<n; i++)
#define SZ(x) x.size()
#define VVII vector< vector< pair<int, int> > > 
#define mem(f, a) memset(f, a, sizeof(f))
#define all(c) (c).begin(), (c).end()
#define PB push_back
#define MP make_pair
#define epsil 1e-9
#define infinit  1e8
#define ll long long
#define PI pair<int, int>
#define X first
#define Y second

string strswap(string ori, int a, int b){
	char t = ori[a]; ori[a] = ori[b]; ori[b] = t;
	return ori;
}

string num2str(int a){
	stringstream ss;
	ss << a;
	string str = ss.str();
	return str;
}

//mcheck(i, A[i], x, y, z, A, B, C, opt
bool mcheck(int curi, int suma, int sumb, int sumc, int x, int y, int z, int* A, int* B, int* C, int opt){
	if (suma == x && sumb == y && sumc == z) return 1;
	if (suma>x || sumb> y || sumc >z || curi == opt-1) return 0;
	curi = curi + 1;
	bool ans = 0;
	for (int i = curi; i < opt; i++){
		ans = ans || mcheck(i, suma + A[i], sumb + B[i], sumc + C[i], x, y, z, A, B, C, opt);
	}
	return ans;
}

int main()
{
	ifstream cin("in.txt");
	ofstream cout("out.txt");
	int n;
	cin >> n;
	//vector<
	int A[100], B[100], C[100];
	
	REP(i, n){
		int x, y, z; 
		bool ans = 0;
		double msum;
		double len[100];
		cin >> x >> y >> z;
		int opt; cin >> opt; 

		REP(i, opt){
			cin >> A[i] >> B[i] >> C[i];
		}
		int cursum = 0;
		REP(i, opt){
			if (mcheck(i, A[i],B[i], C[i], x,y,z, A, B, C, opt)){ ans = 1; break; }
		}
		cout << "Case #" << i + 1 << ": ";
		if (ans) cout << "yes" << endl;
		else cout<<"no"<<endl;
	}

	return 0;
}