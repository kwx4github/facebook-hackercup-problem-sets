#include <fstream>
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int GP,GC,GF;
int N;
vector<int> p,c,f;
string to_string(int a){
	string out;
	int pos = 0;
	while(a>0){
		out += ( '0' +(a%10));
		a /= 10;
	}
	reverse(out.begin(),out.end());
	return out;
}
bool solve(int i,int haveP,int haveC,int haveF){
	bool res = false;
	if(haveP==GP && haveC==GC && haveF==GF){
		return true;
	}
	if(i >= N || haveP>=GP || haveC>=GC || haveF>=GF){
		return false;
	}
	res |= solve(i+1,haveP+p[i],haveC+c[i],haveF+f[i]);
	res |= solve(i+1,haveP,haveC,haveF);
	return res;
}
int main (int argc, char *argv[]){
	ifstream fin(argv[1], ios::in);
	ofstream fout(argv[2], ios::out);
	int T;
	int iip,iic,iif;
	fin>>T;
	for (int i = 0; i < T; ++i){
		fin>>GP>>GC>>GF;
		fin>>N;
		for (int j = 0; j < N; ++j) {
			fin>>iip>>iic>>iif;
			p.push_back(iip);c.push_back(iic);f.push_back(iif);
		}

		bool sol = solve(0,0,0,0);
		string idx = to_string(i+1);
		string outp = "Case #"; 
		outp+= idx;
		outp+= ": ";
		outp+= (sol?"yes":"no");
		cout << outp<<endl;
		fout << outp<<endl;
		p.clear();c.clear();f.clear();
	}
}