/*
prob: NewYearRes
id: i.amlansaha
lang: C++
date: Jan 9, 2015
algo: Brute Force
*/
#include <bits/stdc++.h>

using namespace std;

typedef long long LL;
typedef unsigned long long LLU;
typedef vector<int> VI;
typedef vector<long long> VLL;
typedef map<int, int> MAPII;
typedef map<string,int> MAPSI;
typedef pair<int, int> PII;

#define FOR(i,a,b) for(i=a;i<=b;i++)
#define ROF(i,a,b) for(i=a;i>=b;i--)
#define FR(i,n)	for(i=0;i<n;i++)
#define RF(i,n) for(i=n;i>0;i--)
#define CLR(a) memset ( a, 0, sizeof ( a ) )
#define RESET(a) memset ( a, -1, sizeof ( a ) )
#define PB(a)	push_back ( a )

struct Food
{
	int p, c, f;
	Food(int pp=0,int cc=0, int ff=0)	{p=pp;c=cc;f=ff;}
	int check()	{
		if ( p<0 || c<0 || f<0 )	return -1;	//invalid
		if ( !p && !c && !f )	return 1;	//valid
		else	return 0;	//yet to be decided
	}
};

Food given[23];

bool backTrack(int pos, Food crnt)
{
	if ( crnt.check() < 0 )	return false;
	if ( crnt.check() == 1 )	return true;
	if ( pos < 0 )	return false;
	Food temp = crnt;
	temp.c-= given[pos].c;
	temp.f-= given[pos].f;
	temp.p-= given[pos].p;
	bool ret = backTrack(pos-1, temp);
	if ( ret )	return true;
	return backTrack(pos-1, crnt);
}

int main ()
{
	freopen("NewYearRes.in", "r", stdin);
	freopen("NewYearRes.out", "w", stdout);

    int i, j, k, l, temp, t, n, m, caseno = 0;
    Food target;
    bool ans;
    scanf ( "%d", &t );
    
    while ( t-- )	{
    	scanf ( "%d %d %d", &target.p, &target.c, &target.f );
    	scanf ( "%d", &n );
    	FR ( i, n )	{
    		scanf ( "%d %d %d", &given[i].p, &given[i].c, &given[i].f);
    	}
    	ans = backTrack(n-1, target);
    	printf ( "Case #%d: ", ++caseno );
    	if ( ans )	printf ( "yes\n");
    	else	printf ( "no\n");
    }
    return 0;
}
