import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

/**
 * Created by hussein on 11/01/15.
 */
public class Resolution {

    public static void main(String[] args)
    {
        if(args.length < 1)
            return;
        try {
            List<String> lines = Files.readAllLines(Paths.get(args[0]), Charset.defaultCharset());
            PrintWriter writer = new PrintWriter("output.txt");

            int t = Integer.valueOf(lines.remove(0));

            for(int i = 1; i<=t; i++)
            {
                String[] values = lines.remove(0).split(" ");
                int p = Integer.valueOf(values[0]);
                int c = Integer.valueOf(values[1]);
                int f = Integer.valueOf(values[2]);
                int n = Integer.parseInt(lines.remove(0));
                List<String> foods = lines.subList(0, n);
                lines = lines.subList(n, lines.size());

                String possible = (isItPossible(foods, p, c, f))? "Yes" : "No";

                writer.append("Case #" + i + ": " + possible);
                if(i < t)
                    writer.append('\n');
            }

            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public static boolean isItPossible(List<String> foods, int p, int c, int f) {
        return isItPossible(foods, p, c, f, 0, 0, 0, 0);
    }

    public static boolean isItPossible(List<String> foods, int p, int c, int f, int start, int pP, int pC, int pF) {

        for (int i = start; i < foods.size(); i++) {

            String[] values = foods.get(i).split(" ");
            int nP = pP + Integer.parseInt(values[0]);
            int nC = pC + Integer.parseInt(values[1]);
            int nF = pF + Integer.parseInt(values[2]);

            if(nP == p && nC == c && nF == f)
                return true;

            if(i+1 < foods.size() && (nP < p || nC < c || nF < f)) {
                if(isItPossible(foods, p, c, f, i + 1, nP, nC, nF))
                    return true;
            }
        }

        return false;
    }
}