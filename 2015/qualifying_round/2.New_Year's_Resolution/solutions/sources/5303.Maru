#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <inttypes.h>

using namespace std;

typedef unsigned int UINT;
typedef long long unsigned int ULL;
typedef long long int LL;

const int MAXN = 2097152;
const int MOD = 1000000007;

uint16_t intake[MAXN][3];
uint16_t foods[20][3];
uint16_t get[3];

bool check(uint16_t a[3], uint16_t b[3])
{
    return !memcmp(a, b, 3*sizeof(uint16_t));
}

int main()
{
  int T;
  scanf("%d", &T);
  for (int t = 0; t < T; t++) {
    int N, M;

    for (int i = 0; i < 3; i++) {
        scanf("%" SCNu16, &get[i]);
    }
    scanf("%d", &N);
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < 3; j++) {
            scanf("%" SCNu16, &foods[i][j]);
        }
    }

    bool possible = false;
    memset(intake[0], 0, sizeof(intake[0]));

    for (int j = 0, end = 1; j < N && !possible; j++, end *= 2) {
        for (int i = 0; i < end; i++) {
            for (int k = 0; k < 3; k++) {
                intake[end + i][k] = intake[i][k];
                intake[i][k] += foods[j][k];
            }
            if (check(intake[end + i], get) || check(intake[i], get)) {
                possible = true;
                break;
            }
        }
    }

    printf("Case #%d: %s\n", t+1, possible ? "yes" : "no");
  }
  return 0;
}
