#include <iostream>
#include <cstdio>
#include <cstring>
#include <set>
#include <vector>
#include <map>
#include <algorithm>
#include <string>
#include <ctime>
#include <cstring>
#include <sstream>
#include <fstream>
#include<bits/stdc++.h>
using namespace std;
bool subset(int n,int P,int C,int F,int p[],int c[],int f[])
{
    if ((P == 0)&&(C == 0)&&(F == 0))
     return true;
   if (n == 0 && ( (P!=0)||(C!=0)||(F!=0)) )
     return false;

   // If last element is greater than sum, then ignore it
   if ((p[n-1] > P)||(c[n-1] > C)||(f[n-1] > F))
     return subset(n-1,P,C,F,p,c,f);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return subset(n-1,P,C,F,p,c,f) || subset(n-1,P-p[n-1],C-c[n-1],F-f[n-1],p,c,f);
}
int main( )
{
    freopen("new_years_resolution.txt", "rt", stdin);
    freopen("resolution.txt", "wt", stdout);
    int t,k,i;
    cin>>t;
    for(k=1; k<t+1; k++)
    {
        int n,P,C,F,p[30],c[30],f[30];
        cin>>P>>C>>F;
        cin>>n;
        for(i=0;i<n;i++)
        {
            cin>>p[i]>>c[i]>>f[i];
        }
        printf("Case #%d: ",k);
        if(subset(n,P,C,F,p,c,f)==true)
            printf("yes");
        else
            printf("no");
        printf("\n");

    }

    return 0 ;
}
