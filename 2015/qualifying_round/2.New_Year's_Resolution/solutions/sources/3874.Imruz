//BISMILLAHIR RAHMANIR RAHIM
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<string>
#include<map>
#include<queue>
#include<stack>
#include<vector>
#include<set>
#include<iostream>
#include<iomanip>
#include<ctime>
using namespace std;
typedef long long ll;
#define     mem(x,y) memset(x,y,sizeof(x))
#define     PB(x) push_back(x)
#define     POB() pop_back()
#define     SZ(a) a.size()
#define     len(a) strlen(a)
#define     sf scanf
#define     pf printf

#define     inf 1<<25
#define     sz 2000
#define     eps 1e-9
#define     mod  1000000007
 int gcd(int a, int b) { return (b != 0 ? gcd(b, a%b) : a);}
int lcm(int a, int b) { return (a / gcd(a, b) * b);}

int R[]={1,-1,0,0,1,-1,-1,1};   int C[]={0,0,1,-1,1,-1,1,-1};
int KR[]={-2,-2,-1,1,2,2,-1,1}; int KC[]={1,-1,2,2,1,-1,-2,-2};

//int pml=10000008,np=0;
//char prm[10000009];
//int prime[800000];
//void sieve(void){int i,j;for(i=4;i<pml;i+=2) prm[i]='*';for(i=3;i*i<=pml;i++){  for(j=2;i*j<=pml;j++)prm[i*j]='*';}
//prm[0]='*';/*prime[0]=2;np=1;for(i=3;i<pml;i++){if(prm[i]!='*')prime[np++]=i;}*/}
struct P
{
    double x,y;
    P(double x=0.0, double y=0.0)
    {
        this ->x=x;
        this ->y=y;
    }
};
P mkv(P ae,P be){return P(be.x-ae.x,be.y-ae.y);}
double dtp(P ae,P be){return (ae.x*be.x+ae.y*be.y);}
double crp(P ae,P be){return (ae.x*be.y-ae.y*be.x);}
double val(P ae){return sqrt(dtp(ae,ae));}
P vresize(P ae,double llen){double v=val(ae);return P(ae.x*llen/v,ae.y*llen/v);}
double ART(P ae,P be){return crp(ae,be)/2.0;}
 P rot(P ae,double ang){return P(ae.x*cos(ang)-ae.y*sin(ang),ae.y*cos(ang)+ae.x*sin(ang));}
 struct st
 {
     long long p,c,f;
 }ar[50],trg,aa,sm,cnt;
int main()
{
       freopen("output.txt","w",stdout);
        freopen("new_years_resolution.txt","r",stdin);
   //ios_base::sync_with_stdio(false);
    long long a,b,c,d,h,m,n,p,x,y,i,j,k,l,q,r,t,tmp,lm1,mx;
    scanf("%lld",&t);
    for(x=1;x<=t;x++)
    {
        vector<st>v1,v2,subset1,subset2;
        scanf("%lld %lld %lld",&trg.p,&trg.c,&trg.f);
        scanf("%lld",&n);
        for(i=0;i<n;i++)
        {
            scanf("%lld %lld %lld",&ar[i].p,&ar[i].c,&ar[i].f);
        }
        lm1=(n+1)/2;
       for(i=0;i<lm1;i++)
       {
           aa.p=ar[i].p;
           aa.c=ar[i].c;
           aa.f=ar[i].f;
           v1.push_back(aa);
       }
       for(i=lm1;i<n;i++)
       {
           aa.p=ar[i].p;
           aa.c=ar[i].c;
           aa.f=ar[i].f;
           v2.push_back(aa);
       }
     //  pf("v1=%d v2=%d\n",v1.size(),v2.size());
       d=0;
       mx=(1<<v1.size())-1;
      // pf("mx=%lld\n",mx);
       for(i=1;i<=mx;i++)
       {
           tmp=i;
            sm.p=0;sm.c=0;sm.f=0;
            for(j=0;j<v1.size();j++)
            {
            if(tmp%2==1)
            {
                sm.p+=v1[j].p;
                sm.c+=v1[j].c;
                sm.f+=v1[j].f;
            }
            tmp>>=1;
            }
            subset1.push_back(sm);
            if(sm.p==trg.p&&sm.c==trg.c&&sm.f==trg.f)
            {
                d=1;
                break;
            }
       }
        mx=(1<<v2.size())-1;
       // pf("mx=%lld\n",mx);
       for(i=1;i<=mx;i++)
       {
           tmp=i;
            sm.p=0;sm.c=0;sm.f=0;
            for(j=0;j<v2.size();j++)
            {
            if(tmp%2==1)
            {
                sm.p+=v2[j].p;
                sm.c+=v2[j].c;
                sm.f+=v2[j].f;
            }
            tmp>>=1;
            }
            subset2.push_back(sm);
            if(sm.p==trg.p&&sm.c==trg.c&&sm.f==trg.f)
            {
                d=1;
                break;
            }
       }
//       pf("--------------------------\n");
//       for(i=0;i<subset1.size();i++)
//        pf("%lld %lld %lld\n",subset1[i].p,subset1[i].c,subset1[i].f);
//       pf("---------------------\n");
//        for(i=0;i<subset2.size();i++)
//        pf("%lld %lld %lld\n",subset2[i].p,subset2[i].c,subset2[i].f);
//       pf("---------------------\n");
       for(i=0;i<subset1.size();i++)
       {
           for(j=0;j<subset2.size();j++)
           {
               cnt.p=subset1[i].p+subset2[j].p;
                cnt.c=subset1[i].c+subset2[j].c;
                 cnt.f=subset1[i].f+subset2[j].f;
               if(cnt.p==trg.p&&cnt.c==trg.c&&cnt.f==trg.f)
               {
                   d=1;
                   break;
               }
           }
           if(d==1)
            break;
       }
      if(d==1)
        pf("Case #%lld: yes\n",x);
    else
        pf("Case #%lld: no\n",x);

    }
    return 0;
}
