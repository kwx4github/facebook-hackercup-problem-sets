#include <cstdio>
#include <list>

using std::list;

class food
{
	public:
	int p, c, f;
	food (int x1, int x2, int x3)
	{
		p = x1;
		c = x2;
		f = x3;
	}
	food(){}
	bool operator==(food& rhs)
	{
      return ((p == rhs.p) && (c == rhs.c) && (f == rhs.f));
	}
};

int main()
{
	int t, n, p, c, f;
	bool result = false;
	int size, count;
	std::list<food>::iterator it;
	food total, temp1;
	list<food> a;
	scanf("%d", &t);
	for (int i = 1; i <= t; i++)
	{
		a.clear();
		food temp(0,0,0);
		a.push_back(temp);
		result = false;
		scanf("%d %d %d %d", &p, &c, &f, &n);
		total.p = p;
		total.c = c;
		total.f = f;
		while (n--)
		{
			scanf("%d %d %d", &p, &c, &f);
			temp.p = p;
			temp.c = c;
			temp.f = f;
			if (result)
				continue;
			size = a.size();
			count = 0;
			for (it=a.begin(); count!=size; ++count)
			{
				temp1.p = temp.p + (*it).p;
				temp1.c = temp.c + (*it).c;
				temp1.f = temp.f + (*it).f;
				if (temp1 == total)
				{
					result = true;
					break;
				}
				else
					a.push_back(temp1);
				++it;
			}
		}
		
		if (result)
		{
			printf("Case #%d: yes\n", i);
			continue;
		}
		
		for (it = a.begin(); it != a.end(); ++it)
		{
			if (*it == total)
			{
				result = true;
				break;
			}
		}
		
		result?printf("Case #%d: yes\n", i):printf("Case #%d: no\n", i);
	}
	return 0;
}