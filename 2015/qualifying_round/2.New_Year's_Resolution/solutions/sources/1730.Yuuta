#include <iostream>
#include <vector>
using namespace std;

struct macronutrient {
	int p, c, f;
	macronutrient(int p_, int c_, int f_) {
		p = p_; c = c_; f = f_;
	}
	macronutrient() {}

	bool operator==(const macronutrient & obj) const {
		return p == obj.p && c == obj.c && f == obj.f;
	}
};

int main() {
	int T;
	cin >> T;
	for(int t = 0; t < T; t++) {
		int N;
		macronutrient g;
		vector<macronutrient> v;

		cin >> g.p >> g.c >> g.f;
		cin >> N;
		for(int i = 0; i < N; i++) {
			macronutrient tmp;
			cin >> tmp.p >> tmp.c >> tmp.f;
			v.push_back(tmp);
		}

		bool flg = false;
		for(int i = 0; i < (1 << N); i++) {
			macronutrient sum(0,0,0);
			for(int j = 0; j < v.size(); j++) {
				if(i & (1 << j)) {
					sum.p += v[j].p;
					sum.c += v[j].c;
					sum.f += v[j].f;
				}
			}
			
			if(sum == g)
				flg = true;
		}

		cout << "Case #" << t + 1 << ": " << (flg ? "yes" : "no") << endl;
	}
}
