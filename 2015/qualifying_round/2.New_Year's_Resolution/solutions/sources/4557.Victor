#include <fstream>
#include <vector>

using namespace std;

ifstream in ("new_years_resolution.txt");
ofstream out ("output.txt");

int T, N, P, C, F, p, c, f;

struct food
{
    int P, C, F;

    food (int P, int C, int F)
    {
        this->P = P;
        this->C = C;
        this->F = F;
    }
};

vector <food> foods;
food *solution;
bool can = false;

void solve (int k)
{
    if (solution->P == P && solution->C == C && solution->F == F)
    {
        can = true;
        return;
    }

    if (solution->P >= P || solution->C >= C || solution-> F >= F)
        return;

    for (int i = k; i < N; i++)
    {
        solution->P += foods[i].P;
        solution->C += foods[i].C;
        solution->F += foods[i].F;
        solve (k+1);
        solution->P -= foods[i].P;
        solution->C -= foods[i].C;
        solution->F -= foods[i].F;
    }
}

int main ()
{
    in >> T;

    for (int t=1; t<=T; t++)
    {
        can = false;
        solution = new food (0, 0, 0);

        in >> P >> C >> F >> N;
        for (int i=0; i<N; i++)
        {
            in >> p >> c >> f;
            foods.push_back(food (p, c, f));
        }

        solve (0);
        out << "Case #" << t << ": ";
        if (can)
            out << "yes\n";
        else
            out << "no\n";

        foods.clear();
        delete solution;
    }

    return 0;
}

