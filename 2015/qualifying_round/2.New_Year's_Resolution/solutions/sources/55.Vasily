#include <ctime>
#include <iostream>
#include <cstdio>

using namespace std;

// TEMPLATE {{{
#ifndef LOCAL
#define OJ 1
#else
#define OJ 0
#endif

#define endl '\n'
#define TIMESTAMP merr << "Execution time: " << (double)clock()/CLOCKS_PER_SEC << " s.\n"
class C_ {}; template <typename T> C_& operator <<(C_& __m, const T& __s) { if (!OJ) cerr << "\E[91m" << __s << "\E[0m"; return __m; }
C_ merr;

struct __s { __s() { if (OJ) { ios_base::Init i; cin.sync_with_stdio(0); cin.tie(0); } } ~__s(){ TIMESTAMP; } } __S;
/// END OF TEMPLATE }}}

int main() {
  int T;
  freopen("input.txt", "rt", stdin);
  freopen("output.txt", "wt", stdout);
  cin >> T;
  for (int tt = 0; tt < T; tt++) {
    int gp, gc, gf;
    int n;
    int P[22], C[22], F[22];
    bool ok = false;
    cin >> gp >> gc >> gf;
    cin >> n;
    for (int i = 0; i < n; i++) {
      cin >> P[i] >> C[i] >> F[i];
    }
    for (int bit = 0; bit < (1<<n); bit++) {
      int p = 0, c = 0, f = 0;
      for (int i = 0; i < n; i++) {
        if (bit & (1<<i)) {
          p += P[i];
          c += C[i];
          f += F[i];
        }
      }
      if (p == gp && c == gc && f == gf) {
        ok = true;
        break;
      }
    }
    cout << "Case #" << tt+1 << ": " << (ok ? "yes" : "no") << endl;
  }
  return 0;
}
