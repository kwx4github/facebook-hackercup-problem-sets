#include <iostream>
#include <vector>
#include <sstream>
#include <string>

using namespace std;

void testcases(int c);

int main() {
	// While loop through all testcases
	ios_base::sync_with_stdio(false);
	int N;
	cin >> N;
	string line;
	getline(cin, line);
	int T = N;
	while(T--) testcases(N-T);
	return 0;
}

void testcases(int c) {

	int GP, GC, GF;
	cin >> GP >> GC >> GF;

	int N;
	cin >> N;
	vector<vector<int> > PCF(N, vector<int>(3,0));
	for(int i=0; i<N; i++){
		cin >> PCF[i][0];
		cin >> PCF[i][1];
		cin >> PCF[i][2];
	}

	/*vector<vector<vector<bool> > > tableau(GP+1, vector<vector<bool> >(GC+1, vector<bool>(GF+1, false)));
	tableau[0][0][0] = true;
	for(int p=0; p<=GP; p++){
		for(int c=0; c<=GC; c++){
			for(int f=0; f<=GF; f++){
				for(int i=0; i<N; i++){
					if(p-PCF[i][0]>=0 && c-PCF[i][1]>=0 && f-PCF[i][2]>=0
					&& tableau[p-PCF[i][0]][c-PCF[i][1]][f-PCF[i][2]]){
						tableau[p][c][f] = true;
					}
				}
			}
		}
	}*/
	bool done = false;
	vector<vector<int> > possible;
	vector<int> v(3,0);
	possible.push_back(v);
	for(int i=0; i<N; i++){
		int size = possible.size();
		for(int x=0; x<size; x++){
			
			int a=1;
			while(possible[x][0]+a*PCF[i][0]<=GP 
			   && possible[x][1]+a*PCF[i][1]<=GC
			   && possible[x][2]+a*PCF[i][2]<=GF){
				
				if(possible[x][0]+a*PCF[i][0]==GP 
			   	&& possible[x][1]+a*PCF[i][1]==GC
			  	&& possible[x][2]+a*PCF[i][2]==GF){
					done = true;
					break;
				}

				vector<int> next(3,0);
				next[0] = possible[x][0]+a*PCF[i][0];
				next[1] = possible[x][1]+a*PCF[i][1];
				next[2] = possible[x][2]+a*PCF[i][2];
				possible.push_back(next);
					
				a++;
			}

			if(done){
				break;
			}
		}
		if(done){
			break;
		}
	}
	
	if(done){//tableau[GP][GC][GF]){
		cout << "Case #" << c << ": yes"<<endl;
	}else{
		cout << "Case #" << c << ": no"<<endl;
	}

}
