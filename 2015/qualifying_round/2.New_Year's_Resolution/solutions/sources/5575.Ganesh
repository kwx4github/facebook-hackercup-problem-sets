#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<string>
#include<algorithm>
#include<functional>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<cassert>
#include<climits>
using namespace std;
#define swapp(a,b) a^=b^=a^=b
#define ll long long int
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define ss(s) scanf("%s",s)
#define sc(c) scanf("%c",&c)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mp make_pair
#define rep(i,n,x) for(i=x;i<n;i++)
#define f(i,n) rep(i,n,0)
#define Min(x,y) ((x)<(y)?(x):(y))
#define Max(x,y) ((x)>(y)?(x):(y))
#define Abs(x) (x>=0?x:-x)
#define getcx getchar_unlocked
#define mem(a,x) memset(a,x,sizeof(a))
#define MOD 1000000007
#define PI 3.1415926535897932384626

/*int cmpfunc (const void * a, const void * b)
{
   return ( *(int*)a - *(int*)b );
}
qsort(array, array.length, sizeof(int), cmpfunc);
*/
struct food{
ll p,q,r;
}food[20];

int main()
{
	ll t,a,b,c,m;
	sl(t);
	f(m,t)
	{
		vl arr;
		vl semi;
		vl final;
		cin>>a>>b>>c;
		ll i,j,mask,n,sum;
		cin>>n;
		ll maxx=(1LL<<n);
		f(i,n) cin>>food[i].p>>food[i].q>>food[i].r;
		for(mask=1;mask<maxx;mask++)
		{
			sum=0;
			for(j=0;j<n;j++)
			{
				if(mask&(1LL<<j))
					sum+=food[j].p;
				if(sum>a) break;
			}
			if(sum==a) arr.pb(mask);
		}
		f(i,arr.size())
		{
			sum=0;
			for(j=0;j<n;j++)
			{
				if(arr[i]&(1LL<<j))
					sum+=food[j].q;
				if(sum>b) break;
			}
			if(sum==b) semi.pb(arr[i]);
		}
		f(i,semi.size())
		{
			sum=0;
			for(j=0;j<n;j++)
			{
				if(semi[i]&(1LL<<j))
					sum+=food[j].r;
				if(sum>c) break;
			}
			if(sum==c) final.pb(semi[i]);
		}
		printf("Case #%d: ",m+1);
		if(final.size()!=0) printf("yes\n");
		else printf("no\n");

	}
return 0;
}