"""t = int(input())
lst = [[0,0,0]]*20
n = 0
A,B,C = 0,0,0
def balance(a,b,c):
    return A*b == B*a and A*c == a*C
def test(index,a,b,c):
    if a!=0 and b!=0 and c!=0:
        if balance(a,b,c):
            return True
    if index == n:
        return False
    if test(index+1,a,b,c):
        return True
    return test(index+1,a+lst[index][0],b+lst[index][1],c+lst[index][2])
def possible():
    A,B,C = map(int,input().split())
    n = int(input())
    for i in range(n):
        lst[i][0],lst[i][1],lst[i][2] = map(int,input().split())
    if test(1,0,0,0):
        return True
    return test(1,lst[0][0],lst[0][1],lst[0][2])

for i in range(t):
    if possible():
        print ("Case #%s: %s" % (i+1,'yes'))
    else:
        print ("Case #%s: %s" % (i+1,'no'))"""
def foo1(g,c,f,n,gp,gc,gf):
    if gc==0 and gp==0 and gf==0:
        return True
    if n==0 and (gp != 0 or gc!=0 or gf!=0):
        return False
    if g[n-1]>gp or c[n-1]>gc or f[n-1]>gf:
        return foo1(g,c,f, n-1,gp,gc,gf)

    return foo1(g,c,f, n-1,gp,gc,gf) or foo1(g,c,f, n-1,gp-g[n-1],gc-c[n-1],gf-f[n-1])
g = [0]*21
c = [0]*21
f = [0]*21
n1 = int(input())
for i in range(n1):
    gp,gc,gf = map(int,input().split())
    n = int(input())
    for j in range(n):
        g[j],c[j],f[j] = map(int,input().split())
    if foo1(g,c,f,n,gp,gc,gf) == True:
        print ("Case #%s: %s" % (i+1,'yes'))
    else:
        print ("Case #%s: %s" % (i+1,'no'))