#include <iostream>
#include <cstdlib>
#include <vector>
#include <algorithm>

using namespace std;

typedef struct 
{
	int p;
	int c;
	int f;
}DATA;

int main()
{
	ios_base::sync_with_stdio(false);

	DATA target;
	DATA input;

	int t;
	int n;

	cin >> t;

	for (int i = 0 ; i < t ; i++)
	{
		cin >> target.p >> target.c >> target.f;
		cin >> n;

		vector <int> p, c, f;
		bool found = false;

		for (int j = 0 ; j < n ; j++)
		{
			cin >> input.p >> input.c >> input.f;
			
			//more than target
			if (input.p > target.p || input.c > target.c || input.f > target.f)
				continue;

			if (found)
				continue;
			
			int size = p.size();
			
			p.push_back(input.p);
			c.push_back(input.c);
			f.push_back(input.f);
		
			int k = 0;

			for (k = 0 ; k < size ; k++)
			{
				if (p[k] + input.p > target.p || c[k] + input.c > target.c || f[k]+input.f > target.f)
					continue;

				p.push_back(input.p + p[k]);
				c.push_back(input.c + c[k]);
				f.push_back(input.f + f[k]);
			}

			size = p.size();

			for (int k = 0 ; k < size ; k++)
			{
				if (p[k] == target.p && c[k] == target.c && f[k] == target.f)
				{
					found = true;
					break;
				}
			}
		}
			
		cout << "Case #" << i+1 << ": ";

		if (found)
			cout << "yes";
		else
			cout << "no";
		cout << endl;
	}

	exit(EXIT_SUCCESS);
}
