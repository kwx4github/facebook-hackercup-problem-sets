#include<bits/stdc++.h>
#define F first 
#define S second 
#define MP make_pair 
#define PB push_back 

#ifdef ONLINE_JUDGE
#define ll "ll"
#else
#define ll "I64"
#endif

#define SZ(a) ((int)(a.size())) 
#define ALL(a) a.begin() , a.end() 
#define FOR(i,a,n) for(int i=a;i<n;i++) 
#define FILL(a,v) memset(a , v , sizeof a) 
#define IN(a,b) ( (b).find(a) != (b).end())
#define ML 1000006 
#define MOD 1000000007 
#define si(x) scanf("%d", &x);
#define DB(x)              cout<<__LINE__<<" :: "<<#x<< ": "<<x<<endl;
#define DB2(x, y)          cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<endl;
#define DB3(x, y, z)       cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<" | "<<#z<<": "<<z<<endl
#define gc getchar_unlocked
int read_int()
{
	int ret = 0;
	char c = gc();
	while(c < '0' || c > '9')
		c = gc();
	while(c >= '0' && c <= '9')
	{
		ret = ret*10 + (int)(c - '0');
		c = gc();
	}
	return ret;
}
using namespace std;
class food
{
	public:	
	int p;
	int c;
	int f;	
	public:
	void set_values(int a,int b,int cc)
	{
		p = a;
		c = b;
		f = cc;
	}
};
food foods[21];
bool get_set_bits(int i, int P, int C, int F)
{
	int k = 0;
	int sumf = 0, sumc = 0, sump = 0;
	while(k < 20)
	{	
		if(i & 1 == 1)
		{
			sumf += foods[k].f;
			sumc += foods[k].c;
			sump += foods[k].p;	
		}		
		i = i >> 1;	
		k++;
	}
	if(sumf == F && sumc == C && sump == P)
		return true;
	return false;
}

int main()
{
	int t;
	si(t);
	int caseid = 1;
	while(t--)
	{
		int gp, gc, gf;
		gp = read_int();
		gc = read_int();
		gf = read_int();
		int n;
		n = read_int();
		FOR(i,0,n)
		{
			int a,b,c;
			a = read_int();b=read_int();c=read_int();			
			foods[i].set_values(a,b,c);
		}
		int i = 1;
		int flag = 0;
		while(i <= 1048576)
		{
			bool istrue = get_set_bits(i, gp, gc, gf);
			//DB(i);	
			if(istrue)
			{
				flag = 1;
				break;
			}
			i++;
		}	
		printf("Case #%d: ", caseid);
		caseid++;
		if(flag == 1)
			printf("yes\n");
		else
			printf("no\n");	
	}
	return 0;
}
