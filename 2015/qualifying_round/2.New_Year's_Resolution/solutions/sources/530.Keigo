#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <iostream>
#include <queue>
#include <list>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <string>
#include <vector>
using namespace std;
#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)
#define rep(i,n) REP(i,0,n)
#define FOR(it,c) for(__typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)
#define ALLOF(c) (c).begin(), (c).end()
typedef long long ll;
typedef unsigned long long ull;

struct ST {
  int P, C, F;
  ST():P(0),C(0),F(0){}
  ST(int P, int C, int F):P(P),C(C),F(F){}
};
ST add(const ST& a, const ST& b){
  return ST(a.P + b.P, a.C + b.C, a.F + b.F);
}

bool solve(const ST& g, const vector<ST>& v){
  int n = v.size();
  
  for(ull S = 0; S < (1<<n); S++){
    ST sum;
    for(int i=n-1; i>=0; i--){
      if(S>>i & 1){
        sum = add(sum, v[i]);
      }
    }
    if(sum.P == g.P && sum.C == g.C && sum.F == g.F) return true;
  }
  
  return false;
}

int main(){
  int T;
  cin >> T;

  rep(t,T){
    int N;
    ST g, tmp;
    vector<ST> v;
    cin >> g.P >> g.C >> g.F;
    cin >> N;
    rep(i,N){
      cin >> tmp.P >> tmp.C >> tmp.F;
      v.push_back(tmp);
    }

    cout << "Case #" << t+1 << ": " << (solve(g,v) ? "yes" : "no") << endl;
  }

  return 0;
}
