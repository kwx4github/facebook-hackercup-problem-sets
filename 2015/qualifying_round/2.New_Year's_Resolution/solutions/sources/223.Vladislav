#include <bits/stdc++.h>
using namespace std;

inline int GetBit(int mask, int num)
{
    return (mask >> num) & 1;
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    int tests;
    cin >> tests;
    for (int test = 0; test < tests; ++test) {
        int g[3];
        cin >> g[0] >> g[1] >> g[2];
        int n;
        cin >> n;
        vector<int> a[3];
        a[0].resize(n);
        a[1].resize(n);
        a[2].resize(n);
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < 3; ++j) {
                cin >> a[j][i];
            }
        }
        bool found = false;
        for (int mask = 0; mask < (1 << n); ++mask) {
            int cur_g[3];
            cur_g[0] = cur_g[1] = cur_g[2] = 0;
            for (int i = 0; i < n; ++i) {
                if (GetBit(mask, i)) {
                    cur_g[0] += a[0][i];
                    cur_g[1] += a[1][i];
                    cur_g[2] += a[2][i];
                }
            }
            if (cur_g[0] == g[0] && cur_g[1] == g[1] && cur_g[2] == g[2]) {
                found = true;
                break;
            }
        }

        cout << "Case #" << test + 1 << ": ";
        if (found) {
            cout << "yes" << endl;
        } else {
            cout << "no" << endl;
        }
    }

    return 0;
}
