#include <stdio.h>
#include <math.h>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <algorithm>
#include <iostream>
using namespace std;

struct S {
    int a, b, c;
    S() {}
    S(int a, int b, int c) : a(a), b(b), c(c) {}
    bool operator < (const S &s) const {
        return a < s.a || (a == s.a && b < s.b) || (a == s.a && b == s.b && c < s.c);
    }
} g, x;
int T, n;
set<S> s;
vector<S> v;

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    scanf("%d", &T);
    for (int test = 1; test <= T; test++) {
        s.clear();
        s.insert(S(0, 0, 0));
        scanf("%d%d%d %d", &g.a, &g.b, &g.c, &n);
        for (int i = 0; i < n; i++) {
            v.clear();
            scanf("%d%d%d", &x.a, &x.b, &x.c);
            v.push_back(x);
            for (set<S>::iterator j = s.begin(); j != s.end(); j++) {
                if (j->a + x.a <= g.a && j->b + x.b <= g.b && j->c + x.c <= g.c)
                    v.push_back(S(j->a + x.a, j->b + x.b, j->c + x.c));
            }
            for (int j = 0; j < v.size(); j++)
                s.insert(v[j]);
        }
        printf("Case #%d: %s\n", test, (s.find(g) != s.end() ? "yes" : "no"));
    }
}