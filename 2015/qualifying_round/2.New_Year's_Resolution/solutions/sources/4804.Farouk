#include <iostream>
#include <vector>
#include <algorithm>
#include <tuple>
#include <iomanip>

using namespace std;

int GP,GC,GF;

typedef tuple<int, int, int>  ti;

vector<ti> in;

bool solve(int cp, int cc, int cf, int index)
{
    //cout << cp << " " << cc << " " << cf << " " << index  << endl;
    if (cp > GP || cc > GC || cf > GF)
        return false;
    if (cp == GP && cc == GC && cf == GF)
            return true;
    if (index == in.size())
            return false;
    int cp2 = cp + get<0>(in[index]);
    int cc2 = cc + get<1>(in[index]);
    int cf2 = cf + get<2>(in[index]);
    return solve(cp, cc, cf, index + 1) || solve(cp2, cc2, cf2, index + 1);
}

int main()
{
    int t;
    int n;
    cin >> t;
    for (int i = 1; i <= t; i++)
    {
        in.clear();
        cin >> GP >> GC >> GF;
        cin >> n;
        for (int j = 0; j < n; j++)
        {
            int x, y, z;
            cin >> x >> y >> z;
            in.push_back(make_tuple(x, y, z));
        }
        bool b = solve(0, 0, 0, 0);
        if (b)
            cout << "case #" << i << ": yes" << endl;
        else
            cout << "case #" << i << ": no" << endl;
    }
    return 0;
}
