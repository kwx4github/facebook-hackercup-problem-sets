import java.util.Scanner;

public class fbq2 {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int cases = in.nextInt();
		int cn = 0;

		while (cn++ < cases) {
			int[] goals = new int[3];
			for (int type = 0; type < goals.length; type++) {
				goals[type] = in.nextInt();
			}

			int numFoods = in.nextInt();

			int[][] foods = new int[3][numFoods];

			for (int i = 0; i < numFoods; i++) {
				for (int type = 0; type < goals.length; type++) {
					foods[type][i] = in.nextInt();
				}
			}

			boolean canMake = false;
			int max = 1 << numFoods;
			out: for (int bit = 0; bit < max; bit++) {
				int[] curr = new int[3];

				for (int i = 0; i < numFoods; i++) {
					if ((bit & (1 << i)) != 0) {
						for (int type = 0; type < goals.length; type++) {
							curr[type] += foods[type][i];
						}
					}
				}

				boolean works = true;
				for (int i = 0; i < goals.length; i++) {
					works &= goals[i] == curr[i];
				}

				if (works) {
					canMake = true;
					break out;
				}
			}

			System.out.printf("Case #%d: %s\n", cn, canMake ? "yes" : "no");
		}

	}
}
