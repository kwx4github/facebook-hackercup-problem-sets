#if 1
#include <functional>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <sstream>
#include <numeric>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <list>
 
using namespace std;
 
typedef long long LL;
typedef long double LD;
typedef pair<int, int> pii;
 
const LD eps = 1e-9;
const LD pi = acos(-1.0);
const LL inf = 1e+9;
 
#define mp make_pair
#define pb push_back
#define X first
#define Y second
 
#define dbg(x) { cerr << #x << " = " << x << endl; }
 
// extended template
#pragma comment(linker, "/STACK:36777216")
typedef vector<int> vi;
typedef vector<vi> vvi;
 
#define forn(i, n) for (int i = 0; i < n; ++i)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
 
template<typename T> istream & operator >> (istream &, vector<T> &);
template<typename T> ostream & operator << (ostream &, const vector<T> &);
 
#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;
 
#define NAME "kabaleo"


int main()
{
    //freopen(NAME ".in", "r", stdin); freopen(NAME ".out", "w", stdout);
    freopen("input.txt", "r", stdin);  freopen("output.txt", "w", stdout);
	//START
	int t;
	scanf("%d", &t);
	for (int q = 0; q < t; q++)
	{
		vector <int> a(3);
		for (int i = 0; i < 3; i++)
			scanf("%d", &a[i]);
		int n;
		scanf("%d", &n);
		vector <vector <int> > b(n);
		for (int i = 0; i < n; i++)
		{
			b[i].resize(3);
			for (int k = 0; k < 3; k++)
				scanf("%d", &b[i][k]);
		}

		bool fl = false;
		for (int mask = 0; mask < (1 << n) && !fl; mask++)
		{
			vector <int> v(3);
			for (int i = 0; i < n; i++)
				if (mask & (1 << i))
					for (int k = 0; k < 3; k++)
						v[k] += b[i][k];

			if (v == a)
				fl = true;
		}

		printf("Case #%d: ", q + 1);
		if (fl)
			printf("yes\n");
		else
			printf("no\n");
	}					    
	//END
    return 0;
}
/*******************************************
*******************************************/
 
template<typename T> istream & operator >> (istream &is, vector<T> &v)
{
    forn(i, v.size())
        is >> v[i];
    return is;
}
template<typename T> ostream & operator << (ostream &os, const vector<T> &v)
{
    forn(i, v.size())
        os << v[i] << " ";
    return os;
}
#endif