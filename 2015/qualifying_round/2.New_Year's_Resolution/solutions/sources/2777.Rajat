import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

class FHC30 
{
    public static void main(String[] args) throws IOException 
    {
        BufferedReader br  = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        int N = Integer.parseInt(br.readLine());
        for(int i=0;i<N;i++)
        {    
            String [] target = br.readLine().split(" ");
            Food trg = new Food(Integer.parseInt(target[0]),Integer.parseInt(target[1]),Integer.parseInt(target[2]));
            int n = Integer.parseInt(br.readLine());
            Food [] intake = new Food[n];
            for(int j=0;j<n;j++)
            {   
                String [] temp = br.readLine().split(" ");
                intake[j]=new Food(Integer.parseInt(temp[0]), Integer.parseInt(temp[1]), Integer.parseInt(temp[2]));
            }
            pw.print("Case #"+(i+1)+": ");
            PowerSet(intake,trg,pw);
        }
        pw.flush();
    }
    static class Food
    {
        int pro,carb,fat;
        Food(int pro, int carb, int fat)
        {
            this.pro=pro;
            this.carb=carb;
            this.fat=fat;
        }
        
        void add(Food add)
        {
            this.pro+=add.pro;
            this.carb+=add.carb;
            this.fat+=add.fat;
        }
        boolean equals(Food temp)
        {
            if( (temp.pro==this.pro) && (temp.carb==this.carb) && (temp.fat==this.fat) )
            {
                return true;
            }
            return false;
        }
    }
    
    public static void PowerSet(Food [] set, Food trg, PrintWriter pw)
    {
        int set_size=set.length;
        int pow_set_size = (int) Math.pow(2, set_size);
        int counter, j, flag=0;
    
        for(counter = 0; counter < pow_set_size; counter++)
        {
            Food curr = new Food(0, 0, 0);
            for(j = 0; j < set_size; j++)
            {
                if(((counter & (1<<j))) != 0)
                {
                    curr.add(set[j]);
                }
            }
            if(curr.equals(trg))
            {
                pw.println("yes");
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            pw.println("no");
        }
    }
}
