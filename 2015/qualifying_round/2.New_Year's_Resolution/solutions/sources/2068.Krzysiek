#include <cstdio>
#include <vector>

struct Trip {
    int c, p, f;
};

bool poss;
std::vector<Trip> food;
int gc, gp, gf;

int cc, cp, cf;
//int calls = 0;
void run(unsigned int id) {
    //printf("C: %d P: %d F: %d\n", cc, cp, cf);
    //calls++;
    if ((cc == gc) && (gp == cp) && (cf == gf)) {
        poss = true;
    }
    if (poss) return;
    if (id != food.size()) {
        run(id + 1);
        cc += food[id].c;
        cp += food[id].p;
        cf += food[id].f;
        run(id + 1);
        cc -= food[id].c;
        cp -= food[id].p;
        cf -= food[id].f;
    }
}

int main() {
    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; ++i) {
        scanf("%d %d %d", &gc, &gp, &gf);
        int n;
        scanf("%d", &n);
        food.clear();
        food.resize(n);
        for (int j = 0; j < n; ++j) {
            scanf("%d %d %d", &food[j].c, &food[j].p, &food[j].f);
        }
        poss = false;
        cc = 0, cp = 0, cf = 0;
        //calls = 0;
        run(0);
        //printf("Calls: %d\n", calls);
        printf("Case #%d: %s\n", i + 1, poss ? "yes" : "no");
    }
}
