#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int t,p,c,f,a;
vector< vector<int> > v;
bool su;
int pp,cc,ff;
void dfs( int n )
{
	if(su) return;
	if( n == a )
	{
		if( p == pp && c == cc && f == ff ) su = true; 
		return;
	}
	dfs(n+1);
	pp += v[n][0]; cc+=v[n][1]; ff+=v[n][2];
	dfs(n+1);
	pp -= v[n][0]; cc-=v[n][1]; ff-=v[n][2];
	return;
}
void solve()
{
	cin >> t;
	for( int i = 1 ; i <= t ; i++ )
	{
		su = false;
		v.clear();
		cin >> p >> c >> f;
		cin >> a;
		v.resize(a,vector<int>(3));
		for( int j = 0 ; j < a ; j++ )
		{
			cin >> v[j][0] >> v[j][1] >> v[j][2];
		}
		pp = cc = ff = 0;
		dfs(0);
		if( su ) cout << "Case #" << i << ": " << "yes" << endl;
		else cout << "Case #" << i << ": " << "no" << endl;
	}
	return;
}
int main()
{
	freopen("new_years_resolution.txt","r",stdin);
	freopen("new_years_resolution_output.txt","w",stdout);
	solve();
	return 0;
}