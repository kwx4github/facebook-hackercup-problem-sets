#include <bits/stdc++.h>
#define f(i,x,y) for (int i = x; i < y; i++)
#define fd(i,x,y) for(int i = x; i>= y; i--)
#define FOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define vint vector<int>
#define ll long long
#define clr(A,x) memset(A, x, sizeof A)
#define pb push_back
#define pii pair<int,int>
#define mp make_pair
#define fst first
#define snd second
#define ones(x) __builtin_popcount(x)
#define eps (1e-9)
#define oo (1<<30)
#define OO (1LL<<60)
#define N 2005
using namespace std;

struct triple{
    int gp,gc,gf;
    triple() {}
    triple(int gp,int gc, int gf) : gp(gp), gc(gc), gf(gf) {} 
};

bool operator<(triple a,triple b){
    if(a.gp==b.gp && a.gc==b.gc) return a.gf<b.gf;
    else if(a.gp==b.gp) return a.gc<b.gc;
    return a.gp < b.gp;
}

set<triple> T;

int main(){
    int t,gp,gc,gf,n,P,C,F;
    scanf("%d",&t);
    f(c,0,t){
        bool can = false;
        T.clear();
        scanf("%d%d%d%d",&gp,&gc,&gf,&n);
        T.insert(triple(gp,gc,gf));
        f(i,0,n){
            scanf("%d%d%d",&P,&C,&F);
            FOR(it,T){
                triple tmp = *it;
                tmp.gp -= P;
                tmp.gc -= C;
                tmp.gf -= F;
                if(tmp.gp >0 && tmp.gc>0 && tmp.gf > 0) T.insert(tmp);
                else if(tmp.gp ==0 && tmp.gc==0 && tmp.gf == 0) { /*cout<<i<<endl;*/ can = true;}
                //cout<<tmp.gp<<endl;
            }
        }
        printf("Case #%d: ",c+1);
        if(can) puts("yes");
        else puts("no");
    }
    return 0;
}
