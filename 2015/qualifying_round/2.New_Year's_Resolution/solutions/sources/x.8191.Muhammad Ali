#include <iostream>
#include <string.h>
#include <fstream>
#include <string>
#include <cstring>
#include <math.h>
using namespace std;

class stack
{
    public:
		int * arr;
		int top;
		stack()
		{
			arr = new int [50];
			top = -1;
		}
		void push(int x)
		{
			top = top + 1;
			arr[top] = x;
		}
		int pop()
		{
			top = top - 1;
			return arr[top+1];
		}
		void print()
		{
			for(int i = 0 ; i <= top ; i++)
			{
				cout<<arr[i]<<"  ";
			}
			cout<<endl;
		}
		void flush()
		{
			top = 0;
		}
};

class GetAllSubsetByStack 
{
public:
	int TARGET_SUM;
	stack mystack;
	int sumInStack;
	int found;
	GetAllSubsetByStack(int x)
	{
		TARGET_SUM = x;
		sumInStack = 0;
		found = 0;
	}
	void ini(int x)
	{
		TARGET_SUM = x;
		sumInStack = 0;
		found = 0;
	}
	void populateSubset(int data[], int fromIndex, int endIndex) 
	{
		if (sumInStack == TARGET_SUM) 
		{
			found = 1;
        }

        for (int currentIndex = fromIndex; currentIndex < endIndex; currentIndex++) 
		{
            if (sumInStack + data[currentIndex] <= TARGET_SUM) {
                mystack.push(data[currentIndex]);
                sumInStack += data[currentIndex];
                populateSubset(data, currentIndex + 1, endIndex);
                sumInStack = sumInStack - mystack.pop();
            }
        }
    }
};
int main() 
{
	ifstream input;
	ofstream output;
	input.open("new_years_resolution.txt");
	output.open("output.txt");
	int xx = 0;
	int T;
	input>>T;
	int i,gp,gc,gf,n;
	int * arr;
	int x = 0;
	int m;
	GetAllSubsetByStack get(0);
	while(T)
	{
		x = x + 1;
		input>>gp;
		input>>gc;
		input>>gf;
		input>>n;
		arr = new int [n];
		for(i = 0 ; i < n ; i++)
		{
			arr[i] = 0;
		}
		for(i = 0 ; i < n ; i++)
		{
			input>>m;
			arr[i] = arr[i] + m;
			input>>m;
			arr[i] = arr[i] + m;
			input>>m;
			arr[i] = arr[i] + m;
		}
		get.ini(gp+gf+gc);
		get.populateSubset(arr, 0, n);
		xx = get.found;
		get.found = 0;
		get.mystack.flush();
		if(xx == 1)
		{
			output<<"Case #"<<x<<": yes"<<endl;
		}
		else
		{
			output<<"Case #"<<x<<": no"<<endl;
		}
		T = T - 1;
	}
	output.close();
	input.close();
	return 0;
}





