#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include <algorithm>

using namespace std;

int gN;
int gT[3];
int gV[21][3];

bool can(int n, int p, int c, int f)
{
    if (p == gT[0] && c == gT[1] && f == gT[2])
        return true;

    if (n >= gN || p > gT[0] || c > gT[1] || f > gT[2])
        return false;

    return can(n + 1, p, c, f) || can(n + 1, p + gV[n][0], c + gV[n][1], f + gV[n][2]);
}

void process(FILE* pfIn, FILE* pfOut)
{
    int i, count;

    fscanf(pfIn, "%d", &count);
    for (i = 1; i <= count; i++)
    {
        fscanf(pfIn, "%d %d %d", &gT[0], &gT[1], &gT[2]);
        fscanf(pfIn, "%d", &gN);
        for (int j = 0; j < gN; j++)
            fscanf(pfIn, "%d %d %d", &gV[j][0], &gV[j][1], &gV[j][2]);

        fprintf(pfOut, "Case #%d: %s\n", i, can(0, 0, 0, 0) ? "yes" : "no");
    }
}

//-----------------------------------------------------------------------------

void process(const char* pcszInFile, const char* pcszOutFile)
{
    FILE* pfIn = fopen(pcszInFile, "rt");
    if (pfIn == NULL)
    {
        printf("file not found! \"%s\"\n", pcszInFile);
        exit(-2);
    }

    FILE* pfOut = fopen(pcszOutFile, "wt");
    if (pfOut == NULL)
    {
        printf("can't create file! \"%s\"\n", pcszOutFile);
        exit(-3);
    }

    process(pfIn, pfOut);

    fclose(pfIn);
    fclose(pfOut);
}

void main(int argc, char* argv[])
{
    if (argc != 3)
    {
        printf("Usage : %s <input_file> <output_file>\n", argv[0]);
        exit(-1);
    }

    process(argv[1], argv[2]);
}
