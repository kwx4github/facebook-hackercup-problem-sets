#include<iostream>
#include<cstdio>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<iomanip>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<sstream>
#define sp(z) setprecision(z)
#define sv(z) sort(z.begin(),z.end())
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double 
#define si(z) scanf("%d",&z)
#define sl(z) scanf("%Ld",&z)
#define sd(z) scanf("%Lf",&z)
#define sc(z) scanf("%c",&z)
#define fr(y,q,s) for(int y=q;y<s;y++)
#define f(y,z) for(int y=0;y<z;y++)
#define fe(y,z) for(int y=1;y<=z;y++)
using namespace std;
ll min(ll a,ll b){ return (a<b)?a:b; }
ll max(ll a,ll b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
 
int main()
{
	int t;
	si(t);
	fe(tc,t)
	{
		printf("Case #%d: ",tc);
		int gp,gc,gf;
		si(gp);si(gc);si(gf);
		int n;
		si(n);
		int subs = (int) pow(2,n);
		vector<int> source[n];
		f(i,n)
		{
			int p,c,f;
			si(p);si(c);si(f);
			source[i].pb(p);
			source[i].pb(c);
			source[i].pb(f);
		}
		bool done = false;
		f(i,subs)
		{
			int P=0,C=0,F=0;
			f(j,n)
			{	
				if((i>>j)%2)
				{
					P+=source[j][0];
					C+=source[j][1];
					F+=source[j][2];
				}
			}
			if(P==gp && C==gc && F==gf)
			{
				printf("yes\n");
				done=true;
				break;
			}
		}
		if(!done)
			printf("no\n");
	}
	return 0;
}
