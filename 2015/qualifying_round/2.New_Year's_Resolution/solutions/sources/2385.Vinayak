#include <iostream>
#include <vector>

using namespace std;

vector<int> ps, cs, fs;

bool foodsearch(vector<int> index, int tp, int tc, int tf)
{
	int sump = 0, sumc = 0, sumf = 0, used = 0;
	bool result = false;
	for(int i = 0; i < index.size(); i++)
	{
		if(index[i] == 0)
		{
			used++;
			sump += ps[i]; sumc += cs[i]; sumf += fs[i];
		}
	}
	if(sump == tp && sumc == tc && sumf && tf)
		return true;
	if(sump > tp || sumc > tc || sumf > tf)
		return false;
	if((sump < tp || sumc < tc || sumf < tf) && used == index.size())
		return false;
	for(int i = 0; i < index.size(); i++)
	{
		if(index[i] == 1)
		{
			index[i] = 0;
			result = result || foodsearch(index, tp, tc, tf);
			index[i] = 1;
		}
	}
	return result;
}

int main()
{
	int n;
	int i = 1;
	cin >> n;
	while (i <= n)
	{
		int tp, tc, tf;
		vector<int> index;
		bool balanced = false;
		int t;
		cin >> tp >> tc >> tf;
		cin >> t;
		while (t--)
		{
			int p, c, f;
			cin >> p >> c >> f;
			ps.push_back(p);
			cs.push_back(c);
			fs.push_back(f);
			index.push_back(1);
		}
		
		balanced = foodsearch(index, tp, tc, tf);
		
		index.clear();
		ps.clear();
		cs.clear();
		fs.clear();
		if (i != 1)
			cout << endl;
		if (balanced)
			cout << "Case #" << i << ": yes";
		else
			cout << "Case #" << i << ": no";
		i++;
	}
}