
#include <cstdio>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <list>
#include <stack>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <set>
#include <cmath>
#include <sstream>
using namespace std;
//bool dp[20][1000][1000][1000];
//DFS
bool DFS(vector<vector<int>> &data, int Gp, int Gc, int Gf, int cur){
    if(Gp==0 && Gc==0 && Gf==0)
        return true;
    if(cur==data.size() || Gc<0 || Gp<0 || Gf<0)
        return false;
    bool ret =DFS(data, Gp, Gc, Gf, cur+1);
    if(ret)
        return true;
    return DFS(data, Gp-data[cur][0], Gc-data[cur][1], Gf-data[cur][2], cur+1);

}
bool testFood(vector<vector<int>> &data, int Gp, int Gc, int Gf){
    return DFS(data, Gp, Gc, Gf, 0);
}

int main(int argc, char** argv) {
    freopen("new_years_resolution_example_input.txt","r",stdin);//redirects standard input
    int n, tmp;
    int Gp, Gc, Gf, N;
    scanf("%d\n", &n);
    for(int cnt=0;cnt<n;cnt++){
        scanf("%d %d %d", &Gp, &Gc, &Gf);
        scanf("%d", &N);
        vector<vector<int>> data(N, vector<int>(3,0));
        for(int i=0;i<N;i++){
            scanf("%d %d %d", &data[i][0], &data[i][1], &data[i][2]);
        }
        string ans = testFood(data, Gp, Gc, Gf)?" yes":" no";
        cout<<"Case #"<<cnt+1<<ans<<endl;
    }
}