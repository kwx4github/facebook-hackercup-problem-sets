package Qualif;

import java.util.Scanner;

public class New_Years_Resolution {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        
        int testCase = sc.nextInt();
        StringBuilder sb = new StringBuilder();
        
        for(int test = 0 ; test < testCase ; test++) {
            
            int p = sc.nextInt(), c = sc.nextInt(), f = sc.nextInt();
            
            int[][] tabAl = new int[sc.nextInt()][3];
            
            for(int al = 0 ; al < tabAl.length; al++) {
                tabAl[al][0] = sc.nextInt();
                tabAl[al][1] = sc.nextInt();
                tabAl[al][2] = sc.nextInt();
            }
            
            int[] toReach = new int[]{p,c,f};
            int sol = count(toReach, tabAl.length-1, tabAl);
            
            if(sol != 0) {
                sb.append("Case #"+(test+1)+": ").append("yes");
                if(test != testCase-1)
                    sb.append("\n");
            }
            else {
                sb.append("Case #"+(test+1)+": ").append("no");
                if(test != testCase-1)
                    sb.append("\n");
            }
            
        }
        
        sc.close();
        System.out.println(sb);
    }
    
    public static int count (int[] remain, int index, int[][] tabAl) {
        
        if(remain[0] == 0 && remain[1] == 0 && remain[2] == 0)
            return 1;
        else if(remain[0] < 0 || remain[1] < 0 || remain[2] < 0) 
            return 0;
        else if(index < 0)
            return 0;
        else {
            int[] newRe = new int[3];
            newRe[0] = remain[0] - tabAl[index][0];
            newRe[1] = remain[1] - tabAl[index][1];
            newRe[2] = remain[2] - tabAl[index][2];
            return count(remain, index-1, tabAl) + count(newRe, index-1, tabAl);
        }
        
    }
}
