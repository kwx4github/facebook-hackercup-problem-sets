#include <iostream>
#include <math.h>
#include <stdio.h>
#include <string>
#include <string.h>
#include <algorithm>

using namespace std;
struct food{
    int p,c,f;
};

bool operator==(food &f1, food &f2){
    return f1.p == f2.p && f1.c == f2.c && f1.f == f2.f;
}


food operator-(food &f1, food &f2){
    food ret;
    ret.p = f1.p - f2.p;
    ret.c = f1.c - f2.c;
    ret.f = f1.f - f2.f;
    return ret;
}

food zewo = {0,0,0};

int main () {
    
    FILE *fIn = fopen("new_years_resolution_example_input.txt", "r");
    FILE *fOut = fopen("new_years_resolution_example_output.txt", "w");
    
    int T;
    int caseCounter = 0;
    
    fscanf(fIn, "%d", &T);
    while(T--){
        caseCounter++;
    
        food target;
        int n;
        bool foundAnswer = false;
        fscanf(fIn, "%d%d%d%d", &target.p, &target.c, &target.f, &n);
        food ins[21];
        for(int i = 0; i < n; i++)
            fscanf(fIn, "%d%d%d", &ins[i].p, &ins[i].c, &ins[i].f);
        int mask = 0;
        for(mask = 0; mask < 1 << n; mask++){
            if(foundAnswer)
                break;
            int maskCpy = mask;
            int index = 0;
            food targetCpy = target;
            while(maskCpy){
                if(maskCpy & 1)
                    targetCpy = targetCpy - ins[index];
                if(targetCpy == zewo){
                    foundAnswer = true;
                    break;
                }
                maskCpy/=2;
                index++;
            }
        }
        fprintf(fOut, "Case #%d: %s\n",caseCounter, foundAnswer ? "yes":"no");
        //printf("Case #%d: %s\n",caseCounter, foundAnswer ? "yes":"no");
    }
    return 0;
}
