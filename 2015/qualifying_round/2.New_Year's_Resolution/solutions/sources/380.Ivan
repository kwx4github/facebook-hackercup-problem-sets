#include <bits/stdc++.h>
using namespace std;

const int MAXN = 100;

int T;
int Gp, Gc, Gf;
int N;
int p[MAXN], c[MAXN], f[MAXN];

inline bool get_bit(int x, int k)
{
    return (x >> k) & 1;
}

string solve()
{
    cin >> Gp >> Gc >> Gf;
    cin >> N;

    for (int i = 0; i < N; i++)
        cin >> p[i] >> c[i] >> f[i];

    int maxmask = 1 << N;
    for (int mask = 0; mask < maxmask; mask++)
    {
        int curGp = 0, curGc = 0, curGf = 0;
        for (int i = 0; i < N; i++)
            if (get_bit(mask, i))
            {
                curGp += p[i];
                curGc += c[i];
                curGf += f[i];
            }
        if (curGp == Gp && curGc == Gc && curGf == Gf)
            return "yes";
    }
    return "no";
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    cin >> T;
    for (int test = 1; test <= T; test++)
        printf("Case #%d: %s\n", test, solve().c_str());
}
