#include <fstream>
#include <vector>
#include <algorithm>
#include <set>
#include <cstdio>
#include <cstdint>
#include <cstring>
#include <iostream>
#include <string>
#include <cassert>
#include <cstdlib>
using namespace std;

struct g
{
    int p, c, f;
};

void solve()
{
    vector<g> eat;
    g goal;
    cin >> goal.p >> goal.c >> goal.f;
    int n;
    cin >> n;
    g tmp;
    tmp.p = 0;
    tmp.c = 0;
    tmp.f = 0;
    eat.push_back(tmp);
    for (int i = 0; i < n; ++i)
    {
        cin >> tmp.p >> tmp.c >> tmp.f;
        int lim = eat.size();
        for (int j = 0; j < lim; ++j)
        {
            g tmp2 = eat[j];
            tmp2.p += tmp.p;
            tmp2.c += tmp.c;
            tmp2.f += tmp.f;
            eat.push_back(tmp2);
        }
    }
    for (int i = 0; i < eat.size(); ++i)
    {
        if (eat[i].p == goal.p && eat[i].c == goal.c && eat[i].f == goal.f)
        {
            cout << "yes" << endl;
            return;
        }
    }
    cout << "no" << endl;
}

int main(const int argc, const char** argv) {
   int t;
   cin >> t;
   for (int i = 0; i < t; ++i)
   {
       cout << "Case #" << i + 1 << ": ";
       solve();
   }
   return 0;
}
