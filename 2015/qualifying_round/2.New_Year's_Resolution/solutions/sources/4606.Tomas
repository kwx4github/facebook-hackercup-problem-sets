package fbhc15_NewYearsResolution;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class NewYearsResolution {

	public static void main(String[] args) {
		if (args.length==1) {
			new NewYearsResolution(args[0]);
		}
	}

	public NewYearsResolution(String filename) {
		try{
			FileReader fr=new FileReader(filename);
			BufferedReader br=new BufferedReader(fr);
			String tmp=br.readLine();
			tmp=tmp.trim();
			String tmpd[];
			int t; //1<=t<=20
			int n; // 1 <= n <= 20
			int gp,gc,gf; // 10<= gp,gc,gf <= 1000
			int p[];
			int c[];
			int f[];
			String[] data; // 
			t=Integer.parseInt(tmp);
			//System.out.println("Number of tests "+t);
			boolean output;
			for(int i=0;i<t;i++) {
				tmp=br.readLine();
				tmp.trim();
				tmpd=tmp.split(" ");
				gp=Integer.parseInt(tmpd[0]);
				//System.out.println("Max proteins "+gp);
				gc=Integer.parseInt(tmpd[1]);
				//System.out.println("Max carbonhydrates "+gc);
				gf=Integer.parseInt(tmpd[2]);
				//System.out.println("Max fat "+gf);
				tmp=br.readLine();
				tmp.trim();
				n=Integer.parseInt(tmp);
				//System.out.println("Number of food "+n);
				p=new int[n];
				c=new int[n];
				f=new int[n];
				for( int k=0;k<n;k++) {
					tmp=br.readLine();
					tmp.trim();
					data=tmp.split(" ");
					p[k]=Integer.parseInt(data[0]);
					c[k]=Integer.parseInt(data[1]);
					f[k]=Integer.parseInt(data[2]);
					//System.out.println("P="+p[k]+" C="+c[k]+" F="+f[k]);
				}
				output=processData(gp,gc,gf,p,c,f,0);
				System.out.println("Case #"+(i+1)+": "+((output)?"yes":"no"));
			}
			br.close();
			fr.close();
		}catch(IOException ioe) {
			System.out.println(ioe.getMessage());
		}
	}
	
	public boolean processData(int gp, int gc, int gf, int[] p, int[] c, int[] f, int pos) {
		if ((gp==0)&&(gc==0)&&(gf==0)) {
			return(true);
		}
		if ((gp<0)||(gc<0)||(gf<0)) {
			return(false);
		}
		if (pos>=p.length) {
			return(false);
		}
		int p1=gp-p[pos];
		int c1=gc-c[pos];
		int f1=gf-f[pos];
		pos++;
		if (processData(gp,gc,gf,p,c,f,pos)) {
			return(true);
		}else{
			return(processData(p1,c1,f1,p,c,f,pos));
		}
	}
}
