package facebookHackerCup;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;

public class p2 {
	int			L	= 3;
	int			N;
	int[]		total;
	int[][]		data;
	
	boolean[]	bits;
	
	public p2() {
	}
	
	public int[] string2Int(String content) {
		int[]	ret	=	new int[L];
        StringTokenizer st = new StringTokenizer(content);

        for(int i=0; i<L; ++i) {
        	String temp = st.nextToken();
        	ret[i]	= Integer.parseInt(temp);
        }
        
		return	ret;
	}
	
	public boolean getBit(int v, int n) {
		return	bits[n];
	}
	
	public boolean makeNextIndex() {
		if(bits[0]) {
			bits[0]	= false;
			int	i	= 1;
			for(; i<N; ++i) {
				if(bits[i]) {
					bits[i] = false;
				} else {
					bits[i]	= true;
					break;
				}
			}
			
			if(i == N)
				return	false;
		} else {
			bits[0]	= true;
		}
		
		return	true;
	}

	public boolean solve_sub(int[] sum, int idx) {

		int	check	= 0;
		for(int i=0; i<L; ++i)
			check += (sum[i] == total[i]) ? 1 : 0;
		if(check == L)
			return	true;
		
		if(idx >= N)
			return	false;
		
		if(solve_sub(sum, idx+1))
			return	true;
		
		for(int i=0; i<L; ++i)
			sum[i] += data[idx][i];
		
		if(solve_sub(sum, idx+1))
			return	true;
		
		for(int i=0; i<L; ++i)
			sum[i] -= data[idx][i];
		
		
		return	false;
	}
	
	public String solve() {
		int[]	sum	= new int[L];

		if(solve_sub(sum, 0))
			return	"yes";
		else
			return	"no";
	}
	
	public static void main(String[] args) {
		BufferedReader		reader	= null;
		FileOutputStream	out		= null;

		try {
//			reader     = new BufferedReader(new FileReader(new File("src/facebookHackerCup/new_years_resolution_example_input.txt")));
			reader     = new BufferedReader(new FileReader(new File("src/facebookHackerCup/new_years_resolution.txt")));
			out = new FileOutputStream("output.txt");
	        
			int	loop	= 0;
			if(reader.ready()) {
				loop	= Integer.parseInt(reader.readLine());
			}
			
			for(; loop>=0; loop--) {
				int	cnt	= 1;
				while(reader.ready()) {	// 변경
		            String content	= reader.readLine();
		            
		    		p2	inst	= new p2();

		    		inst.total	= inst.string2Int(content);

		            String tmp	= reader.readLine();
		    		inst.N		= Integer.parseInt(tmp);
		    		
		    		inst.data	= new int[inst.N][inst.L];
		    		
		    		for(int i=0; i<inst.N; ++i) {
		    			tmp	= reader.readLine();
			    		inst.data[i]	= inst.string2Int(tmp);
		    		}
		            
		            String	ret	= inst.solve();
		            
		            String	a	= "Case #" + cnt + ": ";
		            cnt++;
		            
		            out.write(a.getBytes());
		            out.write(ret.getBytes());
		            
		            out.write('\r');
		            out.write('\n');
		        }
			}
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			if (out != null) {
				try {
					out.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}
}
