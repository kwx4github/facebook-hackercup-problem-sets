#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

int N, GP, GC, GF, Checking;
vector <int> P, C, F, heart;

void BackTrack(int destination, int bar, int index){
    if(destination <= 0 || index == N || bar == N){
        if(destination == 0){
            int C_er_Jonno = 0, F_er_Jonno = 0;
            int szzz = heart.size();
            for(int z = 0; z < szzz; z++){
                C_er_Jonno += C[heart[z]];
                F_er_Jonno += F[heart[z]];
            }
            if(C_er_Jonno == GC && F_er_Jonno == GF)Checking = 1;
            return;
        }
        return;
    }
    heart.push_back(index);
    BackTrack(destination-P[index], bar+1, index+1);
    heart.pop_back();
    BackTrack(destination, bar, index+1);
    return;
}

int main(){
    freopen("out.txt", "w", stdout);
    int t, a, b, c, cse = 0;
    cin >> t;
    while(t--){
        cin >> GP >> GC >> GF;
        cin >> N;
        Checking = 0;
        for(int i = 1; i <= N; i++){
            cin >> a >> b >> c;
            P.push_back(a), C.push_back(b), F.push_back(c);
        }
        BackTrack(GP, 0, 0);
        if(Checking)cout << "Case #" << ++cse << ": yes" << endl;
        else cout << "Case #" << ++cse << ": no" << endl;
        P.clear(), C.clear(), F.clear();
        heart.clear();
    }
    return 0;
}
