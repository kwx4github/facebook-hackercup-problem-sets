//create yourSelf :D ^_^
//Change the Word ;) (y)


#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <sstream>
#include <string>
#include <iostream>
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cmath>
#include <stdio.h>
#include <ctype.h>
#include <sstream>
#include <queue>
#include <stack>
#include <iomanip>
#include <functional>
#include <math.h>
#include <cstring>
#include <stdio.h>

using namespace std;

#define For(i , x) for (long long  int i = 1 ;i <= x ;++i)
#define rep(k , h) for ( long long int k = 0 ; k < h ;k++)
#define sz size()
#define ll long long

map < string , int > datas;
map < string , int > ::iterator it;
multiset < char > data;
multiset < char > ::reverse_iterator its;
set < char > dat;
set <char > ::iterator itss;

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);


	int n , gp , gc , gf , d  , pp , cc , ff;
	cin >> n ;

	For(j , n)
	{
	cin >> gp >> gc >> gf ;

	cin >> d ;

	vector < int > p ;
	vector < int > c ;
	vector < int > f ;


	rep( i , d)
	{
		cin >> pp >> cc >> ff ;

		if(pp <= gp && cc <= gc && ff <= gf )
		{
			p.push_back(pp) ;
			c.push_back(cc) ;
			f.push_back(ff) ;

			if(i ==0 || i == 1)
		    continue  ;
			//////
			int bb = p.sz ;

			rep( k , bb-1)
	        p.push_back( (p[ k ] + pp) ) ;

			////////
			 bb = c.sz ;

			rep( k , bb-1)
	        c.push_back( (c[ k ] + cc) ) ;

			////////
			 bb = f.sz ;

			rep( k , bb-1)
	        f.push_back( (f[ k ] + ff) ) ;

		}

	}

	sort(p.begin() , p.end()) ;
	p.erase( unique (p.begin() , p.end() ) , p.end() ) ;

	sort(c.begin() , c.end()) ;
	c.erase( unique (c.begin() , c.end() )  , c.end()) ;

	sort(f.begin() , f.end()) ;
	f.erase( unique (f.begin() , f.end() ) , f.end() ) ;

	bool f1 = 0  , f2 = 0 , f3 = 0;

	rep( i , p.sz)
	if(p [ i ] == gp)
	{
		f1 = 1 ;
		break;
	}

	rep( i , c.sz)
	if(c [ i ] == gc)
	{
		f2 = 1 ;
		break;
	}

	rep( i , f.sz)
	if(f [ i ] == gf)
	{
		f3 = 1 ;
		break;
	}


	if(f1 && f2 && f3)
	cout<<"Case #"<<j<<": yes" << endl;
	else
		cout<<"Case #"<<j<<": no" << endl;


	}

	return 0 ;
}
