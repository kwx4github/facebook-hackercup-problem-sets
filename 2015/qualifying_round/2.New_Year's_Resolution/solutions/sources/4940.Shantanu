#include<iostream>
#include<vector>
#include<fstream>

using namespace std;
struct food {
int p;
int c;
int f;
};

vector<food> diet;

int gp, gc, gf;
int elem;
bool compute(int sum_p, int sum_c, int sum_f, int n) {
if(sum_p == 0 && sum_c == 0 && sum_f == 0 && n == 0) {
    return true;
} 

if( (sum_p != 0 || sum_c != 0 || sum_f != 0) && n <= 0) {
    return false;
} 

if( (sum_p - diet[n-1].p >= 0) && (sum_c -diet[n-1].c >= 0) && (sum_f-diet[n-1].f >= 0) ) 
return compute(sum_p - diet[n-1].p, sum_c -diet[n-1].c, sum_f-diet[n-1].f, n-1) || 
    compute(sum_p, sum_c, sum_f, n-1); 
else
    return compute(sum_p, sum_c, sum_f, n-1);
}

int main()
{
int t, n;
ifstream myfile("input2.txt");
vector<int> ans;
while(myfile>>t){
    for(int i=0; i<t; ++i) 
    {
	int sum_p, sum_c, sum_f;
	myfile>>gp>>gc>>gf;
	myfile>>n;
	elem = n;
	diet.clear();
	sum_p=gp;sum_c=gc;sum_f = gf;
	for(int j=0;j<n;++j) {
	    food d;
	    myfile>>d.p>>d.c>>d.f;
	    diet.push_back(d);
	}
	ans.push_back(compute(sum_p, sum_c, sum_f, diet.size()));
    }
}

for(int i=0;i<t;++i) {
    if(ans[i] == 1)
	cout<<"Case #"<<i+1<<":"<<" yes"<<"\n";
    else
	cout<<"Case #"<<i+1<<":"<<" no"<<"\n";
    
}
return 0;
}
