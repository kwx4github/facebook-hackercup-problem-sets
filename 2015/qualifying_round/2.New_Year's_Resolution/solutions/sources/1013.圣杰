#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <queue>
#include <map>
#include <string>
#include <stack>
#include <bitset>
#include <vector>

#define _max(a,b) ((a)>(b)?(a):(b))
#define _min(a,b) ((a)>(b)?(b):(a))

const int maxi = 1 << 30;
const int mini = 1 << 31;
const int inf = 0x3f3f3f3f;
const int maxn = 2000000;

using namespace std;
struct node {
    int a, b, c;
}food[110];
int main() {
    ios::sync_with_stdio(false);
    #ifdef LOCAL
    //freopen("new_years_resolution.txt", "r", stdin);
    //freopen("new_years_resolution_example_input.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    #endif
    int T, cas = 1;
    scanf("%d", &T);
    while(T--) {
        printf("Case #%d: ", cas++);
        int a, b, c;
        scanf("%d%d%d", &a, &b, &c);
        int n;
        scanf("%d", &n);
        for(int i = 0; i < n; i++) {
            scanf("%d%d%d", &food[i].a, &food[i].b, &food[i].c);
        }
        int i, maxx = (1<<n) - 1;
        for(i = 1; i <= maxx; i++) {
            int ta = 0, tb = 0, tc = 0, j;
            bitset<20> B(i);
            for(j = 0; j < B.size(); j++) {
                if(!B[j]) continue;
                ta += food[j].a;
                tb += food[j].b;
                tc += food[j].c;
                if(ta > a || tb > b || tc > c) break;
            }
            if(j >= B.size()) {
                if(ta == a && tb == b && tc == c) {
                    puts("yes");
                    break;
                }
            }
        }
        if(i > maxx) puts("no");
    }
    return 0;
}
