
import java.util.*;
import java.io.*;

public class New_Years_Resolution {

	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	static PrintWriter ps = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
	static StringTokenizer st;

	public static void main(String[] args) throws IOException{
		int t = readInt();
		main : for(int z = 1; z <= t; z++){
			int p = readInt();
			int c = readInt();
			int f = readInt();
			int n = readInt();
			State[] s = new State[n];
			for(int x = 0; x < n; x++)
				s[x] = new State(readInt(), readInt(), readInt());
			for(int x = 1; x < 1 << n; x++){
				int totalP = 0;
				int totalC = 0;
				int totalF = 0;
				for(int y = 0; y < n; y++){
					if((x & (1 << y)) != 0){
						totalP += s[y].p;
						totalC += s[y].c;
						totalF += s[y].f;
					}
				}
				if(totalP == p && totalC == c && totalF == f){
					System.out.printf("Case #%d: yes\n", z);
					continue main;
				}
			}
			System.out.printf("Case #%d: no\n", z);
		}
	}
	static class State{
		int p, c, f;
		State(int p, int c, int f){
			this.p = p;
			this.c = c;
			this.f = f;
		}
	}
	private static void swap(char[] curr, int x, int y) {
		char temp = curr[x];
		curr[x] = curr[y];
		curr[y] = temp;
	}
	static String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(br.readLine().trim());
		return st.nextToken();
	}

	static long readLong() throws IOException {
		return Long.parseLong(next());
	}

	static int readInt() throws IOException {
		return Integer.parseInt(next());
	}

	static double readDouble() throws IOException {
		return Double.parseDouble(next());
	}

	static char readCharacter() throws IOException {
		return next().charAt(0);
	}

	static String readLine() throws IOException {
		return br.readLine().trim();
	}
}
