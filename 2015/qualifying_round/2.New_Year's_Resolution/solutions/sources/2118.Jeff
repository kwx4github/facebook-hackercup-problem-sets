import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class HackerCupTester2 {

	public static void main(String[] args){
		//args[0]: input file
		//args[1]: output file
		//args[2]: the gold standard output file for compare
		
		if(args.length >= 3){
			File inputFile = new File(args[0]);
			File outputFile = new File(args[1]);
			File goldFile = new File(args[2]);
			
			try {
				Scanner scan = new Scanner(inputFile);

				List<String> lines = new ArrayList<String>();
				while(scan.hasNextLine()){
					String line = scan.nextLine();
					lines.add(line);
				}
				HackerCupTester2 tester = new HackerCupTester2();
				String[] outputArray = tester.newYearResolution(lines);
				
				//write result to file
				FileWriter writer = new FileWriter(outputFile);
				writer.write(outputArray[0]);
				for(int i=1;i<outputArray.length;i++){
					writer.write("\n"+outputArray[i]);
				}
				writer.close();
				
				//get and compare result
				Scanner scanO = new Scanner(outputFile);
				List<String> c1 = new ArrayList<String>();
				while(scanO.hasNextLine()){
					c1.add(scanO.nextLine());
				}
				
				Scanner scanG = new Scanner(goldFile);
				List<String> c2 = new ArrayList<String>();
				while(scanG.hasNextLine()){
					c2.add(scanG.nextLine());
				}
				
				if(c1.size() == c2.size()){
					for(int i=0;i<c1.size();i++){
						System.out.println(c1.get(i)+"|"+c2.get(i));
						if(!c1.get(i).equals(c2.get(i))){
							System.out.println("File do not match.");
							return;
						}
					}
					System.out.println("Same result!");
				}
				else{
					System.out.println("File do not match.");
				}
				
			} catch ( IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	public String[] newYearResolution(List<String> lines){
		int testCase = Integer.parseInt(lines.get(0));
		String[] ret = new String[testCase];
		int index = 1;
		for(int i=0;i<testCase;i++){
			int numFood = Integer.parseInt(lines.get(index+1));
			int[] goal = new int[3];
			int[][] food = new int[numFood][3]; 
			boolean haveCase = getTestCase(lines,index,goal,numFood,food);
			if(haveCase){
				int[] tmp = new int[3];
				boolean f = find(goal,food,tmp,0);
				ret[i] = "Case #"+(i+1)+": ";
				if(f){
					ret[i]+="yes";
				}
				else{
					ret[i]+="no";
				}
				index+=numFood+2;
			}
		}
		return ret;
	}
	public boolean getTestCase(List<String> lines, int index,int[] goal, int numFood, int[][] food){
		boolean ret = false;
		ret = getLineThree(lines.get(index),goal);
		
		index+=2;
		for(int i=0;i<numFood;i++){
			ret = ret & getLineThree(lines.get(index++),food[i]);
		}
		return ret;
	}
	
	public boolean getLineThree(String line, int[] fill){
		String[] req = line.split("\\s+");
		if(req.length != 3){
			return false;
		}
		else{
			for(int i=0;i<3;i++){
				fill[i] = Integer.parseInt(req[i]);
			}
		}
		return true;
	}
	
	public boolean find(int[] goal, int[][] food, int[] comb, int index){
		if(index >= food.length)return false;

		int[] newAdd = new int[3];
		for(int j=0;j<comb.length;j++){
			newAdd[j] = comb[j]+food[index][j];
		}

		if(isEqual(goal,newAdd)){
			return true;
		}
		else{
			return find(goal,food,newAdd,index+1) || find(goal,food,comb,index+1);
		}
		
	}
	
	public boolean isEqual(int[] a, int[] b){
		for(int i=0;i<a.length;i++){
			if(a[i] != b[i])return false;
		}
		return true;
	}

}
