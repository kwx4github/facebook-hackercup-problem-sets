#ifndef __APPLE__
#include <bits/stdc++.h>
#else
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>

#include <vector>
#include <queue>
#include <deque>
#include <list>
#include <map>
#include <set>
#include <stack>
#include <iterator>

#include <algorithm>
#include <numeric>
#include <utility>

#include <sstream>
#include <cstring>
#endif

using namespace std;

#define pb push_back
#define mp make_pair
#define sf(x) scanf("%d", &(x))
#define pf(x) printf("%d\n", x)
#define sz(v) ((int)(v).size())
#define all(c) (c).begin(), (c).end()
#define itype(c) __typeof((c).begin())
#define FOR(i,a,b) for ( __typeof(a) i = a; i != b; i++ )
#define DOWN(i,a,b) for ( __typeof(a) i = a; i != b; i-- )
#define EACH(i,c) for ( itype(c) i = (c).begin(); i != (c).end(); i++ )
#define MEMZ(x) memset((x), 0, sizeof(x))

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pt;

template<class T> inline void checkmin(T &a, T b){if(b<a) a=b;}
template<class T> inline void checkmax(T &a, T b){if(b>a) a=b;}

int main()	{
	std::ios::sync_with_stdio(false);
	int T;
	cin >> T;
	for(int i = 1; i <= T; i++)	{
		int P, C, F, n;
		cin >> P >> C >> F >> n;
		cout <<"Case #" << i << ": ";
		
		vi p(n), c(n), f(n);
		for(int j = 0; j < n; ++j)
			cin >> p[j] >> c[j] >> f[j];

		bool poss = false;
		int m = 1 << n;
		for(int j = 0; j < m && !poss; ++j)	{
			int tp = 0, tc = 0, tf = 0;
			for(int k = 0; k < n; ++k)
				if(j & (1<<k))	{
					tp += p[k];
					tc += c[k];
					tf += f[k];
					if(tp > P || tc > C || tf > F)
						break;
				}
			if(tp == P && tc == C && tf == F)
				poss = true;
		}
		cout << (poss ? "yes" : "no") << endl;
	}
	return 0;
}