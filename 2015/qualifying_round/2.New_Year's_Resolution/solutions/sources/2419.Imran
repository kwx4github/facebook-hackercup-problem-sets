#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;

class Diet{
public:
    int gp;
    int gc;
    int gf;
    Diet(){}
    Diet(int p, int c, int f):gp(p), gc(c), gf(f){}
    void add(Diet &d){
        gp += d.gp;
        gc += d.gc;
        gf += d.gf;
    }

    bool operator==(Diet &d){
        return gp==d.gp && gc==d.gc && gf==d.gf;
    }
};

bool checkDiet(Diet &target, vector<Diet> &foods){
    int n = 1 << foods.size();
    for(int i=1;i<n;i++){
        Diet cur(0,0,0);
        for(int b=0;b<foods.size();b++){
            if(i & (1<<b)){
                cur.add(foods[b]);
            }
        }
        if(cur==target){
            return true;
        }
    }
    return false;
}

int main(){
    freopen("bin.txt", "r", stdin);
    freopen("bout.txt", "w", stdout);

    int T;
    cin >> T;
    for(int t=0;t<T;t++){
        Diet target;
        cin >> target.gp >> target.gc >> target.gf;
        int n;
        cin >> n;
        vector<Diet> foods(n);
        for(int i=0;i<n;i++){
            cin >> foods[i].gp >> foods[i].gc >> foods[i].gf;
        }

        bool balanced = checkDiet(target, foods);
        cout << "Case #" << t+1 << ": " << (balanced ? "yes" : "no") << endl;
    }

    return 0;
}
