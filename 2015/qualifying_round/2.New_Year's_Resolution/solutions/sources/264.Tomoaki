#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <algorithm>	// require sort next_permutation count __gcd reverse etc.
#include <cstdlib>	// require abs exit atof atoi 
#include <cstdio>		// require scanf printf
#include <functional>
#include <numeric>	// require accumulate
#include <cmath>		// require fabs
#include <climits>
#include <limits>
#include <cfloat>
#include <iomanip>	// require setw
#include <sstream>	// require stringstream 
#include <cstring>	// require memset
#include <cctype>		// require tolower, toupper
#include <fstream>	// require freopen
#include <ctime>		// require srand
#define rep(i,n) for(int i=0;i<(n);i++)
#define ALL(A) A.begin(), A.end()

using namespace std;

typedef long long ll;
typedef pair<int, int> P;

const int MAX_M = 20005;

int main()
{
	ios_base::sync_with_stdio(0);
	int T; cin >> T;
	for(int t = 1; t <= T; t++ ){
		int G[3] = {0};
		cin >> G[0] >> G[1] >> G[2];	// Gp, Gc, Gf
		int N; cin >> N;
		vector<vector<int> > g(3, vector<int> (N, 0 ) );
		rep (j, N ){
			cin >> g[0][j] >> g[1][j] >> g[2][j]; 	// P, C, F
		} // end rep

		bool res = false;
		for (int i = 1; i < (1<<N); i++ ){
			int sum[3] = {0};
			rep (j, N ){
				if (i & (1<<j ) ){
					rep (k, 3 ) sum[k] += g[k][j];
				} // end if
			} // end rep
			bool curr = true;
			rep (k, 3 ) curr &= (sum[k] == G[k]);
			res |= curr;
		} // end for
		cout << "Case #" << t << ": " << (res ? "yes" : "no" ) << endl;
	} // end for

	return 0;
}
