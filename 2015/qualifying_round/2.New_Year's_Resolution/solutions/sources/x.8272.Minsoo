#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

ifstream ifs;
ofstream ofs;

int gp, gc, gf;
int testCase = 1;
class Food
{
public: 
	int p;
	int c;
	int f;

	inline void getPCF()
	{
		ifs >> p >> c >> f;
	}
};

inline bool determind(vector<Food> &vFoods, int position, int p, int c, int f)
{
	if (p == gp && c == gc && gf == f)
		return true;

	if (vFoods.size() == position)
		return false;

	Food food = vFoods.at(position);

	if (determind(vFoods, position + 1, p + food.p, c + food.c, f + food.f))
		return true;

	if (determind(vFoods, position + 1, p, c, f))
		return true;

	return false;
}

void problem()
{
	int foods;
	vector<Food> vFoods;
	ifs >> gp >> gc >> gf;

	ifs >> foods;
	
	for (int i = 0; i < foods; i++)
	{
		vFoods.push_back(Food());
		vFoods.back().getPCF();
	}


	ofs << "Case #" << testCase++ << " : ";
	if (determind(vFoods, 0, 0, 0, 0))
		ofs << "yes" << endl;
	else
		ofs << "no" << endl;
}

int main()
{
	ifs.open("new_years_resolution.txt", ifstream::in);
	ofs.open("new_years_resolution_output.txt", ofstream::out);

	int tc;
	ifs >> tc;

	while (tc--)
	{
		problem();
	}

	ifs.close();
	ofs.close();

	return 0;
}