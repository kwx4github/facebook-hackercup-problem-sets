#Facebook hackercup 2015
#ex2 new year

def opti(target,food,item):
    print "Start opti " + str(target)
    sfoods = sorted(food, key=lambda k: k[item], reverse=True)
    print sfoods
    idx = 0;    
    foods = list(sfoods);
    correctsets = list()
    while(True):
        eatenfoods = list()
        eatenfoodsi = list()
        t = target
        for idx, f in enumerate(foods):
            if(f[item]<=t):
                t = t - f[item]
                eatenfoods.append(f)
                eatenfoodsi.append(idx)
        if(t == 0):
           print "Found solution"
           correctsets.append(eatenfoods)
           if(len(eatenfoodsi) > 1):
               foods.pop(eatenfoodsi[-1])
           else:
               break
        
        if(len(eatenfoodsi) == 0):
            break
        
        if(len(eatenfoodsi) == 1):
            sfoods.pop(eatenfoodsi[0])
            foods = list(sfoods);
        else:
            if(t != 0):
                foods.pop(eatenfoodsi[-1])

        
    return correctsets 


def caneat(gp,gc,gf,food):
    a = opti(gp,food,'p')
    if a:
        print a
        for aa in a:
            b = opti(gc,aa,'c')
            if b:
                for bb in b:
                    if opti(gf,bb,'f'):
                        return  True
    return False
    

        
if __name__ == "__main__":
    with open("new_years_resolution.txt") as f:
        with open("output.txt","w") as w:
            lines = f.readlines()
            cases = int(lines[0])
            startidx = 0;
            caseidx = 1;
            case = 1;
            while(True):
                if(case > cases):
                    break
                print " "
                print "#########################"
                print "Case " + str(case) + " " + lines[caseidx]
                gval = lines[caseidx].split(' ')
                Gp = int(gval[0])
                Gc = int(gval[1])
                Gf = int(gval[2])
                nfoods = int(lines[caseidx+1])
                rfoods = lines[(caseidx+2):(caseidx+2+nfoods)]
                foods = list()
                for food in rfoods:
                    s = food.split(' ')
                    foods.append({'p':int(s[0]),'c':int(s[1]),'f':int(s[2])})

                if(caneat(Gp,Gc,Gf,foods)):
                    w.write("Case #"+str(case)+": yes\n")
                else:
                    w.write("Case #"+str(case)+": no\n")

                caseidx = caseidx+2+nfoods
                case = case + 1
                if(caseidx > len(lines)):
                    break
        
