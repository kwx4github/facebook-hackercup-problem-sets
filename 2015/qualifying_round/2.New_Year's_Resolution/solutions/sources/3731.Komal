#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

#define LL long long
struct triplet{
	int a,b,c;
};

bool mysort(const triplet &node1 , const triplet &node2){
	return node1.a < node2.a;
}

void ifPossible(int len,int idx,vector<triplet> &inp,int gp,int gc, int gf,bool &done){
	if(gp == 0 && gf == 0 && gc == 0 ){
		done = true;
		return;
	}

	if(done == true || gp < 0 || gc < 0 || gf < 0)
		return;

	if(idx < len){
		ifPossible(len,idx+1,inp,gp,gc,gf,done);
		gp -= inp[idx].a; gc -= inp[idx].b; gf -= inp[idx].c;
		ifPossible(len,idx+1,inp,gp,gc,gf,done);
	}
}

int main(int argc, char const *argv[]){
	int t,gp,gc,gf,p,c,f,n;
	scanf("%d",&t);

	for(int test = 1; test <= t; test++){
		vector<triplet> inp;
		scanf("%d%d%d",&gp,&gc,&gf);
		scanf("%d",&n);
		triplet node;

		for(int i=0;i<n;i++){
			scanf("%d%d%d",&p,&c,&f);
			node.a = p;
			node.b = c;
			node.c = f;
			inp.push_back(node);
		}
		bool done = false;
		int idx=0;
		ifPossible(n,idx,inp,gp,gc,gf,done);

		if(done == true)
			printf("Case #%d: yes\n",test);
		else
			printf("Case #%d: no\n",test);
	}
	
	return 0;
}