
#include <iostream>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <fstream>

using namespace std;




int main(int argc, const char * argv[])
{
    int T,tmp1,tmp2,tmp3,N;
    vector<tuple<int,int,int>> data;

    string num;
    ifstream input;
    ofstream output;
    vector<int> list;
    bool yes = false;
    
    
    input.open("/Users/ahmedsobhy/Desktop/new_years_resolution.txt");
    output.open("/Users/ahmedsobhy/Desktop/output.txt");
    
    input >> T;
    tuple<int,int,int> requirement;

    for(int i=0;i<T;i++)
    {
        yes = false;
        data.clear();
        input >> tmp1 >> tmp2 >> tmp3;
        requirement = make_tuple(tmp1,tmp2,tmp3);
        input >> N;
        for(int j=0;j<N;j++)
        {
            input >> tmp1 >> tmp2 >> tmp3;
            if(tmp1 <= get<0>(requirement))
                if(tmp2 <= get<1>(requirement))
                    if(tmp3 <= get<2>(requirement))
                        data.push_back(make_tuple(tmp1,tmp2,tmp3));
        }
        
        sort(data.begin(),data.end());
        
        int maximum = pow(2,data.size())-1;
        for(int n=1;n<=maximum;n++)
        {
            int sum1=0;
            int sum2=0;
            int sum3=0;
            for(int p=0;p<data.size();p++)
            {
                int x = pow(2,p);
                if((x & n))
                {
                    sum1 += get<0>(data[p]);
                    sum2 += get<1>(data[p]);
                    sum3 += get<2>(data[p]);
                }
                
            }
            
            if(sum1==get<0>(requirement))
                if(sum2==get<1>(requirement))
                    if(sum3==get<2>(requirement))
                    {
                        yes = true;
                        break;
                    }
            
        }
        if(yes)
            output << "Case #" << i+1 << ": " << "yes" << endl;
        else
            output << "Case #" << i+1 << ": " << "no" << endl;
        
    
       
            
    }
    
    
    return 0;
    
}

