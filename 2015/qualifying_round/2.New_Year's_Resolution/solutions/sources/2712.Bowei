#include <algorithm>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <sstream>
#include <stack>
#include <string>
#include <set>
#include <utility>
#include <vector>

using namespace std;

template <typename T> inline T MIN(T a, T b) { return a < b ? a : b; }
template <typename T> inline T MAX(T a, T b) { return a < b ? b : a; }
template <typename T> inline T ABS(T a)      { return a < 0 ? -a : a;}

typedef long long int64;

const int MAXN = 23;
const int MAXCAP = 1007;

int T, Gp, Gc, Gf, n;
int P[MAXN], C[MAXN], F[MAXN];
int ks[MAXCAP][MAXCAP][MAXCAP];

bool dp(int p, int c, int f) {
  if (p < 0 || c < 0 || f < 0) return false;
  else if (ks[p][c][f] != -1) return ks[p][c][f] == 1;
  else {
    int res = 0;
    for (int i = 0; i < n; ++i) {
      res = dp(p - P[i], c - C[i], f - F[i]);
      if (res == 1) break;
    }
    ks[p][c][f] = res;
    return res == 1;
  }
}

int main() {
  scanf("%d", &T);
  for (int t = 1; t <= T; ++t) {
    scanf("%d%d%d", &Gp, &Gc, &Gf);
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
      scanf("%d%d%d", &P[i], &C[i], &F[i]);
    }
    memset(ks, -1, sizeof ks);
    ks[0][0][0] = 1;
    printf("Case #%d: %s\n", t, dp(Gp, Gc, Gf) ? "yes" : "no");
  }
  return 0;
}
