import sys

def satisfies(val, x):
	n = len(x)
	sols = set()
	for i in range(2**n):
		# each bit means that we use that item
		res = 0
		for j in range(n):
			if i & (1 << j):
				res += x[j]
		if res == val:
			sols.add(i)

	return sols

num = int(sys.stdin.readline())
for i in range(num):

	s = sys.stdin.readline().strip()
	ss = s.split()
	# get goals
	p0 = int(ss[0])
	g0 = int(ss[1])
	f0 = int(ss[2])

	num_foods = int(sys.stdin.readline())
	p = []
	g = []
	f = []
	for j in range(num_foods):
		s = sys.stdin.readline().strip()
		ss = s.split()
		p.append(int(ss[0]))
		g.append(int(ss[1]))
		f.append(int(ss[2]))

	p_sols = satisfies(p0, p)
	g_sols = satisfies(g0, g)
	f_sols = satisfies(f0, f)

	x = p_sols.intersection(g_sols)
	x = x.intersection(f_sols)

	print 'Case #%d: %s' % (i+1, 'yes' if len(x) > 0 else 'no')