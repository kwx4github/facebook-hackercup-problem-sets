import itertools

f = open('input.txt', 'ro')
case_total = int(f.readline())

for case_no in range(0, case_total):

	targets_met = False 

	targets = f.readline().split(' ')
	for i in range(0, len(targets)):
		targets[i] = int(targets[i])

	foods_raw = list()
	food_raw_total = int(f.readline())
	for food_num in range(0, food_raw_total):
		food_component = f.readline().split(' ')
		for i in range(0, len(food_component)):
			food_component[i] = int(food_component[i])
		foods_raw.append(food_component)

	foods = list()
	for i in range(0, food_raw_total):
		if not (foods_raw[i][0] > targets[0] or foods_raw[i][1] > targets[1] or foods_raw[i][2] > targets[2]):
			foods.append(foods_raw[i])

	for i in range(0, len(foods)):
		if (foods[i][0] == targets[0] and foods[i][1] == targets[1] and foods[i][2] == targets[2]):
			targets_met = True


	if targets_met == True:
		print "Case #" + str(case_no + 1) + ": yes"
	else:
		food_item = range(0, len(foods))

		for i in range(2, len(foods)):
			food_test = list(itertools.combinations(food_item, i))

			if targets_met == False:
				for j in food_test:
					sum = [0, 0, 0]
					for k in j:
						sum[0], sum[1], sum[2] = sum[0] + foods[k][0], sum[1] + foods[k][1], sum[2] + foods[k][2]
						if (sum[0] == targets[0] and sum[1] == targets[1] and sum[2] == targets[2]):
							targets_met = True
	
		if targets_met == True:
			print "Case #" + str(case_no + 1) + ": yes"
		else:
			print "Case #" + str(case_no + 1) + ": no"
