#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <deque>
#include <iostream>
#include <limits>
#include <numeric>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define MP make_pair
#define all(v) (v).begin(), (v).end()
#define PROBLEM_ID "newyear"

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<bool> vb;
typedef long long ll;
typedef pair<int, int> pii;

int main() {
  freopen(PROBLEM_ID".in", "r", stdin);
  freopen(PROBLEM_ID".out", "w", stdout);
  int tests;
  cin >> tests;
  for (int test_index = 0; test_index < tests; ++test_index) {
    int gp, gc, gf;
    cin >> gp >> gc >> gf;
    int n;
    cin >> n;
    vector<int> p(n), c(n), f(n);
    for (int i = 0; i < n; ++i) {
      cin >> p[i] >> c[i] >> f[i];
    }
    bool possible = false;
    for (int mask = 0; mask < (1 << n); ++mask) {
      int tp, tc, tf;
      tp = tc = tf = 0;
      for (int i = 0; i < n; ++i) {
        if ((mask >> i) & 1) {
          tp += p[i];
          tc += c[i];
          tf += f[i];
        }
      }
      if (tp == gp && tc == gc && tf == gf) {
        possible = true;
        break;
      }
    }
    cout << "Case #" << test_index + 1 << ": ";
    cerr << "Case #" << test_index + 1 << ": ";
    if (possible) {
      cout << "yes";
      cerr << "yes";
    } else {
      cout << "no";
      cerr << "no";
    }
    cout << endl;
    cerr << endl;
  }
  return 0;
}
