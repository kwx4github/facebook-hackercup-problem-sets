#include <iostream>
#include <string>

using namespace std;

int gp, gc, gf;
int max_n;

int tab[20][3];

bool is_possible(int current_gp, int current_gc, int current_gf, int n)
{
	if (n == max_n)
		return (gp == current_gp) && (gc == current_gc) && (gf == current_gf);

	bool take = is_possible(current_gp + tab[n][0], current_gc + tab[n][1], current_gf + tab[n][2], n + 1);
	bool dont_take = is_possible(current_gp, current_gc, current_gf, n + 1);
	return take || dont_take;
}

int main()
{
	int t;
	cin >> t;
	for (int i = 0; i < t; ++i)
	{
		cin >> gp >> gc >> gf;
		cin >> max_n;
		for (int j = 0; j < max_n; ++j)
			cin >> tab[j][0] >> tab[j][1] >> tab[j][2];



		cout << "Case #" << i + 1 << ": " << (is_possible(0, 0, 0, 0) ? "yes\n" : "no\n");
	}
	return 0;
}