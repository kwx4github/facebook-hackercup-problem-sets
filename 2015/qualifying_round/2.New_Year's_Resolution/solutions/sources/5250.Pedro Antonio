using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NewYearResolution
{
    class Program
    {
        static int proteinDiet;
        static int carboDiet;
        static int fatDiet;

        static int countFoods;
        static int[,] foods;

        static void Main(string[] args)
        {
            FileStream fReader = new FileStream("D:\\new_years_resolution.txt", FileMode.Open);
            StreamReader reader = new StreamReader(fReader);
            FileStream fWriter = new FileStream("D:\\output.txt", FileMode.CreateNew);
            StreamWriter writer = new StreamWriter(fWriter);
            int count = int.Parse(reader.ReadLine());
            for (int i = 0; i < count; i++)
            {
                string[] temp = reader.ReadLine().Split();
                proteinDiet = int.Parse(temp[0]);
                carboDiet = int.Parse(temp[1]);
                fatDiet = int.Parse(temp[2]);
                countFoods = int.Parse(reader.ReadLine());
                foods = new int[countFoods,3];
                for (int j = 0; j < countFoods; j++)
                {
                    temp = reader.ReadLine().Split();
                    foods[j, 0] = int.Parse(temp[0]);
                    foods[j, 1] = int.Parse(temp[1]);
                    foods[j, 2] = int.Parse(temp[2]);
                }
                bool result = NYRRecursive(0, 0, 0, 0);
                writer.WriteLine("Case #{0}: {1}", i + 1, ((result == true) ? "yes" : "no"));
            }
            reader.Close();
            writer.Close();
        }

        static bool NYRRecursive(int index, int proteinTemp, int carboTemp, int fatTemp)
        {
            if (Iguales(proteinTemp, carboTemp, fatTemp))
                return true;
            for (int i = index; i < countFoods; i++)
            {
                if (NYRRecursive(i + 1, proteinTemp + foods[i, 0], carboTemp + foods[i, 1], fatTemp + foods[i, 2]))
                    return true;
            }
            return false;
        }

        static bool Iguales(int proteinTemp, int carboTemp, int fatTemp)
        {
            return proteinDiet == proteinTemp && carboDiet == carboTemp && fatDiet == fatTemp;
        }
    }
}
