#include <iostream>
#include <vector>
#include <set>
using namespace std;

const int MAXN = 30;

struct triple{
	int a, b, c;
	triple(int x, int y, int z){a=x; b=y; c=z;}
	triple(){a=b=c=0;}
};
bool operator < (triple x, triple y){
	if(x.a < y.a) return true;
	if(x.a > y.a) return false;
	if(x.b < y.b) return true;
	if(x.b > y.b) return false;
	if(x.c < y.c) return true;
	return false;
}

triple g;
int n;
triple v[MAXN];

bool solve(){
	set<triple> s;
	s.insert(triple(0,0,0));
	
	vector<triple> nuove;
	for(int i=0; i<n; i++){
		for(triple t:s)
			nuove.push_back(triple(t.a+v[i].a, t.b+v[i].b, t.c+v[i].c));
		
		for(triple t:nuove) s.insert(t);
		nuove.clear();
	}
	
	if(s.count(g)) return true;
	return false;
}

int main(){
	int t; cin >> t;
	
	for(int i=1; i<=t; i++){
		cin >> g.a >> g.b >> g.c;
		cin >> n;
		for(int i=0; i<n; i++) cin >> v[i].a >> v[i].b >> v[i].c;
		cout << "Case #" << i << ": " << (solve() ? "yes" : "no") << endl;
	}
	return 0;
}
