import itertools 
from itertools import chain, combinations
import time

file_name='in.txt'
data=open(file_name,"r+")
text=data.readlines()
data.close()
test_cases=int(text[0])
c = 1

def all_subsets(sets):
	return chain(*map(lambda x: combinations(sets, x), range(0, len(sets)+1)))

def calc(sum_arr,case_count,content,y):
	sum_arr = map(int,sum_arr)
	content = [[int(r) for r in row ] for row in content]
	sub_content = all_subsets(content)
	check = 'no'
	for sub in sub_content:
		if sub is not None:
			if sum_arr == [sum(x) for x in zip(*sub)]:
				check = 'yes'
				break
	print "Case #"+str(y)+": "+check

for x in range(0,test_cases):
    sum_arr =text[x+c].strip().split()
    case_count = int(text[x+c+1].strip())
    c = c+2
    content = []
    for i in range(0,case_count):
    	r = text[x+i+c].strip().split()
    	content.append(r)
    c = c+case_count-1
    calc(sum_arr,case_count,content,x+1)