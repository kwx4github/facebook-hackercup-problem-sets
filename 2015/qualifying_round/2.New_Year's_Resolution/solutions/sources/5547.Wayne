#include <iostream>
#include <cassert>

using namespace std;

int menu[20][3];
int nentry;
int diet[3];

bool caneat(int start, int a, int b, int c){
  
  if(start >= nentry)
    return 0;
  if (a < 0 || b < 0 || c < 0)
    return 0;
   
  //if(a == 0 || b == 0 || c == 0)
  //  cout << start << " " << a << " " << b << " " << c << endl;
    
  int aleft = a - menu[start][0];
  int bleft = b - menu[start][1];
  int cleft = c - menu[start][2];
  
  if (aleft == 0 && bleft == 0 && cleft == 0)
    return 1;
  
  return caneat(start+1, aleft, bleft, cleft) || caneat(start+1, a, b, c);
}

int main(){
  int tests;
  int answer[20];
  cin >> tests;
  for(int t = 0; t < tests; t++){
    cin >> diet[0] >> diet[1] >> diet[2];
    cin >> nentry;
    for(int i = 0; i < nentry; i++){
        cin >> menu[i][0] >> menu[i][1] >> menu[i][2];
    }
    answer[t] = caneat(0,diet[0],diet[1],diet[2]);
  }
  for(int t = 0; t <tests; t++){
    cout << "Case #"<< t+1 <<": ";
    if(answer[t])
      cout << "yes" << endl;
    else
      cout << "no" << endl;
  }
}
