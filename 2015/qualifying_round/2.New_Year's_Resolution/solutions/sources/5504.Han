import sys
def subs(x, y):
    return x[0] - y[0], x[1] - y[1], x[2] - y[2]

def all_pos(x):
    a, b, c = x
    return a >= 0 and b >=0 and c >=0

def all_zero(x):
    a, b, c = x
    return a == 0 and b ==0 and c ==0
    
def do_one_case(target, items):
    stack = []
    for i in items:
        new_target = subs(target, i)
        if all_zero(new_target):
            return True
        if all_pos(new_target):
            new_items = items[:]
            new_items.remove(i)
            stack.append((new_target, new_items))

    while stack:
        starget, sitems = stack.pop()
        for i in sitems:
            new_target = subs(starget, i)
            if all_zero(new_target):
                return True 
            if all_pos(new_target):
                new_items = sitems[:]
                new_items.remove(i)
                stack.append((new_target, new_items))

    return False


def main():
    total = int(sys.stdin.readline())
    for x in range(total):
        target = tuple(map(int, sys.stdin.readline().split()))
        foodn = int(sys.stdin.readline())
        foods = []
        for f in range(foodn):
            foods.append(tuple(map(int, sys.stdin.readline().split())))
        
        print 'Case #{}:'.format(x + 1), 'yes' if do_one_case(target, foods) else 'no'


main()




