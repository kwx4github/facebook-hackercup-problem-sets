#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/hash_policy.hpp>
#include<ext/rope>
#define f first
#define s second
//#define mkptr make_shared<nod>
#define mkptr new nod
//#pragma comment(linker,"/STACK:102400000,102400000")
using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;
typedef pair<int,int> par;
typedef pair<par,int> pr;
cc_hash_table<int,null_type> cc[1005][1005];
pr ar[50];
int main(){
    int t,T=0;
    scanf("%d",&t);
    while(t--){T++;
        int a,b,c,n;
        scanf("%d%d%d%d",&a,&b,&c,&n);
        for(int i=0;i<n;i++)
            scanf("%d%d%d",&ar[i].f.f,&ar[i].f.s,&ar[i].s);
        printf("Case #%d: ",T);
        for(int i=0;i<=a;i++)
            for(int j=0;j<=b;j++)
                cc[i][j].clear();
        cc[0][0].insert(0);
        for(int k=0;k<n;k++)
            for(int i=a;i>=0;i--)
                for(int j=b;j>=0;j--)
                    for(int x:cc[i][j])
                        if(x+ar[k].s<=c&&i+ar[k].f.f<=a&&j+ar[k].f.s<=b)
                            cc[i+ar[k].f.f][j+ar[k].f.s].insert(x+ar[k].s);
        if(cc[a][b].find(c)!=cc[a][b].end())
            puts("yes");
        else
            puts("no");

        }
    }
