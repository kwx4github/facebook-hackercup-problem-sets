import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 * Created by shiwangi on 09-01-2015.
 */
public class Hackercup2 {
    static int totA,totB,totC,n;
    static int arra[],arrb[],arrc[];
    public static void main(String args[]) throws IOException {
        InputStreamReader input = new InputStreamReader(System.in);
        BufferedReader br = new BufferedReader(input);
        int cases = Integer.parseInt(br.readLine());
        for (int i = 0; i < cases; i++) {
            String[] token = (br.readLine()).split(" ");
            totA = Integer.parseInt(token[0]);
            totB = Integer.parseInt(token[1]);
            totC = Integer.parseInt(token[2]);
            n = Integer.parseInt(br.readLine());
            arra = new int[n];
            arrc = new int[n];
            arrb = new int[n];
            for(int j=0;j<n;j++){
                String[] tokens = (br.readLine()).split(" ");
                arra[j] = Integer.parseInt(tokens[0]);
                arrb[j] = Integer.parseInt(tokens[1]);
                arrc[j] = Integer.parseInt(tokens[2]);
            }
            if(solve(0,totA,totB,totC))
                System.out.println("Case #" + (i+1) + ": " + "yes");
            else
                System.out.println("Case #" + (i+1) + ": " + "no");
        }
    }

    private static boolean solve(int pos,int statea,int stateb,int statec) {
        if(statea==0 && stateb==0 && statec==0){
           return true;
        }
        if(pos==n)
            return false;
        if(statea<0 ||stateb<0 || statec<0)
            return  false;
        return solve(pos+1,statea-arra[pos],stateb-arrb[pos],statec-arrc[pos]) || solve(pos+1,statea,stateb,statec);

    }
}
