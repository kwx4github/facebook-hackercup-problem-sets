def subset_sum(numbers, target, lst, partial=[]): 
    s = sum([sum(g) for g in partial])
    if s == target: 
        lst.append(partial)
    if s >= target:
        return
    for i in range(len(numbers)):
        n = numbers[i]
        remaining = numbers[i+1:]
        subset_sum(remaining, target, lst, partial + [n]) 

T = int(raw_input())
for t in range(T):
    gp, gc, gf = map(int, raw_input().split(" "))
    N = int(raw_input())
    foods=[]
    for z in range(1, N+1):
        foods.append(tuple(map(int, raw_input().split(" "))))
    candidates=[]
    subset_sum(foods, gp+gc+gf, candidates)
    answer="no"
    for c in candidates:
        zc = zip(*c)
        if sum(zc[0]) == gp and sum(zc[1]) == gc and sum(zc[2]) == gf:
            answer="yes"
            break
    print "Case #%s:" % (t+1), answer
