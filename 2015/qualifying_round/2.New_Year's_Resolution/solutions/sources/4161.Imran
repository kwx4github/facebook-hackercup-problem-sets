#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>

#include<cmath>
#include<iostream>
#include<iomanip>
#include<fstream>

#include<string>
#include<utility>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

#define ii long long int
#define pi 2*acos(0.0)
#define eps 1e-9
#define mem(x,y) memset(x,y,sizeof(x))
#define all(x) x.begin(), x.end()
#define pb push_back
#define sz(a) (int)a.size()
#define inf 2147483640
#define mx 25

using namespace std;

const int debug= 0;
int sampcf[mx][3],PCF[3],n;
bool vis[mx][2097152];
bool dp[mx][2097152];

int on(int n,int k) {
    return n|(1<<k);
}
bool check(int n,int k) {
    return n&(1<<k);
}

bool call(int i,int mask) {
    if (i==n+1) {
        int totPCF[3]={0,0,0},j,k;
        for (j=1;j<=n;++j) {
            if(!check(mask,j-1)) continue;
            for (k=0;k<3;++k) totPCF[k]+=sampcf[j][k];
        }
        bool found=1;
        for (j=0;j<3;++j) if (totPCF[j]!=PCF[j])
        {
            found=0;
            break;
        }
        if (found) return 1;
        return 0;
    }
    if (vis[i][mask]) return dp[i][mask];
    vis[i][mask]=1;

    bool ans=0;
    ans=call(i+1,mask);
    ans=max(ans,call(i+1,on(mask,i-1)));
    return dp[i][mask]=ans;
}

int main()
{
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int t;

    scanf("%d",&t);
    for (int x=1;x<=t;++x) {
        mem(vis,0);
        int i,j;
        for (i=0;i<3;++i) scanf("%d",&PCF[i]);
        scanf("%d",&n);
        for (i=1;i<=n;++i) {
            for (j=0;j<3;++j) scanf("%d",&sampcf[i][j]);
        }
        bool ans=call(1,0);
        printf("Case #%d: ",x);
        if (ans) puts("yes");
        else puts("no");
    }

    return 0;
}
