#include <cstring>
#include <cassert>
#include <cstdio>
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)

typedef long long ll;

class Solver
{
protected:
	virtual void solveTest(int test)
	{
	}
public:
	Solver()
	{

	}
	virtual ~Solver(){}

	void solve()
	{
		int T;
		scanf("%d",&T);
		for(int i=1;i<=T;i++)
			solveTest(i);
	}
};

class In
{
public:
	int nextInt() const
	{
		int t;
		scanf("%d",&t);
		return t;
	}
	string next() const
	{
		string s;
		cin>>s;
		return s;
	}
}in;

int testbit(int n, int m)
{
	return (n>>m)&1;
}

class NewYearResolution:public Solver
{
protected:
	void solveTest(int test)
	{

		string result="no";
		int gp, gc, gf;
		gp=in.nextInt();
		gc=in.nextInt();
		gf=in.nextInt();
		int n=in.nextInt();
		int p[n],c[n], f[n];
		for(int i=0;i<n;i++)
		{
			p[i]=in.nextInt();
			c[i]=in.nextInt();
			f[i]=in.nextInt();
		}

		for(int i=0;i<(1<<n);i++)
		{
			int cp, cc, cf;
			cp=0; cc=0; cf=0;
			REP(j,n)
				if(testbit(i,j))
				{
					cp+=p[j];
					cc+=c[j];
					cf+=f[j];
				}
			if(cp==gp && cc==gc && cf==gf)
			{
				result="yes";
				break;
			}
		}
		printf("Case #%d: %s\n",test,result.c_str());
	}
public:
	NewYearResolution()
	{
	}
};

int main()
{
	NewYearResolution().solve();
}
