let _ =
  let sb = Scanf.Scanning.stdib in
  let cases = Scanf.bscanf sb "%d " (fun s -> s) in
    for ca = 1 to cases do
      let gp = Scanf.bscanf sb "%d " (fun s -> s) in
      let gc = Scanf.bscanf sb "%d " (fun s -> s) in
      let gf = Scanf.bscanf sb "%d " (fun s -> s) in
      let n = Scanf.bscanf sb "%d " (fun s -> s) in
      let p = Array.make n 0 in
      let c = Array.make n 0 in
      let f = Array.make n 0 in
      let _ =
	for i = 0 to n - 1 do
	  p.(i) <- Scanf.bscanf sb "%d " (fun s -> s);
	  c.(i) <- Scanf.bscanf sb "%d " (fun s -> s);
	  f.(i) <- Scanf.bscanf sb "%d " (fun s -> s);
	done
      in
      let res = ref false in
	for i = 0 to 1 lsl n - 1 do
	  let gp = ref gp
	  and gc = ref gc
	  and gf = ref gf in
	    for j = 0 to n - 1 do
	      if i land (1 lsl j) <> 0 then (
		gp := !gp - p.(j);
		gc := !gc - c.(j);
		gf := !gf - f.(j);
	      )
	    done;
	    if !gp = 0 && !gc = 0 && !gf = 0
	    then res := true;
	done;
	if !res
	then Printf.printf "Case #%d: yes\n" ca
	else Printf.printf "Case #%d: no\n" ca;
    done
