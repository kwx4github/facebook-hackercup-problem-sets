import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;


public class HackerCup {
	public static int[][] menu;
	public static boolean Resolution(int[] currentRow, int[] currentSum, int id){
		boolean isTrue = true;
		int[] copy = currentSum.clone();
		for (int i = 0; i < currentSum.length; i++){
			currentSum[i] = currentSum[i] - currentRow[i];
		}
		for (int i = 0; i < currentSum.length; i++){
			if (currentSum[i] != 0)
				isTrue = false;
		}
		if (isTrue) return true;
		if (id == menu.length -1) return false;
		for (int i = 0; i < currentSum.length; i++){
			if (currentSum[i] < 0){
				return Resolution(menu[id+1], copy, id+1);
			}
		}
		return Resolution(menu[id+1], currentSum, id+1) || Resolution (menu[id+1], copy, id+1);
	}
	public static void main(String [] args) throws FileNotFoundException{
		Scanner in = new Scanner(System.in);
		int numbTest = in.nextInt();
		PrintWriter out = new PrintWriter("output.txt");
		for (int i = 0; i < numbTest; i++){
			int [] goal = new int[] {in.nextInt(), in.nextInt(), in.nextInt()};
			int numbOption = in.nextInt();
			menu = new int[numbOption][3];
			for (int j = 0; j < numbOption; j ++){
				menu[j][0] = in.nextInt();
				menu[j][1] = in.nextInt();
				menu[j][2] = in.nextInt();
			}
			String outcase = (Resolution(menu[0], goal, 0)) ? "yes" : "no";
			out.println("Case #" + (i+1) + ": " + outcase);
		}
		in.close();
		out.close();
	}
}
