#include <iostream>
#include <complex>
#include <sstream>
#include <string>
#include <algorithm>
#include <deque>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <vector>
#include <set>
#include <limits>
#include <cstdio>
#include <cctype>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <ctime>
using namespace std;
#define REP(i, j) for(int i = 0; i < (int)(j); ++i)
#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)
#define SORT(v) sort((v).begin(), (v).end())
#define REVERSE(v) reverse((v).begin(), (v).end())
const int MAX_N = 1010;

bool v[MAX_N][MAX_N][MAX_N];
int P, C, F, N; 

void dfs(int n, int p, int c, int f, vector<int> &pv, vector<int> &cv, vector<int> &fv){
  if(p > P || c > C || f > F) return ;
  v[p][c][f] = true;
  if(n < N){
    dfs(n + 1, p + pv[n], c + cv[n], f + fv[n], pv, cv, fv);
    dfs(n + 1, p, c, f, pv, cv, fv);
  }
}

int main() {
  int T; cin >>T;
  REP(t, T){
    memset(v, 0, sizeof(v));
    cin >>P >>C >>F >>N;
    vector<int> p(N), c(N), f(N);
    REP(i, N) cin >>p[i] >>c[i] >>f[i];
    dfs(0, 0, 0, 0, p, c, f);
    cout <<"Case #" <<t + 1 <<": " <<(v[P][C][F] ? "yes" : "no") <<endl;
  }
  return 0;
}
