
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;


class prasoon {

    static class FastScanner {
        BufferedReader s;
        StringTokenizer st;
        
        public FastScanner(){
            st = new StringTokenizer("");
            s = new BufferedReader(new InputStreamReader(System.in));
        }
        
        public FastScanner(File f) throws FileNotFoundException{
            st = new StringTokenizer("");
            s = new BufferedReader (new FileReader(f));
        }
        
        public int nextInt() throws IOException{
            if(st.hasMoreTokens())
                return Integer.parseInt(st.nextToken());
            else{
                st = new StringTokenizer(s.readLine());
                return nextInt();
            }
        }
        
      public double nextDouble() throws IOException{
            if(st.hasMoreTokens())
                return Double.parseDouble(st.nextToken());
            else{
                st = new StringTokenizer(s.readLine());
                return nextDouble();
            }
        }
      
        public long nextLong() throws IOException{
            if(st.hasMoreTokens())
                return Long.parseLong(st.nextToken());
            else{
                st = new StringTokenizer(s.readLine());
                return nextLong();
            }
        }
        
        public String nextString() throws IOException{
            if(st.hasMoreTokens())
                return st.nextToken();
            else{
                st = new StringTokenizer(s.readLine());
                return nextString();
            }
            
        }
        public String readLine() throws IOException{
            return s.readLine();
        }
        
        public void close() throws IOException{
            s.close();
        }
        
    }
      private static FastScanner s = new FastScanner();   
      private static PrintWriter ww = new PrintWriter(new OutputStreamWriter(System.out));
    
     public static void main(String[] args) throws IOException 
     {
       int test=s.nextInt();int par =1;
       while(test-->0)
       { 
           int p1=s.nextInt();int c1=s.nextInt();int f1=s.nextInt();boolean arc=false;
           int t1=s.nextInt();
           int a[][] = new int[t1][3];
           int psr[]=new int[t1];
        for(int i=0;i<t1;i++)
        {
            psr[i]=s.nextInt();
           a[i][0]=psr[i]; a[i][1]=s.nextInt();a[i][2]=s.nextInt();
        }
         
          arc=archit(psr,a,p1,c1,f1);
          if(arc)
               System.out.println("Case #"+par+" :"+" yes");
          else
             System.out.println("Case #"+par+" :"+" no"); 
          par++;
       }
         
         s.close();
         ww.close();
     }
     public static int gcd(int a, int b){
        return b == 0 ? a : gcd(b,a%b);
    }
  private static boolean archit(int array[],int a[][],int target0,int target1,int target2)
{
  int numOfSubsets = 1 << array.length;boolean flag=false; 

  for(int i = 0; i < numOfSubsets; i++)
 {
    int pos = array.length - 1;                                
   int bitmaskk = i;
   int sum=0;int sum2=0;int sum3=0;


   while(bitmaskk > 0)
   {
    if((bitmaskk & 1) == 1)
    {
        sum+=array[pos];
        sum2+=a[pos][1];sum3+=a[pos][2];
        if(sum==target0)
        {
            if(sum2==target1 && sum3==target2)
            {
              flag=true;break;   
            }
        }
    
    }
    
    bitmaskk >>= 1;
    pos--;
   }
   if(flag)break;
 }
  return flag;
}

}
