using System;
using System.Collections.Generic;
using System.Linq;
namespace HackerCupTrial
{
 
class Program
    {
        static void Main(string[] args)
        {
            var result = "";
            int val1 = Convert.ToInt32(Console.ReadLine());
            for (int i = 0; i < val1; i++)
            {
                int[] totalsStr = Console.ReadLine().Split(' ').Select(x=>Convert.ToInt32(x)).ToArray();
                int num = Convert.ToInt32(Console.ReadLine());
                var list1 = new List<int>();
                var list2 = new List<int>();
                var list3 = new List<int>();
                
                for (int j = 0; j < num; j++)
                {
                    var t = Console.ReadLine();
                    list1.Add(Convert.ToInt32(t.Split(' ')[0]));
                    list2.Add(Convert.ToInt32(t.Split(' ')[1]));
                    list3.Add(Convert.ToInt32(t.Split(' ')[2]));
                }
                
                var matches = new List<int>();
                var tt = Combinations(list1.ToList());
                var c = -1;
                foreach (var list in tt)
                {
                    c++;
                    var sum = 0;
                    foreach (var j in list)
                    {
                        sum += list1[j];
                    }

                    if (sum == totalsStr[0])
                    {
                        matches.Add(c);
                    }
                }

                var finalMatch = false;
                
                foreach (var m in matches)
                {
                    var match = tt[m];
                    if (match.Sum(x => list2[x]) == totalsStr[1] && match.Sum(x => list3[x]) == totalsStr[2])
                        finalMatch = true;
                }


                if (finalMatch)
                    result += "Case #" + (i + 1) + ":" + " yes"+Environment.NewLine;
                else
                    result += "Case #" + (i + 1) + ":" + " no" + Environment.NewLine;
            }
        }

	public static List<List<int>> Combinations(List<int> array)
        {
            var res = new List<List<int>>();
            res.Add(new int[1]{ 0 }.ToList());
            var count = 0;
            foreach (var i in array.Skip(1))
            {
                count++;
                var t = new List<List<int>>(); 
                foreach (var r in res)
                {
                    var temp = new List<int>();
                    temp.Add(count);
                    temp.AddRange(r);
                    t.Add(temp);
                }

                res.AddRange(t);
                res.Add(new int[1] { count }.ToList());
            }

            return res;
        }
}
}