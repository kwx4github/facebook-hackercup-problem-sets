#include<iostream>
#include<fstream>
using namespace std;
bool isSubsetSum(int set[][3], int n, int sum[3])
{
   // Base Cases
   if (sum[0] == 0 && sum[1]==0 && sum[2]==0)
     return true;
   if (n == 0 && (sum[0] != 0 || sum[1]!=0 || sum[2]!=0))
     return false;
 
   // If last element is greater than sum, then ignore it
   if (set[n-1][0] > sum[0] && set[n-1][1] > sum[1] && set[n-1][2] > sum[2])
     return isSubsetSum(set, n-1, sum);
 
   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
	int sum2[3];
	sum2[0]=sum[0]-set[n-1][0];
	sum2[1]=sum[1]-set[n-1][1];
	sum2[2]=sum[2]-set[n-1][2];
   return isSubsetSum(set, n-1, sum) || isSubsetSum(set, n-1, sum2);
}
int main()
{
	ifstream in;
	ofstream out;
	in.open("F:\\DefaultCodes\\fhc\\new_years_resolution.txt");
	out.open("F:\\DefaultCodes\\fhc\\output2.txt");
	int t, casee=0;
	in>>t;
	while(t--)
	{
		casee++;
		int sum[3], set[21][3], n, i;
		for(i=0; i<3; i++)
			in>>sum[i];
		in>>n;
		for(i=0; i<n; i++){
			in>>set[i][0]>>set[i][1]>>set[i][2];
		}
		out<<"Case #"<<casee<<": ";
		if(isSubsetSum(set, n, sum))
			out<<"yes"<<"\n";
		else
			out<<"no"<<"\n";
	}
	return 0;
}
