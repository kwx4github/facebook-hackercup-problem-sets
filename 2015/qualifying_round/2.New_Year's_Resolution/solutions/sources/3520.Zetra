#include <iostream>
#include <algorithm>
#include <string>
using namespace std;

struct Makanan
{
    int p, c, f;
};

void comb(int N, int K)
{
    string bitmask(K, 1);
    bitmask.resize(N, 0);

    do {
        for (int i = 0; i < N; ++i)
        {
            if (bitmask[i]) cout << " " << i;
        }
        cout<<endl;
    } while (prev_permutation(bitmask.begin(), bitmask.end()));
}

int main()
{
    int t;
    cin>>t;

    for (int l=0;l<t;l++)
    {
        int gp,gc,gf,n;
        cin>>gp>>gc>>gf>>n;
        Makanan makanan[n];
        int index[n];
        for (int i=0;i<n;i++)
        {
            cin>>makanan[i].p>>makanan[i].c>>makanan[i].f;
            index[i] = i;
        }

        int sump = 0, sumc = 0, sumf = 0;
        bool bisa = false;
        for (int i=1;i<=n;i++)
        {
            string bitmask(i, 1);
            bitmask.resize(n, 0);

            do
            {
                sump = 0;
                sumc = 0;
                sumf = 0;
                for (int j=0;j<n;++j)
                {
                    if (bitmask[j])
                    {
                        sump += makanan[j].p;
                        sumc += makanan[j].c;
                        sumf += makanan[j].f;
                    }
                }
                if (sump == gp && sumc == gc && sumf == gf)
                {
                    bisa = true;
                    break;
                }
            } while (prev_permutation(bitmask.begin(), bitmask.end()));

            if (bisa)
                break;
        }

        if (bisa)
            cout<<"Case #"<<l+1<<": yes\n";
        else
            cout<<"Case #"<<l+1<<": no\n";

    }

    return 0;
}
