#!/usr/bin/python

import sys, datetime, itertools

def solve(n, p, c, f, foods):
    for i in xrange(1, n+1):
        for comb in itertools.combinations(xrange(n), i):
            x = y = z = 0
            for j in comb:
                x += foods[j][0]
                y += foods[j][1]
                z += foods[j][2]
                if x >= p or y >= c or z >= f:
                    break
            if x == p and y == c and z == f:
                return 'yes'
    return 'no'


def main():
    if len(sys.argv) < 2:
        print 'Please provide input file'
        print 'Usage: %s inputfile [outputfile]' % sys.argv[0]
        return
    timestart = datetime.datetime.now()

    try:
        inputFile = open(sys.argv[1])
    except:
        print 'Failed to read input file %s' % sys.argv[1]
        return
    try:
        outputFile = open(sys.argv[2], 'w') if len(sys.argv) >= 3 else None
    except:
        print 'Failed to create output file %s' % sys.argv[2]
        return

    testCases = int(inputFile.readline().strip())

    print '-----------------'
    print 'Test cases: %d ' % testCases
    print 'No output file' if len(sys.argv) < 3 else 'Writing to %s' % sys.argv[2]
    print '-----------------'

    for testCaseNumber in range(1, testCases+1):

        p, c, f = map(int, inputFile.readline().strip().split())
        
        n = int(inputFile.readline().strip())

        foods = []
        for i in range(n):
            foods.append(map(int, inputFile.readline().strip().split()))

        string = 'Case #%d: %s' % (testCaseNumber, solve(n, p, c, f, foods))

        print string
        if outputFile:
            outputFile.write(string + '\n')

    print '-----------------'
    print 'Written to %s' % sys.argv[2] if outputFile else 'No output file'
    print 'Elapsed time: %s' % (datetime.datetime.now() - timestart)
    print '-----------------'

    inputFile.close()
    if outputFile:
        outputFile.close()

if __name__=='__main__':
    main()
