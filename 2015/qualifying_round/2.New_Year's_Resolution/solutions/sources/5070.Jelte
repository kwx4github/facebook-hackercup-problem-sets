package fhc;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class NewYearsResolution {

  NewYearsResolution(String inputFile) throws IOException, FileNotFoundException {
    FileInputStream fis = new FileInputStream(inputFile);
    DataInputStream in = new DataInputStream(fis);
    BufferedReader br = new BufferedReader(new InputStreamReader(in));
    String line = null;
    System.out.println("Total test cases: " + br.readLine());
    int n = 1;
    while((line = br.readLine()) != null) {
      String[] s = line.split(" ");
      List<String[]> products_old = new ArrayList<String[]>(); 
      List<int[]> products = new ArrayList<int[]>();
      
      // searchArray bepalen
      int[] searchArray = new int[3];
      searchArray[0] = Integer.parseInt(s[0]);
      searchArray[1] = Integer.parseInt(s[1]);
      searchArray[2] = Integer.parseInt(s[2]);
      
      // products bepalen
      int num = Integer.valueOf(br.readLine());
      for (int i = 1; i <= num; i++) { 
        line = br.readLine();
        
        int[] temp = new int[3];
        String[] splitLine = line.split(" ");
        temp[0] = Integer.parseInt(splitLine[0]);
        temp[1] = Integer.parseInt(splitLine[1]);
        temp[2] = Integer.parseInt(splitLine[2]);
        products.add(temp);
        products_old.add(line.split(" ")); 
      }
      
      // start search
      boolean test = sumOfSubset(products, searchArray);
      if (test){
        System.out.println("Case #" + n + ": yes");
      } else {
        System.out.println("Case #" + n + ": no");
      }
      n++;
    }
    br.close();
  }
  
  public boolean sumOfSubset(List<int[]> products, int[] searchValue){
    int[] product = new int[3];
    
    int[] tempSearchValue = new int[3];
    for (int i = 0; i < products.size() ; i++){
      product = products.get(i);
      tempSearchValue[0] += product[0];
      tempSearchValue[1] += product[1];
      tempSearchValue[2] += product[2];
    }
    if (tempSearchValue[0] < searchValue[0] ||
        tempSearchValue[1] < searchValue[1] ||
        tempSearchValue[2] < searchValue[2] ){
      return false;
    }
    
    for (int i = products.size()-1; i>=0; i--){
      product = products.get(i);
      
      if  ( searchValue[0] - product[0] == 0 &&
            searchValue[1] - product[1] == 0 &&
            searchValue[2] - product[2] == 0
        ){ return true; }
      for (int j = 0; j < 3 ;j++){
        if  (searchValue[j] - product[j] < 0){ 
          products.remove(i);
          break;
        }
      }
    }
    
    for (int i = 0; i < products.size() ; i++){
      List<int[]> tempList = new ArrayList<int[]>();
      int[] tempSearchArray = new int[3];
      
      for (int[] p : products){ tempList.add(p); }
      tempList.remove(i);
      tempSearchArray[0] = searchValue[0] - products.get(i)[0];
      tempSearchArray[1] = searchValue[1] - products.get(i)[1];
      tempSearchArray[2] = searchValue[2] - products.get(i)[2];
      if (sumOfSubset(tempList, tempSearchArray)){
       return true; 
      }
    }
    return false;
  }

  public static void main(String[] args) throws FileNotFoundException, IOException{
    new NewYearsResolution("C:\\TEMP\\NewYearsResolution.txt");
  }

}
