#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <cmath>
#include <climits>
#include <cfloat>
#include <map>
#include <utility>
#include <set>
#include <iostream>
#include <fstream>
#include <memory>
#include <string>
#include <vector>
#include <list>
#include <algorithm>
#include <functional>
#include <sstream>
#include <complex>
#include <stack>
#include <queue>
#include <windows.h>

using namespace std;
#pragma warning(disable: 4996)

#define OUTPUTLOG2(X,Y)\
{\
	char msg[1024];\
	sprintf( msg, X, Y );\
	OutputDebugString(msg);\
}
#define OUTPUTLOG OutputDebugString

int g[3];
vector<vector<int>> F;
int N;

bool f( int n, int sp, int sc, int sf )
{
	if( n == N ){
		if( g[0] == sp && g[1] == sc && g[2] == sf )
			return true;
		else
			return false;
	}

	return f(n+1, sp, sc, sf) | f(n+1, sp+F[n][0], sc+F[n][1], sf+F[n][2] );
}

void main(int argc, char*argv[]) // usage: main.exe in.txt out.txt
{
	ifstream fin(argv[1]);
	if( fin == NULL ){
		OUTPUTLOG2("cannot open in-file : %s\n", argv[1]);
		return;
	}
	FILE* fout = fopen(argv[2],"w");
	if( fin == NULL ){
		OUTPUTLOG2("cannot open out-file : %s\n", argv[2]);
		return;
	}

/////////////////////////////
	char line[1024];
	int CASE;
	fin >> CASE;
	for( int test_case = 1; test_case <= CASE; test_case++ ){
	/////////////////////////////
		fin >> g[0]; fin >> g[1]; fin >> g[2];
		fin >> N;
		F.assign(N, vector<int>(3));
		for( int i = 0; i < N; i++ ){
			for( int j = 0; j < 3; j++ ){
				fin >> F[i][j];
			}
		}
		if( f( 0, 0, 0, 0 ) ){
			fprintf(fout,"Case #%d: yes\n", test_case);
		}else{
			fprintf(fout,"Case #%d: no\n", test_case);
		}

	/////////////////////////////
		if( fin.eof() ){
			if( test_case != CASE ){
				OUTPUTLOG( "in-file error:eof" );
			}
			break;
		}
	}

	OUTPUTLOG( "program end" );
}