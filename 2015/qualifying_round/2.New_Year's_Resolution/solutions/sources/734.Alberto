// Facebook Hacker Cup 2015 Qualification Round
// New Year's Resolution
// 10/01/2015

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <deque>
#include <iomanip>
#include <iostream>
#include <queue>
#include <list>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
#define INF 1000000000
#define FOR(i, a, b) for(int i=int(a); i<int(b); i++)
#define FORC(cont, it) for(typeof((cont).begin()) it=(cont).begin(); it!=(cont).end(); it++)
#define pb push_back
#define mp make_pair
typedef int mint;
#define int ll
using namespace std;
typedef long long ll; typedef pair<int, int> ii;
typedef vector<int> vi; typedef vector<ii> vii;
typedef vector<vi> vvi;

struct triple {
    int a, b, c;
    triple() {}
    triple(int a, int b, int c) : a(a), b(b), c(c) {}
    triple operator+(triple T) {
        return triple(a + T.a, b + T.b, c + T.c);
    }
};

bool valid (const int &N, const triple &goal, const vector<triple> &food) {
    int M = pow(2, N);
    for (int i = 0; i < M; i++) {
        triple sum(0, 0, 0);
        for (int j = 0; j < N; j++) {
            if (i & 1<<j) {
                sum = sum + food[j];
            }
        }
        if (goal.a == sum.a && goal.b == sum.b && goal.c == sum.c)
            return true;
    }
    return false;
}

mint main()
{
    int T;
    cin >> T;
    for (int tc = 1; tc <= T; tc++) {
        triple goal;
        int N;
        cin >> goal.a >> goal.b >> goal.c;
        cin >> N;
        vector<triple> food(N, triple());
        for (int i = 0; i < N; i++)
            cin >> food[i].a >> food[i].b >> food[i].c;
        cout << "Case #" << tc << ": " << (valid(N, goal, food) ? "yes" : "no") << endl;
    }
}
