package com.jmc;

import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class NewYearsResolution {
    static List<String> getLines(String fileName) throws IOException {
        if (new File(fileName).exists()) {
            String line;
            ArrayList<String> lines = new ArrayList<String>();
            BufferedReader reader = new BufferedReader(new FileReader(fileName));
            while((line=reader.readLine()) != null) {
                lines.add(line);
            }
            return lines;
        } else {
            return null;
        }
    }

    public static void main(String[] args) throws Exception {
        String filename;
        if (args.length < 1) {
            filename = NewYearsResolution.class.getSimpleName() + ".txt";
        } else {
            filename = args[0];
        }
        System.out.println("Running with filename: " + filename);

        List<String> lines = getLines(filename);
        if (lines == null) {
            System.out.println("Error: can't find file [" + filename + "]");
            System.exit(0);
        }

        String outfile = filename.replace("txt", "out");
        PrintWriter out = new PrintWriter(new FileOutputStream(outfile));

        int tests = Integer.parseInt(lines.get(0));
        int currLine = 1;
        for (int i = 0; i < tests; i++) {
            int wantedAmounts[] = new int[3], foodSpecs[][];
            String wantedAmountsStrs[] = lines.get(currLine++).split(" ");
            wantedAmounts[0] = Integer.parseInt(wantedAmountsStrs[0]);
            wantedAmounts[1] = Integer.parseInt(wantedAmountsStrs[1]);
            wantedAmounts[2] = Integer.parseInt(wantedAmountsStrs[2]);
            int numFoods = Integer.parseInt(lines.get(currLine++));
            foodSpecs = new int[numFoods][3];
            for (int j = 0; j < numFoods; j++) {
                String foodSpecsStrs[] = lines.get(currLine++).split(" ");
                foodSpecs[j][0] = Integer.parseInt(foodSpecsStrs[0]);
                foodSpecs[j][1] = Integer.parseInt(foodSpecsStrs[1]);
                foodSpecs[j][2] = Integer.parseInt(foodSpecsStrs[2]);
            }
            int currTotals[] = {0, 0, 0};
            boolean isPossible = checkPossible(0, currTotals, wantedAmounts, foodSpecs);
            out.println("Case #" + (i+1) + ": " + (isPossible ? "yes" : "no"));
        }
        out.close();
        System.out.println("Output in filename: " + outfile);
    }

    static boolean checkPossible(int startIndex, int currTotals[], int wantedAmounts[], int foodSpecs[][]) {
        for (int i = startIndex; i < foodSpecs.length; i++) {
            int newCurrTotal[] = {currTotals[0] + foodSpecs[i][0], currTotals[1] + foodSpecs[i][1], currTotals[2] + foodSpecs[i][2]};
            if (newCurrTotal[0] == wantedAmounts[0] &&
                    newCurrTotal[1] == wantedAmounts[1] &&
                    newCurrTotal[2] == wantedAmounts[2]) {
                return true;
            }
            if (newCurrTotal[0] < wantedAmounts[0] &&
                    newCurrTotal[1] < wantedAmounts[1] &&
                    newCurrTotal[2] < wantedAmounts[2]) {
                // recurse
                if(checkPossible(i+1, newCurrTotal, wantedAmounts, foodSpecs)) {
                    return true;
                }
            }
        }
        return false;
    }
}
