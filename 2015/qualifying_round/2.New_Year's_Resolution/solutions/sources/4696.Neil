#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

int power(int n)
{
    int base = 2;
    int result = 1;
    while(n)
    {
        if(n%2 ==1)
        {
            result = result * base;
        }
        n = n/2;
        base = base * base;

    }
    return result;
}
struct nutrients
{
    int P;
    int C;
    int F;
};
int main()
{
    int T;
    scanf("%d",&T);
    for(int master_it =0;master_it<T;master_it++)
    {
        int p,c,f,N;
        scanf("%d %d %d",&p,&c,&f);
        nutrients* wanted = new nutrients;
        wanted->P = p;
        wanted->C = c;
        wanted->F = f;
        scanf("%d",&N);
        nutrients* amount[N];
        //int sum=0;
        int elements=0;
        for(int i=0;i<N;i++)
        {
            int a,b,c;

            scanf("%d %d %d",&a,&b,&c);
            if(a>wanted->P || b>wanted->C || c>wanted->F)
            {
                //amount[i] = NULL;
            }
            else{
                nutrients* one = new nutrients;
                one->P = a;
                one->C = b;
                one->F = c;
                amount[elements] = one;
                elements++;
            }
        }
        int pow_of_n = power(elements);
        int master_found = 0;
        for(int i=0;i<pow_of_n;i++)
        {
            int summerp = 0;
            int summerc = 0;
            int summerf = 0;
            for(int j=0;j<elements;j++)
            {
                if(i & (1<<j))
                {
                    summerp= summerp+amount[j]->P;
                    summerc= summerc+amount[j]->C;
                    summerf= summerf +amount[j]->F;
                }
                if(summerp==wanted->P && summerc==wanted->C && summerf==wanted->F)
                {
                    master_found =1;
                    printf("Case #%d: yes\n",master_it+1);
                    break;
                }
            }
            if(master_found==1)
            {
                break;
            }
        }

        if(master_found==0)
        {
            printf("Case #%d: no\n",master_it+1);
        }

    }

}
