// pre-written code {{{
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <queue>
#include <numeric>
#include <iostream>
#include <cassert>
#include <set>
#define FOR(i,n) for(int _n=n,i=0;i<_n;++i)
#define FR(i,a,b) for(int _b=b,i=a;i<_b;++i)
#define CL(x) memset(x,0,sizeof(x))
#define PN printf("\n");
#define MP make_pair
#define PB push_back
#define SZ size()
#define ALL(x) x.begin(),x.end()
#define FORSZ(i,v) FOR(i,v.size())
#define FORIT(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
using namespace std;
typedef vector<int> VI;
typedef vector<string> VS;
typedef long long LL;
///////////////////////////////////////////////////////////////////////////////////
// }}}




void solve(){
  int A,B,C;
  scanf("%d %d %d",&A,&B,&C);
  int n;
  scanf("%d",&n);
  VI a,b,c;
  FOR(i,n)  {
    int x,y,z;
    scanf("%d %d %d",&x,&y,&z);
    a.PB(x); b.PB(y); c.PB(z);    
  }
  FOR(mask,(1<<n)){
    int sa=0,sb=0,sc=0;
    FOR(i,n) {
      if(mask&(1<<i)) {
        sa+=a[i];
        sb+=b[i];
        sc+=c[i];
      }      
    }
    if(sa==A && sb==B && sc==C) {
      printf("yes\n");
      return;
    }
  }
  printf("no\n");
}

int main(){
  int pvs; scanf("%d",&pvs);
  FR(ppp,1,pvs+1){
     printf("Case #%d: ",ppp);

     solve();
  }
}


// vim: fdm=marker:commentstring=\ \"\ %s:nowrap:autoread
