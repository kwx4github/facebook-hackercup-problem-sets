#include <iostream>

using namespace std;

struct Food {
  int p;
  int c;
  int f;
  Food(): p(0), c(0), f(0) {}
  Food(int p, int c, int f): p(p), c(c), f(f) {}
  Food operator += (Food x) { 
    p = p + x.p;
    c = c + x.c;
    f = f + x.f;
    return *this;
  }
  bool operator == (Food x) { return (p == x.p) && (c == x.c) && (f == x.f); }
};

istream& operator >> (istream& in, Food& x) {
  in >> x.p >> x.c >> x.f;
  return in;
}

Food food[21];
int main() {
  int T;
  cin >> T;
  for (int t = 1; t <= T; ++t) {
    Food g;
    cin >> g;
    int N;
    cin >> N;
    for (int n = 0; n < N; ++n) {
      cin >> food[n];
    }
    string ans = "no";
    for (int mask = 0; mask < (1 << N); ++mask) {
      Food sum;
      for (int i = 0; i < N; ++i)
        if (mask & (1 << i))
          sum += food[i];
      if (sum == g) {
        ans = "yes";
      }
    }
    cout << "Case #" << t << ": " << ans << endl;
  }
  return 0;
}