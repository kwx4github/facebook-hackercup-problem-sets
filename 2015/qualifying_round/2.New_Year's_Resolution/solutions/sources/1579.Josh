import java.io.*;
import java.util.*;

public class Resolution {
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(new File("input.txt"));
		int T = in.nextInt();
		for (int casenum = 1; casenum <= T; casenum++) {
			System.out.printf("Case #%d: ", casenum);
			
			int GP = in.nextInt();
			int GC = in.nextInt();
			int GF = in.nextInt();
					
			int N = in.nextInt();
			
			int[][] vals = new int[N][3];
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < 3; j++) {
					vals[i][j] = in.nextInt();
				}
			}
			
			boolean ans = recurse(0, vals, new int[] {0, 0, 0}, new int[] { GP, GC, GF});
			
			System.out.println(ans ? "yes" : "no");
		}
	}
	
	static boolean recurse(int pos, int[][] vals, int[] cur, int[] goal) {
		boolean allSame = true;
		for (int i = 0; i < 3; i++) {
			if (cur[i] != goal[i]) {
				allSame = false; break;
			}
		}
		if (allSame) {
			return true;
		}
		for (int i = 0; i < 3; i++) {
			if (cur[i] > goal[i]) return false;
		}
		if (pos == vals.length) return false;
		
		if (recurse(pos + 1, vals, cur, goal)) return true;
		for (int i = 0; i < 3; i++) {
			cur[i] += vals[pos][i];
		}
 		boolean ans = recurse(pos + 1, vals, cur, goal);
 		for (int i = 0; i < 3; i++) {
 			cur[i] -= vals[pos][i]; 
 		}
 		return ans;
	}
}
