#include <iostream>
#include <fstream>
#include <algorithm>
#include <utility>
#include <map>
#include <set>
#include <vector>
#include <bitset>
#include <string>
#include <iomanip>
#include <sstream>
#include <queue>
#include <stack>

using namespace std;

typedef long long int64;

int64 P[20], C[20], F[20];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int T;
    cin >> T;

    for (int t = 1; t <= T; t++) {
        int64 gp, gc, gf;
        cin >> gp >> gc >> gf;

        int N;
        cin >> N;
        for (int i = 0; i < N; i++) {
            cin >> P[i] >> C[i] >> F[i];
        }

        unsigned long long lim = (1UL << N) - 1;
        bool possible = false;
        for (unsigned long long mask = 0; mask <= lim; mask++) {
            int64 p, c, f;
            p = c = f = 0;

            for (int i = 0; i < N; i++) {
                if ((mask >> i) & 1) {
                    p += P[i];
                    c += C[i];
                    f += F[i];
                }
            }

            if (p == gp && c == gc && f == gf) {
                possible = true;
                break;
            }
        }

        cout << "Case #" << t << ": ";
        if (possible)
            cout << "yes\n";
        else
            cout << "no\n";
    }
    return 0;
}
