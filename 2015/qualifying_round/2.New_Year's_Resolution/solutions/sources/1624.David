"""
This script may use libraries publicly available at: https://github.com/grokit/dcore.

Does this solution solve:
   Small: ?.
   Big:   ?.
"""

import dcore.gcj_boot as boot

class Problem:
    pass

def partyProblem(A, i):

    if i == len(A):
        yield A
        return

    yield from partyProblem(A, i+1)
    
    A[i] = 1
    yield from partyProblem(A, i+1)
    A[i] = 0

def readProblem(fh):

    zp,c,f = [int(x) for x in fh.readline().strip().split()]
    n = int(fh.readline())

    F = []
    for i in range(n):
        pp, cc, ff = [int(x) for x in fh.readline().strip().split()]
        F.append( (pp,cc,ff) )

    p = Problem()
    p.PCF = (zp,c,f)
    p.F = F
    return p

def solve(p):
    PartyRooster = [0]*len(p.F)
    for A in partyProblem(PartyRooster, 0):
        T = [0,0,0]
        for i,a in enumerate(A):
            if a == 1:
                for j,pcf in enumerate(p.F[i]):
                    T[j] += pcf
        T = tuple(T)
        if T == p.PCF:
            return "yes"
    return "no" 


boot.solve(solve, readProblem, '.*large')
