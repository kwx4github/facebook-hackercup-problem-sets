#include <iostream>
#include <vector>
#include <tuple>
#include <valarray>

using namespace std;

int main(int argc, char const *argv[]) {
    ios::sync_with_stdio(false);

    int t;
    cin >> t;

    for (int cs = 0; cs < t; ++cs) {
        valarray <int> target(3);
        for (int i = 0; i < 3; ++i) {
            cin >> target[i];
        }
        int n;
        cin >> n;
        vector <valarray <int>> dp(1 << n, valarray <int>(3));

        for (int i = 0; i < n; ++i) {
            valarray <int> current(3);
            for (int j = 0; j < 3; ++j) {
                cin >> current[j];
            }
            for (int mask = 0; mask < (1 << i); mask++) {
                dp[mask | (1 << i)] = dp[mask] + current;
            }
        }

        bool possible = false;
        for (int mask = 0; mask < (1 << n); ++mask) {
            possible = possible or (target[0] == dp[mask][0] and target[1] == dp[mask][1] and target[2] == dp[mask][2]);
        }

        cout << "Case #" << cs + 1 << ": " << (possible ? "yes" : "no") << endl;
    }
    return 0;
}
