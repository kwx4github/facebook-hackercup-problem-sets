#!/usr/bin/python2.7
import operator
import sys


def is_valid(goal, foods, soln, op=operator.le):
    nutrients = [0, 0, 0]
    for food, used in zip(foods, soln):
        if used:
            for i, v in enumerate(food):
                nutrients[i] += v
    return all((op(v, g) for v, g in zip(nutrients, goal)))


def successors(soln):
    return [list(soln) + [False], list(soln) + [True]]


if __name__ == '__main__':
    for z in range(int(sys.stdin.readline().strip())):
        ans = 'no'
        goal = [int(x) for x in sys.stdin.readline().strip().split()]
        n = int(sys.stdin.readline().strip())
        foods = [[int(x) for x in sys.stdin.readline().strip().split()] for i in range(n)]
        q = [[]]
        while q:
            soln = q.pop()
            if len(soln) < n and is_valid(goal, foods, soln):
                q.extend(successors(soln))
            elif len(soln) == n and is_valid(goal, foods, soln, op=operator.eq):
                ans = 'yes'
                break
        print('Case #%d: %s' % (z + 1, ans))
