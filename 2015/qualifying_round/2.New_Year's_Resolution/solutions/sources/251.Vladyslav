//#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 2e18 + 7;
const long long mod = 1e9 + 7;
const double eps = 1e-9;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i, n) for (int (i)=0; (i)<(n); ++(i))
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int t;

int n;
int a[25], b[25], c[25];
int A, B, C;

int main(void) {
    #ifdef nobik
        freopen("input.txt", "rt", stdin);
        freopen("output.txt", "wt", stdout);
    #endif
    scanf("%d", &t);
    for (int e = 0; e < t; ++e) {
        scanf("%d %d %d", &A, &B, &C);
        scanf("%d", &n);
        for (int i = 0; i < n; ++i) {
            scanf("%d %d %d", &a[i], &b[i], &c[i]);
        }
        bool yes = false;
        for (int i = 0; i < (1 << n); ++i) {
            int na = 0, nb = 0, nc = 0;
            for (int j = 0; j < n; ++j) {
                if (i & (1 << j)) {
                    na += a[j];
                    nb += b[j];
                    nc += c[j];
                }
            }
            if (na == A && nb == B && nc == C) {
                yes = true;
                break;
            }
        }
        cout << "Case #" << e + 1 << ": " << (yes ? "yes" : "no") << "\n";
    }
    return 0;
}
