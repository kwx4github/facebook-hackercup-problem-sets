#include <cstdio>
#include <unordered_set>
#include <vector>

using namespace std;

const int maxv = 1001;
unordered_set<int> was;

int n;
vector<int> w;
int a, b, c;

bool go() {
  if (!a && !b && !c)
    return true;
  if (a < 0 || b < 0 || c < 0)
    return false;

  int index = a + maxv * (maxv * b + c);
  if (was.count(index))
    return false;

  for (int t = 0; t < 3 * n; t += 3) {
    a -= w[t];
    b -= w[t + 1];
    c -= w[t + 2];
    bool ans = go();
    a += w[t];
    b += w[t + 1];
    c += w[t + 2];
    if (ans)
      return true;
  }

  was.insert(index);
  return false;
}

bool solve() {
  scanf("%d%d%d%d", &a, &b, &c, &n);
  was.clear();
  w.resize(3 * n);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < 3; j++) {
      scanf("%d", &w[3 * i + j]);
    }
  }
  return go();
}

int main() {
  int T;
  scanf("%d", &T);
  for (int t = 1; t <= T; t++) {
    printf("Case #%d: %s\n", t, solve() ? "yes" : "no");
  }
  return 0;
}
