#include <iostream>

using namespace std;

int req[3];
int n;
int item[20][3];

bool dfs(int d) {
  if (req[0] == 0 && req[1] == 0 && req[2] == 0) {
    return true;
  }
  if (req[0] < 0 || req[1] < 0 || req[2] < 0) {
    return false;
  }
  if (d >= n) {
    return false;
  }
  if (dfs(d+1)) {
    return true;
  }
  req[0] -= item[d][0];
  req[1] -= item[d][1];
  req[2] -= item[d][2];
  bool ret = dfs(d+1);
  req[0] += item[d][0];
  req[1] += item[d][1];
  req[2] += item[d][2];
  return ret;
}

int main() {
  int t;
  cin >> t;
  for (int ca = 1; ca <= t; ca++) {
    cin >> req[0] >> req[1] >> req[2];
    cin >> n;
    for (int i = 0; i < n; i++) {
      cin >> item[i][0] >> item[i][1] >> item[i][2];
    }
    if (dfs(0)) {
      cout << "Case #" << ca << ": yes\n";
    } else {
      cout << "Case #" << ca << ": no\n";
    }
  }

  return 0;
}
