def minus(cal1, cal2):
    res = cal1[:]
    for j in range(3):
        res[j] -= cal2[j]
    return res


def recursive(foods_in, foods, req_calories):
    if req_calories[0] < 0 or req_calories[1] < 0 or req_calories[2] < 0:
        return False
    if req_calories[0] == 0 and req_calories[1] == 0 and req_calories[2] == 0:
        return True
    for i in range(len(foods)):
        if i not in foods_in:
            new_foods_in = foods_in[:]
            new_foods_in.append(i)
            result = recursive(new_foods_in, foods,
                               minus(req_calories, foods[i]))
            if result:
                return True
    return False


def main():
    with open('new_years_resolution.txt', 'r') as in_file:
        with open('output.txt', 'w') as out_file:
            n_cases = int(in_file.readline()[:-1])
            for iteration in range(n_cases):
                calories = in_file.readline()[:-1]
                req_calories = [int(val) for val in calories.split()]
                n_foods = int(in_file.readline()[:-1])
                foods = []
                for food_number in range(n_foods):
                    food_calories_str = in_file.readline()[:-1]
                    food_calories = [int(val) for val in food_calories_str.split()]
                    foods.append(food_calories)
                result = recursive([], foods, req_calories)
                print foods
                print req_calories
                if result:
                    out_file.write('Case #{it}: yes\n'
                                   .format(it=iteration + 1))
                else:
                    out_file.write('Case #{it}: no\n'
                                   .format(it=iteration + 1))


if __name__ == '__main__':
    main()
