#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <cstdio>
#include <deque>
#include <stack>
#include <string>
#include <ctime>
#include <list>
#include <cstdlib>
#include <algorithm>
#include <fstream>
#include <cmath>
#include <queue>
#include <sstream>
#include <unordered_set>
#include <unordered_map>
#include <assert.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>

#define mp make_pair
#define pb push_back

#define _USE_MATH_DEFINES
#define pi M_PI
#define endl '\n'

// using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector <vector<pair<int, ll> > > graph;
// typedef tree <ll,
//     null_type,
//     less <ll>,
//     rb_tree_tag,
//     tree_order_statistics_node_update> oset; // order_of_key, ...

int main()
{
    int T;
    cin >> T;
    for (int t = 0; t < T; t++)
    {
        ll a, b, c;
        cin >> a >> b >> c;
        int n;
        cin >> n;
        vector <vector <ll> > v(n);
        for (int i = 0; i < n; i++)
        {
            ll aa, bb, cc;
            cin >> aa >> bb >> cc;
            v[i] = {aa, bb, cc};
        }
        bool ok = 0;
        for (ll mask = 0; mask < (1 << n); mask++)
        {
            ll aa = 0, bb = 0, cc = 0;
            for (int q = 0; q < n; q++)
            {
                if (mask & (1 << q))
                {
                    aa += v[q][0];
                    bb += v[q][1];
                    cc += v[q][2];
                }
            }
            if (aa == a && bb == b && cc == c)
                ok = 1;
        }
        if (ok)
            cout << "Case #" << t + 1 << ": yes\n";
        else
            cout << "Case #" << t + 1 << + ": no\n";
    }    
    return 0;
}