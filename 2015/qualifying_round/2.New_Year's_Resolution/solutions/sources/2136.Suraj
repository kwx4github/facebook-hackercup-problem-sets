#include <iostream>
#include <fstream>
#include <cstdio>
#include <math.h>
#include <vector>
#include <string.h>
#include <algorithm>
#include <climits>
#include <stack>
#include <queue>
#include <set>
#include<utility>
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a>b?b:a


typedef long long int ll;
using namespace std;
/*
int solve(int arr[],int n,int sum){
    int ans[sum+1][n+1];
    for(int i = 0;i<n+1;++i)
        ans[0][i] = 1;
    for(int i = 0;i<sum+1;++i)
        ans[i][0] = 0;
    for(int i =1;i<sum+1;++i){
        for(int j = 1;j<n+1;++j){
            ans[i][j] = ans[i][j-1];
            if(i>=arr[j-1])
                ans[i][j] = ans[i][j] || ans[i-arr[j-1]][j-1];
        }
    }
    return ans[sum][n];
}*/
bool solve(int arr1[],int arr2[],int arr3[], int n, int g1,int g2,int g3)
{

   if (g1 == 0 && g2 == 0 &&g3 == 0)
     return true;
   if (n == 0 && (g1 != 0||g2!=0||g3!=0))
     return false;
   if (arr1[n-1] > g1 || arr2[n-1] > g2 || arr3[n-1] >g3)
     return solve(arr1,arr2,arr3,n-1,g1,g2,g3);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return solve(arr1,arr2,arr3,n-1,g1,g2,g3) || solve(arr1,arr2,arr3,n-1,g1-arr1[n-1],g2-arr2[n-1],g3-arr3[n-1]);
}

int main()
{
	ios_base::sync_with_stdio(0);
	int test;
	cin>>test;
	int qw = 0;
	while(test--){
        qw++;
        int g1,g2,g3;
        int n;
        cin>>g1>>g2>>g3;
        cin>>n;
        int arr1[n];
        int arr2[n];
        int arr3[n];
        for(int i = 0;i<n;++i){
            cin>>arr1[i]>>arr2[i]>>arr3[i];
        }
        cout<<"Case #"<<qw<<": ";
        if(solve(arr1,arr2,arr3,n,g1,g2,g3))
            cout<<"yes\n";
        else
            cout<<"no\n";
	}
}
