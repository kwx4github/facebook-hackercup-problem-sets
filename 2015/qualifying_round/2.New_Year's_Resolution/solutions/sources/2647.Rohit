
/* Author:
 * Rohit Laddha */
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <stack>
#include <set>
#include <queue>
#include <limits.h>
#include <math.h>
#include <deque>
#include <list>
#include<tr1/unordered_map>
using namespace std;
using namespace std::tr1;
#define PI 3.14159265
//#define 
bool dp[1050][25];
int p[25],c[25],f[25];
bool function(int cv, int fv, int row, int col){
	if(cv<0 || fv <0)
		return false;
	if(row==0 && cv==0 && fv==0)
		return true;
	else if(row==0)
		return false;
	for(int i=0;i<=col;i++){
		if(dp[row][i] && function(cv-c[i], fv-f[i],row-p[i], i-1))
			return true;
	}
	return false;
}

int main(){
	int t;
	cin >> t;
	for(int z=1;z<=t;z++){
		int gp,gc,gf;
		cin >> gp >> gc >> gf;
		int n;
		cin >> n;
		for(int i=1;i<=n;i++){
			cin >> p[i] >> c[i] >> f[i];
		}
		cout << "Case #" << z << ": ";
		for(int i=0;i<=gp;i++){
			for(int j=0;j<=n;j++){
				if(i==0 || j==0){
					if(j==0)
						dp[i][j]=false;
					if(i==0)
						dp[i][j]=true;
				}
				else if(i<p[j])
					dp[i][j]=false;
				else{
					int l = i-p[j];
					dp[i][j]=false;
					for(int k=0;k<j;k++){
						if(dp[l][k]){
							dp[i][j]=true;
							break;
						}
					}
				}
			}
		}
	/*	
		for(int i=0;i<=gp;i++){
			for(int j=0;j<=n;j++){
				cout << dp[i][j] << ' ';
			}
			cout << endl;
		}
*/

		if(function(gc,gf,gp,n))
			cout << "yes\n";
		else
			cout << "no\n";
	}

	return 0;
}
