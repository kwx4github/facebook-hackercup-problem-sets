#include <iostream>
#include <fstream>

//#define INPUT "input.txt"

#define INPUT "new_years_resolution.txt"
#define OUTPUT "output.txt"

using namespace std;

bool findPossibleCombination(int target[],
	int food_no,
	int protein[],
	int carb[],
	int fat[]);

int main()
{
	//read-write
	string input_line;
	string output_line;

	ifstream input(INPUT);
	ofstream output(OUTPUT);
	if(input.is_open())
	{
		int set = 0;
		input >> set;

		for(int i = 0; i < set ; i++)
		{
			int target[3];
			input >> target[0];
			input >> target[1];
			input >> target[2];
			//////

			int food_no = 0;
			input >> food_no;

			int protein[20];
			int carb[20];
			int fat[20];

			for(int x = 0; x < food_no; x++)
				input >> protein[x] >> carb[x] >> fat[x];
			
			//////

			bool result = findPossibleCombination(target, 
				food_no, protein, carb, fat);

			cout << result << endl;

			output << "Case #" << i+1 << ": ";
			if(result == true) 
				output <<"yes" << "\n";
			else 
				output <<"no" << "\n";

		}

		input.close();
		output.close();
	}

	return 0;
}

bool getPermutation(
	int target[],
	int protein[],
	int carb[],
	int fat[],
	int output[], int output_size,
	int input[], int beginningPtr, int input_size, int depth)
{
	if(depth == 0)
	{
		//start eating!
		int result[3];
		result[0] = 0;
		result[1] = 0;
		result[2] = 0;

		for(int i = 0; i < output_size; i++)
		{
			result[0] += protein[output[i]];
			result[1] += carb[output[i]];
			result[2] += fat[output[i]];
		}

		if(result[0] == target[0] &&
			result[1] == target[1] &&
			result[2] == target[2])
				return true;
		else return false;

	}

	//pick one from input
	for(int i = beginningPtr; i < input_size; i++)
	{
		//put it to the back of output
		output[output_size] = input[i];

		bool result = getPermutation(target, protein,
			carb, fat, output, output_size + 1,
			input, i+1 , input_size, depth - 1);

		if(result == true) return true;
	}

	return false;
}

bool findPossibleCombination(int target[],
	int food_no,
	int protein[],
	int carb[],
	int fat[])
{
	//start eating from 1 food to every food.
	for(int i = 0; i < food_no; i++)
	{
		int output[20];
		int input[20];

		for(int j = 0; j < food_no; j++)
		{
			input[j] = j;
		}

		bool result = getPermutation(target, protein, carb, fat,
			output, 0, input, 0, food_no, i+1);

		if(result == true)
			return true;
	}

	return false;
}