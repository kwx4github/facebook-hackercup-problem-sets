import math
import sys
import fractions

sys.setrecursionlimit(2 ** 20)

input = open('date.in', 'r')
output = open('date.out', 'w')

T = int(input.readline())
for t in range(T):
    line = input.readline().strip().split(' ')
    TP = int(line[0])
    TC = int(line[1])
    TF = int(line[2])
    N = int(input.readline())

    A = [ [ 0 for j in range(3) ] for i in range(N) ]
    for i in range(N):
        line = input.readline().strip().split(' ')
        for j in range(3):
            A[i][j] = int(line[j])

    ans = 'no'
    S = [ [ 0 for i in range(3) ] for j in range(1 << N) ]
    for mask in range(1, 1 << N):
        prev = mask & (mask - 1)
        bits = (mask ^ prev) - 1
        bit = bin(bits).count('1')
        for i in range(3):
            S[mask][i] = S[prev][i] + A[bit][i]
        if S[mask][0] == TP and S[mask][1] == TC and S[mask][2] == TF:
            ans = 'yes'
            break

    output.write('Case #{}: {}\n'.format(t + 1, ans))
    print t

input.close()
output.close()