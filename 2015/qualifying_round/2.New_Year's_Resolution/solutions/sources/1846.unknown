#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdlib>
#include <cassert>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <queue>
#include <stack>
#include <deque>

using namespace std;

#define forn(i,n) for (int i = int(0); i < int(n); i++)
#define forb(i,n) for (int i = int(n-1); i >= int(0); i--)
#define for1(i,n) for (int i = int(1); i <= int(n); i++)
#define fore(i,a,n) for (int i = int(a); i < int(n); i++)

#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sz size()
#define sqr(x) ((x)*(x))
#define cube(x) ((x)*(x)*(x))
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define min3(a, b, c) min(a, min(b, c))
#define max3(a, b, c) max(a, max(b, c))
#define dist(x1, y1, x2, y2) sqrt(ld (sqr(x1 - x2) + sqr(y1 - y2)))
  
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
 
const int maxn = 1000005;
const int MAXN = (int) 1e9;
const int logn = 12;
const int inf = (int) 2e9;
const int alpha = 26;
const int my_hash = 31;
const long long base = (ll) 1e9;
const long long my_mod = 2674894331;
const long long l_inf = (ll) 4e18;
const long long mod = (ll) 1e9 + 7;
const double fi = (sqrt(5.0) + 1) / 2.0;
const double pi = acos(-1.0);
const double eps = 1e-8;
const double EPS = 0.00005;

struct Food {
	int A;
	int B;
	int C;
	Food(int A, int B, int C) : A(A), B(B), C(C) {}
	Food() {}
	Food operator + (const Food &F) const {
		return Food(A + F.A, B + F.B, C + F.C);
	}
	bool operator == (const Food &F) const {
		return A == F.A && B == F.B && C == F.C;
	}
};

int N;
Food need;
vector<Food> list;

bool check(int mask) {
	Food res(0, 0, 0);
	for (int i = 0; i < N; i++)
		if (mask & (1 << i))
			res = res + list[i];
	return res == need;
}

int main() {
	ios_base::sync_with_stdio(0);
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	int T;
	scanf("%d ", &T);
	for (int t = 0; t < T; t++) {
		printf("Case #%d: ", t + 1);
		scanf("%d %d %d %d ", &need.A, &need.B, &need.C, &N);
		list = vector<Food> (N);
		for (int i = 0; i < N; i++)
			scanf("%d %d %d ", &list[i].A, &list[i].B, &list[i].C);
		bool found = false;
		for (int mask = 0; mask < (1 << N); mask++) {
			if (check(mask)) {
				found = true;
				printf("yes\n");
				break;
			}
		}
		if (!found)
			printf("no\n");
	}
}