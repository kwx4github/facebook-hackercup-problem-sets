/* abhra73 */
#include <bits/stdc++.h>
#define sp(z) 				setprecision(z)
#define sv(z) 				sort(z.begin(),z.end())
#define F 					first
#define S 					second
#define pb 					push_back
#define mp 					make_pair
#define ll 					long long
#define ld 					long double 
#define si(z) 				scanf("%d",&z)
#define sl(z) 				scanf("%Ld",&z)
#define sd(z) 				scanf("%Lf",&z)
#define sc(z) 				scanf("%c",&z)
#define fre(y,q,s) 			for(int y=q;y>=s;y--)
#define fr(y,q,s) 			for(int y=q;y<s;y++)
#define f(y,z) 				for(int y=0;y<z;y++)
#define fe(y,z) 			for(int y=1;y<=z;y++)
#define matrix(arr,n,m)		vector<vector<ll> > arr(n,vector<ll>(m,0))
using namespace std;
ll lmin(ll a,ll b){ return (a<b)?a:b; } ll lmax(ll a,ll b){ return (a>b)?a:b; }
ld dmin(ld a,ld b){ return (a<b)?a:b; } ld dmax(ld a,ld b){ return (a>b)?a:b; }
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); } ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
ll lpow(ll a, ll n){ ll res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }
ld dpow(ld a, ll n){ ld res=1; while(n){ if(n&1)res*=a; a*=a; n>>=1; } return res; }

/* ********************** Main Code starts from here ********************** */
vector<int> v1,v2,v3;
int gp,gc,gf;
bool eval(int n, int p,int c,int f){
	if(p==gp && c==gc && f==gf) return true;
	if(n==-1) return false;
	return eval(n-1,p+v1[n],c+v2[n],f+v3[n]) | eval(n-1,p,c,f);
}
int main(){
	int t,n,p,c,f,cas=0;
	si(t);
	while(t--){
		v1.clear();v2.clear();v3.clear();
		si(gp);si(gc);si(gf);
		si(n);
		f(i,n){
			si(p);si(c);si(f);
			v1.pb(p);v2.pb(c);v3.pb(f);
		}
		printf("Case #%d: ",++cas);
		if(eval(n-1,0,0,0)) printf("yes");
		else printf("no");
		cout<<endl;
	}
	return 0;
}