#include <iostream>
#include <cstdio>
#include <cassert>
#include <ctime>
#include <cmath>
#include <cstring>
#include <string>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

template <typename T> T sqr(T x) { return x * x; }
template <typename T> T abs(T x) { return x < 0? -x : x; }
template <typename T> T gcd(T a, T b) { return b? gcd(b, a % b) : a; }
#define foreach(a, b) for(typeof((b).begin()) a = (b).begin(); a != (b).end(); ++a)

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;

int main(int /* argc */, char** /* argv */)
{
    ios_base::sync_with_stdio(false);
    #ifdef LOCAL
    assert(freopen("inp", "r", stdin));
    assert(freopen("out", "w", stdout));
    #endif
    int t;
    cin >> t;
    for (int test = 1; test <= t; ++test) {
        int A, B, C, n;
        cin >> A >> B >> C;
        cin >> n;
        int a[n], b[n], c[n];
        for (int i = 0; i < n; ++i) {
            cin >> a[i] >> b[i] >> c[i];
        }
        bool ok = false;
        for (int i = 0; i < (1 << n); ++i) {
            int _a = A, _b = B, _c = C;
            for (int j = 0; j < n; ++j) {
                if (i & (1 << j)) {
                    _a -= a[j];
                    _b -= b[j];
                    _c -= c[j];
                }
            }
            if (_a == 0 && _b == 0 && _c == 0) {
                ok = true;
                break;
            }
        }
        cout << "Case #" << test << ": " << (ok? "yes" : "no") << endl;
    }

    fprintf(stderr, "Time execute: %.3lf sec\n", clock() / (double)CLOCKS_PER_SEC);
    return 0;
}
