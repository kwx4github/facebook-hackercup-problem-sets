#include <cstdio>
#include <vector>

#define REP(i,n) for(int i=0; i<(n); ++i)

struct Food
{
  int p,c,f;
  Food & operator+=(const Food &b)
  { p+=b.p; c+=b.c; f+=b.f; return *this;  }
  bool operator==(const Food &b) const
  { return p==b.p && c==b.c && f==b.f; }
  void scan(){ scanf("%d%d%d",&p,&c,&f); }
};

bool run(Food g, const std::vector<Food> &f)
{
  REP(m,1<<f.size())
  {
    Food a{0,0,0};
    REP(i,f.size()) if(m>>i&1) a += f[i];
    if(a==g) return 1;
  }
  return 0;
}

int main()
{
  int t; scanf("%d",&t);
  REP(_,t)
  {
    Food g; g.scan();
    int n; scanf("%d",&n);
    std::vector<Food> f(n);
    for(auto &x : f) x.scan();
    printf("Case #%d: %s\n",_+1,run(g,f)?"yes":"no");
  }
  return 0;
}
