#include <iostream>
#include <vector>
using namespace std;

struct meal
{
	int p, c, f;
	meal(){p=c=f=0;}
	void read(){cin>>p>>c>>f;}
};

int n;
meal diet;
vector <meal> T;

meal operator+(const meal a, const meal b)
{
	meal res;
	res.p=a.p+b.p;
	res.c=a.c+b.c;
	res.f=a.f+b.f;
	return res;
}

bool operator==(const meal a, const meal b)
{
	return (a.p==b.p && a.c==b.c && a.f==b.f);
}

bool fit(int maska)
{
	meal suma;
	for(int i=0; i<n; i++)
	{
		if(maska & (1<<i)) suma=suma+T[i];
	}
	if(suma==diet) return true;
	else return false;
}

bool possible()
{
	int d=(1<<n);
	for(int i=0; i<d; i++)
	{
		if(fit(i)) return true;
	}
	return false;
}

int main()
{
	int test; cin>>test;
	for(int t=1; t<=test; t++)
	{
		diet.read();
		cin>>n;
		T.resize(n);
		for(int i=0; i<n; i++) T[i].read();
		cout<<"Case #"<<t<<": ";
		if(possible()) cout<<"yes\n";
		else cout<<"no\n";
	}
	return 0;
}
