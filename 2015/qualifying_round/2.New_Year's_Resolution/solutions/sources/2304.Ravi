#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <set>
#include <functional>
#include <list>
#include <map>
#include <vector>
#include <utility>
#include <algorithm>
#define getI(a) scanf("%d", &a)
#define getII(a,b) scanf("%d%d", &a, &b)
#define getIII(a,b,c) scanf("%d%d%d", &a, &b, &c)
#define wez(n) int (n); scanf("%d",&(n))
#define TESTS wez(testow); while(testow--)
#define F(i,L,R) for (int i = L; i < R; i++) //next four are for "for loops"
#define FE(i,L,R) for (int i = L; i <= R; i++)
#define FF(i,L,R) for (int i = L; i > R; i--)
#define FFE(i,L,R) for (int i = L; i >= R; i--)
#define MAX(a,b) ( (a) < (b) ? (b) : (a) )
#define MIN(a,b) ( (a) < (b) ? (a) : (b) )
#define FOREACH(i,t) for (typeof((t).begin()) i=(t).begin(); i!=(t).end(); i++) // traverse an STL data structure
#define ALL(c) (c).begin(),(c).end() //handy for function like "sort()"
#define PRESENT(c,x) ((c).find(x) != (c).end()) 
#define REMIN(a,b) (a)=min((a),(b))
#define SZ(x) ((int)((x).size()))
#define pb push_back
#define mp make_pair

#define MODN 1000000007;



#define PI 3.1415926535897932384626

using namespace std;

typedef vector<int> vi;

int tp,tc,tf,n;
vi p,c,f;

bool testSet(int a){
	int pp,cc,ff;
	pp=cc=ff=0;
	F(i,0,n) if(a & (1<<i)) pp+=p[i] , cc+=c[i] , ff+=f[i];
	return ( (pp==tp) && (cc==tc) && (ff==tf) ) ; 
}
int main(int argc, char const *argv[])
{

	

	int cno =1;
	TESTS{
		getIII(tp,tc,tf);
		getI(n);

		int limit = 1<<n;
		p.clear();
		c.clear();
		f.clear();
		p = vi(n);
		c = vi(n);
		f = vi(n);

		F(i,0,n) getIII(p[i],c[i],f[i]);

		bool flag = false;

		F(i,0,limit){
			if(testSet(i)) {
				flag= true;
				 break;
			}
		}

		
		printf("Case #%d: ",cno);
		printf(flag?"yes":"no");
		if(testow) printf("\n");
		cno++;

	}

	return 0;
}