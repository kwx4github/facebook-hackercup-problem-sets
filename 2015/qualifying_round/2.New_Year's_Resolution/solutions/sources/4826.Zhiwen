// =====================================================================================
//
//       Filename:  B.cpp
//
//    Description:  \
//
//        Version:  1.0
//        Created:  01/10/15 22:47:35
//       Revision:  none
//       Compiler:  g++ (clang)
//
//         Author:  |Zhiwen Fang| (), |zhiwenf@gmail.com|
//   Organization:  
//
// =====================================================================================

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>

using namespace std;

bool check(vector<vector<int> > const &table, int N, int mask, int Gp, int Gc, int Gf) {
  int p = 0, c = 0, f = 0;
  for (int i = 0; i < N; ++i) {
    if (mask & (1<<i)) {
      p += table[i][0];
      c += table[i][1];
      f += table[i][2];
    }
  }
  return p == Gp && c == Gc && f == Gf;
}

int main ( int argc, char *argv[] )
{
 int T;
 cin >> T;
 for (int t = 1; t <= T; ++t) {
   int Gp, Gc, Gf;
   cin >> Gp >> Gc >> Gf;
   int N;
   cin >> N;
   vector<vector<int> > table(N, vector<int>(3, 0));
   for (int i = 0; i < N; ++i) {
     cin >> table[i][0] >> table[i][1] >> table[i][2] ;
   }
   bool poss =false;
   for (int mask = 1; mask < (1<<N); ++mask) {
    if (check(table, N, mask, Gp, Gc, Gf)) {
      poss = true;
      break;
    }
   }
   cout <<"Case #" << t << ": "<< (poss?"yes":"no") << endl;
 }
  return EXIT_SUCCESS;
}				
// ----------  end of function main  ----------
