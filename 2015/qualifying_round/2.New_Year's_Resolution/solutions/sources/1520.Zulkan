#include <bits/stdc++.h>
using namespace std;

#define ll long long


int getInt() {
    int a;
    scanf("%d", &a);
    return a;
}
struct data {
    int a,b,c;
    data() {}
    data(int x, int y, int z) {
        a= x;
        b=y;
        c=z;
    }
};

int X, Y, Z, n;

vector<data> inp;
bool taken[25];
bool dfs(int i, int x,int y, int z) {
    //cout << i << ":" << x << ',' << y << "," << z << '\n';
    if(x== X && y == Y && z == Z) return true;
    if(i == (int)inp.size() || x > X || y > Y || z > Z) return false;

    // cout << i << ":" << x << ',' << y << "," << z << '\n';
    bool a = dfs(i+1,x,y,z);
    a |= dfs(i+1,x+inp[i].a,y+inp[i].b, z+inp[i].c);
    return a;
}
int main() {
    int tc = getInt();
    int a = 1;
    while(tc--) {
        X = getInt();
        Y = getInt();
        Z=getInt();
        n = getInt();
        inp.clear();
        for(int i =0 ; i < n; i++) {
            int r = getInt(), t = getInt(), y = getInt();
            data temp = data(r,t,y);

            // cout << temp.a << ' ' << temp.b << ' ' <<  temp.c << '\n';
            if(temp.a <= X && temp.b<=Y && temp.c <= Z) {
                inp.push_back(temp);
                //cout << temp.a << ' ' << temp.b << ' ' <<  temp.c << '\n';
            }
        }
        bool s = dfs(0,0,0,0);

        cout << "Case #" << a++ << ": ";
        if(s) {
            cout << "yes\n";
        } else {
            cout << "no\n";
        }
    }

}