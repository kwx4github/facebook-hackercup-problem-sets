

#include <iostream>
#include <string>
#include <algorithm>
#include <set>

using namespace std;

enum { P, C, F, nMacros };

const int maxN = 20;

typedef short value_t; // 20*1000 < 32768

// brute force...

const int nMaxCombos = 1 << maxN;

value_t sums[nMacros][nMaxCombos];



int main(int argc, char* argv[])
{
	int T = 0;

	cin >> T;

	for (int t = 1; t <= T; ++t) {

		value_t G[nMacros];
		cin >> G[P] >> G[C] >> G[F];

		int N = 0;
		cin >> N;

		value_t D[nMacros][maxN];
		for (int n = 0; n < N; ++n) {
			cin >> D[P][n] >> D[C][n] >> D[F][n];
		}

		int nCombos = 1 << N;
		for (int m = 0; m < nMacros; m++) {
			for (int nc = 0; nc < nCombos; nc++) {
				sums[m][nc] = 0;
			}
		}

		for (int m = 0; m < nMacros; m++) {
			int pot = 1;
			for (int n = 0; n < N; ++n) {
				value_t d = D[m][n];
				
				int nc = 0;
				while ( nc < nCombos) {
					nc += pot;
					for (int i = 0; i < pot; ++i) {
						sums[m][nc] += d;
						++nc;
					}
				}
				pot += pot;
			}
		}

		bool Found = false;


		for (int nc = 0; nc < nCombos; nc++) {
			if (sums[P][nc] == G[P]) {
				if (sums[C][nc] == G[C]) {
					if (sums[F][nc] == G[F]) {

						Found = true;

					}
				}
			}
		}

		cout << "Case #" << t << ": ";
		if (Found) {
			cout << "yes";
		}
		else {
			cout << "no";
		}
		cout << endl;



	}

	return 0;
}