#include<algorithm>
#include<cctype>
#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<string>
#include<fstream>
#include<iomanip>
#include<iostream>
#include<map>
#include<stack>
#include<vector>
#include<deque>
#include<queue>
#include<bitset>
#include<set>
#define P 0
#define C 1
#define F 2
using namespace std;

int target[3],food[25][3],n;
bool take[25];

bool DP(int pos){
    int sum[3],i;
    if(pos==n){
        sum[P]=sum[C]=sum[F]=0;
        for(i=0;i<n;i++)
            if(take[i]){
                sum[P]+=food[i][P];
                sum[C]+=food[i][C];
                sum[F]+=food[i][F];
            }
        return (sum[P]==target[P]&&sum[C]==target[C]&&sum[F]==target[F]);
    }
    take[pos]=false;
    if(DP(pos+1))
        return true;
    take[pos]=true;
    sum[P]=sum[C]=sum[F]=0;
    for(i=0;i<=pos;i++)
        if(take[i]){
            sum[P]+=food[i][P];
            sum[C]+=food[i][C];
            sum[F]+=food[i][F];
        }
    if(sum[P]>target[P]||sum[C]>target[C]||sum[F]>target[F])
        return false;
    return DP(pos+1);
}

int main(){
    int T,t=0,i;
    cin>>T;
    while(t<T){
        cin>>target[P]>>target[C]>>target[F];
        cin>>n;
        for(i=0;i<n;i++)
            cin>>food[i][P]>>food[i][C]>>food[i][F];
        if(DP(0))
            cout<<"Case #"<<++t<<": yes"<<endl;
        else
            cout<<"Case #"<<++t<<": no"<<endl;
    }
    return 0;
}
