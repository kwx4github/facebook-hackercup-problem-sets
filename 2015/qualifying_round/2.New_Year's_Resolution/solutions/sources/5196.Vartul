#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <set>
#include <sstream>
#include <numeric>
#include <bitset>
#define REP(i, a, b) for ( int i = int(a); i <= int(b); i++ )
#define PB push_back
#define MP make_pair
#define for_each(it, X) for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define DFS_WHITE -1
#define DFS_BLACK 1
#define MAXN 1000
#define pi 3.141592653589793
#define ARRAY_SIZE(A) sizeof(A)/sizeof(A[0])
#define INF 1<<30
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int, int> ii;
#define MOD 1000000007
struct node
{
	int x;
	int y;
	int z;
};

bool func(vector<struct node>arr,int n,struct node curr,struct node req,int index)
{
	//cout<<curr.x<<"                "<<curr.y<<" "<<curr.z<<endl;
	if(curr.x>req.x || curr.y >req.y || curr.z >req.z)
		return false;
	if(curr.x == req.x && curr.y == req.y && curr.z == req.z)
		return true;
	else
	{
		bool kt = false;

		for(int i = index; i < n ;i++)
		{
			struct node t = curr;
			t.x = curr.x +arr[i].x;
			 t.y = curr.y +arr[i].y;
			 t.z = curr.z +arr[i].z;
			kt = kt || func(arr,n,t,req,i+1);
		}
		return kt;
	}
}
int main()
{
	int n=0;
	cin>>n;
	int uu = 1;
	while(n--)
	{
	struct node p;
	cin>>p.x>>p.y>>p.z;
		vector<struct node>arr;
		int k =0;
		cin>>k;
		for(int i = 0 ;i < k ; i++)
		{
			struct node a;
			cin>>a.x>>a.y>>a.z;
			arr.PB(a);
		}
		struct node curr;
		curr.x = 0;
		curr.y =0;
		curr.z = 0;
		string ans;
		bool yy = func(arr,k,curr,p,0);
		if(yy)
			ans ="yes";
		else
			ans = "no";
		cout<<"Case #"<<uu<<": "<<ans<<endl;
		uu++;
	}
	return 0;
}