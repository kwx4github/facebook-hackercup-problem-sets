import math

file_name = 'C:\\Users\\Tianyi\\Downloads\\new_years_resolution.txt'

def boolsToInt(bools):
	count = 0
	number = 0
	for bit in reversed(bools):
		if bit:
			number += (math.pow(2, count))
		count += 1
	return int(number)
	
def increaseAndComputeAndCheck(combo, combo_result, foods, gp, gc, gf):
	cur_bit = 0
	for food in reversed(combo):
		if food == True:
			combo[len(combo) - 1 - cur_bit] = False
		else:
			break
		cur_bit += 1
	
	dependent_index = boolsToInt(combo)
	dependent_result = combo_result[dependent_index]
	
	combo[len(combo) - 1 - cur_bit] = True
	cur_index = boolsToInt(combo)
	cur_food = foods[cur_bit]
	cur_result = (dependent_result[0] + cur_food[0], dependent_result[1] + cur_food[1], dependent_result[2] + cur_food[2])
	combo_result[cur_index] = cur_result
	
	if cur_result[0] == gp and cur_result[1] == gc and cur_result[2] == gf:
		return True
	return False

with open(file_name) as f:
	num_cases = int(f.readline())
	
	for case in range(num_cases):
		goals = f.readline().split()
		gp = int(goals[0])
		gc = int(goals[1])
		gf = int(goals[2])
		
		num_foods = int(f.readline())
		foods = []
		for food in range(num_foods):
			amounts = f.readline().split()
			ap = int(amounts[0])
			ac = int(amounts[1])
			af = int(amounts[2])
			cur_food = [ap, ac, af]
			foods.append(cur_food)
		
		combo = []
		for i in range(num_foods):
			combo.append(False)
			
		num_combos = int(math.pow(2, num_foods))
		combo_result = []
		for i in range(num_combos):
			combo_result.append((-1, -1, -1))
		
		combo_result[0] = (0, 0, 0)
		result = False
		for i in range(num_combos - 1):
			result = increaseAndComputeAndCheck(combo, combo_result, foods, gp, gc, gf)
			if result:
				break
		
		print('Case #%d: %s' % (case + 1, ("yes" if result else "no")))
