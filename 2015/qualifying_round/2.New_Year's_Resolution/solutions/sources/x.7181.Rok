import java.util.*;

public class Naloga2 {
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);

		int t = s.nextInt();

		for (int i = 0; i < t; i++) {
			int gp = s.nextInt();
			int gc = s.nextInt();
			int gf = s.nextInt();
			int n = s.nextInt();
			int[] p = new int[n];
			int[] c = new int[n];
			int[] f = new int[n];
			for (int j = 0; j < n; j++) {
				p[j] = s.nextInt();
				c[j] = s.nextInt();
				f[j] = s.nextInt();
			}
			System.out.printf("Case #%d: ", i + 1);
			//System.out.println(gp + " " + gc + " " + gf);
			if (target(p, gp) && target(c, gc) && target(f, gf)) {
				System.out.println("yes");
			} else {
				System.out.println("no");
			}
		}
	}

	public static boolean target(int[] s, int target) {
		ArrayList<ArrayList<Integer>> l = subsets(s);
		//System.out.println(l.size());
		for (ArrayList<Integer> i : l) {
			int sum = 0;
			for (Integer j : i) {
				sum += j;
			}

			if (sum == target) {
				return true;
			}
		}
		return false;
	}

	public static ArrayList<ArrayList<Integer>> subsets(int[] S) {
		if (S == null)
			return null;
	 
		Arrays.sort(S);
	 
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
	 
		for (int i = 0; i < S.length; i++) {
			ArrayList<ArrayList<Integer>> temp = new ArrayList<ArrayList<Integer>>();
	 
			//get sets that are already in result
			for (ArrayList<Integer> a : result) {
				temp.add(new ArrayList<Integer>(a));
			}
	 
			//add S[i] to existing sets
			for (ArrayList<Integer> a : temp) {
				a.add(S[i]);
			}
	 
			//add S[i] only as a set
			ArrayList<Integer> single = new ArrayList<Integer>();
			single.add(S[i]);
			temp.add(single);
	 
			result.addAll(temp);
		}
	 
		//add empty set
		result.add(new ArrayList<Integer>());
	 
		return result;
	}
}