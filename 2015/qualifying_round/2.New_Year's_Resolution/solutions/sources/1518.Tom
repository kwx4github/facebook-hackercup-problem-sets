import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.lang.reflect.Array;
import java.util.ArrayList;

/**
 * Created by Tom Wu on 1/8/15.
 */
public class Resolution {

    private static class Nutrition {
        private int a, b, c;

        public Nutrition(int protein, int carb, int fat) {
            a = protein;
            b = carb;
            c = fat;
        }

        public Nutrition(String line) {
            String arr[] = line.split(" ");
            int nutr[] = new int[3];
            for (int i = 0; i < 3; i++) {
                nutr[i] = Integer.parseInt(arr[i]);
            }
            a = nutr[0];
            b = nutr[1];
            c = nutr[2];
        }

        public Nutrition add(Nutrition n) {
            return new Nutrition(a + n.a, b + n.b, c + n.c);
        }

        public boolean isOver(Nutrition limit) {
            return (a >= limit.a || b >= limit.b || c >= limit.c);
        }

        public boolean equals(Nutrition n) {
            return (a == n.a && b == n.b && c == n.c);
        }
    }

    private static boolean solveTestCase(Nutrition limit, ArrayList<Nutrition> foods) {

        ArrayList<Nutrition> combos = new ArrayList<Nutrition>();
        combos.add(new Nutrition(0, 0, 0));

        for (Nutrition f : foods) {
            for (Nutrition combo : (ArrayList<Nutrition>) combos.clone()) {
                Nutrition newCombo = combo.add(f);
                if (newCombo.equals(limit)) {
                    return true;
                }
                if (!newCombo.isOver(limit)) {
                    combos.add(newCombo);
                }
            }

        }
        System.out.println("combos length " + combos.size());
        return false;

    }

    private static void solveAllCases(String input, String output) {
        BufferedReader reader;
        PrintWriter writer;

        try {
            reader = new BufferedReader(new FileReader(input));
            writer = new PrintWriter(output, "UTF-8");

            // Total number of cases
            int numTestCases = Integer.parseInt(reader.readLine());

            System.out.println("Total " + numTestCases);

            for (int testCase = 1; testCase <= numTestCases; testCase++) {
                Nutrition limit = new Nutrition(reader.readLine());
                ArrayList<Nutrition> foods = new ArrayList<Nutrition>();

                // Number of foods
                int numFoods = Integer.parseInt(reader.readLine());
                for (; numFoods > 0; numFoods--) {
                    foods.add(new Nutrition(reader.readLine()));
                }

                boolean possible = solveTestCase(limit, foods);

                writer.println("Case #" + testCase + ": " + (possible ? "yes" : "no"));
            }

            reader.close();
            writer.close();

        } catch (Exception e) {
            System.err.println(e);
        }

    }

    public static void main(String argv[]) {
        System.out.println("Started");

        solveAllCases("input.txt", "output.txt");

        System.out.println("Finished");
    }
}
