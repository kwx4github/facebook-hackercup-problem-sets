import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Trio {
	
	static Trio sum(Trio t1, Trio t2) {
		return new Trio(t1.p + t2.p, t1.c + t2.c, t1.f + t2.f);
	}
	
	int p, c, f;
	Trio(int p, int c, int f) {
		this.p = p;
		this.c = c;
		this.f = f;		
	}
	
	boolean equalOrGreater(Trio o) {
		return p >= o.p & c >= o.c & f >= o.f;
	}
	
	public boolean equals(Object other) {
		if (!(other instanceof Trio))
			return false;
		Trio o = (Trio) other;
		return p == o.p & c == o.c & f == o.f;
	}
}

public class NewYearsResolution {
	public static void main(String[] args) {
		try {
			Scanner in = new Scanner(new BufferedReader(new FileReader(new File("new_years_resolution.txt")), 256 << 10));
			BufferedWriter out = new BufferedWriter(new FileWriter(new File("output.txt")), 256 << 10);

			int testsNumber = in.nextInt();
			for (int testId = 1; testId <= testsNumber; testId++) {
				Trio trg = new Trio(in.nextInt(), in.nextInt(), in.nextInt());
				int n = in.nextInt();
				List<Trio> trios = new ArrayList<>();
				boolean possible = false;
				for (int i = 0; i < n; i++) {
					Trio ti = new Trio(in.nextInt(), in.nextInt(), in.nextInt());
					if (trg.equalOrGreater(ti)) {
						List<Trio> moreTrios = new ArrayList<>();
						moreTrios.add(ti);
						for (Trio t: trios) {
							Trio sum = Trio.sum(t, ti);
							if (trg.equalOrGreater(sum)) {
								moreTrios.add(sum);
							}
						}
						trios.addAll(moreTrios);
					}
				}
				for (Trio t : trios)
					if (trg.equals(t))
						possible = true;

				out.append("Case #" + testId + ": ");
				out.append((possible ? "yes" : "no") + "\n");
			}
			in.close();
			out.close();
		}
		catch (RuntimeException rte) {
			throw rte;
		}
		catch (Exception e) {
			System.err.println("Error:" + e.getMessage());
		}
	}
}
