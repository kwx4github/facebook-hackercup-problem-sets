#include <algorithm>
#include <iomanip>
#include <istream>
#include <map>
#include <ostream>
#include <set>
#include <sstream>
#include <utility>
#include <vector>


using namespace std;

// Solution template generated by caide
class Solution {
public:
    void solve(std::istream& in, std::ostream& out) {
		int T;
		in >> T;
		for (int test = 1; test <= T; ++test) {
			int gp, gc, gf, n;
			in >> gp >> gc >> gf >> n;
			vector<int> p(n), c(n), f(n);
			for (int i = 0; i < n; ++i)
				in >> p[i] >> c[i] >> f[i];
			
			bool ok = false;
			for (int mask = 0; !ok && mask < (1 << n); ++mask) {
				int tp = 0, tc = 0, tf = 0;
				for (int i = 0; i < n; ++i) if (mask & (1 << i)) {
					tp += p[i];
					tc += c[i];
					tf += f[i];
				}
				if (tp == gp && tc == gc && tf == gf) {
					ok = true;
				}
			}

			out << "Case #" << test << ": " << (ok ? "yes" : "no") << endl;
		}
    }
};

void solve(std::istream& in, std::ostream& out)
{
    out << std::setprecision(12);
    Solution solution;
    solution.solve(in, out);
}


#include <iostream>


int main() {
    std::ios_base::sync_with_stdio(0);
    std::cin.tie(0);
    solve(std::cin, std::cout);
    return 0;
}




























