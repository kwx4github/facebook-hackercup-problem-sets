import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * Created by xipan on 1/10/15.
 */
public class B {
    public static Scanner in;
    public static PrintWriter out;
    public static final String IN_FILE = "Facebook-2015-Qualification/new_years_resolution.txt";
    public static final String OUT_FILE = "Facebook-2015-Qualification/newyear.output";

    public static void main(String[] args) throws IOException {
        //System.out.println(System.getProperty("user.dir"));
        in = new Scanner(new FileReader(IN_FILE));
        out = new PrintWriter(new FileWriter(OUT_FILE));

        int cases = in.nextInt();
        in.nextLine();

        for (int z = 1; z <= cases; z++) {
            int p = in.nextInt(), c = in.nextInt(), f = in.nextInt();
            Food target = new Food(p, c, f);

            int n = in.nextInt();

            Food[] con = new Food[n];
            for (int i = 0; i < n; i++) {
                int tp = in.nextInt(), tc = in.nextInt(), tf = in.nextInt();
                con[i] = new Food(tp, tc, tf);
            }

            boolean can = find(target, con, 0);

            out.print(String.format("Case #%d: %s%n", z, can?"yes":"no"));
            out.flush();
        }
        out.flush();
        out.close();
        in.close();
    }

    private static boolean find(Food target, Food[] con, int i) {
        if (i == con.length) return false;
        Food cur = con[i];
        if (target.p == cur.p && target.c == cur.c && target.f == cur.f) return true;
        if (target.p >= cur.p && target.c >= cur.c && target.f >= cur.f) {
            Food tmp = new Food(target.p - cur.p, target.c - cur.c, target.f - cur.f);
            boolean flag = find(tmp, con, i+1);
            if (flag) return true;
        }

        return find(target, con, i+1);
    }


    static class Food {
        int p,c,f;
        public Food(int p, int c, int f) {
            this.p = p;
            this.c = c;
            this.f = f;
        }
    }
}
