#include <iostream>
#include <vector>
#include <map>
using namespace std;

vector<int> p,c,f;
map<pair<pair<int,int>,pair<int,int> > ,int>dp;
bool halt;

void solve(int n, int pp, int cc, int ff){
    if(pp<0||cc<0||ff<0||halt||n >= p.size())
        return;
    if(dp.count(make_pair(make_pair(n,pp),make_pair(cc,ff))))
        return;
    dp[make_pair(make_pair(n,pp),make_pair(cc,ff))]=0;
    if(pp==cc&&cc==ff&&ff==0){
        halt=1;
        return;
    }
    solve(n,pp-p[n],cc-c[n],ff-f[n]);
    solve(n+1,pp,cc,ff);
}

int main() {
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	int T;cin >> T;
	for (int Z = 0; Z < T; Z++) {
	    cout << "Case #" <<Z+1<<": ";
	    int j,k,l;cin>>j>>k>>l;
	    int n;cin >> n;
	    p.clear();
	    c.clear();
	    f.clear();
	    dp.clear();
	    halt=0;
	    p.resize(n);
	    c.resize(n);
	    f.resize(n);
	    for (int i = 0; i < n; i++) {
	        cin >>p[i]>>c[i] >> f[i];
	    }
	    solve(0,j,k,l);
	    if(halt){
	        cout << "yes";
	    } else {
	        cout << "no";
	    }
	    cout << endl;
	    
	}
	return 0;
}
