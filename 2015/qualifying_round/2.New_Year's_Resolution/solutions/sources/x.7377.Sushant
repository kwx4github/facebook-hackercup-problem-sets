import java.util.*;
import java.io.*;

public class newyears
{

public static void main(String[] args) throws java.io.IOException
{
//Scanner sc = new Scanner(System.in);
//BufferedReader br = new BufferedReader( new InputStreamReader( new FileInputStream("in.txt")));

Reader.init(new FileInputStream("in.txt"));

PrintWriter out = new PrintWriter( new BufferedOutputStream( new FileOutputStream("out.txt") ) );


int t=0,p_amt=0,c_amt=0,f_amt=0,n=0;
int p_temp=0;
int c_temp=0;
int f_temp=0;


int p[]= new int[21];
int c[]= new int[21];
int f[]= new int[21];

boolean flag= false;

t=Reader.nextInt();
int cnt=0;


while(t-->0)
{
cnt++;

p_amt=Reader.nextInt();
c_amt=Reader.nextInt();
f_amt=Reader.nextInt();

n=Reader.nextInt();

flag= false;

p_temp=0;
c_temp=0;
f_temp=0;

for(int i=0;i<n;i++)
{
p[i]=Reader.nextInt();
c[i]=Reader.nextInt();
f[i]=Reader.nextInt();
}


if(n==1)
{
p_temp+=p[0];c_temp+=c[0];f_temp+=f[0];
		
if(p_temp==p_amt && c_temp==c_amt && f_temp==f_amt)
flag=true;
}

else
{


for(int i=0;i<n;i++)
{
p_temp= p[i];
c_temp= c[i];
f_temp= f[i];

		if(flag)
		break;

	for(int j=0;j<n;j++)
	{
		

		if(flag)
		 break;
		
			p_temp+= p[j];
			c_temp+= c[j];
			f_temp+= f[j];

		if(p_temp==p_amt && c_temp==c_amt && f_temp==f_amt)
		{
		flag=true;
		break;
		}

		if(p_temp>p_amt || c_temp>c_amt || f_temp>f_amt ) 
		{
		
		p_temp-= p[j];
		c_temp-= c[j];
		f_temp-= f[j];
		}
		
		


	}		

}

}

out.print("Case #"+cnt+": ");

if(flag)
out.print("yes");
else
out.print("no");

out.println("");

out.flush();



}
out.close();

}

}



class Reader {
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    
    static void init(InputStream input) {
        reader = new BufferedReader(
                     new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }

    
    static String next() throws java.io.IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            tokenizer = new StringTokenizer(
                   reader.readLine() );
        }
        return tokenizer.nextToken();
    }

    static int nextInt() throws java.io.IOException {
        return Integer.parseInt( next() );
    }
	
    static double nextDouble() throws java.io.IOException {
        return Double.parseDouble( next() );
    }



}