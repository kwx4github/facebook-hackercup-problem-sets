
//~        Author : Sarvesh Mahajan                             
//               IIIT,Hyderabad                                   
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#ifndef ONLINE_JUDGE
#define DEBUG
#endif

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define clr(x) x.clear()
#define For(i,a,b) for(i=a;i<b;i++)
#define loop(i,b) for(i=0;i<b;i++)
#define Loop(i,b) for(i=1;i<=b;i++)
#define pi(n) printf("%d ",n)
#define si(n) scanf("%d",&n)
const int MOD=1e9+7;
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef vector<int> VI;
typedef long long LL;
#define F first
#define S second
#define sz size
#define pLL(x) cout<<x<<' '
#define fill(x,c) memset(x,c,sizeof(x))
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#ifdef DEBUG
#define DB(x)              cout<<__LINE__<<" :: "<<#x<< ": "<<x<<endl;
#define DB2(x, y)          cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<endl;
#define DB3(x, y, z)       cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<" | "<<#z<<": "<<z<<endl;
#else
#define DB(x)
#define DB2(x,y)
#define DB3(x,y,z)
#endif
int a[5],res[5],A[50][5];
int main()
{
//ios_base::sync_with_stdio(false);
int n,t,m,l,k,ans,i,j,fl;
t=1;
int T;
si(T);
Loop(t,T)
{
        map<pair<int,PII>,int> v;
	loop(i,3)
		si(a[i]);
	si(n);
	loop(i,n)
		loop(j,3)
		si(A[i][j]);
	printf("Case #%d: ",t);
	int ff=n/2;
	int ss=n-ff;
	int mask=1<<ff;
	mask--;
	int fl=0;
	for(;mask>=0;--mask)
	{
		res[0]=res[1]=res[2]=0;
		loop(j,ff)
			if((mask>>j)&1)
			{
				loop(k,3)
				res[k]+=A[j][k];
			}

	        v[mp(res[0],mp(res[1],res[2]))]=1;
	}
	mask=1<<ss;
	int offset=ff;
	mask--;
	for(;mask>=0;--mask)
	{
		res[0]=res[1]=res[2]=0;
		for(j=0;j<ss;++j)
		{
			int val=offset+j;
			if((mask>>j)&1)
			{
				loop(k,3)
					res[k]+=A[val][k];
			}
		}
		loop(k,3)
			res[k]=a[k]-res[k];


			if(v[mp(res[0],mp(res[1],res[2]))])
			{
				fl=1;
				puts("yes");
				break;
			}
	
		if(fl)
			break;
	}



	if(!fl)
		puts("no");




}
return 0;
}
