#!/usr/bin/env python
import sys
import itertools


def read_integer():
    return int(sys.stdin.readline())


def read_integers(num=None):
    integers = map(int, sys.stdin.readline().split())
    assert num is None or len(integers) == num
    return tuple(integers)


def add_foods(a, b):
    return a[0] + b[0], a[1] + b[1], a[2] + b[2]


def solve():
    # The first line consists of three space-separated integers: GP, GC, and
    # GF, which represent the amount of protein, carbohydrates, and fat that
    # Alex wants to eat. The next line has the number of foods for that test
    # case, an integer N. The next N lines each consist of three space-
    # separated integers: P, C, and F, which represent the amount of protein,
    # carbohydrates, and fat in that food, respectively.
    goal = read_integers(3)

    foods = []

    num_foods = read_integer()
    for i in range(num_foods):
        food = read_integers(3)

        # Filter foods with too many nutrients
        if food[0] <= goal[0] or food[1] <= goal[1] or food[2] <= goal[2]:
            foods.append(food)
        # else:
        #     print >>sys.stderr, food, ">", goal

    # If there is a single food with the right nutrients, just return yes.
    if goal in foods:
        return "yes"

    # Calculate the total nutrients for each combination of foods, and if
    # they match the goal, return yes.
    for n in range(2, num_foods + 1):
        for combination in itertools.combinations(foods, n):
            nutrients = reduce(add_foods, combination)

            if nutrients == goal:
                print >>sys.stderr, combination, goal
                return "yes"

    return "no"

def main():
    T = read_integer()
    for case in range(1, T+1):
        print "Case #%d: %s" % (case, solve())


if __name__ == "__main__":
    main()
