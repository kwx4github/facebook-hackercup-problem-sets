#include <iostream>
using namespace std;

int values[20][3];

void sortValues(int N)
{
	int swapidx;
	int temp;

	while(N>0)
	{
		swapidx = 0;
		for(int i = 1; i<N; i++)
		{
			if(values[i][0] > values[i-1][0])
			{
				temp = values[i-1][0];
				values[i-1][0] = values[i][0];
				values[i][0] = temp;

				temp = values[i-1][1];
				values[i-1][1] = values[i][1];
				values[i][1] = temp;

				temp = values[i-1][2];
				values[i-1][2] = values[i][2];
				values[i][2] = temp;

				swapidx = i;
			}
		}
		N = swapidx;
	}
}

int main() {
	
	int T, N, Gp, Gc, Gf;
	int sumGp = 0, sumGc = 0, sumGf = 0;
	cin >> T;
	std::string answer;
	

	for(int kase = 1; kase <= T; kase++)
	{
		cin >> Gp;
		cin >> Gc;
		cin >> Gf;
		cin >> N;
		answer = "no";

		for(int i = 0; i < N; i++)
		{
			cin >> values[i][0];
			cin >> values[i][1];
			cin >> values[i][2];

			if(values[i][0] > Gp || values[i][1] > Gc || values[i][2] > Gf) values[i][0] = 0;
		}

		for(int i = N; i < 20; i++)
		{
			values[i][0] = 0;
			values[i][1] = 0;
			values[i][2] = 0;
		}

		sortValues(N);

		for(int food = 0; food < N; food++)
		{
			if(values[food][0] == Gp && values[food][1] == Gc && values[food][2] == Gf)
			{
				answer = "yes";
				break;
			}

			if(values[food][0] < Gp && values[food][1] < Gc && values[food][2] < Gf)
			{
				sumGp = values[food][0];
				sumGc = values[food][1];
				sumGf = values[food][2];

				for(int nextfood = food + 1; nextfood < N; nextfood++)
				{
					if((sumGp + values[nextfood][0]) <= Gp && (sumGc + values[nextfood][1]) <= Gc && (sumGf + values[nextfood][2]) <= Gf)
					{
						sumGp += values[nextfood][0];
						sumGc += values[nextfood][1];
						sumGf += values[nextfood][2];
					}

					if(sumGp == Gp && sumGc == Gc && sumGf == Gf) answer = "yes";
				}
			}
		}

		cout << "Case #" << kase << ": " << answer << endl;
	}

	return 0;
}