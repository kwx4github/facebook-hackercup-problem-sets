//package practice;
import java.util.Scanner;
class FBProb2
{
	public static void main(String[] args) {
			Scanner sc=new Scanner(System.in);
			int t=sc.nextInt();
			int gp,gc,gf;
			int n;
			int[] p,c,f;
			int k=1;
			while(k<=t)
			{
				//total reqs
				gp=sc.nextInt();
				gc=sc.nextInt();
				gf=sc.nextInt();
				//no. of foods
				n=sc.nextInt();
				//constituent of foods
				p=new int[n];
				c=new int[n];
				f=new int[n];
				for(int i=0;i<n;i++)
				{
					p[i]=sc.nextInt();
					c[i]=sc.nextInt();
					f[i]=sc.nextInt();
				}
				if(isSubsetSum(p,gp,n)&& isSubsetSum(c,gc,n) && isSubsetSum(f,gf,n))
					System.out.println("Case #"+k+": "+"yes");
				else
					System.out.println("Case #"+k+": "+"no");
				k++;

			}
			sc.close();
	}
	public static boolean isSubsetSum(int[] set,int sum,int n)
	{
		boolean[][] subset=new boolean[sum+1][n+1];
		//sum 0, so possible with empty set..so true
		for(int i=0;i<=n;i++)
			subset[0][i]=true;
		//sum non zero, but set 0..so false
		for(int i=1;i<=sum;i++)
			subset[i][0]=false;
		for(int i=1;i<=sum;i++)
			for(int j=1;j<=n;j++)
			{
				subset[i][j]=subset[i][j-1];
				if(i>=set[j-1])
					subset[i][j]=subset[i][j-1]|| subset[i-set[j-1]][j-1];
			}
		return subset[sum][n];
	}
}