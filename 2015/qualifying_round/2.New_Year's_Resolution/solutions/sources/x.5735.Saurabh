#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#define PR(x) cout<<#x<<"="<<x<<endl
#define READ2(x,y) scanf("%d %d",&x,&y)
#define REP(i,a,b) for(int i=a;i<b;i++)
#define RP(i,a) for(int i=0;i<a;i++)
#define tr(iter,container) for(auto iter = container.begin();iter!=container.end();iter++) 
#define S(x) cin>>x
#define PRARR(x,n) for(int i=0;i<n;i++) cout<<#x<<"["<<i<<"]= "<<x[i]
#define rd(arr,i,n) for(int i=0;i<n;i++) cin>>arr[i]
#define PB push_back
#define SUM(arr,n,sum) {sum=0;for(int i=0;i<n;i++) sum+=arr[i]; }
#define VC vector
#define CLR(arr) memset(arr,0,sizeof(arr))
#define FILL(arr,val) memset(arr,val,sizeof(arr))
using namespace std;
int test = 1;
struct data{
    int p;
    int c;
    int f;
};

void solve(){
    int N;
    int gp,gc,gf;
    S(gp);S(gc);S(gf);
    S(N);
    vector<data> val(N);
    REP(i,0,N) {
         S(val[i].p);S(val[i].c);S(val[i].f);
    }
    if (gp==0 && gc == 0 && gf == 0){
        cout<<"yes"<<endl;
        return;
    }
    for(int i = 1;i< (1<<N) -1 ; i++){
       int tmp = i;
       int s[3]={0};
       int cntr = 0;
       while(tmp){
         s[0]+=((tmp&1)?(val[cntr].p):0);
         s[1]+=((tmp&1)?(val[cntr].c):0);
         s[2]+=((tmp&1)?(val[cntr].f):0);
         if (s[0] > gp || s[1] > gc || s[2] > gf) break;
         tmp>>=1;
         cntr++;
       }
       if (s[0]==gp && s[1]== gc && s[2] == gf){
          cout<<"yes"<<endl;
          return;
       }
    }
    cout<<"no"<<endl;
}
int main(){
    #ifndef ONLINE_JUDGE
    test = 3;
    #endif
    S(test);
    for (int i=0;i<test;i++){
        cout<<"Case #"<<i+1<<": ";
        solve();
    }
}

