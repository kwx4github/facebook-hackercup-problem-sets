//includes
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <list>
#include <utility>
#include <algorithm>
#include <cassert>
#include <fstream>
using namespace std;

//typedefs
typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<long long> vll;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;

//defines-general
#define to(a) __typeof(a)
#define all(vec)  vec.begin(),vec.end()
#define fill(a,val)  memset(a,val,sizeof(a))

//defines-iteration
#define repi(i,a,b) for(__typeof(b) i = a;i<b;i++)
#define repii(i,a,b) for(__typeof(b) i = a;i<=b;i++)
#define repr(i,b,a) for(__typeof(b) i = b;i>a;i--)
#define repri(i,b,a) for(__typeof(b) i = b;i>=a;i--)
#define tr(vec,it)  for(__typeof(vec.begin())  it = vec.begin();it!=vec.end();++it)



//defines-pair
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

// my own
#define sl(a) scanf("%lld",&a)
#define sll(a,b) scanf("%lld%lld",&a,&b)
#define slll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define sllll(a,b,c,d) scanf("%lld%lld%lld%lld",&a,&b,&c,&d)
#define fastio   std::ios_base::sync_with_stdio(false)
int temp=0;
ll P[100],C[100],F[100];

bool isSubsetSum(ll P[],ll C[],ll F[], ll n, ll GP,ll GC,ll GF)
{

    // Base Cases
   if (GP == 0 && GC == 0 && GF == 0)
     {
         //cout<<"reached sum 0"<<endl;
         return true;
     }
   if (n == 0 && (GP != 0 || GC != 0 || GF != 0))
     return false;

   // If last element is greater than sum, then ignore it
   if (P[n-1] > GP || C[n-1]>GC || F[n-1]>GF)
     return isSubsetSum(P,C,F,n-1,GP,GC,GF);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */

   return isSubsetSum(P,C,F,n-1,GP,GC,GF) || isSubsetSum(P,C,F,n-1,GP-P[n-1],GC-C[n-1],GF-F[n-1]);

}

int main()
{
    fastio;
    ifstream infile;
    ofstream outfile;
    infile.open("input.txt");
    outfile.open("output.txt");
    ll T,N,GP,GC,GF,ctr=1,flag=1;
    //cin>>T;
    infile>>T;
    while(T--)
    {
        flag=1;
        infile>>GP>>GC>>GF;
        infile>>N;
        for(int i=0;i<N;i++)
        {
            infile>>P[i]>>C[i]>>F[i];
        }
        if (!isSubsetSum(P,C,F,N,GP,GC,GF) )
                flag=0;

        if(flag)
                outfile<<"Case #"<<ctr<<": yes"<<endl;
        else
                outfile<<"Case #"<<ctr<<": no"<<endl;
        ctr++;

    }
}
