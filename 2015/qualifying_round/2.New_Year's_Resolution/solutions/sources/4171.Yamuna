import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;


public class TestFH2 {

	public static void main(String[] args) {try {
		BufferedReader br = new BufferedReader(new InputStreamReader(
				new FileInputStream("input.txt")));
		boolean start=true;
		  int count=0;


		  String str=br.readLine();
		  int t=Integer.parseInt(str);
	 		  while(count<t){
				  String[] values=br.readLine().split("\\s");
				  Node target=new Node(Integer.parseInt(values[0]),Integer.parseInt(values[1]),Integer.parseInt(values[2]));
				  int n=Integer.parseInt(br.readLine());
				  int c=0;
				  Node[] nodeList=new Node[n];
				  while(c<n){
					  String[] fvalues=br.readLine().split("\\s");
					  
					  nodeList[c]=new Node(Integer.parseInt(fvalues[0]),Integer.parseInt(fvalues[1]),Integer.parseInt(fvalues[2]));
					  
					  c++;
				  }
				  
				  boolean flag=isSubset(nodeList, new Node(target.p,target.c,target.f), n);
				  if(flag){
					  System.out.println("Case #"+(count+1)+": yes");
				  }
				  else{
					  System.out.println("Case #"+(count+1)+": no");
				  }
				  
				  
				  
				  count++;
			  }
			  
			  
		  
	  
	}
	catch(Exception e){
		e.printStackTrace();
	}
	
	

		
	}
	
	private static boolean isSubset(Node[] values,Node target,int n){
		if(target.c==0&&target.p==0&&target.f==0){
			return true;
		}
		if(n==0&&(target.c!=0||target.p!=0||target.f!=0)){
			return false;
		}
		if(values[n-1].f>target.f||values[n-1].p>target.p||values[n-1].c>target.c){
			
		  return	isSubset(values, target, n-1);
		}
		
	 return	isSubset(values, target, n-1)||isSubset(values, new Node(target.p-values[n-1].p,target.c-values[n-1].c,target.f-values[n-1].f), n);
		
		
	}
	
	 
		
	static class Node {
		
		int c,f,p;
		Node(int p,int c,int f){
			this.c=c;
			this.f=f;
			this.p=p;
		}
	}
	
	static class FlagNode{
		
		boolean c,f,p;
		FlagNode(boolean p,boolean c,boolean f){
			this.p=p;
			this.c=c;
			this.f=f;
		}
		
	}
}
