import java.io.*;
import java.util.*;

public class NewYearsResolution {
	public static class Food {
		int p;
		int c;
		int f;

		public Food(int p, int c, int f) {
			this.p = p;
			this.c = c;
			this.f = f;
		}
	}

	public boolean isSubsetSum2(Food[] set, int n, int sp, int sc, int sf) {
		if (sp == 0 && sc == 0 && sf == 0)
			return true;
		if (n == 0 && (sp != 0 || sc != 0 || sf != 0))
			return false;

		if (set[n - 1].p > sp || set[n - 1].c > sc || set[n - 1].f > sf)
			return isSubsetSum2(set, n - 1, sp, sc, sf);

		return isSubsetSum2(set, n - 1, sp, sc, sf)
				|| isSubsetSum2(set, n - 1, sp - set[n - 1].p, sc
						- set[n - 1].c, sf - set[n - 1].f);
	}

	public static void main(String[] args) throws FileNotFoundException,
			IOException {
		String inputFile = "new_years_resolution.txt";
		FileInputStream fis = new FileInputStream(inputFile);
		DataInputStream in = new DataInputStream(fis);
		BufferedReader br = new BufferedReader(new InputStreamReader(in));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(
				"new_years_resolution_out.txt")));
		NewYearsResolution res = new NewYearsResolution();
		int t = Integer.parseInt(br.readLine());
		StringTokenizer st;
		for (int i = 1; i <= t; i++) {
			st = new StringTokenizer(br.readLine());
			int gP = Integer.parseInt(st.nextToken());
			int gC = Integer.parseInt(st.nextToken());
			int gF = Integer.parseInt(st.nextToken());
			int foodCount = Integer.parseInt(br.readLine());
			Food[] food = new Food[foodCount];
			out.print("Case #" + i + ": ");
			for (int j = 1; j <= foodCount; j++) {
				st = new StringTokenizer(br.readLine());
				int p = Integer.parseInt(st.nextToken());
				int c = Integer.parseInt(st.nextToken());
				int f = Integer.parseInt(st.nextToken());
				food[j - 1] = new Food(p, c, f);
			}
			out.println(res.isSubsetSum2(food, food.length, gP, gC, gF) ? "yes" : "no");
		}
		br.close();
		out.close();
	}

}
