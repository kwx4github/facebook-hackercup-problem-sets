#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define Foreach(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define For(i,a,b) for(int (i)=(a);(i) < (b); ++(i))
#define rof(i,a,b) for(int (i)=(a);(i) > (b); --(i))
#define rep(i, c)	for(auto &(i) : (c))
#define x     first
#define y     second
#define pb  push_back
#define PB  pop_back()
#define iosfal  ios_base::sync_with_stdio(false)
#define mp(a,b) make_pair(a,b)
#define sqr(a)  ((1LL * (a) * (a)))
#define all(a)  a.begin() , a.end()
#define error(x) cerr << #x << " = " << (x) <<endl                                                                 
#define Error(a,b) cerr<<"( "<<#a<<" , "<<#b<<" ) = ( "<<(a)<<" , "<<(b)<<" )\n";
#define errop(a) cerr<<#a<<" = ( "<<((a).x)<<" , "<<((a).y)<<" )\n";
#define coud(a,b) cout<<fixed << setprecision((b)) << (a) << endl
#define dis(a,b)	(point(a.x - b.x, a.y - b.y))
#define L(x)	((x)<<1)
#define R(x)	(((x)<<1)+1)
#define mt	make_tuple
#define get(a,b)	get<b>(a)
typedef long long ll;
typedef pair<int,int>pii;
typedef pair<ll,int> pl;
typedef tree<pl, null_type, less<pl>, rb_tree_tag, tree_order_statistics_node_update>	os;
const int inf = 1e9 + 10;
const int maxn = 21;
int b[maxn][3];
int a[3];
int main(){
	iosfal;
	int T;
	cin >> T;
	For(iT,1,T+1){
		cout << "Case #"<<iT<<": ";
		int n;
		For(i,0,3)
			cin >> a[i];
		cin >> n;
		For(i,0,n)
			For(j,0,3)
				cin >> b[i][j];
		bool ok = 0;
		For(m,0,1<<n){
			int c[3];
			fill(c,c+3,0);
			bool f = 1;
			For(i,0,n)	if((m >> i) & 1)
				For(j,0,3)
					c[j] += b[i][j];
			For(i,0,3)
				if(c[i] != a[i])
					f = 0;
			ok |= f;
		}
		if(ok)
			cout << "yes" << endl;
		else
			cout << "no" << endl;
	}
}

