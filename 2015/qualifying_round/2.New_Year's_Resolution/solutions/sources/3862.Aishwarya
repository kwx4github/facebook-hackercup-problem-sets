import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class NewYearResolution {
	private static int Gpro;
	private static int Gcarbo;
	private static int Gfat;
	private static int N;
	private static List<ArrayList<Integer>> food;

	public static void main(String[] args) throws IOException {
		BufferedReader bufferedReader = new BufferedReader(
				new InputStreamReader(System.in));
		String str = bufferedReader.readLine();
		int T = Integer.parseInt(str);
		String[] s;
		for (int i = 1; i <= T; i++) {
			str = bufferedReader.readLine();
			s = str.split(" ");
			Gpro = Integer.parseInt(s[0]);
			Gcarbo = Integer.parseInt(s[1]);
			Gfat = Integer.parseInt(s[2]);
			food = new ArrayList<ArrayList<Integer>>();
			N = Integer.parseInt(bufferedReader.readLine());
			for (int j = 0; j < N; j++) {
				str = bufferedReader.readLine();
				s = str.split(" ");
				food.add(new ArrayList<Integer>());
				food.get(j).add(Integer.parseInt(s[0]));
				food.get(j).add(Integer.parseInt(s[1]));
				food.get(j).add(Integer.parseInt(s[2]));
			}
			if (sumOfSubset(0, 0, 0, 0)) {
				System.out.println("Case #" + i + ": " + "yes");
			} else {
				System.out.println("Case #" + i + ": " + "no");
			}
		}
	}

	private static boolean sumOfSubset(int tPro, int tCarbo, int tFat, int ii) {
		for (int j = ii; j < N; j++) {
			for (int i = j; i < N; i++) {
				if ((tPro + food.get(i).get(0) <= Gpro)
						&& (tCarbo + food.get(i).get(1) <= Gcarbo)
						&& (tFat + food.get(i).get(2) <= Gfat)) {
					if ((tPro + food.get(i).get(0) == Gpro)
							&& (tCarbo + food.get(i).get(1) == Gcarbo)
							&& (tFat + food.get(i).get(2) == Gfat)) {
						return true;
					}
					if (i < (N - 1)
							&& sumOfSubset(tPro + food.get(i).get(0), tCarbo
									+ food.get(i).get(1), tFat
									+ food.get(i).get(2), i + 1)) {
						return true;
					}
				}
			}
		}
		return false;
	}

}
