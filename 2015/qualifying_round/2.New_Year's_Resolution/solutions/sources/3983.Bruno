#include <bits/stdc++.h>

using namespace std;

struct node
{
	int p,c,f;
	node (){};
	node(int pp, int cc, int ff)
	{
		p = pp;
		c = cc;
		f = ff;
	}
};

int t,gp,gc,gf,n,p,c,f;
node x;
vector<node> v;

bool solve(int curr, int sp, int sc, int sf)
{
	if (curr == v.size())
	{
		return sp == gp && sc == gc && sf == gf;
	}

	if (solve(curr + 1, sp + v[curr].p, sc + v[curr].c, sf + v[curr].f))
		return true;
	if (solve(curr + 1, sp, sc, sf))
		return true;

	return false;
}

int main(void)
{
	cin >> t;
	for (int cases = 1; cases <= t; ++cases)
	{
		v.clear();
		cin >> gp >> gc >> gf;
		cin >> n;
		for (int i = 0; i < n; ++i)
		{
			cin >> p >> c >> f;
			node x(p,c,f);
			v.push_back(x);
		}
		if (solve(0, 0, 0, 0))
		{
			cout << "Case #" << cases << ": yes" << "\n";
		}
		else
		{
			cout << "Case #" << cases << ": no" << "\n";	
		}
	}
	return 0;
}