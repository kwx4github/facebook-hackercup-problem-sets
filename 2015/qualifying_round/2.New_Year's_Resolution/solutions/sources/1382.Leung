#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <cmath>
#include <iostream>
#include <set>
#include <fstream>
#include <string>
#include <vector>

using namespace std;
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s); i>=(e); i--)
#define LL long long
#define eps 1e-6
#define pi acos(-1.0)
#define fail {printf("Impossible\n"); return 0;}
LL max(LL a,LL b){if (a>b){return a;} else {return b;}}
LL min(LL a,LL b){if (a<b){return a;} else {return b;}}

struct P{
    double x, y;
    P(){}
    P(double x, double y):x(x) , y(y){}
    P operator+ (const P &a) const {return P(x+a.x, y+a.y);}
    P operator- (const P &a) const {return P(x-a.x, y-a.y);}
    double operator^ (const P &a) const {return x*a.x+y*a.y;}
    void in(){scanf("%lf%lf", &x, &y);}
    void out(){printf("REQUIRED %.7f %.7f\n", x, y);}
    double dist(P a, P b) {return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}
    double sqdist(P a, P b) {return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);}

};

#define N 300001
#define M 1000001

int n;
int ta, tb, tc;
int a[N], b[N], c[N];

void solve(int tc){
    printf("Case #%d: ", tc);
    scanf("%d%d%d%d", &ta, &tb, &tc, &n);
    FOE(i, 1, n) scanf("%d%d%d", &a[i], &b[i], &c[i]);
    bool ok = false;
    FOR(i, 0, 1 << n){
        int fa, fb, fc;
        fa = fb = fc = 0;
        FOE(j, 1, n) if (i & (1 << (j - 1))){
            fa += a[j]; fb += b[j]; fc += c[j];
        }
        if (fa == ta && fb == tb && fc == tc) ok = true;
    }
    if (ok) puts("yes"); else puts("no");
}

int main(){
    freopen("FB_B.txt", "r", stdin);
    freopen("out.ans", "w", stdout);
    int t;
    scanf("%d", &t);
    FOE(i, 1, t) solve(i);
    return 0;
}

