package newYearResolution;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class NewYearsResolution {

	public static void main(String[] args){
		Scanner in=new Scanner(System.in);
		int T=in.nextInt();
		for(int i=0;i<T;i++){
			int[] target=new int[3];
			for(int j=0;j<3;j++){
				target[j]=in.nextInt();
			}
			int N=in.nextInt();
			List<ArrayList<Integer>> ingredients=new ArrayList<ArrayList<Integer>>();
			for(int j=0;j<N;j++){
				ArrayList<Integer> ingre=new ArrayList<Integer>();
				for(int k=0;k<3;k++){
					ingre.add(in.nextInt());
				}
				ingredients.add(ingre);
			}
			String result=resolution(target,ingredients);
			int caseNum=i+1;
			System.out.println("Case #"+caseNum+": "+result);
		}
		in.close();
	}
	//remove unqualified. sort
	//for each one, subtract, remove unqualified,cycle, 
	//use arraylist.
	//use bit number to compare.
	//first check first one, if satisfied then just use this in the second one and third one.

	private static String resolution(int[] target,
			List<ArrayList<Integer>> ingredients) {
		// TODO Auto-generated method stub
		filter(target,ingredients);
		for(int i=0;i<Math.pow(2,ingredients.size());i++){//bit to compare.
			int sum1=0;
			for(int j=0;j<ingredients.size();j++){
				if((i>>j&1)==1){//if this bit is enabled.
					sum1+=ingredients.get(j).get(0);
				}
			}
			if(sum1==target[0]){
				int sum2=0;
				for(int j=0;j<ingredients.size();j++){
					if((i>>j&1)==1){//if this bit is enabled.
						sum2+=ingredients.get(j).get(1);
					}
				}
				if(sum2==target[1]){
					int sum3=0;
					for(int j=0;j<ingredients.size();j++){
						if((i>>j&1)==1){//if this bit is enabled.
							sum3+=ingredients.get(j).get(2);
						}
					}
					if(sum3==target[2]){
						return "Yes";
					}
				}
			}
			
		}
		return "No";
	}
	private static void filter(int[] target,
			List<ArrayList<Integer>> ingredients) {
		// TODO Auto-generated method stub
		//remove the unqualified entries.
		int length=3;
		int index=0;
		while(index<ingredients.size()){
			for(int i=0;i<length;i++){
				if(ingredients.get(index).get(i)>target[i]){
					ingredients.remove(index);
					index--;
					break;
				}
			}
			index++;
		}
	}


}
