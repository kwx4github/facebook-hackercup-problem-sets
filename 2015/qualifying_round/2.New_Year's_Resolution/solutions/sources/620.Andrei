#include <fstream>
#include <vector>
#include <algorithm>

using namespace std;

inline int GetBit(const int mask, const int bit) {
    return (mask >> bit) & 1;
}

int main() {
    ifstream cin("input.txt");
    ofstream cout("output.txt");
    int tests;
    cin >> tests;
    for (int t = 1; t <= tests; ++t) {
        int n, requiredP, requiredC, requiredF;
        cin >> requiredP >> requiredC >> requiredF >> n;
        vector<int> p, c, f;
        p = c = f = vector<int>(n);
        for (int i = 0; i < n; ++i)
            cin >> p[i] >> c[i] >> f[i];
        bool possible = false;
        for (int mask = 0; mask < (1 << n); ++mask) {
            int currentP = 0, currentC = 0, currentF = 0;
            for (int i = 0; i < n; ++i) {
                if (GetBit(mask, i) == 1) {
                    currentP += p[i];
                    currentC += c[i];
                    currentF += f[i];
                }
            }
            if (currentP == requiredP && currentC == requiredC && currentF == requiredF)
                possible = true;
        }
        cout << "Case #" << t << ": ";
        if (possible)
            cout << "yes\n";
        else
            cout << "no\n";
    }
    cin.close();
    cout.close();
    return 0;
}
