import java.util.Scanner;
import java.io.FileInputStream;

public class Solution {
	public static void main(String args[]) {
		try {
			Scanner scanner = new Scanner(new FileInputStream("new_years_resolution.txt"));

			int t = scanner.nextInt();
			scanner.nextLine();

			for(int i = 0; i < t; i++) {
				int gp = scanner.nextInt();
				int gc = scanner.nextInt();
				int gf = scanner.nextInt();
				scanner.nextLine();

				int n = scanner.nextInt();
				scanner.nextLine();

				int ns[][] = new int[n][];

				for(int j = 0; j < n; j++) {
					//int p = scanner.nextInt();
					//int c = scanner.nextInt();
					//int f = scanner.nextInt();
					ns[j] = new int[]{scanner.nextInt(), scanner.nextInt(), scanner.nextInt()};
				}

				System.out.println("Case #" + (i+1) + ": " + ((isPossible(gp, gc, gf, ns)) ? "yes" : "no"));
			}
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	}

	private static boolean isPossibleRecursive(int x, int y, int z, int ns[][], String memo) {
		if(x == 0 && y == 0 && z == 0) {
			return true;
		}
		else if(x < 0 || y < 0 || z < 0) {
			return false;
		}
		else {
			for(int i = 0; i < ns.length; i++) {
				if(memo.contains("<" + (x-ns[i][0]) + "," + (y-ns[i][1]) + "," + (z-ns[i][2]) + ">")) {
					return false;
				}
				else {
					memo += "<" + (x-ns[i][0]) + "," + (y-ns[i][1]) + "," + (z-ns[i][2]) + ">";
				}
				if(isPossible(x-ns[i][0], y-ns[i][1], z-ns[i][2], ns)) {
					return true;
				}
			}
			return false;
		}
	}

	private static boolean isPossible(int x, int y, int z, int ns[][]) {
		String memo = "";
		return isPossibleRecursive(x, y, z, ns, memo);
	}
}