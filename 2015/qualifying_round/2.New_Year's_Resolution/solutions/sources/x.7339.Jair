
def subset_sum(numbers, target, partial=[]):    
    tmp = [x[0] for x in partial]
    s = sum(tmp)    
        
    if s == target:
        tmp = [x[1] for x in partial]
        res.append(tmp)
    if s >= target:
        return 
            
    for i in range(len(numbers)):
        n = numbers[i]
        remaining = numbers[i+1:][:]
        subset_sum(remaining, target, partial + [n]) 
        
t = input()

for _i in range(t):
    _p,_c,_g = raw_input().split()
    n = input()
    p = c = g = []    
    lista = []
    for i in range(n):
        lista.append(list(raw_input().split()))
        
    p = [(int(x[0]),idx) for idx,x in enumerate(lista)]
    c = [(int(x[1]),idx) for idx,x in enumerate(lista)]
    g = [(int(x[2]),idx) for idx,x in enumerate(lista)]
    
    
    res = []
    subset_sum(p,int(_p))    
    pp = res
    res = []
    subset_sum(c,int(_c))
    cc = res
    res = []
    subset_sum(g,int(_g))
    gg = res
        
    r1 = [val for val in pp if val in cc]
    r2 = [val for val in r1 if val in gg]
    
    if not r2:
        print "Case #"+str(_i+1)+ ": no"
    else:
        print "Case #"+str(+_i+1)+": yes"

    
