#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct food
{
    int p;
    int c;
    int f;
};

bool myfunc(vector <struct food*>V,int p,int c,int f,int gp,int gc,int gf,int ind)
{   if((p==gp)&&(c==gc)&&(f==gf))
   {
       return true;
   }
	else if((ind==V.size())||(p>gp)||(c>gc)||(f>gf))
   {
       return false;
   }
   else
   {
       return myfunc(V,p+V[ind]->p,c+V[ind]->c,f+V[ind]->f,gp,gc,gf,ind+1)||myfunc(V,p,c,f,gp,gc,gf,ind+1);
   }
}

int main()
{ int t;
    scanf("%d",&t);
    int j=0;
    while(t--)
    {    printf("Case #%d: ",++j);
        int gp,gc,gf;
       scanf("%d %d %d",&gp,&gc,&gf);
        int n;
        scanf("%d",&n);
        vector <struct food*>V;
        for(int i=0;i<n;i++)
        {   int p,c,f;
            scanf("%d %d %d",&p,&c,&f);
            if((p<=gp)&&(c<=gc)&&(f<=gf))
            {
            struct food * temp = (struct food*)malloc(sizeof(struct food));
            temp->c=c;
            temp->f=f;
            temp->p=p;
            V.push_back(temp);
            }
        }
        bool res=myfunc(V,0,0,0,gp,gc,gf,0);
        if(res)
        {
            printf("yes\n");
        }
        else
        {
            printf("no\n");
        }
    }
    return 0;
}
