#include<bits/stdc++.h>
#define pii pair<long long int,long long int>
#define ppi pair<long long int,pii>
#define F first
#define S second
using namespace std;
vector<ppi> vec;
long long int subset(long long int,long long int,long long int,long long int);
int main()
{
    long long int t,n;
    long long int gp,gc,gf;
    long long int sp,sc,sf;
    long long int p,c,f;
  cin>>t;
  for(long long int k=1;k<=t;k++)
  {    sp=sc=sf=0;
      cin>>gp>>gc>>gf;
      cin>>n;
      for(long long int i=0;i<n;i++)
      {  cin>>p>>c>>f;
          vec.push_back(make_pair(p,make_pair(c,f) ) );
sp+=p;
sc+=c;
sf+=f;

      }
      if( sp<gp || sc<gc || sf<gf )cout<<"Case #"<<k<<": "<<"no\n";
      else if( sp==gp && sc==gc && sf==gf )cout<<"Case #"<<k<<": "<<"yes\n";
      else
      {
      if(subset(gp,gc,gf,n))cout<<"Case #"<<k<<": "<<"yes\n";
      else cout<<"Case #"<<k<<": "<<"no\n";
       }
       vec.clear();
  }



}
long long int subset(long long int gp,long long int gc,long long int gf,long long int n)
{long long int sp,sc,sf;
long long int flag=0;
long long int po=(long long int)pow(2,n);
    for(long long int k=1;k<po;k++)
    {sp=sc=sf=0;flag=0;
        for(long long int i=0;i<n;i++)
    {
        if( (k & (1<<i)) )
        { sp+=vec[i].F;
          sc+=vec[i].S.F;
          sf+=vec[i].S.S;}
    }
    if(sp==gp && sc==gc && gf==sf){flag=1;break;}
    }

    if(flag)return 1;
    else return 0;
}
