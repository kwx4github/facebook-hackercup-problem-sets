
# coding: utf-8

# In[1]:

#Parsing

INPUT = ''

with open('new_years_resolution.txt', 'r') as f:
    INPUT = f.read()

f = INPUT.split('\n')
num_cases = int(f[0])

cases = {}

case_no = 0
line_no = 1

while line_no < len(f):
    g = f[line_no].split(' ')
    gp = int(g[0])
    gc = int(g[1])
    gf = int(g[2])
    
    line_no +=1
    cases[case_no] = {'num_cases':int(f[line_no]), 'gp':gp, 'gc':gc, 'gf':gf, 'options':[]}
    
    for num in range(0, int(f[line_no])):
        line_no+=1
        g = f[line_no].split(' ')
        gp = int(g[0])
        gc = int(g[1])
        gf = int(g[2])
        cases[case_no]['options'].append({'gp':gp,'gc':gc,'gf':gf})
    line_no +=1    
    case_no += 1


# In[20]:

from itertools import combinations

#Logic
c = 0
for case in cases:
    c +=1
    case = cases[case]
    gpt = case['gp']
    gct = case['gc']
    gft = case['gf']
    
    found = False
    
    for num in range(0,case['num_cases']+1):
        if found: break;
            
        combos = combinations(case['options'],num)
        for combo in combos:
            if found: break
                
            gps = 0
            gcs = 0
            gfs = 0
            for e in combo:
                gps += e['gp']
                gcs += e['gc']
                gfs += e['gf']
                
                if(gps==gpt and gcs==gct and gfs==gft):
                    found = True
                    break
                    
    with open('nyr.txt','a') as f:
        f.write(("Case #%s: "+("yes\r\n" if found else "no\r\n")) % c)


# In[19]:




# In[ ]:



