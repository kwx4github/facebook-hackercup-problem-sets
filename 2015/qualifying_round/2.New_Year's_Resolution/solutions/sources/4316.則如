#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct food
{
	int p;
	int c;
	int f;
}FOOD;

int compare(const void *a, const void *b)
{
	FOOD x = *(FOOD*)a;
	FOOD y = *(FOOD*)b;
	if(x.p > y.p)
		return 1;
	if(x.p < y.p)
		return -1;
	if(x.c > y.c)
		return 1;
	if(x.c < y.c)
		return -1;
	if(x.f > y.f)
		return 1;
	return -1;
}

int sum(FOOD x[], int now, int n, int pt, int ct, int ft, int used[])
{
	int i, f = 0;
	if(pt == 0 && ct == 0 && ft == 0)
		return 1;
	if(pt < 0 || ct < 0 || ft < 0)
		return 0;
	if(now < n){
		for(i = 0;i < n;i++){
			if(used[i] == 0){
				used[i] = 1;
				f = sum(x, now + 1, n, pt - x[i].p, ct - x[i].c, ft - x[i].f, used);
				used[i] = 0;
				if(f == 1)
					return 1;
			}
		}
	}
	return 0;
}

int main()
{
	int t, cc = 1, pt, ct, ft, n, i, f, used[30];
	FOOD x[30];
	scanf("%d", &t);
	while(t--){
		scanf("%d%d%d%d", &pt, &ct, &ft, &n);
		for(i = 0;i < n;i++){
			scanf("%d%d%d", &x[i].p, &x[i].c, &x[i].f);
			used[i] = 0;
		}
		qsort(x, n, sizeof(FOOD), compare);
		f = 0;
		for(i = 0;i < n;i++){
			used[i] = 1;
			f = sum(x, 0, n, pt - x[i].p, ct - x[i].c, ft - x[i].f, used);
			used[i] = 0;
			if(f == 1)
				break;
		}
		if(f == 1)
			printf("Case #%d: yes\n", cc++);
		else
			printf("Case #%d: no\n", cc++);
	}
	return 0;
}
