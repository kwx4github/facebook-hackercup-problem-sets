import sys

def main():
	def over(gp,gc,gf,pvalues,cvalues,fvalues,trial):
		p,c,f =0,0,0
		for i in trial:
			p+=pvalues[i]
			c+=cvalues[i]
			f+=fvalues[i]
			if p > gp or c> gc or f>gf:
				return True
		return False
	def checkexact(gp,gc,gf,pvalues,cvalues,fvalues,trial):
		p,c,f =0,0,0
		for i in trial:
			p+=pvalues[i]
			c+=cvalues[i]
			f+=fvalues[i]
			if p == gp and c== gc and f==gf:
				return True
		return False


	def test(gp,gc,gf, pvalues,cvalues,fvalues):
		nofoods = len(pvalues)
		failset = set()
		def solve(trial):	
			#base case
			#if any exceed, or if trial is subset of failed, then reject
			for failtrial in failset:
				if set(failtrial) <= set(trial):
					return "no"

			if over(gp,gc,gf,pvalues,cvalues,fvalues,trial):
				failset.add(tuple(trial))
				return "no"
			
			elif checkexact(gp,gc,gf,pvalues,cvalues,fvalues,trial):
				return "yes"

			#recursive case
			for eachfood in xrange(nofoods):
				if eachfood in trial: continue
				result = solve(trial.union([eachfood]))
				if result == "yes":
					return "yes"
			#run through entire loop with no solution..
			return "no"
		return solve(set())


	inputstuff = open(sys.argv[1])
	T = int(inputstuff.readline())
	output=""

	for eachtest in xrange(T):
		#desired gp,gc,gf
		inputline = inputstuff.readline().strip()
		tvalues=inputline.split(" ")
		gp,gc,gf = int(tvalues[0]),int(tvalues[1]),int(tvalues[2])
		#no of foods
		nofoods = int(inputstuff.readline().strip())
		#food values. each food is stored in 3 arrays 
		pvalues, cvalues,fvalues = [],[],[]
		for eachfood in xrange(nofoods):
			inputfood = inputstuff.readline().strip()
			foodvalues = inputfood.split(" ")
			pvalues.append(int(foodvalues[0]))
			cvalues.append(int(foodvalues[1]))
			fvalues.append(int(foodvalues[2]))
			
		#print len(pvalues), len(cvalues), len(fvalues)

		result = test(gp,gc,gf, pvalues,cvalues,fvalues)

		output+="Case #%d: %s\n" % (eachtest+1, result)
	f = open('bans.txt','w')
	f.write(output)
	f.close()
	print output

	#g = open("new_years_resolution_example_output.txt", "r")
	#sample = g.read()
	#assert(output==sample)
	#print repr(output)
	#print repr(sample)




main()