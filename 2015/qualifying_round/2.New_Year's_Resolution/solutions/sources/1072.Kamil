#include<cstdio>
#include<algorithm>
#include<vector>
#include<cstring>
#include<set>
#include<assert.h>
using namespace std;
#define FOR(i,a,n) for(int i = (a); i <= (n); ++i)
#define FORD(i,a,n) for(int i = (a); i >= (n); --i)
#define REP(i,n) FOR(i,0,(n)-1)
#define RI(i,n) FOR(i,1,(n))
#define pb push_back
#define st first
#define nd second
#define mini(a,b) a=min(a,(b))
#define maxi(a,b) a=max(a,(b))
bool debug;
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 1e6 + 5;

int t[nax][3];
int res[3];
int cel[3];

int main(int argc, char * argv[]) {
	debug = argc > 1;
	int z;
	scanf("%d", &z);
	RI(test, z) {
		bool ok = false;
		printf("Case #%d: ", test);
		REP(j, 3) scanf("%d", &cel[j]);
		int n;
		scanf("%d", &n);
		REP(i, n) REP(j, 3) scanf("%d", &t[i][j]);
		int M = 1 << n;
		RI(m, M - 1) {
			REP(j, 3) res[j] = 0;
			REP(i, n) if(m & (1 << i)) REP(j, 3) res[j] += t[i][j];
			if(!ok) {
				ok = true;
				REP(j, 3) if(res[j] != cel[j]) ok = false;
			}
		}
		if(ok) puts("yes");
		else puts("no");
	}
	return 0;
}
