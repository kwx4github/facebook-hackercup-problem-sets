#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);
using namespace std;

#define LL long long
#define LD long double
#define eps 1e-10
#define INF 1000000000
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define Clear(t) memset((t),0,sizeof(t))
#define alTrue(t) memset((t),1,sizeof(t))
#define alNeg(t) memset((t),-1,sizeof(t))
#define REP(i,n) for(__typeof(n) i=0; i<(n); i++)
#define FOR(i,a,b) for(__typeof(b) i=a; i<=(b); i++)
#define RFOR(i,a,b) for(__typeof(b) i=a; i>=(b); i--)
#define Iterator(it, l) for (typeof(l.begin()) it = l.begin(); it != l.end(); it++)
#define PI 3.1415926535897932384626433832795028841971693993751
#define Floyd(G,p,n) FOR(k,p,n) FOR(i,p,n) FOR(j,p,n) G[i][j] = min( G[i][j], G[i][k] + G[k][j] );

typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;

template<class T> T sq(T n){return n*n;}
template<class T> T getabs(T n){return n<0 ? -n : n;}
template<class T> T getmax(T a, T b){return ( a>b ? a : b);}
template<class T> T getmin(T a, T b){return ( a<b ? a : b);}
template<class T> void setmax(T &a, T b){if(a<b) a=b;}
template<class T> void setmin(T &a, T b){if(a>b) a=b;}
template<class T> T gcd(T a, T b){return (b!=0?gcd<T>(b,a%b):a);}
template<class T> T lcm(T a, T b){return ((a*b)/gcd(a,b));}
template<class T> T power(T n, T p){if(p==0) return 1; return ((p==1)?n:(n*power(n,p-1)));}

//disjointSet; unionFind; setUnion
vector<int>pset(1000);
void initSet(int _size){pset.resize(_size); REP(i,_size) pset[i]=i; }
int findSet(int i){return (pset[i]==i)?i:(pset[i]=findSet(pset[i]));}
void unionSet(int i,int j){pset[findSet(i)]=findSet(j);}
bool isSameSet(int i,int j){return findSet(i)==findSet(j);}
//disjointSet; unionFind; setUnion

int tst, cases, n;
int gp, gc, gf, id, sz;
int sp, sc, sf;
bool ok;

struct food{
    int p,c,f;
};

int main(){
    //freopen("new_years_resolution.txt","r",stdin);
    //freopen("new_years_resolution_output.txt","w",stdout);
    scanf("%d", &tst);
    while(tst--)
    {
        scanf("%d %d %d", &gp, &gc, &gf);
        scanf("%d", &n);

        vector<food> v;
        food fd;
        id = 0;

        REP(i,n)
        {
            scanf("%d %d %d", &fd.p, &fd.c, &fd.f);
            if( fd.p <= gp && fd.c <= gc && fd.f <= gf)
            {
                v.pb(fd);
                id++;
            }
        }

        //sort( v.begin(),v.end(), CmpSort );
        //REP(i,n) printf("%d %d %d\n", v[i].p, v[i].c, v[i].f);

        //printf("%d\n", id);
        sz = pow(2,id);
        ok = false;

        for(int i=0; i<sz; i++)
        {
            sp = sc = sf = 0;
            for(int j=0; j<id; j++)
            {
                if(i & (1<<j))
                {
                    sp += v[j].p;
                    sc += v[j].c;
                    sf += v[j].f;

                    if(sp==gp && sc==gc && sf==gf)
                    {
                        ok = true;
                        break;
                    }

                    if(sp>gp || sc>gc || sf>gf) break;
                }
            }
            if(ok) break;
        }

        if(ok) printf("Case #%d: yes\n", ++cases);
        else printf("Case #%d: no\n", ++cases);
    }
    return 0;
}
