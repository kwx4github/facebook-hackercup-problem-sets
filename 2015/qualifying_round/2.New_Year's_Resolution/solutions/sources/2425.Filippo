#!/usr/bin/env pypy
#-*- coding:utf-8 -*-

from __future__ import absolute_import, division, print_function, \
    unicode_literals

import sys

def subset_sum(objects, target):
    tot = 0
    for (w,v) in objects:
        tot += v

    sums = [tuple()] * (tot + 1)

    for (w,v) in objects:
        # Useless
        if v > target: continue

        s = sums[:]
        s[v] += ( (w,), )

        for (i, w2) in enumerate(sums):
            # Don't care to go higher, no negatives
            if i + v > target: break

            for xxx in w2:
                s[i + v] += (xxx + (w,),)

        sums = s

    return sums[target]


def main():
    if len(sys.argv) == 2:
        with open(sys.argv[1]) as f:
            with open('new_years_resolution_output.txt', 'w') as out:
                T = int(next(f).strip())
                for i in range(T):

                    gp, gc, gf = list(int(x) for x in next(f).split(' '))
                    N = int(next(f).strip())
                    objects = []
                    for j in range(N):
                        P, C, F = list(int(x) for x in next(f).split(' '))
                        objects.append(((P, C), F))

                    FOUND = False
                    for possible in subset_sum(objects, gf):
                        p, c = 0, 0
                        for pp, pc in possible:
                            p += pp
                            c += pc
                        if p == gp and c == gc:
                            FOUND = True

                    if FOUND:
                        print("Case #%i: yes" % (i+1), file=out)
                    else:
                        print("Case #%i: no" % (i+1), file=out)
        sys.exit(0)

    sys.exit(1)

if __name__ == '__main__':
    main()
