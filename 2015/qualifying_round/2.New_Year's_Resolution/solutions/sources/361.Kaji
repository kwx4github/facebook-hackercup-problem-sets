#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <vector>
#include <algorithm>
#include <set>
#include <queue>
#include <map>
#include <climits>
using namespace std;

#define REP(i,n) for(int i=0; i<(int)(n); i++)
#define RREP(i,n) for(int i=(int)n-1; i>=0; i--)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define RFOR(i,c) for(__typeof((c).rbegin())i=(c).rbegin();i!=(c).rend();++i)
#define ALL(c) (c).begin(), (c).end()

typedef long long int ll;
typedef pair<int, int> pii;
typedef pair<int, pair<int, int> > pipii;
typedef vector<int> vi;
#define mp make_pair

const int INF = 1e9;
const int MOD = 1e9+7;

int main(void){
	int T, N, Gp, Gc, Gf;
    cin >> T;
    REP(l, T){
        map<pair<int, pair<int, int> >, int> m;
        cin >> Gp >> Gc >> Gf;
        m[mp(0, mp(0, 0))] = 1;
        cin >> N;
        REP(i, N){
            int p, c, f;
            cin >> p >> c >> f;
            FOR(a, m){
                pair<int, pair<int, int> > e = (*a).first;
                int x = e.first + p, y = e.second.first + c, z = e.second.second + f;
                if(x > Gp || y > Gc || z > Gf) continue;
                m[mp(x, mp(y, z))] = 1;
            }
        }
        cout << "Case #" << l + 1 << ": ";
        if(m.count(mp(Gp, mp(Gc, Gf)))){
            cout << "yes" << endl;
        }
        else cout << "no" << endl;
    }
	
	return 0;
}

