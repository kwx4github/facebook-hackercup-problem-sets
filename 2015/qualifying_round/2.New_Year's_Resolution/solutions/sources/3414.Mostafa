import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Paths;
import java.util.Scanner;

public class FacebookHCP2 {

	static int numbers[][] = new int[21][3];
	static int n;

	public static void main(String[] args) throws IOException {
		Scanner in = new Scanner(Paths.get("new_years_resolution_input.txt"));
		PrintWriter writer = new PrintWriter("new_years_resolution_output.txt",
				"UTF-8");
		int nTestCases = in.nextInt();
		for (int i = 1; i <= nTestCases; i++) {
			int gP, gC, gF;
			gP = in.nextInt();
			gC = in.nextInt();
			gF = in.nextInt();
			n = in.nextInt();
			for (int j = 0; j < n; j++) {
				numbers[j][0] = in.nextInt();
				numbers[j][1] = in.nextInt();
				numbers[j][2] = in.nextInt();
			}
			writer.println("Case #" + i + ": "
					+ ((solve(0, gP, gC, gF)) ? "yes" : "no"));
		}
		in.close();
		writer.close();
	}

	private static boolean solve(int idx, int remP, int remC, int remF) {
		if (remP == 0 && remC == 0 && remF == 0)
			return true;
		if (idx == n)
			return false;
		boolean sol1 = false;
		if (numbers[idx][0] <= remP && numbers[idx][1] <= remC
				&& numbers[idx][2] <= remF)
			sol1 = solve(idx + 1, remP - numbers[idx][0], remC
					- numbers[idx][1], remF - numbers[idx][2]);
		boolean sol2 = solve(idx + 1, remP, remC, remF);

		return sol1 || sol2;
	}

}
