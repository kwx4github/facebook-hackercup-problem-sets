from operator import add

def trial(goal, foods):
	combos = set()
	combos.add((0, 0, 0))
	for food in foods:
		new_combos = set()
		for combo in combos:
			food_combo = map(add, combo, food)
			c = compare(food_combo, goal)
			if c == 0:
				return "yes"
			if c == -1:
				new_combos.add(tuple(food_combo))
		combos = combos.union(new_combos)
	return "no"

def compare(food1, food2):
	equals = True
	for f1, f2 in zip(food1, food2):
		if f1 > f2:
			return 1
		if f1 < f2:
			equals = False
	if equals:
		return 0
	return -1

def parse():
	goal = tuple([int(i) for i in raw_input().split()])
	num_foods = int(raw_input())
	foods = []
	for i in range(num_foods):
		foods.append(tuple([int(i) for i in raw_input().split()]))
	return (goal, foods)

T = int(raw_input())
for t in range(1, T+1):
	(goal, foods) = parse()
	print "Case #%d: %s" % (t, trial(goal, foods))
