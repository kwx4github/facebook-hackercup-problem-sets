#include <iostream>
#include <stdio.h>
using namespace std;


bool issubsetsum(int Gp,int Gc,int Gf,int done,int N,int P[],int C[],int F[],int sum1, int sum2, int sum3){
    
    // discard when if any one item is greater then req.
	if(sum1 > Gp || sum2 > Gc || sum3 > Gf)
        return false;
    
    // return true when we found our set
	if(sum1 == Gp && sum2 == Gc && sum3 == Gf)
        return true;
    
    // if we don't have more item to include
	if(done > N)
        return false;
    
    // recurs for next part
	return issubsetsum(Gp,Gc,Gf,done+1,N, P,C,F, sum1+P[done], sum2+C[done], sum3+F[done]) || issubsetsum(Gp,Gc,Gf,done+1,N,P,C,F,sum1,sum2,sum3);
}

int main(){
    
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	int t;
    scanf("%d", &t);
    
    
	for(int i=1; i <= t; i++){
        
        int Gp,Gf,Gc,N;
        scanf("%d %d %d", &Gp, &Gc, &Gf);
		scanf("%d", &N);
        
        int P[25],C[25],F[25];
        // take input
		for(int j=1; j <= N; j++)
			scanf("%d%d%d", &P[j], &C[j], &F[j]);
        
        int done =1;
        int sum1=0,sum2=0,sum3=0;
        if(issubsetsum(Gp,Gc,Gf,done,N,P,C,F,sum1,sum2,sum3))
            printf("Case #%d: yes\n",i);
        else
            printf("Case #%d: no\n",i);
        
       // solve(1, 0, 0, 0);
        
    }
	return 0;
}