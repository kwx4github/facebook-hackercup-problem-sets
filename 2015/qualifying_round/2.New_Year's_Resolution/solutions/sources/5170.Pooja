#include <iostream>
#include<stdio.h>
using namespace std;
/*
1 ≤ T ≤ 20
1 ≤ N ≤ 20
10 ≤ GP, GC, GF ≤ 1000
10 ≤ P, C, F ≤ 1000
*/

struct item
{
	int p,c,f;
};

item diff(item item1,item item2)
{
	item1.p = item1.p - item2.p;
	item1.c = item1.c - item2.c;
	item1.f = item1.f - item2.f;
	return item1;
}

bool isSubsetSum(item set[], int n, item sum)
{
   if (sum.p == 0 && sum.c==0 && sum.f==0)
     return true;
   if (n == 0 && (sum.p != 0 || sum.c!=0 || sum.f!=0))
     return false;

   if (set[n-1].p > sum.p || set[n-1].c>sum.c || set[n-1].f>sum.f)
     return isSubsetSum(set, n-1, sum);

   return isSubsetSum(set, n-1, sum) || isSubsetSum(set, n-1, diff(sum,set[n-1]));
}

int main() {
	freopen("new_years_resolution.txt","r",stdin);
    freopen("output.txt","w",stdout);
	int t,n,gp,gc,gf,p,c,f;
	cin>>t;
	for(int k=1;k<=t;k++)
	{
		item sum;
		cin>>sum.p>>sum.c>>sum.f;
		cin>>n;
		item f[n];
		for(int i=0;i<n;i++)
		{
			cin>>f[i].p>>f[i].c>>f[i].f;
		}
		cout<<"Case #"<<k<<": ";
		if (isSubsetSum(f, n, sum) == true)
     		cout<<"yes"<<endl;
  		else
			 cout<<"no"<<endl;

	}

	return 0;
}
