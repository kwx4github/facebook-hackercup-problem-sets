
def combinations(f, k):
	for i in xrange(len(f)):
		if k == 1:
			yield (f[i],)
		else:
			for next in combinations(f[i+1:len(f)], k-1):
				yield (f[i],) + next

def solve(info):
	wP, wC, wF = info[0]
	food = info[1]
	if len(food) == 1:
		if food[0] == info[0]:
			return 'yes'
		else:
			return 'no'
			
	for i in xrange(1,len(food)):
		for combi in combinations(food, i):
			p, c, f = 0, 0, 0
			for e in combi:
				p += e[0]
				c += e[1]
				f += e[2]
				if p > wP or c > wC or f > wF:
					break
				elif p == wP and c == wC and f == wF:
					return 'yes'
	return 'no'
	
program = []	
with open('new_years_resolution.txt', 'rb') as f:
	T = int(f.readline().strip())
	for i in xrange(T):
		wants = map(int, f.readline().strip().split(' '))
		N = int(f.readline().strip())
		food = []
		app = food.append
		for j in xrange(N):
			app(map(int, f.readline().strip().split(' ')))
		program.append((wants, food))

#print solve(program[0])
res = map(solve, program)
for i in xrange(len(res)):
	print 'Case #{:d}: {:s}'.format((i+1), res[i])
