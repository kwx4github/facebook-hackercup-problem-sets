import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;

public class Main {

	public static void main(String args[]) {
		try {
			FileReader fr = new FileReader("input.txt");
			BufferedReader br = new BufferedReader(fr);
			OutputStream out = new FileOutputStream("out.txt");
			String eol = System.getProperty("line.separator");
			byte[] eolb = eol.getBytes();
			byte[] space = " ".getBytes();
			String str = br.readLine();
			int t = Integer.parseInt(str);
			for (int p = 1; p <= t; p++) {
				String[] str1 = br.readLine().split(" ");
				int gp = Integer.parseInt(str1[0]);
				int gc = Integer.parseInt(str1[1]);
				int gf = Integer.parseInt(str1[2]);
				str = br.readLine();
				int n = Integer.parseInt(str);
				int[] Gp = new int[n];
				int[] Gc = new int[n];
				int[] Gf = new int[n];
				for (int i = 0; i < n; i++) {
					str1 = br.readLine().split(" ");
					Gp[i] = Integer.parseInt(str1[0]);
					Gc[i] = Integer.parseInt(str1[1]);
					Gf[i] = Integer.parseInt(str1[2]);
				}
				str = "no";
				if (subset(n, Gp, Gc, Gf, gp, gc, gf)) {
					str = "yes";
				}
				out.write(new String("Case #" + p + ": ").getBytes());
				out.write(str.getBytes());
				out.write(eolb);
				System.out.println(new String("Case #" + p + ": ") + str);
			}
			out.flush();
		} catch (IOException ioe) {
			ioe.printStackTrace();
		}
	}

	private static boolean subset(int n, int[] Gp, int[] Gc, int[] Gf, int gp,
			int gc, int gf) {
		if (gp == 0 && gc == 0 && gf == 0)
			return true;
		if (n == 0 && (gp != 0 || gc != 0 || gf != 0))
			return false;
		if (Gp[n - 1] > gp || Gc[n - 1] > gc || Gf[n - 1] > gf)
			return subset(n - 1, Gp, Gc, Gf, gp, gc, gf);
		return subset(n - 1, Gp, Gc, Gf, gp - Gp[n - 1], gc - Gc[n - 1], gf
				- Gf[n - 1])
				|| subset(n - 1, Gp, Gc, Gf, gp, gc, gf);
	}
}