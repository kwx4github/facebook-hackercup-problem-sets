
var fs = require('fs');

var args = process.argv.slice(2);
if(!args[0]) {
	console.error("Expecting argument <filename> for inpute file");
	process.exit(1);
}

var content = fs.readFileSync(args[0], 'utf8');
var lines = content.split("\n");
var caseTotal = parseInt(lines.shift(), 10);
var caseCount = 0;
for(var i=0; i<lines.length-2; i++) {
	var amounts = lines[i].split(' ').map(Number);
	i++;
	var foodCount = parseInt(lines[i], 10);
	i++;
	var foods = lines.slice(i, i+foodCount).map(function(foodLine) { return foodLine.split(' ').map(Number); });
	i+=foodCount-1;
	console.log("Case #"+(caseCount+1)+": "+(runCase(caseCount, amounts, foods) ? "yes" : "no"));
	caseCount++;
}

function reverse(s){
    return s.split("").reverse().join("");
}

function runCase(id, amounts, foods) {
	/*console.log("amounts", amounts);
	console.log("foods.length", foods.length);
	console.log("foods", foods);*/
	var GP = amounts[0];
	var GC = amounts[1];
	var GF = amounts[2];
	// bruteforce
	var possibilities = Math.pow(2, foods.length);
	for(var i=0; i<possibilities; i++) {
		var combination = reverse(i.toString(2)).split('').map(function(val, i) { 
			return (parseInt(val, 10) === 0) ? undefined : i;
		}).filter(function(v) {
			return v !== undefined;
		});
		var P = 0, C = 0, F = 0;
		for(var j=0; j<combination.length; j++) {
			var food = foods[combination[j]];
			P += food[0];
			C += food[1];
			F += food[2];
			//if(P > GP || C > GC || F > GF) break;
		}
		//console.log("P=",P," C=",C," F=",F);
		if(GP === P && GC === C && GF === F) return true;
	}
	return false;
}
