import java.io.*;
import java.util.*;

public class B {

	BufferedReader in;
	StringTokenizer st;
	PrintWriter out;

	String next() throws IOException {
		while (st == null || !st.hasMoreTokens())
			st = new StringTokenizer(in.readLine());
		return st.nextToken();
	}

	int nextInt() throws Exception {
		return Integer.parseInt(next());
	}

	long nextLong() throws Exception {
		return Long.parseLong(next());
	}

	double nextDouble() throws Exception {
		return Double.parseDouble(next());
	}

	long p = 1024 * 32;

	String solve() throws Exception {
		long r1 = nextInt(), r2 = nextInt(), r3 = nextInt();
		long r = r1 * p * p + r2 * p + r3;
		int n = nextInt();
		long c[] = new long[n];
		for (int i = 0; i < n; i++) {
			c[i] = nextLong() * p * p + nextLong() * p + nextLong();
		}

		for (int i = 0; i < (1 << n); i++) {
			int ci = i;
			int cp = 0;
			long cs = 0;
			while (i != 0) {
				cs += c[cp] * (i % 2);
				i /= 2;
				cp++;
			}
			if (cs == r)
				return "yes";
			i = ci;
		}
		return "no";
	}

	void run() {
		try {
			Locale.setDefault(Locale.US);
			in = new BufferedReader(new FileReader("src/B.in"));
			out = new PrintWriter(new FileWriter("src/B.out"));
			int tc = nextInt();
			for (int t = 0; t < tc; t++) {
				out.print("Case #" + (t + 1) + ": ");
				out.print(solve());
				out.println();
			}
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	public static void main(String[] args) {
		new B().run();

	}

}
