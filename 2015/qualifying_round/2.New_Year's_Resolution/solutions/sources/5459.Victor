#!/usr/bin/ruby

file = File.read('new_years_resolution.txt')
input_array = file.split(/\n/).reject(&:empty?)

case_count = input_array[0].to_i
reading_line = 1

(1..case_count).each do |i|

  # get requirement
  requirement_array = []
  requirement_array = input_array[reading_line].to_s.split(' ')

  # get number of samples
  food_sample_count = input_array[reading_line + 1].to_i

  food_sample_array = []

  # convert foor sample to array
  (2..(food_sample_count + 1)).each do |j|
    food_sample_array << input_array[reading_line + j].to_s.split(' ')
  end

  result_of_this_case = "no"

  # loop combination using bitwise method
  (1..(2 ** food_sample_count - 1)).each do |j|
    # get bitwise in array for existing j
    food_bitwise_array = j.to_s(2).rjust(food_sample_count, "0").split('')
    food_protein_sum = 0
    food_carbonhydrates_sum = 0
    food_fat_sum = 0

    # loop the bitwise array to sum up all the nutrients in this case
    (0..(food_sample_count - 1)).each do |k|
      food_protein_sum += food_sample_array[k][0].to_i if (food_bitwise_array[k] == "1")
    end

    # if the sum is equal to requriement, check other 2 nitrients
    if food_protein_sum == requirement_array[0].to_i
      (0..(food_sample_count - 1)).each do |k|
        if food_bitwise_array[k] == "1"
          food_carbonhydrates_sum += food_sample_array[k][1].to_i
          food_fat_sum += food_sample_array[k][2].to_i
        end
      end

      # if both carbonhydrates and fat meet the requriement. change the result and break the j loop
      if (food_carbonhydrates_sum == requirement_array[1].to_i) && (food_fat_sum == requirement_array[2].to_i)
        result_of_this_case = "yes"
        break
      end
    end
  end

  reading_line += (food_sample_count + 2)
  print "Case ##{i}: #{result_of_this_case}\n"
end
