#include <iostream>
#include <algorithm>
using namespace std;

struct macro{
	int P, C, F;
}dt[1100];

int n, x[30], Gc, Gp, Gf, Sc, Sp, Sf, ok;
void solve();
void init();

int main(){
//	freopen("VB.OUT", "w", stdout);
	int t, p = 0;
	cin >> t;
	while (p++ < t){
		cin >> Gp >> Gc >> Gf >> n;
		init();
		for (int i = 0; i < n; i++){
			cin >> dt[i].P >> dt[i].C >> dt[i].F;
		}
		cout << "Case #" << p << ": ";
		solve();
	}
	return 0;
}

void init() {
	for (int i = 0; i <= n; i++) x[i] = 0;
}

int Equal() {
	Sc = 0, Sp = 0, Sf = 0;
	for (int i = 0; i <= n; i++){
		if (x[i]) {
			Sc += dt[i].C;
			Sf += dt[i].F;
			Sp += dt[i].P;
		}
	}
	return (Sc == Gc && Sp == Gp && Sf == Gf);
}

void nextBinary() {
	ok = 0;
	int i = n - 1;
	while(x[i] && i >= 0){
		x[i] = 0;
		i--;
	}
	if (i >= 0) {
		ok = 1;
		x[i] = 1;
	}
}

void solve() {
	ok = 1;
	while(ok) {
		if (Equal()) {
			cout << "yes\n";
			return;
		}
//		for(int i = 0; i < n; i++) cout << x[i] << " ";
//		cout << endl;
		nextBinary();
	}
	cout << "no\n";
	return;
}
