#include <iostream>
using namespace std;

int T, N;
int gp,gc,gf;
const int MAXN = 10005;
int p[MAXN],c[MAXN],f[MAXN];
bool ans = false;
bool flag[MAXN];

bool solve(int sum, int be)
{
	if (be == N)
	{
		if (sum == gp)
		{
			int sumc = 0, sumf = 0;
			for (int i = 0; i < N; ++i)
			 {
			 	if (flag[i]) 
			 		{
			 			sumc += c[i];
			 			sumf += f[i];
			 		}
			 	/* code */
			 } 
			 if (sumc == gc && sumf == gf)
			 {
			 	ans = true;
			 	return true;
			 	/* code */
			 }
			 else
			 {
			 	return false;
			 }
			/* code */
		}
		else
		{
			return false;
		}
		/* code */
	}
	flag[be] = false;
	solve(sum, be+1);
	flag[be] = true;
	solve(sum+p[be], be+1);
	flag[be] = false;
	return false;
}


int main()
{
	FILE* fin = fopen("new_years_resolution.txt", "r");
	FILE* fout = fopen("new_years_resolution_output.txt", "w");

	fscanf(fin, "%d", &T);
	for (int i = 1; i <= T ; ++i)
	{
		fscanf(fin, "%d%d%d", &gp, &gc, &gf);
		fscanf(fin, "%d", &N);
		memset(flag, false, sizeof(flag));
		ans = false;
		for (int j = 0; j < N; ++j)
		{
			fscanf(fin, "%d%d%d", &p[j], &c[j], &f[j]);
			/* code */
		}
		solve(0, 0);
		if (ans)
		{
			fprintf(fout,"Case #%d: yes\n", i);
			/* code */
		}
		else
		{
			fprintf(fout,"Case #%d: no\n",i);
		}
		/* code */
	}
	return 0;
}