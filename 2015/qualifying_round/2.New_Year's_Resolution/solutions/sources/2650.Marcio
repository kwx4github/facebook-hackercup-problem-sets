#include <iostream>
#include <vector>

using namespace std;

string solve(int gp, int gc, int gf, vector<int> &p, vector<int> &c, vector<int> &f) {
  int N = p.size();
  long long M = 1 << N;
  for (long long i = 0; i < M; ++i) {
    int psum = 0, csum = 0, fsum = 0;
    for (int j = 0; j < N; ++j) {
      if (i & (1<<j)) {
	psum += p[j];
	csum += c[j];
	fsum += f[j];
      }
    }
    if (psum == gp && csum == gc && fsum == gf)
      return "yes";
  }
  return "no";
}

int main() {
  int T;
  cin >> T;
  for (int i = 0; i < T; ++i) {
    int gp, gc, gf;
    cin >> gp >> gc >> gf;
    int N;
    cin >> N;
    vector<int> p;
    vector<int> c;
    vector<int> f;
    for (int j = 0; j < N; ++j){
      int pp, cc, ff;
      cin >> pp >> cc >> ff;
      p.push_back(pp);
      c.push_back(cc);
      f.push_back(ff);
    }
    cout << "Case #" << i+1 << ": " << solve(gp, gc, gf, p, c, f) << endl;  
  }
  return 0;
}
