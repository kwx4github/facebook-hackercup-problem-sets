#include <iostream>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cmath>
#include <memory.h>
#include <utility>
#include <stack>
#include <queue>
#include <vector>
#include <ctime>
#include <algorithm>
#include <map>
#include <set>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int> > vii;
typedef pair<int, int> ii;
typedef pair<double, ii> edge;

int N, food[20][3];
int P, C, F;
bool flag = 0;
bool possible(int x, int p, int c, int f){
     if(p > P || c > C || f > F) return false;
     if(flag) return true;
     if(p == P && c == C && f == F){
          flag = 1;
          return true;
     }
     if(x == N) return false;
     if(possible(x + 1, p, c, f) || possible(x + 1, p + food[x][0], c + food[x][1], f + food[x][2])){
          flag = 1;
          return true;
     }
     return false;
}

int main(){
     freopen("reso.in", "r", stdin);
     freopen("reso.out", "w", stdout);
     int T, cnum = 1, a, b, c;
     cin >> T;
     while(T--){
          flag = 0;
          cin >> P >> C >> F >> N;
          for(int i = 0; i < N; i++){
               cin >> food[i][0] >> food[i][1] >> food[i][2];
          }
          if(possible(0, 0, 0, 0)){
               cout << "Case #" << cnum++ << ": yes\n";
          }
          else{
               cout << "Case #" << cnum++ << ": no\n";
          }
     }
}
