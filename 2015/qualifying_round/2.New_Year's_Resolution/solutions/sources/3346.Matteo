
mem = {}
foods = []

def solve(i, gp, gc, gf):
    if i==len(foods):
        return gp==0 and gc==0 and gf==0

    if (i,gp,gc,gf) not in mem:
        mem[(i,gp,gc,gf)] = solve(i+1, gp, gc, gf)
        if not mem[(i,gp,gc,gf)] and \
           gp-foods[i][0]>=0 and gc-foods[i][1]>=0 and gf-foods[i][2]>=0:
            mem[(i,gp,gc,gf)] = solve(i+1,
                                      gp-foods[i][0],
                                      gc-foods[i][1],
                                      gf-foods[i][2])

    return mem[(i,gp,gc,gf)]

t = int(raw_input())
for k in range(t):
    gp, gc, gf = map(int, raw_input().split(' '))

    n = int(raw_input())
    foods = []
    for i in range(n):
        foods.append(map(int, raw_input().split(' ')))

    mem = {}
    if solve(0, gp, gc, gf):
        print "Case #{}: yes".format(k+1)
    else:
        print "Case #{}: no".format(k+1)
