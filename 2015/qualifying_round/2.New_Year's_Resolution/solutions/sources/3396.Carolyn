#include <iostream>
#include <cstring>
using namespace std;
int mat[20][3];
bool dfs(int row, int N, int A, int B, int C){
	if (row==N){
		if (A==0 && B==0 && C==0) return true;
		return false;
	}
	for (int i = row; i < N; i++){
		if (dfs(row+1,N,A-mat[row][0],B-mat[row][1],C-mat[row][2])) return true;
		if (dfs(row+1,N,A,B,C)) return true;
		return false;
	}
}

int main(){
	int T; cin >> T;
	for (int test = 1; test <= T; test++){
		int A, B, C; cin >> A >> B >> C;
		int N; cin >> N;
		memset(mat,0,sizeof(mat));
		for (int n=0; n < N; n++){
			cin >> mat[n][0] >> mat[n][1] >> mat[n][2];
		}
		bool ok = dfs(0, N, A, B, C);
		if (ok)	cout << "Case #" << test << ": yes" << endl;
		else cout << "Case #" << test << ": no" << endl;
	}
	return 0;
}
