#include <iostream>
#include <vector>
#include <functional>
using namespace std;

using macr = vector<int>;
bool test_macr(const macr& target, const vector<macr>& lists) {
    function<bool(int, macr&)> dfs = [&](int id, macr& sln) {
        if(sln == target) return true;
        if(id >= lists.size()) return false;
        
        if (sln[0] > target[0] || sln[1] > target[1] || sln[2] > target[2])
            return dfs(id+1, sln);
        
        bool pick_ret = false;
        for(int i = 0; i < 3; ++i) sln[i] += lists[id][i];
        pick_ret = dfs(id+1, sln);
        for(int i = 0; i < 3; ++i) sln[i] -= lists[id][i];
        return pick_ret || dfs(id+1, sln);
    };
    
    macr sln(3,0);
    return dfs(0, sln);
}

int main() {
	int test_nums = 0;
	cin >> test_nums;
	
	for(int i = 0; i < test_nums; ++i) {
		vector<int> g(3);
		cin >> g[0] >> g[1] >> g[2];
		
		int num_foods = 0;
		cin >> num_foods;
		vector<macr> lists;
		for(int f = 0; f < num_foods; ++f) {
			lists.push_back(vector<int>(3));
			cin >> lists.back()[0] >> lists.back()[1] >> lists.back()[2];
		}
		bool ret = test_macr(g, lists);
		cout << "Case #" << i+1 << ": " << (ret ? "yes" : "no") << endl;
	}
	return 0;
}