#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <algorithm>
#include <vector>

using namespace std;

long long p, c, g;
int nNode;
int ttp, ttc, ttg;
vector < pair<int,pair<int, int>>> vi3;

int answer = 0;
void solve(int index,int cur,int tp,int tc,int tg)
{
//	cout << index << "th	" << cur << "		" << tp << " " << tc << " " << tg << endl;
	if (tp > p || tc > c || tg > g) return ;
	else if (tp == p && tc == c && tg == g)
	{
	//	cout << index << endl;
		answer = 1;
		return;
	}
	else{
		for (int i = cur; i < nNode; i++)
		{
			solve(index + 1, i, tp + vi3[i].first, tc + vi3[i].second.first, tg+ vi3[i].second.second);
			if (answer) return;
		}
	}
}
int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int nTestCase = 0;
	cin >> nTestCase;

	for (int i = 1; i <= nTestCase; i++)
	{
		cout << "Case #" << i << ": " ;
		answer = 0;
		cin >> p >> c >> g;
		cin >> nNode;
		vi3.clear();
		for (int i = 0; i < nNode; i++)
		{
			cin >> ttp >> ttc >> ttg;
			vi3.push_back(make_pair(ttp, make_pair(ttc, ttg)));
		}
		sort ( vi3.begin(), vi3.end());
		for (int i = 0; i < nNode; i++)
		{
	//		cout << vi3[i].first << " " << vi3[i].second.first << " " << vi3[i].second.second << endl;
		}
		solve(0,0, 0, 0, 0);
		if (answer) cout << "YES" << endl;
		else cout << "NO" << endl;
	}

	return 0;
}