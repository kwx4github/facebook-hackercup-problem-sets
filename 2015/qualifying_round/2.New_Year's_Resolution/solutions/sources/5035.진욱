#include <cstdio>
#include <algorithm>
using namespace std;
struct Bang {
	int C, P, F;
	bool operator<(Bang const& y) const {return C<y.C;}
};
int T;
int GC, GP, GF, N, goza1[20], goza2[20], goza3[20];
Bang food[20];
bool go(int a, int RC, int RP, int RF) {
	if(a==N || RC<0 || RP<0 || RF<0) return false;
	if(RC==0 && RP==0 && RF==0) return true;
	if(RC==0 || RP==0 || RF==0) return false;
	if(RC > goza1[a] || RP > goza2[a] || RF > goza3[a]) return false;
	if(RC == goza1[a] && RP == goza2[a] &&  RF == goza3[a]) return true;
	if(RC == goza1[a] || RP == goza2[a] ||  RF == goza3[a]) return false;
	if(RC < food[a].C) return false;
	if(go(a+1, RC-food[a].C, RP-food[a].P, RF-food[a].F)) return true;
	if(go(a+1, RC, RP, RF)) return true;
	return false;
}
int main() {
	scanf("%d", &T);
	for(int tc=1; tc<=T; tc++) {
		scanf("%d %d %d", &GC, &GP, &GF);
		scanf("%d", &N);
		goza1[0]=goza2[0]=goza3[0]=0;
		for(int i=0; i<N; i++) {
			scanf("%d %d %d", &food[i].C, &food[i].P, &food[i].F);
			goza1[0] += food[i].C;
			goza2[0] += food[i].P;
			goza3[0] += food[i].F;
		}
		sort(food, food+N);
		for(int i=1; i<N; i++) {
			goza1[i] = goza1[i-1] - food[i-1].C;
			goza2[i] = goza2[i-1] - food[i-1].P;
			goza3[i] = goza3[i-1] - food[i-1].F;
		}
		printf("Case #%d: %s\n", tc, go(0, GC, GP, GF)?"yes":"no");
	}
	return 0;
}
