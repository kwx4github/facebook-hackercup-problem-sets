#include <stdio.h>
 
// Returns true if there is a subset of set[] with sun equal to given sum
bool isSubsetSum(int set1[],int set2[],int set3[], int n, int sum1,int sum2,int sum3)
{
   // Base Cases
   if (sum1 == 0&&sum2==0&&sum3==0)
     return true;
   if (n == 0 && (sum1 != 0||sum2!=0||sum3!=0))
     return false;
 
   // If last element is greater than sum, then ignore it
   if (set1[n-1] > sum1||set2[n-1] > sum2||set3[n-1] > sum3)
     return isSubsetSum(set1,set2,set3, n-1, sum1,sum2,sum3);
 
   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(set1,set2,set3, n-1, sum1,sum2,sum3) || isSubsetSum(set1,set2,set3, n-1, sum1-set1[n-1],sum2-set2[n-1],sum3-set3[n-1]);
}
 
// Driver program to test above function
int main()
{int t;
scanf("%d",&t);
for(int ii=1;ii<=t;ii++)
{
int set1[100],set2[100],set3[100];
int n,sum1,sum2,sum3;
	scanf("%d %d %d",&sum1,&sum2,&sum3);
scanf("%d",&n);
for(int i=0;i<n;i++)
{
	
	scanf("%d %d %d",&set1[i],&set2[i],&set3[i]);
}
 
  if (isSubsetSum(set1,set2,set3, n, sum1,sum2,sum3) == true)
     printf("Case #%d: yes\n",ii);
  else
     printf("Case #%d: no\n",ii);
}  return 0;
}