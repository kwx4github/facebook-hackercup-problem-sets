import sys
from itertools import chain, combinations

def problem_instances(filename):
    f = open(filename)
    num_instances = int(f.readline())
    for i in range(num_instances):
        # Default just returns the line, implement parsing here
        target = map(int, f.readline().split())
        num_foods = int(f.readline())
        foods = []
        for i in range(num_foods):
            foods.append(map(int, f.readline().split()))
        yield target, num_foods, foods

def powerset(iterable):
    s = list(iterable)
    return chain.from_iterable(combinations(s, r) for r in range(len(s)+1))

def solve(instance):
    target_vals, num_foods, foods = instance
    for p in powerset(foods):
        if (sum(v[0] for v in p) == target_vals[0]
            and sum(v[1] for v in p) == target_vals[1]
            and sum(v[2] for v in p) == target_vals[2]):
            return "yes"
    return "no"


filename = sys.argv[1]
out = open(filename + ".out", "w")
for idx, instance in enumerate(problem_instances(filename), 1):
    out.write("Case #%i: %s\n" % (idx, solve(instance)))