# -*- coding: utf-8 -*-

import itertools, numpy
from itertools import chain, combinations

inputFilename = 'new_years_resolution.txt'

def powerset(lst):
    result = [[]]
    for i, x in enumerate(lst):
        result.extend([subset + [[i,x]] for subset in result])
    return result
    
def anycomb(items):
    ' return combinations of any length from the items '
    return ( comb
             for r in range(1, len(items)+1)
             for comb in combinations(items, r)
             )

def processCase(inTarget, inFoods):
    
    # Quick yes, target is present in foods
    if inTarget in inFoods:
        return True
        
    target = numpy.array(inTarget)
    foods  = numpy.array(inFoods)
    
    # Quick no: all foods summed do not reach target
    for i in range(3):
        if target[i] > sum(foods[:,i]):
            return False
    
    # Quick no: all foods exceed target
    for i in range(3):
        if target[i] < min(foods[:,i]):
            return False
    
    # Removed foods that exceed target, quick pruning
    possibleFoods = foods[ (target[0]>foods[:,0]) & (target[1]>foods[:,1]) & (target[2]>foods[:,2]) ]
    allCombinations = powerset(possibleFoods[:,0])
    validIndices = []
    for i in allCombinations:
        if len(i) == 0:
            continue
        a = numpy.array(i)
        if sum(a[:,1]) == target[0]:
            validIndices.append(a[:,0])

    if len(validIndices) == 0:
        return False
    
    # validIndices now contains all indices for which the first item adds to the first total

    for validIndex in validIndices: 
        # Brute-force check
        
        a = 0
        b = 0
        c = 0
        
        for i in validIndex:
            pf = possibleFoods[i]
            a += pf[0]
            b += pf[1]
            c += pf[2]
        
        if a == target[0] and b == target[1] and c == target[2]:
            return True
            
    
    return False


cases = []
with open(inputFilename, 'r') as inputFile:
    numCases = int(inputFile.readline())
    
    for i in range(numCases):
        target = [int(x) for x in inputFile.readline().strip().split()]
        
        numFood = int(inputFile.readline())
        foods = []
        for j in range(numFood):
            foods.append([int(x) for x in inputFile.readline().strip().split()])
        
        case = dict()
        case['target'] = target
        case['foods']  = foods
        cases.append(case)
    
with open('output.txt', 'w') as outputFile:

    for i, case in enumerate(cases):
        target = case['target']
        foods  = case['foods']
    
        outputFile.write("Case #" + str(i+1) + ": " + ("yes" if processCase(target, foods) else "no") + '\n')
    

print('hoi')