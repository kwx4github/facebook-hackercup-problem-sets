#include <iostream>
#include <stdio.h>
using namespace std;

int first[20],second[20],third[20],indexarr[20];
int T,GP,GC,GF,N;
bool found = false;
void Subsetsum(int parr[],int index,int low,int high,int GP)
{
	if((low > high) || (GP < 0))
	     return;
    if(GP == 0)
    {
    	int sum2=0;
    	int sum3 = 0;
    	for(int i=0;i<index;i++)
    	{
    		sum2 = sum2 + second[indexarr[i]];
    		sum3 = sum3 +third[indexarr[i]];
    	}
    	if ((sum3 == GF) && (sum2 == GC))
    	{
    		found = true;
    	}
    	return;
    }
    indexarr[index]=low;
   Subsetsum(parr,index+1,low+1,high,GP-parr[low]);
   Subsetsum(parr,index,low+1,high,GP);
}
int main()
{
	cin >>T;

	for(int t =1;t<=T;t++)
	{
		found = false;
		cin >> GP ;
		cin >> GC;
		cin >>GF;
		cin>> N;
		for (int i=0;i<N;i++)
		{
			cin>>first[i];
			cin>>second[i];
			cin>>third[i];
		}

		Subsetsum(first,0,0,N,GP);
		if(found)
		{
			cout <<"Case #"<<t<<": yes"<<endl;
		}
		else
		{
			cout <<"Case #"<<t<<": no"<<endl;
		}
	}

	return 0;
}

