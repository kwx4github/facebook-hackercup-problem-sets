// spnautilus's T
//
#include <bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(int _b=(b),i=(a); i<_b; ++i)
#define ROF(i,b,a) for(int _a=(a),i=(b); i>_a; --i)
#define _1 first
#define _2 second
#define PB(x) push_back(x)
#define MSET(m,v) memset(m,v,sizeof(m))
#define MAX_PQ(T) priority_queue <T>
#define MIN_PQ(T) priority_queue <T,vector<T>,greater<T>>
typedef long long LL; typedef long double LD; typedef unsigned int uint;
typedef pair<int,int> PII; typedef pair<LL,LL> PLL;
typedef vector<int> VI; typedef vector<LL> VL; typedef vector<PII> VP;
template<typename A, typename B> inline bool mina(A &x, B y) { return (x > y)? (x=y,1):0; }
template<typename A, typename B> inline bool maxa(A &x, B y) { return (x < y)? (x=y,1):0; }

#define MAXN (24)

int T, N;
int X[3];
int Y[MAXN][3];
const char ANS[2][4] = {"no", "yes"};

int main()
{
	cin >> T;
	FOR(tt,1,T+1)
	{
		FOR(i,0,3) cin >> X[i];
		cin >> N;
		FOR(i,0,N) FOR(j,0,3) cin >> Y[i][j];

		int sol = 0;
		FOR(b,1,1<<N)
		{
			int S[3] = {0};
			FOR(i,0,N) if((b>>i)&1) FOR(j,0,3) S[j] += Y[i][j];
			int res = 1;
			FOR(i,0,3) res *= (S[i] == X[i]);
			if(res)
			{
				sol = 1;
				break;
			}
		}

		printf("Case #%d: %s\n", tt, ANS[sol]);
	}

	return 0;
}
