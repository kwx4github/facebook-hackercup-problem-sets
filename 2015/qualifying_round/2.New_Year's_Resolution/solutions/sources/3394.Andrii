#include<iostream>
#include<cassert>
#include<cmath>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<string>
#include<vector>
#include<cstdlib>
#include<iterator>
#include<ctime>
#include<map>
#include<sstream>
#include<set>
//#include <unordered_set>
#include<cctype>
#include<limits>
#include<climits>
#include<queue>
#include<cmath>
#include <memory.h>

//#pragma comment(linker, "/STACK:36777216")
using namespace std;

#define all(c) (c).begin(), (c).end()

template<typename T> inline string intToString(T x){ostringstream q;q << x;return q.str();}
inline int stringToInt(string str){	istringstream in(str);	int res;	in >> res;	return res;}
template<typename T> inline T myPow(T x, T n, T MOD){T res = 1;while (n>0) {if (n & 1) {res = 1ll*res * x % MOD;}x = 1ll*x * x % MOD;n/=2;}return res;}
template<typename T> inline T gcd(T a, T b){a=abs(a);b=abs(b);while ((a>0) && (b>0)) {if (a>b)a%=b;else b%=a;}return a+b;}
inline int getRand() { long long q = 1ll*rand()*RAND_MAX+rand(); return q % INT_MAX; }

typedef long long LLong;
typedef long double LDb;


int x[1111],y[1111],z[1111];
int X,Y,Z;
int n;
bool ok;
void rec(int v) {
	if (X==0 && Y==0 && Z==0) {
		ok = true;
	}
	if (ok)
		return;
	if (v==n)
		return;

	if (X>=x[v] && Y>=y[v] && Z>=z[v]) {
		X-=x[v];
		Y-=y[v];
		Z-=z[v];
		rec(v+1);
		X+=x[v];
		Y+=y[v];
		Z+=z[v];
	}
	rec(v+1);
}

int main()
{
#ifdef m0stik
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#else
	//freopen("input.txt","r",stdin);freopen("billing.out","w",stdout);
#endif
	int tests;
	cin >> tests;
	for (int it = 0; it < tests; ++it) {
		printf("Case #%d: ", it+1);
		
		cin >> X >> Y >> Z;
		cin >> n;
		for (int i = 0 ;i <n; ++i) {
			cin >> x[i] >> y[i] >> z[i];
		}
		ok = false;
		rec(0);
		if (ok) {
			cout << "yes" << endl;
		}
		else {
			cout << "no" << endl;
		}
	}
	return 0;
} 