#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

vector <int> carb, prot, gord;
int a, b, c, n;
bool possible;

void solve(int pos, int sA, int sB, int sC){
	//cout << "a:" << sA << " b:" << sB << " c:" << sC << endl;
	sA+=prot[pos];	sB+=carb[pos];	sC+=gord[pos];
	
	if((sA==a && sB==b && sC==c) || possible==true){
		possible=true;
		return;	
	}
	if(sA>a || sB>b || sC>c)
		return;
	for(int i=pos+1; i<n; i++){
		solve(i,sA,sB,sC);	
		
	}	
}

int main(){
	int t, aux, caso=1;
	
	cin >> t;
	
	while(t--){
		cin >> a >> b >> c;
		cin >> n;

		for(int i=0; i<n; i++){
			cin >> aux; prot.push_back(aux);
			cin >> aux; carb.push_back(aux);
			cin >> aux; gord.push_back(aux);
			
		}
		
		possible=false;
		for(int i=0; i<n; i++)
			solve(i,0,0,0);
			
		if(possible) cout << "Case " << caso << ": yes\n";
		else 	cout << "Case " << caso << ": no\n";
		
		prot.clear(); carb.clear(); gord.clear();
		caso++;
	}	
}
