import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class _2 {
	public static void main(String[] args) throws NumberFormatException,
			IOException {
		FileReader in = new FileReader("new_years_resolution.txt");
		BufferedReader buff = new BufferedReader(in);
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(
				"Solution2.txt")));

		int T = Integer.parseInt(buff.readLine());
		StringTokenizer st;
		for (int c = 1; c <= T; c++) {
			st = new StringTokenizer(buff.readLine());
			int P = Integer.parseInt(st.nextToken()), C = Integer.parseInt(st
					.nextToken()), F = Integer.parseInt(st.nextToken());

			int N = Integer.parseInt(buff.readLine());
			int[][] list = new int[N][3];
			for (int i = 0; i < N; i++) {
				st = new StringTokenizer(buff.readLine());
				int _P = Integer.parseInt(st.nextToken()), _C = Integer
						.parseInt(st.nextToken()), _F = Integer.parseInt(st
						.nextToken());

				list[i][0] = _P;
				list[i][1] = _C;
				list[i][2] = _F;
			}
			out.println("Case #" + c + ": " + solve(P, C, F, list, N));
		}
		buff.close();
		out.close();
	}

	private static String solve(int P, int C, int F, int[][] list, int N) {

		for (int j = 0; j < (1 << N); j++) {
			int sum_p = 0, sum_c = 0, sum_f = 0;
			for (int k = 0; k < N; k++) {
				if ((j & (1 << k)) > 0) {
					sum_p += list[k][0];
					sum_c += list[k][1];
					sum_f += list[k][2];

					if (sum_p > P || sum_c > C || sum_f > F) {
						break;
					}
				}
			}

			if (sum_p == P && sum_c == C && sum_f == F) {
				return "yes";
			}
		}
		return "no";
	}
}
