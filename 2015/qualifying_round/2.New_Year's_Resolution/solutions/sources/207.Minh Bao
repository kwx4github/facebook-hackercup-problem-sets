#include <bits/stdc++.h>
using namespace std;

struct Food {
	int p, c, f;
	Food(int _p = 0, int _c = 0, int _f = 0): p(_p), c(_c), f(_f) {}

	friend Food operator +  (const Food &a, const Food &b) {
		return Food(a.p + b.p, a.c + b.c, a.f + b.f);
	}
	friend bool operator == (const Food &a, const Food &b) {
		return a.p == b.p && a.c == b.c && a.f == b.f;
	}
};

int nTest;

int N;
Food G;
Food a[22];

int bit(int n, int k) {
	return (n >> k) & 1;
}

int main() {
	freopen("new_years_resolution_input.txt", "r", stdin);
	freopen("new_years_resolution_output.txt", "w", stdout);

	ios_base::sync_with_stdio(false);

	cin >> nTest;
	for (int test = 1; test <= nTest; test++) {
		cin >> G.p >> G.c >> G.f;
		cin >> N;
		for (int i = 0; i < N; i++) 
			cin >> a[i].p >> a[i].c >> a[i].f;

		bool yes = false;
		for (int state = 0; state < (1<<N); state++) {

			Food food(0, 0, 0);

			for (int i = 0; i < N; i++)
				if (bit(state, i))
					food = food + a[i];

			if (food == G) {
				yes = true;
				break;
			}
		}

		cout << "Case #" << test << ": " << (yes ? "yes" : "no") << "\n";
	}

	return 0;
}