import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;


public class NewYearsResolution {
	
	static ArrayList<ArrayList> combos = new ArrayList<ArrayList>();
	static food[] foodstuff = null;
	static int proteinTarget = 0;
	static int carbTarget = 0;
	static int fatTarget = 0;
	static boolean possible = false;
	
	public static void main(String args[]) {
		try {
			BufferedReader buff = new BufferedReader(new FileReader(new File(args[0])));
			int cases = Integer.parseInt(buff.readLine());
			int foods = 0;
			for(int i = 0; i < cases; i++) {
				String[] targets = buff.readLine().split(" ");
				proteinTarget = Integer.parseInt(targets[0]);
				carbTarget = Integer.parseInt(targets[1]);
				fatTarget = Integer.parseInt(targets[2]);
				
				foods = Integer.parseInt(buff.readLine());
				food food[] = new food[foods];
				for(int j = 0; j < foods; j++) {
					food f = new food();
					String[] line = buff.readLine().split(" ");
					f.prot = Integer.parseInt(line[0]);
					f.carbs = Integer.parseInt(line[1]);
					f.fat = Integer.parseInt(line[2]);
					food[j] = f;
				}
				foodstuff = food;
				ArrayList<Integer> nums = new ArrayList<Integer>();
				for(int g=0; g < food.length; g++) {
					nums.add(g);
				}
				
				//carbCalc(food, carbTarget);
				rec(new ArrayList<Integer>(),nums);
				String res =  possible ? "yes" : "no";
				System.out.println("Case #" + (i+1) + ": " +  res);
				possible = false;
			}
		}
		catch(Exception exp) {
			exp.printStackTrace();
		}
	}
	
	static class food {
		public int fat;public int carbs;public int prot;
	}
		
	static void rec(ArrayList<Integer>current, ArrayList<Integer> rest){
		int fattot = 0;
		int carbtot = 0;
		int prottot = 0;
		boolean cont = true;
		if(!current.isEmpty()) { 
			for(int i : current) {
				food f = foodstuff[i];
				fattot += f.fat;
				carbtot += f.carbs;
				prottot += f.prot;
				if(fattot == fatTarget && carbtot == carbTarget && prottot == proteinTarget){
					possible = true;
					cont=false;
				}
				if ( fattot > fatTarget || carbtot > carbTarget || prottot > proteinTarget ) {
					cont = false;
				}
				
			}
		};
		if(rest.isEmpty()){
			
		}
		else if(cont){
			for(int i =0; i< rest.size(); i++){
				ArrayList<Integer> newcur = new ArrayList<Integer>(current);
				ArrayList<Integer> newrest = new ArrayList<Integer>(rest);
				newcur.add(newrest.get(i));
				newrest.remove(i);
				rec(newcur,newrest);
			}
		}
	}
		
	

}
