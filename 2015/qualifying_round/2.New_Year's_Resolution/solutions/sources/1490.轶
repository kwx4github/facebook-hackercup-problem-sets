#include <bits/stdc++.h>
using namespace std;

unsigned long long dp[1010][1010][20];
int T,n,P,C,F,t,dx,dy;

void update(int a,int b,int x,int y)
{
//	printf("%d %d %d %d %d %d\n", a,b,x,y,dx,dy);
	for(int i = 0;i + dx < t;i++)
		if (dp[a][b][i])
		{
			dp[x][y][i+dx] |= dp[a][b][i] << dy;
			dp[x][y][i+dx+1] |= dp[a][b][i] >> (64 - dy);
		}
}

int main()
{
	scanf("%d",&T);
	memset(dp,0,sizeof(dp));
	for(int cas = 1;cas <= T;cas++)
	{
		scanf("%d%d%d",&P,&C,&F);
		scanf("%d",&n);
		t  = (F + 63)/ 64;

		dp[0][0][0] = 1;
		for(int i = 0;i < n;i++)
		{
			int p,c,f;
			scanf("%d%d%d",&p,&c,&f);
			dx = f >> 6;
			dy = f & 63;
			for(int i = p;i <= P;i++)
				for(int j = c;j <= C;j++)
					update(i-p,j-c,i,j);
		}

		printf("Case #%d: %s\n", cas, (dp[P][C][F >> 6] & (1LL << (F & 63))) ? "yes" : "no");
		for(int i = 0;i <= P;i++)
			for(int j = 0;j <= C;j++)
				memset(dp[i][j],0,sizeof(dp[i][j]));
	}
	return 0;
}