#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

struct content
{
	int p;
	int c;
	int f;
};

vector<struct content> input;

int main()
{
	int T,N,P,C,F,i,j,k;
	struct content given_content;
	struct content cur_combination;

	cin >> T;
	
	for(i=0;i<T;i++)
	{
		cin >> P >> C >> F;
		input.clear();
		cin >> N;
		for(j=0;j<N;j++)
		{
			cin >> given_content.p >> given_content.c >> given_content.f;
			input.push_back(given_content);
		}
		for(j=0;j<(1<<N);j++)
		{
			cur_combination.p = 0;
			cur_combination.c = 0;
			cur_combination.f = 0;

			//try current combination
			for(k=0;k<N;k++)
			{
				if((j&(1<<k))!=0)
				{
					cur_combination.p += input[k].p;
					cur_combination.c += input[k].c;
					cur_combination.f += input[k].f;	
				}
			}
	
			if((cur_combination.p==P)&&(cur_combination.c==C)&&(cur_combination.f==F))
			{
				cout << "Case #" << (i+1) << ": " << "yes" << "\n";
				break;
			}			
		}
		
		if(j==(1<<N))
		{
			
			cout << "Case #" << (i+1) << ": " << "no" << "\n";
		}
	}

	return 0;
}
