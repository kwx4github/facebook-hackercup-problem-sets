#define TASKNAME ""
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <utility> 
#include <map>
#include <set>
#include <vector>


#define MAXN int(100)
#define INF int(1e18)
#define pb push_back
#define mp make_pair
#define sz(A) (int)(A).size()
#define pi 3.1415926535897932384626433832795
#define sqr(a) ((a) * (a))
#define x fghsdhgjfshgkjfdhgjfs
#define y jhfjghjfdsghsjfd
#define out(x) cout<<(x)<<" " << "\n"
#define DB(x) cerr<<#x<<" = "<<(x)<<"\n"
#define DB2(a,b)   cout<<#a<<"="<<(a)<<", "<<#b<<"="<<(b)<<"\n"

using namespace std;
int t, gp, gc, gf, veg[MAXN][3], n;


bool solve(int n, int gp, int gc, int gf, int veg[][3]){
  vector<int> p, c, f;
  for(int mask = 0; mask < (1 << n); mask++){
    
    for(int j = n - 1; j >= 0; j--)
      if( ((mask >> j) & 1) == 1){
        p.pb(veg[j][0]);
        c.pb(veg[j][1]);
        f.pb(veg[j][2]);
        //DB(veg[j][0]);
      }
    int p_ans = 0, c_ans = 0, f_ans = 0;
    for(int i = 0; i < sz(p); i++){
      p_ans += p[i]; 
      c_ans += c[i]; 
      f_ans += f[i];
    }
    if(p_ans == gp && c_ans == gc && f_ans == gf)
      return true;
    p.clear();
    c.clear();
    f.clear();
  }
  return false;
}


int main()
{
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  cin >> t;
  for(int i = 1; i <= t; i++){
    cin >> gp >> gc >> gf;
    cin >> n;
    //DB(n);
    for(int j = 0; j < n; j++)
      cin >> veg[j][0] >> veg[j][1] >> veg[j][2];
    if(solve(n, gp, gc, gf, veg))
      printf("Case #%d: yes\n", i);
    else
      printf("Case #%d: no\n", i);
  }     
  return 0;
}