/* Author : Pranav
BITS PILANI Hyderabad Campus */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <cstring>
//#include <sstream>
using namespace std;

#define sz(a) int((a).size())
#define pb push_back
#define pop pop_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define fr(i,n) for(i=0; i<n; i++)
#define N 10005
#define INF 1000000
#define mod 1000000007
#define f first
#define s second
#define mp(x,y) make_pair(x,y)
#define sc(x) scanf("%lld",&x);
#define pr(x) printf("%lld\n",x);
#define CHECK_BIT(var,pos) ((var) & (1<<(pos)))
typedef long long ll;


int main(){
      ios::sync_with_stdio(0);
      ll i;
      ll a[200],b[200],c[200],n,j,res = 0,t1,t2,t3,t;
      freopen("input.txt","r",stdin);
      freopen("output.txt","w",stdout);
      
      ll ss1,ss2,ss3;
      cin>>t;
      ll id = 0;
      while(t--){
        id++;
      cin>>t1>>t2>>t3;
      cin>>n;
      for(i=0;i<n;i++){
        cin>>a[i]>>b[i]>>c[i];
      }

      res = 0;
      for(i=0;i< (1<<n); i++){
        ss1 = 0;
        ss2 = 0;
        ss3 = 0;
        for(j=0;j<n;j++){
            if(CHECK_BIT(i,j)){
                ss1+=a[j];
                ss2+=b[j];
                ss3+=c[j];
                if(ss1>t1||ss2>t2||ss3>t3)
                    break;
            }
        }
        //cout<<"Subset "<<i<<" "<<ss1<<" "<<ss2<<" "<<ss3<<endl;//<<" "<<t1<<" "<<t2<<" "<<t3<<endl;
        if(ss1 == t1 && ss2 == t2 && ss3 == t3){
            res = 1;
            break;
           // cout<<i<<endl;
        }
      }
      if(res)
        printf("Case #%d: yes\n",id);
      else
       printf("Case #%d: no\n",id);
      }
return 0;
}

