#include <iostream>
#include <vector>

using namespace std;

struct menjar {
  int a, b, c;
  menjar(int x, int y, int z) : a(x), b(y), c(z) {}
  menjar() : a(0), b(0), c(0) {}
  menjar operator+= (menjar& o) {
    a += o.a;
    b += o.b;
    c += o.c;
  }
  menjar operator-= (menjar& o) {
    a -= o.a;
    b -= o.b;
    c -= o.c;
  }
  bool operator== (menjar& o) {
    return a == o.a and b == o.b and c == o.c;
  }
};

istream& operator>> (istream& in, menjar& m) {
  return in >> m.a >> m.b >> m.c;
}

typedef vector<menjar> vm;
vm v;
int n;
menjar g;
bool fet;

void bt(int p, menjar& m) {
  if (p == n) {
    if (m == g) fet = true;
    return;
  }
  if (fet) return;
  bt(p + 1, m);
  if (fet) return;
  m += v[p];
  bt(p + 1, m);
  m -= v[p];
}

int main() {
  int t;
  cin >> t;
  for (int c = 1; c <= t; ++c) {
    cin >> g >> n;
    v = vm (n);
    for (int i = 0; i < n; ++i) cin >> v[i];
    menjar m;
    fet = false;
    bt(0, m);
    cout << "Case #" << c << ": " << (fet ? "yes" : "no") << endl;
  }
}