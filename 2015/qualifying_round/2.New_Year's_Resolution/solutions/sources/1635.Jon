#include <iostream>
#include <cstdio>
#include <string>
#include <map>
#include <vector>
#include <queue>
#include <stack>
#include <algorithm>

using namespace std;
typedef long long ll;

bool has_bit(int mask, int i){
    return ((mask&(1<<i))>0);
}

int main(){
    int T;
    cin >> T;
    
    for(int t=1;t<=T;t++){
        int GP, GC, GF;
        cin >> GP >> GC >> GF;
        int N;
        cin >> N;
        vector<int> Ps(N);
        vector<int> Cs(N);
        vector<int> Fs(N);
        
        for(int i=0;i<N;i++) cin >> Ps[i] >> Cs[i] >> Fs[i];
        
        bool caneat = false;
        for(int i=0;i<(1<<N);i++){
            int curP = 0;
            int curC = 0;
            int curF = 0;
            for(int j=0;j<N;j++){
                if(has_bit(i,j)){
                    curP += Ps[j];
                    curC += Cs[j];
                    curF += Fs[j];
                }
            }
            if(curP==GP && curC==GC && curF==GF){
                caneat = true;
            }
        }
        if(caneat){
            cout << "Case #" << t << ": yes" << endl;
        }else{
            cout << "Case #" << t << ": no" << endl;
        }
    }

    return 0;
}