import sun.font.TrueTypeFont;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class Main {

    public static void main(String[] args) {
        List<String> inputData = readFile("new_years_resolution.txt");
        List<String> outputData = new ArrayList<String>();

        boolean firstLine = true;
        int numberOfCases = 0;
        int gp = 0;
        int gc = 0;
        int gf = 0;
        int n = 0;
        int currentCase = 1;
        boolean nextCase = true;
        boolean numberOfFood = true;
        ArrayList<Integer> p = new ArrayList<Integer>();
        ArrayList<Integer> c = new ArrayList<Integer>();
        ArrayList<Integer> f = new ArrayList<Integer>();
        for (String currentLine : inputData) {
            if (firstLine) {
                numberOfCases = Integer.parseInt(currentLine);
                firstLine = false;
            } else if (nextCase) {

                String[] subStrings = currentLine.split(" ");
                gp = Integer.parseInt(subStrings[0]);
                gc = Integer.parseInt(subStrings[1]);
                gf = Integer.parseInt(subStrings[2]);
                p.clear();
                c.clear();
                f.clear();
                nextCase = false;
                numberOfFood = true;
            } else if (numberOfFood) {
                n = Integer.parseInt(currentLine);
                numberOfFood = false;
            } else {
                String[] subStrings = currentLine.split(" ");
                p.add(Integer.parseInt(subStrings[0]));
                c.add(Integer.parseInt(subStrings[1]));
                f.add(Integer.parseInt(subStrings[2]));
                n--;
                if (n == 0) {
                    nextCase = true;
                    if (p.size() != 0) {
                        n = p.size();
                        double maxNumber = Math.pow(2, n);

                        boolean possible = false;
                        for (int i = 1; i < maxNumber; i++) {
                            int currentGp = 0;
                            int currentGc = 0;
                            int currentGf = 0;
                            for (int j = 0; j < n; j++) {
                                if ((i >> j) % 2 == 1) {
                                    currentGp += p.get(j);
                                    currentGc += c.get(j);
                                    currentGf += f.get(j);
                                }
                            }
                            if (currentGp == gp && currentGc == gc && currentGf == gf) {
                                possible = true;
                                break;
                            }
                        }

                        outputData.add("Case #" + currentCase + ": " + (possible ? "yes" : "no"));
                        currentCase++;
                    }
                }
            }
        }

        writeToFile(outputData, "new_years_resolution_output.txt");
    }

    public static List<String> readFile(String nameOfFile) {

        ArrayList<String> result = new ArrayList<String>();
        try {
            File file = new File(nameOfFile);

            BufferedReader br = null;

            br = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
            String readLine;
            while ((readLine = br.readLine()) != null) {
                result.add(readLine);
            }

            br.close();
        } catch (UnsupportedEncodingException e) {
            System.out.println(UnsupportedEncodingException.class);
        } catch (FileNotFoundException e) {
            System.out.println(FileNotFoundException.class);
        } catch (IOException e) {
            System.out.println(IOException.class);
        }

        return result;
    }

    public static void writeToFile(List<String> outputData, String fileName) {
        try {
            BufferedWriter out = new BufferedWriter(new FileWriter(fileName));
            for (String s : outputData) {
                out.write(s + "\n");
            }
            out.close();
        } catch (IOException e) {
            System.out.println("Output: " + IOException.class);
        }
    }
}
