#include <cstdio>
#include <iostream>
#include <algorithm>

using namespace std;

const int N = 22;

int n, bounda, boundb, boundc;
int a[N], b[N], c[N];

inline void solve() {
	cin >> bounda >> boundb >> boundc;
	cin >> n;
	for (int i = 0; i < n; ++i) {
		cin >> a[i] >> b[i] >> c[i];
	}
	for (int mask = 0; mask < (1 << n); ++mask) {
		int suma = 0, sumb = 0, sumc = 0;
		for (int i = 0; i < n; ++i) {
			if (~mask >> i & 1) {
				continue;
			}
			suma += a[i];
			sumb += b[i];
			sumc += c[i];
		}
		if (suma == bounda && sumb == boundb && sumc == boundc) {
			cout << "yes" << endl;
			return;
		}
	}
	cout << "no" << endl;
}

int main() {
	ios::sync_with_stdio(false);
	int tests;
	cin >> tests;
	for (int i = 1; i <= tests; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
	return 0;
}