package com.company.Qualification;

import java.io.*;
import java.util.ArrayList;

public class Resolution {

    public static void main(String[] args){
        check(readFile("new_years_resolution.txt"));
    }

    public static void check(String s){
        String[] values = s.split("\n");
        int count = Integer.parseInt(values[0]);
        int lines = 1;
        ArrayList<String> results = new ArrayList<>(count);
        for (int i = 0; i < count; ++i){
            String[] G = values[lines].split(" ");
            ++lines;
            int productCoutns = Integer.parseInt(values[lines]);
            int[][] product = new int[3][productCoutns];
            ++lines;
            for (int j = 0; j < productCoutns; ++j){
                String[] macronutrient = values[lines].split(" ");
                product[0][j] = Integer.parseInt(macronutrient[0]);
                product[1][j] = Integer.parseInt(macronutrient[1]);
                product[2][j] = Integer.parseInt(macronutrient[2]);
                ++lines;
            }
            results.add(print(i + 1, checkSum(product, G)));
        }
        writeToFile(results);
    }

    public static Boolean checkSum(int[][] ar, String[] sum){
        boolean[] res = new boolean[1];
        subset(ar, 0, 0, 0, Integer.parseInt(sum[0]), Integer.parseInt(sum[1]), Integer.parseInt(sum[2]), 0, ar[0].length, res);
        return res[0];
    }

    public static void subset(int[][] data, int p, int s, int f, int Gp, int Gc, int Gf, int fromIndex, int endIndex, boolean[] result) {
        if (p >= Gp && s >= Gc && f >= Gf) {
            if (p == Gp && s == Gc && f == Gf) {
                result[0] = true;
            }
            return;
        }
        for (int currentIndex = fromIndex; currentIndex < endIndex; currentIndex++) {
            if (p + data[0][currentIndex] <= Gp && s + data[1][currentIndex] <= Gc && f + data[2][currentIndex] <= Gf) {
                subset(data, p + data[0][currentIndex], s + data[1][currentIndex], f + data[2][currentIndex],
                        Gp, Gc, Gf, currentIndex + 1, endIndex, result);
            }
        }
    }

    public static void writeToFile(ArrayList<String> list){
        Writer writer = null;

        try {
            writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream("output.txt"), "utf-8"));
            for (String s : list) {
                writer.write(s);
                writer.append("\n");
            }
        } catch (IOException ex) {
        } finally {
            try {writer.close();} catch (Exception ex) {}
        }
    }

    public static String readFile(String fileName){
        String s = "";
        try {
            BufferedReader br = new BufferedReader(new FileReader(fileName));
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();

            while (line != null) {
                sb.append(line);
                sb.append(System.lineSeparator());
                line = br.readLine();
            }
            s = sb.toString();
        }catch (FileNotFoundException e){
            e.printStackTrace();
        }catch (IOException e){
            e.printStackTrace();
        }
        return s;
    }

    public static String print(int caseNum, boolean res){
        String result = "Case #" + caseNum + ": " + (res ? "yes" : "no");
        System.out.println(result);
        return result;
    }

}
