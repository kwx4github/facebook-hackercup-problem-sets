def ri = readLine.toInt
def ris = {
	val x = readLine.split(' ').map(_.toInt)
	(x(0), x(1), x(2))
}

(1 to ri) foreach { testCase =>
	var can = false

	val(gp, gc, gf) = ris

	val foods = (1 to ri).map(i => ris)

	def recursion(i: Int, leftP: Int, leftC: Int, leftF: Int) {
		if(i == foods.size) {
			if(leftP == 0 && leftF == 0 && leftF == 0)
				can = true
		} else {
			val food = foods(i)
			recursion(i + 1, leftP, leftC, leftF)
			recursion(i + 1, leftP - food._1, leftC - food._2, leftF - food._3)
		}
	}

	recursion(0, gp, gc, gf)

	println("Case #" + testCase + ": " + (if(can) "yes" else "no"))
}