#include <iostream>
#include <algorithm>
#include <string>
#include <stack>
#include <vector>

using namespace std;

    stack<int> s[3],p, e;
    vector<int> v[3];
    int sum[3],t[3], a, k, ind, ind2;
    
void show(){
     stack<int> p2 = p;
     for (int z=0; z<3; z++){
         cout << "s" <<z+1<< ": " << sum[z] << endl;
         }
     cout << p.size() << ":: ";
     while (!p.empty()){
           cout << ' ' << p.top();
           p.pop();
           }
     cout << " ------------- " << endl << endl;    
     p=p2;
     }


int main(){
    int C;
    cin >> C;
    for (int j=1;j<=C;j++){

        p=e;
        for (int z = 0; z < 3; z++){
            v[z].clear();
            s[z]=e;
            sum[z]=0;
            cin >> t[z];
            }
        cin >> k;
        while (k--){
              for (int z = 0; z < 3; z++){
                  cin >> a;              
                  v[z].push_back(a);
                  }
              }

      ind2=0;
      do{        
                
         if (p.size()>0){
            ind = p.top()+1;
            p.pop();
            for (int z = 0; z < 3; z++){
                sum[z]-=s[z].top();
                s[z].pop();
                }
            }
           else{
                 ind = ind2;
                 ind2++;
                 }
 
              
         while (ind < v[0].size()){
              k=0;
              while ( k<3 && v[k][ind] + sum[k] <= t[k]  ){k++;}
              if (k==3){
                 p.push(ind);
                 for (int z = 0; z < 3; z++){
                     s[z].push(v[z][ind]); 
                     sum[z] += v[z][ind];
                     }
                 }
              ind++;
              }
      //  show(); 
        k=0;while(k<3 && sum[k] == t[k]  ){k++;}
        }while(k!=3 && ind2 < v[0].size());

        if (k==3)    
           cout << "Case #"<< j << ": yes"<< endl;
           else
               cout << "Case #"<< j << ": no"<< endl;
    }
    return 0;
    }
