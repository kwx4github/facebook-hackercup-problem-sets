#include <cstdio>
#include <cmath>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;

typedef struct food{
    int p;
    int c;
    int f;
} food;

food v[25];
int gp, gc, gf, n;
int use[25];
bool cond;

void test() {
    int pp, cc, ff;
    pp = cc = ff = 0;
    for(int i = 0; i < n; i++) {
        if(use[i] == 1) {
            pp += v[i].p;
            cc += v[i].c;
            ff += v[i].f;
        }
    }
    if((pp == gp) && (cc == gc) && (ff == gf)) {
        cond = true;
    }
}

void mountUse(int pass) {
    if(cond == true) return;
    if(pass == n) {
        test();
    }else {
        for(int i = 0; i <= 1; i++) {
            use[pass] = i;
            mountUse(pass + 1);
        }
    }
}

int main() {
    int t;
    scanf("%d", &t);
    for(int z = 1; z <= t; z++) {
        memset(use, 0, sizeof(use));
        cond = false;
        scanf("%d %d %d", &gp, &gc, &gf);
        scanf("%d", &n);
        for(int i = 0; i < n; i++) {
            scanf("%d %d %d", &v[i].p, &v[i].c, &v[i].f);
        }
        mountUse(0);
        printf("Case #%d: ", z);
        if(cond) printf("yes\n");
        else printf("no\n");
    }
    return 0;
}
