import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.Stack;


public class NewYearsResolution {

	static Scanner input;
	static PrintWriter output;
	static int caseNum;
	
	static boolean nutrientCheck (int goal, Stack<Integer> checkStack, int[][] foodNutrients, int nutrient) {
		int sum = 0;
		for(int i : checkStack) {
			sum += foodNutrients[i][nutrient];
			if (sum > goal) {
				return false;
			}
		}
		if (sum == goal) {
			return true;
		}
		return false;		
	}
	
    static void solve(int[] goal, int foods, int[][] foodNutrients){
    	Stack<Integer> checkStack = new Stack<Integer>();
    	checkStack.add(0);
    	int i = 0;
    	int popped = -1;
    	int sum = foodNutrients[i][0];
    	while (i < foods) {
    		
    		if (sum == goal[0]) {
    			if (nutrientCheck(goal[1], checkStack, foodNutrients, 1) && nutrientCheck(goal[2], checkStack, foodNutrients, 2)) {
        			printAnswer("yes");
        			return;
    			}
    		}
    		if (i == foods - 1) {
    			printAnswer("no");
    			return;
    		}
    		else if (checkStack.peek() == (foods - 1)) {
    			popped = checkStack.pop();
    			sum -= foodNutrients[popped][0];
    			popped = checkStack.pop();
    			sum -= foodNutrients[popped][0];
    			
    			checkStack.add(popped + 1);
    			sum += foodNutrients[checkStack.peek()][0];
    		}
    		else if (sum > goal[0]) {
    			popped = checkStack.pop();
    			sum -= foodNutrients[popped][0];
    			checkStack.add(popped + 1);
    			sum += foodNutrients[checkStack.peek()][0];
    		}
    		else {
    			checkStack.add(checkStack.peek() + 1);
    			sum += foodNutrients[checkStack.peek()][0];
    		}
    		//System.out.println(popped + " = " + i + "?");
			if (popped == i) {
				i++;
			}
    	}
    }
    
    static void printAnswer(String answer) {
    	output.print("Case #" + caseNum + ": ");
    	output.print(answer);
    	output.println();
    }
    
    public static void main(String[] args) throws IOException {  
        
        FileInputStream stream = new FileInputStream("new_years_resolution.txt");
        Scanner input = new Scanner(stream);  //Create input scanner
        
        output = new PrintWriter("new_years_resolution_output.txt"); //Create output file
        
        int T = input.nextInt();
        for (caseNum = 1; caseNum <= T; caseNum++) {
        	int[] goal = {input.nextInt(), input.nextInt(), input.nextInt()};      	
        	int foods = input.nextInt();
        	
        	int[][] foodNutrients = new int[foods][3];
        	for (int i = 0; i < foods; i++) {
        		for (int j = 0; j < 3; j++) {
        			foodNutrients[i][j] = input.nextInt();
        		}
        	}
        	
        	solve(goal, foods, foodNutrients);
        }
        
        input.close();
        stream.close();                     
        output.close(); 
    }

}
