#include <iostream>
#include <vector>
#include <deque>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <fstream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <algorithm>
#include <numeric>

#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; --i)
#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)

using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef long long i64;
typedef vector<i64> vi64;
typedef vector<vi64> vvi64;

const int MAXN = 110000;

int main() {
	ios::sync_with_stdio(false);
	cout.precision(10);
	cout << fixed;
#ifdef LOCAL_DEFINE
	freopen("input.txt", "rt", stdin);
#endif

	freopen("output.txt", "wt", stdout);
	int t;
	cin >> t;
	
	forn(i, t)
	{
		int Gp = 0, Gc = 0, Gf = 0;
		cin >> Gp >> Gc >> Gf;

		int n;
		cin >> n;

		vector<long long> p(n);
		vector<long long> c(n);
		vector<long long> f(n);
		
		forn(j, n)
		{
			cin >> p[j] >> c[j] >> f[j];
		}

		long long mask = (1 << n) - 1;

		bool found = false;

		cout << "Case #" << i + 1 << ": ";
		fore(m, 1, mask)
		{
			long long sum_p = 0;
			long long sum_c = 0;
			long long sum_f = 0;

			forn(j, n)
			{
				if ((1 << j) & m)
				{
					sum_p += p[j];
					sum_c += c[j];
					sum_f += f[j];
				}
			}

			if ((sum_p == Gp) && (sum_c == Gc) && (sum_f == Gf))
			{
				cout << "yes\n";
				found = true;
				break;
			}
		}

		if (!found)
		{
			cout << "no\n";
		}
	}

#ifdef LOCAL_DEFINE
	cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
#endif
	return 0;
}