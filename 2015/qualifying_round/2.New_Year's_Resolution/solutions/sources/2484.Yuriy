#include <cstdio>
#include <iostream>
#include <algorithm>
#include <bitset>

using namespace std;

const int X = 1001;

bitset <1001> table[X][X];
int add[X][3];

void clear()
{
    for (int i = 0; i < X; ++i)
    {
        for (int j = 0; j < X; j++)
        {
            table[i][j].reset();
        }
    }
}

void per(int p, int c, int f, int ln, int n)
{
    if(max(max(p, c), f) > 1000) return;
    if(ln == n) {table[p][c][f] = 1; return;}
    per(p, c, f, ln + 1, n);
    per(p + add[ln][0], c + add[ln][1], f + add[ln][2], ln + 1, n);
}

int main()
{
/*    freopen("input.txt", "r", stdin);
    freopen("B_output.txt", "w", stdout); */
    int test;
    cin >> test;
    for (int tt = 1; tt <= test; ++tt)
    {
        int gp, gc, gf, n;
        cin >> gp >> gc >> gf;
        cin >> n;
        clear();
        for (int i = 0; i < n; i++)
        {
            cin >> add[i][0] >> add[i][1] >> add[i][2];
        }
        per(0, 0, 0, 0, n);
        cout << "Case #" << tt << ": ";
        if(table[gp][gc][gf]) cout << "yes\n";
        else cout << "no\n";
    }
    return 0;
}
