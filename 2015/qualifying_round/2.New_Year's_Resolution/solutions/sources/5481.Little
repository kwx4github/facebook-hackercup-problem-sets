#include <iostream>

using namespace std;

int can(int gp, int gc, int gf, int p[], int c[], int f[], int n)
{
	if (n < 0)
		return 0;

	if (gp == p[n] && gc == c[n] && gf == f[n])
		return 1;

	if (can(gp, gc, gf, p, c, f, n-1))
		return 1;

	if (gp >= p[n] && gc >= c[n] && gf >= f[n])
		return can(gp - p[n], gc - c[n], gf - f[n], p, c, f, n-1);
	return 0;
}
		
		
int main(void)
{
	int GP, GC, GF, N, T, i, j;
	int P[20], C[20], F[20];
	
	cin >> T;

	for (i = 1; i <= T; i++) {
		cin >> GP >> GC >> GF;
		cin >> N;

		for (j = 0; j < N; j++)
			cin >> P[j] >> C[j] >> F[j];
	
		if (can(GP, GC, GF, P, C, F, N-1))
			cout <<"Case #"<<i<<": yes"<<endl;
		else
			cout <<"Case #"<<i<<": no"<<endl;
	}

	return 0;
}

