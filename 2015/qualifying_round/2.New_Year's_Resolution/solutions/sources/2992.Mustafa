class Array
  def power_set
    inject([[]]) do |acc, you|
      ret = []   
      acc.each do |i| 
        ret << i     
        ret << i + [you] 
      end
      ret  
    end
  end
 
  def func_power_set
    inject([[]]) { |ps,item| 
      ps +                   
      ps.map { |e| e + [item] } 
    }
  end
end

gets.to_i.times { |tc| 
    p,c,f = gets.split(" ").map{|e| e.to_i}
    n = gets.to_i
    pr = Array.new
    cr = Array.new
    ft = Array.new
    n.times { 
      pt,ct,tt = gets.split(" ").map{|e| e.to_i}
      pr<<pt
      cr<<ct
      ft<<tt
    }
    index = Array.new
    n.times { |nt| index<<nt } 
    found = false
    index.power_set.each { |ps| 
        sum = 0
        ps.each {|e|  sum = sum + pr[e]}
        next if sum != p
        sum = 0
        ps.each {|e|  sum = sum + cr[e]}
        next if sum != c
        sum = 0
        ps.each {|e|  sum = sum + ft[e]}
        next if sum != f
        found = true
        break
    }
    ret = "yes" if found
    ret = "no" if !found
    puts "Case ##{tc+1}: #{ret}"
}
