#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys

def xuniqueCombinations(items, n):
    if n == 0:
        yield []
    else:
        for i in xrange(len(items)):
            for cc in xuniqueCombinations(items[i + 1:], n - 1):
                yield [items[i]] + cc


def isWhatWeNeed(gp, gc, gf, foods):
    _sumP = 0
    _sumC = 0
    _sumF = 0
    for food in foods:
        _sumP += food[0]
        _sumC += food[1]
        _sumF += food[2]
    if _sumP == gp and _sumC == gc and _sumF == gf:
        return True
    return False


def execRun(gp, gc, gf, foods):
    for i in xrange(1, len(foods) + 1):
        for comb in xuniqueCombinations(foods, i):
            if isWhatWeNeed(gp, gc, gf, comb):
                return "yes"
    return "no"


if __name__ == '__main__':
    testCasesCount = input()
    for i in xrange(0, testCasesCount):
        strs = sys.stdin.readline().split()
        gp = int(strs[0])
        gc = int(strs[1])
        gf = int(strs[2])
        foodsCount = input()
        foods = []
        for j in xrange(0, foodsCount):
            strs = sys.stdin.readline().split()
            p = int(strs[0])
            c = int(strs[1])
            f = int(strs[2])
            foods.append((p,c,f))
        print 'Case #' + str(i + 1) + ': ' + execRun(gp, gc, gf, foods)
