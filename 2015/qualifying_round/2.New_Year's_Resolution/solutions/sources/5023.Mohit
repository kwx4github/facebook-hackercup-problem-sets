#! /usr/bin/python

import os, optparse, commands, sys
import itertools

script, file_name = sys.argv

def generate_iter(valid_tupes, p, c, f):
	for l in range(1, len(valid_tuples) +1):
		for subset in itertools.combinations(valid_tuples, l):
			#print subset	
			p_sum=c_sum=f_sum=0
			for elem in subset:
				p_sum += elem[0]
				c_sum += elem[1]
				f_sum += elem[2]
			if p_sum == p and c_sum == c and f_sum == f:
				return "yes"
	return "no"	


lines = [line.strip() for line in open(file_name)]
num_test_case = int(lines[0])
cur_line = 1
for t in range(0, num_test_case):
	valid_tuples = []
	p, c, f = lines[cur_line].split(' ')
	p = int(p)
	c = int(c)
	f = int(f)
	#print p, c, f
	cur_line += 1	
	#print lines[cur_line]
	num_food_item = int(lines[cur_line])
	cur_line += 1	
	for j in range(0, num_food_item):
		p_, c_, f_ = lines[cur_line].split(' ')
		cur_line += 1	
		p_ = int(p_)
		c_ = int(c_)
		f_ = int(f_)
		if p_ > p or c_ > c or f_ > f:
			continue
		else:	
			valid_tuples.append((p_, c_, f_))
	#print valid_tuples
	print "Case #%d:" % (t+1), generate_iter(valid_tuples, p, c, f)	

