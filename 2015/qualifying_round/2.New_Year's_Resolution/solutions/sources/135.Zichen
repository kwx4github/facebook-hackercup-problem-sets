#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <cstring>
#include <string>
using namespace std;

#define pairii pair<int, int>
#define llong long long
#define pb push_back
#define sortall(x) sort((x).begin(), (x).end())
#define INFI  numeric_limits<int>::max()
#define INFLL numeric_limits<llong>::max()
#define INFD  numeric_limits<double>::max()
#define FOR(i,s,n) for (int (i) = (s); (i) < (n); (i)++)
#define FORZ(i,n) FOR((i),0,(n))

const int MAXN = 25;
int tg[3],fd[MAXN][3],n;
bool mask[MAXN];

void decomp(int x) {
  FORZ(i,n) mask[i]=false;
  int i = 0;
  while (x>0) {
    if (x%2) mask[i]=true;
    i++;
    x/=2;
  }
}

void solve() {
  FORZ(i,3) scanf("%d",tg+i);
  scanf("%d",&n);
  FORZ(i,n) FORZ(j,3) scanf("%d",fd[i]+j);
  bool res;
  FORZ(i,1<<n) {
    decomp(i);
    int tmp[3];
    memset(tmp,0,sizeof tmp);
    FORZ(j,n) {
      if (mask[j]) {
        FORZ(k,3) {
          tmp[k] += fd[j][k];
        }
      }
    }
    res = true;
    FORZ(j,3) {
      if (tg[j] != tmp[j]) {
        res = false;
        break;
      }
    }
    if (res) break;
  }
  if (res) printf("yes\n");
  else printf("no\n");
}

int main() {
#ifdef DEBUG
  freopen("in.txt", "r", stdin);
  freopen("out.txt", "w", stdout);
#endif
  
  int t;
  scanf("%d", &t);
  FOR(i,1,t+1) {
    printf("Case #%d: ", i);
    solve();
  }
  
  return 0;
}
