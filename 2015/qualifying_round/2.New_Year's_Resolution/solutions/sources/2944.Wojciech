#include <cstdio>
using namespace std;

struct Meal {
    int a;
    int b;
    int c;
    Meal() {
        a = 0;
        b = 0;
        c = 0;
    }
    Meal(int _a, int _b, int _c) {
        a = _a;
        b = _b;
        c = _c;
    }
    const Meal operator+(const Meal& that) const {
        return Meal(a + that.a, b + that.b, c + that.c);
    }
    bool operator==(const Meal& that) const {
        return a == that.a && b == that.b && c == that.c;
    }
};

Meal meals[20];

bool fit(const Meal& aim, const Meal& eaten, int n) {
    Meal with = eaten + meals[n];
    if(with == aim) {
        return true;
    }
    if(n == 0) {
        return false;
    }
    if(fit(aim, with, n - 1)) {
        return true;
    }
    if(fit(aim, eaten, n - 1)) {
        return true;
    }
    return false;
}

bool run_test() {
    Meal m;
    int n;
    scanf("%d %d %d", &m.a, &m.b, &m.c);
    scanf("%d", &n);
    for(int i = 0; i < n; ++i) {
        scanf("%d %d %d", &meals[i].a, &meals[i].b, &meals[i].c);
    }
    return fit(m, Meal(), n);
}

void run(int i) {
    if(run_test()) {
        printf("Case #%d: yes\n", i);
    } else {
        printf("Case #%d: no\n", i);
    }
}

int main() {
    int t;
    scanf("%d", &t);
    for(int i = 1; i <= t; ++i) {
        run(i);
    }
    return 0;
}
