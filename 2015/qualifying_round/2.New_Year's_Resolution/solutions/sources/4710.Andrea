import sys


def findSolutions(mset, target, subset = []):
	res = sum([lP[x] for x in subset])

	if res == target:
		sols.append(subset)
		return

	if res > target:
		return

	for i in xrange(len(mset)):
		findSolutions(mset[i + 1:], target, subset + [mset[i]])


lP = []
sols = []

input_file = open(sys.argv[1], 'r')
for x in xrange(0, int(input_file.readline())):
	inp = map(int, input_file.readline().split())

	Gp, Gc, Gf = inp[0], inp[1], inp[2]
	answer = "no"
	sols = []
	lP = []
	lC = []
	lF = []
	for y in xrange(0,int(input_file.readline())):
		food = map(int, input_file.readline().split())
		lP.append(food[0])
		lC.append(food[1])
		lF.append(food[2])

	findSolutions(range(len(lP)), Gp);

	for f in sols:
		tmpC, tmpF = 0, 0
		for i in f:
			tmpC += lC[i]
			tmpF += lF[i]

		if tmpC == Gc and tmpF == Gf:
			answer = "yes"
			break

	print("Case #{}: {}".format(x + 1, answer))