import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;

/**
 * Created by jonthoms on 1/10/15.
 */
public class Solution2 {
    public static void main(String[] args) {
        process();
    }

    private static void process(){
        File file = new File("input2.txt");
        Scanner scanner = null;
        try {
            scanner = new Scanner(file);
        } catch (Exception e){
            trace(e);
        }
        String line = scanner.nextLine();
        int nProblems = Integer.parseInt(line);
        trace(nProblems);

        StringBuilder result = new StringBuilder();

        for(int n = 0; n < nProblems; ++n){
            line = scanner.nextLine();
            int[] total = parseLineInts(line);
            line = scanner.nextLine();
            int nFoods = Integer.parseInt(line);
            int[][] foods = new int[nFoods][3];
            int[] food;
            int nCombinations = 1;
            for(int i = 0; i < nFoods; ++i){
                foods[i] = parseLineInts(scanner.nextLine());
                nCombinations *= 2;
            }
            boolean solutionFound = false;
            for(int i = 0; i < nCombinations; ++i){
                int[] sum = {0,0,0};
                for(int k = 0; k < nFoods; ++k){
                   if(((i >> k) & 1) == 1){
                       food = foods[k];
                       sum[0] += food[0];
                       if(sum[0] > total[0]){
                           break;
                       }
                       sum[1] += food[1];
                       if(sum[1] > total[1]){
                           break;
                       }
                       sum[2] += food[2];
                       if(sum[2] > total[2]){
                           break;
                       }
                       if(sum[0] == total[0] && sum[1] == total[1] && sum[2] == total[2]){
                           solutionFound = true;
                           break;
                       }
                   }
                }
                if(solutionFound) break;
            }
            int problemNumber = n + 1;
            if(solutionFound){
                result.append("Case #" + problemNumber + ": yes\n");
            } else {
                result.append("Case #" + problemNumber + ": no\n");
            }

        }

        String output = result.toString();
        trace(output);

        saveStringFile("output2.txt", output);

        trace("finished");
    }

    private static int[] parseLineInts(String line){
        if(line.length() == 0) return new int[0];
        String[] parts = line.split(" ");
        int n = parts.length;
        int[] result = new int[n];
        for(int i = 0; i < n; ++i){
            result[i] = Integer.parseInt(parts[i]);
        }
        return result;
    }

    private static void trace(Object... arguments) {
        StringBuilder builder = new StringBuilder();
        for (int i = 0; i < arguments.length; ++i) {
            if (i != 0) builder.append(", ");
            builder.append(arguments[i]);
        }
        builder.append("\n\n");
        System.out.print(builder.toString());
    }

    private static void saveStringFile(String fileName, String output){
        try {
            PrintWriter out = new PrintWriter(fileName);
            out.print(output);
            out.close();
        } catch (Exception e){
            trace(e);
        }
    }
}

