//by david942j
#include <cstdio>
#include <cstring>
#include <set>
#include <map>
#include <ctime>
#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <cassert>
#include <queue>
#include <stack>
#include <cstdlib>
#define openfile(s) freopen(s".in","r",stdin);freopen(s".out","w",stdout)
#define mpr std::make_pair
#define lg(x) (31-__builtin_clz(x))
#define __count __builtin_popcount
#define X first
#define Y second
#define mst(x) memset(x,0,sizeof(x))
#define mst1(x) memset(x,-1,sizeof(x))
#define ALL(c) (c).begin(),(c).end()
#define FOR(i,n) for(int i=0;i<n;i++)
#define FOR1(i,n) for(int i=1;i<=n;i++)
#define FORit(it,c) for(__typeof(c.begin()) it=c.begin();it!=c.end();++it)
#define pb push_back
#define RID(x) int x;RI(x)
using namespace std;
typedef long long LL;
typedef double LD;
typedef vector<int> VI;
typedef std::pair<int,int> PII;
template<class T>inline void maz(T &a,T b){if(a<b)a=b;}
template<class T>inline void miz(T &a,T b){if(a>b)a=b;}
template<class T>inline T abs(T a){return a>0?a:-a;}
inline int max(int a,int  b){return a>b?a:b;}
void RI() {}
template<typename... T>
void RI( int& head, T&... tail ) {
    scanf("%d",&head);
    RI(tail...);
}
const int N=501,INF=1<<26;
const LD EPS=1e-9;
struct PT {
    int x,y,z;
    PT(int X=0,int Y=0,int Z=0):x(X),y(Y),z(Z){}
    PT operator+(const PT &A)const{return PT(x+A.x,y+A.y,z+A.z);}
    void read() {
        RI(x,y,z);
    }
    bool operator==(const PT &A)const {
        return x==A.x && y==A.y &&z==A.z;
    }
}A[21],dp[1<<20];
PT a;
int n;
int main() {
    RID(T);int w=1;
    while(T--) {
        a.read();
        RI(n);
        FOR(i,n)A[i].read();
        for(int i=1;i<(1<<n);i++)
            dp[i] = dp[i^(i&-i)]+A[lg(i&-i)];
        bool ok=false;
        FOR(i,(1<<n))
            if(dp[i]==a)ok=true;
        printf("Case #%d: ",w++);
        puts(ok?"yes":"no");
    }
}
/*

*/