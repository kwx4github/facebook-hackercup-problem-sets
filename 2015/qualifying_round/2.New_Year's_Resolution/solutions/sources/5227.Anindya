#include<stdio.h>
int main()
{
    int t, k=1;
    scanf("%d", &t);
    while(t--){
        int sum_p, sum_c, sum_f, num_food, j;
        bool flag = 0;
        scanf(" %d %d %d %d",&sum_p,&sum_c, &sum_f, &num_food);
        long long last=(1<<num_food)-1; // generalizing, we have iterate from 0 to 2^n - 1
        long long i,temp,currentsum_c, currentsum_p, currentsum_f ;
        int set[num_food][3];
        for(int i = 0 ; i < num_food ; i++){
            scanf("%d %d %d",&set[i][0], &set[i][1], &set[i][2]);
        }
        for(i=0;i<=last;i++)
        {
            temp=i; //stored i in a different variable to save it from modification
            currentsum_p=0;
            currentsum_c=0;
            currentsum_f=0; // to keep track of the sum of values of selected coins
            j=0;
            /*-----SUBSET GENERATION PROCESS START-----*/
            //printf("Checking subset : { ");
            while(j<num_food) // for each bit of temp
            {
                if(temp%2==1) //examining the last bit (LSB) of temp. If it is 1, we take the coin
                {
                    //printf("%d ",set[j][0]);
                    currentsum_p+=(set[j][0]);
                    //printf("%d ",set[j][1]);
                    currentsum_c+=(set[j][1]);
                    //printf("%d ",set[j][2]);
                    currentsum_f+=(set[j][2]);
                }
                temp>>=1; //right shifting temp, so that we may analyze the next least significant bit in the next iteration of while loop
                j++;
            }
            /*-----SUBSET GENERATION PROCESS OVER-----*/
            //printf("} Sum= %lld %lld %lld",currentsum_p, currentsum_c, currentsum_f);
            /*-----CONDITION EVALUATION FOR THE CURRENT SUBSET-----*/
            if((currentsum_p==sum_p)&&(currentsum_c==sum_c)&&(currentsum_f==sum_f))
            {
                flag = 1;
                break;
            }
            /*-----CONDITION EVALUATION OVER-----*/
        }
        printf("Case #%d: ", k);
        if(flag == 1) printf("yes\n");
        else printf("no\n");
        k++;
	}
}
