#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <cstdlib>
#include <queue>
#include <stack>
#include <cmath>
#include <cstring>
#include <cstdio>

using namespace std;

typedef int tri[3];
const int N = (1<<20) + 1;
int mask[N][3], a[21][3];

int main () {
    int t;
    cin >> t;
    for (int k = 0; k < t; ++k) {
        int n;
        tri tar;
        for (int i = 0; i < 3; ++i) cin >> tar[i];
        cin >> n;
        for (int i = 0; i < n; ++i)
            for (int j = 0; j < 3; ++j) cin >> a[i][j];
        int sz = 1<<n;
        memset(mask, 0, sizeof(mask));
        bool yes = false;
        for (int i = 1; !yes && i <= sz; ++i) {
            int pos = 0;
            while (!(i & 1 << pos)) pos++;
            bool all = true;
            for (int j = 0; j < 3; ++j) {
                mask[i][j] = mask[i^(1<<pos)][j] + a[pos][j];
                if (mask[i][j] != tar[j]) all = false;
            }
            if (all) yes = true;
        }
        cout << "Case #" << k+1 << ": " << (yes ? "yes" : "no") << endl;
    }
    return 0;
}
