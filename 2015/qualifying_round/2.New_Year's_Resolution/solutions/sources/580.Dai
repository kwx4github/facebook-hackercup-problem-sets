import java.util.Scanner;
import java.util.stream.IntStream;


public class FHC2015QualB {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int numCases = sc.nextInt();
        for (int i = 1; i <= numCases; i++) {
            System.out.format("Case #%d: %s%n", i, new FHC2015QualB().solve(sc));
        }
    }

    static class Food {
        final int p, c, f;

        public Food(int p, int c, int f) {
            this.p = p;
            this.c = c;
            this.f = f;
        }
    }

    private String solve(Scanner sc) {
        int gp = sc.nextInt();
        int gc = sc.nextInt();
        int gf = sc.nextInt();
        int n = sc.nextInt();
        Food[] foods = IntStream.range(0, n).mapToObj(
                i -> new Food(sc.nextInt(), sc.nextInt(), sc.nextInt())).toArray(
                Food[]::new);
        return canMeet(foods, n - 1, gp, gc, gf) ? "yes" : "no";
    }

    private boolean canMeet(Food[] foods, int i, int gp, int gc, int gf) {
        if (gp == 0 && gc == 0 & gf == 0) return true;
        if (i < 0 || gp < 0 || gc < 0 || gf < 0) return false;
        return canMeet(foods, i - 1, gp - foods[i].p, gc - foods[i].c, gf - foods[i].f)
                || canMeet(foods, i - 1, gp, gc, gf);
    }

}
