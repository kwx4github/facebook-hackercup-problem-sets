/*
ID: Asif Jawad
LANG: C++
TASK:
*/

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <climits>
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <iterator>
#include <utility>
#include <sstream>

using namespace std;

#define Read(f) freopen(f,"r",stdin)
#define Write(f) freopen(f,"w",stdout)

#define geti(n) scanf("%d",&n)
#define getll(n) scanf("%lld",&n)
#define getf(n) scanf("%lf",&n);

#define ll long long
#define pii pair<int,int>
#define pdd pair<double,double>
#define ff first
#define ss second
#define vi vector<int>

#define pi acos(-1)
#define inf LONG_MAX
#define eps 1e-9
#define mem(a,n) memset(a,n,sizeof a)
#define countbit(x) __builtin_popcountll(x)

#define rep(i,n) for(int i = 0;i < n;i++)
#define Rep(i,a,n) for(int i = (a) ;i < n;i++)
#define REP(i,a,n) for(int i = (a); i >= n;i--)

#define pb push_back
#define sz size()
#define mp make_pair

inline int Set(int N,int pos){return N = N | (1 << pos);}

inline int Reset(int N,int pos){return N = N & ~ (1 <<pos);}

inline bool check(int N,int pos) {return (bool) (N & (1 << pos) );}

template<class T>
T gcd(T a,T b)
{
    return (a % b == 0) ? b : gcd( b, a%b );
}

template <class T>

T lcm(T a,T b)
{
    return (a / gcd(a,b)) * b;
}

template<class T>

bool is_prime(T n)
{
    if( (n % 2 == 0 && n > 2) || n < 2 )return 0;

    for( T i = 3; i * i <= n ; i = i + 2 ){

        if( n % i == 0 )return 0;
    }

    return 1;
}

//template ends here

int fd[3][25],n;

bool dp[1002][1002][1002];

bool mark[1002][1002][1002];

int main()
{
    Read("in.");
    Write("out");

	int t,p,c,f;

	cin >> t;

	Rep(cases,1,t+1){

		cin >> p >> c >> f >> n;

		rep(i,n){

			rep(j,3){

				cin >> fd[j][i];
			}
		}

        mem(dp,0);

		dp[0][0][0] = 1;

		rep(i,n){

            rep(j,p+1){

                rep(k,c+1){

                    rep(l,f+1){

                        mark[j][k][l] = 0;
                    }
                }
            }

            for(int j = fd[0][i];j <= p;j++){

                for(int k = fd[1][i];k <= c;k++){

                    for(int l = fd[2][i];l <= f;l++){

                        int a = j - fd[0][i],b = k - fd[1][i],c = l - fd[2][i];

                        if(dp[a][b][c] == 1 && mark[a][b][c] == 0){

                            dp[j][k][l] = mark[j][k][l] = 1;
                        }
                    }
                }
            }
        }
        printf("Case #%d: ",cases);
        (dp[p][c][f]) ? cout << "yes\n" : cout << "no\n";
	}
    return 0;
}

