package a2015;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Hashtable;


public class Q2 {
    
   public static void main(String[] args) throws NumberFormatException, IOException{
      BufferedReader ir=new BufferedReader(new FileReader(new File("input2.txt")));
      BufferedWriter ow=new BufferedWriter(new FileWriter(new File("output2.txt")));
      int max=Integer.parseInt(ir.readLine());
      for (int i=0;i<max;i++){
         ow.write("Case #"+(i+1)+": "+procesarEntrada(ir));
         ow.newLine();
      }
      ow.close();
   }
private static String procesarEntrada(BufferedReader ir) throws IOException {
    String calorias=ir.readLine();
    String[] splitCalorias=calorias.split(" ");
    int numFoods=Integer.parseInt(ir.readLine());
    ArrayList foods=new ArrayList<String>();
    for (int i=0;i<numFoods;i++){
	foods.add(ir.readLine());
    }
    boolean encontrado=calcular(foods,splitCalorias);
    if(encontrado){
	return "yes";
    }else{
	return "no";
    }
}

private static boolean calcular(ArrayList foods, String[] splitCalorias) {
    int numIteraciones=(int) Math.pow(2,foods.size())-1;
    for(int i=0;i<numIteraciones;i++){
	boolean result=acumular(foods,splitCalorias,i+1);
	if(result){
	    return true;
	}
    }
    return false;
}

private static boolean acumular(ArrayList foods,String[] splitCalorias,int iteracion) {
    int bit=1;
    Integer p=0;
    Integer c=0;
    Integer f=0;
    for(int i=0;i<foods.size();i++){
	if((iteracion & bit)>0){
	    String[] data=((String) foods.get(i)).split(" ");
		p+=Integer.parseInt(data[0]);
		c+=Integer.parseInt(data[1]);
		f+=Integer.parseInt(data[2]);
	}
	bit=bit<<1;
    }
    if(Integer.parseInt(splitCalorias[0])==p && Integer.parseInt(splitCalorias[1])==c && Integer.parseInt(splitCalorias[2])==f){
	return true;
    }else{
	return false;
    }
}
}
 