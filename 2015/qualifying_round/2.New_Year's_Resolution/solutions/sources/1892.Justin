import java.io.*;

class NewYearsResolution
{
    static int[] max = new int [3];
    static int[] [] food;
    
    
    private static boolean check (int [] digested, int cur, int eat, int want) // The amount digested, the current amount of eaten, the amount wanted.
    {
	int[] newD = new int [digested.length];
	newD [0] = digested [0];
	newD [1] = digested [1];
	newD [2] = digested [2];
	
	if (eat == want || cur >= food.length)
	{
	    return false;
	}
	if (check (newD, cur + 1, eat, want))
	{
	    return true;
	}
	
	// Eat
	newD [0] += food [cur] [0];
	newD [1] += food [cur] [1];
	newD [2] += food [cur] [2];
	
	if (newD [0] == max [0] && newD [1] == max [1] && newD [2] == max [2])
	{
	    return true;
	}
	if (check (newD, cur + 1, eat + 1, want))
	{
	    return true;
	}
	return false;
    }
    
    
    public static void main(String[] args) throws IOException
    {
	BufferedReader in = new BufferedReader (new FileReader ("new_years_resolution.txt"));
	PrintWriter out = new PrintWriter (new FileWriter ("output.txt"));
	
	int N = Integer.parseInt (in.readLine ());  // Number of test cases
	
	for (int n = 0 ; n < N ; n++)
	{
	    String[] temp = in.readLine ().split (" "); // Maximum nutrients (how much he wants to eat)
	    // Setting the variables
	    for (int x = 0 ; x < 3 ; x++)
	    {
		max [x] = Integer.parseInt (temp [x]);  // Assigning max
	    }
	    
	    food = new int [Integer.parseInt (in.readLine ())] [3]; // Number of foods
	    
	    // Setting the value of the foods available
	    for (int x = 0 ; x < food.length ; x++)
	    {
		temp = in.readLine ().split (" ");
		for (int y = 0 ; y < 3 ; y++)
		{
		    food [x] [y] = Integer.parseInt (temp [y]);
		}
	    }
	    
	    boolean possible = false;   // Is it possible to eat the wanted amount
	    for (int x = 0 ; x < food.length ; x++)
	    {
		if (check (new int [3], 0, 0, x + 1))
		{
		    possible = true;
		    break;
		}
	    }
	    out.println ("Case #" + (n + 1) + ": " + ((possible) ? "yes" : "no"));
	}
	out.close ();
    }
}
