import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;



public class NewYearResolution {

	static class Diet{
		private int protein;
		private int carb;
		private int fat;
		public Diet(int p,int c,int f){
			this.setProtein(p);
			this.setCarb(c);
			this.setFat(f);
		}
		public Diet(String[] val){
			this.setProtein(Integer.valueOf(val[0]));
			this.setCarb(Integer.valueOf(val[1]));
			this.setFat(Integer.valueOf(val[2]));
		}
		public int getProtein() {
			return protein;
		}
		public void setProtein(int protein) {
			this.protein = protein;
		}
		public int getCarb() {
			return carb;
		}
		public void setCarb(int carb) {
			this.carb = carb;
		}
		public int getFat() {
			return fat;
		}
		public void setFat(int fat) {
			this.fat = fat;
		}
	}

	public static String isPossible(Diet d,int[] p,int[] c,int[] f,int n){
		if(isSum(p, n, d.getProtein()) && isSum(c, n, d.getCarb()) && isSum(f, n, d.getFat())){
			return "yes";
		}else{
			return "no";
		}
	}

	public static boolean isSum(int set[], int n, int sum){
		{

			if (sum == 0)
				return true;
			if (n == 0 && sum != 0)
				return false;

			if (set[n-1] > sum)
				return isSum(set, n-1, sum);

			return isSum(set, n-1, sum) || isSum(set, n-1, sum-set[n-1]);
		}
	}

	public static void main(String args[]) throws IOException{
		BufferedReader br = new BufferedReader(new FileReader("input.in"));
		String line = "";
		Diet goal;
		int x = 1;
		while((line = br.readLine()) != null){
			goal = new Diet(line.split(" "));
			line = br.readLine();
			int n = Integer.valueOf(line);
			int[] p = new int[n];
			int[] c = new int[n];
			int[] f = new int[n];
			for(int y=0;y<n;y++){
				line = br.readLine();
				Diet d = new Diet(line.split(" "));
				p[y] = d.getProtein();
				c[y] = d.getCarb();
				f[y] = d.getFat();
			}

			System.out.println("Case #" + x + ": " + isPossible(goal, p, c, f, n) );
			x++;
		}


		br.close();
	}
}
