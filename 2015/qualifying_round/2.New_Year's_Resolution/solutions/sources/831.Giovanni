// This program is written in Amber, a programming language that I personally
// designed and for which I'm currently implementing a compiler.
// You can find the compiler binaries, and all the other support files required to build
// this program on github at the following URL: https://github.com/gianantonio71/amber-build
// The commit that was specifically created to build this program is the one
// named "Facebook Hacker Cup 2015 - Qualification round". More recent ones will probably
// also works, but the language is a work in progress and I'm not able to guarantee
// backward compatibility.
// Just clone that repository and follow the instructions in the file README.md
// Email me at gianantonio71@gmail.com if you encounter any problems


search(gp, gc, gf, n, pcfs, idx, acc_gp, acc_gc, acc_gf)
{
  if (idx == n)
    return acc_gp == gp and acc_gc == gc and acc_gf == gf;
  ;

  if (search(gp, gc, gf, n, pcfs, idx+1, acc_gp, acc_gc, acc_gf))
    return true;
  ;

  p, c, f = pcfs[idx];
  return search(gp, gc, gf, n, pcfs, idx+1, acc_gp+p, acc_gc+c, acc_gf+f);
}


solve(gp, gc, gf, n, pcfs)
{
  if (search(gp, gc, gf, n, pcfs, 0, 0, 0, 0))
    return "yes";
  else
    return "no";
  ;
}


Main([String] args)
{
  if (length(args) /= 2)
    Print("Usage: <program name> <input file> <output file>\n");
    return;
  ;

  read_res = FileRead(args[0]);
  if (read_res == nil)
    Print("File not found: " & args[0] & "\n");
    return;
  ;
  input = value(read_res);

  lines = [string(l) : l <- split_lines(input)];

  test_cases = to_int(lines[0]);

  lc = 1;
  for (i_t = 0..test_cases-1)
    // Reading the inputs
    fs = [to_int(s) : s <- split(lines[lc])];
    lc = lc + 1;
    gp, gc, gf = fs;

    n = to_int(lines[lc]);
    lc = lc + 1;

    pcfs = [];
    for (i = 0..n-1)
      pcf = [to_int(s) : s <- split(lines[lc])];
      lc = lc + 1;
      pcfs = [pcfs | pcf];
    ;

    // Solving the test case
    res_str = solve(gp, gc, gf, n, pcfs);

    // Writing the results
    out_line = "Case #" & to_str(i_t + 1) & ": " & res_str & "\n";
    FileWrite(args[1], i_t > 0, _obj_(out_line));
    Print(out_line);
  ;
}