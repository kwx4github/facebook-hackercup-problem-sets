package octlong;

import java.io.BufferedInputStream;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.InputMismatchException;


public class NewYearResolution {
  private static class InputReader {
    BufferedInputStream bin;
    int numChars, curChar;
    byte[] buffer;
    static final int MAXBUF = 100000;

    public InputReader(InputStream in) {
      bin = new BufferedInputStream(in);
      buffer = new byte[MAXBUF];
    }

    public InputReader(String fileName) throws FileNotFoundException{
      bin = new BufferedInputStream(new FileInputStream(fileName));
      buffer = new byte[MAXBUF];
    }

    private int read() {
      if (numChars == -1) {
        throw new InputMismatchException();
      }

      if (curChar >= numChars) {
        curChar = 0;
        try {
          numChars = bin.read(buffer);
        } catch (IOException e) {
          throw new InputMismatchException();
        }
        if (numChars <= 0) {
          return -1;
        }
      }
      return buffer[curChar++];
    }

    public int nextInt() {
      int ch = read();
      while (isSpaceChar(ch)) {
        ch = read();
      }

      int sgn = 1, res = 0;
      if (ch == '-') {
        sgn = -1;
        ch = read();
      }

      do {
        if (ch < '0' || ch > '9') {
          throw new InputMismatchException();
        }
        res *= 10;
        res += ch - '0';
        ch = read();
      } while (!isSpaceChar(ch));

      return res * sgn;
    }

    public boolean isSpaceChar(int ch) {
      return ch == ' ' || ch == '\n' || ch == '\r' || ch == -1 || ch == '\t';
    }
  }

  public static int p, c, f, total;
  public static int[] protein, carbo, fat;
  public static boolean DEBUG = false;

  public static void main(String[] args)
      throws IOException {
    InputReader in;
    PrintWriter out;

    if (DEBUG) {
      in = new InputReader(System.in);
      out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
    } else {
      in = new InputReader("input.in");
      out = new PrintWriter(new BufferedWriter(new FileWriter("output.out")));
    }

    int numTc;
    StringBuilder soln = new StringBuilder();

    numTc = in.nextInt();

    for (int i = 0; i < numTc; i++) {
      p = in.nextInt();
      c = in.nextInt();
      f = in.nextInt();
      total = in.nextInt();
      protein = new int[total];
      carbo = new int[total];
      fat = new int[total];
      for (int j = 0; j < total; j++) {
        protein[j] = in.nextInt();
        carbo[j] = in.nextInt();
        fat[j] = in.nextInt();
      }
      soln.append("Case #" + (i + 1) + ": " + solve() + "\n");
    }

    out.print(soln.toString());
    out.close();
  }

  public static String solve() {
    int tmpP, tmpC, tmpF;
    for (int i = 0; i < 1 << total; i++) {
      tmpP = p;
      tmpC = c;
      tmpF = f;
      for (int j = 0; j < total; j++) {
        if ((i & (1 << j)) != 0) {
          tmpP -= protein[j];
          tmpC -= carbo[j];
          tmpF -= fat[j];

          if (tmpP == 0 && tmpC == 0 && tmpF == 0) {
            return "yes";
          }
        }
      }
    }

    return "no";
  }
}
