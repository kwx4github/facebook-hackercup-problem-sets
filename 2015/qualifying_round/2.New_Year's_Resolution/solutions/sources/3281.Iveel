import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


public class p2 {

    //  For writting file first 
    public static FileWriter fileWriter;
    public static BufferedWriter outPut; 
    public static int P, C, F;



    public static void solve() throws IOException{
        Scanner scan = new Scanner(new File("/Users/iveel/Documents/workspace/FBround1/src/example.txt"));
        int T = scan.nextInt();
        fileWriter =  new FileWriter("/Users/iveel/Documents/workspace/FBround1/src/mySubmission.txt");
        outPut = new BufferedWriter(fileWriter);

        for (int i=0; i < T; i++ ){
            //test case i

            P = Integer.valueOf(scan.next());
            C = Integer.valueOf(scan.next());
            F = Integer.valueOf(scan.next());
            boolean possibleCase = false;

            List<Integer> foodP = new ArrayList<Integer>();
            List<Integer> foodC = new ArrayList<Integer>();
            List<Integer> foodF = new ArrayList<Integer>();

            //list all foods
            int numFood = Integer.valueOf(scan.next());
            for (int j = 0; j < numFood; j++){
                int PinFood = Integer.valueOf(scan.next());
                int CinFood = Integer.valueOf(scan.next());
                int FinFood = Integer.valueOf(scan.next());

                foodP.add(PinFood);
                foodC.add(CinFood);
                foodF.add(FinFood);
            }

            //check all combinations
            int numOper = (int) Math.pow(2, numFood);
            for (Integer state = 0; state <= numOper; state++ ){
                
                Integer tempState = state;
                //one combination
                int amountP =0;
                int amountC =0;
                int amountF = 0;
                for (int j = 0; j < numFood; j++){
                    if ( (tempState & 1) == 1){
                        amountP += foodP.get(j);
                        amountC += foodC.get(j);
                        amountF += foodF.get(j);
                    }
                    tempState = (tempState >> 1);
                }
                if (amountP == P && amountC == C && amountF == F){
                    possibleCase = true;
                }
            }

            out(i+1, possibleCase);
        }
    }



    public static void out(int i, boolean can) throws IOException{
        String out;
        if (can){
            out = "Case #" + i + ": " +"yes" ;
        }else{
            out =  "Case #" + i + ": " +"no";
        }

        System.out.println(out);
        outPut.write(out+"\n");
    }

    public static void main(String [] args) throws IOException
    {
        solve();
        outPut.close();
    }

}
