#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <string.h>
#include <ctime>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define dbg(x) cout << #x << " = " << x << endl
#define dbg2(x,y) cout << #x << " = " << x << ", " << #y << " = " << y << endl
#define dbg3(x,y,z) cout << #x << " = " << x << ", " << #y << " = " << y << ", " << #z << " = " << z << endl

#define out(x) cout << (x) << endl
#define out2(x,y) cout << (x) << " " << (y) << endl
#define out3(x,y,z) cout << (x) << " " << (y) << " " << (z) << endl;

int P, C, F, n;
int p[30], c[30], f[30];

int gao(int s)
{
    int tp = 0, tc = 0, tf = 0;
    for(int i = 0; i < n; i ++)
        if( s & (1 << i) )
            tp += p[i], tc += c[i], tf += f[i];
    return (tp == P) && (tc == C) && (tf == F);
}

int main()
{
    freopen("data.in", "r", stdin);
    freopen("data.out", "w", stdout);
    int nt, idx = 0;
    scanf("%d", &nt);
    for(; nt > 0; nt --) {
        scanf("%d %d %d", &P, &C, &F);
        scanf("%d", &n);
        for(int i = 0; i < n; i ++)
            scanf("%d %d %d", p + i, c + i, f + i);
        int yes = 0, mask = (1 << n) - 1;
        for(int sub = mask; yes == 0 && sub > 0; sub = (sub - 1) & mask)
            if( gao(sub) )
                yes = 1;
        printf("Case #%d: %s\n", ++idx, yes ? "yes" : "no");
    }
    return 0;
}
