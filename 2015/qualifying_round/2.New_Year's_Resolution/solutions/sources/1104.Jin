#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool _newyear(vector<int> &resolution, vector<vector<int> > &food, int f, vector<int> cur) {
	if (resolution[0] == cur[0] && resolution[1] == cur[1] && resolution[2] == cur[2]) return true;
	
	if (f == food.size()) return false;

	for (int i = 0; i < cur.size(); i++) {
		if (resolution[i] < cur[i]) return false;
	}	

	vector<int> eat = cur;
	eat[0] += food[f][0];
	eat[1] += food[f][1];
	eat[2] += food[f][2];
	if (_newyear(resolution, food, f + 1, eat)) return true;

	return _newyear(resolution, food, f + 1, cur);
}

bool newyear(vector<int> &resolution, vector<vector<int> > &food) {
	vector<int> v(3, 0);
	return _newyear(resolution, food, 0, v);
}

int main() {
	int t = 0;
	cin >> t;
	//cout << "test: " << t << endl; 

	for (int i = 0; i < t; i++) {
		vector<int> resolution(3, 0);
		cin >> resolution[0] >> resolution[1] >> resolution[2];	
		int n = 0;
		cin >> n;
		//cout << " foods: " << n << endl;
		vector<vector<int> > foods;
		for (int j = 0; j < n; j++) {
			vector<int> food(3, 0);
			cin >> food[0] >> food[1] >> food[2];
			foods.push_back(food);
		}
		//cout << "mark\n";
		bool res = newyear(resolution, foods);
		cout << "Case #" << i + 1 << ": " << (res ? "yes" : "no") << endl;
	}
}