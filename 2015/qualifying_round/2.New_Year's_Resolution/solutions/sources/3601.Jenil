import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.StringTokenizer;


public class Hacker2 {

	 public static void main(String[] args){
		 int gp=100,gc=100,gf=100;
		 File fileInput = new File("J:/Saurin Homework/CodingInterview/src/input.txt");
		 File fileOutput = new File("J:/Saurin Homework/CodingInterview/src/output.txt");
			
			int cases=0;
			String no =null;
			try {
				PrintWriter writer = new PrintWriter(fileOutput);
		        Scanner sc = new Scanner(fileInput);
		        if(sc.hasNextInt())
		        	cases = sc.nextInt();
		        no = sc.nextLine();
		        for(int i=1;i<=cases;i++){
		        	if (sc.hasNextLine()) {
		              no = sc.nextLine();
		              StringTokenizer st = new StringTokenizer(no);
		      		if(st.hasMoreTokens()) {
		      			gp=Integer.parseInt((st.nextToken()));
		      		}
		      		if(st.hasMoreTokens()) {
		      			gc=Integer.parseInt((st.nextToken()));
		      		}
		      		if(st.hasMoreTokens()) {
		      			gf=Integer.parseInt((st.nextToken()));
		      		}
		      		if (sc.hasNextLine()) {
		      			int foodNos = Integer.parseInt(sc.nextLine());
		      			int food[][] =new int[foodNos][3];
		      			for(int j=1;j<=foodNos;j++){
		      				if (sc.hasNextLine()) {
		  		              no = sc.nextLine();
		  		              st = new StringTokenizer(no);
		  		      		if(st.hasMoreTokens()) {
		  		      		food[j-1][0]=Integer.parseInt((st.nextToken()));
		  		      		}
		  		      		if(st.hasMoreTokens()) {
		  		      		food[j-1][1]=Integer.parseInt((st.nextToken()));
		  		      		}
		  		      		if(st.hasMoreTokens()) {
		  		      		food[j-1][2]=Integer.parseInt((st.nextToken()));
		  		      		}
		      			}
		      			}
		      			writer.println("case #"+i+": "+(isPossible(gp,gc,gf,food,0)?"yes":"no"));
		      		}
		         }
		        }
		        sc.close();
		        writer.close();
		    } 
		    catch (FileNotFoundException e) {
		        e.printStackTrace();
		    }
	 }
	 
	 public static boolean isPossible(int gp,int gc,int gf,int[][] food,int index){
		 if(index==food.length){
			 if(gp==0 && gc==0 && gf==0)
				 return true;
			 else
				 return false;
		 }
		 if(gp<0 || gc<0 || gf<0)
			 return false;
		 return isPossible(gp,gc,gf,food,index+1) || isPossible(gp-food[index][0],gc-food[index][1],gf-food[index][2],food,index+1);
		 
	 }
}
