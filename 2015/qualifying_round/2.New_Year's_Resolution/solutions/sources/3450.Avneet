#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define gc getchar
#define repa(i,a,n) for(int i=a;i<n;i++)
#define rep(i,n) for(int i=0;i<n;i++)
#define fast() {cin.sync_with_stdio(false);cin.tie(false);cout.tie(false);}
//..........@@   take fast input with sign  @@...........//
int read() {
  char c = gc();
  int sign = 1;
  while((c<'0' || c>'9') && c!='-') c = gc();
  if(c=='-') {
    sign = -1;
    c = gc();
  }
  int ret = 0;
  while(c>='0' && c<='9' ) {
    ret = 10 * ret + c - 48;
    c = gc();
  }
  return ret*sign;
}
//........@@ To merge ranges  @@ .................//
struct node{
	int s;
	int e;
};
inline bool comp(node a, node b)
{
	if(a.s==b.s)
	return a.e<b.e;
}
int main()
{
	int t;
	fast();
	cin>>t;
	int cases=0;
	while(t--)
	{
		cases++;
		ll gp,gc,gf;
		cin>>gp>>gc>>gf;
		ll n;
		cin>>n;
		ll arr[n][3];
		for(int i=0;i<n;i++)
		{
			cin>>arr[i][0]>>arr[i][1]>>arr[i][2];
		}
		bool flag=false;
		for(int i=0;i<(1LL<<n);i++)
		{	
		    ll t_gp=0,t_gc=0,t_gf=0;
			for(int j=0;j<n;j++)
			{
				if(i&(1LL<<j))
				{
					t_gp += arr[j][0];t_gc+=arr[j][1];t_gf+=arr[j][2];
				}
			}
			if(t_gp==gp && t_gc==gc && t_gf==gf)
			 flag=true;
		}
		if(flag)
		cout<<"Case #"<<cases<<": "<<"yes"<<endl;
		else
		cout<<"Case #"<<cases<<": "<<"no"<<endl;
		
	}
} 
