package com.anuj;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

public class Alex {
	
	 class FoodHeCanEat{
		private int p;
		private int c;
		private int f;
		public int getP() {
			return p;
		}
		public void setP(int p) {
			this.p = p;
		}
		public int getC() {
			return c;
		}
		public void setC(int c) {
			this.c = c;
		}
		public int getF() {
			return f;
		}
		public void setF(int f) {
			this.f = f;
		}

	}
	
	 class Food{
		private int p;
		private int c;
		private int f;
		public int getP() {
			return p;
		}
		public void setP(int p) {
			this.p = p;
		}
		public int getC() {
			return c;
		}
		public void setC(int c) {
			this.c = c;
		}
		public int getF() {
			return f;
		}
		public void setF(int f) {
			this.f = f;
		}
	 }
	
	 public static List<List<Alex.Food>> powerSet(List<Alex.Food> foods){
		 
		 List<List<Alex.Food>> ps = new ArrayList<List<Food>>();
		 List<Alex.Food> subset = new ArrayList<Food>();
		 ps.add(subset);
		 
		 for(Alex.Food food : foods ){
			 
			 List<List<Alex.Food>> new_ps = new ArrayList<List<Food>>();
			 
			 for(List<Alex.Food> f  : ps){
				 new_ps.add(f);
				 List<Alex.Food> new_subset = new ArrayList<Food>(f);
				 new_subset.add(food);
				 new_ps.add(new_subset);
			 }
			 ps = new_ps;

		 }
		 return ps;
	 }
		
	 public static boolean process(Alex.FoodHeCanEat foodHeCanEat, List<Alex.Food> foods ){
		 
		 // permnutation of all food
		 List<List<Alex.Food>> combinations = powerSet(foods);
		 
		 for(List<Alex.Food> foo : combinations){
			 int p = foodHeCanEat.p;
			 int c =   foodHeCanEat.c;
			 int f = foodHeCanEat.f;
			 for(Food food  : foo){
				 p-=food.p;
				 c-=food.c;
				 f-=food.f;
				 
				 if(p==0 && c==0 && f==0){
					 return true;
				 }
			 }	 
		 }
		 return false;
		 
	 }
	public static void main(String[] args) {
		String fileName = "res/new_year.txt";
		try {

			// Create object of FileReader
			FileReader inputFile = new FileReader(fileName);

			// Instantiate the BufferedReader Class
			BufferedReader bufferReader = new BufferedReader(inputFile);

			// Variable to hold the one line data
			String line;

			// Read file line by line and print on the console
			boolean f_totalUseCases = false;
			boolean f_foodHeCanEat = false;
			boolean f_totalFood = false;
			
			int i=1;
			int totalUseCase = 0;
			PrintWriter writer = new PrintWriter("res/oute.txt", "UTF-8");
			Alex al = new Alex();
			int totalFood = 0;
			Alex.FoodHeCanEat ale =  null;
			List<Alex.Food> al_food = new ArrayList<Alex.Food>();
	         

			while ((line = bufferReader.readLine()) != null) {
				/*
				 * Case #1: 13524 51324
				 */
				if (f_totalUseCases == false) {
					f_totalUseCases = true;
					totalUseCase = Integer.parseInt(line);
				} else if (f_foodHeCanEat == false) {
					f_foodHeCanEat = true;
					ale =  al.new FoodHeCanEat();
					String[] aa =  line.split(" ");
					ale.p = Integer.parseInt(aa[0]);
					ale.c = Integer.parseInt(aa[1]);
					ale	.f = Integer.parseInt(aa[2]);
				} else if (f_totalFood == false) {
					f_totalFood = true;
					totalFood = Integer.parseInt(line);
				}
				else{
					// process food until i 
					Alex.Food food = al.new Food();
					String[] aa =  line.split(" ");
					food.p = Integer.parseInt(aa[0]);
					food.c = Integer.parseInt(aa[1]);
					food.f = Integer.parseInt(aa[2]);
					al_food.add(food);
					totalFood--;
					if(totalFood==0){
						f_foodHeCanEat = false;
						f_totalFood = false;						
			            writer.println("Case #"+i+": "+ (process(ale,al_food)?"yes":"no"));
						al_food = new ArrayList<Alex.Food>();
						i++;
					}

				}
			}

			writer.close();
			// Close the buffer reader
			bufferReader.close();
		} catch (Exception e) {
			System.out.println("Error while reading file line by line:"
					+ e.getMessage());
		}
	}
}
