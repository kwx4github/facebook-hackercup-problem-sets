//============================================================================
// Name        : QualifiedRound.cpp
// Author      : hams
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <queue>
#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <stdlib.h>
using namespace std;

int G[3] = {0};
int Source[20][3] = {0};
vector<int>* History=NULL;
int eat(int max,int index,int P,int C,int F,vector<int> history){
	if(index >= max)
		return 0;
	if(P+Source[index][0] == G[0]){
		if(C+Source[index][1] == G[1]){
			if(F+Source[index][2] == G[2]){
				history.push_back(index);
				History = new vector<int>(history);
				return 1;
			}
		}
	}
	else if(P+Source[index][0] > G[0]){
		return eat(max,index+1,P,C,F,history);
	}
	vector<int> his2(history);
	history.push_back(index);
	return eat(max,index+1,P+Source[index][0],C+Source[index][1],F+Source[index][2],history) +
		eat(max,index+1,P,C,F,his2);
}

int main(){
    
    int T;
    cin>>T;
	int N;
	int Eat[3] = {0};
	for(int ni=0; ni < T;ni++){
		History=NULL;
		cin>>G[0];
		cin>>G[1];
		cin>>G[2];
		cin>>N;
		for(int nj=0; nj < N; nj++){
			cin>>Source[nj][0];
			cin>>Source[nj][1];
			cin>>Source[nj][2];
		}
		vector<int> vecHistory;
		if(eat(N,0,0,0,0,vecHistory) != 0){
			cout<<"Case #"<<ni+1<<": "<<"yes"<<"\n";
		}
		else
			cout<<"Case #"<<ni+1<<": "<<"no"<<"\n";
/*
		if(History != NULL){
			for(int nj=0;nj<History->size();nj++){
				cout<<History->at(nj)<<" ";
			}
			cout<<"\n";
		}
*/
	}
	return 0;
}
