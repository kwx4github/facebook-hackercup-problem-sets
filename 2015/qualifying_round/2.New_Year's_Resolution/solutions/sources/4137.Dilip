#include<stdio.h>
#include<conio.h>
#include<iostream>
#include<stdlib.h>
using namespace std;
struct node
{
int a,b,c;
};

int a[3];
bool backtrack(struct node* b,int pos,int n,int one,int two,int three)
{
	if(pos==n)
	{
		if(one==a[0]&&two==a[1]&&three==a[2])
		return true;
		else
		return false;
	}
	else
	{
		if(one==a[0]&&two==a[1]&&three==a[2])
		return true;

		if(one>a[0]||two>a[1]>three>a[2])
		return false;
		
		if(backtrack(b,pos+1,n,one+b[pos].a,two+b[pos].b,three+b[pos].c))
		return true;
		else if(backtrack(b,pos+1,n,one,two,three))
		return true;
		else
		return false;
	}
}
		


int main()
{
	FILE *fp=fopen("input.txt","r");
	FILE *fo=fopen("output.txt","w");
	long long int n;
	char temp[20];
	fscanf(fp,"%s",temp);
	int q;
	q=atoi(temp);
	int t=1;
	while(t<=q)
	{
		fscanf(fp,"%s",temp);
		a[0]=atoi(temp);
		fscanf(fp,"%s",temp);
		a[1]=atoi(temp);
		fscanf(fp,"%s",temp);
		a[2]=atoi(temp);
		fscanf(fp,"%s",temp);
		n=atoi(temp);
		
		struct node b[n];
		
		for(int i=0;i<n;i++)
		{
			fscanf(fp,"%s",temp);
			b[i].a=atoi(temp);
			fscanf(fp,"%s",temp);
			b[i].b=atoi(temp);
			fscanf(fp,"%s",temp);
			b[i].c=atoi(temp);
		}
		
		string result;
		bool possible=false;
		if(backtrack(b,0,n,0,0,0))
		result="yes";
		else
		result="no";
		char dummy1[10];
		itoa(t,dummy1,10); 
		string sample1(dummy1);
		string answer="Case #"+sample1+": "+result+"\n";
		fprintf(fo,"%s",answer.c_str());
		t++;
	}
}

