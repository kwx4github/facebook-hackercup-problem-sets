//
//  main.cpp
//  new_years_resolution
//
//  Created by dohyun.lee on 2015. 1. 11..
//  Copyright (c) 2015ë…„ dohyun.lee. All rights reserved.
//

#include <iostream>
#include <vector>
#include <cstdio>
#include <algorithm>

using namespace std;

bool checkFoods(vector<vector<int>> &nut, vector<int> &aims,
                vector<vector<int>> &picked, int &sz, int target, int next) {
    if (target == 0) {
        int carboSum = 0;
        for (auto v : picked) carboSum += v[1];
        int fatSum = 0;
        for (auto v : picked) fatSum += v[2];
        if (aims[1] == carboSum and aims[2] == fatSum) return true;
        else return false;
    }
    
    if (target < 0) return false;
    
    bool res;
    for (int i = next; i < sz; ++i) {
        picked.push_back(nut[i]);
        res = checkFoods(nut, aims, picked, sz, target - nut[i][0], i + 1);
        if (res) return true;
        picked.pop_back();
    }
    
    return false;
}

int main(int argc, const char * argv[]) {
    
    FILE *ifp = fopen(argv[1], "r");
    //FILE *ofp = fopen("output.txt", "w");
    
    int numCase;
    fscanf(ifp, "%d", &numCase);
    
    for (int ii = 0; ii < numCase; ++ii) {

        vector<int> aims(3);
        vector<vector<int>> nutrient;
    
        int numFood;
        fscanf(ifp, "%d %d %d", &aims[0], &aims[1], &aims[2]);
    
        fscanf(ifp, "%d", &numFood);
        for (int ii = 0; ii < numFood; ++ii) {
            vector<int> tmp(3);
            fscanf(ifp, "%d %d %d", &tmp[0], &tmp[1], &tmp[2]);
            nutrient.push_back(tmp);
        }
        
        bool res;
        if (numFood == 1) {
            res = (aims[0] == nutrient[0][0] && aims[1] == nutrient[0][1] && aims[2] == nutrient[0][2]);
            const char *r = res ? "yes" : "no";
            //fprintf(ofp, "Case #%d: %s\n", ii + 1, r);
            cout << "Case #" << ii + 1 << ": " << r << endl;
            continue;
        }
        
        vector<vector<int>> picked;
        res = checkFoods(nutrient, aims, picked, numFood, aims[0], 0);
        const char *r = res ? "yes" : "no";
        //fprintf(ofp, "Case #%d: %s\n", ii + 1, r);
        cout << "Case #" << ii + 1 << ": " << r << endl;
        
    }
    
    fclose(ifp);
    //fclose(ofp);
    
    return 0;
}
