#Polynomial time approximate algorithm
def sum_problem(nums, sum):
    P = 32
    c = 2**-P
    S = [0]
    N = len(nums)

    for i in range(N):
        T = [nums[i] + y for y in S]
        U = T + S
        U.sort()
        S = []
        y = min(U)
        S.append(y)
        for z in U:
            if y + c * sum / N < z and z <= sum:
                y = z
                S.append(z)
    return any(s for s in S if (1 - c) * sum <= s and s <= sum)

f = open('C:\\temp\\new_years_resolution_example_input.txt')
out = open('C:\\temp\\new_years_resolution_output.txt', 'w')
T = int(f.readline().strip())

for t in range(1, T + 1):    
    sums = [int(i) for i in f.readline().strip().split(' ')]
    sum = sums[0] * 10**8 + sums[1] * 10**4 + sums[2]
    N = int(f.readline().strip())
    nums = []
    for n in range(N):
        num = [int(i) for i in f.readline().strip().split(' ')]
        nums.append(num[0] * 10**8 + num[1] * 10**4 + num[2])

    result = "Case #{0}: {1}".format(t, "yes" if sum_problem(nums, sum) else "no")
    print result

    out.write(result + "\n")    
out.close()







