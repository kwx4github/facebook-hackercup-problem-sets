#include <ext/numeric>
#include <bits/stdc++.h>
using namespace std;
using namespace __gnu_cxx;

#define SZ(x) ((int)x.size())

struct tuple {
	int a, b, c;
	tuple(int a, int b, int c) :
		a(a), b(b), c(c) {
	}
};

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL), cout.tie(NULL);

	freopen("in.txt", "rt", stdin);
	freopen("out.txt", "wt", stdout);

	int t; cin >> t;
	for (int id = 1; id <= t; ++id) {
		bool ans = false;
		int ga, gb, gc, n;
		cin >> ga >> gb >> gc >> n;
		vector <tuple> vec;
		for (int i = 0; i < n; ++i) {
			int a, b, c; cin >> a >> b >> c;
			vec.push_back(tuple(a, b, c));
		}
		for (int i = 0; i < (1 << n); ++i) {
			int a = 0, b = 0, c = 0;
			for (int j = 0; j < n; ++j) {
				if ((i >> j) & 1) {
					a += vec[j].a;
					b += vec[j].b;
					c += vec[j].c;
				}
			}
			ans |= (a == ga && b == gb && c == gc);
		}
		cout << "Case #" << id << ": ";
		cout << (ans == true ? "yes\n" : "no\n");
	}

	return 0;
}
