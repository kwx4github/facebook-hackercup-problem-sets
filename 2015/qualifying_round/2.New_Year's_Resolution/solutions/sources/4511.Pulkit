#include<stdio.h>
#include<iostream>
using namespace std;
bool isSubsetSum(int set0[],int set1[],int set2[], int n, int sum,int sum1,int sum2)
{
   // Base Cases
   if (sum == 0 &&sum1==0 && sum2==0)
     return true;
   if (n == 0 && (sum != 0 ||sum1!=0 || sum2!=0))
     return false;

   // If last element is greater than sum, then ignore it
   if (set0[n-1] > sum ||set1[n-1]>sum1 ||set2[n-1]>sum2)
     return isSubsetSum(set0,set1,set2, n-1, sum,sum1,sum2);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(set0,set1,set2 ,n-1, sum,sum1,sum2) || isSubsetSum(set0,set1,set2, n-1, sum-set0[n-1],sum1-set1[n-1],sum2-set2[n-1]);
}

// Driver program to test above function
int main()
{
    int t;
    cin>>t;
    cout<<"t:"<<t<<endl;
    string s[1001];
    for(int l=1;l<=t;l++)
    {

  int set1[10001],set2[10001],set3[10001];
  int sum ,sum1,sum2;
  cin>>sum>>sum1>>sum2;
  int n;
        cin>>n;
for(int i=0;i<n;i++)
{
    cin>>set1[i]>>set2[i]>>set3[i];
}
  if (isSubsetSum(set1,set2,set3, n, sum,sum1,sum2) == true)
     {
         s[l]="yes";
     }

  else
     {

         s[l]="no";
     }

    }
    for(int i=1;i<=t;i++)
     {

         cout<<"Case #"<<i<<": "<<s[i]<<endl;
     }
  return 0;
}
