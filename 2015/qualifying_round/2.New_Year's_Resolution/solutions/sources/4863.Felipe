#include <cstdio>
#include <vector>
#include <algorithm>
#include <utility>

using namespace std;

long long a, b, c;
vector<pair<long long, pair<long long, long long> > > vet;
bool valid;

void recursiva(long long atual, long long somaA, long long somaB, long long somaC){
	if(somaA > a || somaB > b || somaC > c)
		return;
	if(somaA == a && somaB == b && somaC == c){
		valid = true;
		return;
	}

	for(long long i = atual; i < vet.size(); i++){
		recursiva(i + 1, somaA + vet[i].first, somaB + vet[i].second.first, somaC + vet[i].second.second);
	}
}

int main(){
	long long t, x, y, z, cases = 0;

	scanf("%lld", &t);

	while(t--){
		cases++;
		vet.clear();
		valid = false;
		long long n;

		scanf("%lld %lld %lld", &a, &b, &c);

		scanf("%lld", &n);

		for(long long i = 0; i < n; i++){
			scanf("%lld %lld %lld", &x, &y, &z);
			vet.push_back(make_pair(x, make_pair(y, z)));
		}

		recursiva(0, 0, 0, 0);

		printf("Case #%lld: %s\n", cases, valid ? "yes" : "no");
	}

	return 0;
}
