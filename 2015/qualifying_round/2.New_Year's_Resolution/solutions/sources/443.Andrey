import Control.Applicative
import Control.Monad
import Data.List

main = do
    nt <- read <$> getLine
    forM_ [1..nt] $ \id -> do
        abc  <- map read <$> words <$> getLine
        n    <- read <$> getLine
        abcs <- replicateM n $ map read <$> words <$> getLine
        let res = abc `elem` (map combine $ subsequences abcs)
            combine = foldr (zipWith (+)) [0, 0, 0] 
        putStrLn $ "Case #" ++ show id ++ ": " ++ if res then "yes" else "no"
