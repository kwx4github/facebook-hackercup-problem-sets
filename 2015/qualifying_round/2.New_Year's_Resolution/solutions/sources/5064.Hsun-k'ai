#include <iostream>
#include <cstring>

using namespace std;

#define MAXN 20

int m[3], a[MAXN][3], n, now[3];

int solve(int p) {
    if (p >= n) {
        return now[0] == m[0] && now[1] == m[1] && now[2] == m[2];
    }
    if (solve(p + 1)) return 1;
    if (now[0] + a[p][0] <= m[0] && now[1] + a[p][1] <= m[1] && now[2] + a[p][2] <= m[2]) {
        for (int j = 0; j < 3; j++)
            now[j] += a[p][j];
        if (solve(p + 1)) return 1;
        for (int j = 0; j < 3; j++)
            now[j] -= a[p][j];
    }
    return 0;
}

int main() {
    int testCaseNum;
    cin >> testCaseNum;
    for (int tc = 1; tc <= testCaseNum; tc++) {
        cin >> m[0] >> m[1] >> m[2];
        cin >> n;
        for (int i = 0; i < n; i++)
            cin >> a[i][0] >> a[i][1] >> a[i][2];
        now[0] = now[1] = now[2] = 0;
        if (solve(0)) 
            cout << "Case #" << tc << ": yes" << endl;
        else
            cout << "Case #" << tc << ": no" << endl;
    }
    return 0;
}
