#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

struct Food {
    int p, c, f;
    Food(int P = 0, int C = 0, int F = 0): p(P), c(C), f(F) {}

    Food operator+(Food a) { return Food(p + a.p, c + a.c, f + a.f); }
    bool operator==(Food a) { return p == a.p && c == a.c && f == a.f; }
};

int main() {
    ifstream fin("input");
    ofstream fout("output");
    int T;
    fin >> T;
    for (int t = 1; t <= T; t++) {
        fout << "Case #" << t << ": ";

        int p, c, f;
        fin >> p >> c >> f;
        Food adv(p, c, f);

        int n;
        fin >> n;

        vector<Food> food;
        for (int i = 0; i < n; i++) {
            p, c, f;
            fin >> p >> c >> f;
            food.push_back(Food(p, c, f));
        }
        
        bool flag = false;
        for (int i = 0; i < (1 << n); i++) {
            Food cur;
            for (int j = 0; j < n; j++) {
                if ((i >> j) % 2 == 1) {
                    cur = cur + food[j];
                }
            }
            if (cur == adv) {
                fout << "yes" << endl;
                flag = true;
                break;
            }
        }
        if(!flag) {
            fout << "no" << endl;
        }
    }
}
