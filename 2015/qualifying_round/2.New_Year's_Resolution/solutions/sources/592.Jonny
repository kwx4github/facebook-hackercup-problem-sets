#include<fstream>
#include<vector>
#include<algorithm>

using namespace std;

int main(){
	ifstream fin("nyr.in");
	ofstream fout("nyr.out");
	int t; fin >> t;
	for (int i = 1; i <= t; i++){
		vector<int> should(3);
		for (int k = 0; k < 3; k++)
			fin >> should[k];
		int n; fin >> n;
		int maxnum = 1;
		vector<vector<int> > foods(n, vector<int>(3));
		for (int k = 0; k < n; k++){
			maxnum *= 2;
			for (int j = 0; j < 3; j++)
				fin >> foods[k][j];
		}
		bool ispossible = false;
		for (int j = 1; j < maxnum && !ispossible; j++){
			int current = j;
			vector<int> eaten(3, 0);
			for (int k = 0; k < n && current > 0; k++){
				eaten[0] += foods[k][0] * (current % 2);
				eaten[1] += foods[k][1] * (current % 2);
				eaten[2] += foods[k][2] * (current % 2);
				current /= 2;
			}
			ispossible = (eaten[0] == should[0] && eaten[1] == should[1] && eaten[2] == should[2]);
		}
		fout << "Case #" << i << ": " << (ispossible ? "yes" : "no") << endl;
	}
	return 0;
}