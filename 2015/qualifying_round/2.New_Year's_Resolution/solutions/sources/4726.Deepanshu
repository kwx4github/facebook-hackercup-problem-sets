#include <iostream>
#include <string>
#include <string.h>
#include <stack>
#include <cstdlib>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <iomanip>
#include <sstream>
#include <memory.h>
#include <stdio.h>
#include <ctime>
#include <cmath>
#include <cassert>
#include <queue>

using namespace std;

#define LL long long
#define U unsigned
#define pnt pair<int,int>
#define FOR(i,a,b) for (int i=(a); i<(b); ++i)
#define MEMS(a,b) memset((a),(b),sizeof(a))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define ABS(a) (((a)>=(0))?(a):(-(a)))
#define mp make_pair
#define pb push_back
#define ALL(a) a.begin(),a.end()
#define FI(i,b) FOR(i,0,b)
#define V(t) vector < t >
#define sz size()
#define MaxN 1000001
#define DEBUG 1

int T, N, K, n, P, C, F, food[21][3];

int main() {
    scanf("%d", &T);
    for (int t=1 ; t<=T ; t++) {
        scanf("%d %d %d", &P, &C, &F);
        scanf("%d", &K);
        
        for (int i=0 ; i<K ; i++) {
            scanf("%d %d %d", &food[i][0], &food[i][1], &food[i][2]);
        }
        
        bool found = false;
        for (int i=1 ; i<(1<<K) ; i++) {
            int a, b, c;
            a = b = c = 0;
            for (int j=0 ; j<K ; j++) {
                if ((i>>j)&1) {
                    a += food[j][0];
                    b += food[j][1];
                    c += food[j][2];
                }
            }
            
            if (a==P && b==C && c==F) {
                found = true;
                break;
            } 
        }
        
        if (found) 
            printf("Case #%d: yes\n", t);
        else
            printf("Case #%d: no\n", t);
	}
    
	return 0;
}