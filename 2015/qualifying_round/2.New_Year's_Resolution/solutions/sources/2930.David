#include<stdio.h>

struct food
{
	int p,f,c;

};

int main(){
	struct food m[20],temp;
	int p,f,c,n,q,w,s[20], size,t,tempF,tempC;
	int queue[20], qSize,sum,num,asdf;
	int cont=1,result=0;

	scanf("%d", &num);
	for (asdf=0;asdf<num;asdf++){
		scanf("%d %d %d", &p, &f, &c);
		scanf("%d", &n);
		for (q=0;q<n;q++){
			scanf("%d %d %d", &m[q].p, &m[q].f, &m[q].c);
		}

		//sort foods
		for (q=0;q<n;q++){
			for (w=0;w<n;w++){
				if (m[q].p<m[w].p){
					temp=m[q];
					m[q]=m[w];
					m[w]=temp;
				}
			}
		}
	
		size=0;
		qSize=0;
		sum=0;

		sum+=m[0].p;
		s[size++]=0;
		queue[qSize++]=m[0].p;
		cont=1;
		result=0;

	
		while(s[0]<n && cont){
			if (sum<p){
				t=s[size-1];
				t++;
				if(t<n){
					s[size++]=t;
					sum+=m[t].p;
					queue[qSize++]=m[t].p;
				}
				else {
					if (qSize>1){
					goto L2;
					}
					else {
						cont=0;
					}
				}
			}
			else if (sum>p){
				L1:
				if (size<=1){
					cont=0;
				}
				else {				
					L2:
					sum-=queue[--qSize];
					sum-=queue[--qSize];
					size-=2;
					t=s[size];
					t++;
					if (t<n){
						s[size++]=t;
						sum+=m[t].p;
						queue[qSize++]=m[t].p;
					}
					else {
						cont=0;
					}
				}
			}
			else {
				tempC=0;
				tempF=0;
				for (q=0;q<qSize;q++){
					tempC+=m[s[q]].c;
					tempF+=m[s[q]].f;
				}
				if (tempC==c && tempF==f){
					cont=0;
					result=1;
				}
				else{
					t=s[size-1];
					t++;
					if (t<n){
						sum-=queue[--qSize];
						size--;
						s[size++]=t;
						sum+=m[t].p;
						queue[qSize++]=m[t].p;
					}
					else {
						goto L1;
					}

				}
			}
		}

		if (result){
			printf("Case #%d: yes\n",asdf+1);
		}
		else {
			printf("Case #%d: no\n",asdf+1);
		}
	}
	return 0;
}