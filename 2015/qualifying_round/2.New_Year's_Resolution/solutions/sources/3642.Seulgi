import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

class Food {
    public int protein, carb, fat;

    public Food(int protein, int carb, int fat) {
        this.protein = protein;
        this.carb = carb;
        this.fat = fat;
    }
}

public class NewYear {

    // 20 menu at most. 2*20 = 1,048,576. We can simulate them all.

    private static boolean canConsumExact(int targetProtein,
                                          int targetCarb,
                                          int targetFat,
                                          List<Food> foods) {
        int N = foods.size();
        boolean found = false;
        for(int combo = 0; !found && combo < (1<<N); combo++) {
            int curProtein = 0, curCarb = 0, curFat = 0;
            for(int i=0; i < N; i++) {
                if((combo & (1<<i)) != 0) {
                    Food curFood = foods.get(i);
                    curProtein += curFood.protein;
                    curCarb += curFood.carb;
                    curFat += curFood.fat;
                }
            }
            found |= curProtein == targetProtein &&
                curCarb == targetCarb &&
                curFat == targetFat;

        }
        return found;
    }

    public static void main(String[] args) throws Exception {
        int T, N, P, C, F;
        List<String> file = Files.readAllLines(Paths.get("input.txt"), StandardCharsets.UTF_8);
        PrintWriter writer = new PrintWriter("output.txt");

        T = Integer.parseInt(file.get(0));
        int lineNum = 1;
        for(int cid = 1; cid <= T; cid++) {
            String[] targets = file.get(lineNum++).split(" ");
            P = Integer.parseInt(targets[0]);
            C = Integer.parseInt(targets[1]);
            F = Integer.parseInt(targets[2]);
            N = Integer.parseInt(file.get(lineNum++));
            List<Food> foods = new ArrayList<Food>();
            for(int i=0; i < N; i++) {
                String[] cur = file.get(lineNum++).split(" ");
                foods.add(new Food(Integer.parseInt(cur[0]), Integer.parseInt(cur[1]), Integer.parseInt(cur[2])));
            }
            String res = canConsumExact(P, C, F, foods) ? "yes" : "no";
            System.out.println(String.format("Case #%d: %s", cid, res));
            writer.println(String.format("Case #%d: %s", cid, res));
        }
        writer.close();
    }
}
