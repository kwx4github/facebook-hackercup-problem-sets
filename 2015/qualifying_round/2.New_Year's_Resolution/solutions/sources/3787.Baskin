#include <iostream>
#include <vector>
using namespace std;
class food
{
	public:
		int p;
		int c;
		int f;
		food(int a,int b,int d):p(a),c(b),f(d){}
};
bool satisfy(int prot,int carb,int fat,vector<food>& foods,int index)
{
	if(index==foods.size())return false;
	if(prot-foods[index].p==0 && carb-foods[index].c==0 && fat-foods[index].f==0)
		return true;
	if(prot<0 || carb<0 || fat<0)
		return false;
	return satisfy(prot-foods[index].p,carb-foods[index].c,fat-foods[index].f,foods,index+1) || satisfy(prot,carb,fat,foods,index+1);
}
int main()
{
	int T;
	cin >> T;
	for(int i=0;i<T;i++)
	{
		cout << "Case #"<<i+1<<": ";
		int N;
		int a,b,c;
		cin >> a >> b >> c;
		vector<food> foods;
		cin >> N;
		for(int j=0;j<N;j++)
		{
			int a,b,c;
			cin >> a >> b >> c;
			foods.push_back(food(a,b,c));
		}
		int totalprot=0,totalcarb=0,totalfat=0;
		for(int j=0;j<foods.size();j++)
		{
			totalprot+=foods[j].p;
			totalcarb+=foods[j].c;
			totalfat+=foods[j].f;
		}
		//cout << totalprot << " " <<totalcarb << " " << totalfat << endl;
		if(totalprot<a || totalcarb<b || totalfat<c)
			cout <<"no"<<endl;
		else
			cout << (satisfy(a,b,c,foods,0)==true?"yes":"no") <<endl;
	}
	return 0;
}
