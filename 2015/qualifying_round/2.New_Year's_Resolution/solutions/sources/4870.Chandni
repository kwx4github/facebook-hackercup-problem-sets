/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//package HackerCup2015;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author chandni
 */
public class NewYearsResolution {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader("/home/chandni/Desktop/HackerCup/new_years_resolution.txt"));
        BufferedWriter bw = new BufferedWriter(new FileWriter("/home/chandni/Desktop/HackerCup/new_years_resolution_output.txt"));
        int T = Integer.parseInt (br.readLine());
        for (int t=1; t<=T; t++)
        {
            String split[] = br.readLine ().split(" ");
            int Gp = Integer.parseInt(split[0]);
            int Gc = Integer.parseInt(split[1]);
            int Gf = Integer.parseInt(split[2]);
            int N = Integer.parseInt (br.readLine());
            
            int set[][] = new int[N][3];
            for (int i=0; i<N; i++)
            {
                split = br.readLine().split(" ");
                set[i][0] = Integer.parseInt(split[0]);
                set[i][1] = Integer.parseInt(split[1]);
                set[i][2] = Integer.parseInt(split[2]);
            }
            
            bw.write ("Case #"+t+": "+(is3SubsetSum (set, N, Gp, Gc, Gf)?"yes":"no"));
            bw.newLine();
        }
        br.close();
        bw.close();
    }

    private static boolean is3SubsetSum(int[][] set, int n, int Gp, int Gc, int Gf) {
        if (Gp==0 && Gc==0 && Gf==0)
            return true;
        //else implied
        if (n==0)
            return false;
        
        if (set[n-1][0]>Gp || set[n-1][1]>Gc || set[n-1][2]>Gf)//ignore element
            return is3SubsetSum(set, n-1, Gp, Gc, Gf);
        
        return is3SubsetSum(set, n-1, Gp-set[n-1][0], Gc-set[n-1][1], Gf-set[n-1][2]) ||
                is3SubsetSum(set, n-1, Gp, Gc, Gf);
    }
    
}
