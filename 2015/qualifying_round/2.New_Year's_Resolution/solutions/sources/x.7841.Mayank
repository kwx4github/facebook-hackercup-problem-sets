#include<bits/stdc++.h>

using namespace std;

// Input macros
#define s(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
// Useful macros
#define ll long long
#define ull unsigned long long
#define fi first
#define se second
#define mp make_pair
#define sz(c) (int)c.size()
#define rep(i,a,b) for(int i=a;i<b;i++)
#define irep(i,a,b) for(int i=a;i>b;i--)
#define CLR(a) memset((a),0,sizeof(a))
#define INF (int)1e9
#define EPS 1e-9
#define pb push_back
#define pc(x) putchar_unlocked(x);
#define gc getchar_unlocked

inline ll gcd(ll a, ll b) {
	if (b == 0)
		return a;
	else
		return gcd(b, a % b);
}
inline ll lcm(ll a, ll b) {
	return (a * b) / gcd(a, b);
}

template<class T> inline void scan(T&x) {
	bool fu = 0;
	char c;
	for (c = getchar(); c <= 32; c = getchar())
		;
	if (c == '-')
		fu = 1, c = getchar();
	for (x = 0; c > 32; c = getchar())
		x = x * 10 + c - '0';
	if (fu)
		x = -x;
}
template<class T> inline void write(T n) {
	T N = n, rev, count = 0;
	rev = N;
	if (N == 0) {
		pc('0');pc('\n');
		return;
	}
	while ((rev % 10) == 0) {
		count++;
		rev /= 10;
	}
	rev = 0;
	while (N != 0) {
		rev = (rev << 3) + (rev << 1) + N % 10;
		N /= 10;
	}
	while (rev != 0) {
		pc(rev % 10 + '0');
		rev /= 10;
	}
	while (count--)
		pc('0');
}

typedef double lf;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> VI;
typedef pair<lf, lf> pff;
typedef complex<double> CD;
const int inf = 0x20202020;
const int mod = 1000000007;

ll powmod(ll a, ll b) {
	ll res = 1;
	a %= mod;
	for (; b; b >>= 1) {
		if (b & 1)
			res = res * a % mod;
		a = a * a % mod;
	}
	return res;
}
ll powmod(ll a, ll b, ll mod) {
	ll res = 1;
	a %= mod;
	for (; b; b >>= 1) {
		if (b & 1)
			res = res * a % mod;
		a = a * a % mod;
	}
	return res;
}
/************************** main ***********************************/
struct food {
	int p, c, f;
} tt, x;

bool isum(int sum, int n, int *b) {
	bool sub[sum + 1][n + 1];
	for (int i = 0; i <= n; i++) {
		sub[0][i] = true;
	}
	for (int i = 1; i <= sum; i++) {
		sub[i][0] = false;
	}
	for (int i = 1; i <= sum; i++) {
		for (int j = 1; j <= n; j++) {
			sub[i][j] = sub[i][j - 1];
			if (i >= b[j - 1]) {
				sub[i][j] = sub[i][j] || sub[i - b[j - 1]][j - 1];
			}
		}
	}
	return sub[sum][n];
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in", "r", stdin);
	freopen("out","w",stdout);
#endif
	int t;
	s(t);
	rep(i,0,t) {
		int n;
		printf("Case #%d: ", i + 1);
		cin >> tt.p >> tt.c >> tt.f;
		int sum = tt.p + tt.c + tt.f;
		s(n);
		int fff[n];
		rep(k,0,n) {
			cin >> x.p >> x.c >> x.f;
			fff[k] = x.p + x.c + x.f;
		}
		if (isum(sum,n,fff)) {
			puts("yes");
		}else {
			puts("no");
		}
	}
	return 0;
}
