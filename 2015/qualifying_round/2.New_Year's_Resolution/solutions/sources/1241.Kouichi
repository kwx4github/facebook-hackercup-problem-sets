#include <iostream>
#include <vector>
#include <cstdio>
#include <sstream>
#include <map>
#include <string>
#include <algorithm>
#include <queue>
#include <cmath>

using namespace std;

bool dfs(vector<int> &G, vector<vector<int>> &V, int pos, vector<int> X){
	if(X==G) return true;
	if(pos == V.size()) return false;
	
	if(dfs(G,V,pos+1, {X[0]+V[pos][0], X[1]+V[pos][1], X[2]+V[pos][2]}) == true) return true;
	return dfs(G,V,pos+1, X);
}

int main(){
	int T;
	cin >> T;
	for(int t=0; t<T; t++){
		vector<int> G(3);
		for(int i=0; i<3; i++) cin >> G[i];
		int N;
		cin >> N;
		vector<vector<int>> V(N,vector<int>(3));
		for(int i=0; i<N; i++){
			cin >> V[i][0] >> V[i][1] >> V[i][2];
		}
		bool ans = dfs(G,V,0,{0,0,0});
		
		cout << "Case #" << t+1 << ": " << (ans?"yes":"no") << endl;
	}
	return 0;
}