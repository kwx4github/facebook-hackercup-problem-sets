#include <bits/stdc++.h>
using namespace std;

int a[50];
int b[50];
int c[50];
int n;

int main()
{
	int t; cin >> t;
	int u = 1;
	while (t--) {
		int rp, rc, rf;
		cin >> rp >> rc >> rf;
		int flag = 0;
		cin >> n;
		for (int i = 0; i < n; i++) {
			cin >> a[i] >> b[i] >> c[i];
		}
		cout << "Case #" << u++ << ": ";
		int lim = (1<<n);
		for (int mask = 0; mask < lim; mask++) {
			int tp = 0, tc = 0, tf = 0;
			for (int j = 0; j < 20; j++) {
				if ((mask & (1<<j)) != 0) {
					tp += a[j];
					tc += b[j];
					tf += c[j];
				}
			}
			if (tp == rp && tc == rc && tf == rf) {
				flag = 1;
				break;
			}
		}
		if (flag == 1) {
			puts ("yes");
		} else {
			puts ("no");
		}
	}
	return 0;
}





/*
string itos(int a)
{
	stringstream ss;
	ss << a;
	string str;
	ss >> str;
	return str;
}



int stoi(string str)
{
	stringstream ss;
	ss << str;
	int a;
	ss >> a;
	return a;
}



int main()
{
	int t; cin >> t; 
	int u = 1;
	while (t--) {
		int n; cin >> n;
		cout << "Case #" << u++ << ": ";
		int mini = n;
		int maxi = n;
		string s;
		s = itos(n);
		
		int l = s.size();
		
		for (int i = 0; i < l; i++) {
			for (int j = i; j < l; j++) {
				
				if (i == 0 && s[j] == '0') {
					continue;
				}
				
				swap(s[i], s[j]);
				
				mini = min(mini, stoi(s));
				maxi = max(maxi, stoi(s));
				
				swap(s[j], s[i]);
			}
		}
		
		cout << mini << " " << maxi << endl;
	}		
	return 0;
}
*/


