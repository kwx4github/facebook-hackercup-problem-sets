import java.io.*;
import java.util.*;

public class Main {

    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter out = new PrintWriter(System.out, true);
    static StringTokenizer st;

    public static void main(String[] args) throws Exception {
        int tests = nextInt();
        for(int t = 1;t <= tests;t++) {
            int gp = nextInt(), gc = nextInt(), gf = nextInt();
            int n = nextInt();
            int[][] foods = new int[n][3];
            for(int i = 0;i < n;i++) {
                foods[i][0] = nextInt();
                foods[i][1] = nextInt();
                foods[i][2] = nextInt();
            }
            int maxMask = 1 << n;
            boolean possible = false;
            for(int i = 0;i < maxMask;i++) {
                int p = 0, c = 0, f = 0, currMask = i;
                for(int j = 0;j < n;j++) {
                    if(currMask % 2 == 1) {
                        p += foods[j][0];
                        c += foods[j][1];
                        f += foods[j][2];
                    }
                    currMask >>>= 1;
                }
                if(p == gp && c == gc && f == gf) {
                    possible = true;
                    break;
                }
            }
            out.print("Case #" + t + ": ");
            if(possible) {
                out.println("yes");
            } else {
                out.println("no");
            }
        }
    }

    public static int nextInt() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Integer.parseInt(st.nextToken());
    }

    public static long nextLong() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Long.parseLong(st.nextToken());
    }

    public static double nextDouble() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Double.parseDouble(st.nextToken());
    }

    public static String nextToken() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return st.nextToken();
    }

}