import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

class NewYearsResolution {

	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(System.out);
		
		int test_cases = 0, n, loop;
		int p_final, c_final, f_final, p_sum, c_sum, f_sum;
		int[] p_food, c_food, f_food;
		StringTokenizer temp;
		String ans;
		test_cases = Integer.parseInt(br.readLine());

		for (int i = 0; i < test_cases; i++) {
			temp = new StringTokenizer(br.readLine());

			p_final = Integer.parseInt(temp.nextToken());
			c_final = Integer.parseInt(temp.nextToken());
			f_final = Integer.parseInt(temp.nextToken());

			n = Integer.parseInt(br.readLine());

			p_food = new int[n];
			c_food = new int[n];
			f_food = new int[n];

			for (int j = 0; j < n; j++) {
				temp = new StringTokenizer(br.readLine());
				p_food[j] = Integer.parseInt(temp.nextToken());
				c_food[j] = Integer.parseInt(temp.nextToken());
				f_food[j] = Integer.parseInt(temp.nextToken());
			}

			loop = (int) Math.pow(2, n) - 1;

			String s;

			ans = "no";
			for (int j = 1; j <= loop; j++) {
				s = Integer.toBinaryString(j);

				while (s.length() != n)
					s = "0" + s;

				p_sum = c_sum = f_sum = 0;
				for (int j2 = 0; j2 < s.length(); j2++) {
					if (s.charAt(j2) == '0')
						continue;

					p_sum += p_food[j2];
					c_sum += c_food[j2];
					f_sum += f_food[j2];
				}

				if (p_final == p_sum && c_final == c_sum && f_final == f_sum) {
					ans = "yes";
					break;
				}
			}

			pw.println("Case #" + (i + 1) + ": " + ans);
		}
		pw.flush();
	}
}
