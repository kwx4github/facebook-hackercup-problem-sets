package fhc;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.ArrayList;

public class NYR {

	public static boolean recurse(ArrayList<Integer[]> l,
			ArrayList<Integer[]> a, int[] sum, int index) {
		if (sum(l, sum))
			return true;
		for (int i = index; i < a.size(); i++) {
			ArrayList<Integer[]> tmpL = (ArrayList<Integer[]>) l.clone();
			tmpL.add(a.get(i));
			if (recurse(tmpL, a, sum, i + 1))
				return true;
		}
		return false;
	}

	private static boolean sum(ArrayList<Integer[]> l, int[] sum) {
		int tmpP = 0, tmpC = 0, tmpF = 0;
		for (int i = 0; i < l.size(); i++) {
			Integer[] tmpA = l.get(i);
			tmpP += tmpA[0];
			tmpC += tmpA[1];
			tmpF += tmpA[2];
		}
		return (tmpP == sum[0] && tmpC == sum[1] && tmpF == sum[2]);
	}

	public static void main(String[] args) throws Exception {

		BufferedReader in = new BufferedReader(new FileReader(new File(
				"D:/fh/new_years_resolution_example_input.txt")));
		PrintWriter out = new PrintWriter(new File("D:/fh/nyexample.out"));

		int T = Integer.parseInt(in.readLine()), c = 1;
		while (T-- > 0) {
			String[] s = in.readLine().split(" ");
			int[] sum = new int[s.length];
			for (int i = 0; i < s.length; i++)
				sum[i] = Integer.parseInt(s[i]);
			int N = Integer.parseInt(in.readLine());
			ArrayList<Integer[]> a = new ArrayList<Integer[]>();
			for (int i = 0; i < N; i++) {
				s = in.readLine().split(" ");
				Integer[] tmpA = new Integer[s.length];
				for (int j = 0; j < s.length; j++) {
					tmpA[j] = Integer.parseInt(s[j]);
				}
				a.add(tmpA);
			}
			if (recurse(new ArrayList<Integer[]>(), a, sum, 0))
				out.println("Case #" + c + ": " + "yes");
			else
				out.println("Case #" + c + ": " + "no");
			++c;

		}
		out.flush();
		out.close();

	}

}
