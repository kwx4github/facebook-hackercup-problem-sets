#include<bits/stdc++.h>

using namespace std;
typedef long long big;

struct nutri
{
    int carbo;
    int fat;
    int prot;
};

int main()
{
    int test;
    scanf("%d",&test);
    for(int t=1;t<=test;t++)
    {
        int max_carbo,max_fat,max_prot;
        scanf("%d%d%d",&max_carbo,&max_fat,&max_prot);
        int n,cont=0;
        scanf("%d",&n);
        vector<struct nutri>dpVec;
        struct nutri temp;
        temp.carbo=0;
        temp.fat=0;
        temp.prot=0;
        dpVec.push_back(temp);
        typedef vector<struct nutri>::iterator iter;
        for(int i=0;i<n;i++)
        {
            struct nutri temp_node;
            int carbo,fat,prot;
            scanf("%d%d%d",&carbo,&fat,&prot);
            if((carbo>max_carbo)||(fat>max_fat)||(prot>max_prot))
            {
                cont++;
                continue;
            }
            else
            {
                iter loop_it=dpVec.end();
                for(iter it=dpVec.begin();it!=loop_it;++it)
                {
                    int temp_carbo,temp_fat,temp_prot;
                    temp_carbo=(*it).carbo+carbo;
                    temp_fat=(*it).fat+fat;
                    temp_prot=(*it).prot+prot;
                    if((temp_carbo>max_carbo)||(temp_fat>max_fat)||(temp_prot>max_prot))
                        continue;
                    else
                    {
                        temp_node.carbo=temp_carbo;
                        temp_node.fat=temp_fat;
                        temp_node.prot=temp_prot;
                        dpVec.push_back(temp_node);
                    }
                }
            }
        }
        int flag=0;
        for(iter it=dpVec.begin();it!=dpVec.end();++it)
        {
            if((*it).carbo==max_carbo&&(*it).fat==max_fat&&(*it).prot==max_prot)
            {
                flag=1;
                break;
            }
        }
        if(flag)
        {
            printf("Case #%d: yes\n",t);
        }
        else
        {
            printf("Case #%d: no\n",t);
        }
    }
    return 0;
}
