#include <cstdio>

int T, N, foods;
bool answer;

struct Food {
    int protein = 0;
    int carbo = 0;
    int fat = 0;

    Food operator+ (Food a) {
        Food food;
        food.protein = protein + a.protein;
        food.carbo = carbo + a.carbo;
        food.fat = fat + a.fat;
        return food;
    }

    Food operator+= (Food a) {
        protein += a.protein;
        carbo += a.carbo;
        fat += a.fat;
    }

    Food operator-= (Food a) {
        protein -= a.protein;
        carbo -= a.carbo;
        fat -= a.fat;
    }

    bool operator==(Food a) {
        return (protein == a.protein && carbo == a.carbo && fat == a.fat);
    }

    bool operator<(Food a) {
        return (protein < a.protein && carbo < a.carbo && fat < a.fat);
    }

}F[25], G, Sum, part[25];


bool balanced(int f = 0) {
    if (Sum == G) {
        return true;
    }
    bool r;
    Food s;
    for (int i=f; i<foods; ++i) {
        s = Sum + F[i];
        if (s < G || s == G) {
            Sum += F[i];
            r = balanced(i+1);
            if (r)
                return true;
            Sum -= F[i];
        }
    }
    return false;
}

void print(int test, bool r) {
    if (r)
        printf("Case #%d: %s\n", test+1, "yes");
    else
        printf("Case #%d: %s\n", test+1, "no");
}

int main () {

    freopen("data.in", "rt", stdin);
    freopen("data.out", "wt", stdout);

    scanf("%d\n", &T);
    for (int test = 0; test<T; ++test) {
        scanf("%d %d %d\n", &G.protein, &G.carbo, &G.fat);
        scanf("%d\n", &N);

        Sum = Food();
        foods = 0;
        for (int i = 0; i < N; ++i) {
            scanf("%d %d %d\n", &F[foods].protein, &F[foods].carbo, &F[foods].fat);
            /*if (F[foods] == G)
                break;
            if (F[foods] < G) {
                Sum += F[foods];
                foods++;
            }*/
            foods++;//delete this
        }

        if (F[foods] == G) {
            print(test, true);
            continue;
        }

        /*if (Sum < G) {
            print(test, false);
            continue;
        }*/

        Sum = Food();
        answer = balanced();
        print(test, answer);
    }


    return 0;
}
