#include <bits/stdc++.h>

using namespace std;
vector<int> v;
int dp[21][21], make;
bool sum( int i, int s ) {
    if( i >= v.size() ) {
        if( s == make ) return true;
        else return false;
    }
    if( dp[i][s] != -1 ) return dp[i][s];

    bool ret1 = 0, ret2 = 0;
    if(s+v[i]<=make) {
        ret1 = sum(i+1,s+v[i]);
    }
    ret2 = sum(i+1,s);

    return dp[i][s] = ret1||ret2;
}

void pr( vector<int> v ) {
    for( int i = 0; i < v.size(); i++ ) {
        cout << v[i] << ' ';
    }
    puts("");
}
int main() {
    //freopen("new_years_resolution.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    int t, n, p, c, f, pi, ci, fi;
    vector<int> vp, vc, vf;
    bool bp, bc, bf;

    cin >> t;
    for( int cn = 1; cn <= t; cn++ ) {
        bp = bc = bf = 0;
        cin >> p >> c >> f >> n;
        while(n--) {
            cin >> pi >> ci >> fi;
            if( pi == p ) {
                bp = 1;
                vp.clear();
            }
            if( pi < p && bp == 0 ) vp.push_back(pi);
            if( ci == c ) {
                bc = 1;
                vc.clear();
            }
            if( ci < c && bc == 0 ) vc.push_back(ci);
            if( fi == f ) {
                bf = 1;
                vf.clear();
            }
            if( fi < f && bf == 0 ) vf.push_back(fi);
        }
        if(bp == 0) {
            v.clear();
            v = vp;
            make = p;
            memset(dp,-1,sizeof(dp));
            bp = sum(0,0);
        }
        if(bc == 0) {
            v.clear();
            v = vc;
            make = c;
            memset(dp,-1,sizeof(dp));
            bc = sum(0,0);
        }
        if(bf == 0) {
            v.clear();
            v = vf;
            make = f;
            memset(dp,-1,sizeof(dp));
            bf = sum(0,0);
        }
        if(bp&&bc&&bf) printf("Case #%d: yes\n", cn);
        else printf("Case #%d: no\n", cn);
        vp.clear();
        vc.clear();
        vf.clear();
    }
}
/*
1
292 264 512
20
909 302 261
705 597 823
291 51 126
28 697 57
593 31 826
311 256 57
292 14 47
29 730 716
12 529 146
768 16 439
37 472 15
350 192 34
163 468 238
69 173 10
203 72 690
424 875 213
223 593 292
151 46 10
88 90 16
773 653 711
*/
