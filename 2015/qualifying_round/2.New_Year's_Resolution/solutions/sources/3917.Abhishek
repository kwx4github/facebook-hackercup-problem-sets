#include<iostream>
#include<vector>
#include<fstream>
#include<utility>
#define PRINT(X) for(int i=0;i<X.size();i++) cout<<X[i]<<" ";
#include<stdio.h>
#include<algorithm>

using namespace std;

class nutri{
public:
    int p,c,f;

    nutri()
    {
        p=c=f=0;
    }

};

vector<nutri> vec;
int gp,gc,gf,n;

bool dp(int i , int p,int c,int f)
{
    if( p==gp && c==gc && f==gf)
    return true;

    if(i>=n)
        return false;

    if( p>gp || c>gc || f>gf)
        return false;

    return dp(i+1,p,c,f) || dp(i+1,p+vec[i].p , c+vec[i].c , f+vec[i].f) ;

}


int main()
{
    ifstream fin("in.txt");
    ofstream fout("out.txt");
    int t;
    fin>>t;
    for(int i=1;i<=t;i++)
    {
        fin>>gp>>gc>>gf>>n;
        vec.resize(n);
        for(int j=0;j<n;j++)
            fin>>vec[j].p>>vec[j].c>>vec[j].f;

        fout<<"Case #"<<i<<": ";
        if(dp(0,0,0,0))
            fout<<"yes"<<endl;
        else
            fout<<"no"<<endl;

        vec.clear();

    }


    return 0;
}
