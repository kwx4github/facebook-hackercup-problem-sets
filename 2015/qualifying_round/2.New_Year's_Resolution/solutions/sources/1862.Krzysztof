
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <string>

#define FOR(i,b,e) for(int i=(b); i <= (e); ++i)
#define FORD(i,b,e) for(int i=(b); i >= (e); --i)
#define SIZE(c) (int) (c).size()
#define FOREACH(i,c) FOR(i,0,SIZE(c)-1)
#define FORDEACH(i,c) FORD(i,SIZE(c)-1,0)
#define MIN(x,y) ( ((x) < (y))? (x) : (y) )
#define MAX(x,y) ( ((x) > (y))? (x) : (y) )
#define PB push_back
#define MP make_pair
#define ST first
#define ND second
#define INF 1000000001

using namespace std;

typedef pair < int , int > PII;
typedef long long int LLI;

typedef vector < int > VI;
typedef vector < bool > VB;
typedef vector < PII > VP;
typedef vector < LLI > VL;

typedef vector < VI > VVI;
typedef vector < VL > VVL;
typedef vector < VB > VVB;

/*************************************************************************/

int main()
{
    ios_base::sync_with_stdio(0);

    int z;
    cin >> z;

    FOR(test,1,z)
    {
        int tarP, tarC, tarF;
        cin >> tarP >> tarC >> tarF;

        int n;
        cin >> n;

        VI P(n), C(n), F(n);

        FOR(i,0,n-1)
            cin >> P[i] >> C[i] >> F[i];

        int s = (1 << n) - 1;

        bool ans = 0;

        FOR(i,1,s)
        {
            int currP = 0, currC = 0, currF = 0;

            FOR(t,0,n-1) if (i & (1 << t))
            {
                currP += P[t];
                currC += C[t];
                currF += F[t];
            }

            if (currP == tarP && currC == tarC && currF == tarF)
            {
                ans = 1;
                break;
            }
        }

        cout << "Case #" << test << ": "
             << ((ans)? "yes" : "no") << '\n';
    }

    return 0;
}

/*************************************************************************/
