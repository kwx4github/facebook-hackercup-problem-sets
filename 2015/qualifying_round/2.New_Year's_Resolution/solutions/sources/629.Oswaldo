import java.io.*;
import java.util.*;

class NewYearsResolution {

    public static boolean solve(int P[],int C[],int F[],int index,
				int GP,int GC,int GF,int N) {

	if(GP==0&&GC==0&&GF==0)
	    return true;

	if(GP<0 || GC<0 || GF<0)
	    return false;

	if(index >= N )
	    return false;

	if(P[index]>GP || C[index]>GC || F[index]>GF)
	    return solve(P,C,F,index+1,GP,GC,GF,N);

	return solve(P,C,F,index+1,GP,GC,GF,N) ||
	    solve(P,C,F,index+1,GP-P[index],GC-C[index],GF-F[index],N);

    }
    
    public static void main(String[] args) throws Exception{

	BufferedReader br =new BufferedReader(new InputStreamReader(System.in));

	int numTests=Integer.parseInt(br.readLine());

	for(int i=0;i<numTests;++i) {
	    
	    String splitLine[]=br.readLine().split(" ");

	    int GP=Integer.parseInt(splitLine[0]);
	    int GC=Integer.parseInt(splitLine[1]);
	    int GF=Integer.parseInt(splitLine[2]);

	    int N=Integer.parseInt(br.readLine());
	    int P[]=new int[N];
	    int C[]=new int[N];
	    int F[]=new int[N];

	    for(int j=0;j<N;++j) {
		splitLine=br.readLine().split(" ");
		P[j]=Integer.parseInt(splitLine[0]);
		C[j]=Integer.parseInt(splitLine[1]);
		F[j]=Integer.parseInt(splitLine[2]);
	    }

	    System.out.println("Case #"+(i+1)+": "+
			       (solve(P,C,F,0,
				      GP,GC,GF,N)?"yes":"no"));

	}
    }


}
