from sys import stdin

def vsum (a, b):
    return a[0]+b[0], a[1]+b[1], a[2]+b[2]

def vsub (a, b):
    return a[0]-b[0], a[1]-b[1], a[2]-b[2]

def all_combinations(base):
    if not len(base):
        return set(((0,0,0),))
    rec = all_combinations(base[1:])
    return rec.union(set(vsum(base[0], x) for x in rec))

T = int(stdin.readline().rstrip())

for case in xrange(1, T+1):
    target = tuple(int(x) for x in stdin.readline().rstrip().split(' '))
    N = int(stdin.readline().rstrip())
    base = [tuple(int(x) for x in stdin.readline().rstrip().split(' ')) for i in xrange(N)]
    b1 = all_combinations(base[:(N/2)])
    b2 = all_combinations(base[(N/2):])
    answer = "no"
    for x in b1:
        if vsub(target, x) in b2:
            answer = "yes"
            break
    print "Case #%s: %s" % (case, answer)
