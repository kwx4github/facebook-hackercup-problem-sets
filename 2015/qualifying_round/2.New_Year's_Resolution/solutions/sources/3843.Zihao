#include <cstdio>
#include <vector>
using namespace std;

typedef struct _food{
	int p;
	int c;
	int f;
} food;

bool solve(int P, int C, int F, const vector<food> & foods, int start){
	if(start == foods.size()){
		return false;
	}
	for (int i = start; i < foods.size(); ++i){
		if(P - foods[i].p == 0 && C - foods[i].c == 0 && F - foods[i].f == 0){
			return true;
		}
	}
	for (int i = start; i < foods.size(); ++i){
		food curr = foods[i];
		if(P - curr.p > 0 && C - curr.c > 0 && F - curr.f > 0){
			if (solve(P - curr.p, C - curr.c, F - curr.f, foods, start + 1)){
				return true;
			}
		}
	}
	return false;
}

int main(int argc, char const *argv[])
{
	int T, N, P, C,F;
	scanf("%d", &T);
	for (int i = 0; i < T; ++i)
	{
		scanf("%d %d %d", &P, &C, &F);
		vector<food> foods;
		scanf("%d", &N);
		int p, c, f2;
		for (int j = 0; j < N; j++)
		{
			scanf("%d %d %d", &p, &c, &f2);
			food f = {p, c, f2};
			foods.push_back(f);
		}
		printf("Case #%d: ", i + 1);
		if(solve(P, C, F, foods, 0)){
			printf("yes\n");
		} else {
			printf("no\n");
		}
	}
	return 0;
}