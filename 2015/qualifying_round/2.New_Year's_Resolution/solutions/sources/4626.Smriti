#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef struct khana
{
	int p;
	int c;
	int f;
}kh;

bool canget(kh *arr, int idx, int n, int p,int c,int f)
{

	//cout<<idx<<" "<<p<<c<<f<<endl;
	if(p==0 && c==0 && f==0)
	{
		return 1;
	}
	if(p<0 || c<0 || f< 0)
		return 0;
	if(idx==n)
	{
		return 0;
	}
	for(int j=idx;j<n;j++)
	{
		//p-=arr[idx].p;
		//c-=arr[idx].c;
		//f-=arr[idx].f;
		if(canget(arr,j+1,n,p-arr[idx].p,c-arr[idx].c,f-arr[idx].f))
			return 1;
	}
	//return 1;
}
int main()
{
	int t,n,f,c,p;
	cin>>t;
	for(int i=0;i<t;i++)
	{
		cin>>p>>c>>f;
		cin>>n;
		kh *arr= new kh[n];
		for(int j=0;j<n;j++)
		{
			int x,y,z;
			cin>>x>>y>>z;		
			arr[j].p=x;
			arr[j].c=y;
			arr[j].f=z;
		}

		cout<<"Case #"<<i+1<<": ";
		int flag=0;
		for(int k=0;k<n;k++)
		{
			if(canget(arr,k,n,p,c,f))			
			{
				flag=1;
				break;
			}
		}
		if(flag==1)
			cout<<"yes"<<endl;
		else
			cout<<"no"<<endl;
		
	}

}
