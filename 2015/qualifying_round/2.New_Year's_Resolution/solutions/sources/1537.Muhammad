//wawando's template

#include <iostream>
#include <string>
#include <fstream>
#include <functional>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <list>
#include <set>
#include <utility>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>  //clock_t , clock() , CLOCKS_PER_SEC
#include <cstring>
#include <cctype>
#include <climits> // LLONG_MAX , LLONG_MIN , INT_MAX , INT_MIN

//MACROS
#define pb              push_back
#define mp              make_pair
#define INF             1000000000     //1 billion safer for floyd warshall, avoid overflow
		
using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<iii> viii;

int TC,caseNo=1;

int main() {
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	//ios::sync_with_stdio(false);
	scanf("%d",&TC);
	while(TC--){
		int N,Gp,Gc,Gf,P[25],C[25],F[25];
		scanf("%d %d %d",&Gp, &Gc, &Gf);
		scanf("%d",&N);
		for(int i = 0; i < N; i++)
			scanf("%d %d %d", &P[i], &C[i], &F[i]);
		
		bool can = false;
		for(int mask = 0; mask < (1 << N); mask++){
			int curP = 0;
			int curC = 0;
			int curF = 0;
			for(int bit = 0; bit < N; bit++){
				if(mask & (1 << bit)){
					curP += P[bit];
					curC += C[bit];
					curF += F[bit];
				}
			}
			if(curP == Gp && curC == Gc && curF == Gf)
				can = true;
		}

		printf("Case #%d: %s\n",caseNo++, (can ? "yes" : "no"));

	}	
    return 0;
}
