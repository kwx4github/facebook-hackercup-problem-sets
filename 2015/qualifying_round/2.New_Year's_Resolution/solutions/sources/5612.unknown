#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include<queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<unordered_map>
#include<string>
#include<string.h>
#pragma warning(disable: 4996)
using namespace std;
typedef long long ll;

int dp[105][99005];
int n;
int one[1001];
int two[1001];
int three[1001];

bool solve(int index,ll sum,ll sum2,ll sum3)
{
	if(sum==0&&sum2==0&&sum3==0)
		return true; 
	if(index>=n||sum<0||sum2<0||sum3<0)
		return false;
	if(dp[index][sum]!=-1)
		return dp[index][sum];
	return dp[index][sum]=solve(index+1,sum-one[index],sum2-two[index],sum3-three[index])||solve(index+1,sum,sum2,sum3);
}

int main()
{
	freopen("output.txt","w",stdout);
	ll t,first,second,third;
	cin>>t;
	for(int tc=1;tc<=t;tc++)
	{
		cin>>first>>second>>third;
		cin>>n;
		for(int k=0;k<n;k++)
		{
			cin>>one[k]>>two[k]>>three[k];
		}
		memset(dp,-1,sizeof dp);
		bool isone=solve(0,first,second,third);
		if(isone)
			cout<<"Case #"<<tc<<": yes"<<endl;
		else
			cout<<"Case #"<<tc<<": no"<<endl;
	}

	return 0;
}



//#include <vector>
//#include <list>
//#include <map>
//#include <set>
//#include <deque>
//#include<queue>
//#include <stack>
//#include <bitset>
//#include <algorithm>
//#include <functional>
//#include <numeric>
//#include <utility>
//#include <sstream>
//#include <iostream>
//#include <iomanip>
//#include <cstdio>
//#include <cmath>
//#include <cstdlib>
//#include <ctime>
//#include<unordered_map>
//#include<string>
//#include<string.h>
////#pragma warning(disable: 4996)
//using namespace std;
//typedef long long ll;
//
//
//int main()
//{
//	int p,k;
//	while(cin>>p>>k)
//	{
//		int arr[2005],arr2[2005];
//		int is[2005];
//		memset(is,0,sizeof(is));
//		for(int i=0;i<p;i++)
//		{
//			cin>>arr[i];
//			arr2[i]=arr[i];
//		}
//		sort(arr,arr+p);
//		sort(arr2,arr2+p);
//		int cost=0;
//		bool first=1;
//		while(arr[p-1]>0)
//		{
//			int index=0;
//			for(int i=0;i<p;i++)
//			{
//				if(arr[i]>0)
//				{
//					index=i;
//						break;
//				}
//			}
//			//if(index+k>=p)
//			//	cost+=(arr2[index]-1);
//			//else
//			if(first)
//		      cost+=(arr2[index]-1)*2;
//			else
//			  cost+=((arr2[index]-abs(arr2[index]-arr[index])))*2;
//
//			for(int i=k+index-1;i>=index;i--)
//			{
//				if(is[i])
//				arr[i]-=abs(arr2[index]-arr[index]);
//				else
//					arr[i]-=arr[index];
//			}
//			for(int i=k+index-1;i>=index;i--)
//			{
//				if(arr2[i]==arr[i])
//					is[i]=1;
//				else
//					is[i]=0;
//			}
//			first=false;
//		}
//		cout<<cost<<endl;
//	}
//	return 0;
//}



//#include <vector>
//#include <list>
//#include <map>
//#include <set>
//#include <deque>
//#include<queue>
//#include <stack>
//#include <bitset>
//#include <algorithm>
//#include <functional>
//#include <numeric>
//#include <utility>
//#include <sstream>
//#include <iostream>
//#include <iomanip>
//#include <cstdio>
//#include <cmath>
//#include <cstdlib>
//#include <ctime>
//#include<unordered_map>
//#include<string>
//#include<string.h>
//#pragma warning(disable: 4996)
//using namespace std;
//typedef long long ll;
//bool check(string s)
//{
//	bool there=false;
//	for(int i=0;i<s.size();i++)
//	{
//		if(s[i]!=' ')
//		{
//			there=true;
//			break;
//		}
//	}
//	return there;
//}
//int main()
//{
//	int size,people;
//	while(cin>>size>>people)
//	{
//		size*=-1;
//		vector<pair<int,int> >bridges;
//		vector<int> stations(size+1);
//		vector<int> time(size);
//		stations[0]=people;
//		for(int i=0;i<size;i++)
//		{
//			int cap,time;
//			cin>>cap>>time;
//			bridges.push_back(make_pair(cap,time));
//		}
//		int ans=0;
//		while(true)
//		{
//			for(int i=size-1;i>=0;i--)
//			{
//				if(stations[i]>0)
//				time[i]++;
//				if(time[i]==bridges[i].second)
//				{
//					if(stations[i]>bridges[i].first)
//					{
//					stations[i]-=bridges[i].first;
//					stations[i+1]+=bridges[i].first;
//					}
//					else
//					{
//						stations[i+1]+=stations[i];
//						stations[i]=0;
//					}
//					time[i]=0;
//				}
//			}
//			ans++;
//			if(stations[size]>=people)
//				break;
//
//		}
//		cout<<ans<<endl;
//	}
//	return 0;
//}


//#include <vector>
//#include <list>
//#include <map>
//#include <set>
//#include <deque>
//#include<queue>
//#include <stack>
//#include <bitset>
//#include <algorithm>
//#include <functional>
//#include <numeric>
//#include <utility>
//#include <sstream>
//#include <iostream>
//#include <iomanip>
//#include <cstdio>
//#include <cmath>
//#include <cstdlib>
//#include <ctime>
//#include<unordered_map>
//#include<string>
//#include<string.h>
//#pragma warning(disable: 4996)
//using namespace std;
//typedef long long ll;
//int c[100];
//int dp[100][100];
//bool vis[100]={0};
//int k;
//int solve(int m,int index,int last)
//{
//	if(m==0)
//		return 1;
//	if(index>k)
//		return 0;
//	int &ret=dp[index][last];
//	if(ret!=-1)
//		return ret;
//	ret=0;
//	for(int i=0;i<k;i++)
//	{
//		if(c[i]!=last)
//		{
//			vis[i]=1;
//			ret+=solve(m-1,index+1,c[i]);
//			vis[i]=0;
//		}
//	}
//	return ret;
//}
//int main()
//{
//	int m;
//	while(cin>>m>>k)
//	{
//		for(int i=0;i<k;i++)
//			cin>>c[i];
//		memset(dp,-1,sizeof dp);
//		cout<<solve(m,0,0)<<endl;
//	}
//	return 0;
//}


//#include <vector>
//#include <list>
//#include <map>
//#include <set>
//#include <deque>
//#include<queue>
//#include <stack>
//#include <bitset>
//#include <algorithm>
//#include <functional>
//#include <numeric>
//#include <utility>
//#include <sstream>
//#include <iostream>
//#include <iomanip>
//#include <cstdio>
//#include <cmath>
//#include <cstdlib>
//#include <ctime>
//#include<unordered_map>
//#include<string>
//#include<string.h>
//using namespace std;
//typedef long long ll;
//double h,w;
//double phone_h,phone_w;
//int c=0;
//double x;
//void binarySearch(double l,double r)
//{
//	double mid=l+(r-l)/2;
//	c++;
//	int neww=mid*w;
//	int newh=mid*h;
//	if(c>=1000)
//		return ;
//	if(neww>phone_w||newh>phone_h)
//		 binarySearch(l,mid-1);
//	else
//	{
//		x=max(x,mid);
//	     binarySearch(mid+1,r);
//	}
//}
//int main()
//{
//	map<int,pair<double,double> > phones;
//	phones[319]=make_pair(1024,768);
//	phones[419]=make_pair(1024,600);
//	phones[450]=make_pair(960,640);
//	phones[519]=make_pair(2048,1536);
//	phones[599]=make_pair(1136,640);
//	phones[600]=make_pair(1280,800);
//	phones[630]=make_pair(1080,1920);
//	phones[719]=make_pair(1136,640);
//	while(cin>>h>>w)
//	{
//		if(h==0&&w==0)
//			break;
//		c=0;
//		double final_usage=0;
//		int ans=1000000;
//		for(map<int,pair<double,double> >::iterator it=phones.begin();it!=phones.end();it++)
//		{
//			c=0;
//			x=0;
//			phone_h=it->second.first;
//			phone_w=it->second.second;
//			binarySearch(0,5005);
//			double neww=x*w;
//			double dneww=neww;
//			double newh=x*h;
//			double dnewh=newh;
//			double normal= (dnewh*dneww)/(it->second.first * it->second.second);
//			if(normal>final_usage)
//			{
//				ans=it->first;
//				final_usage=normal;
//			}
//			phone_w=it->second.first;
//			phone_h=it->second.second;
//			c=0;
//			x=0;
//			binarySearch(0,5005);
//			 neww=x*w;
//			 dneww=neww;
//			newh=x*h;
//			dnewh=newh;
//			double rev= (dnewh*dneww)/(it->second.first * it->second.second);
//			if(rev>final_usage)
//			{
//				ans=it->first;
//				final_usage=rev;
//			}
//		}
//		cout<<ans<<endl;
//	}
//	return 0;
//}

//#include <vector>
//#include <list>
//#include <map>
//#include <set>
//#include <deque>
//#include<queue>
//#include <stack>
//#include <bitset>
//#include <algorithm>
//#include <functional>
//#include <numeric>
//#include <utility>
//#include <sstream>
//#include <iostream>
//#include <iomanip>
//#include <cstdio>
//#include <cmath>
//#include <cstdlib>
//#include <ctime>
//#include<string>
//#include<string.h>
//#pragma warning(disable: 4996)
//using namespace std;
//typedef long long ll;
//
//int main()
//{
//	int tc;
//	scanf("%d",&tc);
//	double x,y,ans,tempy;
//	for(int c=1;c<=tc;c++)
//	{
//		ans=0;
//         cin>>x>>y;
//         tempy=y;
//         for(int i=0;i<y;i++)
//         {
//        	 ans+=x/tempy;
//        	 if(tempy>x)
//        		 tempy-=x;
//        	 if(tempy<x)
//        		 tempy=x;
//         }
//		 cout<<"Case "<<c<<": "<<fixed<<setprecision(6)<<ans<<endl;
//	}
//	return 0;
//}
//

//#include <vector>
//#include <list>
//#include <map>
//#include <set>
//#include <deque>
//#include<queue>
//#include <stack>
//#include <bitset>
//#include <algorithm>
//#include <functional>
//#include <numeric>
//#include <utility>
//#include <sstream>
//#include <iostream>
//#include <iomanip>
//#include <cstdio>
//#include <cmath>
//#include <cstdlib>
//#include <ctime>
//#include<unordered_map>
//#include<string>
//#include<string.h>
//#pragma warning(disable: 4996)
//using namespace std;
//typedef long long ll;
//int main()
//{
//	int n;
//	while(cin>>n)
//	{
//
//	}
//	return 0;
//}


//void checkStringDivisibilty(string n)
//{
//	int m4 = 0;
//	for (long long i = 0; i < n.size(); i++)
//		m4 = (m4 * 10 + n[i] - '0') % 4;
//}