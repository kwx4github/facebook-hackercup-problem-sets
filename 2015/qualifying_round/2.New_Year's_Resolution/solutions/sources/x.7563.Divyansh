/*Belive that you can and you are halfway there :) -Divyansh Sharma*/
#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<functional>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<time.h>
#include<fstream>
using namespace std;
// Returns true if there is a subset of set[] with sum equal to given sum
bool isSubsetSum(int set[], int n, int sum)
{
    bool subset[sum+1][n+1];

    // If sum is 0, then answer is true
    for (int i = 0; i <= n; i++)
      subset[0][i] = true;

    for (int i = 1; i <= sum; i++)
      subset[i][0] = false;

     for (int i = 1; i <= sum; i++)
     {
       for (int j = 1; j <= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i >= set[j-1])
           subset[i][j] = subset[i][j] || subset[i - set[j-1]][j-1];
       }
     }
     // uncomment this code to print table
    /* for (int i = 0; i <= sum; i++)
     {
       for (int j = 0; j <= n; j++)
          printf ("%4d", subset[i][j]);
       printf("\n");
     } */
     return subset[sum][n];
}
int main()
{
ofstream fout;
ifstream fin;
fin.open("new_years_resolution.txt");
fout.open("output2.txt");
int t,cases=1;
fin>>t;
while(cases<=t)
{
int W1,W2,W3,n,i,set1[21],set2[21],set3[21];
bool res1,res2,res3;
fin>>W1>>W2>>W3;
fin>>n;
for(i=0;i<n;i++)
 fin>>set1[i]>>set2[i]>>set3[i];
 res1=isSubsetSum(set1,n,W1);
 res2=isSubsetSum(set2,n,W2);
 res3=isSubsetSum(set3,n,W3);
 //cout<<res1<<res2<<res3<<endl;
 if(res1 && res2 && res3)
 fout<<"Case #"<<cases<<": "<<"yes"<<endl;
 else
 fout<<"Case #"<<cases<<": "<<"no"<<endl;
cases++;
}
return 0;
}
