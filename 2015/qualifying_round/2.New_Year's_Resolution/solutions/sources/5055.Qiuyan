//
//  main.cpp
//  easy_problem
//
//  Created by qylqy on 14-10-9.
//  Copyright (c) 2014å¹´ linqiuyan. All rights reserved.
//

#include <iostream>
#include <vector>
#include <list>
#include <string>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>
using namespace std;

struct A{
    int p, c, f;
}eat[25];

int main()
{
    int T, n, Gp, Gc, Gf, i, sp, sc, sf;
    scanf ("%d", &T);
    for (int I=1; I<=T; I++)
    {
        scanf ("%d%d%d%d", &Gp, &Gc, &Gf, &n);
        for (i=0; i<n; i++) scanf ("%d%d%d", &eat[i].p, &eat[i].c, &eat[i].f);
        
        bool ans = false;
        for (int bit=0; bit<(i<<n) && !ans; bit++)
        {
            sp = sc = sf = 0;
            for (i=0; i<n; i++) if ((1<<i) & bit)
            {
                sp += eat[i].p;
                sc += eat[i].c;
                sf += eat[i].f;
            }
            if (sp == Gp && sc == Gc && sf == Gf) ans = true;
        }
        if (ans)
            printf ("Case #%d: yes\n", I);
        else
            printf ("Case #%d: no\n", I);
    }
}