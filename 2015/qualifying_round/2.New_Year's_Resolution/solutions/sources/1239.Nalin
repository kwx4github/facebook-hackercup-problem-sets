#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;

int gp, gc, gf, n;

typedef vector<vector<int> > vvi;

/* struct triplet {
	int first;
	int second;
	int third;
}; */

int checker(int ind, int p, int f, int c, vvi& nutri)
{
	if(p != 0 && f != 0 && c != 0 && gp*f == p*gc && gp*c == p*gf)
		return true;

	if(ind == n)
		return false;
	if(checker(ind + 1, p, f, c, nutri)) //this gets dirty. try DP...
		return true;

	return checker(ind + 1, p + nutri[ind][0], f + nutri[ind][1], c + nutri[ind][2], nutri); //I hate DP
}

int finalans(vvi& nutri)
{
	if(checker(1, 0, 0, 0, nutri))
		return true;
	else
		return checker(1, nutri[0][0], nutri[0][1], nutri[0][2], nutri); 
}
int main(void)
{
	int t;
	scanf("%d", &t);
	for(int rep = 1;rep <= t;rep++)
	{
		scanf("%d%d%d", &gp, &gc, &gf);
		scanf("%d", &n);
		vvi nutri(n);
		int tmp1, tmp2, tmp3;
		for(int i = 0;i < n;i++)
		{
			scanf("%d%d%d", &tmp1, &tmp2, &tmp3);
			nutri[i].push_back(tmp1);
			nutri[i].push_back(tmp2);
			nutri[i].push_back(tmp3);
		}

		if(finalans(nutri))
			printf("Case #%d: yes\n", rep);
		else
			printf("Case #%d: no\n", rep);

	}
}