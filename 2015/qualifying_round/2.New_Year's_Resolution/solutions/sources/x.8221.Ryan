import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;


public class NewYearsResolutions {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader("new_years_resolution.txt"));
	    try {
	        int lines = Integer.parseInt(br.readLine());
	        for (int caseNum = 1; caseNum <= lines; caseNum++)
	        {
	        	
	        	System.out.print("Case #" + caseNum + ": ");
	        	int[] required = new int[3];
	        	int index = 0;
	        	for (String str : br.readLine().split(" "))
	        	{
	        		required[index] = Integer.parseInt(str);
	        		index++;
	        	}
	        	int numFoods = Integer.parseInt(br.readLine());
	        	int[][] choices = new int[numFoods][3];
	        	for (int foodIndex = 0; foodIndex < numFoods; foodIndex++)
	        	{
	        		int infoIndex = 0;
	        		for (String info : br.readLine().split(" "))
	        		{
	        			choices[foodIndex][infoIndex] = Integer.parseInt(info);
	        			infoIndex++;
	        		}
	        	}
	        	if (caseNum <4)
	        	{
	        		continue;
	        	}
	        	ArrayList<int[]> choicesList = new ArrayList<>();
	        	for (int i = 0; i < choices.length; i++)
        	    {
        	        choicesList.add(choices[i]);
        	    }
	        	
	        	if (checkIfCanReachTarget(required, choicesList))
	        	{
	        		System.out.println("yes");
	        	}
	        	else {
	        		System.out.println("no");
	        	}
	        	
	        }
	    } finally {
	        br.close();
	    }
	}
	public static boolean checkIfCanReachTarget(int[] leftArray, ArrayList<int[]> possibleChoices)
	{
		//System.out.print(left + ": " + possibleChoices.toString());
		boolean leftIsZero = true;
		for (int left : leftArray)
		{
			if (left < 0)
			{
				return false;
			}
			if (left > 0)
			{
				leftIsZero = false;
				break;
			}
		}
		if (leftIsZero)
		{
			return true;
		}
		if (possibleChoices.size()<1)
		{
			return false;
		}
		
		for (int index = 0; index < possibleChoices.size(); index++)
		{
			ArrayList<int[]> newPossibleChoices = new ArrayList<>(possibleChoices);
			newPossibleChoices.remove(index);
			int[] newLeft = new int[3];
			for (int i = 0; i < 3; i++)
			{
				newLeft[i] = leftArray[i] - possibleChoices.get(index)[i];
			}
			if (checkIfCanReachTarget(newLeft, newPossibleChoices))
			{
				return true;
			}
		}
		return false;
	}
}
