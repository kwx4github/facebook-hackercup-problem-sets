#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;
struct food
{
	int P;
	int C;
	int F;
};
int main()
{
	ifstream fin("test.txt",ios::in);
	ofstream fout("result.txt",ios::out);
	int arr[] = {1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288};
	int t=0;
	fin>>t;

	for(int k=0;k<t;k++)
	{
		int Gp=0,Gc=0,Gf=0;
		int n=0;
		fin>>Gp>>Gc>>Gf;
		fin>>n;
		vector<food>vec(n);
		for(int i=0;i<n;i++)
		{
			fin>>vec[i].P;
			fin>>vec[i].C;
			fin>>vec[i].F;
		}

		int val = (int)pow(2.0,n) - 1;
		bool found = false;

		for(int i=1;i<=val;i++)
		{
			int Sp=0,Sc=0,Sf=0;			
			for(int j=0;j<n;j++)
			{
				if((i&arr[j]) != 0)
				{
					Sp+= vec[j].P;
					Sc+= vec[j].C;
					Sf+= vec[j].F;
				}
			}
			if(Sp == Gp && Sc == Gc && Sf == Gf)
				found = true;
			if(found)
				break;
		}

		if(found)
			fout<<"Case #"<<k+1<<": yes"<<endl;
		else fout<<"Case #"<<k+1<<": no"<<endl;
	}

	fin.close();
	fout.close();

	return 0;
}