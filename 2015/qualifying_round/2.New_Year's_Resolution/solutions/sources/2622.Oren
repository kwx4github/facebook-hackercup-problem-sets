#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>

using namespace std;

#define ll long long
#define vi vector<int>
#define pi pair<int,int>
#define pb push_back
#define mp make_pair
#define forn(i,n) for (size_t i = 0; i < n; ++i)
#define forb(i,n) for (int i = n - 1; i >= 0; --i)

const double EPS = 1e-9;
const int MAXN = 1 << 20 + 5;
const int MOD = 1e9 + 7;
const int MOD1 = 1e9 + 35011;
const int MOD2 = 1e9 + 18169;
const int INF = (1 << 30);
const long long INFl = 1e18;


int T, X, Y, Z, m;
int dp[3][MAXN];

int main() {
#ifdef F0X
	freopen("input.in", "r", stdin);
	freopen("output.out", "w", stdout);
	double st = clock();
#endif

	scanf("%d", &T);
	for (int test = 1; test <= T; ++test) {
		

		scanf("%d%d%d", &X, &Y, &Z);
		scanf("%d", &m);
		forn(i, m) scanf("%d%d%d", &dp[0][1 << i], &dp[1][1 << i], &dp[2][1 << i]);

		int flag = false;
		int ptr = 0, cur = 1, prev;
		for (int i = 1; i < (1 << m); ++i) {
			if (i == cur) {
				prev = cur;
				cur <<= 1;
				ptr = 1;
			}
			else {
				dp[0][i] = dp[0][prev] + dp[0][ptr];
				dp[1][i] = dp[1][prev] + dp[1][ptr];
				dp[2][i] = dp[2][prev] + dp[2][ptr];
				ptr++;
			}

			if (dp[0][i] == X && dp[1][i] == Y && dp[2][i] == Z) {
				flag = true;
				break;
			}
		}
		printf("Case #%d: ", test);
		flag ? puts("yes") : puts("no");
	}

#ifdef F0X
	cerr << "Time is " << (clock() - st) / CLOCKS_PER_SEC << endl;
#endif
	return 0;
}