#include<bits/stdc++.h>
using namespace std;

#define LL long long int
#define uLL unsigned long long int

#define S(a) scanf("%d",&a)
#define S2(a,b) scanf("%d%d",&a,&b)
#define S3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define SLL(a) scanf("%lld",&a)
#define SLL2(a,b) scanf("%lld%lld",&a,&b)
#define SLL3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define SC(a) scanf("%c",&a)
#define P(a) printf("%d",a)
#define PS(a) printf("%s",a)
#define PLL(a) printf("%lld",a)
#define PCASE(kk) printf("Case %d: ",kk++)
#define PCASENL(kk) printf("Case %d:\n",kk++)
#define NL puts("")

#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define pi (2.0*acos(0.0))
#define pii pair<int,int>

template<typename T>inline T POW(T B,T P)
{
    if(P==0) return 1;
    if(P&1) return B*POW(B,P-1);
    else return SQR(POW(B,P/2));
}

template <typename T>inline T BigMod (T b,T p,T m)
{
    if (p == 0) return 1;
    if (p%2 == 0)
    {
        T s = BigMod(b,p/2,m);
        return ((s%m)*(s%m))%m;
    }
    return ((b%m)*(BigMod(b,p-1,m)%m))%m;
}

template <typename T>inline T ModInv (T b,T m)
{
    return BigMod(b,m-2,m);
}

template<typename T>inline T ABS(T a)
{
    if(a<0)return -a;
    else return a;
}

template<typename T>inline T gcd(T a,T b)
{
    if(a<0)return gcd(-a,b);
    if(b<0)return gcd(a,-b);
    return (b==0)?a:gcd(b,a%b);
}

template<typename T>inline T lcm(T a,T b)
{
    if(a<0)return lcm(-a,b);
    if(b<0)return lcm(a,-b);
    return a*(b/gcd(a,b));
}

//knight and king move....

//int Dx[]={-2,-1,1,2,1,2,-2,-1};
//int Dy[]={-1,-2,2,1,-2,-1,1,2};
//int dx[]={-1,1,0,0};
//int dy[]={0,0,-1,1};
//int dx[]= {-1,-1,0,0,1,1};
//int dy[]= {-1,0,-1,1,0,1};

//////////////////////////////////////////////////

int n,p[30],c[30],f[30],gp,gc,gf,dp[21][21000];


int main()
{
    freopen("new.in", "r", stdin);
	freopen("new.out", "w", stdout);

    int t,tc=1;
    S(t);
    while(t--)
    {
        S3(gp,gc,gf);
        S(n);
        for(int i=0;i<n;i++)
        {
            S3(p[i],c[i],f[i]);
        }
        int pr=(1<<n)-1,ch=0;
//        cout<<pr<<endl;
        printf("Case #%d: ",tc++);
        for(int i=1;i<=pr;i++)
        {
            int a=0,b=0,c1=0;
            for(int j=0;j<n;j++)
            {
                if(i&(1<<j))
                {
                    a+=p[j];
                    b+=c[j];
                    c1+=f[j];
                }
            }
            if(a==gp && b==gc && c1==gf)
            {
                ch=1;
                break;
            }
        }
        if(ch)printf("yes\n");
        else printf("no\n");

    }
    return 0;
}
