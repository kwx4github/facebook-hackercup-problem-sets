#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int ps[ 20 ], cs[ 20 ], fs[ 20 ];
int target[ 3 ];
int array[ 20 ];
int pointer;
char possible;

void power_set( int size, int count, int index, int set[] ) {
	int i = 0, result[] = { 0, 0, 0 };

	if ( possible )
		return;

	if ( index > count ) {
		pointer--;
	} else if ( index == count || size == 0 ) {
		if ( size == 0 ) {
			for ( i = 0; i < pointer; i++ ) {
				// printf( "%d ", array[ i ] );
				result[ 0 ] += ps[ array[ i ] ];
				result[ 1 ] += cs[ array[ i ] ];
				result[ 2 ] += fs[ array[ i ] ];
			}
			if ( result[ 0 ] == target[ 0 ] && 
			     result[ 1 ] == target[ 1 ] && 
			     result[ 2 ] == target[ 2 ] ) {
				possible = 1;
			}
			// printf( "Result: %d %d %d; Target: %d %d %d", result[ 0 ], result[ 1 ], result[ 2 ], target[ 0 ], target[ 1 ], target[ 2 ] );
			// printf( "\n" );
		}
		pointer--;
		if ( index == count )
			pointer--;
	} else {
		for( i = index; i < count; i++ ) {
			array[ pointer++ ] = set[ i ];
			power_set( size - 1, count, i + 1, set );
		}
	}
}

int main( int argc, char **argv ) {
	int T, N, i, j, count;
	int set[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 };
	FILE *f;

	f = fopen( argv[ 1 ], "r" );

	fscanf( f, "%d\n", &T );

	for ( i = 1; i <= T; i++ ) {
		possible = 0;

		fscanf( f, "%d %d %d\n", target, target + 1, target + 2 );

		fscanf( f, "%d\n", &N );

		for ( j = 0; j < N; j++ ) {
			fscanf( f, "%d %d %d\n", &ps[ j ], &cs[ j ], &fs[ j ] );
		}

		for ( j = 1; j <= N; j++ ) {
			pointer = 0;
			power_set( j, N, 0, set );
			if ( possible )
				break;
		}

		printf( "Case #%d: %s\n", i, possible ? "yes" : "no" );
	}

	fclose( f );

	return 0;
}
