#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <sstream>
#include <limits>
#include <chrono>

using namespace std;
	

string solve(int n, vector<int>& g, vector< vector<int> >& f) {
	for (int i = 0; i < (1 << n); i++) {
		vector<int> v(3);
		for (int j = 0; j < n && v[0] <= g[0] && v[1] <= g[1] && v[2] <= g[2]; j++) {
			if ((i >> j) & 1) {
				for (int k = 0; k < 3; k++) {
					v[k] += f[j][k];
				}
			}
		}

		if (v == g) return "yes";
	}
	return "no";

}

int main()
{
	ifstream cin("test.in");
	ofstream cout("test.out");
	int t;
	cin >> t;
	auto t0 = std::chrono::system_clock::now();
	for (int i = 1;i <= t; i++) {
		int n;
		vector<int> g(3);
		cin >> g[0] >> g[1] >> g[2];
		cin >> n;
		vector< vector<int> > f(n, vector<int>(3));
		for (int j = 0; j < n; j++) {
			cin >> f[j][0] >> f[j][1] >> f[j][2];
		}
		string ans = solve(n, g, f);
		cout << "Case #" << i << ": " << ans << "\n";
	}
	auto t1 = std::chrono::system_clock::now();
	auto d = std::chrono::duration_cast<std::chrono::duration<double>>(t1 - t0);
	cerr << d.count() << "\n";
	return 0;
}