import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.StreamTokenizer;

public class NewYearsResolution {

	public static void main(String[] args) throws Exception {
		NewYearsResolution object = new NewYearsResolution();
		String className = object.getClass().getSimpleName();

		FileReader fileReader = new FileReader(new File(className.toLowerCase()
				+ ".in"));
		StreamTokenizer st = new StreamTokenizer(new BufferedReader(fileReader));

		FileWriter wr = new FileWriter(className.toLowerCase() + ".out");

		st.nextToken();
		int testCases = (int) st.nval;

		for (int tc = 1; tc <= testCases; tc++) {
			int Gp = nextInt(st);
			int Gc = nextInt(st);
			int Gf = nextInt(st);
			
			int N = nextInt(st);
			
			int P[] = new int[N];
			int C[] = new int[N];
			int F[] = new int[N];
			
			for (int i=0; i<N; i++) {
				P[i] = nextInt(st);
				C[i] = nextInt(st);
				F[i] = nextInt(st);
			}
			
			String result = object.solve(N, Gp, Gc, Gf, P, C, F);
			wr.write("Case #" + tc + ": " + result + "\r\n");
		}

		wr.close();
	}

	private String solve(int N, int Gp, int Gc, int Gf, int[] P, int[] C,
			int[] F) {
		
		for (int i=0; i<(1<<N); i++) {
			
			int Cp = 0, Cc = 0, Cf = 0;
			
			for (int j=0; j<N; j++)
				if (((1 << j) & i) != 0) {
					Cp += P[j];
					Cc += C[j];
					Cf += F[j];
				}
			
			if (Cp == Gp && Cc == Gc && Cf == Gf)
				return "yes";
		}
		
		return "no";
		
	}

	private static int nextInt(StreamTokenizer st) throws Exception {
		st.nextToken();
		return (int) st.nval;
	}

}
