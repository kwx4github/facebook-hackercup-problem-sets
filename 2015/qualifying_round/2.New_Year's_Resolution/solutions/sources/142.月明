/*************************************************************************
    > File Name: b.cpp
    > Author: flyasdfvcxz
    > Mail: 1099431883@qq.com 
    > Created Time: äº”  1/ 9 09:43:00 2015
 ************************************************************************/
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <ctime>
#include <cstdlib>
#define ll long long
using namespace std;
const int N = 1e5 + 10;
const int mod = 1e9 + 7;
const int inf = ~0U >> 1;

int a[N], b[N], c[N];
int dp1[5000][3], dp2[5000][3];

int main()
{
	int T, cas = 0;
	cin >> T;
	while (T--)
	{
		int A, B, C;
		cin >> A >> B >> C;
		int n;
		cin >> n;
		for (int i = 1; i <= n; ++i) cin >> a[i] >> b[i] >> c[i];

		int pre = n / 2;
		int tot1 = (1 << pre) - 1;
		for (int i = 0; i <= tot1; ++i)
		{
			int cura = 0, curb = 0, curc = 0;
			for (int j = 0; j < pre; ++j)
				if (i & (1 << j)) cura += a[j + 1], curb += b[j + 1], curc += c[j + 1]; 
			dp1[i][0] = cura, dp1[i][1] = curb, dp1[i][2] = curc; 
		}

		int aft = n - pre;
		int tot2 = (1 << aft) - 1;
		for (int i = 0; i <= tot2; ++i)
		{
			int cura = 0, curb = 0, curc = 0;
			for (int j = 0; j < aft; ++j)
				if (i & (1 << j)) cura += a[j + 1 + pre], curb += b[j + 1 + pre], curc += c[j + 1 + pre];
			dp2[i][0] = cura, dp2[i][1] = curb, dp2[i][2] = curc;
		}
		
		int ok = 0;
		for (int i = 0; i <= tot1 && !ok; ++i)
			for (int j = 0; j <= tot2 && !ok; ++j)
			{
				int cura = dp1[i][0] + dp2[j][0];
				int curb = dp1[i][1] + dp2[j][1];
				int curc = dp1[i][2] + dp2[j][2];
				if (cura == A && curb == B && curc == C) ok = 1;
			}
		if (ok) printf("Case #%d: yes\n", ++cas);
		else printf("Case #%d: no\n", ++cas);
	}
    return 0;
}
