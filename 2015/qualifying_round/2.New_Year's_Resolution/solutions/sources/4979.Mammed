#include <fstream>
#include <iostream>

using namespace std;

int n;
int gp, gc, gf;
int p[21], c[21], f[21];
const long long s = 1048576lu;
long long  ress[s];
long long  resc[s];
long long  resf[s];

bool findP() {
    long long k = 1;
    long long endk = 1;
    for(int j=0; j<n; j++) {
        for(int e=0; e<endk; e++) {
            ress[k] = ress[e] + p[j];
            resc[k] = resc[e] + c[j];
            resf[k] = resf[e] + f[j];
            //cout << "res[" << k << "] : " << ress[k] << "=" << ress[e] << "+" << p[j] << endl;
            if((ress[k] == gp) && (resc[k] == gc) && (resf[k] == gf)) {
               // for(int i=0; i<k;i++) cout << "res[" << i << "] " << ress[i] << " "; cout << endl;
                return true;
            }
            k++;
        }
        endk = k;
    }
   // for(int i=0; i<k;i++) cout << ress[k] << " "; cout << endl;
    return false;
}

int main()
{
    ifstream in("new_years_resolution.txt");
    streambuf *cinbuf = std::cin.rdbuf(); 
    cin.rdbuf(in.rdbuf());
    ofstream out("out.txt");
    streambuf *coutbuf = std::cout.rdbuf();
    cout.rdbuf(out.rdbuf());

    int t;
    cin >> t;
    for(int j=1; j<=t; j++) {
        bool resB, resD, resE;
        cin >> gp >> gc >> gf;
        cin >> n;
        for(int i=0; i<n; i++) cin >> p[i] >> c[i] >> f[i];
        ress[0] = 0;
        //ress[1] = p[0];
        if((0 == gp || p[0] == gp) &&
           (0 == gc || c[0] == gc) &&
           (0 == gf || f[0] == gf)) {
            resB = true;
        } else {
            resB = findP();
        }
        cout << "Case #" << j << ": ";
        if (resB) cout << "yes" << endl;
        else cout << "no" << endl;
    }
    return 0;
}