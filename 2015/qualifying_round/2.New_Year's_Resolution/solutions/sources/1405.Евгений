import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.System.exit;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class B {
	
	static BufferedReader in;
	static PrintWriter out;
	static StringTokenizer tok;
	static int test;
	
	static int v1[], v2[], v3[];
	
	static void solve() throws Exception {
		int s1 = nextInt();
		int s2 = nextInt();
		int s3 = nextInt();
		int n = nextInt();
		v1 = new int[n];
		v2 = new int[n];
		v3 = new int[n];
		for (int i = 0; i < n; i++) {
			v1[i] = nextInt();
			v2[i] = nextInt();
			v3[i] = nextInt();
		}
		boolean res = go(n - 1, s1, s2, s3);
		printCase();
		out.println(res ? "yes" : "no");
	}
	
	static boolean go(int i, int s1, int s2, int s3) {
		if (i < 0) {
			return s1 == 0 && s2 == 0 && s3 == 0;
		}
		return go(i - 1, s1, s2, s3) || go(i - 1, s1 - v1[i], s2 - v2[i], s3 - v3[i]);
	}
	
	static void printCase() {
		out.print("Case #" + test + ": ");
	}
	
	static void printlnCase() {
		out.println("Case #" + test + ":");
	}
	
	static int nextInt() throws IOException {
		return parseInt(next());
	}

	static long nextLong() throws IOException {
		return parseLong(next());
	}

	static double nextDouble() throws IOException {
		return parseDouble(next());
	}

	static String next() throws IOException {
		while (tok == null || !tok.hasMoreTokens()) {
			tok = new StringTokenizer(in.readLine());
		}
		return tok.nextToken();
	}

	public static void main(String[] args) {
		try {
			in = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(new OutputStreamWriter(System.out));
			int tests = nextInt();
			for (test = 1; test <= tests; test++) {
				solve();
			}
			in.close();
			out.close();
		} catch (Throwable e) {
			e.printStackTrace();
			exit(1);
		}
	}
}