#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdlib>
#include <string>
#include <vector>
#include <cstdio>
#include <cmath>
#include <map>
#include <set>
using namespace std;
typedef long long ll;
#define F(i,a,b) for(ll i=a;i<=b;i++)
#define mp make_pair
#define pb push_back 
#define X first
#define Y second
const int mod=1000000007;
 
double DIST(double x1,double y1,double x2,double y2){
    return sqrt( (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1) ); }
 
ll gcd(ll a,ll b){
    if(b==0) return a; else return gcd(b,a%b); }
 
ll exp(ll a,ll b){
    if(b==0) return 1; else if(b&1) return a*exp(a,b-1); else { ll ans=exp(a,b/2); return ans*ans; } }

ll exp(ll a,ll b,ll mod)
{ ll ans=1; while(b){ if(b&1)ans=(ans*a)%mod; a=(a*a)%mod; b/=2;} return ans; }
        
void sieve(ll n,ll *prime){
    prime[0]=1; prime[1]=1;
    for(ll i=2;i<=n;i++) if(prime[i]==0)
    for(ll j=2;j*i<=n;j++) prime[i*j]=1; } 
    
struct cmp{
  bool operator()(pair<ll,ll> const& lhs, pair<ll,ll> const& rhs){
    return lhs.X <= rhs.Y;
  }
};

ll t;

int main(){
        
    cin.sync_with_stdio(0);
    
    cin>>t;
    
    F(t1,1,t){
        
        ll gp,gc,gf;

        cin>>gp>>gc>>gf;

        ll p[30],c[30],f[30];

        ll n;

        cin>>n;

        F(i,0,n-1)
        cin>>p[i]>>c[i]>>f[i];

        ll sz=exp(2,n)-1;

        bool ans=false;

        for(ll i=1;i<=sz;i++)
        {   
            ll sp=0,sc=0,sf=0;

            for(ll j=0;j<n;j++)
                if( (1<<j)&i )
                {   
                    sp+=p[j];
                    sc+=c[j];
                    sf+=f[j]; 

                }

                if(sp==gp && sc==gc && sf==gf)
                    {   ans=true;
                        break;
                    }    
        }
        
        if(ans)
        cout<<"Case #"<<t1<<":" <<" "<<"yes\n";
        else cout<<"Case #"<<t1<<":" <<" "<<"no\n";
    }
    
    return 0;
}    