package com.facebook;

import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class NewYearResolution {
    public static void main(String[] args) throws Exception {
        //Scanner in = new Scanner(System.in);
        long startTime = System.currentTimeMillis();
        Scanner in = new Scanner(new FileInputStream("/Users/rajashekhar.c/Downloads/new_years_resolution.txt"));
        //Scanner in = new Scanner(new FileInputStream("/Users/rajashekhar.c/Documents/InterviewFeedbackReview/hackerrank"));
        int t = in.nextInt();
        
        boolean[] output = new boolean[t];
        for (int i = 0; i < output.length; i++) {
            long protein;
            long carbo;
            long fat;
            protein = in.nextInt();
            carbo = in.nextInt();
            fat = in.nextInt();
            long outputFood = protein * 10000000 + carbo * 10000 + fat;
            int n = in.nextInt();
            long[] ar = new long[n];
            for (int j = 0; j < n; j++) {
                protein = in.nextInt();
                carbo = in.nextInt();
                fat = in.nextInt();
                long food = protein * 10000000 + carbo * 10000 + fat;
                ar[j] = food;
            }
            output[i] = calculateNewYearResloution(ar, outputFood);
        }
        in.close();
        
        String outputStr = "";
        for (int i = 0; i < output.length; i++) {
            String temp = "Case #" + (i+1) + ": ";
            if(output[i] == true){
                temp += "yes";
            }else{
                temp += "no";
            }
            outputStr += temp + "\n"; 
        }
        //System.out.println(outputStr);
        BufferedWriter writer = new BufferedWriter( new FileWriter( "/Users/rajashekhar.c/Downloads/new_years_resolution_out.txt"));
        writer.write(outputStr);
        writer.close();
        long endTime = System.currentTimeMillis();
        //System.out.println("the total time is " + (endTime-startTime)/1000);
    }
    
    private static boolean calculateNewYearResloution(long[] ar, long outputFood){
        ArrayList<Long> elements = new ArrayList<Long>();
        for (int i = 0; i < ar.length; i++) {
            insertIntoList(elements, ar[i]);    
        }
        
        
        ArrayList<Long> arrayList = new ArrayList<Long>(2048578);
        
        for (int i = 0; i < elements.size(); i++) {
            int length = arrayList.size();
            ArrayList<Long> tempArrayList = (ArrayList<Long>) arrayList.clone();
            for (int j = 0; j < length; j++) {
                long temp = tempArrayList.get(j) + elements.get(i);
                insertIntoList(arrayList, temp);
            }
            insertIntoList(arrayList, elements.get(i));
        }
        

//        if(Collections.binarySearch(arrayList, outputFood) >= 0){
//            return true;
//        }
        
        if(arrayList.contains(outputFood)){
            return true;
        }
        return false;
    }
    
    private static void insertIntoList(ArrayList<Long> elementsAr, long element){
//        int index = Collections.binarySearch(elementsAr, element);
//        if(index < 0){
//            index = index * -1 - 1;
//            elementsAr.add(index, element);
//        }
        
        elementsAr.add(element);
    }
}
