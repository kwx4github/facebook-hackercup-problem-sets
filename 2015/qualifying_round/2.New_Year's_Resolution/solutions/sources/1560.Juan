/*
 *ID:   Cowboy
 *TASK:
 *Judge:
 */
#include <bits/stdc++.h>
#define INF 0x7fffffff
#define PI 2*acos(0.0)
using namespace std;

#define PB(t) push_back(t)
#define ALL(t) t.begin(),t.end()
#define MP(x, y) make_pair((x), (y))
#define Fill(a,c) memset(&a, c, sizeof(a))
#define GP first
#define GC second.first
#define GF second.second


typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int MAX = 2000000;
int LIM;
int N;
map<pair<int, ii >, int>dp;
vector< pair<int, ii > >food;

int doDP( int p, int c, int f){
    dp[ MP(0, MP(0,0) ) ] = 1;
    pair<int, ii >tmp;
    map<pair<int, ii >, int>aux;
    map<pair<int, ii >, int>::iterator it;
    int gp, gc, gf;

    for( int i = 0 ; i < N; i++){
        for( it= dp.begin(); it!=dp.end(); it++){
            aux[ it->first ]= 1;
            gp = it->first.GP+food[i].GP;
            gc = it->first.GC+food[i].GC;
            gf = it->first.GF+food[i].GF;
            if( gp<=p && gc<=c && gf<=f){
                tmp = MP(gp, MP(gc, gf) );
                aux[ tmp ]= 1;
            }
        }
        dp = aux;
    }

//    for( it= dp.begin(); it!=dp.end(); it++){
//        cout<<it->first.GP<<" "<<it->first.GC<<" "<<it->first.GF<<endl;
//    }

    return dp[ MP(p, MP(c, f) ) ];
}

int main( ){
#ifndef ONLINE_JUDGE
   freopen("input.txt", "rt", stdin);
   freopen("output.txt", "wt", stdout);
#endif
    int T, p, c, f, cas = 0;
    for( cin>>T; T--; cas++){
        cin>>p>>c>>f;
        cin>>N;
        dp.clear();
        food = vector< pair<int, ii > >(N);

        for( int i = 0 ; i < N; i++){
            cin>>food[i].GP>>food[i].GC>>food[i].GF;
        }

        int res = doDP( p, c, f);
        printf("Case #%d: ", cas+1);
        if( res ){
            cout<<"yes"<<endl;
        } else {
            cout<<"no"<<endl;
        }
    }
return 0;
}
