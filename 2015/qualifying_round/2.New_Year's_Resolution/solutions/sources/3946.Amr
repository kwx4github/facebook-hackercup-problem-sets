import java.io.File;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;


public class HackerCup {
 private static class Food{
	 private int protein;
	 private int carbo;
	 private int fat;
	 public Food(int protein,int carbo,int fat){
		 this.setProtein(protein);
		 this.setCarbo(carbo);
		 this.setFat(fat);
	 }
	public void setProtein(int protein) {
		this.protein = protein;
	}
	public int getProtein() {
		return protein;
	}
	public void setCarbo(int carbo) {
		this.carbo = carbo;
	}
	public int getCarbo() {
		return carbo;
	}
	public void setFat(int fat) {
		this.fat = fat;
	}
	public int getFat() {
		return fat;
	}
 }
 private static String canEat(Food[] foodArray, int proteinAmout,
		 int carboAmount, int fatAmout, int caseNumber) {
	 boolean result = recursiveCanEat(foodArray, proteinAmout, carboAmount, fatAmout, 0);
	 StringBuilder sb = new StringBuilder();
	 sb.append("Case #");
	 sb.append(caseNumber);
	 sb.append(": ");
	 sb.append(result==true ? "yes" : "no");
	 return sb.toString();
 }

	private static boolean recursiveCanEat(Food[] foodArray, int proteinAmout,
		int carboAmount, int fatAmout, int i) {
		if(proteinAmout<0||carboAmount<0||fatAmout<0){
			return false;
		}
		if(proteinAmout==0&&carboAmount==0&&fatAmout==0){
			return true;
		}
		for(;i<foodArray.length;i++){
			if(recursiveCanEat(foodArray, proteinAmout-foodArray[i].getProtein(),
					carboAmount-foodArray[i].getCarbo(), fatAmout-foodArray[i].getFat(), i)||
					recursiveCanEat(foodArray, proteinAmout, carboAmount, fatAmout, i+1)){
				return true;
			}
		}
		return false;
}

	public static void main(String[] args) throws Exception {
		String fileName = "newYearResolution";
		Scanner in = new Scanner(new File("input.txt"));
		PrintWriter out = new PrintWriter(fileName + ".txt");
		int tc = in.nextInt();
		int cc = 1;
		while (tc-- > 0) {
			int proteinAmout = in.nextInt();
			int carboAmount = in.nextInt();
			int fatAmout = in.nextInt();
			int numOfFood = in.nextInt();
			Food [] foodArray = new Food[numOfFood];
			for(int i=0;i<numOfFood;i++){
				foodArray[i] = new Food(in.nextInt(), in.nextInt(), in.nextInt());
			}
			String result = canEat(foodArray,proteinAmout,carboAmount,fatAmout,cc++);
			out.println(result);
		}
		out.close();
	}


}
