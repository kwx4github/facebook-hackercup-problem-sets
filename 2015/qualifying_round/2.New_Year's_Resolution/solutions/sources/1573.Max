import sys

def satisfies_req(target_pcf):
    return target_pcf[0] == 0 and \
      target_pcf[1] == 0 and \
      target_pcf[2] == 0

def subtract(target, food):
    new_target = list(target)
    for i in range(len(target)):
        new_target[i] -= food[i]
    return new_target

def prune(target):
    return target[0] < 0 or target[1] < 0 or target[2] < 0

def can_meet(all_foods, target_pcf):
    if satisfies_req(target_pcf):
        return True
    if all_foods == []:
        return False
    if prune(target_pcf):
        return False
    dont_take = can_meet(all_foods[1:], target_pcf)
    take  = can_meet(all_foods[1:], subtract(target_pcf, all_foods[0]))
    return dont_take or take

n_cases = int(sys.stdin.readline())
for j in range(n_cases):
    target_pcf = [int(x) for x in sys.stdin.readline().strip().split()]
    n_foods, foods = int(sys.stdin.readline()), []
    for i in range(n_foods):
        foods.append([int(x) for x in sys.stdin.readline().strip().split()])
    answer = "yes" if can_meet(foods, target_pcf) else "no"
    print("Case %d: %s" % (j+1, answer))
