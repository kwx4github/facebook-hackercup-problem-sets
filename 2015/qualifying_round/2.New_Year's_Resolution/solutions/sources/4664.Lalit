
#include<bits/stdc++.h>
#define sqr(x) ( (x)*(x) )
#define Size(a) int((a).size()) 
#define pb push_back
#define mset(x,v) memset(x,v,sizeof(x))
#define all(c) (c).begin(),(c).end() 
#define SORT(x) sort(all(x))
#define error(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); }
#define tr(c,i) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define P(x,i) cerr<<"["#x<<"["<<i<<"] = "<<x[i]<<"]\n"
#define PP(x,i,j) cerr<<"["#x<<"["<<i<<"]["<<j<<"]= "<<x[i][j]<<"]\n"
#define PPP(x,i,j,k) cerr<<"["#x<<"["<<i<<"]["<<j<<"]["<<k<<"]= "<<x[i][j][k]<<"]\n"
#define chk(x,n) ( x[n>>6] & (1<< ( (n>>1) & 31) )  ) // checks if  the bit corresponding to n is 1 
#define set(x,n) ( x[n>>6] |= (1<< ( (n>>1) & 31) )  ) // sets the bit corresponding to n to 1 - meaning its composite 
#define mod 1000000007
typedef long long int ll;
typedef long double ld;
typedef unsigned int ui;
typedef unsigned long long int ull;	
using namespace std;
typedef vector<int> VI;
typedef set<int> SI;
typedef map<int,int> MII;

typedef pair<int,int> PII;

	

int p[25];
int c[25];
int f[25];
int main()
{
	int T;
	scanf("%d",&T);
	for(int t=1;t<=T;t++)
	{
		
		int gp,gc,gf,psum,csum,fsum;
		scanf("%d%d%d",&gp,&gc,&gf);
		int n;
		scanf("%d",&n);
		for(int i=0;i < n;i++)
		{
			scanf("%d%d%d",&p[i],&c[i],&f[i]);
		}
		bool flag=false;
		for(int i=1;i < (1<<n);i++)
		{
			psum=csum=fsum=0;
			for(int j=0;j < n;j++)
			{
				if(i&(1<<j)) 
				{
					psum+=p[j];
					csum+=c[j];
					fsum+=f[j];
				}
			}
			if(psum==gp&&csum==gc&&fsum==gf) 
			{
				flag=true;
				break;
			}
				
		}
		printf("Case #%d: %s\n",t,( flag )? "yes"  : "no" );
	}
	return 0;
}

