#include<bits/stdc++.h>
#define Mod 1000000009
using namespace std;
#define ll int
#define gc getchar
#define pc putchar

inline ll getn()
{
  ll n=0, c=gc();

  while(c < '0' || c > '9') c = gc();

  while(c >= '0' && c <= '9')
   n = (n<<3) + (n<<1) + c - '0', c = gc();

  return n;
}
inline void fastWrite(ll a)
{
   char snum[20];
   ll i=0;

   do
    {
     snum[i++]=a%10+48;
     a=a/10;
   }while(a!=0);

   i=i-1;

   while(i>=0)
    pc(snum[i--]);

   pc('\n');
}
struct grad
{
	ll p,c,f;
};
grad operator-(grad g1,grad g2)
{
	grad yoo;
	yoo.p=g1.p-g2.p;
	yoo.c=g1.c-g2.c;
	yoo.f=g1.f-g2.f;
	return yoo;
}
bool Subcount(grad set[],ll z,grad count)
{	
   
   if (count.p == 0&&count.c==0&&count.f==0)
     return true;
   if (z == 0 && (count.p != 0||count.c!=0&&count.f!=0))
     return false;
 if (set[z-1].c > count.c||set[z-1].f>count.f||set[z-1].p>count.p)
     return Subcount(set, z-1, count);
   return Subcount(set, z-1, count) || Subcount(set, z-1, count-set[z-1]);
}
int main()
{   freopen ("rks.txt","r",stdin);
    freopen ("output.txt","w",stdout);
    ll i,t,j;
	t=getn();
	for(j=1;j<=t;j++)
	{
		
		grad count;
		count.p=getn();
		count.c=getn();
		count.f=getn();
		ll z;
		z=getn();
		grad *rk=new grad[z];
		for(i=0;i<z;i++)
		{
			rk[i].p=getn();
			rk[i].c=getn();
			rk[i].f=getn();
		}
		string str;
		if(Subcount(rk,z,count))
		{
			str="yes";
		}
		else
		{
			str="no";
		}
		cout<<"Case #"<<j<<": "<<str<<endl;
	}
	fclose(stdout);
	return 0;
}
