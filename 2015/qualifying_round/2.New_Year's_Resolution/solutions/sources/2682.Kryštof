import java.util.ArrayList;
import java.util.Scanner;

public class NewYearsResolution {
	public static void main(String [] args) {
		Scanner cin = new Scanner(System.in);
		
		int t = cin.nextInt();
		for(int tt = 1; tt <= t; tt++) {
			//input
			int Gp = cin.nextInt();
			int Gc = cin.nextInt();
			int Gf = cin.nextInt();
			int n = cin.nextInt();
			ArrayList<Tuple> array = new ArrayList<Tuple>();
			for(int i = 0; i < n; i++) {
				Tuple tmp = new Tuple();
				tmp.p = cin.nextInt();
				tmp.c = cin.nextInt();
				tmp.f = cin.nextInt();
				
				array.add(tmp);
			}
			
			//code
			String ans = "no";
			for(int i = 0; i < (int) Math.pow(2, n); i++) {
				Tuple tmp = new Tuple();
				tmp = sum_tuple(array, ktore_mam_zozrat(i,n));
				
				if(tmp.c == Gc && tmp.f == Gf && tmp.p== Gp){
					ans = "yes";
					break;
				}
			}
			
			//output
			System.out.println("Case #" + tt + ": " + ans);
		}
	}
	private static ArrayList<Boolean> ktore_mam_zozrat(int n, int size){
		ArrayList<Boolean> ans = new ArrayList<Boolean>();
		for(int i=0; i < size; i++){
			ans.add(false);
		}
		String binary = "";
		while (n > 0) {
		    int rem = n % 2;
		    binary = rem + binary;
		    n = n / 2;
		}
		
		for(int i=0; i < binary.length(); i++){
			if(binary.charAt(i) == '1'){
				ans.set(i+size-binary.length(), true);
			}
		}
		
		return ans;
	}
	private static Tuple sum_tuple(ArrayList<Tuple> array, ArrayList<Boolean> zozer) {
		Tuple ans = new Tuple();
		for(int i = 0; i < array.size(); i++){
			if(zozer.get(i)){
				ans.p += array.get(i).p;
				ans.c += array.get(i).c;
				ans.f += array.get(i).f;
			}
		}
		return ans;
	}
}

class Tuple {
	int p;
	int c;
	int f;
}