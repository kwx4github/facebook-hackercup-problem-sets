using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace FB2
{
	class ProgramF2
	{
		static int Gp, Gc, Gf;
		static int N;
		static int[] P, C, F;
		static int crtGp, crtGc, crtGf;

		static void Main(string[] args)
		{
			StreamReader sr = new StreamReader("input.txt");
			string input = sr.ReadLine();
			string output = string.Empty;

			int nrCount = int.Parse(input);

			for (int count = 1; count <= nrCount; count++)
			{
				string[] values = sr.ReadLine().Split(' ');
				Gp = int.Parse(values[0]);
				Gc = int.Parse(values[1]);
				Gf = int.Parse(values[2]);
				N = int.Parse(sr.ReadLine());
				P = new int[N];
				C = new int[N];
				F = new int[N];

				for (int i = 0; i < N; i++)
				{
					values = sr.ReadLine().Split(' ');
					P[i] = int.Parse(values[0]);
					C[i] = int.Parse(values[1]);
					F[i] = int.Parse(values[2]);
				}

				string result = Case();

				output += string.Format("Case #{0}: {1}\r\n", count, result);
				Console.WriteLine("Case #{0}: {1}", count, result);
			}

			sr.Close();

			output = output.TrimEnd();
			StreamWriter sw = new StreamWriter("output.txt");
			sw.Write(output);
			sw.Close();

			Console.ReadLine();
		}

		static string Case()
		{
			crtGp = 0; crtGc = 0; crtGf = 0;
			return Consume(-1);
		}

		static string Consume(int food)
		{
			string res;
			for (int i = 0; i < N; i++)
			{
				if (crtGc + C[i] < Gc && crtGf + F[i] < Gf && crtGp + P[i] < Gp)
				{
					crtGc += C[i]; crtGf += F[i]; crtGp += P[i];
					res = Consume(i);
					if (res == "yes")
						return "yes";
				}
				else if (crtGc + C[i] == Gc && crtGf + F[i] == Gf && crtGp + P[i] == Gp)
					return "yes";
			}

			if (food >= 0)
			{
				crtGc -= C[food]; crtGf -= F[food]; crtGp -= P[food];
			}
			return "no";
		}
	}
}
