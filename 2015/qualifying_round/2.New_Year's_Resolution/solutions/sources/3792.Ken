#include <stdio.h>

#define MAXT 20
#define MAXN 20

int casenum, foodnum[MAXT];
int gp[MAXT], gc[MAXT], gf[MAXT];
int p[MAXT][MAXN], c[MAXT][MAXN], f[MAXT][MAXN];

int dfs(int curr, int i, int sump, int sumc, int sumf) {
	if (i == foodnum[curr]) {
		return (sump == gp[curr]) 
			&& (sumc == gc[curr]) 
			&& (sumf == gf[curr]);
	}
	if (dfs(curr, i + 1, sump, sumc, sumf)) {
		return 1;
	}
	if (dfs(curr, i + 1, sump + p[curr][i], sumc + c[curr][i], sumf + f[curr][i])) {
		return 1;
	}
	return 0;
}

char *check(int curr) {
	if (dfs(curr, 0, 0, 0, 0)) {
		return "yes\0";
	}
	return "no\0";
}

int main() {
	int i, j;
	scanf("%d\n", &casenum);
	for (i = 0; i < casenum; i++) {
		scanf("%d %d %d\n", &gp[i], &gc[i], &gf[i]);
		scanf("%d\n", &foodnum[i]);
		for (j = 0; j < foodnum[i]; j++) {
			scanf("%d %d %d\n", &p[i][j], &c[i][j], &f[i][j]);
			if ((p[i][j] > gp[i]) || (c[i][j] > gc[i]) || (f[i][j] > gf[i])) {
				foodnum[i]--;
				j--;
			}
		}
	}
	for (i = 0; i < casenum; i++) {
		printf("Case #%d: %s\n", i + 1, check(i));
	}
	return 0;
}

