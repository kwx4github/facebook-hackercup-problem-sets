// ConsoleApplication5.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <memory>
#include <iostream>
#include <vector>
#include <map>
#include <deque>
#include <cmath>
#include <algorithm>
using namespace std;
using myMap = map < pair<int, pair<int, int>>, bool > ;

void insert(int p, int c, int f, myMap &m)
{
	m[make_pair(p, make_pair(c, f))] = true;
}

int _tmain(int argc, _TCHAR* argv[])
{
	int cases;
	cin >> cases;

	for (int x = 0; x < cases; ++x)
	{
		//read
		int gp, gc, gf, tp, tc, tf, n;
		cin >> gp >> gc >> gf >> n;
		vector<int> p, c, f;
		myMap m[21];

		for (int i = 0; i < n; ++i)
		{
			cin >> tp >> tc >> tf;
			p.push_back(tp);
			c.push_back(tc);
			f.push_back(tf);
		}

		insert(0, 0, 0, m[0]);
		for (int i = 0; i < n; ++i)
		{
			int maxNum = max(gp / p[i], max(gc / c[i], gf / f[i]));

			for (auto it : m[i])
			{
				tp = it.first.first;
				tc = it.first.second.first;
				tf = it.first.second.second;

				for (int j = 0; j <= maxNum; ++j)
				{
					int np = tp + p[i] * j;
					int nc = tc + c[i] * j;
					int nf = tf + f[i] * j;
					if ( np <= gp && nc <= gc && nf <= gf)
					{
						insert(np, nc, nf, m[i + 1]);
					}
				}
			}
		}

		string ans = m[n][make_pair(gp, make_pair(gc, gf))] ? "yes" : "no";
		
		printf("Case #%d: %s\n", x + 1, ans.c_str());
	}

	return 0;
}

