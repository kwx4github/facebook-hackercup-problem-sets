#include <bits/stdc++.h>
#define loop(i,x,y) for(int i = x; i < y; i++)
using namespace std;
long long int exponent(int , int );
void printPowerSet(int *a,int *b,int *c, int set_size,int g1,int g2,int g3,int i)
{

    long long int pow_set_size = exponent(2, set_size);
    long long int counter;
    int j,m=0,sum,sum1,sum2;
    for(counter = 0; counter < pow_set_size; counter++)
    {

       sum=0;
       sum1=0;
       sum2=0;
      for(j = 0; j < set_size; j++)
       {

          if(counter & (1<<j))
          {

            sum=sum+a[j];
            sum1=sum1+b[j];
            sum2=sum2+c[j];
          }

       }
       if(sum==g1&&sum1==g2&&sum2==g3)
       {
           m=1;
           break;
       }
       else
        m=0;

    }
    if(m==1)
        cout<<"Case #"<<i<<":"<<" "<<"yes"<<endl;
    else
        cout<<"Case #"<<i<<":"<<" "<<"no"<<endl;
}
long long int exponent(int a1, int b1){
  long long int r = 1;

  while (b1){
    if (b1%2==1){
      r *= a1;
    }
    a1 *= a1;
    b1 /= 2;
  }

  return r;
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    int t;
    cin>>t;
    for(int i=1;i<=t;i++)
    {
        int g1,g2,g3;
        cin>>g1>>g2>>g3;
        int n;
        cin>>n;
        int a[n],b[n],c[n];
        loop(i,0,n)
        {
            cin>>a[i]>>b[i]>>c[i];
        }
      printPowerSet(a,b,c,n,g1,g2,g3,i);
    }
}