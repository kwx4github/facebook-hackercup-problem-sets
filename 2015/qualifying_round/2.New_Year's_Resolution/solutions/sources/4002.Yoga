import itertools 
from itertools import chain, combinations
import time

fname='2x.txt'#raw_input("input filename:")
data=open(fname,"r+")
text=data.readlines()
data.close()
nos=int(text[0])
c = 1

def all_subsets(ss):
	return chain(*map(lambda x: combinations(ss, x), range(0, len(ss)+1)))

def calc(sum_arr,case_count,d2,y):
	sum_arr = map(int,sum_arr)
	d2 = [[int(r) for r in row ] for row in d2]
	subs = all_subsets(d2)
	b = sum_arr
	check = 'no'
	for sub in subs:
		if sub is not None:
			if b == [ sum(x) for x in zip(*sub) ]:
				check = 'yes'
				break
	print "Case #"+str(y)+": "+check

for x in range(0,nos):
    sum_arr =text[x+c].strip().split()
    case_count = int(text[x+c+1].strip())
    c = c+2
    d2 = []
    for i in range(0,case_count):
    	r = text[x+i+c].strip().split()
    	d2.append(r)
    c = c+case_count-1
    calc(sum_arr,case_count,d2,x+1)