#include <iostream>
using namespace std;

struct nut{
	int p,c,f;
};

bool subSum(nut [],int,nut);

int main() {
	int t;
	cin>>t;
	for(int i=0;i<t;i++)
	{
		nut sum;
		cin>>sum.p>>sum.c>>sum.f;
		int n;
		cin>>n;
		nut a[n];
		for(int i=0;i<n;i++)
		{
			cin>>a[i].p>>a[i].c>>a[i].f;
		}
		if(subSum(a,n,sum)==true)
		cout<<"Case #"<<i+1<<": yes\n";
		else
		cout<<"Case #"<<i+1<<": no\n";
		
	}
	return 0;
}

bool subSum(nut a[],int n,nut sum)
{
	if((sum.p==sum.c) && ((sum.c==sum.f) && (sum.f==0)))
	return true;
	if(n==0 && (sum.p!=0 || sum.c!=0 || sum.f!=0))
	return false;
	
	
	if (a[n-1].p > sum.p || a[n-1].c > sum.c ||a[n-1].f >sum.f)
     return subSum(a, n-1, sum);
 
 	nut sum1;
 	sum1.p=sum.p-a[n-1].p;
 	sum1.c=sum.c-a[n-1].c;
 	sum1.f=sum.f-a[n-1].f;
 	
   return subSum(a, n-1, sum) || subSum(a, n-1, sum1 );
}