#include <cstdio>
#include <vector>

bool dfs(
  int sum_p, int sum_c, int sum_f,
  int goal_p, int goal_c, int goal_f,
  int i,
  const std::vector<int> &p,
  const std::vector<int> &c,
  const std::vector<int> &f
) {
  if (i == p.size()) {
    return sum_p == goal_p && sum_c == goal_c && sum_f == goal_f;
  }
  bool with_i = dfs(
    sum_p + p[i], sum_c + c[i], sum_f + f[i],
    goal_p, goal_c, goal_f,
    i + 1,
    p, c, f
  );
  if (with_i) return true;
  return dfs(
    sum_p, sum_c, sum_f,
    goal_p, goal_c, goal_f,
    i + 1,
    p, c, f
  );
}

int main() {
  int t;
  scanf("%d", &t);
  for (int ti = 1; ti <= t; ++ti) {
    int goal_p, goal_c, goal_f;
    scanf("%d %d %d", &goal_p, &goal_c, &goal_f);
    int n;
    scanf("%d", &n);
    std::vector<int> p(n, 0);
    std::vector<int> c(n, 0);
    std::vector<int> f(n, 0);
    for (int i = 0; i < n; ++i) {
      scanf("%d %d %d", &p[i], &c[i], &f[i]);
    }
    bool is_possible = dfs(
      0, 0, 0, // sum
      goal_p, goal_c, goal_f,
      0, // i
      p, c, f
    );
    printf("Case #%d: %s\n", ti, is_possible ? "yes" : "no");
  }
}
