import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;


public class Abc2 {
	
	
	int[] column;//this is the first column
	int[] column2;
	int[] column3;
	int n;
	boolean flag2;
	boolean flag3;
	int index;
	int plimit,climit,flimit;
	Abc2(int l1,int l2,int l3,int[] c1,int[] c2,int[] c3,int index2)
	{
		plimit=l1;
		climit=l2;
		flimit=l3;
		flag2=false;
		flag3=false;
		column=c1;
		column2=c2;
		column3=c3;
		index=index2+1;
		n=column.length;
	}
	
	//int[] combinations=new int[n];
	void first_column()
	{
		
		int[] indexs=new int[n];
		int i;
		int j=0;
		boolean flag=false;
		for(i=1;i<Math.pow(2, n);i++)//to generate binary numbers
		{
			int binary[]=generate_binary(i);
			//System.out.println(binary[0]+""+binary[1]+""+binary[2]);
			int sum=0;
			for(int k=0;k<n;k++)
			{
				if(binary[k]==1)
				{
					sum=sum+column[k];
					indexs[j]=k+1;
					j++;
					//do something
				}	
			}
			j=0;
			//check if sum=100 here and if so send to method for second column
			if(sum==plimit)//REPLACE with limit of proteins
			{
				//System.out.println("check1");
				//send to method for second column	
				second_column(indexs);
				flag=true;
				for(int z=0;z<n;z++)
				{
					indexs[z]=0;
				}
			}
			for(int z=0;z<n;z++)
			{
				indexs[z]=0;
			}
			sum=0;
			
		}
		if(flag==false)
		{
			System.out.println("Case #"+index+":"+" "+"no");//need to go to next case from here...how?
			return;
			
		}
		else{
			check_second();
			if(flag2)
			 check_third();
		}
		
	}
	private void second_column(int[] indexs) {
		int sum2=0;
		//System.out.println(indexs[0]+""+indexs[1]+""+indexs[2]+""+indexs[3]+""+indexs[4]);
		for(int i=0;i<n;i++)
		{
			if(indexs[i]!=0)
			{
				sum2+=column2[(indexs[i]-1)];
			}
			
		}
		if(sum2==climit)//REPLACE with limit of carbs
		{
			//System.out.println("check1");
			third_column(indexs);
			flag2=true;
		}
		
		
	}
	void check_second()
	{
		if(flag2==false)
		{
			System.out.println("Case #"+index+":"+" "+"no");//need to go to next case from here
		}
	}
	private void third_column(int[] indexs) {
	//	System.out.println("in third column method");
		int sum3=0;
		
		for(int i=0;i<n;i++)
		{
			if(indexs[i]!=0)
			{
				sum3+=column3[(indexs[i]-1)];
			}
			
			//System.out.print(indexs[i]);
		}
		if(sum3==flimit)//REPLACE with limit of carbs
		{
			System.out.println("Case #"+index+":"+" "+"yes");
			
			flag3=true;
			return;
			//need to go to next case from here
			
		}
	
		
	}
	void check_third()
	{
		if(flag3==false)
		{
			System.out.println("Case #"+index+":"+" "+"no");
		}
	}
	int[] generate_binary(int i)
	{
		int[] temp=new int[n];
		int k=n-1;
		while(i!=0)
		{
			temp[k]=i%2;
			i=i/2;
			k--;
		}
		
		return temp;
	}
	public static void main(String args[])
	{
		File F=new File("new_years_resolution.txt");
		//File F=new File("example.txt");
		try {
			Scanner sc=new Scanner(F);
			int no_of_cases=sc.nextInt();
			Abc2[] A=new Abc2[no_of_cases];
		for(int i=0;i<no_of_cases;i++)
			{
				int limit1=sc.nextInt();
				//System.out.println(temp);
				int limit2=sc.nextInt();
				//System.out.println(temp2);
				int limit3=sc.nextInt();
				//System.out.println(temp3);
				int no_foods=sc.nextInt();
				int[] c1=new int[no_foods];
				int[] c2=new int[no_foods];
				int[] c3=new int[no_foods];
				for(int k=0;k<no_foods;k++)
				{
					c1[k]=sc.nextInt();
					c2[k]=sc.nextInt();
					c3[k]=sc.nextInt();
				}
				//System.out.println(c1[0]+""+c2[1]+""+c3[2]);
				A[i]=new Abc2(limit1,limit2,limit3,c1,c2,c3,i);
				A[i].first_column();
			}
			sc.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	

}
