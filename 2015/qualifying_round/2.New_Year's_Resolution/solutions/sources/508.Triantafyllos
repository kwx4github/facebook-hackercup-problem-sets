#/bin/bash/python

from numpy import array as ar
from numpy import zeros
from itertools import combinations as comb
import time

def checkperm(s,n,p,m):

    a = zeros(3)

    #print p

    for k in p:
        a = a + n[k]

    #print a 
    
    #if (sum( n[list(p)] )==s).all():
    if (a==s).all():
        return True
    
    return False
    

def solve(s,n):

    #print n

    m = len(n)

    ans = False

    for i in range(1,m+1):
        for p in comb(range(m),i):
            if checkperm(s,n,p,i):
                return True 
                

    return ans

T = int(raw_input())

for i in range(T):
    s = ar(map(int,raw_input().split()))
    N = int(raw_input())
    n = []
    for _ in range(N):
        n.append(ar(map(int,raw_input().split())))
    #n = ar()
    #start_time = time.time()
    sol = solve(s,n)
    #elapsed_time = time.time() - start_time
    #print elapsed_time
    solstr = 'yes' if sol else 'no'
    print 'Case #%d: %s' %(i+1, solstr)

