#include <stdio.h>
#include <math.h>
int set[20];
int c[20];
int p[20];
int f[20];

int sum1[10000000];
int sum2[10000000];
int sum3[10000000];

int sum;
void printPowerSet(int *set, int set_size,int a)
{

    unsigned int pow_set_size = pow(2, set_size);
    int counter, j,sum,k=0;


    for(counter = 0; counter < pow_set_size; counter++)
    {
        sum=0;
      for(j = 0; j < set_size; j++)
       {

          if(counter & (1<<j))
            sum=sum+set[j];

       }
       if(a==1)
       {
           sum1[k]=sum;
       k++;
       }
       if(a==2)
       {
           sum2[k]=sum;
       k++;
       }
       if(a==3)
       {
           sum3[k]=sum;
       k++;
       }



    }

}


int main()
{   int i,n,t,n1,n2,n3,k,subset,flag;
    scanf("%d",&t);

    for(k=1;k<=t;k++)
    {   flag=0;

        scanf("%d%d%d",&n1,&n2,&n3);
    scanf("%d",&n);
    subset=pow(2,n);
    for(i=0;i<n;i++)
    {
        scanf("%d%d%d",&p[i],&c[i],&f[i]);
    }
    printPowerSet(p, n,1);

    printPowerSet(c, n,2);
    printPowerSet(f, n,3);
    for(i=0;i<subset;i++)
    {
        if(sum1[i]==n1 && sum2[i]==n2 && sum3[i]==n3)
        {
            flag=1;
            break;
        }
    }
    if(flag==1)
    printf("Case #%d: yes\n",k);
    else
    printf("Case #%d: no\n",k);

    }
    return 0;
}
