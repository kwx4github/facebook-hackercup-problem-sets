def subset_sum(numbers, target, partial=[]):
    s = sum(partial)
    l = []
    
    if s == target: 
        l.append(partial)
        return l
        
    if s >= target:
        return  []
    
    for i in range(len(numbers)):
        n = numbers[i]
        remaining = numbers[i+1:]
        for x in subset_sum(remaining, target, partial + [n]):
            l.append(x)

    return l


def check(solList, oldList, target, newList):
    l = []
    lastIndex = 0
    for sol in solList:
        l.append(lastIndex + oldList[lastIndex:].index(sol))
        lastIndex = l[-1]

    #print(l)

    summe = 0
    for i in l:
        summe += newList[i]

    return summe == target

file = open('input.txt', 'r')
content = file.readlines()

problems = int(content.pop(0))
content

for i in range(problems):
    ggg = content.pop(0).split(" ")
    #print(ggg)
    gp = int(ggg.pop(0))
    gc = int(ggg.pop(0))
    gf = int(ggg.pop(0))
    
    number = int(content.pop(0))
    p = []
    c = []
    f = []
    
    for j in range(number):    
        ggg = content.pop(0).split(" ")
        p.append(int(ggg.pop(0)))
        c.append(int(ggg.pop(0)))
        f.append(int(ggg.pop(0)))
    #print(p)
    #print(c)
    #print(f)

    sol = subset_sum(p, gp)
    #print(sol)


    yes = False
    for s in sol:
        cCheck = check(s, p, gc, c)
        fCheck = check(s, p, gf, f)
        if cCheck and fCheck:
            yes = True

    if yes:
        print("Case #" + str(i+1) + ": yes")
    else:
        print("Case #" + str(i+1) + ": no")

    
    
