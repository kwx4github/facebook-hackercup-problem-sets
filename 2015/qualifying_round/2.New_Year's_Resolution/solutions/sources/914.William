package Resolution;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner;

public class Solution {

	final static String PROBLEM_NAME = "new_years_resolution";

	int[][] b;

	boolean recurse(int n, int f, int c, int p) {
		int cf, cc, cp;

		if (f == 0 && c == 0 && p == 0)
			return true;
		if (n == 0)
			return false;

		cf = b[n - 1][0];
		cc = b[n - 1][1];
		cp = b[n - 1][2];

		if (cf > f || cc > c || cp > p)
			return recurse(n - 1, f, c, p);

		return recurse(n - 1, f, c, p) || recurse(n - 1, f - cf, c - cc, p - cp);
	}

	void solve(Scanner sc, PrintWriter pw) {

		int i;
		int f = sc.nextInt();
		int c = sc.nextInt();
		int p = sc.nextInt();
		sc.nextLine();
		int n = sc.nextInt();
		sc.nextLine();
		b = new int[n][3];

		for (i = 0; i < n; i++) {
			b[i][0] = sc.nextInt();
			b[i][1] = sc.nextInt();
			b[i][2] = sc.nextInt();
			sc.nextLine();
		}

		pw.println(recurse(n, f, c, p) ? "yes" : "no");
	}

	public static void main(String[] args) throws Exception {
		String path = "src/" + Solution.class.getPackage().getName().replace('.', '/') + '/';
		Scanner sc = new Scanner(new FileReader(path + PROBLEM_NAME + ".txt"));
		PrintWriter pw = new PrintWriter(new FileWriter(path + PROBLEM_NAME + ".out"));
		int caseCnt = sc.nextInt();
		sc.nextLine();
		for (int caseNum = 0; caseNum < caseCnt; caseNum++) {
			System.out.println("Processing test case " + (caseNum + 1));
			pw.print("Case #" + (caseNum + 1) + ": ");
			new Solution().solve(sc, pw);
		}
		pw.flush();
		pw.close();
		sc.close();
	}
}
