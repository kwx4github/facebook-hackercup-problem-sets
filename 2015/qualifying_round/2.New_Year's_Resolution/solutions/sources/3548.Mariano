#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
#define dprint(v) cerr << #v"=" << v << endl //;)
#define forr(i,a,b) for(int i=(a); i<(b); i++)
#define forn(i,n) forr(i,0,n)
#define dforn(i,n) for(int i=n-1; i>=0; i--)
#define forall(it,v) for(typeof(v.begin()) it=v.begin();it!=v.end();++it)
#define sz(c) ((int)c.size())
#define zero(v) memset(v, 0, sizeof(v))
#define fst first
#define snd second
#define mkp make_pair
#define pb push_back
typedef long long ll;
typedef pair<int,int> ii;

int G[4],N,C[25][4],dp[4194304][4],n;



int main() {
	//~ freopen("b.in", "r", stdin);
	//~ freopen("b.out", "w", stdout);
	int T;
	
	
	cin >> T;
	forn(tc,T){
		forn(i,3) cin >> G[i];
		cin >> n;
		forn(i,n) forn(j,3) cin >> C[i][j];
		forn(i,3) dp[0][i]=0;
		forr(bm,1,(1<<n)) {
			int p = __builtin_ffs(bm)-1;
			forn(i,3) dp[bm][i] = dp[ bm - (1<<p) ][i] + C[p][i];
		}
		bool f = false;
		forn(bm,(1<<n)) {
			bool p = true;
			forn(i,3) if (dp[bm][i]!=G[i]) {p=false; break;}
			if (p) {f=true; break;}
		}
		
		//~ forn(i,3) cerr << dp[16][i] << endl;
		cout << "Case #"<<tc+1<< ": " << (f?"yes":"no") << endl;
	}
    return 0;
}
