#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <ctime>
#include <cstring>
#include <cassert>
#include <bitset>
#include <sstream>
#include <queue>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)
#define pb push_back
#define mp make_pair
#define last(a) int(a.size() - 1)
#define all(a) a.begin(), a.end()
#define seta(a,x) memset (a, x, sizeof (a))
#define I (int)

typedef long long int64;

typedef pair<pair <int, int>, int> pii;
#define a first.first
#define b first.second
#define c second

typedef long double ldb;

const long double eps = 1e-9;
const int inf = (1 << 30) - 1;
const int64 inf64 = ((int64)1 << 62) - 1;
const long double pi = 3.1415926535897932384626433832795;

template <class T> T sqr (T x) {return x * x;}
template <class T> T abs (T x) {return x < 0 ? -x : x;}

int n;
pii e[40];

void solve() {
	pii s;
	cin >> s.a >> s.b >> s.c;
	cin >> n;
	forn(i, n)
		cin >> e[i].a >> e[i].b >> e[i].c;
	bool res = false;
	forn(i, 1 << n) {
		pii now = mp(mp(0, 0), 0);
		forn(j, n) 
			if (i & (1 << j)) {
				now.a += e[j].a;
				now.b += e[j].b;
				now.c += e[j].c;
		}
		if (now == s) {
			res = true;
			break;
		}
	}
	if (res)
		puts("yes");
	else
		puts("no");
}

int main ()
{
	freopen("input.txt", "rt", stdin);
//	freopen("output.txt", "wt", stdout);
	


	int tst;
	cin >> tst;
	forn(i, tst) {
		printf("Case #%d: ", i + 1);
		solve();
	}

	return 0;
}
