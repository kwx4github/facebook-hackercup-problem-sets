#include <bits/stdc++.h>
using namespace std;

struct Food {
    int a, b, c;
    
    void get() {
        scanf("%d%d%d", &a, &b, &c);
    }
    
    Food() : a(0), b(0), c(0) {}
    Food(int a, int b, int c) : a(a), b(b), c(c) {}
    
    Food operator += (Food const& other) {
        a += other.a;
        b += other.b;
        c += other.c;
        return *this;
    }
    
    Food operator- () const {
        return Food(-a, -b, -c);
    }
    
    Food operator -= (Food const& other) {
        return this->operator+=(-other);
    }
    
    bool operator == (Food const& other) {
        return (a == other.a && b == other.b && c == other.c);
    }
        
} t[32], target;

int n;

bool is_equal(int mask) {
    Food sum;
    for(int i = 0; i < n; ++i) 
        if(mask & (1 << i))
            sum += t[i];
    return sum == target;
}

bool spr() {
    for(int i = 0; i < (1 << n); ++i)
        if(is_equal(i))
            return 1;
    return 0;
}

void prog() {
    target.get();
    scanf("%d", &n);
    for(int i = 0; i < n; ++i)
        t[i].get();
    printf("%s\n", spr() ? "yes" : "no");
}

int main() {
    int _;
    scanf("%d", &_);
    for(int i = 1; i <= _; ++i) {
        printf("Case #%d: ", i);
        prog();
    }
    return 0;
}