#include <iostream>
#include <vector>
#include <ctime>
#include <cstdio>
#include <cstdlib>

using namespace std;

vector<vector<int>> foods;
vector<int> initial;

bool go(int x, int n, int included) {
	if (x < n) {
		bool a = go(x + 1, n, included | (1 << x));
		bool b = go(x + 1, n, included);
		return a || b;
	} else {
		int A = 0,
			B = 0,
			C = 0;
		for (int i = 0; i < n; i++) {
			if (included & (1 << i)) {
				A += foods[i][0];
				B += foods[i][1];
				C += foods[i][2];
			}
		}
		if (A == initial[0] && B == initial[1] && C == initial[2]) {
#ifdef LOCAL
			cout << "FOUND!" << endl;
			cout << "initial: " << initial[0] << " " << initial[1] << " " << initial[2] << endl;
			cout << "found subsequence:" << endl;
			for (int i = 0; i < n; i++) {
				if (included & (1 << i)) {
					cout << foods[i][0] << " " << foods[i][1] << " " << foods[i][2] << endl;
				}
			}
			cout << "SUMS:" << endl;
			cout << A << " " << B << " " << C << endl;
#endif
			return true;
		}

		return false;
	}
}

int main() {
	freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	int T; cin >> T;
	initial = vector<int>(3);
	for (int t = 1; t <= T; t++) {
		for (int i = 0; i < 3; i++)
			cin >> initial[i];
		int foods_count; cin >> foods_count;
		foods = vector<vector<int>>(foods_count, vector<int>(3, 0));
		for (int i = 0; i < foods_count; i++) {
			for (int j = 0; j < 3; j++)
				cin >> foods[i][j];
		}
		bool can = go(0, foods_count, 0);
		cout << "Case #" << t << ": ";
		(can) ? cout << "yes" : cout << "no";
		cout << endl;
	}
	cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
	return 0;
}