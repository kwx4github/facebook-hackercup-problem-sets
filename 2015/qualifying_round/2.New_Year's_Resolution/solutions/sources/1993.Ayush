#include <bits/stdc++.h>

using namespace std;


struct node{
    int p, c, f;
};

node change(node ch, node a)
{
    node ret;
    ret.p = ch.p - a.p;
    ret.f = ch.f - a.f;
    ret.c = ch.c - a.c;
	return ret; 
}

node blah[25], ch;
bool isSubsetSum(int n, node ch)
{
	if( n < 0)
	{
		return false;
	}
    if( ch.c == 0 && ch.f == 0 && ch.p == 0)
    {
    	return true;
    }
   if (n == 0 && (ch.c != 0 && ch.f != 0 && ch.p != 0))
     return false;
 
   if ((blah[n-1].c > ch.c) || (blah[n-1].p > ch.p) || (blah[n-1].f > ch.f))
     return isSubsetSum(n-1, ch);
 
   
   return isSubsetSum(n-1, ch) || isSubsetSum(n-1, change(ch, blah[n-1]));
}

#define Sc(x) scanf("%d", &x)
int main()
{
    freopen("in.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int t, tc = 1, n, i, j, k, gp, gc, gf, p[25], c[25], f[25];
    Sc(t);
    while(t--)
    {
        printf("Case #%d: ", tc++);
        Sc(gp);Sc(gc);Sc(gf);
        Sc(n);
        ch.p = gp;
        ch.f = gf;
        ch.c = gc;
        int ans = 0;
        for(i = 0; i < n; i++)
        {
            Sc(p[i]);Sc(c[i]);Sc(f[i]);
            blah[i].p = p[i];
            blah[i].f = f[i];
            blah[i].c = c[i];
            if(p[i] == gp && c[i] == gc && f[i] == gf)
            {
                ans = 1;
            }

        }
        if(!ans){
            if(isSubsetSum(n, ch))
                ans = 1;
        }

        done:;
        if(ans)
        {
            printf("yes\n");
        }
        else
        {
            printf("no\n");
        }
    }
    return 0;
}
