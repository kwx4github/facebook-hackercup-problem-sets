import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;


public class Two {

	/**
	 * 
t = input()

for i in range(t):
    goal = [int(x) for x in raw_input().split()]
    n = input()
    lst = []
    for j in range(n):
        lst += [[int(x) for x in raw_input().split()]]
    boundary = 2 ** n
    found = False
    for j in range(boundary):
        if found:
            break
        mask = 1
        count = 0
        cur = [0, 0, 0]
        
        while mask <= j and not found:
            if (mask & j) != 0:
                cur[0] += lst[count][0]
                cur[1] += lst[count][1]
                cur[2] += lst[count][2]
            if cur[0] == goal[0] and cur[1] == goal[1] and cur[2] == goal[2]:
                found = True
                break;
            if cur[0] > goal[0] or cur[1] > goal[1] or cur[2] > goal[2]:
                break
            count += 1
            mask = mask << 1
    if found:
        print "Case #%d: yes" % (i + 1)
    else:
        print "Case #%d: no" % (i + 1)
            
	 * @param args
	 * @throws FileNotFoundException 
	 */
	public static void main(String[] args) throws FileNotFoundException {
		Scanner s = new Scanner(new File("C:/Users/Oleg/Desktop/hackercup/new_years_resolution.txt"));
		PrintWriter pw = new PrintWriter(System.out);
		int t = Integer.parseInt(s.nextLine());
		
		for (int i = 1; i <= t; i++) {
			String[] goal_string = s.nextLine().split(" ");
			int[] goal = {Integer.parseInt(goal_string[0]),
					Integer.parseInt(goal_string[1]),
					Integer.parseInt(goal_string[2])};
			int n = Integer.parseInt(s.nextLine());
			int[][] lst = new int[n][3];
			for (int j = 0; j < n; j++) {
				String[] line = s.nextLine().split(" ");
				lst[j][0] = Integer.parseInt(line[0]);
				lst[j][1] = Integer.parseInt(line[1]);
				lst[j][2] = Integer.parseInt(line[2]);
			}
			int boundary = 1 << n;
			boolean found = false;
			for (int j = 0; j < boundary && !found; j++) {
				int mask = 1;
				int count = 0;
				int[] cur = {0,0,0};
				while (mask <= j && !found) {
					if ((mask & j) != 0) {
						cur [0] += lst[count][0];
						cur [1] += lst[count][1];
						cur [2] += lst[count][2];
					}
					if (cur[0] == goal[0] && cur[1] == goal[1] && cur[2] == goal[2]) {
						found = true;
						break;
					}
					if (cur[0] > goal[0] || cur[1] > goal[1] || cur[2] > goal[2]) {
						break;
					}
					mask <<= 1;
					count += 1;
				}
			}
			
			if (found) {
				pw.format("Case #%d: yes\n", i);
			} else {
				pw.format("Case #%d: no\n", i);
			}
		}
		pw.close();
		s.close();

	}

}
