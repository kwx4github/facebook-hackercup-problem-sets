//#pragma comment(linker, "/STACK:512000000")
#pragma comment(linker, "/STACK:5000000000")
#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <climits>
#include <cassert>
#include <string>
#include <map>
#include <set>
#include <vector>
#include <algorithm>
#include <functional>
#include <bitset>
#include <stack>
#include <cfloat>
#include <ctime>
#include <queue>
#include <deque>
#include <numeric>
#include <memory.h>

#define PI 3.14159265358979323846
#define ull unsigned long long int
#define ll long long int
#define EPS 1e-9
#define pb push_back
#define EOS(c) (c != EOF && c != '\0' && c != '\n' && c != ' ')
#define oo 1000000005
#define ALL(v) v.begin(), v.end()
#define mp make_pair
#define sqr(a) (a) * (a)
#define traktorista 300
int size;
typedef double dbl;

using namespace std;

#define FILES "sort"
//#define OUT "true"

template<class telem>telem GCD(telem a, telem b)
{
	return b ? GCD(b, a % b) : a;
}

template<class telem>telem LCM(telem a, telem b)
{
	return a / GCD(a, b) * b;
}

template <class telem> istream& operator >> (istream& cin, pair<telem, telem>& in)
{
	cin >> in.first >> in.second;
	return cin;
}

template <class telem> ostream& operator << (ostream& cout, pair<telem, telem> out)
{
	cout << out.first << ' ' << out.second;
	return cout;
}

template <class telem> istream& operator >> (istream& cin, vector<telem>& in)
{
	in.resize(size);

	for(int i = 0; i < size; i++)
	{
		cin >> in[i];
	}

	return cin;
}

template <class telem> ostream& operator << (ostream& cout, vector<telem> out)
{
	size = out.size();

	for(int i = 0; i < size; i++)
	{
		cout << out[i] << ' ';
	}

	return cout;
}

template <class telem> istream& operator >> (istream& cin, telem* in)
{
	for(int i = 0; i < size; i++)
	{
		cin >> in[i];
	}

	return cin;
}

/*template <class telem> ostream& operator << (ostream& cout, telem* out)
{
for(int i = 0; i < size; i++)
{
cout << out[i] << ' ';
}

return cout;
}*/

int T;
int a[3];
int mas[40][3];
int sum[3];
int n;
string ans[2] = {": no\n", ": yes\n"};

int main()
{

#ifndef ONLINE_JUDGE
#ifdef OUT
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout); 
#endif

#ifdef FILES
	freopen(FILES".in", "r", stdin);
	freopen(FILES".out", "w", stdout); 
#endif
#endif

	//ios_base::sync_with_stdio(false);
	srand(time(NULL));
	time_t start = clock();

	cin >> T;

	for(int t = 1; t <= T; t++)
	{
		size = 3;
		cin >> a;
		cin >> n;

		for(int i = 0; i < n; i++)
		{
			cin >> mas[i];
		}

		int p = 1 << n;

		int lp = false;

		for(int i = 0; i < p; i++)
		{
			memset(sum, 0, sizeof sum);

			for(int j = 0; j < n; j++)
			{
				if(i & (1 << j))
				{
					for(int k = 0; k < 3; k++)
						sum[k] += mas[j][k];
				}
			}

			if(sum[0] == a[0] && sum[1] == a[1] && sum[2] == a[2])
			{
				lp = true;
				break;
			}
		}
		
		cout << "Case #"  << t << ans[lp];
	}

#ifndef ONLINE_JUDGE
	fprintf(stderr, "\n%0.3lf\n", (clock() - start) * 1.0 / CLOCKS_PER_SEC);
#endif

	return 0;
}