//solution by Wsl_F
#include <bits/stdc++.h>
#include <iostream>
#include <fstream>
#include <sstream>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <algorithm>
#include <functional>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <stdlib.h>
#include <stdio.h>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <bitset>
#include <numeric>
#include <cassert>
#include <time.h>
#include <ctime>
#include <memory.h>
#include <stdint.h>
#include <complex>
#include <utility>
#include <climits>
#include <cctype>
#include <x86intrin.h>



using namespace std;
#pragma comment(linker, "/STACK:1024000000,1024000000")


typedef long long LL;
typedef unsigned long long uLL;
typedef double dbl;
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<LL> vll;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;

#define mp(x,y)  make_pair((x),(y))
#define pb(x)  push_back(x)
#define sqr(x) ((x)*(x))

LL P,C,F;
int n;
LL p[25];
LL c[25];
LL f[25];
int power[25];

bool check (int mask)
{
    LL sumP,sumC,sumF;
    sumP= 0; sumC= 0; sumF= 0;
    for (int i=0; i<n; i++)
        if ((mask&power[i])!=0)
        {
            sumP+= p[i];
            sumC+= c[i];
            sumF+= f[i];
        }

    return (sumP==P)&&(sumC==C)&&(sumF==F);
}

void solve()
{
    cin>>P>>C>>F;
    cin>>n;
    for (int i=0; i<n; i++)
        cin>>p[i]>>c[i]>>f[i];

    int maxMask= power[n];
    for (int mask= 0; mask<maxMask; mask++)
        if (check(mask)) { cout<<"yes"<<endl; return; }

    cout<<"no"<<endl;
}

int main()
{
 ios_base::sync_with_stdio(0);
 cin.tie(0);
 // LL a[110];
 // memset(a,0,sizeof(a));

 freopen("input.txt","r",stdin);
 freopen("output.txt","w",stdout);
 //cout<<fixed;
 //cout<<setprecision(9);

 srand(__rdtsc());


 power[0]= 1;
 for (int i= 1; i<25; i++)
    power[i]= power[i-1]<<1;

 int T;
 cin>>T;

 for (int tc= 1; tc<=T; tc++)
 {
     cout<<"Case #"<<tc<<": ";
     solve();
 }
 return 0;
}


