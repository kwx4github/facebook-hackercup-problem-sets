import sys
from itertools import combinations, chain


def powerset(iterable):
    xs = list(iterable)
    return chain.from_iterable(combinations(xs, n) for n in range(len(xs)+1))


def possible(target, food_types, p, c, f):
    for sol in powerset(range(food_types)):
        total = [0, 0, 0]
        for i in sol:
            total[0] += p[i]
            total[1] += c[i]
            total[2] += f[i]

        if tuple(total) == target:
            return True

    return False


if __name__ == '__main__':
    input_file_name = sys.argv[1]
    output_file_name = sys.argv[2]

    input_file = open(input_file_name, 'r')
    output_file = open(output_file_name, 'w')

    data = input_file.readlines()

    t = int(data[0])
    line_index = 1
    for i in range(t):
        target_p, target_c, target_f = [int(x) for x in data[line_index].split()]
        food_types = int(data[line_index+1])
        line_index += 2
        p, c, f = [], [], []
        for j in range(food_types):
            pi, ci, fi = [int(x) for x in data[line_index].split()]
            p.append(pi)
            c.append(ci)
            f.append(fi)

            line_index += 1

        if possible((target_p, target_c, target_f), food_types, p, c, f):
            print >> output_file, 'Case #{}: yes'.format(i+1)
        else:
            print >> output_file, 'Case #{}: no'.format(i+1)

    input_file.close()
    output_file.close()