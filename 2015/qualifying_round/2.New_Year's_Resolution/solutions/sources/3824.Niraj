import sys
sys.setrecursionlimit(10000)
cl = []
def subsum(numbers, target, partial=[], ind=[],j = -1):
    s = sum(partial)

    if s == target: 
        # print "sum(%s)=%s" % (partial, target)
        # print ind
        cl.append(ind)
    if s >= target:
        return  

    for i in xrange(len(numbers)):
        j += 1
        n = numbers[i]
        remaining = numbers[i+1:]
        subsum(remaining, target, partial + [n],ind + [j],j)
def solve(r,c,p,f):
    subsum(c,r[0])
    if len(cl) == 0:
        return 'no'
    else:
        for i in cl:
            sp,sf = 0,0
            for j in i:
                sp += p[j]
                sf += f[j]
            if sp == r[1] and sf == r[2]:
                return 'yes'
        return 'no'

for _ in xrange(input()):
    r = map(int,raw_input().split())
    n = input()
    c,p,f = [],[],[]
    for i in xrange(n):
        w = map(int,raw_input().split())
        c.append(w[0])
        p.append(w[1])
        f.append(w[2])
    print "Case #%d: %s" %(_+1,solve(r,c,p,f))
    cl = []