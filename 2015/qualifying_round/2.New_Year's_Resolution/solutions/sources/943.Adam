import java.io.*;
import java.util.*;

class Resolution
{
	public static void main(String[] args) throws Exception
	{
		Scanner in = new Scanner(System.in);
		int nData = in.nextInt();
		
		for (int asdf = 0; asdf < nData; asdf++)
		{
			Food target = new Food();
			target.p = in.nextInt();
			target.c = in.nextInt();
			target.f = in.nextInt();
			
			int nFood = in.nextInt();
			ArrayList<Food> foods = new ArrayList<Food>();
			
			for (int i = 0; i < nFood; i++)
			{
				Food food = new Food();
				food.p = in.nextInt();
				food.c = in.nextInt();
				food.f = in.nextInt();
				foods.add(food);
			}
			
			Collections.sort(foods);
			
			boolean answer = solve(foods, target.p, target.c, target.f);
			
			System.out.println("Case #" + (asdf + 1) + ": " + (answer ? "yes" : "no"));
		}
	}
	
	public static boolean solve(ArrayList<Food> foods, int targetp, int targetc, int targetf)
	{
		if ((targetp < 0) || (targetc < 0) || (targetf < 0)) return false;		//overate
		if (foods.size() == 0) return false;										//ran out of food
		if ((targetp == 0) && (targetc == 0) && (targetf == 0)) return true;		//success!!
		
		boolean able = false;
		
		for (Food f : foods)
		{
			able |= solve(foods, targetp - f.p, targetc - f.c, targetf - f.f);
		}
		
		return able;
	}
}

class Food implements Comparable<Food>
{
	int p;
	int c;
	int f;
	
	public int compareTo(Food f)
	{
		return f.p - p;
	}
	
	public String toString()
	{
		return "" + p + " " + c + " " + f;
	}
}