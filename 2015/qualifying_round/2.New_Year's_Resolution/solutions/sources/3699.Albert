#include <functional>
#include <algorithm>
#include <iostream>
#include <numeric>
#include <cassert>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cstdio>
#include <vector>
#include <ctime>
#include <queue>
#include <set>
#include <map>
#define db(v) cout << #v << ": " << v << endl
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define fore(i, b, e) for (int i = (int)(b); i <= (int)(e); ++i)
#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; --i)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define taskname "XXXXXXXXXXXXXXXXXXXXXXXX" // CHANGE!!!
typedef long long i64;
const int maxn = 1000007;

using namespace std;

int A[21][3];

int main()
{
#ifdef HOME
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    int T; cin >> T;
    fore(t, 1, T)
    {
        int need[3];
        forn(k, 3)
            cin >> need[k];

        int n; cin >> n;
        forn(i, n) forn(k, 3)
            cin >> A[i][k];

        bool can = false;
        forn(mask, 1 << n)
        {
            int sum[3] = {0, 0, 0};
            forn(j, n) if (mask & (1 << j)) forn(k, 3)
                sum[k] += A[j][k];
            if (sum[0] == need[0] && sum[1] == need[1] && sum[2] == need[2])
                can = true;
        }
        cout << "Case #" << t << ": " << (can ? "yes" : "no") << '\n';
    }

#ifdef HOME
    cerr << "\nTime elapsed: " << clock() / 1000 << " ms" << endl;
#endif
    return 0;
}
