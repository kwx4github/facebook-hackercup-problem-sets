import java.util.*;
import java.io.*;

public class B {
    public static void main(String[] args) {
        new B().run();
    }

    BufferedReader br;
    StringTokenizer in;
    PrintWriter out;

    public String nextToken() throws IOException {
        while (in == null || !in.hasMoreTokens())
            in = new StringTokenizer(br.readLine());
        return in.nextToken();
    }

    public int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }

    public double nextDouble() throws IOException {
        return Double.parseDouble(nextToken());
    }

    public void solve() throws IOException {
        int[] m = new int[]{nextInt(), nextInt(), nextInt()};
        int n = nextInt();

        int[][] x = new int[n][3];
        for (int i = 0; i < n; i++) {
            x[i] = new int[]{nextInt(), nextInt(), nextInt()};
        }

        boolean good = false;
        for (int mask = 0; mask < 1 << n; mask++) {
            int[] val = Arrays.copyOf(m, m.length);
            for (int i = 0; i < n; i++) {
                if (((mask >> i) & 1) != 0) {
                    for (int j = 0; j < 3; j++) {
                        val[j] -= x[i][j];
                    }
                }
            }

            int sum = 0;
            for (int i = 0; i < 3; i++) {
                sum += val[i];
            }

            good |= sum == 0;
        }

        if (good)
            out.println("yes");
        else
            out.println("no");

    }

    public void run() {
        try {
            br = new BufferedReader(new FileReader("input.txt"));
            out = new PrintWriter("output.txt");

            int t = nextInt();
            for (int i = 0; i < t; i++) {
                System.err.println("Test case " + (i + 1));
                out.print("Case #" + (i + 1) + ": ");
                solve();
            }

            out.close();
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
    }
}
