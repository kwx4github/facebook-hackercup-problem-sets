var fs = require('fs');


fs.readFile('test.txt','UTF-8', function(err, data){
		var split = data.split('\n');
		var numOfTestCases = split[0];
		var activeLine = 0;

		function normEqual(value, norm){
			return (value.gp == norm.Gp && value.gc == norm.Gc && value.gf == norm.Gf);
		}

		function addValue(value, addValue){
			return {
				gp: value.gp + addValue.gp,
				gc: value.gc + addValue.gc,
				gf: value.gf + addValue.gf
			}
		}


		function checkValue(value, index, array, target_v){    
		    if (normEqual(value, target_v)) return true;
		    
		    if (index == array.length) return false;

		    var nexdIndex = index + 1;
		    return (checkValue(addValue(value, array[index]), nexdIndex, array, target_v) || checkValue(value, nexdIndex, array, target_v));
		}


		if ( numOfTestCases < 1 || numOfTestCases > 20 )
			return;

		for (var i = 1; i <= numOfTestCases; i++){
			activeLine++;
			var dailyNorm = split[activeLine].split(' ');

			var norm = {
				Gp : parseInt(dailyNorm[0]),
				Gc : parseInt(dailyNorm[1]),
				Gf : parseInt(dailyNorm[2])
			};

			activeLine++;

			var numberOfElements = split[activeLine];
			var products = [];
	
			for (var j = 0; j < numberOfElements; j++){
				activeLine++;

				var elements = split[activeLine].split(' ');

				var product = {
					gp: parseInt(elements[0]),
					gc: parseInt(elements[1]),
					gf: parseInt(elements[2])
				};

				products.push(product);
			}

			var result = checkValue({gp:0, gc: 0, gf: 0}, 0, products, norm);

			if (result){
				console.log('Case #' + i + ': yes');
			} else {
				console.log('Case #' + i + ': no');
			}
		}
});