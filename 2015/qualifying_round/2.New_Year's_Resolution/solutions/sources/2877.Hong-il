#include <cstdio>
#include <cstring>
#include <vector>
#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
using namespace std;

struct nutritionFact
{
	int gp, gc, gf;
//	nutritionFact(int p, int c, int f):gp(p), gc(c), gf(f){}
};

bool food[20];
nutritionFact nf[20];
int n;
bool solve(int k, int p, int c, int f)
{
	if (n == k)
	{
		if (p == 0 && c == 0 && f == 0)
			return true;
		else 
			return false;
	}
	if ( p < 0 || c < 0 || f < 0)
		return false;

	bool ret = false;
	food[k] = true;
	ret |= solve(k+1, p - nf[k].gp, c - nf[k].gc, f - nf[k].gf);
	food[k] = false;
	ret |= solve(k+1, p, c, f);
	return ret;
}

int main()
{
	FILE* fin = freopen("in.txt","rt", stdin);
	FILE* fout = freopen("out.txt","wt", stdout);
	int c;
	scanf("%d",&c);
	FOR(xx,0,c)
	{
		int gp, gc, gf;
		scanf("%d %d %d", &gp, &gc, &gf);
		scanf("%d", &n);
		memset(food, 0, sizeof(food));
		memset(nf, 0, sizeof(nf));
		FOR(i,0,n)
		{
			int p,c,f;
			scanf("%d %d %d", &p, &c, &f);
			nf[i].gp = p;
			nf[i].gc = c;
			nf[i].gf = f;
		}

		if (solve(0, gp, gc, gf))
			printf("Case #%d: yes\n", xx+1);
		else
			printf("Case #%d: no\n", xx+1);
	}
	fclose(fin);
	fclose(fout);
	return 0;
}