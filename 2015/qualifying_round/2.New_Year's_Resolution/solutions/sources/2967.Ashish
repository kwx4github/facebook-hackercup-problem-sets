import java.io.*;
import java.util.*;

public class Solution {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int T = in.nextInt();
		int done = 0;
		while(done < T) {
			int gP,gC,gF;
			gP = in.nextInt();
			gC = in.nextInt();
			gF = in.nextInt();
			int n = in.nextInt();
			int[][] D = new int[n][3];
			for(int i=0;i<n;i++) {
				D[i][0] = in.nextInt();
				D[i][1] = in.nextInt();
				D[i][2] = in.nextInt();
			}
			if(isFeasible(D,n,gP,gC,gF,0)) System.out.println("Case #"+(done+1)+": yes");
			else System.out.println("Case #"+(done+1)+": no");
			done++;
		}
	}
	
	private static boolean isFeasible(int[][] D,int n,int P,int C,int F,int i) {
		if(P == 0 && C==0 && F==0) return true;
		else {
			if(i == n) return false;
			else {
				boolean x = isFeasible(D,n,P-D[i][0],C-D[i][1],F-D[i][2],i+1);
				if(x) return true;
				else return isFeasible(D,n,P,C,F,i+1);
			}
		}
	}
}
