from sys import stdin

def invt(t):
    return tuple(map(lambda x: -x, t))

def addt(a, b):
    return tuple(map(sum,zip(a,b)))

def subt(a, b):
    return addt(a,invt(b))

def toomuch(f):
    return any(map(lambda x: x<0, f))

def ispossible(goal, foods):
    f, *fs = foods
    newgoal = subt(goal, f)
    if newgoal == (0,0,0):
        return True
    elif not fs:
        return False
    elif toomuch(newgoal):
        return ispossible(goal, fs)
    else:
        return ispossible(newgoal, fs) or ispossible(goal, fs)

def booltostr(b):
    if b:
        return "yes"
    else:
        return "no"

if __name__ == "__main__":
    testcases = int(stdin.readline())
    for t in range(testcases):
        goal = tuple(int(x) for x in stdin.readline().split())
        nfoods = int(stdin.readline())
        foods = [tuple(int(x) for x in stdin.readline().split())
            for n in range(nfoods)]
        print("Case #" + str(t+1) + ": " + booltostr(ispossible(goal,foods)))
