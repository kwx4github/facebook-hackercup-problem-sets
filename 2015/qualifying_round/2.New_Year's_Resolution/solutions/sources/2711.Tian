#include <cstdio>
#include <map>
#include <algorithm>
#include <set>

using namespace std;

struct Data{
	int a,b,c;
	Data( int aa=0, int bb=0, int cc=0 ){
		a=aa; b=bb; c=cc;
	}
	bool operator < ( const Data &y ) const{
		return a<y.a || a==y.a && b<y.b || a==y.a && b==y.b && c<y.c;
	}
};

map<Data,int> app;
int n;
int a[30],b[30],c[30];
int ta,tb,tc;

int dfs( int kd, int now, int end, int aa, int bb, int cc ){
	if (now==end+1){
		if (kd==0){
			Data dd(ta-aa,tb-bb,tc-cc);
			app[dd]=1;
			return 0;
		} else {
			Data dd(aa,bb,cc);
			return app[dd];
		}
	} else {
		if (dfs(kd,now+1,end,aa,bb,cc)) return 1;
		if (dfs(kd,now+1,end,aa+a[now],bb+b[now],cc+c[now])) return 1;
	}
}

int main(){
	int test;
	scanf("%d", &test);
	for (int T=1; T<=test; ++T){
		printf("Case #%d: ", T);
		app.clear();
		scanf("%d%d%d", &ta,&tb,&tc);
		scanf("%d", &n);
		for (int i=0; i<n; ++i)
			scanf("%d%d%d",a+i,b+i,c+i);
		dfs(0,0,n/2,0,0,0);
		if (dfs(1,n/2+1,n-1,0,0,0)) printf("yes\n"); else printf("no\n");
	}
}

