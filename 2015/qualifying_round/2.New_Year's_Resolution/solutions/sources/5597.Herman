#include <iostream>
#include <fstream>
#include <vector>
#include <map>

using namespace std;

map <vector <int>, int> SC;

bool eat(vector <int> &C, vector <vector <int> > &meal){
	bool test = false;
	if(C[0] < 0 || C[1] < 0 || C[2] < 0) return false;
	if(C[0] == 0 && C[1] == 0 && C[2] == 0) return true;
	if(SC[C] == 2) return true;
	if(SC[C] == 1) return false;
	for(int i = 0; i < meal.size(); i++){
		vector <int> Q(3); Q[0] = C[0]-meal[i][0]; Q[1] = C[1]-meal[i][1]; Q[2] = C[2]-meal[i][2];
		if(eat(Q, meal)) test = true;
	}
	if(test) SC[C] = 2;
	else SC[C] = 1;
	return test;
}

int main(){
	ifstream in ("new_years_resolution.txt");
	ofstream out ("New_Years.txt");
	int T, o = 0;
	in >> T;
	while(T--){
		SC.clear();
		o++;
		out << "Case #" << o << ": ";
		vector <int> G(3); 
		int N;
		in >> G[0] >> G[1] >> G[2] >> N;
		vector < vector <int> > meal(N, vector <int>(3));
		for(int i = 0; i < N; i++){
			in >> meal[i][0] >> meal[i][1] >> meal[i][2];
			/*if(meal[i] > G.P || meal[i].C > G.C || meal[i].F > G.F){
				meal.erase(meal.begin()+i--); N--;
			}*/
		}
		if(eat(G, meal)) out << "yes";
		else out << "no";
		out << "\n";
	}
	return 0;
}