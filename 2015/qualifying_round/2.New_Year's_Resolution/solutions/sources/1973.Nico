import java.util.*;
import java.io.*;

class NewYearsResolution {
	public static void main(String[] args) {
		try {
			Scanner in = new Scanner(new File("new_years_resolution.txt"));
			int numCases = in.nextInt();
			for (int caseNum = 1; caseNum <= numCases; caseNum++) {
				Macronutrient goal = new Macronutrient(in.nextInt(), in.nextInt(), in.nextInt());
				int numFoods = in.nextInt();
				Macronutrient[] foods = new Macronutrient[numFoods];
				for (int i = 0; i < foods.length; i++) {
					foods[i] = new Macronutrient(in.nextInt(), in.nextInt(), in.nextInt());
				}
				System.out.print("Case #" + caseNum + ": ");
				boolean possible = checkIsPossible(goal, foods);
				if (possible) {
					System.out.println("yes");
				} else {
					System.out.println("no");
				}
			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	private static boolean checkIsPossible(Macronutrient goal, Macronutrient[] foods) {
		String format = "%" + foods.length + "s";
		for (int i = 0; i < Math.pow(2, foods.length); i++) {
			String binaryString = String.format(format, Integer.toBinaryString(i)).replace(' ', '0');
			int p = 0;
			int c = 0;
			int f = 0;
			for (int j = 0; j < foods.length; j++) {
				if (binaryString.charAt(j) == '1') {
					p += foods[j].p;
					c += foods[j].c;
					f += foods[j].f;
				} 
			}
			if (p == goal.p && c == goal.c && f == goal.f) {
				return true;
			}
		}
		return false;
	}
}

class Macronutrient {
	public int p;
	public int c;
	public int f;
	public Macronutrient(int a, int b, int c) {
		p = a;
		c = b; 
		f = c;
	}
}