#include<bits/stdc++.h>

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);

    freopen("new_years_resolution.txt","r",stdin);
    freopen("output.txt","w",stdout);

    int t;
    int i,k;

    cin>>t;

    for(k=1;k<=t;k++)
    {
        int gp,gc,gf,p[1003],c[1003],f[1003];
        int n;

        queue< vector<int> >   q1,q2;

        cin>>gp>>gc>>gf;

        cin>>n;

        for(i=1;i<=n;i++)
            cin>>p[i]>>c[i]>>f[i];

        int flag = 0;

        for(i=1;i<=n;i++)
        {
            int tp,tc,tf;

            if(p[i]==gp && c[i]==gc && f[i]==gf)
            {
                flag=1;
                break;
            }
            else
            if(i%2!=0)          // data in q2 transfer to q1
            {
                while(!q2.empty())
                {
                    vector<int> temp,temp2;
                    temp = q2.front();
					q1.push(temp);

                    //cout<<"odd: "<<temp[0]<<"   "<<temp[1]<<"   "<<temp[2]<<endl;

                    q2.pop();

                    tp = p[i] + temp[0];
                    tc = c[i] + temp[1];
                    tf = f[i] + temp[2];

                    if(tp==gp && tc==gc && tf==gf)
                    {
                        flag = 1;
                        break;
                    }

                    temp2.push_back(tp);
                    temp2.push_back(tc);
                    temp2.push_back(tf);

                    if(tp<=gp && tc<=gc && tf<=gf)
                        q1.push(temp2);
                }

                vector<int> temp3;

                temp3.push_back(p[i]);
                temp3.push_back(c[i]);
                temp3.push_back(f[i]);

                q1.push(temp3);
            }
            else                //data in q1 transfer to q2
            {
                while(!q1.empty())
                {
                    vector<int> temp,temp2;
                    temp = q1.front();
					q2.push(temp);

                    //cout<<"even: "<<temp[0]<<"   "<<temp[1]<<"   "<<temp[2]<<endl;

                    q1.pop();

                    tp = p[i] + temp[0];
                    tc = c[i] + temp[1];
                    tf = f[i] + temp[2];

                    if(tp==gp && tc==gc && tf==gf)
                    {
                        flag = 1;
                        break;
                    }

                    temp2.push_back(tp);
                    temp2.push_back(tc);
                    temp2.push_back(tf);

                    if(tp<=gp && tc<=gc && tf<=gf)
                        q2.push(temp2);
                }

                vector<int> temp3;

                temp3.push_back(p[i]);
                temp3.push_back(c[i]);
                temp3.push_back(f[i]);

                q2.push(temp3);
            }

            if(flag==1)
                break;
        }

        if(flag==1)
            cout<<"Case #"<<k<<": yes"<<endl;
        else
            cout<<"Case #"<<k<<": no"<<endl;
    }

    return 0;
}
