#include <stdio.h>
#include <string.h>
#include <string>
#include <vector>
#include <sstream>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <queue>
using namespace std;

/*
 * Author: Veselin Georgiev
 * Problem: "New Year's Resolution" (B)
 * Contest: Facebook Hacker Cup 2015
 */

#define FOR(i,n) for (int i = 0; i < n; i++)
#define abs(x) ((x)<0?(-(x)):(x))
#define REP(i,v) for (unsigned i = 0; i < v.size(); i++)
#define RL(i,v) for (unsigned i = 0; i < v.length(); i++)
typedef long long ll;

struct Vector {
	int t[3];
	Vector() {}
	Vector(int a, int b, int c)
	{
		t[0] = a;
		t[1] = b;
		t[2] = c;
	}
};

inline bool operator == (const Vector& a, const Vector& b)
{
	return 
		(a.t[0] == b.t[0]) &&
		(a.t[1] == b.t[1]) &&
		(a.t[2] == b.t[2]);
}

inline bool operator != (const Vector& a, const Vector& b)
{
	return 
		(a.t[0] != b.t[0]) ||
		(a.t[1] != b.t[1]) ||
		(a.t[2] != b.t[2]);
}

inline bool operator > (const Vector& partial, const Vector& target)
{
	return
		(partial.t[0] > target.t[0]) ||
		(partial.t[1] > target.t[1]) ||
		(partial.t[2] > target.t[2]);
}

inline Vector operator+ (const Vector& a, const Vector& b)
{
	return Vector(a.t[0] + b.t[0], a.t[1] + b.t[1], a.t[2] + b.t[2]);
}

istream& operator >> (istream& is, Vector& v)
{
	cin >> v.t[0] >> v.t[1] >> v.t[2];
	return is;
}

Vector target;
Vector ingredients[20];
Vector subsums[1<<20];
bool seen[1<<20];
int n;

bool solve(void)
{
	cin >> target;
	cin >> n;
	FOR(i, n) cin >> ingredients[i];
	
	memset(seen, 0, sizeof(seen));
	subsums[0] = Vector(0, 0, 0);
	
	queue<int> Q;
	Q.push(0);
	seen[0] = true;
	
	while (!Q.empty()) {
		int mask = Q.front();
		Q.pop();
		//
		const Vector& partial = subsums[mask];
		if (partial == target) return true;
		if (partial > target) continue;
		//
		for (int i = 0; i < n; i++) if (!((mask >> i) & 1)) {
			int newmask = mask | (1 << i);
			if (seen[newmask]) continue;
			seen[newmask] = true;
			subsums[newmask] = partial + ingredients[i];
			Q.push(newmask);
		}
	}
	return false;
}

int main(void)
{
// 	freopen("/home/vesko/hackercup/b.in", "rt", stdin);
	int T;
	cin >> T;
	for (int tc = 1; tc <= T; tc++)
		cout << "Case #" << tc << ": " << (solve() ? "yes" : "no") << endl;
	return 0;
}
