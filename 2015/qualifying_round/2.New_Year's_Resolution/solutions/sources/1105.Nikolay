using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BP
{
    class Task
    {
        public int[] want;
        public List<int[]> foods;
        public bool solved = false;

        public bool Solve()
        {
            int N = 1 << foods.Count;
            for (int i = 0; i < N; i++)
            {
                int[] pcf = { 0, 0, 0 };
                bool bad = false;

                for (int j = 0; !bad && j < foods.Count; j++)
                {
                    if (((1 << j) & i) == 0)
                        continue;

                    for (int k = 0; k < 3; k++)
                        pcf[k] += foods[j][k];

                    for (int k = 0; k < 3; k++)
                        bad |= pcf[k] > want[k];
                }

                for (int k = 0; k < 3; k++)
                    bad |= pcf[k] != want[k];

                if (!bad)
                    return true;
            }

            return false;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            List<Task> tasks = new List<Task>();
            int T = int.Parse(Console.ReadLine());
            for (int t = 1; t <= T; t++)
            {
                Task task = new Task();
                task.want = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);
                int N = int.Parse(Console.ReadLine());

                task.foods = new List<int[]>();
                for (int i = 0; i < N; i++)
                {
                    int[] pcf = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);
                    task.foods.Add(pcf);
                }

                tasks.Add(task);
            }

            Parallel.ForEach(tasks, x => { x.solved = x.Solve(); });


            for (int t = 0; t < T; t++)
                Console.WriteLine("Case #{0}: {1}", t + 1, tasks[t].solved ? "yes" : "no");
        }
    }
}
