/*
AUTHOR: Tenzing Shaw
LANGUAGE: Java
PROBLEM: NewYearsResolution
*/

import java.io.*;
import java.util.*;

class NewYearsResolution {
    public static int p, c, f;
    public static int[][] foods;
    public static boolean[] memo;
    public static boolean possible = false;

    public static void solve() {
        int lastEaten;
        if(possible) return;
        possible |= checkAnswer();
        for(lastEaten = memo.length - 1; lastEaten >= 0; lastEaten--)
            if(memo[lastEaten]) break;
        if(lastEaten == memo.length - 1)
            return;
        for(int i = lastEaten + 1; i < memo.length; i++) {
            memo[i] = true;
            solve();
            memo[i] = false;
        }
    }

    private static boolean checkAnswer() {
        int totalP = 0, totalC = 0, totalF = 0;
        for(int i = 0; i < memo.length; i++)
            if(memo[i]) {
                totalP += foods[i][0];
                totalC += foods[i][1];
                totalF += foods[i][2];
            }
        return totalC == c && totalP == p && totalF == f;
    }

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new FileReader("NewYearsResolution.in"));
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("NewYearsResolution.out")));
        int T = Integer.parseInt(reader.readLine());

        for (int tt = 1; tt <= T; tt++) {
            StringTokenizer st = new StringTokenizer(reader.readLine());
            p = Integer.parseInt(st.nextToken());
            c = Integer.parseInt(st.nextToken());
            f = Integer.parseInt(st.nextToken());

            int N = Integer.parseInt(reader.readLine());

            foods = new int[N][3];

            memo = new boolean[N];
            possible = false;

            for(int i = 0; i < N; i++) {
                st = new StringTokenizer(reader.readLine());
                foods[i][0] = Integer.parseInt(st.nextToken());
                foods[i][1] = Integer.parseInt(st.nextToken());
                foods[i][2] = Integer.parseInt(st.nextToken());
            }
            solve();
            out.println("Case #" + tt + ": " + (possible ? "yes" : "no"));
        }

        out.close();
        System.exit(0);
    }
}