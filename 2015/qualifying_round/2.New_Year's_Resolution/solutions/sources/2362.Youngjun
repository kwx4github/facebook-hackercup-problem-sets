#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

int T;
int Gp, Gc, Gf;
int N;

struct Food {
	int p, c, f;
};

bool canEat(vector<Food>& foods, int idx, int p, int c, int f) {
	if(p < 0 || c < 0 || f < 0) return false;
	if(p == 0 && c == 0 && f == 0) return true;
	if(idx >= foods.size()) return false;

	return canEat(foods, idx + 1, p - foods[idx].p, c - foods[idx].c, f - foods[idx].f)
			|| canEat(foods, idx + 1, p, c, f);
}

int main() {
	scanf("%d", &T);

	for(int C = 1; C <= T; C++) {
		scanf("%d %d %d", &Gp, &Gc, &Gf);
		scanf("%d", &N);

		vector<Food> foods;
		for(int i = 0; i < N; i++) {
			int p, c, f;
			scanf("%d %d %d", &p, &c, &f);
			Food food = {p, c, f};
			foods.push_back(food);
		}

		printf("Case #%d: %s\n", C, canEat(foods, 0, Gp, Gc, Gf) ? "yes" : "no");
	}

	return 0;
}

