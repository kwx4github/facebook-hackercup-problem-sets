__author__ = 'mac'


def cmp_food(x, y):
    if x[0] < y[0]:
        return -1
    elif x[0] > y[0]:
        return 1
    else:
        if x[1] < y[1]:
            return -1
        elif x[1] > y[1]:
            return 1
        else:
            if x[2] < y[2]:
                return -1
            elif x[2] > y[2]:
                return 1
    return 0


def satisfy(dest, foods):
    #foods.sort(key=lambda x: x[0])
    foods.sort(cmp=cmp_food)

    def inner(dest, foods, i):
        if i >= len(foods):
            return False

        f = foods[i]
        t = cmp_food(f, dest)
        if t == 0:
            return True
        ans = inner(dest, foods, i + 1)
        if ans:
            return True

        t = True
        for i in range(3):
            if dest[i] < f[i]:
                t = False
                break
        if t:
            ndest = [dest[i] - f[i] for i in range(3)]
            ans = inner(ndest, foods, i + 1)
        return ans

    if inner(dest, foods, 0):
        return 'yes'
    return 'no'

def solve(input_file):
    lines = []
    with open(input_file, 'r') as file:
        for line in file:
            line = line.strip()
            lines.append(line)

    idx = 0
    #get testcase number
    case_num = int(lines[idx])
    case_idx = 0
    idx += 1
    while case_idx < case_num:
        #read case

        #get case size
        dest = [int(x) for x in lines[idx].split()]
        idx += 1
        #print idx
        food_num = int(lines[idx])
        idx += 1
        foods = []

        for i in range(food_num):
            t = [int(x) for x in lines[idx].split()]
            idx += 1
            foods.append(t)
        ans = satisfy(dest, foods)

        print "Case #%d: %s" % (case_idx + 1, ans)
        case_idx += 1


if __name__ == "__main__":
    import sys
    solve(sys.argv[1])