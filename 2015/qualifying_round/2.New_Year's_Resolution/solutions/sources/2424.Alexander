
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>
#include <numeric>
#include <cassert>
#include <unordered_set>
#include <unordered_map>
#include <fstream>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)


int aim[3];
int cur[1<<20][3];

int main() {
	int T;
	cin >> T;
	FOR(t,1,T+1){
		FOR(i,0,3)cin >> aim[i];
		FOR(i,0,3)assert(aim[i] >= 10 && aim[i] <= 1000);
		int N;
		cin >> N;
		assert(N > 0 && N <= 20);
		memset(cur,0,sizeof(cur));
		FOR(i,0,N){
			FOR(j,0,3){
				cin >> cur[1<<i][j];
				assert(cur[1<<i][j] >= 10 && cur[1<<i][j] <= 1000);
			}
		}
		FOR(m,0,1<<N){
			int p1 = (m &(-m));
			int p2 = m ^ p1;
			if(p1 == 0 || p2 == 0)continue;
			FOR(i,0,3)cur[m][i] = cur[p1][i] + cur[p2][i];
		}
		bool suc = false;
		FOR(m,0,1<<N){
			bool yes = true;
			FOR(i,0,3)yes &= (cur[m][i] == aim[i]);
			if(yes){
				suc = true;
				break;
			}
		}
		string res = (suc?"yes":"no");
		cout << "Case #" << t << ": " << res << endl;
	}
	return 0;
}
