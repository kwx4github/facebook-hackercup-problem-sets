import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class NewYearsResolution {
	
	private static int[] stringArrToIntArr(String[] stringArr) {
		int[] ret = new int[stringArr.length];
		for(int i = 0; i < ret.length; i++) {
			ret[i] = Integer.parseInt(stringArr[i]);
		}
		return ret;
	}
	
	private static void solve(String in) throws NumberFormatException, IOException {
		PrintWriter writer = new PrintWriter("new_years_resolution_out.txt", "UTF-8");
		BufferedReader br = new BufferedReader(new FileReader(in));
		int cases = Integer.parseInt(br.readLine());
		for(int l = 1; l <= cases; l++) {
			int[] goal = stringArrToIntArr(br.readLine().split(" "));
			
			int numItems = Integer.parseInt(br.readLine());
			List<int[]> menu = new ArrayList<>();
			for(int i = 0; i < numItems; i++) {
				menu.add(stringArrToIntArr(br.readLine().split(" ")));
			}
			
			String possible = "no";
			long maxBitVector = (long) Math.pow(2, numItems);
			for (long bitVector = 1; bitVector < maxBitVector; bitVector++) {
				int[] sum = new int[goal.length];
				boolean over = false;
				for (int bitIndex = 0; bitIndex < numItems; bitIndex++) {
					if(over) break;
					if ((1 << bitIndex & bitVector) != 0) {
						for(int i = 0; i < menu.get(bitIndex).length; i++) {
							sum[i] += menu.get(bitIndex)[i];
							if(sum[i] > goal[i]) {
								over = true;
							}
						}
					}
				}
				if(Arrays.equals(sum, goal)) {
					possible = "yes";
					//System.out.println(Long.toString(bitVector, 2));
					break;
				}
			}
			writer.println("Case #" +l + ": " +possible);
		}
		br.close();
		writer.close();
	}
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		//solve("new_years_resolution_example_input.txt");
		solve("new_years_resolution.txt");
	}
}
