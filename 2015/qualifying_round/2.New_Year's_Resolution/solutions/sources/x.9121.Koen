# -*- coding: utf-8 -*-
"""
Created on Fri Jan 09 12:37:17 2015

@author: Koen
"""

import itertools

file_name = "new_years_resolution_input.txt"

def check_condition(condition, foods):
    current_condition = (0,0,0)

    for food in foods:
        current_condition = tuple(sum(x) for x in zip(current_condition, food))
    # print "Current condition", current_condition
    return cmp(current_condition,condition)

def find_food_match(condition, foods):
    # Walk using piramid (dont check old foods)
    i = 0
    for j in range(i, len(foods)):
        i += 1




def parse_test_case():
    global lines

    condition = lines.pop(0).split()
    condition = tuple(int(x) for x in condition)

    num_foods = lines.pop(0)
    foods = []
    for i in range(int(num_foods)):
        line = lines.pop(0)
        GP, GC, GF = line.split()
        GP, GC, GF = int(GP), int(GC), int(GF)
        foods.append((GP,GC,GF))
    # print "Condition", condition
    # print "Num foods", num_foods
    # print "Food options", foods
    # print "test thing"
    if len(foods) == 1:
        return check_condition(condition, foods) == 0

    for i in range(2,len(foods)):
        my_combinations = itertools.combinations(foods, i)
        for combi in my_combinations:
            # print combi
            if check_condition(condition, combi) == 0:
                return True
    return False



lines = [line.strip() for line in open(file_name)]

if lines:
    test_cases = lines.pop(0)

    for i in range(int(test_cases)):
        result = parse_test_case()
        print "Case #"+ str(i+1)+":", 'yes' if result else 'no'
else:
    print "No lines in input file!"
