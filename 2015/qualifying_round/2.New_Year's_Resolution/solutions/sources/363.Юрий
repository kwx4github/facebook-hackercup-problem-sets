#include <list>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <vector>
#include <string>
  
using namespace std;
  
#define ABS(a) (((a) > 0)? (a): -(a))
#define MIN(a, b) (((a) < (b))? (a): (b))
#define MAX(a, b) (((a) < (b))? (b): (a))
#define FOR(i, a, n) for (int i = (a); i <= (n); i++)
#define DFOR(i, a, n) for (int i = (a); i >= (n); i--)
#define SORT(a, first_element, last_element) sort(&(a)[(first_element)], &(a)[(last_element) + 1])
#define SQR(a) (a) * (a)
#define PI 3.14159265358979323846264
#define MEMS(a, b) memset((a), (b), sizeof(a))
#define MP make_pair
#define PB push_back
#define endl '\n'
#define LL long long
#define UN unsigned
#define Or ||
#define And &&
/////////////////////////////////////////////

int p[22], c[22], f[22];
int gp, gc, gf;
int n;

void check()
{
	int mx = (1 << n) - 1;
	FOR(i, 1, mx)
	{
		int np = 0, nc = 0, nf = 0;
		FOR(j, 0, n - 1)
		{
			if ((i >> j) & 1)
			{
				np += p[j];
				nc += c[j];
				nf += f[j];
				if (np > gp Or nc > gc Or nf > gf)
					j = n + 5;
			}
		}
		if (np == gp And nc == gc And nf == gf)
		{
			cout << "yes" << endl;
			return;
		}
	}
	cout << "no" << endl;
	return;
}

void solution()
{
	int T;
	cin >> T;
	FOR(t, 1, T)
	{
		cin >> gp >> gc >> gf;
		cin >> n;
		FOR(i, 0, n - 1)
		{
			cin >> p[i] >> c[i] >> f[i];
		}
		printf("Case #%d: ", t);
		check();
	}
}
     
/*-------------------*/ 
  
int main()
{
#ifdef Files
freopen("input.txt", "r", stdin);
freopen("output.txt", "w", stdout);
/*Test*/
//freopen("input.txt", "w", stdout);
double OcZ2X = clock();
#endif
  
solution();
  
#ifdef Time
cout << endl;
double P2HxQ = clock();
printf("*** Total time = %.3f sec ***", (P2HxQ - OcZ2X) / CLOCKS_PER_SEC);
#endif
}  