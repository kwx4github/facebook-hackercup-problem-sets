#include <bits/stdc++.h>

#define each(i, c) for (auto& i : c)
#define unless(cond) if (!(cond))

using namespace std;

typedef long long int lli;
typedef unsigned long long ull;
typedef complex<double> point;

template<typename P, typename Q>
ostream& operator << (ostream& os, pair<P, Q> p)
{
  os << "(" << p.first << "," << p.second << ")";
  return os;
}

int main(int argc, char *argv[])
{
  int tc;
  cin >> tc;
  while (tc--) {
    int gp, gc, gf;
    cin >> gp >>  gc >> gf;
    int n;
    cin >> n;
    int m[n][3];
    for (int i = 0; i < n; ++i) {
      cin >> m[i][0] >> m[i][1] >> m[i][2];
    }
    const int GP = 0, GC = 1, GF = 2;

    bool f = false;

    for (int bit = 0; bit < (1 << n); ++bit) {
      int sum[3] = {0, 0, 0};
      for (int j = 0; j < n; ++j) {
        if (bit & (1 << j)) {
          sum[GP] += m[j][GP];
          sum[GC] += m[j][GC];
          sum[GF] += m[j][GF];
        }
      }
      f = f || (sum[GP] == gp && sum[GC] == gc && sum[GF] == gf);
    }

    static int cnt = 0;
    cout << "Case #" << ++cnt << ": " << (f ? "yes" : "no") << endl;
  }
  return 0;
}
