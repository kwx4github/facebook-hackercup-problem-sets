#include <bits/stdc++.h>

struct meal {
	int p, c, f;
};

bool goodSum(meal goal, std::vector<meal> food, int j) {
	int sum_p = 0, sum_c = 0, sum_f = 0;
	for(int i = 0; i < food.size(); i++) {
		sum_p += food[i].p * bool(j & (1 << i));
		sum_c += food[i].c * bool(j & (1 << i));
		sum_f += food[i].f * bool(j & (1 << i));
	}
	if(sum_p == goal.p && sum_c == goal.c && sum_f == goal.f)
		return true;
	return false;
}

int main() {
	int t;
	scanf("%d", &t);
	for(int i = 0; i < t; i++) {
		meal goal;
		scanf("%d%d%d", &goal.p, &goal.c, &goal.f);
		int n;
		scanf("%d", &n);
		int poss = 1;
		std::vector<meal> food;
		for(int j = 0; j < n; j++) {
			meal temp;
			scanf("%d%d%d", &temp.p, &temp.c, &temp.f);
			if(temp.p <= goal.p && temp.c <= goal.c && temp.f <= goal.f) {
				poss *= 2;
				food.push_back(temp);
			}
		}
		bool ok = false;
		for(int j = 1; j <= poss; j++)
			if(goodSum(goal, food, j)) {
				printf("Case #%d: yes\n", i+1);
				ok = true;
				break;
			}
		if(!ok)
			printf("Case #%d: no\n", i+1);
	}
	return 0;
}
