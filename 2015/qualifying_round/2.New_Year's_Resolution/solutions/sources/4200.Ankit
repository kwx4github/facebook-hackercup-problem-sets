#include <bits/stdc++.h>
#define getcx getchar_unlocked

#ifdef WIN32
    inline char getchar_unlocked(){return getchar();}
    inline void putchar_unlocked(char x){putchar(x);}
#endif // WINDOWS
using namespace std;

typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;
#define sz(a) int((a).size())
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define all(c) (c).begin(),(c).end()
#define foreach(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define forall(i,a,b) for(int i=a;i<(b);i++)
#define forb(i,a,b) for(int i=a;i>=(b);i--)
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define PI 3.1415926535897932384626
inline void pisz(int n) { printf("%d\n",n); }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define printA(a,L,R) forall(i,L,R) cout << a[i] << (i==R?'\n':' ')
#define printV(a) printA(a,0,a.size()-1)

inline int fi (){//fast input function
    register int c = getcx();
    int x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getcx());
    if(c=='-') {neg=1;c=getcx();}
    for(;c>47 && c<58;c = getcx()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
    return x;
}

inline void fo(int a) {
	char snum[20];
	int i=0;
    int c =a;
	do{
		snum[i++]=a%10+48;
		a=a/10;
	}
	while(a!=0);
	i=i-1;
    if(c<0)
        putchar_unlocked('-');
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}

void init(){
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
}

/* Useful code */

int findAnswer(){

    return 0;
}

int main()
{
    init();

    /* Main code here */

    int t = fi(),n,a,b,c;

    int P[21], C[21], F[21];
    set<pair<pair<int, int>, int> > sum;
    set<pair<pair<int, int>, int> > tmp;
    /* declarations end */

    forall(cx,1,t+1){
        a=fi();
        b=fi();
        c=fi();

        n=fi();
        sum.clear();
        tmp.clear();
        sum.insert(mp(mp(0,0),0));
        forall(i,0,n){
            P[i]=fi();
            C[i]=fi();
            F[i]=fi();
        }

        forall(i,0,n){
            for(set <pair<pair<int,int>,int> >::iterator it = sum.begin() ; it!=sum.end(); it++ ){
                int r,s,t;
                r = it->fi.fi;
                s = it->fi.se;
                t = it->se;
                if(r+P[i]<1001 && s+C[i]<1001 && t+F[i]<1001){
                    tmp.insert(mp(mp(r+P[i],s+C[i]),t+F[i]));
                }
            }
            sum.insert(tmp.begin(),tmp.end());
            tmp.clear();
        }

        if(present(sum,mp(mp(a,b),c))){
            printf("Case #%d: yes\n",cx);
        }
        else{
            printf("Case #%d: no\n",cx);
        }


    }

    return 0;
}
