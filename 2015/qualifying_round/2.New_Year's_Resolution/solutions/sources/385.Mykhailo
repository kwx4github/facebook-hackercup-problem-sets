#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int gp, gc, gf;
int n;
int p[30];
int c[30];
int f[30];

bool r(int pos, int hp, int hc, int hf)
{
	if (pos == n)
	{
		return ((hp == gp) && (hc == gc) && (hf == gf));
	}
	bool f1 = r(pos + 1, hp, hc, hf);
	if (f1)
		return true;
	bool f2 = r(pos + 1, hp + p[pos], hc + c[pos], hf + f[pos]);
	if (f2)
		return true;
	return false;
}

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	double beg = clock();
#else
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif

	int t;
	scanf("%d", &t);
	FOR(it, 1, t+1)
	{
		printf("Case #%d: ", it);
		cin >> gp >> gc >> gf >> n;
		FOR(i, 0, n)
			cin >> p[i] >> c[i] >> f[i];
		bool f = r(0, 0, 0, 0);
		if (f)
			printf("yes\n");
		else
			printf("no\n");
	}

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}