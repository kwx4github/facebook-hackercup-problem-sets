using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TestCode
{
    class Program
    {
        static void Main(string[] args)
        {
            Solve2();
            Console.ReadKey(true);
        }

        private static FoodInfo _desired;
        private static FoodInfo[] _foods;

        static void Solve2()
        {
            string input = @"5
100 100 100
1
100 100 100
100 100 100
3
10 10 40
10 30 10
10 60 50
100 100 100
5
40 70 30
30 10 40
20 20 50
10 50 90
40 10 20
292 264 512
20
909 302 261
705 597 823
291 51 126
28 697 57
593 31 826
311 256 57
292 14 47
29 730 716
12 529 146
768 16 439
37 472 15
350 192 34
163 468 238
69 173 10
203 72 690
424 875 213
223 593 292
151 46 10
88 90 16
773 653 711
991 827 352
20
29 560 929
139 681 102
144 853 10
84 729 80
218 20 67
140 80 901
428 20 500
520 970 128
422 419 30
413 101 192
467 448 501
32 939 684
34 20 38
251 317 132
588 437 10
648 21 79
391 25 14
499 22 24
854 77 361
405 25 20";

            using (var reader = new StreamReader(File.OpenRead(@"d:\roy\new_years_resolution.txt")))
            {
                using (var writer = new StreamWriter(@"d:\roy\nyr_solve.txt"))
                {
                    int numCases = Int32.Parse(reader.ReadLine());

                    for (int i = 1; i <= numCases; i++)
                    {
                        string[] parts = reader.ReadLine().Split();
                        _desired = new FoodInfo()
                        {
                            Food1 = Int32.Parse(parts[0]),
                            Food2 = Int32.Parse(parts[1]),
                            Food3 = Int32.Parse(parts[2]),
                        };
                        var numFoods = Int32.Parse(reader.ReadLine());

                        _foods = new FoodInfo[numFoods];

                        for (int j = 0; j < numFoods; j++)
                        {
                            parts = reader.ReadLine().Split();
                            _foods[j] = new FoodInfo()
                            {
                                Food1 = Int32.Parse(parts[0]),
                                Food2 = Int32.Parse(parts[1]),
                                Food3 = Int32.Parse(parts[2]),
                            };
                        }

                        bool result = SolveCase2(0, new FoodInfo());

                        writer.WriteLine("Case #{0}: {1}", i, result ? "yes" : "no");
                    }
                }
            }
        }

        private static bool SolveCase2(int curIndex, FoodInfo curFoodInfo)
        {
            if (curFoodInfo.Food1 == _desired.Food1 &&
                curFoodInfo.Food2 == _desired.Food2 &&
                curFoodInfo.Food3 == _desired.Food3)
                return true;

            if (curIndex >= _foods.Length)
                return false;

            if (SolveCase2(curIndex+1, curFoodInfo))
                return true;
            curFoodInfo.Food1 += _foods[curIndex].Food1;
            curFoodInfo.Food2 += _foods[curIndex].Food2;
            curFoodInfo.Food3 += _foods[curIndex].Food3;
            return SolveCase2(curIndex + 1, curFoodInfo);
        }

        private struct FoodInfo
        {
            public int Food1;
            public int Food2;
            public int Food3;
        }
    }
}
