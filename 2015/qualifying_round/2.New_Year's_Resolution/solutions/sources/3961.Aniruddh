//	Coded by:  samfisher
#include<bits/stdc++.h>
#define ll long long int
#define vii  vector<int>::iterator 
#define vli  vector<ll>::iterator 
#define vi  vector<int> 
#define vl  vector<ll> 
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define REP(i,a,b) for(i=a;i<=b;i++)
#define MOD 1000000007
#define in cin>>
#define i2(x,y) cin>>x>>y
#define i3(x,y,z) cin>>x>>y>>z
#define os(x) cout<<x<<' '
#define on(x) cout<<x<<endl
#define o2(x,y) cout<<x<<' '<<y<<endl
#define o3(x,y,z) cout<<x<<' '<<y<<' '<<z<<endl
#define pn cout<<endl
#define F first
#define S second
#define for_it(it, X) for (__typeof((X).rbegin()) it = (X).rbegin(); it != (X).rend(); it++)
using namespace std;
class triple
{
public:
	int a;
	int b;
	int c;
	triple(int x,int y,int z)
	{
		a=x;
		b=y;
		c=z;
	}
	triple operator+(const triple& rhs) const
	{
		triple tmp = *this;
		tmp.a+=rhs.a;
		tmp.b+=rhs.b;
		tmp.c+=rhs.c;
		return tmp;
	}
	bool operator< (const triple &right) const
	{
	  return (	   (a < right.a)
	  			|| (a==right.a && b < right.b)
	  			|| (a==right.a && b == right.b && c < right.c));
	}
	bool operator== (const triple &right) const
	{
	  return (	   (a == right.a)
	  			&& (b == right.b)
	  			&& (c == right.c));
	}
};
int main()
{
	ios_base::sync_with_stdio(false);
	int t,i,j,k=0,n,m,a,b,c,ta,tb,tc;	

	in t;
	
	while(t--)
	{
		i3(ta,tb,tc);
		triple req=triple(ta,tb,tc);
		k++;
		in n;
		set<triple> check;
		check.insert(triple(0,0,0));

		for(i=0;i<n;i++)
		{
			i3(a,b,c);
			triple tmp=triple(a,b,c);
			for_it(it,check)
			{
				check.insert(*it + tmp);
			}
		}
		bool ans=false;
		for_it(it,check)
		{
			if(*it==req)
				ans=true;

		}
		cout<<"Case #"<<k<<": ";
		if(ans)
			on("yes");
		else
			on("no");
	}
}