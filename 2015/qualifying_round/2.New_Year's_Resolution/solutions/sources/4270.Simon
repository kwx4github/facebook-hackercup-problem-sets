def parser(file):
    f = open(file)
    T = int(f.readline())
    g = []
    n = []
    m = []
    for i in range(T):
        g.append(f.readline().strip("\n").split())
        for j in range(len(g[i])):
            g[i][j] = int(g[i][j])
            
        n.append(int(f.readline()))
        m.append([])
        for j in range(n[i]):
            m[i].append(f.readline().strip("\n").split())
            for k in range(len(m[i][j])):
                m[i][j][k] = int(m[i][j][k])
    return T, g, n, m


def sol(g, n, f):
    p1, c1, m1 = 0,0,0
    a = 0
    for i in range(n):
        if f[a][0] > g[0]:
            f.pop(a)
            a-=1
        elif f[a][1] > g[1]:
            f.pop(a)
            a-=1
        elif f[a][2] > g[2]:
            f.pop(a)
            a-=1
        else:
            p1 += f[a][0]
            c1 += f[a][1]
            m1 += f[a][2]
        a+=1
    if len(f) == 0 or p1 < g[0] or c1 < g[1] or m1 < g[2]:
        return "no"

    def rec(p, c, m, i, e):
        if p == g[0] and c == g[1] and m == g[2]:
            return True
        elif i == e or p > g[0] or c > g[1] or m > g[2]:
            return False
        else:
            if rec(p+f[i][0], c+f[i][1], m+f[i][2] ,i+1 ,e):
                return True
            elif rec(p, c, m ,i+1 ,e):
                return True
            else:
                return False
    
    return "yes" if rec(0,0,0,0,len(f)) else "no"
        

def main(file):
    t, g, n, f = parser(file)
    res = ""
    for i in range(t):
        res += "Case #"+str(i+1)+": "+sol(g[i], n[i], f[i])+"\n"
    o = open("o.txt", mode="w")
    o.write(res)

main("new_years_resolution.txt")
