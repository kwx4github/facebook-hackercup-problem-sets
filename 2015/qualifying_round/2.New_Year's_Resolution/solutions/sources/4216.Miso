def feasible(gp,gc,gf,array)
  return true if gp==0 and gc==0 and gf==0
  return false if gp<0 or gc<0 or gf<0
  return false if array.empty?
  first,*rest = *array
  with = feasible(gp-first[0],gc-first[1],gf-first[2],rest)
  without = feasible(gp,gc,gf,rest)
  return with || without
end
t = ARGF.readline.to_i
i=0
t.times do
  i+=1
  gp,gc,gf = ARGF.readline.split.map(&:to_i)
  n = ARGF.readline.to_i
  food = n.times.map do
    ARGF.readline.split.map(&:to_i)
  end
  puts "Case ##{i}: #{feasible(gp,gc,gf,food) ? 'yes' : 'no'}"
end
