#include <iostream>
#include <sstream>
#include <cmath>
#include <string>
#include <string.h>
#include <cstdio>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <cassert>
using namespace std;
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
#define sz(x) ((int)((x).size()))
#define rep(i, N) for (int i = 0; i < N; ++i)
#define foreach(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();++it)
typedef long long lint;
typedef vector<string> vs;
typedef vector<int> vi;
typedef pair<int, int> pii;

void solve(int tst) {
	int n, a[3];
	for (int i = 0; i < 3; ++i) {
		cin >> a[i];
	}
	cin >> n;
	vector<vi> v(n, vi(3, 0));
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < 3; ++j) {
			cin >> v[i][j];
		}
	}
	for (int use = 0; use < (1 << n); ++use) {
		int b[3] = {0};
		b[0] = b[1] = b[2] = 0;
		for (int i = 0; i < n; ++i) {
			if ((use >> i) & 1) {
				for (int j = 0; j < 3; ++j) {
					b[j] += v[i][j];
				}
			}
		}
		bool ok = true;
		for (int j = 0; j < 3; ++j) {
			if (a[j] != b[j]) {
				ok = false;
			}
		}
		if (ok) {
			printf("Case #%d: yes\n", tst);
			return;
		}
	}
	printf("Case #%d: no\n", tst);
}

int main() {
	freopen("input.txt", "r", stdin);
	int tst;
	cin >> tst;
	for (int i = 1; i <= tst; ++i) {
		solve(i);
	}
    return 0;
}
