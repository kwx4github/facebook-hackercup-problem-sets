#include<iostream>
using namespace std;

int Gp, Gc, Gf, n;

bool solve(int food[][3], int currGp = 0, int currGc = 0, int currGf = 0, int index = 0){
	//cout<<"currGp: "<<currGp<<" currGc: "<<currGc<<" currGp: "<<currGp<<endl;
	if(currGp > Gp || currGc > Gc || currGf > Gf)
		return false;
	
	if(currGp == Gp && currGc == Gc && currGf == Gf)
		return true;
	
	if(index >=n)
		return false;
		
	bool without = solve(food,currGp, currGc, currGf, index+1);
	bool with = false;
	
	if(currGp < Gp && currGc < Gc && currGf < Gf){
		currGp += food[index][0];
		currGc += food[index][1];
		currGf += food[index][2];
		with = solve(food,currGp, currGc, currGf, index+1);
	}
	
	return (with || without); 
	
}
int main(){
	std::ios_base::sync_with_stdio(false);
	
	freopen("new_years_resolution.txt","r",stdin);
	freopen("new_years_resolution_output.txt","w",stdout);
	
	int t;
	cin>>t;
	for(int caseNo=1; caseNo<=t; caseNo++){
		
		cin>>Gp>>Gc>>Gf>>n;
		
		int food[n][3];
		
		for(int i=0; i<n; i++)
			for(int j=0; j<3; j++)
				cin>>food[i][j];
		
		cout<<"Case #"<<caseNo<<": ";
		
		if(solve(food))
			cout<<"yes";
		else
			cout<<"no";
			
		cout<<endl;
	}
	return 0;
}

