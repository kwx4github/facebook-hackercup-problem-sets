package main

import (
  "os"
  "bufio"
  "strconv"
  "fmt"
)

func scanInt(scanner *bufio.Scanner) int {
  scanner.Scan()
  x, _ := strconv.Atoi(scanner.Text())
  return x
}

func eat(meals [][]int, pos int, current []int, goal []int) bool {
  if pos == len(meals) {
    for i := range current {
      if current[i] != goal[i] {
        return false
      }
    }
    return true
  }
  if eat(meals, pos+1, current, goal) {
    return true
  }
  for i := range current {
    current[i] += meals[pos][i]
  }
  if eat(meals, pos+1, current, goal) {
    return true
  }
  for i := range current {
    current[i] -= meals[pos][i]
  }
  return false
}

func main() {
  scanner := bufio.NewScanner(os.Stdin)
  scanner.Split(bufio.ScanWords)
  writer := bufio.NewWriter(os.Stdout)
  defer writer.Flush()
  numCases := scanInt(scanner)
  for caseIndex := 1; caseIndex <= numCases; caseIndex++ {
    goal := []int{ scanInt(scanner), scanInt(scanner), scanInt(scanner) }
    current := make([]int, 3)
    numMeals := scanInt(scanner)
    meals := make([][]int, numMeals)
    for i := 0; i < numMeals; i++ {
      meals[i] = []int{ scanInt(scanner), scanInt(scanner), scanInt(scanner) }
    }
    result := "no"
    if eat(meals, 0, current, goal) {
      result = "yes"
    }
    writer.WriteString(fmt.Sprintf("Case #%d: %s\n", caseIndex, result))
  }
}
