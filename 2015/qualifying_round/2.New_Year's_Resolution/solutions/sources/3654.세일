#include <stdio.h>
#include <algorithm>
#include <vector>
using namespace std;
vector< vector<int> >arr;
int n, p, q, r;
bool sol(int i, int a, int b, int c);
int main()
{
	FILE* in = fopen("new_years_resolution.txt", "r");
	FILE* out = fopen("out2.txt", "w");
	int t;
	fscanf(in,"%d", &t);
	for (int c = 1; c <= t; c++)
	{
		arr.clear();
		fscanf(in,"%d %d %d %d",&p, &q, &r,&n);
		arr.resize(n + 1);
		for (int i = 1; i <= n; i++)
			arr[i].resize(3);

		for (int i = 1; i <= n; i++)
			fscanf(in,"%d %d %d", &arr[i][0], &arr[i][1], &arr[i][2]);

		fprintf(out,"Case #%d: ", c);
		if (sol(1, p, q, r))
			fprintf(out,"yes\n");
		else
			fprintf(out,"no\n");
	}
}
//p,q,r만큼 남았을때 먹을 수 있는가? 
//i번쨰를 선택할 차례
bool sol(int i,int a, int b, int c)
{
	if (i == n + 1)
	{
		if (a == 0 && b == 0 && c == 0)
			return true;
		return false;
	}

	bool ret = false;
	
	//eat
	ret = max(ret, sol(i + 1, a, b, c));
	ret = max(ret, sol(i + 1, a - arr[i][0], b - arr[i][1], c - arr[i][2]));
	return ret;

}