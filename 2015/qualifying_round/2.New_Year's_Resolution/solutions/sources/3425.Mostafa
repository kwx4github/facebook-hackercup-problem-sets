import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class NewYearsResolution {

	public static void main(String[] args) throws IOException {
		br = new BufferedReader(new FileReader("input.txt"));
		out = new PrintWriter("output.out");
		sc = new StringTokenizer("");
		int tc = nxtInt();
		for (int t = 1; t <= tc; t++) {
			int x = nxtInt();
			int y = nxtInt();
			int z = nxtInt();
			int n = nxtInt();
			int[][] arr = new int[n][3];
			for (int i = 0; i < n; i++)
				arr[i] = nxtIntArr(3);
			boolean done = false;
			for (int i = 0; i < (1 << n) && !done; i++) {
				int[] tmp = new int[3];
				for (int j = 0; j < n; j++)
					if ((i & (1 << j)) != 0)
						for (int k = 0; k < 3; k++)
							tmp[k] += arr[j][k];
				if (tmp[0] == x && tmp[1] == y && tmp[2] == z)
					done = true;
			}
			out.println("Case #" + t + ": " + (done ? "yes" : "no"));
		}
		br.close();
		out.close();
	}

	static BufferedReader br;
	static StringTokenizer sc;
	static PrintWriter out;

	static String nxtTok() throws IOException {
		while (!sc.hasMoreTokens()) {
			String s = br.readLine();
			if (s == null)
				return null;
			sc = new StringTokenizer(s.trim());
		}
		return sc.nextToken();
	}

	static int nxtInt() throws IOException {
		return Integer.parseInt(nxtTok());
	}

	static long nxtLng() throws IOException {
		return Long.parseLong(nxtTok());
	}

	static double nxtDbl() throws IOException {
		return Double.parseDouble(nxtTok());
	}

	static int[] nxtIntArr(int n) throws IOException {
		int[] a = new int[n];
		for (int i = 0; i < n; i++)
			a[i] = nxtInt();
		return a;
	}

	static long[] nxtLngArr(int n) throws IOException {
		long[] a = new long[n];
		for (int i = 0; i < n; i++)
			a[i] = nxtLng();
		return a;
	}

	static char[] nxtCharArr() throws IOException {
		return nxtTok().toCharArray();
	}
}