import java.io.*;
import java.util.*;

public class NewYearResolution {
    public static int[][] optionsInt;
    public static int[] requiredInt;
    public static int numOptions;

    public static void main(String [] args) {

        // The name of the file to open.
        String inputFileName = "NewYearResolution_input.txt";
        String outputFileName = "NewYearResolution_output.txt";

        String[] answers = processFile(inputFileName);


        // writeToFile(answer, outputFileName);
        writeToFile(answers, outputFileName);

    }


    public static void writeToFile(String[] answer, String fileName){
        String line = null;
        try {
            PrintWriter out = new PrintWriter(fileName);

            for (int i = 0; i < answer.length ; i++) {
                line = answer[i];
                if (line != null){
                    out.println(line);
                }
                
            }

            out.close();

        } catch (FileNotFoundException e){
            System.out.println("FileNotFoundException");
        }

    }

    public static String[] processFile(String fileName){
        
        String line = null;
        String[] fileContent = null;
        String[] answers;
       try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(fileName);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            int numCases = Integer.parseInt(bufferedReader.readLine());
            answers = new String[numCases];
            String required = "";

            for(int i=0; i < numCases; i++){
                required = bufferedReader.readLine();
                int numOptions = Integer.parseInt(bufferedReader.readLine());
                String[] options = new String[numOptions];
                for(int j=0;j<numOptions;j++){
                    options[j] = bufferedReader.readLine();
                }
                answers[i] = "Case #" + (i + 1) + ": " + processCase(required, numOptions, options);
            }

            bufferedReader.close();            

            return answers;
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + fileName + "'");                   
            // Or we could just do this: 
            // ex.printStackTrace();
        }

        return fileContent;

    }

    public static String processCase(String required, int numOptions, String[] options){
        String[] requiredAr = required.split(" ");
        NewYearResolution.requiredInt = new int[3];
        NewYearResolution.requiredInt[0] = Integer.parseInt(requiredAr[0]);
        NewYearResolution.requiredInt[1] = Integer.parseInt(requiredAr[1]);
        NewYearResolution.requiredInt[2] = Integer.parseInt(requiredAr[2]);

        NewYearResolution.optionsInt = new int[numOptions][3];

        NewYearResolution.numOptions = numOptions;


        for(int i=0; i<numOptions;i++){
            String[] optionsAr = options[i].split(" ");
            NewYearResolution.optionsInt[i][0] = Integer.parseInt(optionsAr[0]);
            NewYearResolution.optionsInt[i][1] = Integer.parseInt(optionsAr[1]);
            NewYearResolution.optionsInt[i][2] = Integer.parseInt(optionsAr[2]);
        }

 
        String answer = findIfPossible(NewYearResolution.optionsInt[0][0],NewYearResolution.optionsInt[0][1],NewYearResolution.optionsInt[0][2], 0);
        if (answer == "yes") {
            return "yes";
        } else {
            answer = findIfPossible(0 ,0 ,0 , 0); 
            return answer;           
        }

    }

    static String findIfPossible(int c0, int c1, int c2, int curIndex){
        if (NewYearResolution.requiredInt[0] < c0 || NewYearResolution.requiredInt[1] < c1 || NewYearResolution.requiredInt[2] < c2 ){
            return "no";
        }

        if (NewYearResolution.requiredInt[0] == c0 && NewYearResolution.requiredInt[1] == c1 && NewYearResolution.requiredInt[2] == c2 ){
            return "yes";
        }

        //System.out.println(NewYearResolution.numOptions + " :: " + curIndex);
        if (NewYearResolution.numOptions <= (curIndex+1)){
            return "no";
        }
        String answer = findIfPossible(c0 + NewYearResolution.optionsInt[curIndex+1][0],c1 + NewYearResolution.optionsInt[curIndex+1][1],c2 + NewYearResolution.optionsInt[curIndex+1][2], curIndex+1);

        if (answer == "yes") {
            return "yes";
        } else {
            answer = findIfPossible(c0 ,c1 ,c2 , curIndex+1);
            return answer;   
        }

    }

}