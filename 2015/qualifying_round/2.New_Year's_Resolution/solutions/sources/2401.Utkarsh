#include <bits/stdc++.h>

using namespace std;
int p[21], c[21], f[21];

int recursion(int gp, int gc, int gf, int totp, int totc, int totf, int i, int tot)
{
	if (gp == totp && gc == totc && gf == totf) {
		return 1;
	}
	if (i == tot) {
		return 0;
	} 
	return max(recursion(gp,gc,gf,totp+p[i],totc+c[i],totf+f[i],i+1,tot), recursion(gp,gc,gf,totp,totc,totf,i+1,tot));
}

int main()
{
	int t, n, gp, gc, gf;

	scanf("%d", &t);

	for (int k = 1; k <= t; k++) {
		memset(p, 0, sizeof(p));
		memset(c, 0, sizeof(c));
		memset(f, 0, sizeof(f));
		scanf("%d %d %d", &gp, &gc, &gf);
		scanf("%d", &n);
		
		for (int i = 0; i < n; i++) {
			scanf("%d %d %d", &p[i], &c[i], &f[i]);
		}
		
		int x = recursion(gp, gc, gf, 0, 0, 0, 0, n);

		if (x == 1) {
			printf("Case #%d: yes\n", k);
		} else {
			printf("Case #%d: no\n", k);
		}
	}

	return 0;
}
		
