import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        List<TestCase> testCases = loadInput();
        List<String> output = new ArrayList<>();

        for (int i = 0; i < testCases.size(); i++) {
            String eatable = testCases.get(i).eatable() ? "yes" : "no";
            output.add("Case #" + (i + 1) + ": " + eatable);
        }

        saveOutput(output);
    }

    static class TestCase {
        Food need;
        List<Food> foods = new ArrayList<>();

        // Derived from PowerSet algorithm here: rosettacode.org/wiki/Power_set#Iterative
        public boolean eatable() {
            List<Food> sums = new ArrayList<>();
            sums.add(new Food(0, 0, 0));

            for (Food food : foods) {
                for (int i = 0, size = sums.size(); i < size; i++) {
                    Food sum = sums.get(i).plus(food);
                    if (sum.equals(need)) return true;
                    if (sum.lte(need)) sums.add(sum);
                }
            }

            return false;
        }
    }

    static class Food {
        int p, c, f;

        public Food(int p, int c, int f) {
            this.p = p;
            this.c = c;
            this.f = f;
        }

        Food plus(Food that) {
            return new Food(this.p + that.p, this.c + that.c, this.f + that.f);
        }

        boolean equals(Food that) {
            return this.p == that.p && this.c == that.c && this.f == that.f;
        }

        boolean lte(Food that) {
            return this.p <= that.p && this.c <= that.c && this.f <= that.f;
        }
    }

    private static List<TestCase> loadInput() {
        List<TestCase> testCases = new ArrayList<>();

        try {
            Scanner in = new Scanner(new File("input.txt"));
            int numTestCases = in.nextInt();
            for (int i = 0; i < numTestCases; i++) {
                TestCase testCase = new TestCase();

                testCase.need = new Food(in.nextInt(), in.nextInt(), in.nextInt());

                int numFoods = in.nextInt();
                for (int j = 0; j < numFoods; j++)
                    testCase.foods.add(new Food(in.nextInt(), in.nextInt(), in.nextInt()));

                testCases.add(testCase);
            }
            in.close();
        } catch (FileNotFoundException ignored) {
        }

        return testCases;
    }

    private static void saveOutput(List<String> outputLines) {
        try {
            PrintWriter out = new PrintWriter(new File("output.txt"));
            for (String line : outputLines)
                out.println(line);
            out.close();
        } catch (FileNotFoundException ignored) {
        }
    }
}
