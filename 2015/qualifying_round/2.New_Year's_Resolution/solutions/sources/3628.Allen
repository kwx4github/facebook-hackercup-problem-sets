import sys

lines = sys.stdin.readlines()

###

def tail(xs):
    if len(xs) == 1:
        return []
    return xs[1:]

def subset_sum(foods, target, nutrient, current_combination=[]):
    # print 'foods', foods
    # print 'nutrient', nutrient
    # print 'target', target
    if len(foods) == 0:
        # print 'done'
        if target == 0:
            return [current_combination]
        else:
            return []
    return subset_sum(tail(foods), target, nutrient, current_combination) + \
           subset_sum(tail(foods), target - foods[0][nutrient], nutrient, current_combination + [foods[0]])

n = 1           
lines.pop(0)
while lines:
    targets = map(int, lines.pop(0).split(' '))
    assert len(targets) == 3
    num_foods = int(lines.pop(0))
    foods = []
    for _ in xrange(num_foods):
        foods.append(map(int, lines.pop(0).split(' ')))
    passing = subset_sum(foods, targets[0], 0)
    # print 'passing', passing
    passing2 = [subset_sum(p, targets[1], 1) for p in passing]
    # print 'passing2', passing2
    ans = []
    for outer in passing2:
        for inner in outer:
            ans += subset_sum(inner, targets[2], 2)
    print 'Case #%d: %s' % (n, 'yes' if ans else 'no')
    n += 1
