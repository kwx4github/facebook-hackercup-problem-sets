#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <deque>
#include <cassert>

using namespace std;

#ifdef WIN32
	#define I64 "%I64d"
#else
	#define I64 "%lld"
#endif

typedef long long ll;

#define F first
#define S second
#define mp make_pair
#define pb push_back
#define all(s) s.begin(), s.end()
#define sz(s) (int(s.size()))
#define fname "a"
#define ms(a,x) memset(a, x, sizeof(a))
#define forit(it,s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); ++it)
#define MAXN 100001

int a[MAXN][3];
int b[3];
int c[3];
int n;

inline void solve()
{
	for (int j = 0; j < 3; ++j)
		scanf("%d", &b[j]);
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < 3; ++j)
			scanf("%d", &a[i][j]);
	for (int mask = 1; mask < (1 << n); ++mask)
	{		
		for (int j = 0; j < 3; ++j)
			c[j] = b[j];
		for (int i = 0; i < n; ++i)
			if ((mask >> i) & 1)
				for (int j = 0; j < 3; ++j)
					c[j] -= a[i][j];
		bool ok = 1;
		for (int j = 0; j < 3; ++j)
			ok &= (c[j] == 0);
		if (ok)
		{
			puts("yes");
			return;
		}
	}
	puts("no");
}

int main()
{
	#ifdef LOCAL
	freopen(fname".in", "r", stdin);
	freopen(fname".out", "w", stdout);
	#endif

	int tt;
	scanf("%d", &tt);
	for (int t = 0; t < tt; ++t)
	{
		printf("Case #%d: ", t + 1);
		solve();
	}
	return 0;
}
