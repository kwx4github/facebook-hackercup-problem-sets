using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _2_HackerCup
{
    class Program
    {
        static void Init(int t, StreamReader fs, StreamWriter fw)
        {
            String st;
            st = fs.ReadLine();
            var buf = st.Split(' ');

            var G = new int[3];
            G[0] = int.Parse(buf[0]);
            G[1] = int.Parse(buf[1]);
            G[2] = int.Parse(buf[2]);

            st = fs.ReadLine();
            var N = int.Parse(st);

            var food = new int[N,3];
            for (int i = 0; i < N; ++i)
            {
                st = fs.ReadLine();
                buf = st.Split(' ');

                food[i, 0] = int.Parse(buf[0]);
                food[i, 1] = int.Parse(buf[1]);
                food[i, 2] = int.Parse(buf[2]);
            }

            var res = Solve(G, N, food);

            //fw.WriteLine("Case #{0}: {1} {2}", t + 1, a[G[0], G[1], G[2]] > 0 ? "yes" : "no");
            fw.WriteLine("Case #{0}: {1}", t + 1, res ? "yes" : "no");
        }

        //private static short[,,]  a = new short[1000, 1000, 1000];
        private static Dictionary<long, int> a;
        

        private static bool Solve(int[] G, int N, int[,] food)
        {
            a = new Dictionary<long, int>();
            a[0] = 1;

            return rec(G, N - 1, food);
        }

        private static bool rec(int[] G, int p, int[,] food)
        {
            if (G[0] < 0 || G[1] < 0 || G[2] < 0)
                return false;

            var aa = G[0]*1000000 + G[1] * 1000 + G[2];
            if (a.ContainsKey(aa))
                return a[aa] > 0;

            bool res = false;
            for (int i = p; i >= 0 && !res; --i)
            {
                G[0] -= food[i, 0];
                G[1] -= food[i, 1];
                G[2] -= food[i, 2];

                if (rec(G, p - 1, food))
                    res = true;

                G[0] += food[i, 0];
                G[1] += food[i, 1];
                G[2] += food[i, 2];
            }
            a[aa] = res ? 1 : 0;
            return res;
        }
        static void Main()
        {
            var fs = new StreamReader(@"D:\2_in.txt");
            var fw = new StreamWriter(@"D:\2_out.txt");
            

            var T = int.Parse(fs.ReadLine() ?? "0");

            for (int t = 0; t < T; ++t)
            {
                Init(t, fs, fw);
            }

            fs.Close();
            fw.Close();
        }
    }
}

