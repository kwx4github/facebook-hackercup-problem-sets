#include<iostream>
#include<vector>
using namespace std;

struct cal
{
	int a;
	int b;
	int c;
	void print()
	{
		cout<<a<<" "<<b<<" "<<c;
	}
};

bool solve(vector<cal> v, cal t, int index)
{
	if(t.a==0 && t.b==0 && t.c==0)
		return true;
	else if(index == v.size())
		return false;
	else if(t.a < 0 || t.b <0 || t.c < 0)
		return false;
	cal t1 = (cal){t.a-v[index].a, t.b-v[index].b, t.c-v[index].c};
	return (solve(v,t1,index+1) || solve(v,t,index+1));
}
int main()
{
	int t,i,j,a,b,c,n;
	cin>>t;
	for(i=1;i<=t;i++)
	{
		cin>>a>>b>>c;
		cal target = (cal){a,b,c};
		cin>>n;
		vector<cal> vec;
		for(j=0;j<n;j++)
		{
			cin>>a>>b>>c;
			vec.push_back((cal){a,b,c});
		}
		if(solve(vec,target,0))
			cout<<"Case #"<<i<<": yes"<<endl;
		else
			cout<<"Case #"<<i<<": no"<<endl;	
	}
	return 0;
}
