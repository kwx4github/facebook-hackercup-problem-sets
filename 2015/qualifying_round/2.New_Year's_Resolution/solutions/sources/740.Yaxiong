/******************************************************************************\
*                         Author:  Dumbear                                     *
*                         Email:   dumbear[#at]163.com                         *
*                         Website: http://dumbear.com                          *
\******************************************************************************/
#include <algorithm>
#include <bitset>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <typeinfo>
#include <utility>
#include <vector>

using namespace std;

#define output(x) cout << #x << ": " << (x) << endl;

typedef long long LL;
typedef vector<int> VI;
typedef vector<long long> VL;
typedef vector<double> VD;
typedef vector<string> VS;

const int max_n = 20;

int t, g_p, g_c, g_f, n, p[max_n], c[max_n], f[max_n];

bool can_do(int l_p = 0, int l_c = 0, int l_f = 0, int index = 0) {
    if (l_p > g_p || l_c > g_c || l_f > g_f)
        return false;
    if (l_p == g_p && l_c == g_c && l_f == g_f)
        return true;
    if (index == n)
        return false;
    if (can_do(l_p + p[index], l_c + c[index], l_f + f[index], index + 1))
        return true;
    if (can_do(l_p, l_c, l_f, index + 1))
        return true;
    return false;
}

void solve() {
    scanf("%d%d%d", &g_p, &g_c, &g_f);
    scanf("%d", &n);
    for (int i = 0; i < n; ++i)
        scanf("%d%d%d", &p[i], &c[i], &f[i]);
    printf("Case #%d: %s\n", ++t, can_do() ? "yes" : "no");
}

int main() {
    freopen("out.txt", "w", stdout);
    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; ++i)
        solve();
    return 0;
}
