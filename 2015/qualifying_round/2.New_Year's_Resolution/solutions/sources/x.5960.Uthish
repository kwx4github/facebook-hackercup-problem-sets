import java.io.*;
import java.util.*;
public class NewYears {
	static boolean[] dp = new boolean[20001];
	public static void doSums(int[] arr,int i,int sum) {
		if(i>arr.length-2)
			return;
		doSums(arr,i+1,sum+arr[i+1]);
		if(!dp[sum])
			doSums(arr,i+1,sum);
		dp[sum]=true;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try {
			File f = new File(new File("").getAbsolutePath()+"/new_years_resolution.txt");
			File f2 = new File(new File("").getAbsolutePath()+"/uthishb2.txt");
			BufferedReader br = new BufferedReader(new FileReader(f));
			PrintWriter pw = new PrintWriter(new FileWriter(f2));
			int t =Integer.parseInt(br.readLine());
			int ff = t;
			while(t-->0) {
				int gp,gc,gf;
				StringTokenizer st = new StringTokenizer(br.readLine());
				gp = Integer.parseInt(st.nextToken());
				gc = Integer.parseInt(st.nextToken());
				gf = Integer.parseInt(st.nextToken());
				int n = Integer.parseInt(br.readLine());
				int gparr[] = new int[n+1];
				int gcarr[] = new int[n+1];
				int gfarr[] = new int[n+1];
				for(int i=0;i<n;i++) {
					st = new StringTokenizer(br.readLine());
					gparr[i] = Integer.parseInt(st.nextToken());
					gcarr[i] = Integer.parseInt(st.nextToken());
					gfarr[i] = Integer.parseInt(st.nextToken());
				}
				boolean gpbool,gcbool,gfbool;
				dp = new boolean[20001];
				doSums(gparr, -1, 0);
				gpbool = dp[gp];
				dp = new boolean[20001];
				doSums(gcarr, -1, 0);
				gcbool = dp[gc];
				dp = new boolean[20001];
				doSums(gfarr, -1, 0);
				gfbool = dp[gf];
				if(gpbool&&gcbool&&gfbool)
					pw.println("Case #"+(ff-t)+": yes");
				else
					pw.println("Case #"+(ff-t)+": no");
			}
			br.close();
			pw.flush();
			pw.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	}

}
