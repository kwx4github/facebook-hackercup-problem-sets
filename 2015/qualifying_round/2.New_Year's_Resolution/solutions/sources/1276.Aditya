#include <algorithm>
#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <list>
#include <cstring>
#include <stack>
#include <bitset>

using namespace std;

#define NMAX 2147483647
#define LMAX 9223372036854775807LL
#define pb push_back
#define pob pop_back
#define mp make_pair
#define st first
#define nd second
#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORD(i,a,b) for(int i=(a);i>(b);--i)
#define REP(i,n) FOR(i,0,n)
#define FORE(i,a,b) for(int i=(a);i<=(b);++i)

int P[1111], C[1111], F[1111];
int targetP, targetC, targetF;
int N;

bool dfs(int pos, int px, int cx, int fc) {
  if(pos == N) {
    return (targetP == px && targetC == cx && targetF == fc);
  }
  bool ans = 0;
  FORE(i,0,1) {
    if(i == 1) {
      ans |= dfs(pos + 1, px + P[pos], cx + C[pos], fc + F[pos]);
    }
    else {
      ans |= dfs(pos + 1, px, cx, fc);
    }
  }
  return ans;
}

int main()
{
  freopen("input.txt","r",stdin);
  freopen("out.txt","w",stdout);
  int TS;
  cin >> TS;
  FORE(ts,1,TS) {
    cin >> targetP >> targetC >> targetF;
    cin >> N;
    REP(i, N) {
      cin >> P[i] >> C[i] >> F[i];
    }
    cout << "Case #" << ts << ": " << (dfs(0, 0, 0, 0) ? "yes" : "no") << endl;
  }
  return 0;
}
