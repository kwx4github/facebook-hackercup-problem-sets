/*
 * Author:  vawait
 * Created Time:  2015/1/9 22:51:04
 * Problem: test.cpp
 */
#include<cstdio>
#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<vector>
#include<queue>
#include<stack>
#include<ctime>
using namespace std;
#define rep(i, a, b) for (int i = (a); i <= (b); ++i)
#define red(i, a, b) for (int i = (a); i >= (b); --i)
#define clr( x , y ) memset(x,y,sizeof(x))
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define sqr(x) ((x) * (x))
typedef long long lint;
int A , B , C , n , a[100] , b[100] , c[100];
set < lint > h;

void init()
{
    h.clear();
    scanf("%d%d%d%d",&A,&B,&C,&n);
    rep(i,1,n) scanf("%d%d%d",&a[i],&b[i],&c[i]);
}

bool dfs(lint sum,int n,int m,int k)
{
    lint cc = sum % 10000 , bb = sum / 10000 % 10000 , aa = sum / 100000000;
    if ( n > m ) {
        if ( k ) {
            if ( h.find( ( A - aa ) * 100000000 + ( B - bb ) * 10000 + C - cc ) != h.end() ) return 1; 
        } else {
            h.insert( sum );
        }
        return 0;
    }
    if ( dfs( sum , n + 1 , m , k ) ) return 1;
    aa += a[n]; bb += b[n]; cc += c[n];
    if ( aa <= A && bb <= B && cc <= C && dfs( aa * 100000000 + bb * 10000 + cc , n + 1 , m , k ) ) return 1;
    return 0;
}

void work()
{
    dfs( 0 , 1 , n / 2 , 0 );
    if ( dfs( 0 , n / 2 + 1 , n , 1 ) ) puts("yes"); else puts("no");
}

int main()
{
    //freopen("1.out","w",stdout);
    int t;
    cin >> t;
    rep(i,1,t) {
        printf("Case #%d: ",i);
        init();
        work();
    }
    return 0;
}
