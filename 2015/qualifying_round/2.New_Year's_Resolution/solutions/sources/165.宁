#include <bits/stdc++.h>
using namespace std;
int n;
struct Food
{
    int p,c,f;
}food[100];
bool in[100];
bool ok=0;
FILE*out=fopen("res.out","w");
void dfs(int cur,int p,int c,int f)
{
    if(ok)
        return;
    if(p==0&&c==0&&f==0)
    {
        for(int i=0;i<n;++i)
            if(in[i]==1)
                fprintf(out,"%d ",i);
        fprintf(out,"\n");
        ok=1;
        return;
    }
    if(cur==n)
    {
        return;
    }
    if(food[cur].p<=p||food[cur].c<=c||food[cur].f<=f)
    {
        in[cur]=1;
        dfs(cur+1,p-food[cur].p,c-food[cur].c,f-food[cur].f);
        in[cur]=0;
    }
    dfs(cur+1,p,c,f);
}
int main()
{
    freopen("new_years_resolution.txt","r",stdin);
    freopen("new_years_resolution.out","w",stdout);
    FILE*din=fopen("new_years_resolution.in","w");
    int t,p,c,f,ca=0;
    scanf("%d",&t);
    fprintf(din,"%d\n",t);
    while(t--)
    {
        memset(in,0,sizeof(in));
        ok=0;
        scanf("%d%d%d",&p,&c,&f);
        fprintf(din,"%d %d %d\n",p,c,f);
        scanf("%d",&n);
        fprintf(din,"%d\n",n);
        for(int i=0;i<n;++i)
        {
            scanf("%d%d%d",&food[i].p,&food[i].c,&food[i].f);
            fprintf(din,"%d %d %d\n",food[i].p,food[i].c,food[i].f);
        }
        dfs(0,p,c,f);
        if(ok)
        {
            printf("Case #%d: yes\n",++ca);
        }
        else printf("Case #%d: no\n",++ca);
    }
}
