#include <fstream>
#include <iostream>
#include <queue>
using namespace std;

struct Pos {
	int index;
	int p,c,f;
	Pos(int index, int p, int c, int f){
		this->index = index;
		this->p = p;
		this->c = c;
		this->f = f;		
	}
};

int main(){
	ifstream in ("entrada.in");
	ofstream out ("salida.out");
	
	int t;
	in>>t;
	
	for (int casen=1;casen<=t;casen++){
		bool isPossible = false;
		int gp,gc,gf;
		int n;
		in>>gp>>gc>>gf;
		in>>n;
		int p[n],c[n],f[n];
		for (int i=0;i<n;i++){
			in>>p[i]>>c[i]>>f[i];
		}
		queue<Pos>q;
		Pos init = Pos(-1, 0,0,0);
		q.push(init);
		
		while(!q.empty()){
			Pos pos = q.front();
			q.pop();
			if (pos.p == gp && pos.c == gc && pos.f == gf){
				isPossible = true;
			}
			for (int i=pos.index + 1; i<n;i++){
				Pos pp = Pos(i, pos.p + p[i], pos.c + c[i] , pos.f + f[i]);
				q.push(pp);
			}
		}
		
		out<<"Case #"<<casen<<": ";
		if (isPossible){
			out<<"yes"<<endl;
		}
		else {
			out<<"no"<<endl;
		}
	}
}
