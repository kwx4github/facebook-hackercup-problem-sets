#include<bits/stdc++.h>
using namespace std;
bool isSubsetSum(int a[],int b[],int c[] ,int n, int gp,int gc,int gf)
{
   // Base Cases
   if (gp == 0&&gc == 0&&gf == 0)
     return true;
   if (n == 0 && (gp != 0||gc!=0||gf!=0))
     return false;

   // If last element is greater than sum, then ignore it
   if (a[n-1] >gp||b[n-1]>gc||c[n-1]>gf)
     return isSubsetSum(a,b,c ,n-1, gp,gc,gf);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(a,b,c, n-1,gp,gc,gf) || isSubsetSum(a,b,c, n-1, gp-a[n-1],gc-b[n-1],gf-c[n-1]);
}
int main()
{
int t,gp,gc,gf,n,*a,*b,*c;
 ifstream f1;
    ofstream f2;
    f1.open("input.txt");
    f2.open("output.txt");
f1>>t;
for(int j=1;j<=t;j++)
{
f1>>gp>>gc>>gf;
f1>>n;
a=new int[n];
b=new int[n];
c=new int[n];
for(int i=0;i<n;i++)
    f1>>a[i]>>b[i]>>c[i];
    f2<<"Case #"<<j<<": ";
if(isSubsetSum(a,b,c, n,gp,gc,gf)==true)
        f2<<"yes";
    else
        f2<<"no";
    f2<<endl;

}
return 0;
}

