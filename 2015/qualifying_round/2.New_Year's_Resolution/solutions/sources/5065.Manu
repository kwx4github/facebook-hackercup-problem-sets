package in.manurampandit.facebookhackercup;

import java.util.Scanner;

public class NewYearResolution {

	/**
	 * 5 100 100 100 1 100 100 100 100 100 100 3 10 10 40 10 30 10 10 60 50
	 * 
	 * 
	 * Case #1: yes Case #2: no
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner in = new Scanner(System.in);
		int T = in.nextInt();
		int tA, tB, tC;
		int N;
		int[] a, b, c;
		for (int counter = 1; counter <= T; counter++) {
			tA = in.nextInt();
			tB = in.nextInt();
			tC = in.nextInt();
			N = in.nextInt();
			a = new int[N];
			b = new int[N];
			c = new int[N];
			for (int i = 0; i < N; i++) {
				a[i] = in.nextInt();
				b[i] = in.nextInt();
				c[i] = in.nextInt();
			}
			boolean ret = isPossible(a, b, c, tA, tB, tC);
			if (ret)
				System.out.println("Case #" + counter + ": yes");
			else
				System.out.println("Case #" + counter + ": no");
		}
	}

	private static boolean isPossible(int[] a, int[] b, int[] c, int tA,
			int tB, int tC) {
		// poor solution but can be worked out keeping only 20 nos.
		//in actual situation need recursive solution.. 
		int l = a.length;
		boolean isFound = false;
		for (int i = 0; i < l; i++) {
			if (a[i] == tA && b[i] == tB && c[i] == tC) {
				isFound = true;
				break;
			}
			for (int j = i + 1; j < l; j++) {
				if ((a[i] + a[j] == tA) && (b[i] + b[j] == tB)
						&& (c[i] + c[j] == tC)) {
					isFound = true;
					break;
				}
				for (int j2 = j + 1; j2 < l; j2++) {
					if ((a[i] + a[j] + a[j2] == tA)
							&& (b[i] + b[j] + b[j2] == tB)
							&& (c[i] + c[j] + c[j2] == tC)) {
						isFound = true;
						break;
					}

					for (int j3 = j2 + 1; j3 < l; j3++) {
						if ((a[i] + a[j] + a[j2] + a[j3] == tA)
								&& (b[i] + b[j] + b[j2] + b[j3] == tB)
								&& (c[i] + c[j] + c[j2] + c[j3] == tC)) {
							isFound = true;
							break;
						}
						for (int j4 = j3 + 1; j4 < l; j4++) {
							if ((a[i] + a[j] + a[j2] + a[j3] + a[j4] == tA)
									&& (b[i] + b[j] + b[j2] + b[j3] + b[j4] == tB)
									&& (c[i] + c[j] + a[j2] + c[j3] + c[j4] == tC)) {
								isFound = true;
								break;
							}
							for (int j5 = j4 + 1; j5 < l; j5++) {
								if ((a[i] + a[j] + a[j2] + a[j3] + a[j4]
										+ a[j5] == tA)
										&& (b[i] + b[j] + b[j2] + b[j3] + b[j4]
												+ b[j5] == tB)
										&& (c[i] + c[j] + c[j2] + c[j3] + c[j4]
												+ c[j5] == tC)) {
									isFound = true;
									break;
								}
								for (int j6 = j5 + 1; j6 < l; j6++) {
									if ((a[i] + a[j] + a[j2] + a[j3] + a[j4]
											+ a[j5] + a[j6] == tA)
											&& (b[i] + b[j] + b[j2] + b[j3]
													+ b[j4] + b[j5] + b[j6] == tB)
											&& (c[i] + c[j] + c[j2] + c[j3]
													+ c[j4] + c[j5] + c[j6] == tC)) {
										isFound = true;
										break;
									}
									for (int j7 = j6 + 1; j7 < l; j7++) {
										if ((a[i] + a[j] + a[j2] + a[j3]
												+ a[j4] + a[j5] + a[j6] + a[j7] == tA)
												&& (b[i] + b[j] + b[j2] + b[j3]
														+ b[j4] + b[j5] + b[j6]
														+ b[j7] == tB)
												&& (c[i] + c[j] + c[j2] + c[j3]
														+ c[j4] + c[j5] + c[j6]
														+ c[j7] == tC)) {
											isFound = true;
											break;
										}
										for (int j8 = j7 + 1; j8 < l; j8++) {
											if ((a[i] + a[j] + a[j2] + a[j3]
													+ a[j4] + a[j5] + a[j6]
													+ a[j7] + a[j8] == tA)
													&& (b[i] + b[j] + b[j2]
															+ b[j3] + b[j4]
															+ b[j5] + b[j6]
															+ b[j7] + b[j8] == tB)
													&& (c[i] + c[j] + c[j2]
															+ c[j3] + c[j4]
															+ c[j5] + c[j6]
															+ c[j7] + c[j8] == tC)) {
												isFound = true;
												break;
											}
											for (int j9 = j8 + 1; j9 < l; j9++) {
												if ((a[i] + a[j] + a[j2]
														+ a[j3] + a[j4] + a[j5]
														+ a[j6] + a[j7] + a[j8]
														+ a[j9] == tA)
														&& (b[i] + b[j] + b[j2]
																+ b[j3] + b[j4]
																+ b[j5] + b[j6]
																+ b[j7] + b[j8]
																+ b[j9] == tB)
														&& (c[i] + c[j] + c[j2]
																+ c[j3] + c[j4]
																+ c[j5] + c[j6]
																+ c[j7] + c[j8]
																+ c[j9] == tC)) {
													isFound = true;
													break;
												}
												for (int j10 = j9 + 1; j10 < l; j10++) {
													if ((a[i] + a[j] + a[j2]
															+ a[j3] + a[j4]
															+ a[j5] + a[j6]
															+ a[j7] + a[j8]
															+ a[j9] + a[j10] == tA)
															&& (b[i] + b[j]
																	+ b[j2]
																	+ b[j3]
																	+ b[j4]
																	+ b[j5]
																	+ b[j6]
																	+ b[j7]
																	+ b[j8]
																	+ b[j9]
																	+ b[j10] == tB)
															&& (c[i] + c[j]
																	+ c[j2]
																	+ c[j3]
																	+ c[j4]
																	+ c[j5]
																	+ c[j6]
																	+ c[j7]
																	+ c[j8]
																	+ c[j9]
																	+ c[j10] == tC)) {
														isFound = true;
														break;
													}
													for (int j11 = j10 + 1; j11 < l; j11++) {
														if ((a[i] + a[j]
																+ a[j2] + a[j3]
																+ a[j4] + a[j5]
																+ a[j6] + a[j7]
																+ a[j8] + a[j9]
																+ a[j10]
																+ a[j11] == tA)
																&& (b[i]
																		+ b[j]
																		+ b[j2]
																		+ b[j3]
																		+ b[j4]
																		+ b[j5]
																		+ b[j6]
																		+ b[j7]
																		+ b[j8]
																		+ b[j9]
																		+ b[j10]
																		+ b[j11] == tB)
																&& (c[i]
																		+ c[j]
																		+ c[j2]
																		+ c[j3]
																		+ c[j4]
																		+ c[j5]
																		+ c[j6]
																		+ c[j7]
																		+ c[j8]
																		+ c[j9]
																		+ c[j10]
																		+ c[j11] == tC)) {
															isFound = true;
															break;
														}

														for (int j12 = j11 + 1; j12 < l; j12++) {
															if ((a[i] + a[j]
																	+ a[j2]
																	+ a[j3]
																	+ a[j4]
																	+ a[j5]
																	+ a[j6]
																	+ a[j7]
																	+ a[j8]
																	+ a[j9]
																	+ a[j10]
																	+ a[j11]
																	+ a[j12] == tA)
																	&& (b[i]
																			+ b[j]
																			+ b[j2]
																			+ b[j3]
																			+ b[j4]
																			+ b[j5]
																			+ b[j6]
																			+ b[j7]
																			+ b[j8]
																			+ b[j9]
																			+ b[j10]
																			+ b[j11]
																			+ b[j12] == tB)
																	&& (c[i]
																			+ c[j]
																			+ c[j2]
																			+ c[j3]
																			+ c[j4]
																			+ c[j5]
																			+ c[j6]
																			+ c[j7]
																			+ c[j8]
																			+ c[j9]
																			+ c[j10]
																			+ c[j11]
																			+ c[j12] == tC)) {
																isFound = true;
																break;
															}
															for (int j13 = j12 + 1; j13 < l; j13++) {
																if ((a[i]
																		+ a[j]
																		+ a[j2]
																		+ a[j3]
																		+ a[j4]
																		+ a[j5]
																		+ a[j6]
																		+ a[j7]
																		+ a[j8]
																		+ a[j9]
																		+ a[j10]
																		+ a[j11]
																		+ a[j12]
																		+ a[j13] == tA)
																		&& (b[i]
																				+ b[j]
																				+ b[j2]
																				+ b[j3]
																				+ b[j4]
																				+ b[j5]
																				+ b[j6]
																				+ b[j7]
																				+ b[j8]
																				+ b[j9]
																				+ b[j10]
																				+ b[j11]
																				+ b[j12]
																				+ b[j13] == tB)
																		&& (c[i]
																				+ c[j]
																				+ c[j2]
																				+ c[j3]
																				+ c[j4]
																				+ c[j5]
																				+ c[j6]
																				+ c[j7]
																				+ c[j8]
																				+ c[j9]
																				+ c[j10]
																				+ c[j11]
																				+ c[j12]
																				+ c[j13] == tC)) {
																	isFound = true;
																	break;
																}
																for (int j14 = j13 + 1; j14 < l; j14++) {
																	if ((a[i]
																			+ a[j]
																			+ a[j2]
																			+ a[j3]
																			+ a[j4]
																			+ a[j5]
																			+ a[j6]
																			+ a[j7]
																			+ a[j8]
																			+ a[j9]
																			+ a[j10]
																			+ a[j11]
																			+ a[j12]
																			+ a[j13]
																			+ a[j14] == tA)
																			&& (b[i]
																					+ b[j]
																					+ b[j2]
																					+ b[j3]
																					+ b[j4]
																					+ b[j5]
																					+ b[j6]
																					+ b[j7]
																					+ b[j8]
																					+ b[j9]
																					+ b[j10]
																					+ b[j11]
																					+ b[j12]
																					+ b[j13]
																					+ b[j14] == tB)
																			&& (c[i]
																					+ c[j]
																					+ c[j2]
																					+ c[j3]
																					+ c[j4]
																					+ c[j5]
																					+ c[j6]
																					+ c[j7]
																					+ c[j8]
																					+ c[j9]
																					+ c[j10]
																					+ c[j11]
																					+ c[j12]
																					+ c[j13]
																					+ c[j14] == tC)) {
																		isFound = true;
																		break;
																	}
																	for (int j15 = j14 + 1; j15 < l; j15++) {
																		if ((a[i]
																				+ a[j]
																				+ a[j2]
																				+ a[j3]
																				+ a[j4]
																				+ a[j5]
																				+ a[j6]
																				+ a[j7]
																				+ a[j8]
																				+ a[j9]
																				+ a[j10]
																				+ a[j11]
																				+ a[j12]
																				+ a[j13]
																				+ a[j14]
																				+ a[j15] == tA)
																				&& (b[i]
																						+ b[j]
																						+ b[j2]
																						+ b[j3]
																						+ b[j4]
																						+ b[j5]
																						+ b[j6]
																						+ b[j7]
																						+ b[j8]
																						+ b[j9]
																						+ b[j10]
																						+ b[j11]
																						+ b[j12]
																						+ b[j13]
																						+ b[j14]
																						+ b[j15] == tB)
																				&& (c[i]
																						+ c[j]
																						+ c[j2]
																						+ c[j3]
																						+ c[j4]
																						+ c[j5]
																						+ c[j6]
																						+ c[j7]
																						+ c[j8]
																						+ c[j9]
																						+ c[j10]
																						+ c[j11]
																						+ c[j12]
																						+ c[j13]
																						+ c[j14]
																						+ c[j15] == tC)) {
																			isFound = true;
																			break;
																		}
																		for (int j16 = j15 + 1; j16 < l; j16++) {
																			if ((a[i]
																					+ a[j]
																					+ a[j2]
																					+ a[j3]
																					+ a[j4]
																					+ a[j5]
																					+ a[j6]
																					+ a[j7]
																					+ a[j8]
																					+ a[j9]
																					+ a[j10]
																					+ a[j11]
																					+ a[j12]
																					+ a[j13]
																					+ a[j14]
																					+ a[j15]
																					+ a[j16] == tA)
																					&& (b[i]
																							+ b[j]
																							+ b[j2]
																							+ b[j3]
																							+ b[j4]
																							+ b[j5]
																							+ b[j6]
																							+ b[j7]
																							+ b[j8]
																							+ b[j9]
																							+ b[j10]
																							+ b[j11]
																							+ b[j12]
																							+ b[j13]
																							+ b[j14]
																							+ b[j15]
																							+ b[j16] == tB)
																					&& (c[i]
																							+ c[j]
																							+ c[j2]
																							+ c[j3]
																							+ c[j4]
																							+ c[j5]
																							+ c[j6]
																							+ c[j7]
																							+ c[j8]
																							+ c[j9]
																							+ c[j10]
																							+ c[j11]
																							+ c[j12]
																							+ c[j13]
																							+ c[j14]
																							+ c[j15]
																							+ c[j16] == tC)) {
																				isFound = true;
																				break;
																			}
																			for (int j17 = j16 + 1; j17 < l; j17++) {
																				if ((a[i]
																						+ a[j]
																						+ a[j2]
																						+ a[j3]
																						+ a[j4]
																						+ a[j5]
																						+ a[j6]
																						+ a[j7]
																						+ a[j8]
																						+ a[j9]
																						+ a[j10]
																						+ a[j11]
																						+ a[j12]
																						+ a[j13]
																						+ a[j14]
																						+ a[j15]
																						+ a[j16]
																						+ a[j17] == tA)
																						&& (b[i]
																								+ b[j]
																								+ b[j2]
																								+ b[j3]
																								+ b[j4]
																								+ b[j5]
																								+ b[j6]
																								+ b[j7]
																								+ b[j8]
																								+ b[j9]
																								+ b[j10]
																								+ b[j11]
																								+ b[j12]
																								+ b[j13]
																								+ b[j14]
																								+ b[j15]
																								+ b[j16]
																								+ b[j17] == tB)
																						&& (c[i]
																								+ c[j]
																								+ c[j2]
																								+ c[j3]
																								+ c[j4]
																								+ c[j5]
																								+ c[j6]
																								+ c[j7]
																								+ c[j8]
																								+ c[j9]
																								+ c[j10]
																								+ c[j11]
																								+ c[j12]
																								+ c[j13]
																								+ c[j14]
																								+ c[j15]
																								+ c[j16]
																								+ c[j17] == tC)) {
																					isFound = true;
																					break;
																				}
																				for (int j18 = j17 + 1; j18 < l; j18++) {
																					if ((a[i]
																							+ a[j]
																							+ a[j2]
																							+ a[j3]
																							+ a[j4]
																							+ a[j5]
																							+ a[j6]
																							+ a[j7]
																							+ a[j8]
																							+ a[j9]
																							+ a[j10]
																							+ a[j11]
																							+ a[j12]
																							+ a[j13]
																							+ a[j14]
																							+ a[j15]
																							+ a[j16]
																							+ a[j17]
																							+ a[j18] == tA)
																							&& (b[i]
																									+ b[j]
																									+ b[j2]
																									+ b[j3]
																									+ b[j4]
																									+ b[j5]
																									+ b[j6]
																									+ b[j7]
																									+ b[j8]
																									+ b[j9]
																									+ b[j10]
																									+ b[j11]
																									+ b[j12]
																									+ b[j13]
																									+ b[j14]
																									+ b[j15]
																									+ b[j16]
																									+ b[j17]
																									+ b[j18] == tB)
																							&& (c[i]
																									+ c[j]
																									+ c[j2]
																									+ c[j3]
																									+ c[j4]
																									+ c[j5]
																									+ c[j6]
																									+ c[j7]
																									+ c[j8]
																									+ c[j9]
																									+ c[j10]
																									+ c[j11]
																									+ c[j12]
																									+ c[j13]
																									+ c[j14]
																									+ c[j15]
																									+ c[j16]
																									+ c[j17]
																									+ c[j18] == tC)) {
																						isFound = true;
																						break;
																					}

																					if (isFound)
																						break;
																				}

																				if (isFound)
																					break;
																			}

																			if (isFound)
																				break;
																		}

																		if (isFound)
																			break;
																	}

																	if (isFound)
																		break;
																}

																if (isFound)
																	break;
															}

															if (isFound)
																break;
														}
														if (isFound)
															break;
													}

													if (isFound)
														break;
												}

												if (isFound)
													break;
											}

											if (isFound)
												break;
										}

										if (isFound)
											break;
									}

									if (isFound)
										break;
								}

								if (isFound)
									break;
							}

							if (isFound)
								break;
						}

						if (isFound)
							break;
					}

					if (isFound)
						break;
				}

				if (isFound)
					break;
			}
			if (isFound)
				break;

		}
		return isFound;
	}

}
