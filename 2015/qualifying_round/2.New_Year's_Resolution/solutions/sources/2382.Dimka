#include <algorithm>
#include <iterator>
#include <iostream>
#include <utility>
#include <string>
#include <vector>

using namespace std;

typedef long long ll;

inline bool get_n(ll mask, int i)
{
  return (mask & (1LL << i));
}

string solve()
{
  int gp = 0, gc = 0, gf = 0;

  cin >> gp >> gc >> gf;

  int n;

  cin >> n;

  vector<int> vp(n), vc(n), vf(n);

  for(int i = 0; i < n; i++)
    cin >> vp[i] >> vc[i] >> vf[i];

  for(ll mask = 1LL; mask < (1LL << n); mask++)
  {
    int cp = 0, cc = 0, cf = 0;
    for(int i = 0; i < n; i++)
      if( get_n(mask, i) )
        cp += vp[i], cc += vc[i], cf += vf[i];

    if( cp == gp && cc == gc && cf == gf )
      return "yes";
  }

  return "no";
}

int main()
{
  int t;
  
  cin >> t;

  for(int tst = 1; tst <= t; tst++)
  {
    string out = solve();
    cout << "Case #" << tst << ": " << out << endl;
  }

	return 0;
}
