#include <iostream>

using namespace std;

const int MAXN = 30;

int GP, GC, GF;
int N;
int P[MAXN], C[MAXN], F[MAXN];

bool recur(int cur, int cp, int cc, int cf)
{
	if(cp == GP && cc == GC && cf == GF)
		return true;
	if(cur >= N)
		return false;
	for(int i = cur + 1; i < N; ++i)
	{
		if(recur(i, cp + P[i], cc + C[i], cf + F[i]))
			return true;
	}
	return false;
}

void solve(int t)
{
	if(recur(-1, 0, 0, 0))
		cout << "Case #" << t << ": yes\n";
	else
		cout << "Case #" << t << ": no\n";
}

int main()
{
	int T;
	cin >> T;
	for(int t = 0; t < T; ++t)
	{
		cerr << "Solving #" << t + 1 << "\n";
		cin >> GP >> GC >> GF;
		cin >> N;
		for(int i = 0; i < N; ++i)
		{
			cin >> P[i] >> C[i] >> F[i];
		}
		solve(t + 1);
	}
	return 0;
}

