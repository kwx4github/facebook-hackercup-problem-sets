#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#define eps 1e-9
#define FOR(x, s, e) for(int x = (s); x < (e); ++x)
#define FORc(x, s, e, c) for(int x = (s); x < (e) && (c); ++x)
#define STEP(x, s, e, d) for(int x = (s); x < (e); x+=(d))
#define ROF(x, s, e) for(int x = (s); x >= (e); --x)
#define ROFc(x, s, e, c) for(int x = (s); x >= (e) && (c); --x)
#define FOREACH(container, it) \
   for(typeof(container.begin()) it=container.begin(); it!=container.end(); it++)
#define EXP(i, s) for (int i = (s); i; i = qn[i])
#define vb vector<bool>
#define vi vector<int>
#define vii vector<pair<int, int> >
#define vs vector<string>
#define pb push_back
#define mp make_pair
#define ALL(X) X.begin(), X.end()
#define LL long long
#define pii pair<int, int>
#define x first
#define y second
#define gcd(x, y) __gcd((x), (y))
#define countbit(x) __builtin_popcount(x)

using namespace std;

int main(int argc, char **argv){
  int T;
  cin >> T;
  FOR(ca, 1, T+1) {
    int gp, gc, gf;
    cin >> gp >> gc >> gf;
    int N;
    cin >> N;
    vi P, C, F;
    FOR(i, 0, N) {
      int p, c, f;
      cin >> p >> c >> f;
      P.pb(p), C.pb(c), F.pb(f);
    }
    bool ok = false;
    FORc(i, 0, 1<<N, !ok) {
      int sp = 0, sc = 0, sf = 0;
      FORc(j, 0, N, sp <= gp && sc <= gc && sf <= gf) {
        if ((1<<j) & i) {
          sp += P[j];
          sc += C[j];
          sf += F[j];
        }
      }
      ok = sp == gp && sc == gc && sf == gf;
    }
    printf("Case #%d: %s\n", ca, ok ? "yes" : "no");
  }
  return 0;
}
