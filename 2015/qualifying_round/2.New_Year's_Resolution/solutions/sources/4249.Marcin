from sys import stdin
from pulp import *
file = open("new_years_resolution.txt")
number_of_lines = int(file.readline())
#print "T: %s" % number_of_lines
af=0
ac=0
ap=0
line = 0
prob = 0
while line < number_of_lines :
    line = line + 1
    #print '-----------'
    gp,gc,gf = [int(a) for a in file.readline().strip().split(' ')]
    #print "Target: %s, %s, %s" % (gp, gc, gf)
    N = int(file.readline())
    #print "N: %s" % N
    iline = 0
    ingredients = []
    while iline < N:
        iline = iline + 1
        ap, ac, af = [int(a) for a in file.readline().strip().split(' ')]
        ingredients.append([int(a) for a in [ap,ac,af]])

    # Solve Mathematical Programming Problem
    x_name = ['x_'+str(i) for i in range(N)]
    x = [LpVariable(x_name[i], 0, 1, LpBinary) for i in range(N) ]
    prob  = LpProblem('Facebook',LpMinimize)
    prob += LpConstraint(LpAffineExpression([(x[i],ingredients[i][0]) for i in range(N)]), LpConstraintEQ,'Proteins',gp)
    prob += LpConstraint(LpAffineExpression([(x[i],ingredients[i][1]) for i in range(N)]), LpConstraintEQ,'Carbohydrates',gc)
    prob += LpConstraint(LpAffineExpression([(x[i],ingredients[i][2]) for i in range(N)]), LpConstraintEQ,'Fats',gf)
    prob += LpAffineExpression([(x[i],ingredients[i][0]+ingredients[i][1]+ingredients[i][2]) for i in range(N)],gp+gc+gf)
    prob.solve()
    # Check the solution and write the answer
    ap = gp
    ac = gc
    af = gf
    for v in prob.variables():
        if int(v.varValue) == 1:
            j = int(v.name.replace('x_',''))
            ap -= ingredients[j][0]
            ac -= ingredients[j][1]
            af -= ingredients[j][2]
    #print ap,ac,af
    if ap+ac+af == 0:
        answer = 'yes'
    else:
        answer = 'no'
    print 'Case #%s: %s' % (line, answer)




