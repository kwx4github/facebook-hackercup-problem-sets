def subset_sum(numbers, target1, target2, target3, partial=[], partial2=[], partial3=[]):
    s = sum(partial)
    s2 = sum(partial2)
    s3 = sum(partial3)
    # check if the partial sum is equals to target
    if s == target1 and s2==target2 and s3==target3: 
        return True #print "sum(%s)=%s" % (partial, target1)
    if s >= target1 or s2 >= target2 or s3>=target3:
        return  False # if we reach the number why bother to continue
    boolval = False
    for i in range(len(numbers)):
        splitline=numbers[i].rstrip('\n').split(" ")
        n =int(splitline[0])
        o = int(splitline[1])
        p = int(splitline[2]) 
        remaining = numbers[i+1:]
        boolval = boolval or subset_sum(remaining, target1, target2, target3, partial + [n] ,partial2+[o], partial3+[p]) 
    return boolval

if __name__ == "__main__":
    f=open("newyear.txt","r")
    lists=f.readlines()
    tests=int(lists[0])
    i=1
    j=1
    while j<=tests:
        splitline=lists[i].rstrip('\n').split(" ")
        target1 =int(splitline[0])
        target2 = int(splitline[1])
        target3 = int(splitline[2])
        cnt=int(lists[i+1])+i+2
        i=i+2
        final=[]
        while i<cnt:
            splitline=lists[i].rstrip('\n').split(" ")
            num1 =int(splitline[0])
            num2 = int(splitline[1])
            num3 = int(splitline[2])
            if target1<num1 or target2<num2 or target3<num3:
                i=i+1
                continue
            final.append(lists[i])
            i=i+1
        #print final
        #print lists[i+2:int(lists[i+1])+i+2]
        #i=i+int(lists[i+1])+2
        if subset_sum(final,target1,target2,target3,[],[],[]):
            print "Case #%d: yes" %(j)
        else:
            print "Case #%d: no" %(j)
        j=j+1


    #Outputs:
    #sum([3, 8, 4])=15
    #sum([3, 5, 7])=15
    #sum([8, 7])=15
    #sum([5, 10])=15
