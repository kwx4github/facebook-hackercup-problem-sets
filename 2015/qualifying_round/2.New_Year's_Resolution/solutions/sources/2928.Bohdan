#include <algorithm>
#include <numeric>
#include <string>
#include <string.h>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <iostream>
#include <fstream>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <stdlib.h>
#include <time.h>
#include <sstream>
#include <stdio.h>
#include <stack>

using namespace std;

#define FOR(i,n) for (int i=0; i<n; ++i)
#define FORE(i,n) for (int i=0; i<=n; ++i)
#define REP(i,a,b) for (LL i=a; i<b; ++i)
#define REPE(i,a,b) for (LL i=a; i<=b; ++i)
#define ALL(c) (c).begin(), (c).end()
#define SORT(c) sort(ALL(c))
#define mp make_pair

#define pb push_back
#define sq(x) ((x)*(x))

typedef pair<int, int> PII;
typedef vector<PII> VPII;
typedef long long int LL;
typedef vector<int> VI;
typedef vector<bool> VB;
typedef pair<LL,LL> PLL;
typedef vector<VI> VVI;
typedef vector<LL> VL;

const double pi = acos(-1.0);
const int inf =(int) 1e9;
typedef unsigned long long int ULL;
const int MAXN = 300050;
const int MAX_WEIGHT = 2000010;
const int INF = 1e9;

LL toLL(string& s) {
	LL number = 0;
	FOR(i, s.size()) {
		number *= 10;
		number += (s[i] - '0');
	}
	return number;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int tt;
	cin >> tt;
	FOR(t , tt) {
		VI total(3);
		FOR(i, 3) cin >> total[i];
		int n;
		cin >> n;
		VVI products(n, VI(3));
		FOR(i, n) FOR(j, 3) cin >> products[i][j];
		int numberOfBitmasks = 1 << n;
		bool answer = false;
		VI current(3);
		FOR(i, numberOfBitmasks) {
			FOR(j, 3) current[j] = 0;
			FOR(j, n) FOR(k, 3) current[k] += products[j][k] * (bool)(i & (1 << j));
			bool current_true = true;
			FOR(j, 3) {
				if (current[j] != total[j]) 
					current_true = false;
			}
			if (current_true) {
				answer = true;
				break;
			}
		}
		string result = answer? "yes":"no";
		cout << "Case #" << t + 1 << ": " << result << endl;
	}
	return 0;
}