// {{{ Boilerplate Code <--------------------------------------------------
// vim:filetype=cpp:foldmethod=marker:foldmarker={{{,}}}

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define ALL(A)     (A).begin(), (A).end()

using namespace std;

// }}}

int main(){
	int T;
	cin>>T;


	for(int iter=0; iter<T; iter++){
		cout<<"Case #"<<(iter+1)<<": ";
		int GP,GC,GF;
		cin>>GP>>GC>>GF;

		int N;
		cin>>N;

		vector <int> P,C,F;

		int flag=0;

		FOR(i,0,N){
			int tmpp,tmpc,tmpf;
			cin>>tmpp>>tmpc>>tmpf;
			P.push_back(tmpp);
			C.push_back(tmpc);
			F.push_back(tmpf);
		}

		FOR(pattern,0,1<<N){
			int tmpp=0, tmpc=0, tmpf=0;
			FOR(i,0,N){
				if((pattern>>i)&1){
					tmpp+=P[i];
					tmpc+=C[i];
					tmpf+=F[i];
				}
			}

			if(tmpp==GP && tmpc==GC && tmpf==GF){
				flag=1;
			}
		}

		if(flag)
			cout<<"yes";
		else
			cout<<"no";

		cout<<endl;



	}

}
