import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;


public class New_Years_Resolution {
	public static void main(String[]arg) throws IOException
	{
		new New_Years_Resolution().solve();
	}
	boolean found;
	int GP,GC,GF;
	int nFoods;
	int[][]foods;
	public void solve()throws IOException
	{
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(in.readLine()) + 1;
		for(int t = 1; t < T; t++)
		{
			StringTokenizer st = new StringTokenizer(in.readLine());
			GP = Integer.parseInt(st.nextToken());
			GC = Integer.parseInt(st.nextToken());
			GF = Integer.parseInt(st.nextToken());
			nFoods = Integer.parseInt(in.readLine());
			foods = new int[nFoods][3];
			for(int i = 0; i < nFoods; i++)
			{
				st = new StringTokenizer(in.readLine());
				for(int j = 0; j < 3; j++)
				{
					foods[i][j] = Integer.parseInt(st.nextToken());
				}				
			}
			found = false;
			for(int i = 0; i < nFoods && !found; i++)
			{			 
				int p = foods[i][0];
				int c = foods[i][1];
				int f = foods[i][2];
				dfs(i,p,c,f);
			}
			System.out.print("Case #"+t+": ");
			if(found)
				System.out.println("yes");
			else
				System.out.println("no");
		}
	}
	public void dfs(int i,int p, int c, int f)
	{
		if(p == GP && c == GC && f == GF)
		{
			found = true;
			return;
		}		
		for(int j = i + 1; j < nFoods; j++)
		{
			if(p+foods[j][0]<= GP && c+foods[j][1] <= GC && f+foods[j][2] <= GF)
			{
				dfs(j,p+foods[j][0],c+foods[j][1],f+foods[j][2]);
			}
		}
	}
}
