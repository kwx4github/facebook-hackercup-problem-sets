import java.io.*;
import java.util.StringTokenizer;

public class newyears {
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new FileReader("newyears.in"));
        int numberInputs = Integer.parseInt(in.readLine());
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("newyears.out")));
        for (int i = 0; i < numberInputs; i++) {
            StringTokenizer stringTokenizer = new StringTokenizer(in.readLine());
            int[] reqs = new int[3];
            for (int j = 0; j < 3; j++) {
                reqs[j] = Integer.parseInt(stringTokenizer.nextToken());
            }

            int numOptions = Integer.parseInt(in.readLine());
            int[][] foods = new int[numOptions][3];
            for (int j = 0; j < numOptions; j++) {
                stringTokenizer = new StringTokenizer(in.readLine());
                for (int k = 0; k < 3; k++) {
                    foods[j][k] = Integer.parseInt(stringTokenizer.nextToken());
                }
            }
            int maxNum = (int) Math.pow(2, numOptions);

            for (int combo = 1; combo < maxNum; combo++) {
                boolean[] converted = convertToArray(combo, numOptions);
                int[] testAnswer = new int[3];
                for (int j = 0; j < numOptions; j++) {
                    if (converted[j]) {
                        for (int k = 0; k < 3; k++) {
                            testAnswer[k] += foods[j][k];
                        }
                    }
                }
                boolean allMatch = true;
                for (int k = 0; k < 3; k++) {
                    if (testAnswer[k] != reqs[k]) {
                        allMatch = false;
                    }
                }
                if (allMatch) {
                    out.println("Case #" + (i + 1) + ": yes");
                    break;
                }
                if (combo == maxNum - 1) {
                    out.println("Case #" + (i + 1) + ": no");
                }
            }
        }
        out.close();
    }

    public static boolean[] convertToArray(int x, int length) {
        boolean[] bits = new boolean[length];
        for (int i = length - 1; i >= 0; i--) {
            bits[i] = (x & (1 << i)) != 0;
        }
        return bits;
    }

}
