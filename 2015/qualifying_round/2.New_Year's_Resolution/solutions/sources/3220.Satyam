#include<bits/stdc++.h>
#define ll long long int
#define F first
#define S second
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define rep(i,in1,n) for(i=in1;i<=n;i++)
#define repn(i,in1,n) for(i=in1;i<n;i++)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n);
#define sf(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define nl printf("\n")
#define mem(arr,init) memset(arr,init,sizeof(arr))
//#define vector<int> vi 
//#define vector<vi> vvi 
 
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mp make_pair
#define ep emplace_back//c++11
#define ii pair<int,int> 
using namespace std;

typedef struct {
	int p1;
	int c1;
	int f1;
}food;
food arr[27];

bool fun(int n,int p2,int c2,int f2)
{
	if(p2<0 || c2<0 || f2<0)
	return false;
	if(p2==0 && c2==0 && f2==0)
	return true;
	if(n==1)
	{
		if(p2==0 && c2==0 && f2==0)
		return true;
		if(p2-arr[n].p1==0 && c2-arr[n].c1==0 && f2-arr[n].f1==0 )
		return true;
		else
		return 0; 
	}
	bool ans;
	ans=fun(n-1,p2,c2,f2)||fun(n-1,p2-arr[n].p1,c2-arr[n].c1,f2-arr[n].f1);
	
	return ans;	
	
}
int main()
{
	bool ans;
	int i,j,k,t,n,m,x,y,z;
	int gp,gc,gf,cs;
	freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
	
	sf(t);
	for(cs=1;cs<=t;cs++)
	{
		
		sf(gp);
		sf(gc);
		sf(gf);
		sf(n);
		for(i=1;i<=n;i++)
		{
			sf(x);
			arr[i].p1=x;
			sf(y);
			arr[i].c1=y;
			sf(z);
			arr[i].f1=z;
		}
		ans=fun(n,gp,gc,gf);
		printf("Case #%d: ",cs);
	//	Case #1: yes
		if(ans==true)
		{
			printf("yes\n");
		}
		else if(ans==false)
		{
				printf("no\n");
		}
		
		
	}

	return 0;
}
