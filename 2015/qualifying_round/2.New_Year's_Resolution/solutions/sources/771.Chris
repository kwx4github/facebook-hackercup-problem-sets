#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <algorithm>

using namespace std;

int N;
int Gp, Gc, Gf;

bool is_possible(vector<int> &P, vector<int> &C, vector<int> &F, int index, int cp, 
                 int cc, int cf) {
  if (cp > Gp || cc > Gc || cf > Gf) {
    return false;  
  }

  if (index == N) {
    if (cp == Gp && cc == Gc && cf == Gf) {
      return true;
    }
    return false;
  }

  return is_possible(P,C,F,index+1,cp,cc,cf) || is_possible(P,C,F,index+1,cp+P[index],cc + C[index],cf + F[index]);

}



int main() {
  int T;
  cin >> T;

  for(int tt = 1; tt <= T; tt++) {
    cin >> Gp >> Gc >> Gf >> N;
    vector<int> P(N), C(N), F(N);
    for (int i = 0; i < N; i++) {
      cin >> P[i] >> C[i] >> F[i];
    }
  
    bool worked = is_possible(P,C,F,0,0,0,0);
  
    cout << "Case #" << tt << ": ";
    cout << (worked ? "yes" : "no");
    cout << endl;
  }

  return 0;
}
