#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
//#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 150;
typedef long long LL;
const LL MOD = 1000000000 + 7;

struct food{
	LL p,c,f;
};

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#else
	//freopen("movetofront.in", "r", stdin); freopen("movetofront.out", "w", stdout);
#endif
	
	int T;
	cin>>T;
	forn(it, 0, T)
	{
		LL Gp,Gc,Gf;
		cin>>Gp>>Gc>>Gf;
		int n;
		cin>>n;
		vector<food> F(n);
		forn(i, 0, n)
			cin>>F[i].p>>F[i].c>>F[i].f;
		bool good = false;
		for(int i = 1; i < (1 << n); ++i)
		{
			LL sp = 0,sc = 0, sf = 0;
			for(int j = 0; j < n; ++j)
			{
				if (i & (1 << j))
				{
					sp += F[j].p;
					sc += F[j].c;
					sf += F[j].f;
				}
			}

			if (sp % Gp == 0 && sf % Gf == 0 && sc % Gc == 0)
			{
				sp /= Gp;
				sf /= Gf;
				sc /= Gc;
				if (sp == sf && sf == sc)
				{
					good = true;
					break;
				}
			}
		}

		cout<<"Case #"<<it+1<<": "<<(good ? "yes" : "no")<<endl;
	}


	return 0;
}