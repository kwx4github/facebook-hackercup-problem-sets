#include <stdio.h>
#include <stdlib.h>

#define ARRAYSIZE(a) (sizeof(a))/(sizeof(a[0]))
int P[1048580][20],C[1048580][20],F[1048580][20],row=0;
static int total_nodes;
void printSubset(int A[], int size, int a[][20])
{
    for(int i = 0; i < size; i++)
    {
    	a[row][i] = A[i];
    }
	row++;
}
void subset_sum(int s[], int t[],
                int s_size, int t_size,
                int sum, int ite,
                int const target_sum,
                int a[][20])
{
    total_nodes++;
    if( target_sum == sum )
    {
        printSubset(t, t_size, a);
        subset_sum(s, t, s_size, t_size-1, sum - s[ite], ite + 1, target_sum, a);
        return;
    }
    else
    {
        for( int i = ite; i < s_size; i++ )
        {
            t[t_size] = i;
            subset_sum(s, t, s_size, t_size + 1, sum + s[i], i + 1, target_sum, a);
        }
    }
}

void generateSubsets(int s[], int size, int target_sum, int a[][20])
{
	row=0;
    int *tuplet_vector = (int *)malloc(size * sizeof(int));

    subset_sum(s, tuplet_vector, size, 0, 0, 0, target_sum, a);

    free(tuplet_vector);
}

int main()
{
	int t,l=1;
	scanf("%d",&t);
	while(t--){
		
		int gp,gc,gf;
		int np,nc,nf;
		scanf("%d %d %d",&gp,&gc,&gf);
		int n,i,j,k,m;
		scanf("%d",&n);
		int p[n],c[n],f[n];

		for(i=0; i<n; i++){
			scanf("%d %d %d",&p[i],&c[i],&f[i]);
		}

		generateSubsets(p, n, gp, P);
		np=row;
		generateSubsets(c, n, gc, C);
		nc = row;
		generateSubsets(f, n, gf, F);
		nf=row;
		
		for(i=0; i<np; i++){
			for(m=0; m<nc; m++){
				for(j=0,k=0; j<20; j++,k++){
					if(P[i][j]!=C[m][k])
					break;
				}
				if(j==20){
//					printf("1.hi\n");
					break;
				}
			}
			if(j==20){
//				printf("2.hi\n");
				break;
			}
		}
		if(i!=np){
		for(m=0; m<nf; m++){
			for(j=0,k=0; j<20; j++,k++){
				if(P[i][j]!=C[m][k])
				break;
			}
			if(j==20){
//				printf("3.hi\n");
				break;
			}
		}
		}
		if(j==20)
			printf("Case #%d: yes\n",l);
		else printf("Case #%d: no\n",l);

/*		printf("GP-->%d\n",gp);
		for(i=0; i<np; i++){
			for(j=0; j<n; j++)
				if(P[i][j] || (P[i][j]==0 && j==0))
				printf("%d\t",P[i][j]);
			printf("\n");
		}

		
		printf("GC-->%d\n",gc);
		for(i=0; i<nc; i++){
			for(j=0; j<n; j++)
				if(C[i][j] || (C[i][j]==0 && j==0))
				printf("%d\t",C[i][j]);
			printf("\n");
		}

		
		printf("GF-->%d\n",gf);
		for(i=0; i<nf; i++){
			for(j=0; j<n; j++)
				if(F[i][j] || (F[i][j]==0 && j==0))
				printf("%d\t",F[i][j]);
			printf("\n");
		}
		printf("***************************************\n");

*/		for(i=0; i<np; i++)
			for(j=0; j<n; j++)
				P[i][j]=0;
		
		for(i=0; i<nc; i++)
			for(j=0; j<n; j++)
				C[i][j]=0;

		for(i=0; i<nf; i++)
			for(j=0; j<n; j++)
				F[i][j]=0;

		l++;
	}
    return 0;
}

