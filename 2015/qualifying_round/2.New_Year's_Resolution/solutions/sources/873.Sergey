import java.util.*;
import java.io.*;

public class resolution_sp implements Runnable {
    public static void main(String[] args) {
        new Thread(new resolution_sp()).start();
    }

    @Override
    public void run() {
        try {
            br = new BufferedReader(new FileReader("input.txt"));
            out = new PrintWriter("output.txt");
            solve();
            out.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            System.exit(566);
        }
    }

    BufferedReader br;
    StringTokenizer st;
    PrintWriter out;
    boolean eof = false;

    String nextToken() {
        while (st == null || !st.hasMoreTokens()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (Exception e) {
                eof = true;
                return "0";
            }
        }
        return st.nextToken();
    }

    int nextInt() {
        return Integer.parseInt(nextToken());
    }

    void solve() {
	int tests = nextInt();
	for (int test = 1; test <= tests; test++) {
	    int Gp = nextInt();
	    int Gc = nextInt();
	    int Gf = nextInt();
	    int n = nextInt();
	    int[] p = new int[n];
	    int[] c = new int[n];
	    int[] f = new int[n];
	    for (int i = 0; i < n; i++) {
		p[i] = nextInt();
		c[i] = nextInt();
		f[i] = nextInt();
	    }
	    boolean found = false;
	    for (int m = 0; m < (1 << n); m++) {
	      int P = 0;
	      int C = 0;
	      int F = 0;
	      for (int i = 0; i < n; i++) {
	    	if ((m & (1 << i)) != 0) {
	    	    P += p[i];
	    	    C += c[i];
	    	    F += f[i];
	    	}
	      }
	      if (P == Gp && C == Gc && F == Gf) {
	        found = true;
	        break;
	      }
	    }
	    out.println("Case #" + test + ": " + (found ? "yes" : "no"));
	}
    }
}
