#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <unordered_map>
#include <unordered_set>
#include <list>


using namespace std;
bool solve(vector<vector<int> >& food, const int i,
	const int Gp, const int Gc, const int Gf) {
    int p=Gp-food[i][0];
    int c=Gc-food[i][1];
    int f=Gf-food[i][2];
    if (p==0 && c==0 && f==0) return true;
    if (i+1==food.size()) return false;

    if (p<0 || c<0 || f<0) {
	return solve(food, i+1, Gp, Gc, Gf);
    }
    return solve(food, i+1, p,c,f) || solve(food,i+1, Gp,Gc,Gf);
}
int main(void) {
    int T;
    cin>>T;
    for (int t=0;t<T;++t) {
	int Gp, Gc, Gf;
	cin>>Gp>>Gc>>Gf;
	int N;
	cin>>N;
	vector<vector<int> > food;
	for (int i=0;i<N;++i) {
	    int p,c,f;
	    cin>>p>>c>>f;
	    vector<int> v;
	    v.push_back(p);
	    v.push_back(c);
	    v.push_back(f);
	    food.push_back(v);
	}
	bool ans=solve(food, 0, Gp, Gc, Gf);
	if (ans) {
	    cout<<"Case #"<<t+1<<": yes"<<endl;
	} else {
	    cout<<"Case #"<<t+1<<": no"<<endl;
	}
    }
    return 0;
}
