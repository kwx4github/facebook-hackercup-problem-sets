#include <iostream>
#include <cstring>
#include <algorithm>
#include <cstdio>
#include <fstream>
using namespace std;

int Req[3];
int Protein[21],Carbs[21],Fat[21];
bool P[21][1001],C[21][1001],F[21][1001];
int N;

void init()
{
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<1001;j++)
        {
            P[i][j]=C[i][j]=F[i][j]=false;
        }
    }
}

bool Possible(int foodIndex,int prot,int carb,int fat)
{
    if(prot==0 && carb==0 && fat==0){return true;}
    if(foodIndex>=N){return false;}
    if(prot<=0 || carb<=0 || fat<=0){return false;}

    if(P[foodIndex][prot] && C[foodIndex][carb] && F[foodIndex][fat])
    {
        return true;
    }


    P[foodIndex][prot] = C[foodIndex][carb] = F[foodIndex][fat]=
    Possible(foodIndex+1,prot,carb,fat)||
    Possible(foodIndex+1,prot-Protein[foodIndex],carb-Carbs[foodIndex],fat-Fat[foodIndex]);

    return (P[foodIndex][prot] && C[foodIndex][carb] && F[foodIndex][fat]);
}

int main()
{
    int T;
    ofstream myFile;
    myFile.open("new_years_resolutionOut.txt");

    scanf("%d",&T);

    for(int iter=1;iter<=T;iter++)
    {
        scanf("%d %d %d",&Req[0],&Req[1],&Req[2]);
        scanf("%d",&N);
        init();
        for(int i=0;i<N;i++)
        {
            scanf("%d %d %d",&Protein[i],&Carbs[i],&Fat[i]);
            P[i][Protein[i]]=C[i][Carbs[i]]=F[i][Fat[i]]=true;
        }

        myFile<<"Case #"<<iter<<": ";
        if(Possible(0,Req[0],Req[1],Req[2]))
        {
            myFile<<"yes"<<endl;
        }
        else
        {
            myFile<<"no"<<endl;
        }
    }
    return 0;
}
