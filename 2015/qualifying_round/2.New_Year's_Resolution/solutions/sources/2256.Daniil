// D language
import std.stdio, std.string, std.conv, std.algorithm;

void main(string[] args)
{
    foreach (test; 0 .. readln.strip.to!uint) {
		writef("Case #%d: ", test+1);

		int[] target = readln.strip.split.to!(int[]);

		uint len = readln.strip.to!(uint);

		uint food[][] = new uint[][len];

		foreach (i; 0..len) {
			food[i] = readln.strip.split.to!(uint[]);
		}

		bool canFeed(int[] target, int depth) {
			bool allZeroes = true;
			
			foreach(food; target) {
				if (food<0) return false;
				if (food>0) allZeroes = false;				
			}

			if (allZeroes) return true;
			else {
				if (depth < 0) return false;
				
				if (canFeed(target, depth-1)) return true;

				int left[] = new int[3];
				foreach(i; 0..3) {
					left[i] = target[i]-food[depth][i];
				}
				return canFeed(left, depth-1);
			}
		}

		writeln(canFeed(target, len-1)?"yes":"no");
    }
}
