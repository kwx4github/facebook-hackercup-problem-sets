#pragma comment(linker,"/STACK:268435456")
#include <iostream>
#include <iomanip>
#include <fstream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <cmath>
#include <climits>
#include <cstring>
#include <string>
#include <sstream>
#include <bitset>
#include <iterator>
#include <list>
#include <ctime>
#include <functional>


#define FR(i,n) for(int (i)=0;(i)<(n);(i)++)
#define FOR(i,c,n) for(int (i)=(c);(i)<(n);(i)++)
#define REP(it,v,cont) for((cont)::iterator (it)=(v).begin();(it)!=(v).end();++(it))
#define CLR(a,c) memset((a),(c),sizeof (a))
#define ALL(v) (v).begin(),(v).end()
#define VCPRINT(v) for(int iii = 0;iii < (v).size();iii++) cout<<(v)[iii]<<" ";cout<<endl;
#define SETPRINT(v,cont) for((cont)::iterator iiit = (v).begin();iiit != (v).end();iiit++) cout<<*iiit<<" ";cout<<endl;

bool ascending (int i,int j) { return (i<j); }
bool descending (int i,int j) { return (i>j); }

typedef long long ll;
typedef unsigned long long ull;
#define PII pair<int,int>
#define PLL pair<long long,long long>
#define PULI pair<unsigned long long,int>
#define PIL pair<int,long long>
#define PSI pair<string,int>
#define PSS pair<string,string>
#define PDD pair<double,double>
#define PIB pair<int,bool>
typedef long double ld;
#define PLI pair<ll,int>
using namespace std;

int A[25],B[25],C[25];

int main()
{
	ifstream cin("a.in");
	ofstream cout("a.out");
	int T;cin>>T;
	FOR(_,1,T+1)
	{
		cout<<"Case #"<<_<<": ";
		int gp,gc,gf;cin>>gp>>gc>>gf;
		int n;cin>>n;
		FR(i,n) cin>>A[i]>>B[i]>>C[i];
		int n1 = n/2;
		int n2 = n-n1;

		set<pair<int,PII> > S;

		FR(mask,1<<n1)
		{
			int a=0,b=0,c=0;
			FR(j,n1)
				if((1<<j) & mask)
					a+=A[j],b+=B[j],c+=C[j];
			S.insert(make_pair(a,PII(b,c)));
		}
		bool flag = false;
		FR(mask,1<<n2)
		{
			int a=0,b=0,c=0;
			FR(j,n2)
				if((1<<j) & mask)
					a+=A[n1+j],b+=B[n1+j],c+=C[n1+j];
			if(S.find(make_pair(gp-a,PII(gc-b,gf-c)))!=S.end())
				flag = true;
		}
		if(flag) cout<<"yes"<<endl;
		else cout<<"no"<<endl;
	}

}