import java.io.*;

/**
 * @author vilmantas baranauskas
 */
public class NewYearResolution {


    public static void main(String[] args) throws IOException {

        BufferedReader in = new BufferedReader(new FileReader("in.txt"));
        BufferedWriter out = new BufferedWriter(new FileWriter("out.txt"));

        // number of test cases
        int t = Integer.parseInt(in.readLine());

        for (int i = 0; i < t; i++) {
            CharSequence solution = "Case #" + (i + 1) + ": " + solveTestCase(in);
            System.out.println(solution);
            out.write(solution.toString());
            out.newLine();
        }

        in.close();
        out.close();

    }

    private static String solveTestCase(BufferedReader in) throws IOException {

        int[] target = readLineOfInts(in);

        int nFoods = readLineOfInts(in)[0];

        int[][] foods = new int[nFoods][];
        for (int i = 0; i < foods.length; i++) {
            foods[i] = readLineOfInts(in);
        }

        int[] current = new int[3];

        if (findSolution(target, current, foods, 0)) {
            return "yes";
        } else {
            return "no";
        }

    }

    private static boolean findSolution(int[] target, int[] current, int[][] foods, int i) {

        int r = comp(target, current);

        if (r == 0) {
            return true;
        } else if (r > 0) {
            return false;
        }


        if (i == foods.length) {
            return false;
        }

        if (findSolution(target, current, foods, i + 1)) {
            return true;
        }

        try {

            current[0] += foods[i][0];
            current[1] += foods[i][1];
            current[2] += foods[i][2];

            return findSolution(target, current, foods, i + 1);

        } finally {
            current[0] -= foods[i][0];
            current[1] -= foods[i][1];
            current[2] -= foods[i][2];
        }
    }

    private static int comp(int[] target, int[] current) {

        for (int i = 0; i < target.length; i++) {
            if (current[i] > target[i]) {
                return 1;
            }
        }

        for (int i = 0; i < target.length; i++) {
            if (current[i] < target[i]) {
                return -1;
            }
        }

        return 0;
    }


    private static int[] readLineOfInts(BufferedReader in) throws IOException {
        String[] v1Str = in.readLine().split(" ");
        int[] items = new int[v1Str.length];
        for (int i = 0; i < v1Str.length; i++) {
            items[i] = Integer.parseInt(v1Str[i]);
        }
        return items;
    }

}
