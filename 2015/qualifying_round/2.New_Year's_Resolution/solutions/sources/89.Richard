import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class NewYearsResolution {

	private static ArrayList<String> list;

	private static void combo(String s, int m) {
		combo(s, "", 0, s.length() - m);
	}

	private static void combo(String s, String prefix, int m, int n) {
		if (n == s.length())
			list.add(prefix);
		else
			for (int i = m; i <= n; i++)
				combo(s, prefix + s.substring(i, i + 1), i + 1, n + 1);
	}

	public static void main(String[] args) throws FileNotFoundException {
		Scanner scan = new Scanner(new File("new_years_resolution.txt"));
		PrintWriter out = new PrintWriter("new_years_resolution-out.txt");

		int t = scan.nextInt();
		A: for (int i = 1; i <= t; i++) {
			final int p = scan.nextInt();
			final int c = scan.nextInt();
			final int f = scan.nextInt();

			int n = scan.nextInt();
			int[][] food = new int[n][3];

			int high = 0;
			int[] count = new int[3];
			for (int j = 0; j < n; j++) {
				count[0] += food[j][0] = scan.nextInt();
				count[1] += food[j][1] = scan.nextInt();
				count[2] += food[j][2] = scan.nextInt();

				if (food[j][0] > p || food[j][1] > c || food[j][2] > f)
					high++;
			}

			if (count[0] < p || count[1] < c || count[2] < f) {
				out.println("Case #" + i + ": no");
				continue A;
			}

			Arrays.sort(food, new Comparator<int[]>() {
				public int compare(int[] a, int[] b) {
					return Math.max(a[0] - p, Math.max(a[1] - c, a[2] - f))
							- Math.max(b[0] - p, Math.max(b[1] - c, b[2] - f));
				}
			});

			String combo = "";
			for (char let = 'A'; let < 'A' + n - high; let++)
				combo += let;

			for (int j = 1; j <= n; j++) {
				list = new ArrayList<>();
				combo(combo, j);

				B: for (String s : list) {
					int[] sum = new int[3];
					for (int k = 0; k < j; k++) {
						int index = s.charAt(k) - 'A';
						sum[0] += food[index][0];
						sum[1] += food[index][1];
						sum[2] += food[index][2];

						if (sum[0] > p || sum[1] > c || sum[2] > f)
							continue B;
					}

					if (sum[0] == p && sum[1] == c && sum[2] == f) {
						out.println("Case #" + i + ": yes");
						continue A;
					}
				}
			}

			out.println("Case #" + i + ": no");
		}

		scan.close();
		out.close();
	}

}
