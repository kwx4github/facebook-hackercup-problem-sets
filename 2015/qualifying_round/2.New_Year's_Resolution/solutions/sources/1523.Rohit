///ROHIT PATIYAL///

#include <iostream>
#include <cstdio>	//for printf and scanf (faster io)
#include <cmath> 	//for logl2() and pow etc math functions
#include <algorithm>	//for sort and other algorithms
#include <vector> 	//for vectors(resizable arrays)
					
using namespace std;

#define lli long long int
#define ull unsigned long long	//(0 - 18446744073709551615) ie (0 - 10x10^19) 	lli - 0 to 4294967295 ie (0 - 10^9)
#define rep(i,b) for(i=0;i<b;i++)
#define repab(i,a,b) for(i=a;i<b;i++)
#define printArray(a,size) for(lli i=0;i<size;i++){cout<<a[i]<<endl;};

void isPossible(lli gp, lli gc, lli gf, lli p[], lli c[], lli f[], lli i, lli N, bool *is){
	//cout<<"[ "<<i;//" "<<gp<<" "<<gc <<" "<<gf<<"}"<<endl;
	if(i<=N && gp >= 0 && gc >= 0 && gf >= 0){
		if((gp == 0) && (gc == 0) && (gf == 0)){
			*is = true;
		//	cout<<" ---------------------------------------"<<endl;
			return;
		}
	
		isPossible(gp-p[i], gc - c[i], gf -f[i], p,c,f, i+1,N,is);
		isPossible(gp, gc, gf, p,c,f, i+1,N,is);
	}
}



//max stack size allowed is 10^8
int main(){
	//max stack size allowed is 10^6
	lli t, T;
	scanf("%lld", &T);
	lli gp, gc, gf;
	rep(t,T){
		scanf("%lld %lld %lld", &gp, &gc, &gf);
		lli N, n;
		scanf("%lld",&N);
		lli p[N], c[N], f[N];
		rep(n, N){
			scanf("%lld %lld %lld", &p[n], &c[n], &f[n]);
		}
		bool is = false;
		isPossible(gp, gc, gf, p,c,f,0,N, &is);
		if(is == true)
			printf("Case #%lld: yes\n", t+1);
		else
			printf("Case #%lld: no\n", t+1);
	}

	return 0;
} 
