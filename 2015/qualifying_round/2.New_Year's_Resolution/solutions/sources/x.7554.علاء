#include <iostream>
#include <vector>
using namespace std;

struct Food
{
	int P;
	int C;
	int F;
};

Food operator+(Food lhs, const Food& rhs)
{
	lhs.P += rhs.P;
	lhs.C += rhs.C;
	lhs.F += rhs.F;
	return lhs;
}

vector<Food> V;
bool Res = false;
int Gp, Gc, Gf;

void Calc(int n, Food h)	//h holder
{
	if (Res)	return;
	
	Food l;	//local
	for(int i=n+1; i<V.size(); i++)
	{
		l = h + V[i];
		if (l.C==Gc && l.P==Gp && l.F==Gf)
		{
			Res = true;
			break;
		}
		
		Calc(i, l);
	}
}

int main() {
	
	int T,N, p,c,f;
	
	cin>>T;
	
	for(int t=1; t<=T; t++)
	{
		cout << "Case #" << t << ": ";
		
		cin>>Gp>>Gc>>Gf;
		cin>>N;
		
		V.clear();
		bool go = true;
		Food O;
		Res = false;
		
		for(int n=0; n<N; n++)
		{
			cin>>p>>c>>f;
			
			if (p>Gp || c>Gc || f>Gf)
				continue;

			if (p==Gp && c==Gc && f==Gf)
			{
				cout << "yes\n";
				
				go = false;
				break;
			}

			O.P = p;	O.C = c;	O.F = f;
			V.push_back(O);
		}
		
		if (go)
		{
			O = V[0];
			Calc(0, O);
			
			cout << ((Res)?"yes\n":"no\n");
		}
	}
	
	return 0;
}