#!usr/bin/perl


use strict;
use warnings;

our @foodOptions;
our $goal;

open(IN, "<new_years_resolution.txt");
open(OUT, ">output_2.txt");

my $numOfCases = <IN>;
if($numOfCases <= 0)
{
	return;
}

my $caseNumber = 1;
while($goal = <IN>)
{
	chomp($goal);
	my $foodOptionsCount = <IN>;
	chomp($foodOptionsCount);
	
	@foodOptions = ();
	
	foreach(0..$foodOptionsCount - 1)
	{
		my $foodOption = <IN>;
		chomp($foodOption);
		push(@foodOptions, $foodOption);
	}
	
    my $initTotals = "0 0 0";
    my $yesNo = 0;
    for(my $i = 0; $i < scalar(@foodOptions) && $yesNo == 0; $i++)
    {
        my $result = eatFood($i, $initTotals, scalar(@foodOptions));
        if($result == 1)
        {
            $yesNo = 1;
        }
    }

    print OUT "Case #$caseNumber: ";
    if($yesNo)
    {
        print OUT "yes";
    }
    else
    {
        print OUT "no";
    }
    print OUT "\n";
    $caseNumber++;
}

sub eatFood
{
    my $index = shift;
    my $total = shift;
    my $maxIndex = shift;

    if($index >= $maxIndex)
    {
        return 0;
    }
    my $amount = addFood($total, $foodOptions[$index]);
    my $meter = meter($goal, $amount);
    if($meter == 1)
    {
        return 0;
    }
    elsif($meter == 0)
    {
        return 1;
    }
    else
    {
        for(my $i = $index + 1; $i < $maxIndex; $i++)
        {
            if(eatFood($i, $amount, $maxIndex) == 1)
            {
                return 1;
            }
        }
        return 0;
    }
    
}

close(IN);
close(OUT);

sub addFood
{
	my $current = shift;
	my $addition = shift;
	
	my @currents = split(' ', $current);
	my @additions = split(' ', $addition);
	
	my @results = ();
	
	for(my $i = 0; $i < scalar(@currents); $i++)
	{
		push(@results, $currents[$i] + $additions[$i]);
	}
	
	my $result = join(' ', @results);
	return $result;
}

sub meter
{
	my $goal = shift;
	my $current = shift;
	
	my @goals = split(' ', $goal);
	my @currents = split(' ', $current);
	
	my $perfect = 0;
	
	for(my $i = 0; $i < scalar(@goals); $i++)
	{
		if($currents[$i] > $goals[$i])
		{
			return 1;
		}
		elsif($currents[$i] < $goals[$i])
		{
			$perfect = -1;
		}
	}
	return $perfect;
}
