from itertools import chain, combinations

def main():
	testcases = int(input())
	for caseNr in range(1, testcases+1):
		a, b, c = map(int, input().split())
		t = int(input())
		aa = list()
		bb = list()
		cc = list()
		for i in range(0, t):
			ai, bi, ci = map(int, input().split())
			aa.append(ai)
			bb.append(bi)
			cc.append(ci)
		print("Case #%i: %s" % (caseNr, solve(a,b,c,aa,bb,cc)))
    
def solve(a,b,c,aa,bb,cc):
	# remove non healthy food
	i = 0
	while i < len(aa):
		if aa[i] > a or bb[i] > b or cc[i] > c:
			aa.pop(i)
			bb.pop(i)
			cc.pop(i)
			i -= 1
		i += 1

	idxs = [i for i in range(0, len(aa))]
	for subset in all_subsets(idxs):
		aaa = bbb = ccc = 0
		for i in subset:
			aaa += aa[i]
			bbb += bb[i]
			ccc += cc[i]
		if (aaa == a and bbb == b and ccc == c):
	 		return "yes"
	return "no"

def all_subsets(ss):
	return chain(*map(lambda x: combinations(ss, x), range(1, len(ss)+1)))	
    
if __name__ == "__main__":
	main()
    