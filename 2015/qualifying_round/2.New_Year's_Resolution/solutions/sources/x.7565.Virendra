#include <stdio.h>

void xorWithPowerSet(int *arrP, int* arrC, int *arrF, int size, int Gp, int Gc, int Gf)
{
    unsigned int pow_size = pow(2, size);
    int counter, j;
	int sumP = 0, sumC = 0, sumF = 0;
    for(counter = 0; counter < pow_size; counter++)
    {
		for(j = 0; j < size; j++)
		{
			if(counter & (1<<j)){
				sumP += arrP[j];
				sumC += arrC[j];
				sumF += arrF[j];
			}
		}
		if(sumP == Gp && sumC == Gc && sumF == Gf){
			printf("yes\n");
			return;
		}
		else {
			sumP = 0, sumC = 0, sumF = 0;
		}
    }
	printf("no\n");
	return;
}

int main(){
	int t;
	scanf("%d", &t);
	int i, j;
	int Gp, Gc, Gf;
	for(i = 0; i < t; i++){
		scanf("%d%d%d", &Gp, &Gc, &Gf);
		int n;
		scanf("%d", &n);
		int arrP[20], arrC[20], arrF[20];
		for(j = 0; j< n; j++){
			scanf("%d%d%d", &arrP[j], &arrC[j], &arrF[j]);
		}
		printf("Case #%d: ", i+1);
		xorWithPowerSet(arrP, arrC, arrF, n, Gp, Gc, Gf);
	}	
		
	return 0;
}
