#include<iostream>
#include<fstream>
using namespace std;
struct item
{
    int p;
    int c;
    int f;
};
item A[1005];
int n;
item getItem(int p,int c,int f)
{
    item i;i.p = p;i.c = c;i.f = f;return i;
}
int same(item i1,item i2)
{
    return ( (i1.p == i2.p) & (i1.f == i2.f) & (i1.c == i2.c) );
}
int les(item i1,item i2)
{
     return ( (i1.p < i2.p) | (i1.f < i2.f) | (i1.c < i2.c) );
}
int rec(item sumsofar,item sumrem,item reqsum,int i)
{
    if(same(sumsofar,reqsum))
        return 1;
    if(i >= n)
        return 0;
    if(les(reqsum,sumsofar))
        return 0;
    item t = getItem(sumsofar.p,sumsofar.c,sumsofar.f);
    t.p += sumrem.p;
    t.c += sumrem.c;
    t.f += sumrem.f;
    if( les(t ,reqsum) )
        return 0;
    t = getItem(sumsofar.p,sumsofar.c,sumsofar.f);
    t.p += A[i].p;
    t.c += A[i].c;
    t.f += A[i].f;
    sumrem.p -= A[i].p;
    sumrem.c -= A[i].c;
    sumrem.f -= A[i].f;
    return ( rec( t ,sumrem ,reqsum,i + 1 ) | rec(sumsofar ,sumrem,reqsum,i + 1) );
}
int main()
{
    int k,t,p,c,f,i;
    item sumsofar,sumrem,reqsum;
    ifstream input("new_years_resolution.txt");
    input >> t;
    k = 1;
    while(k <= t)
    {
        input >> p >> c >> f;
        reqsum = getItem(p,c,f);
        input >> n;
        i = 0;
        sumsofar = getItem(0,0,0);
        sumrem = getItem(0,0,0);
        for(i = 0;i < n;i++)
        {
            input >>p >> c >> f;
            A[i] = getItem(p ,c ,f);
            sumrem.p += A[i].p;
            sumrem.c += A[i].c;
            sumrem.f += A[i].f;
        }
        //cout << "sumsofar = " << sumsofar.p << " " << sumsofar.c << " " << sumsofar.f << endl;
        //cout << "sumrem = " << sumrem.p << " " << sumrem.c << " " << sumrem.f << endl;
        //cout << "sumreq = " << reqsum.p << " " << reqsum.c << " " << reqsum.f;
        if( rec(sumsofar ,sumrem ,reqsum,0) )
            cout << "Case #" << k << ": " << "yes\n";
        else
            cout << "Case #" << k << ": " << "no\n";
        k++;
    }
    return 0;
}
