#include <bits/stdc++.h>
using namespace std;

#define ull unsigned long long
#define ll long long
#define Max(x,y) ((x)>(y)?(x):(y))
#define Min(x,y) ((x)<(y)?(x):(y))
#define Sl(x) scanf("%lld",&x)
#define Su(x) scanf("%llu",&x)
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define S(x) scanf("%d",&x)
#define I(x) cin>>x
#define IS(x) getline(cin,x)
#define P(x) printf("%d", x)
#define nl() printf("\n");
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mii map<int,int>
#define pps pair<ll,pll>
#define ppi pair<pii,int>
#define ppf pair<pll,ll>
#define psi pair<string,int>
#define pis pair<int,string>
#define fr first
#define se second
#define p(x) cout<<(x)
#define MOD 1000000007
#define eps 1e-7
#define V(x) vector<x>
#define pb(x) push_back(x)
#define mem(x,i) memset(x,i,sizeof(x))
#define fori(i,s,n) for(int i=(s);i<(n);i++)
#define ford(i,s,n) for(int i=(n)-1;i>=(s);--i)
#define INF 8944674407370955161LL
#define debug(i,st,arr) fori(i,0,st){cout<<arr[i]<<" ";}cout<<endl;
#define forci(i,sw) for((i)=(sw).begin();(i)!=(sw).end();(i)++)
#define forcd(i,sw) for((i)=(sw).rbegin();(i)!=(sw).rend();(i)++)
#define Fr first
#define Sc second

int abs(int x) {if(x < 0) return -x; return x;}

int addmod(int v1, int v2) {
    int v3 = v1+v2;
    if(v3 >= MOD) v3 -= MOD;
    return v3;
}

struct node{
    int p, c, f;
};

node a[25];

int main()
{
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    int t, tc=1, n, i, j, gp, gc, gf, p, c, f;
    S(t);
    while(t--)
    {
        printf("Case #%d: ", tc++);
        S(gp);S(gc);S(gf);
        S(n);
        int ans = 0;
        for(i = 0; i < n; i++)
        {
            S(p);S(c);S(f);
            a[i].p = p;
            a[i].f = f;
            a[i].c = c;
            if(p == gp && c == gc && f == gf)
            {
                ans = 1;
            }

        }

        if(!ans){
            int sz = (1<<n);
            for(i = 0; i < sz; i++)
            {
                int cp, cc, cf;
                cp = 0;
                cc = 0;
                cf = 0;
                for(j = 0; j < n; j++)
                {
                    if(i&(1<<j))
                    {
                        cp += a[j].p;
                        cc += a[j].c;
                        cf += a[j].f;
                    }
                }
                if(cp == gp && cc == gc && cf == gf)
                {
                    ans = 1;
                    break;
                }
            }
        }

        if(ans)
        {
            printf("yes\n");
        }
        else
        {
            printf("no\n");
        }
    }
    return 0;
}


