
#include<stdio.h>
#include<math.h>

int dp[10][1048800];

int main()
{
    int t,n,x,k,i,l,target[3],flag;
    long long int value,sum[3],subset,new_subset,j;
    scanf("%d",&t);
    for(l=0;l<t;l++)
    {
        scanf("%d %d %d",&target[0],&target[1],&target[2]);
        scanf("%d",&n);
        int intensity[n][3];
        for(i=0;i<n;i++)
            for(j=0;j<3;j++)
                scanf("%d",&intensity[i][j]);
        k=1;
            value=pow(2,n);
            for(i=0;i<=9;i++)
                for(j=0;j<=1048799;j++)
                    dp[i][j]=0;
        dp[0][0]=1;
        flag=0;
        for(i=0;i<k;i++)
        {
            for(subset=0;subset<value;subset++)
            {
                if(!dp[i][subset])
                    continue;
                sum[0]=0;
                sum[1]=0;
                sum[2]=0;
                for(j=0;j<n;j++)
                {
                    if(subset & (1LL<<j))
                    {
                        for(x=0;x<3;x++)
                            sum[x]+=intensity[j][x];
                    }
                }
                sum[0]-=i*target[0];
                sum[1]-=i*target[1];
                sum[2]-=i*target[2];
                for(j=0;j<n;j++)
                {
                    if(subset & (1LL << j))
                        continue;
                    new_subset=subset | (1LL << j);
                    if((sum[0] + intensity[j][0]==target[0]) && (sum[1] + intensity[j][1]==target[1]) && (sum[2] + intensity[j][2]==target[2]))
                        {dp[i+1][new_subset]=1; flag=1;}
                    else if((sum[0] + intensity[j][0]<target[0]) && (sum[1] + intensity[j][1]<target[1]) && (sum[2] + intensity[j][2]<target[2]))
                        dp[i][new_subset]=1;
                }
            }
        }
        if(dp[k][value-1]==1 || flag==1)
            printf("Case #%d: yes",l+1);
        else
            printf("Case #%d: no",l+1);
        if(l!=(t-1))
            printf("\n");
    }
    return 0;
}
