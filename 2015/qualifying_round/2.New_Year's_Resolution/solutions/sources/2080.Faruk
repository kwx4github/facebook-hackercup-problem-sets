def triple_sub(x, y):
    return (x[0] - y[0], x[1] - y[1], x[2] - y[2])

def subset_sum(seq, n, summ):
    if summ == (0, 0, 0):
        return True
    if n == 0:
        return False

    cur_elem = seq[n - 1]
    if (cur_elem[0] > summ[0] or cur_elem[1] > summ[1] or cur_elem[2] > summ[2]):
        return subset_sum(seq, n - 1, summ)

    return subset_sum(seq, n - 1 , summ) or \
        subset_sum(seq, n - 1, triple_sub(summ, seq[n - 1]))


def convertYes(res):
    if res:
        return "yes"
    else:
        return "no"

output = []

with open('new_years_resolution.txt', 'r') as f:
    T = int(f.readline().rstrip())

    for i in xrange(T):
        to_reach = tuple([int(x) for x in f.readline().rstrip().split()])
        n = int(f.readline())
        seq = []
        for j in xrange(n):
            seq.append(tuple([int(x) for x in f.readline().rstrip().split()]))

        res = "Case #%d: %s\n" % (i + 1, convertYes(subset_sum(seq, n, to_reach)))
        output.append(res)

with open('output.txt', 'w') as f:
    f.writelines(output)
