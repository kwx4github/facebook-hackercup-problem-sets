//Aayush Agarwal

#include<bits/stdc++.h>
using namespace std;

#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n")
#define ll long long int
#define ull unsigned long long int
#define MOD 1000000007
#define INF INT_MAX
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

struct diet
{  
   int P,C,F;
};
struct diet d[30];
int dp[2000006], N , Gp,Gc,Gf;

int f(int mask)
{
   int &ret = dp[mask];
   if(ret == -1)
   {
      ret = 0;int sumP = 0 , sumC = 0, sumF = 0;
      int cnt = __builtin_popcount(mask);
      if(cnt == N)
      {
         for(int i=0 ;i<N ;i++)
         {
            sumP += d[i].P;
            sumC += d[i].C;
            sumF += d[i].F;
         }
         if( sumP == Gp && sumC == Gc && sumF == Gf)
              ret = 1;
      }
      else
      {
         for(int i=0 ;i<N; i++)
         { 
              if(contain(mask,i))
              {
                 sumP += d[i].P;
                 sumC += d[i].C;
                 sumF += d[i].F;
              }
              
         }
         if( sumP == Gp && sumC == Gc && sumF == Gf)
              ret = 1;
         for(int i=0 ;i<N ;i++)
         {
            if(!contain(mask , i))
              ret = ret | f(mask | (1<<i));
         }
      }
   }
   return ret ;
}

int main()
{ 
   freopen("fb_in.txt","r",stdin);
   freopen("out.txt","w",stdout);
   int t,tc=1 ,a,b,c;
   si(t);
   while(t--)
   {
      si(Gp);si(Gc);si(Gf);
      si(N);
      for(int i=0 ;i<N; i++)
      {
         si(a);si(b);si(c);
         d[i].P = a;
         d[i].C = b;
         d[i].F = c;
      }
      int ans ;
      memset(dp , -1 , sizeof(dp));
      ans = f(0);
      printf("Case #%d: ",tc); 
      if(ans)
      printf("yes");
      else
      printf("no");
      nl;tc++;
   }
}
