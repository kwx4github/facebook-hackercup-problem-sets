import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;


public class NewYearsResolution {

    public static boolean check(int[] array, List<Integer> items, int value) {
        int sum = 0;
        for(Integer item : items) {
            sum += array[item];
        }
        return sum == value;
    }
    
    public static boolean checkCombinations(int N, int[] P, int[] C, int[] F, int gp, int gc, int gf) {
        int M = (int) Math.pow(2, N);
        for(int i=0; i<M; i++) {
            List<Integer> items = new ArrayList<>();
            for(int j=0; j<N; j++) {
                if((i & (1 << j)) == 0) continue;
                items.add(j);
            }
            if(check(P,items, gp) && check(C,items, gc) && check(F,items, gf)) {
                return true;
            }
        }
        return false;
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int T = in.nextInt();
        
        for(int i=0; i<T; i++) {
            int gp = in.nextInt();
            int gc = in.nextInt();
            int gf = in.nextInt();
            
            int N = in.nextInt();
            int[] P = new int[N];
            int[] C = new int[N];
            int[] F = new int[N];
            for(int j=0; j<N; j++) {
                P[j] = in.nextInt();
                C[j] = in.nextInt();
                F[j] = in.nextInt();
            }
            boolean check = checkCombinations(N, P, C, F, gp, gc, gf);
            String res = check ? "yes" : "no";
            System.out.println("Case #"+(i+1)+": "+res);
        }
    }

}
