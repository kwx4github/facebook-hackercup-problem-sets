T = int(raw_input())

def addTab(base, another):
  for idx in xrange(len(base)):
    base[idx] += another[idx]
  return base

def equalsTab(tab1, tab2):
  for idx in xrange(len(tab1)):
    if tab1[idx] != tab2[idx]:
      return False
  return True

def biggerThan(tab1, tab2):
  for idx in xrange(len(tab1)):
    if tab1[idx] > tab2[idx]:
      return True 
  return False 

def checkPerm(perm, inp, goal):
  suma = [0, 0, 0]
  for x in perm:
    suma = addTab(suma, inp[x])
    if biggerThan(suma, goal):
      return False
  return equalsTab(suma, goal)

def result():
  goal = map(int, raw_input().split())

  N = int(raw_input())

  inp = []
  for i in xrange(N):
    exam = map(int, raw_input().split())
    inp.append(exam)

  powerset = [[]]

  for i in xrange(N):
    new_exs = [subset + [i] for subset in powerset]
    for ex in new_exs:
      if checkPerm(ex, inp, goal):
        return True
    powerset.extend(new_exs)
  return False

casenr = 1
while T:
  print 'Case #{}:'.format(casenr),
  casenr += 1

  if result():
    print 'yes'
  else:
    print 'no'

  T -= 1
