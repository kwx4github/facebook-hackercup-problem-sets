#include <bits/stdc++.h>
 
using namespace std;
 
#define DEBUG 0
#define all(C) (C).begin() , (C).end()
#define tr(C , it) for(typeof((C).begin()) it = (C).begin() ; it != (C).end() ; it++)
#define present(C , key) ((C).find(key) != (C).end())
#define cpresent(C , key) (find(all(C) , key) != (C).end())
#define sz(a) int((a).size())
#define MOD 1000000007
#include<math.h>
 
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<long long , long long> PI;
 
int dp[10000000][3];
int main(int argc, char const *argv[])
{
	int t,n,k,g,p,c,gp,gc,gf;
	cin>>t;
	for(k=0;k<t;k++){
		cin>>gp>>gc>>gf;
		cin>>n;
		int index=1;
		int len=pow(2,n)-1;
		int test=0;
		for (int i = 0;i<=len+1; ++i)
		{
			dp[i][0]=dp[i][1]=dp[i][2]=0;			
		}

		for (int j = 0; j<n; ++j)
		{

			cin>>p>>c>>g;
			int count=0;
			for (int i = index; i <=len;)
			{
				count++;
				dp[i][0]+=p;
				dp[i][1]+=c;
				dp[i][2]+=g;
				//printf("%d :%d %d %d \n",i,dp[i][0],dp[i][1],dp[i][2]);
				if(count==index){
					count=0;
					i=i+index+1;
				}
				else
				i++;			
			}
			index=index*2;
		}
		
		for (int i = 1; i <=len; ++i)
		{
				
			if(dp[i][0]==gp && dp[i][1]==gc && dp[i][2]==gf)
			{
				test=1;break;
			}
		}
		if (test)
		{
			printf("Case #%d: yes\n",k+1);
		}
		else{
			printf("Case #%d: no\n",k+1);
		}
	}
	return 0;
}