#include<bits/stdc++.h>
using namespace std;
class sets
{
    public:
    int a,b,c;
    sets()
    {
        a=b=c=0;
    }
};
bool isSubsetSum(sets set[], int n, sets sum)
{

   // Base Cases
   sets z;
   if (sum.a==0&&sum.b==0&&sum.c==0)
     return true;
   if (n == 0 && !(sum.a==0&&sum.b==0&&sum.c==0))
     return false;

   // If last element is greater than sum, then ignore it
   if (set[n-1].a>sum.a||set[n-1].b>sum.b||set[n-1].c>sum.c)
     return isSubsetSum(set, n-1, sum);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
      z.a=sum.a-set[n-1].a;
      z.b=sum.b-set[n-1].b;
      z.c=sum.c-set[n-1].c;
   return isSubsetSum(set, n-1, sum) || isSubsetSum(set, n-1, z);
}
int main()
{
    int t,n;
    sets sum,set[22];
    scanf("%d",&t);int j=0;
    while(--t>=0)
    {
        j++;
        scanf("%d %d %d",&sum.a,&sum.b,&sum.c);
        scanf("%d",&n);
        for(int i=0;i<n;i++)
        {
            scanf("%d %d %d",&set[i].a,&set[i].b,&set[i].c);
        }
        printf("Case #%d: ",j);
        if(isSubsetSum(set,n,sum))
            printf("yes\n");
        else
            printf("no\n");
    }
}
