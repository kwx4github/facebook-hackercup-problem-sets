<?php

function getInput()
{
	return trim(fgets(STDIN));
}

function solve($n, $i, $sums, $alexSums, $food)
{
	if ($i >= $n)
	{
		// we have gone through all foods - do we have the correct sums?
		// if yes - we have a winner!!
		return $sums[0] == $alexSums[0] && $sums[1] == $alexSums[1] && $sums[2] == $alexSums[2];
	}
	else if ($sums[0] > $alexSums[0] || $sums[1] > $alexSums[1] || $sums[2] > $alexSums[2])
	{
		// we have already eaten more than one of our desired sums - no winner :()
		return false;
	}
	else
	{
		// not all foods taken into account yet - let's try some options

		// first, try not eating the food and move to the next one
		$r2 = solve($n, $i+1, $sums, $alexSums, $food);

		// second, see what happens if we eat the food instead :)
		$sums[0] += $food[$i][0];
		$sums[1] += $food[$i][1];
		$sums[2] += $food[$i][2];
		$r1 = solve($n, $i+1, $sums, $alexSums, $food);

		// if one of these options works out, then we have a winner! (pass it back to the recursion steps)
		return $r1 || $r2;
	}
}

function solveOneTest($testId) {
	$alexSums = explode(' ', trim(getInput()));

	$n = getInput();

	$food=array_fill(0, $n, 0);

	for ($i = 0; $i < $n; $i++)
	{
		$inp = getInput();
		$food[$i] = explode(' ', $inp);
	}

	$result =  solve($n, 0, [0,0,0], $alexSums, $food);

	echo "Case #{$testId}: " . ($result ? 'yes' : 'no') . "\n";
}

$m = intval(getInput());
for ($i = 1; $i <= $m; $i++)
{
	solveOneTest($i);
}
