# define _USE_MATH_DEFINES
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <functional>
#include <fstream>
#include <iostream>
#include <map>
#include <memory.h>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <sstream>
#include <vector>
#include <utility>
#include <cmath>
using namespace std;

#define pb push_back
#define mp make_pair
#define sz(a) (int)(a).size()
#define all(a) (a).begin(), (a).end()

#define forn(i,n) for (int i=0; i<int(n); ++i)

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;


const int INF = (int) 1e9;
const long long INF64 = (long long) 1e18;
const long double eps = 1e-9;
const long double pi = 3.14159265358979323846;

int gp, gc, gf, n;
vector <int> p, c, f;

bool read(){
    cin >> gp >> gc >> gf >> n;
    p.assign(n,0);
    c.assign(n,0);
    f.assign(n,0);
    forn(i,n){
        cin >> p[i] >> c[i] >> f[i];
    }
    return true;
}

bool solve(){
    forn(mask, (1 << n)){
        int tp, tc, tf;
        tp = tc = tf = 0;
        forn(j,n){
            if ((1 << j) & mask){
                tp += p[j];
                tc += c[j];
                tf += f[j];
            }
        }
        if (tp == gp && tc == gc && tf == gf) return true;
    }
    return false;
}

int main(){
#ifdef dudkamaster
    freopen("input.txt","rt",stdin);
    freopen("output.txt","wt",stdout);
#endif
    int t;
    cin >> t;
    for (int test = 1; test <= t; test++){
        read();
        cout << "Case #" << test << ": ";
        if (solve())
            cout << "yes";
        else
            cout << "no";
        cout << endl;
    }
    return 0;
}
