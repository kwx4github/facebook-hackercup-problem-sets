#include <bits/stdc++.h>

using namespace std;

string v[2000000];
int arrP[10000], arrC[10000], arrF[10000];

void generate(int n){
	int maxs = pow(2, n);
	for(int i=0; i<maxs; i++){
		int j = i;
		string s = "";
		while(j > 0){
			int t = j % 2;
			if(t == 0) s += "0";
			else s += "1";
			j /= 2;
		}
		int temp = n-s.length();
		if(s.length() < n){
			for(int j=0; j<temp; j++){
				s += "0";
			}
		}
		v[i] = s;
		//cout<<i<<" "<<s<<" "<<maxs<<" "<<temp<<endl;
	}
}

bool findOut(int p, int c, int f, int n){
	//cout<<p<<" "<<c<<" "<<f<<" "<<n<<endl;
	int maxs = pow(2, n);
	for(int i=0; i<maxs; i++){
		int tempP = p, tempC = c, tempF = f;
		//cout<<">"<<v[i].length()<<endl;
		
		for(int j=0; j<v[i].length(); j++){
			//cout<<">>"<<v[i][j]<<endl;
			if(v[i][j] == '1'){
				//cout<<i<<" "<<j<<endl;
				tempP -= arrP[j]; tempF -= arrF[j]; tempC -= arrC[j];
				if(tempP == 0 && tempF == 0 && tempC == 0){
					return true;
				}
				if(tempP == 0 && (tempF != tempP || tempC != tempP))
					break;
				if(tempF == 0 && (tempF != tempC || tempF != tempP))
					break;
				if(tempC == 0 && (tempC != tempF || tempC != tempP))
					break;
				if(tempP<0 || tempF<0 || tempC<0) break;
			}
		}
	}
	return false;
}

int main(){
	int t;
	scanf("%d", &t);
	for(int i=0; i<t; i++){
		int p,c,f;
		scanf("%d %d %d", &p, &c, &f);
		int n, total = 0;
		scanf("%d", &n);
		for(int j=0; j<n; j++){
			int x,y,z;
			scanf("%d %d %d", &x, &y, &z);
			if(x <= p && y <= c && z <= f){
				if(x == p && (y != c || z != f)) {}
				else if(y == c && (x != p || z != f)) {}
				else if(z == f && (x != p || y != c)) {}
				else{
					arrP[total] = x; arrC[total] = y; arrF[total] = z;
					total++;
				}
			}
		}
		//cout<<"total "<<total<<endl;
		generate(total);
		if(findOut(p,c,f,total)) printf("Case #%d: yes\n", (i+1));
		else printf("Case #%d: no\n", (i+1));
	}
	return 0;
}