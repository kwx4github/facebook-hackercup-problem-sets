package com.company;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {
    static BufferedReader in;
    static PrintWriter out = new PrintWriter(System.out, true);
    static StringTokenizer st;


    public static void main(String[] args) throws Exception {
        in = new BufferedReader(new InputStreamReader(new FileInputStream("in.txt")));
        out = new PrintWriter("out.txt");
        int t = nextInt();
        for (int i = 0; i < t; i++) {
            out.print("Case #" + (i + 1) + ": ");
            int p = nextInt();
            int c = nextInt();
            int f = nextInt();
            int n = nextInt();
            int[] mp = new int[n];
            int[] mc = new int[n];
            int[] mf = new int[n];
            for (int j = 0; j < n; j++) {
                mp[j] = nextInt();
                mc[j] = nextInt();
                mf[j] = nextInt();
            }
            boolean result = false;
            for (int k = 0; k < (1 << n); k++) {
                int rp = 0, rc = 0, rf = 0;
                for (int h = 0; h < n; h++) {
                    if((k & (1 << h)) != 0) {
                        rp += mp[h];
                        rc += mc[h];
                        rf += mf[h];
                    }
                }
                if(rp == p && rc == c && rf == f) {
                    result = true;
                    break;
                }
            }
            out.println(result ? "yes" : "no");
        }
        in.close();
        out.flush();
        out.close();
    }

    public static int nextInt() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Integer.parseInt(st.nextToken());
    }

    public static long nextLong() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());
        return Long.parseLong(st.nextToken());
    }

    public static double nextDouble() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine(), " ");
        return Double.parseDouble(st.nextToken());
    }

    public static String nextToken() throws Exception {
        if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine(), " ");
        return st.nextToken();
    }
}
