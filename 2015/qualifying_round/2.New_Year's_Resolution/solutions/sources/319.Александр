#include <bits/stdc++.h>

typedef long long int64;
#define sz(A) (int((A).size()))

using namespace std;

struct triple
{
    int p, c, f;
    
    triple(): p(0), c(0), f(0) {}
    triple(int p, int c, int f): p(p), c(c), f(f) {}
};

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    
    ios::sync_with_stdio(0);
    
    int T;
    cin >> T;
    
    for (int tst = 0; tst < T; tst++)
    {
        triple g;
        cin >> g.p >> g.c >> g.f;
        int n;
        cin >> n;
        vector <triple> a(n);
        
        for (int i = 0; i < n; i++)
            cin >> a[i].p >> a[i].c >> a[i].f;
        bool good = 0;
        
        for (int i = 0; i < (1 << n); i++)
        {
            triple res;
            
            for (int j = 0; j < n; j++)
            {
                if ((i >> j) & 1)
                    res.p += a[j].p, res.c += a[j].c, res.f += a[j].f;
            }
            
            if (res.p == g.p && res.c == g.c && res.f == g.f)
            {
                good = 1;
                break;
            }
        }
        cout << "Case #" << tst + 1 << ": ";
        
        if (good)
            cout << "yes\n";
        else
            cout << "no\n";
    }
    return 0;
}