#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <sstream>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <numeric>
#include <cctype>
#include <tuple>
#include <array>
#include <climits>
#include <bitset>
#include <cassert>

#ifdef _MSC_VER
#include <agents.h>
#endif

#define FOR(i, a, b) for(int i = (a); i < (int)(b); ++i)
#define rep(i, n) FOR(i, 0, n)
#define ALL(v) v.begin(), v.end()
#define REV(v) v.rbegin(), v.rend()
#define MEMSET(v, s) memset(v, s, sizeof(v))
#define UNIQUE(v) (v).erase(unique(ALL(v)), (v).end())
#define MP make_pair
#define MT make_tuple

using namespace std;

typedef long long ll;
typedef pair<int, int> P;

const int N = 5e4 + 10;

int a[N];
int test(int l, int r, int x){
	int t = x, b = x;
	while (l < r){
		if (a[l] == t - 1) l++, --t;
		else if (a[l] == b + 1) l++, ++b;
		else if (a[r] == t - 1) r--, --t;
		else if (a[r] == b + 1) r--, ++b;
		else break;
	}

	return l >= r;
}

int main(){
	cin.tie(0);
	ios::sync_with_stdio(false);
	cout.setf(ios::fixed);
	cout.precision(20);

	int TT;
	cin >> TT;
	for (int T = 1; T <= TT; ++T){
		int n;
		cin >> n;
		rep(i, n) cin >> a[i];
		bool ok = n == 1;
		if (!ok) ok |= test(0, n - 2, a[n - 1]) | test(1, n - 1, a[0]);
		cout << "Case #" << T << ": " << (ok ? "yes" : "no") << endl;
	}

}

