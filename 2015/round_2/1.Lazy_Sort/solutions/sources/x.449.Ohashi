#include <iostream>
#include <vector>
#include <algorithm>
#include <deque>

using namespace std;
typedef long long li;
#define rep(i, n) for (li i = 0; i < (li)(n); ++i)

const li inf = 1LL << 50;

bool doit (deque<int> q, int init) {
    int l = init, r = init;
    while (not q.empty()) {
        if (q.front() == l - 1) {
            q.pop_front();
            l--;
        } else if (q.front() == r + 1) {
            q.pop_front();
            r++;
        } else if (q.back() == l - 1) {
            q.pop_back();
            l++;
        } else if (q.back() == r + 1) {
            q.pop_back();
            r++;
        } else {
            return false;
        }
    }
    return true;
}

void solve () {
    int n; cin >> n;
    deque<int> u, v;
    rep(i, n) {
        li x;
        cin >> x;
        v.push_back(x);
    }
    u = v;
    int vinit = v.front(); v.pop_front();
    int uinit = u.back(); u.pop_back();
    
    cout << ((doit(u, uinit) || doit(v, vinit)) ? "yes" : "no") << endl;
    return;
}

int main () {
    int t; cin >> t;
    rep(i, t) {
        cout << "Case #" << i + 1 <<": ";
        solve();
    }
    return 0;
}
