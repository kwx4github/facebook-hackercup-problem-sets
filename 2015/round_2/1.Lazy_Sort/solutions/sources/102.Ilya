#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:256000000")
#define _USE_MATH_DEFINES
#include<iostream>
#include<vector>
#include<string>
#include<stack>
#include<algorithm>
#include<cmath>
#include<set>
#include<queue>
#include<sstream>
#include<utility>
#include<map>
#include<ctime>
#include<cstdio>
#include<cassert>
#include<functional>




using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef pair<char, char> pcc;
typedef pair<double, double> pdd;

#define show(x) cerr << x
#define debug(x) show(#x << ": " << (x) << endl)

const long double PI = 3.14159265358979323846;
const long double gammama = 0.57721566490153286060;
const long double eps = 1e-5;
const int INF = 1000 * 1000 * 1000 + 1;
const ll LINF = (ll)1000 * 1000 * 1000 * 1000 * 1000 * 1000;
const ll mod = 1000 * 1000 * 1000 + 7;
const int N = 10 * 1000 * 1000 + 5;


bool solve(const vector<int>& a, int s, int e, int m, int M) {
      m--;
      M++;
      while (e >= s) {
            if (a[s] == m) {
                  s++;
                  --m;
                  continue;
            }
            if (a[s] == M) {
                  s++;
                  M++;
                  continue;
            }
            if (a[e] == m) {
                  --e;
                  m--;
                  continue;
            }
            if (a[e] == M) {
                  --e;
                  ++M;
                  continue;
            }
            return 0;
      }
      return 1;
}

void solve() {
      int n;
      cin >> n;
      vector<int> a(n);
      for (int i = 0; i < n; ++i)
            cin >> a[i];
      if (solve(a, 1, n - 1, a[0], a[0]) || solve(a, 0, n - 2, a[n - 1], a[n - 1]))
            cout << "yes\n";
      else
            cout << "no\n";
      
}

#define LOCAL

int main() {
      //ios_base::sync_with_stdio(0);
#ifdef LOCAL
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
#endif
      int numberOfTests;
      cin >> numberOfTests;
      for (int testId = 0; testId < numberOfTests; ++testId) {
            cout << "Case #" << testId + 1 << ": ";
            solve();
            std::cerr << testId << endl;
      }
      
#ifdef LOCAL
      cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
#endif	
      return 0;
}
