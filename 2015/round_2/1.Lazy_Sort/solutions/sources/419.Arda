from collections import deque

def solve_h(q, finished):
  q = deque(q)
  finished = deque([finished])
  while q:
    if q[0] == finished[0]-1:
      elt = q.popleft()
      finished.appendleft(elt)
    elif q[0] == finished[-1]+1:
      elt = q.popleft()
      finished.append(elt)
    elif q[-1] == finished[0]-1:
      elt = q.pop()
      finished.appendleft(elt)
    elif q[-1] == finished[-1]+1:
      elt = q.pop()
      finished.append(elt)
    else:
      return False
  return True

def solve(l):
  return solve_h(l[1:],l[0]) or solve_h(l[:-1],l[-1])

T = int(raw_input())
for caseno in xrange(1,T+1):
  N = int(raw_input())
  l = map(int, raw_input().split())
  print 'Case #%d: %s'%(caseno, 'yes' if solve(l) else 'no')