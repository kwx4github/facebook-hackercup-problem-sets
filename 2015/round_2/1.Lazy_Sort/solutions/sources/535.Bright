#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define esp 1e-8
#define lson   l, m, rt<<1
#define rson   m+1, r, rt<<1|1
#define sz(x) ((int)((x).size()))
#define pf(x) ((x)*(x))
#define pb push_back
#define pi acos(-1.0)
#define in freopen("solve_in.txt", "r", stdin);
#define out freopen("solve_out.txt", "w", stdout);
#define bug(x) cerr << "Line : " << (x) <<  " >>>>>>\n";
#define TL cerr << "Time elapsed: " << (double)clock() / CLOCKS_PER_SEC * 1000 << " ms" << endl;
#define inf 0x0f0f0f0f

using namespace std;
typedef long long LL;
typedef unsigned long long ULL;
typedef map<LL, int> MPS;
typedef pair<int, int> PII;
typedef MPS::iterator IT;
const int maxn = 50000 + 10;

int a[maxn];

int main() {
    in
    out
    int T;
    for(int t = scanf("%d", &T); t <= T; t++) {
        int n;
        scanf("%d", &n);
        for(int i = 1; i <= n; i++)
            scanf("%d", a+i);
        int l = 2, r = n;
        printf("Case #%d: ", t);
        if(n == 1) {
            puts("yes");
        } else {
            int lv, rv;
            int ok = 2;
            lv = a[1]-1;
            rv = a[1]+1;
            while(l <= r) {

                if(a[l] == lv) {
                    lv = a[l]-1;
                    l++;
                } else if(a[l] == rv) {
                    rv = a[l]+1;
                    l++;
                } else if(a[r] == rv) {
                    rv = a[r]+1;
                    r--;
                } else if(a[r] == lv) {
                    lv = a[r]-1;
                    r--;
                } else {
                    ok--;
                    break;
                }
            }
            lv = a[n]-1;
            rv = a[n]+1;
            l = 1, r = n-1;
            while(l <= r) {
                if(a[l] == lv) {
                    lv = a[l]-1;
                    l++;
                } else if(a[l] == rv) {
                    rv = a[l]+1;
                    l++;
                } else if(a[r] == rv) {
                    rv = a[r]+1;
                    r--;
                } else if(a[r] == lv) {
                    lv = a[r]-1;
                    r--;
                } else {
                    ok--;
                    break;
                }
            }
            if(ok) puts("yes");
            else puts("no");
        }
    }
    return 0;
}
