#include <cstdio>
#include <vector>
using namespace std;

int dp[51000][51000][2];


void Go(int tci) {
  int n;
  scanf("%d", &n);
  int tab[n];
  for (int i = 0; i < n; ++i)
    scanf("%d", &tab[i]);

  for (int i = 0; i <= n + 10; ++i)
    for (int j = 0; j <= n + 10; ++j)
      dp[i][j][0] = dp[i][j][1] = -1;

  dp[0][n-1][0] = tab[n-1];
  dp[0][n-1][1] = tab[n-1];
  dp[1][n][0] = dp[1][n][1] = tab[0];

  for (int taken = 2; taken <= n; ++taken) {
    for (int i = 0; i <= taken; ++i) {
      int fr = i;
      int to = n - taken + i;


      if (fr > 0 && dp[fr-1][to][0] >= 0) {
        if (dp[fr-1][to][0] == tab[fr-1] + 1) {
          dp[fr][to][0] = tab[fr-1];
          dp[fr][to][1] = dp[fr-1][to][1];
        }
        else if (dp[fr-1][to][1] == tab[fr-1] - 1) {
          dp[fr][to][0] = dp[fr-1][to][0];
          dp[fr][to][1] = tab[fr-1];
        }
      } if (to < n && dp[fr][to+1][0] >= 0) {
        if (dp[fr][to+1][0] == tab[to] + 1) {
          dp[fr][to][0] = tab[to];
          dp[fr][to][1] = dp[fr][to+1][1];
        }
        else if (dp[fr][to+1][1] == tab[to] - 1) {
          dp[fr][to][0] = dp[fr][to+1][0];
          dp[fr][to][1] = tab[to];
        }
      }
    }
  }

  for (int i = 0; i <= n; ++i)
    if (dp[i][i][0] > 0) {
      printf("Case #%d: yes\n", tci);
      return;
    }

  printf("Case #%d: no\n", tci);
}

int main() {
  int tc;
  scanf("%d", &tc);
  for (int i = 1; i <= tc; ++i)
    Go(i);
}
