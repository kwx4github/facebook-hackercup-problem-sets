#include <bits/stdc++.h>

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = (int)(a); i <= (int)(b); ++i)

#define all(v) (v).begin(), (v).end()
#define pb push_back

using namespace std;

typedef vector<int> vi;
typedef long long i64; 

bool go(vi a) {
    int n = a.size();
    if( n <= 3 ) return true;
    int i = 0, j = n - 2;
    int x = a[n-1];
    int y = x;
    while( i <= j ) {
        if( a[i] == x-1 ) {
            ++i; --x;
        } else if( a[i] == y+1 ) {
            ++i; ++y;
        } else if( a[j] == x-1 ) {
            --j; --x;
        } else if( a[j] == y+1) {
            --j; ++y;
        } else return false;
    }
    return true;
}

void solve() {
    int T;
    cin >> T;
    fore(test, 1, T) {
        cout << "Case #" << test << ": ";
        int n;
        cin >> n;
        vi a(n);
        forn(i, n) {
            cin >> a[i];
            --a[i];
        }
        bool ok = go(a);
        reverse(all(a));
        ok |= go(a);
        if( ok ) cout << "yes\n";
        else cout << "no\n";
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    const string task = "lazy_sort";
    freopen((task + ".txt").c_str(), "r", stdin);
    freopen((task + ".out").c_str(), "w", stdout);
    solve();
    return 0;
}
