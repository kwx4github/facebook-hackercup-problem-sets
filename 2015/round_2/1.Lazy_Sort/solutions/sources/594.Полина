#include <bits/stdc++.h>

using namespace std;

vector<int> id;

bool right_order (int down, int up, int delta) {
    if (delta > 0 && up < down + 2) return true;
    if (delta < 0 && up > down - 2) return true;
    int left = id[up];
    int right = id[up - delta];
    if (left > right) {
        swap(left, right);
    }
    up -= delta;
    while (up != down) {
        up -= delta;
        if (id[up] > left && id[up] < right) {
            return false;
        }
        if (id[up] < left) {
            left = id[up];
        } else {
            right = id[up];
        }
    }
    return true;
}

void Test (int test_num) {
    int n;
    scanf("%d", &n);
    vector<int> var;
    id.clear();
    id.resize(n + 2);
    var.resize(n + 2);
    for (int i = 1; i != n + 1; ++i) {
        scanf("%d", &var[i]);
        id[var[i]] = i;
    }
    if (right_order(var[1] + 1, n, 1) && right_order(var[1] - 1, 1, -1)) {
        printf("Case #%d: yes\n", test_num);  
        return;
    } 
    if (right_order(var[n] + 1, n, 1) && right_order(var[n] - 1, 1, -1)) {
        printf("Case #%d: yes\n", test_num);
        return;
    }
    printf("Case #%d: no\n", test_num);
}


int main() {
    freopen("lazy_sort.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int T;
    scanf("%d", &T);
    for (int i = 0; i < T; ++i) {
        Test(i + 1);
    }
}
