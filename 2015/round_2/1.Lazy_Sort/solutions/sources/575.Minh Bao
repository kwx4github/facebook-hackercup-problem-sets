#include <bits/stdc++.h>
using namespace std;

int nTest;
int n;
deque<int> a;
deque<int> q;

int main() {

	freopen("lazy_sort_input.txt", "r", stdin);
	freopen("lazy_sort_output.txt", "w", stdout);

	scanf("%d", &nTest);
	for (int test = 1; test <= nTest; test++) {
		scanf("%d", &n);
		a.clear();
		for (int i = 1; i <= n; i++) {
			int x;
			scanf("%d", &x);
			a.push_back(x);
		}

		deque<int> temp = a;

		q.clear();
		while (a.size() > 0) {
			if (q.empty()) {
				q.push_back(a.front());
				a.pop_front();
			} else {
				if (a.front() == q.front() - 1) {
					q.push_front(a.front());
					a.pop_front();
				} else if (a.front() == q.back() + 1) {
					q.push_back(a.front());
					a.pop_front();
				} else if (a.back() == q.front() - 1) {
					q.push_front(a.back());
					a.pop_back();
				} else if (a.back() == q.back() + 1) {
					q.push_back(a.back());
					a.pop_back();
				} else {
					break;
				}
			}
		}

		if (q.size() != n) {
			a = temp;
			q.clear();

			while (a.size() > 0) {
				if (q.empty()) {
					q.push_back(a.back());
					a.pop_back();
				} else {
					if (a.front() == q.front() - 1) {
						q.push_front(a.front());
						a.pop_front();
					} else if (a.front() == q.back() + 1) {
						q.push_back(a.front());
						a.pop_front();
					} else if (a.back() == q.front() - 1) {
						q.push_front(a.back());
						a.pop_back();
					} else if (a.back() == q.back() + 1) {
						q.push_back(a.back());
						a.pop_back();
					} else {
						break;
					}
				}
			}
		}

		if (q.size() == n) printf("Case #%d: yes\n", test);
		else printf("Case #%d: no\n", test);
	}

	return 0;
}