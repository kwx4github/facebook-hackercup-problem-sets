#include <cstdio>
#include <cassert>

#include <vector>
#include <set>
#include <algorithm>
#include <iostream>

#define sz(c) ((int)(c).size())

using namespace std;

bool can(vector<int> const& a, int y) {
  int mi = y, mx = y;
  int l = 0, r = sz(a) - 1;
  while (l <= r) {
    if (a[l] == mi - 1) {
      mi--;
      l++;
    } else if (a[r] == mi - 1) {
      mi--;
      r--;
    } else if (a[l] == mx + 1) {
      mx++;
      l++;
    } else if (a[r] == mx + 1) {
      mx++;
      r--;
    } else {
      return false;
    }
  }
  return true;
}

void solve() {
  int n;
  scanf("%d", &n);
  vector<int> a(n);
  for (int i = 0; i < n; i++)
    scanf("%d", &a[i]);
  if (can(vector<int>(a.begin() + 1, a.end()), a.front()) ||
      can(vector<int>(a.begin(), a.end() - 1), a.back())) {
    printf("yes\n");
  } else {
    printf("no\n");
  }
}

int main() {
  int T;
  scanf("%d", &T);
  for (int t = 0; t < T; t++) {
    printf("Case #%d: ", t + 1);
    solve();
  }
  return 0;
}
