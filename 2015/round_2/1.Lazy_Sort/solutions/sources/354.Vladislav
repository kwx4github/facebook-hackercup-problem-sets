#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
int N;
deque<int> in;
deque<int> put;
int lo , hi;
bool can(){
  while(!put.empty()){
   if(put[0] == lo-1){
    --lo; put.pop_front();
    continue;
                     }
   if(put[0] == hi+1){
    ++hi; put.pop_front();
    continue;
                     }
   if(put.back() == lo-1){
    --lo; put.pop_back();
    continue;
                         }
   if(put.back() == hi+1){
    ++hi; put.pop_back();
    continue;
                         }
   break;
                     }
  return put.empty();
}
void doit(int CASE){
  cerr<<CASE<<'\n';
  scanf("%d" , &N);
  in.resize(N);
  for(int i=0;i<N;++i)
   scanf("%d" , &in[i]);
  bool OK = false;
  put = in;
  lo = hi = put[0];
  put.pop_front();
  OK |= can();
  put = in;
  lo = hi = put.back();
  put.pop_back();
  OK |= can();
  printf("Case #%d: " , CASE);
  if(OK) puts("yes");
  else puts("no");
}
int main(){
  int Q;
  scanf("%d" , &Q);
  for(int i=1;i<=Q;++i)
   doit(i);
  return 0;
}
