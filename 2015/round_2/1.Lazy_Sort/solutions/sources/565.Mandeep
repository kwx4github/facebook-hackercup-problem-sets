#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <climits>
#include <deque>
using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define REP(i, n) for (int i = 0; i < (int)(n); ++i)
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)

typedef vector<int> VI;
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef long long LL;

const int MAXN = 10010;

int main()
{
    #ifndef ONLINE_JUDGE
        //freopen("lazy_sort.txt","r",stdin);
        //freopen("lazyOUT.txt","w",stdout);
    #endif
    int T;
    S(T);

    rep(t,1,T+1) {
        int n;
        S(n);
        deque<int> q,q2;
        rep(i,0,n) {
            int x;
            S(x);
            q.push_back(x);
            q2.push_back(x);
        }
        deque<int> ans,ans2;
        int f = 0 ,f2 = 0;
        rep(i,0,n) {
            if(i==0) {
                ans.push_back(q.front());
                q.pop_front();
                continue;
            }
            if(/*q.front()==1 ||*/ (q.front()==(ans.front()-1))) {
                ans.push_front(q.front());
                //cout<<i<<" "<<q.front()<<"\n";
                q.pop_front();
            }
            else if(/*q.front()==n ||*/ (q.front()==(ans.back()+1))) {
                ans.push_back(q.front());
                //cout<<i<<" "<<q.front()<<"\n";
                q.pop_front();
            }
            else if(/*q.back()==1 ||*/ (q.back()==(ans.front()-1))) {
                ans.push_front(q.back());
                //cout<<i<<" "<<q.back()<<"\n";
                q.pop_back();
            }
            else if(/*q.back()==n ||*/ (q.back()==(ans.back()+1))) {
                ans.push_back(q.back());
                //cout<<i<<" "<<q.front()<<"\n";
                q.pop_back();
            }
            else {
                f=1;
                break;
            }
        }

        rep(i,0,n) {
            if(i==0) {
                ans2.push_back(q2.back());
                q2.pop_back();
                continue;
            }
            if(/*q.front()==1 ||*/ (q2.front()==(ans2.front()-1))) {
                ans2.push_front(q2.front());
                //cout<<i<<" "<<q.front()<<"\n";
                q2.pop_front();
            }
            else if(/*q.front()==n ||*/ (q2.front()==(ans2.back()+1))) {
                ans2.push_back(q2.front());
                //cout<<i<<" "<<q.front()<<"\n";
                q2.pop_front();
            }
            else if(/*q.back()==1 ||*/ (q2.back()==(ans2.front()-1))) {
                ans2.push_front(q2.back());
                //cout<<i<<" "<<q.back()<<"\n";
                q2.pop_back();
            }
            else if(/*q.back()==n ||*/ (q2.back()==(ans2.back()+1))) {
                ans2.push_back(q2.back());
                //cout<<i<<" "<<q.front()<<"\n";
                q2.pop_back();
            }
            else {
                f2=1;
                break;
            }
        }
        if(f==0 || f2==0) printf("Case #%d: yes\n",t);
        else printf("Case #%d: no\n",t);
    }

    return 0;
}
