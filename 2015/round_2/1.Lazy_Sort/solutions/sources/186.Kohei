#include <iostream>
#include <vector>
#include <cassert>
#include <algorithm>
 
using namespace std;
typedef long long ll;
typedef pair<int, int> P;
const int MN = 50500;

int n;
int a[MN];

int l, r, x, y;

bool calc() {
    while (true) {
        //printf("%d %d %d %d\n", x, y, l, r);
        if (x > y) return true;
        if (a[x] == l-1) {
            x++;
            l--;
            continue;
        }
        if (a[x] == r+1) {
            x++;
            r++;
            continue;
        }
        if (a[y] == l-1) {
            y--;
            l--;
            continue;
        }
        if (a[y] == r+1) {
            y--;
            r++;
            continue;
        }
        return false;
    }
    assert(false);
}
bool solve() {
    l = r = a[0];
    x = 1; y = n-1;
    if (calc()) return true;
    l = r = a[n-1];
    x = 0; y = n-2;
    if (calc()) return true;
    return false;
}
int main() {
    int T;
    cin >> T;
    for (int t = 1; t <= T; t++) {
        cin >> n;
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }
        if (solve()) {
            printf("Case #%d: yes\n", t);
        } else {
            printf("Case #%d: no\n", t);
        }
    }
    return 0;
}