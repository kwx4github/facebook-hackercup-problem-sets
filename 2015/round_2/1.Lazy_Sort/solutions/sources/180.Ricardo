#include <cstdio>
#include <cstring>
#include <vector>
#include <map>

using namespace std;

int T, C=1, n;
int v[500000];
typedef pair<int,int> ii;
typedef pair<ii,ii> i4;

map<i4,bool> PD;
map<i4,bool>::iterator PDi;

bool calc(int a, int b, int baixo, int cima) {
    if (a > b) return true;
    i4 est = i4(ii(a,b),ii(baixo,cima));
    PDi = PD.find(est);
    if (PDi != PD.end())
        return PDi->second;
    if (v[a] == baixo+1 and calc(a+1,b,v[a],cima)) {
        PD[est] = true;
        return true;
    }
    if (v[a] == cima-1 and calc(a+1,b,baixo,v[a])) {
        PD[est] = true;
        return true;
    }
    if (v[b] == baixo+1 and calc(a,b-1,v[b],cima)) {
        PD[est] = true;
        return true;
    }
    if (v[b] == cima-1 and calc(a,b-1,baixo,v[b])) {
        PD[est] = true;
        return true;
    }
    PD[est] = false;
    return false;
}

int main() {

    for(scanf("%d",&T);T--;) {
        printf("Case #%d: ",C++);
        scanf("%d",&n);
        for (int i=0;i<n;i++)
            scanf("%d",v+i);
        if (n==1) {
            printf("yes\n");
            continue;
        }
        PD.clear();
        bool ok1 = calc(0,n-2,v[n-1],v[n-1]);
        if (ok1) {
            printf("yes\n");
            continue;
        }
        bool ok2 = calc(1,n-1,v[0],v[0]);
        if (ok2) {
            printf("yes\n");
            continue;
        }
        printf("no\n");
    }

    return 0;
}
