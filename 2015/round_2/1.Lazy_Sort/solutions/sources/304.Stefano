#include <bits/stdc++.h>

using namespace std;

typedef long long     LL;
typedef pair<int,int> pii;

double PI  = acos(-1);
double EPS = 1e-7;
int INF    = 1000000000;
LL INFLL   = 1000000000000000000LL;

#define fi            first
#define se            second
#define mp            make_pair
#define pb            push_back

#define input(in)     freopen(in,"r",stdin)
#define output(out)   freopen(out,"w",stdout)

#define MIN(a, b)     (a) = min((a), (b))
#define MAX(a, b)     (a) = max((a), (b))

#define RESET(a, b)   memset(a,b,sizeof(a))
#define ALL(a)        (a).begin(), (a).end()
#define SIZE(a)       (int)a.size()
#define SORT(a)       sort(ALL(a))
#define UNIQUE(a)     (a).erase( unique( ALL(a) ), (a).end() )
#define FOR(a, b, c)  for (int (a)=(b); (a)<=(c); (a)++)
#define FORD(a, b, c) for (int (a)=(b); (a)>=(c); (a)--)
#define FORIT(a, b)   for (__typeof((b).begin()) a=(b).begin(); a!=(b).end(); a++)

int mx[8] = {-1,1,0,0,-1,-1,1,1};
int my[8] = {0,0,-1,1,-1,1,-1,1};

// ----- //

int x[50005];
map<int,bool> dp[50005];

bool go(int l,int r,int fl,int fr)
{
	if (dp[l][r]) return dp[l][r];
	bool &ret = dp[l][r];
	if (l > r) return ret = 1;
	ret = 0;
	if (!ret && x[r] == fl-1) ret |= go(l,r-1,fl-1,fr);
	if (!ret && x[l] == fr+1) ret |= go(l+1,r,fl,fr+1);
	if (!ret && x[r] == fr+1) ret |= go(l,r-1,fl,fr+1);
	if (!ret && x[l] == fl-1) ret |= go(l+1,r,fl-1,fr);
	return ret;
}

int main()
{
	int tc;
	scanf("%d",&tc);
	FOR(T,1,tc) {
		int n;
		scanf("%d",&n);
		FOR(a,1,n)
		{
			scanf("%d",&x[a]);
			dp[a].clear();
		}
		printf("Case #%d: ",T);
		puts((go(1,n-1,x[n],x[n])||go(2,n,x[1],x[1])) ? "yes" : "no");
	}
}
