#include <cstdio>
#include <cassert>
#include <queue>

#include <algorithm>
#include <iostream>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

bool go(int l, int r, deque< int > dq) {
  while (!dq.empty()) {
    if (dq.front() == l - 1) {
      --l; dq.pop_front();
    } 
    else if (dq.front() == r + 1) {
      ++r; dq.pop_front();
    }
    else if (dq.back() == l - 1) {
      --l; dq.pop_back();
    }
    else if (dq.back() == r + 1) {
      ++r; dq.pop_back();
    }
    else break;
  }

  return dq.empty();
}

void solve() {
  int N;
  scanf("%d", &N);

  deque< int > dq;

  REP(i, N) {
    int x; scanf("%d", &x);
    dq.push_back(x);
  }

  int x = dq.front(); dq.pop_front();
  if (go(x, x, dq)) {
    puts("yes");
    return;
  }

  dq.push_front(x);
  x = dq.back(); dq.pop_back();
  if (go(x, x, dq)) {
    puts("yes");
    return;
  }

  puts("no");
}

int main(void) 
{
  int T;
  scanf("%d", &T);
  REP(tc, T) { printf("Case #%d: ", tc + 1); solve(); }

  return 0;
}
