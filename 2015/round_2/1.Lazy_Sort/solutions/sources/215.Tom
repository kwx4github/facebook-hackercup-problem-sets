import sys

def attempt(ids, out):
    for src in 0, len(ids) - 1:
        if ids[src] == out[0] - 1:
            out.insert(0, ids.pop(src))
            return True
        if ids[src] == out[-1] + 1:
            out.insert(len(out), ids.pop(src))
            return True
    return False

def solve(ids, out):
    # print ids, out
    progress = True
    while ids != []:
        if not attempt(ids, out):
            return False
    return True

def main():
    global n
    ts = int(raw_input())
    for t in xrange(ts):
        n = int(raw_input())
        ids = map(int, raw_input().split())
        ok = solve(ids[1:], ids[:1]) | solve(ids[:-1], ids[-1:])
        print "Case #%d: %s" % (t+1, "yes" if ok else "no")

if __name__ == "__main__":
    main()
