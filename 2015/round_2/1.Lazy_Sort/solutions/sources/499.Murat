#include<bits/stdc++.h>
  
using namespace std;

template<class T> inline T sqr(const T& a) { return a * a; }
  
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
  
constexpr ld EPS = 1e-9;
constexpr ld PI = 2 * acos(0.0);
constexpr int N = 50100;

int a[N];

bool check(int n, bool first_lf) {
  int lf = 0, rg = n - 1;
  int fm, to;
  if (first_lf) {
    fm = a[lf], to = a[lf];
    ++lf;
  } else {
    fm = a[rg], to = a[rg];
    --rg;
  }
  while (lf <= rg) {
    if (a[lf] + 1 == fm)
      ++lf, --fm;
    else if (a[lf] - 1 == to)
      ++lf, ++to;
    else if (a[rg] + 1 == fm)
      --rg, --fm;
    else if (a[rg] - 1 == to)
      --rg, ++to;
    else
      return false;
  }
  return true;
}

int main() {
  int ts;
  scanf("%d", &ts);
  for (int it = 1; it <= ts; ++it) {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
      scanf("%d", &a[i]);
    }
    bool ans = check(n, false) || check(n, true);
    printf("Case #%d: %s\n", it, ans ? "yes" : "no");
  }
  return 0;
}
