//#include <iostream>
//#include <cstdio>
//#include <cmath>
//#include <string.h>
//#include <algorithm>
//#include <vector>
//#include <queue>
//#include <set>
//#include <cstdlib>
//#include <sys/resource.h>
//
//
//#define ll long long
//#define MOD 1000000007
//#define INF 1000000000
//
//using namespace std;
//
//typedef vector<double> vi;
//typedef vector<vi> vvi;
//typedef vector<vvi> vvvi;
//typedef pair<int, int> pii;
//typedef pair<pii, pii> pI;
//
//vi v;
//double p;
//vvi mem;
//
//double F(int bars, int steps) {
//	if (bars == 0 || steps == 1000) return 0;
//	
//	double ans = 0;
//	for (int i = 0; i <= bars, ++i)
//		ans += 
//}
//
//int main(int argc, char** argv) {
//	
//	int T;
//	cin >> T;
//	for (int cases = 1; cases <= T; ++cases) {		
//		cin >> p;
//		mem = vvi(21, vi(1001, -1));
//		cout << "Case #" << cases << ": " <<  F(20) << endl;
//	}
//}

#include <iostream>
#include <cstdio>
#include <cmath>
#include <string.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <cstdlib>
#include <sys/resource.h>
#include <map>


#define ll long long
#define MOD 1000000007
#define INF 1000000000

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef pair<int, int> pii;
typedef pair<pii, pii> pI;

vi v;
map<pI, bool> mem;

bool F(int f, int t, int maximo, int minimo) {
	if (f > t) return true;

	if (v[f] == maximo+1) 
		return F(f+1, t, v[f], minimo);
	if (v[f] == minimo-1)
		return F(f+1, t, maximo, v[f]);
	if (v[t] == maximo+1) 
		return F(f, t-1, v[f], minimo);
	if (v[t] == minimo-1)
		return F(f, t-1, maximo, v[t]);
	return false;
}

int main(int argc, char** argv) {
	
	int T;
	cin >> T;
	for (int cases = 1; cases <= T; ++cases) {
		int n;
		cin >> n;
		mem.clear();
		v = vi(n);
		for (int i = 0; i < n; ++i) {
			cin >> v[i];
		}
		cout << "Case #" << cases << ": " <<  ((F(1, n-1, v[0], v[0]) || F(0, n-2, v[n-1], v[n-1])) ? "yes" : "no") << endl;
	}
}