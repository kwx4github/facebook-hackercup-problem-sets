import sys


def check(N, x, top, bottom, smin, smax):
    while top <= bottom:
        if x[top] == smin - 1:
            top += 1
            smin -= 1
            continue
        if x[top] == smax + 1:
            top += 1
            smax += 1
            continue
        if x[bottom] == smin - 1:
            bottom -= 1
            smin -= 1
            continue
        if x[bottom] == smax + 1:
            bottom -= 1
            smax += 1
            continue
        return False
    return True


def  from_top(N, x):
    top = 1
    bottom = N - 1
    smin = x[0]
    smax = x[0]
    return check(N, x, top, bottom, smin, smax)

def from_bottom(N, x):
    top = 0
    bottom = N - 2
    smin = x[N - 1]
    smax = x[N - 1]
    return check(N, x, top, bottom, smin, smax)

def compute(N, x):
    if N < 3 or from_top(N, x) or from_bottom(N, x):
        return "yes"
    return "no"


def parse():
    N = int(sys.stdin.readline().strip())
    x = map(int, sys.stdin.readline().strip().split())
    return N, x


if __name__ == "__main__":
    sys.setrecursionlimit(100000)
    T = int(sys.stdin.readline().strip())
    for i in xrange(T):
        data = parse()
        result = compute(*data)
        print "Case #%d: %s" % (i + 1, result)
