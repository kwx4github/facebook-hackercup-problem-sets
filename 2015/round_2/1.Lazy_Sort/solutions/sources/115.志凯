
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <utility>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <string.h>
 
using namespace std;
using namespace rel_ops;
 
typedef long long int64;
typedef unsigned long long uint64;
const double pi=acos(-1.0);
const double eps=1e-11;
const int inf=0x7FFFFFFF;
template<class T> inline bool checkmin(T &a,T b){return b<a?a=b,1:0;}
template<class T> inline bool checkmax(T &a,T b){return b>a?a=b,1:0;}
template<class T> inline T sqr(T x){return x*x;}
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<PII> VII;
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
#define mem(a,b) memset(a, b, sizeof(a))
#define clr(a) memset(a, 0, sizeof(a))
#define rep(i,n) for(int i=0; i<n; i++)
#define repit(i,v) for(typeof(v.begin()) i=v.begin(); i!=v.end(); i++)
#define iter(v) typeof(v.begin())
#define ff first
#define ss second
#ifdef LOCAL
#define dbg(args...) printf(args); //##__VA_ARGS__
#define dout cout
#define out(x) (cout<<#x<<": "<<x<<endl)
template<class T>void show(T a, int n){for(int i=0; i<n; ++i) cout<<a[i]<<' '; cout<<endl;}
template<class T>void show(T a, int r, int l){for(int i=0; i<r; ++i)show(a[i],l);cout<<endl;}
#else
#define dbg(...)
#define dout if(true);else cout
#define out(...)
#define show(...)
#endif

int a[100005];
int main() {
	int T;
	cin >> T;
	rep(cas, T) {
		int n;
		cin >> n;
		rep(i, n) {
			cin >> a[i];
		}
		int l = 1, r = n-1, c = 1;
		bool ans1 = true;
		int ll = a[0], rr = a[0];
		while (l <= r) {
			if (a[l] == ll+1) {
				l++, ll++;
			} else if (a[l] == rr-1) {
				l++; rr--;
			}
			else if (a[r] == ll+1) {
				r--; ll++;
			}
			else if (a[r] == rr-1) {
				r--; rr--;
			}
			else {
				ans1 = false;
				break;
			}
		}

		l = 0, r = n-2, c = 1;
		bool ans2 = true;
		ll = a[n-1], rr = a[n-1];
		while (l <= r) {
			if (a[l] == ll+1) {
				l++, ll++;
			} else if (a[l] == rr-1) {
				l++; rr--;
			}
			else if (a[r] == ll+1) {
				r--; ll++;
			}
			else if (a[r] == rr-1) {
				r--; rr--;
			}
			else {
				ans2 = false;
				break;
			}

		}
		printf("Case #%d: %s\n", cas+1, (ans1||ans2)?"yes":"no");
	}

	return 0;
}
