#!/usr/bin/python

# print repr(st)
# maze = [[['#' for i in range(N+2)] for i in range(M+2)] for i in range(4)]
# (M, N) = map(int, f.readline().split())
# l = f.readline()
import argparse

nn = 0
al = ()


def fromfront():
    global nn, al
    loi = 1
    hii = nn - 1

    lon = al[0]
    hin = al[0]

    while loi < hii:
        a = al[loi]
        if a == lon - 1:
            lon -= 1
            loi += 1
            continue
        if a == hin + 1:
            hin += 1
            loi += 1
            continue
        a = al[hii]
        if a == lon - 1:
            lon -= 1
            hii -= 1
            continue
        if a == hin + 1:
            hin += 1
            hii -= 1
            continue
        return False
    return True


def fromback():
    global nn, al
    loi = 0
    hii = nn - 2

    lon = al[nn - 1]
    hin = al[nn - 1]

    while loi < hii:
        a = al[loi]
        if a == lon - 1:
            lon -= 1
            loi += 1
            continue
        if a == hin + 1:
            hin += 1
            loi += 1
            continue
        a = al[hii]
        if a == lon - 1:
            lon -= 1
            hii -= 1
            continue
        if a == hin + 1:
            hin += 1
            hii -= 1
            continue
        return False
    return True


def doit():
    global nn, al
    nn = int(f.readline())
    al = map(int, f.readline().split())
    if fromfront() or fromback():
        return "yes"
    return "no"


parser = argparse.ArgumentParser()
parser.add_argument("filename", help="The filename to be processed")
args = parser.parse_args()
if args.filename:
    with open(args.filename) as f:
        cases = int(f.readline())
        for case in range(1, cases+1):
            print ("Case #" + str(case) + ":"), doit()