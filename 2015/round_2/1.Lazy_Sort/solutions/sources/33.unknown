#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <algorithm>
#include <deque>
using namespace std;
typedef long long LL;

bool solve(deque<int> now, deque<int> rest)
{
	while(!rest.empty())
		if(now.front()-1 == rest.front()) {
			now.push_front(rest.front());
			rest.pop_front();
		}
		else if(now.front()-1 == rest.back()) {
			now.push_front(rest.back());
			rest.pop_back();
		}
		else if(now.back()+1 == rest.front()) {
			now.push_back(rest.front());
			rest.pop_front();
		}
		else if(now.back()+1 == rest.back()) {
			now.push_back(rest.back());
			rest.pop_back();
		}
		else {
			return false;
		}
	return true;
}

bool solve(deque<int> A)
{
	int a = A.front();
	A.pop_front();
	if(solve(deque<int>(1,a), A))
		return true;
	A.push_front(a);
	a = A.back();
	A.pop_back();
	return solve(deque<int>(1,a), A);
}

int main()
{
	int T; cin>>T;
	for(int C=1; C<=T; ++C) {
		cout << "Case #" << C << ": ";

		int N; cin>>N;
		deque<int> A(N);
		for(auto& Ai: A) cin>>Ai;

		cout << (solve(A) ? "yes" : "no") << endl;
	}
}
