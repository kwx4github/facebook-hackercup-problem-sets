#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker,"/STACK:10000000000")
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
using namespace std;
#define FR(i,n) for(int (i)=0;(i)<(n);(i)++)
#define FOR(i,c,n) for(int (i)=(c);(i)<(n);(i)++)
#define REP(it,v,cont) for(cont::iterator (it)=(v).begin();(it)!=(v).end();++(it)) 
#define CLR(a,c) memset((a),(c),sizeof (a))
#define ALL(v) (v).begin(),(v).end()
#define INF (1LL<<60)
#define EPS 1e-8
#define MOD 1000000007
#define SQR(a) ((a)*(a))
typedef long long  ll;
typedef unsigned long long  ull;
//typedef long double lld;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

bool isit(vector<int> &v){
	int mini=v[0];
	int maxi=v[0];
	int st=1;
	int en=v.size()-1;
	FR(i,v.size()-1){
		if(v[st] == mini-1){st++;mini--;continue;}
		if(v[st] == maxi+1){st++;maxi++;continue;}
		if(v[en] == mini-1){en--;mini--;continue;}
		if(v[en] == maxi+1){en--;maxi++;continue;}
		return false;
	}
	return true;
}
int main(){
	freopen("C:\\Users\\Alireza\\Desktop\\lazy_sort.txt", "r", stdin);
	freopen("a.out","w",stdout);
	int t;cin>>t;
	FOR(cas,1,t+1){
		printf("Case #%d: ",cas);
		int n;cin>>n;
		vector<int> v;
		FR(i,n) {int k;cin>>k;v.push_back(k);}
		bool can = false;
		can |= isit(v);
		reverse(ALL(v));
		can |= isit(v);
		cout<<(can?"yes":"no")<<endl;
	}
}