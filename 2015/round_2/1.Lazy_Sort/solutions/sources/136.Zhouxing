/*
    Author: Zhouxing Shi
    Created on Jan25, 2014
*/
#include <bits/stdc++.h>
#define rep(i, a, b) for (int i = (a); i <= (b); ++i)
#define drep(i, a, b) for (int i = (a); i >= (b); --i)
#define REP(i, a, b) for (int i = (a); i < (b); ++i)
#define pb(x) push_back(x)
#define mp(x, y) (make_pair(x, y))
#define clr(x) memset(x, 0, sizeof(x))
#define xx first
#define yy second

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
const int inf = ~0U >> 1;
const ll INF = ~0ULL >> 1;;
const double pi = acos(-1.0);
template <class T> inline T sqr(T a) { return a * a; }
template <class T> inline void read(T &n)
{
    char c;
	for (c = getchar(); !(c >= '0' && c <= '9'); c = getchar()); n = c - '0';
    for (c = getchar(); c >= '0' && c <= '9'; c = getchar()) n = n * 10 + c - '0';
}
int Pow(int base, int n, int mo)
{
	if (n == 0) return 1;
	if (n == 1) return base;
	int tmp = Pow(base, n >> 1, mo);
	tmp = (ll)tmp * tmp % mo;
	if (n & 1) tmp = (ll)tmp * base % mo;
	return tmp;
}

//***************************

int N, a[60000];

int work(int _)
{
	scanf("%d", &N);
	rep(i, 1, N) scanf("%d", &a[i]);
	
	int l = 2, r = N;
	int curl = a[1], curr = a[1];
	int flag = 1;
	
	while (l <= r)
	{
		if (a[l] == curl - 1)
		{
			curl = a[l];
			l++;
		}
		else if (a[l] == curr + 1)
		{
			curr = a[l];
			l++;
		}
		else if (a[r] == curl - 1)
		{
			curl = a[r];
			r--;
		}
		else if (a[r] == curr + 1)
		{
			curr = a[r];
			r--;
		}
		else
		{
			flag = 0;
			break;
		}
	}
	if (flag) return 1;
	
	l = 1, r = N - 1;
	curl = a[N], curr = a[N];
	flag = 1;
	
	while (l <= r)
	{
		if (a[l] == curl - 1)
		{
			curl = a[l];
			l++;
		}
		else if (a[l] == curr + 1)
		{
			curr = a[l];
			l++;
		}
		else if (a[r] == curl - 1)
		{
			curl = a[r];
			r--;
		}
		else if (a[r] == curr + 1)
		{
			curr = a[r];
			r--;
		}
		else
		{
			flag = 0;
			break;
		}
	}
	if (flag) return 1;	
	
	return 0;
	
}

int main()
{
	#ifdef LOCAL
		freopen("A.txt", "r", stdin);
		freopen("A.ans", "w", stdout);
	#endif
	
	int cases;
	scanf("%d", &cases);
	rep(_, 1, cases) 
	{
		printf("Case #%d: ", _);
		puts(work(_) ? "yes" : "no");
	}
	
	return 0;
}


