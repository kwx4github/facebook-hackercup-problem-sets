package hackercup._2015.r2;


import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Scanner;

public class A {

	Scanner scanner;

	private void solve() throws FileNotFoundException {
		File input = new File("data/hackercup/2015/r2/lazy_sort.txt");
		scanner = new Scanner(input);

		File test = new File("data/hackercup/2015/r2/A.out");
		PrintStream out = new PrintStream(new FileOutputStream(test));
		System.setOut(out);

		int testCase = scanner.nextInt();
		scanner.nextLine();

		for (int i = 1; i <= testCase; i++) {
			System.out.printf("Case #%d: ", i);
			boolean r = solveCase();
			System.out.println(r ? "yes" : "no");
		}
	}

	private boolean solveCase() {
		int n = scanner.nextInt();
		int[] x = new int[n];
		for (int i = 0; i < n; i++) {
			x[i] = scanner.nextInt();
		}

		int left = 1;
		int right = n - 1;
		boolean ok1 = true;
		int min = x[0];
		int max = x[0];
		while (left <= right && ok1) {
			if (x[left] == min - 1) {
				left++;
				min--;
			} else if (x[left] == max + 1) {
				left++;
				max++;
			} else if (x[right] == min - 1) {
				right--;
				min--;
			} else if (x[right] == max + 1) {
				right--;
				max++;
			} else {
				ok1 = false;
			}
		}

		left = 0;
		right = n - 2;
		boolean ok2 = true;
		min = x[n - 1];
		max = x[n - 1];
		while (left <= right && ok2) {
			if (x[left] == min - 1) {
				left++;
				min--;
			} else if (x[left] == max + 1) {
				left++;
				max++;
			} else if (x[right] == min - 1) {
				right--;
				min--;
			} else if (x[right] == max + 1) {
				right--;
				max++;
			} else {
				ok2 = false;
			}
		}

		return ok1 || ok2;
	}

	public static void main(String[] args) throws FileNotFoundException {
		new A().solve();
	}
	
}
