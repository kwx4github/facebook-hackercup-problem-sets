#include <iostream>
#include <sstream>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <vector>
#include <fstream>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <algorithm>
#include <numeric>
#include <bitset>
#include <list>

template<typename T>
typename T::value_type SUM(const T &t){
	return accumulate(t.begin(),t.end(), typename T::value_type());
}

#define INF 2100000000
#define VI vector<int>
#define VS vector<string>
#define PB push_back
#define MP make_pair
#define SZ size()
#define FOR(i,b) for(int i=0;i<b;i++)
#define ll long long

using namespace std;

int m[50001];
list<int> a,b,c,d;
int main(){
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);

    int t;
    cin >> t;
    FOR(i,t){
        a.clear();
        b.clear();
        c.clear();
        d.clear();
        int n,x;
        cin >> n;
        FOR(j,n){
            cin >> x;
            a.push_front(x);
            b.push_front(x);
        }
        bool a1 = true, a2=true;
        c.push_back(a.front());
        a.pop_front();
        d.push_back(b.back());
        b.pop_back();
        while(!a.empty()){
            if(a.front()==c.front()-1){
                c.push_front(a.front());
                a.pop_front();
            }
            else if(a.front()==c.back()+1){
                c.push_back(a.front());
                a.pop_front();
            }
            else if(a.back()==c.front()-1){
                c.push_front(a.back());
                a.pop_back();
            }
            else if(a.back()==c.back()+1){
                c.push_back(a.back());
                a.pop_back();
            }
            else {
                a1=false;
                break;
            }
        }

        while(!b.empty()){
            if(b.front()==d.front()-1){
                d.push_front(b.front());
                b.pop_front();
            }
            else if(b.front()==d.back()+1){
                d.push_back(b.front());
                b.pop_front();
            }
            else if(b.back()==d.front()-1){
                d.push_front(b.back());
                b.pop_back();
            }
            else if(b.back()==d.back()+1){
                d.push_back(b.back());
                b.pop_back();
            }
            else {
                a2=false;
                break;
            }
        }

        string res = (a1 || a2)? "yes" : "no";

        cout << "Case #"<<(i+1)<<": "<<res<<endl;
    }

//	system("pause");
	return 0;
}
