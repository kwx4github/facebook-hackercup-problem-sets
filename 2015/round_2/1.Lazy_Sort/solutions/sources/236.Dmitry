#pragma comment (linker, "/STACK:268435456")
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <queue>
#include <cmath>
#include <cctype>
#include <sstream>
#include <ctime>
#include <tuple>
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> T sqr(T r) { return r * r; }

int a[51000];
int n, from, to;
int mn, mx;

int solve()
{
	while (from < to)
	{
		if (a[from] == mn - 1 || a[from] == mx + 1)
		{
			mn = min(mn, a[from]);
			mx = max(mx, a[from]);
			from++;
		}
		else if (a[to] == mn - 1 || a[to] == mx + 1)
		{
			mn = min(mn, a[to]);
			mx = max(mx, a[to]);
			to--;
		}
		else
			return 0;
	}
	return 1;
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int tn;
    cin >> tn;
    for (int tc = 0; tc < tn; tc++)
    {
    	cin >> n;
    	for (int i = 0; i < n; i++)
    		cin >> a[i];
    	from = 1;
    	to = n - 1;
    	mn = mx = a[0];
    	int result = solve();
    	from = 0;
    	to = n - 2;
    	mn = mx = a[n - 1];
    	result |= solve();
    	cout << "Case #" << tc + 1 << ": " << (result ? "yes" : "no") << endl;
    }
    return 0;
}