#!/usr/bin/env python3

def solve(N, permutation):
  # Start with left
  left = 1
  right = N - 1
  low = permutation[0]
  high = permutation[0]
  while left <= right:
    if permutation[left] == low - 1:
      left += 1
      low -= 1
    elif permutation[left] == high + 1:
      left += 1
      high += 1
    elif permutation[right] == low - 1:
      right -= 1
      left -= 1
    elif permutation[right] == high + 1:
      right -= 1
      high += 1
    else:
      break
  else:
    return "yes"
  #Start with right
  left = 0
  right = N - 2
  low = permutation[-1]
  high = permutation[-1]
  while left <= right:
    if permutation[left] == low - 1:
      left += 1
      low -= 1
    elif permutation[left] == high + 1:
      left += 1
      high += 1
    elif permutation[right] == low - 1:
      right -= 1
      left -= 1
    elif permutation[right] == high + 1:
      right -= 1
      high += 1
    else:
      break
  else:
    return "yes"
  return "no"

def main():
  T = int(input())
  for case in range(1, T + 1):
    N = int(input())
    permutation = list(map(int, input().split()))
    solution = solve(N, permutation)
    print("Case #%d: %s" % (case, solution))

if __name__ == "__main__":
  main()

