#include <fstream>
#include <vector>
#include <iostream>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <list>
#include <queue>
#include <algorithm>
#include <math.h>
#include <stdlib.h>
using namespace std;

string myitoa (int i) {
	string ret;
	if (i == 0)
		return string("0");
	while (i > 0) {
		ret.push_back('0' + i % 10);
		i /= 10;
	}
	reverse(ret.begin(), ret.end());
	return ret;
}

int main()
{
	ifstream curFile;
	curFile.open("lazy_sort.txt", ios::in);
	vector<string> ret;
	string src;
	int T;
	int N;
	if(curFile)
	{
		curFile >> N;		
		while (N -- > 0) {
			curFile >> T;
			string r;
			vector<int> src;
			vector<int> dict (T + 1, 0);
			int i = 0;
			int t;
			while (i++ < T) {
				curFile >> t;
				src.push_back(t);
				dict[t] = i - 1;	
			}
			int st = dict[1];
			int head = st - 1 ;
			int tail = st + 1;
			int shead = 2;
			int stail = T;
			while (head >=0 || tail < T) {
				if (head >= 0 && src[head] == shead) {
					shead ++;
					head  --;

				}
				else if (tail < T && src[tail] == shead) {
					tail ++;
					shead ++;

				}
				else if (head >= 0 && src[head] == stail) {
					stail --;
					head --;

				}
				else if (tail < T && src[tail] == stail) {
					tail ++ ;
					stail --;

				}
				else {
					r = "no";
					break;
				}
			}
			if (r.size() < 1)
				r = "yes";
			ret.push_back(r);
		}
	}
	else {
		cout << "Can't open input file << endl;";
	}
	curFile.close();
	ofstream outfile;
	outfile.open("output.txt", ios::out);
	if(outfile)
	{
		for(int i = 0; i < ret.size() ; i++) {
			outfile << "Case #" << i + 1<< ": " <<ret[i] << endl;
			cout << "Case #" << i + 1<< ": " <<ret[i] << endl;
		}
	}
	outfile.close();
	return 0;
}
