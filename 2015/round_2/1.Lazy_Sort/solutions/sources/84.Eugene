#include <iostream>
#include <iomanip>
#include <functional>
#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <memory>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <list>
#include <stack>
#include <string>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <ctime>
#include <utility>
#include <iterator>
#include <bitset>
#include <sstream>
#include <numeric>
#include <complex>
#include <sstream>
#include <unordered_set>
#include <unordered_map>

#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pdd pair<double,double>
#define uint unsigned int
#define LL long long
#define ULL unsigned LL
#define VI vector<int>
#define X first
#define Y second
#define sz(_v) ((int)_v.size())
#define all(_v) (_v).begin(),(_v).end()
#define FOR(_i,a,b) for (int _i(a),_l(b); _i<=_l; ++_i)
#define rept(i,a) FOR(i,0,(int)(a)-1)
#define x1 X1
#define y1 Y1
#define sqr(a) ((a)*(a))
#define C(a) memset((a),0,sizeof (a))
#define MS(a,x) memset((a),(x),sizeof (a))
#define INF 1100000000
#define INFL INF*1ll*INF
#define PI 3.141592653589
#define eps 1e-10
#define MOD 1000000007
#define PRIME 312427
#define MOD2 500000004

using namespace std;

// do not use FOR for long-long
// check stack in case of crash
// check INF before submit

void init() {
}

void prepareTest() {
}

bool check(VI &d, set<int> &SET) {
	int l(0),r(d.size()-1);
	while (l!=r) {
		if (d[l]==(*SET.begin()) - 1) {
			SET.insert(d[l]);
			++l;
		} else if (d[l]==(*(--SET.end())) + 1) {
			SET.insert(d[l]);
			++l;
		} else if (d[r]==(*SET.begin()) - 1) {
			SET.insert(d[r]);
			--r;
		} else if (d[r]==(*(--SET.end())) + 1) {
			SET.insert(d[r]);
			--r;
		} else {
			return false;
		}
	}
	return true;
}

void solveTest() {
	int n;
	scanf("%d",&n);
	VI d(n);
	rept(i,n) scanf("%d",&d[i]);
	set<int> result;
	result.insert(d[0]);
	VI r(d);
	r.erase(r.begin());
	if (check(r, result)) {
		printf("yes\n");
		return;
	}
	result.clear();
	r = VI(d);
	result.insert(r.back());
	r.pop_back();
	if (check(r, result)) {
		printf("yes\n");
		return;
	}
	printf("no\n");
}

void solve() {
	int tst;
	init();
	scanf("%d\n",&tst);
	FOR(i,1,tst) {
		printf("Case #%d: ",i);
		prepareTest();
		solveTest();
	}
}

int main() {
	freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
//	freopen(".in","r",stdin); freopen(".out","w",stdout);

//	rept(i,50000) {
//		printf("%d ",i+1);
//	}

	clock_t tm = clock();
	solve();
	cerr<<setprecision(3)<<(clock()-tm+0.)/CLOCKS_PER_SEC<<endl;
	return 0;
}
