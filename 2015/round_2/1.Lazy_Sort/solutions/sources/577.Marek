#include<iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <vector>
#include <cmath>
#include <list>
#include <sstream>
#include <algorithm>

using namespace std;

typedef pair<int,int> PII;
typedef long long LL;
typedef vector<int> VI;
typedef pair<LL,LL> PLL;
typedef vector<pair<int,int> > VPII;
typedef vector<LL> VLL;
typedef vector<vector<int> > VVI;
typedef vector<string> VS;
typedef long double LD;

#define PI 3.14159265358979323
#define EE 2.71828182845
#define EPS 10e-10
#define INF 10000000

inline LL MAX(LL a, LL b){ return a < b ? b : a;}
inline LL MIN(LL a, LL b){ return a < b ? a : b;}

#define FOR(i,n)      for(int i=0;i<(n);i++)
#define FORD(i,n)     for(int i=(n)-1;i>=0;i--)
//
#define MP make_pair
#define PB push_back
//

int I[50500];
int N;
deque<int> Q, input;

bool solve_started() {
  while(!input.empty()) {
    if (input.front() == Q.front() - 1) {
      int p = input.front();
      Q.push_front(p);
      input.pop_front();
    } else if (input.front() == Q.back() + 1) {
      int p = input.front();
      Q.push_back(p);
      input.pop_front();
    } else
    if (input.back() == Q.front() - 1) {
      int p = input.back();
      Q.push_front(p);
      input.pop_back();
    } else if (input.back() == Q.back() + 1) {
      int p = input.back();
      Q.push_back(p);
      input.pop_back();
    } else return false;
  }

  return true;
}

void solve(int tc) {
  scanf("%d ", &N);
  FOR(i, N) scanf("%d ", &I[i]);
  cout << "Case #" << tc << ": ";
  while(!Q.empty()) Q.pop_front();
  while(!input.empty()) input.pop_front();

  // skusime zacat prvou
  FOR(i, N) if (i) input.push_back(I[i]);
  Q.push_front(I[0]);
  if (solve_started()) {
    cout << "yes" << endl;
    return;
  }
  while(!Q.empty()) Q.pop_front();
  while(!input.empty()) input.pop_front();
  FOR(i, N - 1) input.push_back(I[i]);
  Q.push_front(I[N - 1]);
  if (solve_started()){
    cout << "yes" << endl;
    return;
  }
  cout << "no" << endl;
}

int main() {
  int TT;
  scanf("%d ", &TT);
  FOR(tt, TT) solve(tt + 1);
}
