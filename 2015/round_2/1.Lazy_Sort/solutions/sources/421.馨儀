#include<stdio.h>
#include<algorithm>
bool dp[2][500001];
bool *dp0,*dp1;
int *min0,*min1;
int min[2][500001];
inline bool ok(int x,int y,int z){
	//printf("%d %d %d %d\n",x,y,z,n);
	return z==y||z==x-1||x>=1000000000;
}
bool check(int *s, int n){
	int i;//,j,k;
	/*for(i=0;i<n;i++){
		min[i][i]=n+1;
		dp[i][i]=true;
		for(j=n;j>i;j--){
			dp[i][j]=false;
			min[i][j]=std::min(min[i][j+1],s[j]);
		}
	}*/
	dp0=dp[0];
	dp1=dp[1];
	min0=min[0];
	min1=min[1];
	dp1[0]=true;
	min1[0]=1000000000;
	int len;
	for(len=1;len<n;len++){
	//for(i=0;i<n;i++){
		std::swap(dp0,dp1);
		std::swap(min0,min1);
		//dp[i][i+1]=true;
		//for(j=n-!i;j>i;j--){
		for(i=0;i<=len;i++){ //start
			//j=n-i;
			dp1[i]=i&&dp0[i-1]&&ok(min0[i-1],min0[i-1]+len-1,s[i-1])||i!=len&&dp0[i]&&ok(min0[i],min0[i]+len-1,s[n-len+i]);
			min1[i]=i==len?std::min(min0[i-1],s[i-1]):std::min(min0[i],s[n-len+i]);
			//printf("%d %d %d %d\n",i,j,dp1[i],min1[i]);
		}
	}
	for(i=0;i<n;i++){
		if(dp1[i]) return true;
	}
	return false;
}

int s[1000000];
int main(){
	int i,j,k;
	int n;
	int T,TN;
	scanf("%d",&TN);
	for(T=1;T<=TN;T++){
		scanf("%d",&n);
		for(i=0;i<n;i++){
			scanf("%d",&s[i]);
			s[i]--;
		}
		printf("Case #%d: %s\n",T,check(s,n)?"yes":"no");
	}
}
