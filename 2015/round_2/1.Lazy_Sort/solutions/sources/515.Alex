#include<cstdio>
#include<fstream>
#include<iostream>
#include<iomanip>
#include<algorithm>
#include<vector>
#include<bitset>
#include<deque>
#include<queue>
#include<set>
#include<map>
#include<cmath>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<unordered_map>

#define ll long long
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pll pair<ll,ll>

using namespace std;

const int nmax = 50005;

int t, n, i, ok, x, y, a, b, A[nmax];
deque<int> q, sol;

void solve()
{
    sol.pb(q.front());
    q.pop_front();

    while(!q.empty())
    {
        a = q.front();
        b = q.back();

        x = sol.front();
        y = sol.back();

        if(a == x - 1)
        {
            q.pop_front();
            sol.push_front(a);
        }
        else if(a == y + 1)
        {
            q.pop_front();
            sol.pb(a);
        }
        else if(b == x - 1)
        {
            q.pop_back();
            sol.push_front(b);
        }
        else if(b == y + 1)
        {
            q.pop_back();
            sol.pb(b);
        }
        else break;
    }

    if(q.empty()) ok = 1;
}

int main()
{
    freopen("lazy_sort.txt", "r", stdin);
    freopen("test.out", "w", stdout);

    scanf("%d", &t);

    for(int I = 1; I <= t; I++)
    {
        scanf("%d", &n);
        ok = 0;

        for(i = 1; i <= n; i++)
            scanf("%d", &A[i]);

        q.clear();
        sol.clear();
        for(i = 1; i <= n; i++)
            q.pb(A[i]);

        solve();

        q.clear();
        sol.clear();
        for(i = n; i >= 1; i--)
            q.pb(A[i]);

        solve();

        if(ok == 1) printf("Case #%d: yes\n", I);
        else printf("Case #%d: no\n", I);
    }

    return 0;
}
