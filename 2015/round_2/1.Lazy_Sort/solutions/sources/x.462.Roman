import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.Scanner;

public class Problem1 {
    private static final String inFile = "lazy_sort.txt";
    private static final String outFile = "1-out.txt";

    public static void main(String[] args) {
        try {
            FileReader reader = new FileReader(inFile);
            PrintWriter writer = new PrintWriter(outFile);
            Scanner scanner = new Scanner(reader);
            int t = scanner.nextInt();
            for (int i = 1; i <= t; ++i) {
                int n = scanner.nextInt();
                int[] a = new int[n];
                for (int j = 0; j < n; ++j) {
                    a[j] = scanner.nextInt();
                }
                writer.println("Case #" + i + ": " + (solve(a) ? "yes" : "no"));
            }
            writer.close();
        } catch (FileNotFoundException ignored) {
        }
    }

    private static boolean solve(int[] a) {
        int n = a.length;
        return solve(a, 1, n, a[0]) || solve(a, 0, n - 1, a[n - 1]);
    }

    private static boolean solve(int[] a, int start, int end, int init) {
        LinkedList<Integer> l = new LinkedList<Integer>();
        l.add(init);
        for (int i = start; i < end; ++i) {
            int curr = a[i];
            int bott = l.getFirst();
            int top = l.getLast();
            if (curr == bott - 1) {
                l.addFirst(curr);
            } else if (curr == top + 1) {
                l.addLast(curr);
            } else {
                return false;
            }
        }
        return true;
    }
}
