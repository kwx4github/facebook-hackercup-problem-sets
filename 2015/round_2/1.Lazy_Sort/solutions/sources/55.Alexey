#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <deque>
#include <cmath>
#include <ctime>
#include <stack>
#include <sstream>
#include <set>
#include <map>
#include <cassert>
#include <memory.h>

using namespace std;

#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()

typedef long long li;
typedef long double ld;
typedef vector<int> vi;
typedef pair <li, li> pi;

void solve();

void precalc();

#define FILENAME "souvenir"

int main() {
	string s = FILENAME;
#ifdef RIAD
	freopen("input", "r", stdin);
#ifndef DEBUG
	freopen("output", "w", stdout);
#endif
	//cout<<FILENAME<<endl;
	//assert (s != "change me please");
	clock_t start = clock();
#else
	//freopen(FILENAME ".in", "r", stdin);
	//freopen(FILENAME ".out", "w", stdout);
#endif
	cout.sync_with_stdio(0);
	cout.precision(20);
	cout << fixed;
	int t = 1;
	cin >> t;

	//precalc();
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
#ifdef DEBUG
	cerr << "\n\n" << (clock() - start) / 1.0 / CLOCKS_PER_SEC << "\n\n\n";
#endif
	return 0;
}

bool solve(vector<int> v) {
	
	
	int f = 1;
	int l = v.size() - 1;
	
	
	int L = v[0];
	int R = v[0];
	while(f <= l) {
		if(v[f] == L - 1) {
			++f;
			--L;
			continue;
		}
		if(v[f] == R + 1) {
			++f;
			++R;
			continue;
		}
		if(v[l] == L - 1) {
			--l;
			--L;
			continue;
		}
		if(v[l] == R + 1) {
			--l;
			++R;
			continue;
		}
		
		return false;
	}
	return true;
}

void solve() {
	int n;
	cin >> n;
	vector<int> v(n);
	for(int i = 0; i < n; ++i) {
		cin >> v[i];
	}
	for(int i = 0; i < 2; ++i) {
		if(solve(v)) {
			cout << "yes" << endl;
			return;
		}
		reverse(all(v));
	}
	
	cout << "no" << endl;
	
}