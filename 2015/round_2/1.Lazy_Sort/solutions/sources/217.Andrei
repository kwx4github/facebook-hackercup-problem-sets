#include <fstream>
#include <vector>
#include <string>
#include <algorithm>
#include <deque>

using namespace std;

bool Sort(const int middle, deque<int> permutation) {
    bool move = true;
    int top = middle, bottom = middle;
    while (move && !permutation.empty()) {
        move = false;
        if (permutation.front() == top - 1) {
            move = true;
            permutation.pop_front();
            --top;
            continue;
        }
        if (permutation.back() == top - 1) {
            move = true;
            permutation.pop_back();
            --top;
            continue;
        }
        if (permutation.front() == bottom + 1) {
            move = true;
            permutation.pop_front();
            ++bottom;
            continue;
        }
        if (permutation.back() == bottom + 1) {
            move = true;
            permutation.pop_back();
            ++bottom;
            continue;
        }
    }
    return permutation.empty();
}

bool Sort(deque<int> permutation) {
    int front = permutation.front(), back = permutation.back();
    permutation.pop_front();
    if (Sort(front, permutation))
        return true;
    permutation.push_front(front);
    permutation.pop_back();
    if (Sort(back, permutation))
        return true;
    return false;
}

int main() {
    ifstream cin("input.txt");
    ofstream cout("output.txt");
    int tests;
    cin >> tests;
    for (int t = 1; t <= tests; ++t) {
        int n;
        cin >> n;
        deque<int> permutation = deque<int>(n);
        for (int i = 0; i < n; ++i)
            cin >> permutation[i];
        string answer = "no";
        if (Sort(permutation))
            answer = "yes";
        cout << "Case #" << t << ": " << answer << "\n";
    }
    cin.close();
    cout.close();
    return 0;
}
