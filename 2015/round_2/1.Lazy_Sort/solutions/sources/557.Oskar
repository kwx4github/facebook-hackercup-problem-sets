#include <bits/stdc++.h>

using namespace std;

bool poss(bool first, list<int> numbers, const int lo, const int hi) {
    const int f = first ? *numbers.begin() : *numbers.rbegin();
    if (first) {
        numbers.pop_front();
    } else {
        numbers.pop_back();
    }
    int want_up = f+1;
    int want_down = f-1;
    while (!numbers.empty()) {
        const int first = *numbers.begin();
        if (first == want_up) {
            numbers.pop_front();
            want_up++;
            continue;
        }
        if (first == want_down) {
            numbers.pop_front();
            want_down--;
            continue;
        }
        const int last = *numbers.rbegin();
        if (last == want_up) {
            numbers.pop_back();
            want_up++;
            continue;
        }
        if (last == want_down) {
            numbers.pop_back();
            want_down--;
            continue;
        }

        break;
    }

    return numbers.empty();
}

string solve() {
    int N;
    cin >> N;
    list<int> numbers;
    for (int i = 0; i < N; ++i) {
        int cur;
        cin >> cur;
        numbers.push_back(cur);
    }
    if (poss(true, numbers, 1, N)) {
        return "yes";
    }
    if (poss(false, numbers, 1, N)) {
        return "yes";
    }
    return "no";
}

int main() {
    int T;
    cin >> T;
    for (int i = 0; i < T; ++i) {
        cout << "Case #" << (i+1) << ": " << solve() << endl;
    }
}
