#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <bitset>
#include <stack>
#include <string>
#include <sstream>
#include <math.h>

#define REP(i,n) for(int i = 0; i<(n); i++)
#define ITER(i,v) for(auto i : v)
#define INF 1000000000

using namespace std;

template <class T>
using priority_queue_asc =  priority_queue<T,vector<T>, greater<T> >;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
typedef vector<bool> vb;

int N;
vi n;

int main(){
	int TC;
	cin >> TC;
	for(int tc=1;tc<=TC;tc++){
		cin >> N;
		n.reserve(N);
		REP(i,N){
			cin >> n[i];
		}
		if(N==1){
			cout << "Case #"<<tc<<": yes\n";
			continue;
		}

		bool succes = true;
		int left = 1;
		int right = N-1;
		
		// start left
		int bot = n[0], top = n[0];
		while(left != right){
			if(n[left] == bot-1){
				left++;
				bot--;
				continue;
			}
			if(n[left] == top+1){
				left++;
				top++;
				continue;
			}
			if(n[right] == bot-1){
				right--;
				bot--;
				continue;
			}
			if(n[right] == top+1){
				right--;
				top++;
				continue;
			}
			succes = false;
			break;
		}
		if(!succes){
			succes = true;
			left = 0;
			right = N-2;

			// start left
			int bot = n[N-1], top = n[N-1];
			while(left != right){
				if(n[left] == bot-1){
					left++;
					bot--;
					continue;
				}
				if(n[left] == top+1){
					left++;
					top++;
					continue;
				}
				if(n[right] == bot-1){
					right--;
					bot--;
					continue;
				}
				if(n[right] == top+1){
					right--;
					top++;
					continue;
				}
				succes = false;
				break;
			}
		}

		cout << "Case #"<<tc<<": ";
		if(succes)
			cout << "yes\n";
		else
			cout << "no\n";


	}
	return 0;
}


