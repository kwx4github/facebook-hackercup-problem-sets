#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <deque>
#include <set>
using namespace std;

int num[50010];
set<pair<int, int>> s;

bool dfs(int first, int end, deque<int>& jobs) {
	if (s.count(make_pair(first, end))) {
		return false;
	}
	s.insert(make_pair(first, end));
	if (first > end) {
		return true;
	}
	if (jobs.empty() || num[first] == jobs.front() - 1) {
		jobs.push_front(num[first]);
		if (dfs(first + 1, end, jobs)) {
			return true;
		}
		jobs.pop_front();
	}
	if (jobs.empty() || num[first] == jobs.back() + 1) {
		jobs.push_back(num[first]);
		if (dfs(first + 1, end, jobs)) {
			return true;
		}
		jobs.pop_back();
	}
	if (first != end) {
		if (jobs.empty() || num[end] == jobs.front() - 1) {
			jobs.push_front(num[end]);
			if (dfs(first, end - 1, jobs)) {
				return true;
			}
			jobs.pop_front();
		}
		if (jobs.empty() || num[end] == jobs.back() + 1) {
			jobs.push_back(num[end]);
			if (dfs(first, end - 1, jobs)) {
				return true;
			}
			jobs.pop_back();
		}
	}
	return false;
}

int main() {
	cin.sync_with_stdio(false);
	int T;
	cin >> T;
	for (int cas = 1; cas <= T; cas++) {
		s.clear();
		int n;
		cin >> n;
		for (int i = 0; i < n; i++) {
			cin >> num[i];
		}
		cout << "Case #" << cas << ": ";
		deque<int> jobs;
		if (dfs(0, n-1, jobs)) {
			cout << "yes" << endl;
		}
		else {
			cout << "no" << endl;
		}
	}
}