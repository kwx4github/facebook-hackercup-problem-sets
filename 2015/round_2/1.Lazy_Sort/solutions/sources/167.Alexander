#include <iostream>
#include <fstream> 
#include <cstdio>
#include <vector>
#include <queue>
#include <cmath>
#include <algorithm>
#include <string>
#include <cstring>
#include <cassert>
#include <complex>
#include <bitset>
#include <map>
#include <set>
#include <ctime>
#include <cfloat>

#define forn(i, n) for (int i = 0; i < (int)(n); i++)
#define ford(i, n) for (int i = (int)(n) - 1; i >= 0; i--)
#define forab(i, k, n) for (int i = (int)(k); i < (int)(n); i++)
#define forba(i, n, k) for (int i = (int)(n) - 1; i >= (int)(k); i--)

#define vi vector<int>
#define pii pair<int, int>
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x)*(x))
#define X first
#define Y second
#define pb push_back
#define mp make_pair

using namespace std;

typedef long long ll;
typedef double ld; 

const ld pi = acos(-1.0);
const ld eps = 1e-8;
const int INF = 1E9;
const int MAXN = 55555;             
            
int t, n, f;
int a[MAXN], l, r;
deque<int> d;

int main() {

	scanf("%d", &t);
	
	forn(tt, t) {
		printf("Case #%d: ", tt + 1);
		
		cin >> n;
		forn(i, n)
			cin >> a[i];
			
		f = 0;
		l = r = a[0];
		for (int i = 1; i < n; i++)
			d.push_back(a[i]);
			
		while (!d.empty()) {
			int x = d.front();
			if (x == l - 1) {
				l--;
				d.pop_front();
			} else if (x == r + 1) {
				r++;
				d.pop_front();
			} else {
				int x = d.back();
				if (x == l - 1) {
					l--;
					d.pop_back();
				} else if (x == r + 1) {
					r++;
					d.pop_back();
				} else {
					break;
				}
			}
		}
		
		if (d.empty())
			f = 1;
		while (!d.empty())
			d.pop_back();
			
		l = r = a[n - 1];
		for (int i = 0; i < n - 1; i++)
			d.push_back(a[i]);
		
		while (!d.empty()) {
			int x = d.front();
			if (x == l - 1) {
				l--;
				d.pop_front();
			} else if (x == r + 1) {
				r++;
				d.pop_front();
			} else {
				int x = d.back();
				if (x == l - 1) {
					l--;
					d.pop_back();
				} else if (x == r + 1) {
					r++;
					d.pop_back();
				} else {
					break;
				}
			}
		}
		
		if (d.empty())
			f = 1;
		while (!d.empty())
			d.pop_back();
		
		if (f)
			cout << "yes";
		else
			cout << "no";
		cout << '\n'; 		
	}

	return 0;
}