#include <cmath>
#include <cstdio>
#include <vector>
#include <climits>
#include <iostream>
#include <algorithm>
using namespace std;

const int MAXN = 111111;
int n, a[MAXN];

bool work() {
  int l = 1, r = n - 1, cnt = 1;
  int aa = a[0], bb = a[0];
  while (l <= r && cnt < n) {
    if (a[l] == aa - 1 || a[l] == bb + 1) {
      if (a[l] == aa - 1) {
        aa = a[l];
      }
      if (a[l] == bb + 1) {
        bb = a[l];
      }
      l++;
      cnt++;
    } else if (a[r] == aa - 1 || a[r] == bb + 1) {
      if (a[r] == aa - 1) {
        aa = a[r];
      }
      if (a[r] == bb + 1) {
        bb = a[r];
      }
      r--;
      cnt++;
    } else {
      break;
    }
  }
  return cnt == n;
}

int main() {
  int cases;
  scanf("%d", &cases);
  getchar();
  for (int T = 0; T < cases; ++T) {
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
      scanf("%d", &a[i]);
    }

    bool flag = work();
    reverse(a, a + n);
    flag |= work();
    printf("Case #%d: ", T + 1);
    puts(flag ? "yes" : "no");
  }
  return 0;
}
