#include <bits/stdc++.h>
#define ll long long
using namespace std;
#define pb push_back
#define mp make_pair
#define ss second
#define ff first


double dp[1001][21];
long double sum(int idx,int till, long double p)
{
    cout<<idx<<" "<<till<<" "<<p<<endl;
  //  if(p*(idx+1)<1e-5) return 0;
    if(idx == 100) return 0;
    if(fabs(-1.0-dp[idx][till] ) <1e-2) return dp[idx][till];
    if(till == 20)
    {

    }
    double ans = 0;
    for(int i=0;i<=20;i++)
    {
        if(i + till <=20)
        {
            double np = pow(p,i)*pow(1-p,20-i);
            if(np<1e-6) continue;
            ans += np*sum(idx+1, till+i, p);
        }
    }
    dp[idx][till] = ans;
    return ans;

}

int last_index(double p)
{
    int hi = 100;
    int lo = 1;
    while(lo<=hi)
    {
        int m = (hi+lo)/2;
        double x = pow(p,m) *pow(1-p,20*m);
    }
}
int main()
{
    int Test;
    freopen("lazy_sort.txt","r",stdin);
    freopen("out.txt","w",stdout);
    cin >> Test;
    for(int test = 1;test<=Test;test++)
    {
       int n;
       cin >> n;
       deque<int> q, p;
       for(int i=0;i<n;i++)
       {
           int x;
           cin>>x;
           q.push_back(x);
       }
        int z =0;
        p.push_back(q.front());
        q.pop_front();
        for(int i=1;i<n;i++)
        {
            int qx = -1, qy =-1 , px = -1, py = -1;
            if(q.size())
            {
                qx = q.front();
                qy = q.back();

            }
            if(p.size())
            {
                px = p.front();
                py = p.back();
            }

            if(qx == px -1)
            {
                p.push_front(qx);
                q.pop_front();
            }
            else if ( qx == py + 1)
            {
                p.push_back(qx);
                 q.pop_front();
            }
             else if(qy == px -1)
            {
                p.push_front(qy);
                 q.pop_back();
            }
            else if ( qy == py + 1)
            {
                p.push_back(qy);
                 q.pop_back();
            }
            else
            {
                z = 1;
                break;
            }


        }
        string ans = "yes";
        if(z ) ans = "no";
        if(!z)
        {
          vector<int> e;
          for(int i=0;i<n;i++) {e.push_back(p.front()); p.pop_front();}
          vector<int> d(n);
          for(int i=0;i<n;i++) d[i] = i+1;
          if(d == e)
          {
              ans = "yes";
          }

        }
       cout<<"Case #"<<test<<": "<<ans;
       if(test<Test)
       cout<<endl;
    }
}
