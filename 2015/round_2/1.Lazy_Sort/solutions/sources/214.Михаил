#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cstdio>
#include <memory>
#include <cstdlib>
#include <cmath>
#include <ctime>

using namespace std;

const int INF = 2147483647;

int main(int argc, const char * argv[]) {
    srand((unsigned) time(0));
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    
    int T;
    cin >> T;
    for(int t = 1; t <= T; ++t) {
        int n;
        cin >> n;
        vector <int> A(n);
        for(int i = 0; i < n; ++i)
            cin >> A[i];
        
        int l = 0, r = n;
        int ansl = A[0], ansr = A[0];
        l++;
        bool can = true;
        while(l < r) {
            if(A[l] == ansr + 1) {
                ansr = A[l];
                l++;
            } else if(A[l] == ansl - 1) {
                ansl = A[l];
                l++;
            } else if(A[r-1] == ansr + 1) {
                ansr = A[r-1];
                r--;
            } else if(A[r-1] == ansl - 1) {
                ansl = A[r-1];
                r--;
            } else {
                can = false;
                break;
            }
        }
        if(can) {
            cout << "Case #" << t << ": " << "yes" << endl;
            continue;
        }
        l = 0; r = n;
        ansl = A[n-1]; ansr = A[n-1];
        --r;
        can = true;
        while(l < r) {
            if(A[l] == ansr + 1) {
                ansr = A[l];
                l++;
            } else if(A[l] == ansl - 1) {
                ansl = A[l];
                l++;
            } else if(A[r-1] == ansr + 1) {
                ansr = A[r-1];
                r--;
            } else if(A[r-1] == ansl - 1) {
                ansl = A[r-1];
                r--;
            } else {
                can = false;
                break;
            }
        }
        if(can) {
            cout << "Case #" << t << ": " << "yes" << endl;
        } else {
            cout << "Case #" << t << ": " << "no" << endl;
        }
    }
    
    return 0;
}