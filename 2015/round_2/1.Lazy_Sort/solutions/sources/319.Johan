#include <iostream> 
#include <sstream> 
#include <string> 
#include <vector> 
#include <queue> 
#include <set> 
#include <map> 
#include <cstdio> 
#include <cstdlib> 
#include <cctype> 
#include <cmath> 
#include <list> 
#include <numeric>
#include <regex.h>  
#include <cstring>  
using namespace std; 
 
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef vector<string> vs; 
typedef vector<vs> vvs;
#define pb push_back 
#define sz(v) ((int)(v).size()) 
 
bool solve(vi v, int middle) {
  int leftmid=middle, rightmid=middle;
  int left=0, right=sz(v)-1;
  if(middle==v[0]) left++;
  else if(middle==v[sz(v)-1]) right--;
  
  for(int k=1;k<sz(v);k++) {
    if(v[left]==leftmid-1) { leftmid--; left++; }
    else if(v[left]==rightmid+1) { rightmid++; left++; }
    else if(v[right]==leftmid-1) { leftmid--; right--; }
    else if(v[right]==rightmid+1) { rightmid++; right--; }
    else return false;
  }
  return true;
}

int main()
{
  int i=0,j=0,k=0; char buf[100000]="";

  int runs,run; scanf("%d",&runs);
  for(run=1;run<=runs;run++){
    scanf("%d",&k);
    vi v(k);
    for(i=0;i<k;i++) scanf("%d",&v[i]);  
    bool solvable = solve(v, v[0]) || solve(v, v[sz(v)-1]);
    printf("Case #%d: %s\n", run, solvable?"yes":"no");
  }
  return 0;
}
