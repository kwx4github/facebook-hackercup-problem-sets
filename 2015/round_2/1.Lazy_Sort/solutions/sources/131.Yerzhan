#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <deque>
#include <cassert>

using namespace std;

#ifdef WIN32
	#define I64 "%I64d"
#else
	#define I64 "%lld"
#endif

typedef long long ll;

#define F first
#define S second
#define mp make_pair
#define pb push_back
#define all(s) s.begin(), s.end()
#define sz(s) (int(s.size()))
#define fname "a"
#define ms(a,x) memset(a, x, sizeof(a))
#define forit(it,s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); ++it)
#define MAXN 1000001

int n;
int a[MAXN];
deque <int> q;

inline void solve()
{
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
	{
		scanf("%d", &a[i]);
		--a[i];
	}

	q.clear();
	bool ok = 1;
	q.push_back(a[0]);
	for (int i = 1, l = 1, r = n - 1; i < n && ok; ++i)
	{
		if (a[l] + 1 == q.front())
			q.push_front(a[l++]);
		else if (q.back() + 1 == a[l])
			q.push_back(a[l++]);
		else if (a[r] + 1 == q.front())
			q.push_front(a[r--]);
		else if (q.back() + 1 == a[r])
			q.push_back(a[r--]);
		else
			ok = 0;
	}

	if (ok)
	{
		puts("yes");
		return;
	}

	q.clear();
	ok = 1;
	q.push_back(a[n - 1]);
	for (int i = 1, l = 0, r = n - 2; i < n && ok; ++i)
	{
		if (a[l] + 1 == q.front())
			q.push_front(a[l++]);
		else if (q.back() + 1 == a[l])
			q.push_back(a[l++]);
		else if (a[r] + 1 == q.front())
			q.push_front(a[r--]);
		else if (q.back() + 1 == a[r])
			q.push_back(a[r--]);
		else
			ok = 0;
	}
	puts(ok ? "yes" : "no");
}

int main()
{
	#ifdef LOCAL
	freopen(fname".in", "r", stdin);
	freopen(fname".out", "w", stdout);
	#endif

	int tt;
	scanf("%d", &tt);
	for (int t = 0; t < tt; ++t)
	{
		printf("Case #%d: ", t + 1);
		solve();
	}
	return 0;
}
