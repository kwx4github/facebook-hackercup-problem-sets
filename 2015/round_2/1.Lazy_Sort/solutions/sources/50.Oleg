#include <assert.h>
#include <stdio.h>

int solve ( int *a, int n, int x ) {
  int y = x;
  while (n > 0) {
    n--;
    // fprintf (stderr, "a[0] = %d, a[n=%d] = %d; xy = %d, %d\n", a[0], n, a[n], x, y);
    if (a[0] == x - 1) {
      x--;
      a++;
    } else if (a[n] == x - 1) {
      x--;
    } else if (a[0] == y + 1) {
      y++;
      a++;
    } else if (a[n] == y + 1) {
      y++;
    } else {
      return 0;
    }
  }
  return 1;
}

int main() {
  int t, tn;
  assert (scanf ("%d", &tn) == 1);
  for (t = 1; t <= tn; t++) {
    int n, i;
    assert (scanf ("%d", &n) == 1);
    int a[n];
    for (i = 0; i < n; i++)
      assert (scanf ("%d", &a[i]) == 1);
    int ans = solve (a, n - 1, a[n - 1]) || solve (a + 1, n - 1, a[0]);
    printf ("Case #%d: %s\n", t, ans ? "yes" : "no");
  }
  return 0;
}

