#include <cstdio>
#include <deque>
#include <algorithm>
using namespace std;

const int MAXN = 50005;

int T[MAXN], n;

bool Try(int elem, int start, int finish) {
    int fst = elem, lst = elem;

    while (start <= finish) {
        if (T[start] == fst-1) { fst--; start++; /*printf("FROM LEFT TO LEFT\n");*/ }
        else if (T[finish] == fst-1) { fst--; finish--; /*printf("FROM RIGHT TO LEFT\n");*/ }
        else if (T[start] == lst+1) { lst++; start++; /*printf("FROM LEFT TO RIGHT\n");*/ }
        else if (T[finish] == lst+1) { lst++; finish--; /*printf("FROM RIGHT TO RIGHT\n");*/ }
        else { return false; }
    }

    return true;
}

int main() {
    int q, caseId = 0;
    scanf("%d", &q);
    while (q--) {
        scanf("%d", &n);
        for (int i = 0; i < n; i++)
            scanf("%d", &T[i]);

        bool answer = false;

        answer = max(answer, Try(T[0], 1, n-1));
        answer = max(answer, Try(T[n-1], 0, n-2));

        caseId++;
        printf("Case #%d: ", caseId);
        if (answer)
            printf("yes\n");
        else
            printf("no\n");
    }
    return 0;
}
