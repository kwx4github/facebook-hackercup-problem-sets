#include <map>
#include <set>
#include <list>

#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>

#include <bitset>
#include <cctype>
#include <cstdio>
#include <limits>
#include <string>
#include <vector>

#include <cassert>
#include <climits>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <numeric>
#include <sstream>
#include <utility>

#include <iostream>
#include <algorithm>
#include <functional>

using namespace std;

void solve () {
    int n;
    scanf ("%d", &n);

    deque <int> d1, d2, d3;
    int x;
    for (int i = 0; i < n; ++i) {
        scanf ("%d", &x);
        d1.push_back (x);
    }

    int ans = 1;
    d3 = d1;
    d2.clear ();
    while (!d1.empty()) {
        if (d2.empty()) {
            d2.push_back (d1.front());
            d1.pop_front();
        }
        else {
            if (d2.front() - d1.front() == 1) {
                d2.push_front (d1.front());
                d1.pop_front();
            }
            else if (d2.front() - d1.back () == 1) {
                d2.push_front (d1.back());
                d1.pop_back();
            }
            else if (d1.front() - d2.back() == 1) {
                d2.push_back (d1.front());
                d1.pop_front();
            }
            else if (d1.back() - d2.back() == 1) {
                d2.push_back (d1.back());
                d1.pop_back();
            }
            else {
                ans = 0;
                break;
            }
        }
    }

    int ans2 = 1;

    d1 = d3;
    d2.clear ();
    while (!d1.empty()) {
        if (d2.empty()) {
            d2.push_back (d1.back());
            d1.pop_back();
        }
        else {
            if (d2.front() - d1.front() == 1) {
                d2.push_front (d1.front());
                d1.pop_front();
            }
            else if (d2.front() - d1.back () == 1) {
                d2.push_front (d1.back());
                d1.pop_back();
            }
            else if (d1.front() - d2.back() == 1) {
                d2.push_back (d1.front());
                d1.pop_front();
            }
            else if (d1.back() - d2.back() == 1) {
                d2.push_back (d1.back());
                d1.pop_back();
            }
            else {
                ans2 = 0;
                break;
            }
        }
    }
    if (ans == 1 || ans2 == 1) printf ("yes");
    else printf ("no");

    return;
}

int main (void) {
    int T;
    scanf ("%d", &T);
    for (int t = 1; t <= T; ++t) {
        printf ("Case #%d: ", t);
        solve ();
        printf ("\n");
    }
    return 0;
}
