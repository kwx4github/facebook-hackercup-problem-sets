#!/usr/bin/python3

from sys import stdin
from collections import deque

def main():
	T = int(stdin.readline().strip())
	for nCase in range(1, T+1):
		N = int(stdin.readline().strip())
		case = map(int, stdin.readline().strip().split())
		print("Case #{}: {}".format(nCase, solve(case)))  

def solve(case):
	N = len(case)
	
	# start with either top or bottom
	if cansort(case[1:], [case[0]]) or cansort(case[:-1], [case[-1]]):
		return "yes"
	else:
		return "no"


def cansort(origpile, destpile):
	origpile = deque(origpile)
	destpile = deque(destpile)
	
	while origpile:
		desttop = destpile[0]
		destbot = destpile[-1]
		
		taken = None
		
		# check bot->bot, top->bot, bot->top, top->top
		for x in origpile[0], origpile[-1]:
			if x == desttop-1 or x == destbot+1:
				taken = x
				break
		else: # for loop completes without break
			return False
			
		# add the student to the dest pile	
		if taken == desttop-1:
			destpile.appendleft(taken)
		else:
			destpile.append(taken)
			
		# remove it from the original pile
		if taken == origpile[-1]:
			origpile.pop()
		else:
			origpile.popleft()
	return True
	
main()
