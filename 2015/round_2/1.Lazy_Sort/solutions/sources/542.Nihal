#include<stdio.h>
#include<vector>
#include<algorithm>
#include<math.h>
#include<deque>

using namespace std;

const int max_n = 50000 + 5;

int a[max_n];

int main()
{
    int T;
    scanf("%d", &T);
    for(int c=1; c<=T; ++c)
    {
        int N;
        scanf("%d", &N);
        for(int i=0; i<N; ++i) scanf("%d", &a[i]);
        deque<int> d1,d2;
        for(int i=0; i<N; ++i)
        {
            d1.push_back(a[i]);
            d2.push_back(a[i]);
        }
        bool flag1 = true;
        int low, high;
        low = min(d1.front(), d1.back());
        high = low;
        if(low == d1.front()) d1.pop_front();
        else d1.pop_back();
        while(!d1.empty())
        {
            int f = d1.front();
            int b = d1.back();
            if(f == low - 1)
            {
                low--;
                d1.pop_front();
            }
            else if(f == high + 1)
            {
                high++;
                d1.pop_front();
            }
            else if(b == low - 1)
            {
                low--;
                d1.pop_back();
            }
            else if(b == high + 1)
            {
                high++;
                d1.pop_back();
            }
            else
            {
                flag1 = false;
                break;
            }
        }
        bool flag2 = true;
        low = max(d2.front(), d2.back());
        high = low;
        if(low == d2.front()) d2.pop_front();
        else d2.pop_back();
        while(!d2.empty())
        {
            int f = d2.front();
            int b = d2.back();
            if(f == low - 1)
            {
                low--;
                d2.pop_front();
            }
            else if(f == high + 1)
            {
                high++;
                d2.pop_front();
            }
            else if(b == low - 1)
            {
                low--;
                d2.pop_back();
            }
            else if(b == high + 1)
            {
                high++;
                d2.pop_back();
            }
            else
            {
                flag2 = false;
                break;
            }
        }

        printf("Case #%d: %s\n", c, (flag1 || flag2) ? "yes": "no");
    }
    return 0;
}
