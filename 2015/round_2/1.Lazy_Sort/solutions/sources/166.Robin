#include <bits/stdc++.h>/*{{{*/
using namespace std; typedef long long ll; typedef long double ld; void run(); void prep(); int main(){ios::sync_with_stdio(0); prep(); int tsts; cin>>tsts; for (int tst=1; tst<=tsts; ++tst) {cout<<"Case #"<<tst<<": "; run();}}/*}}}*/

void prep(){
  
}

/*
  Numbers added to top must be {X..1} descending
  Numbers added to bottom must be {X+1..N} ascending

  Sample5:
    3 4 5 1 2
*/

void run(){
  int n; cin>>n;
  deque<int> v(n); for (int &i: v) cin>>i;

  bool possible=false;
  for (int z=2; z--;){
    deque<int> all=v;

    pair<int,int> res;
    if (z) res={all.front(),all.front()}, all.pop_front();
    else   res={all.back(), all.back() }, all.pop_back();

    while (not all.empty()){
      if (all.front()==res.first-1 or all.front()==res.second+1){
        res.first=min(res.first,all.front());
        res.second=max(res.second,all.front());
        all.pop_front();
      }
      else if (all.back()==res.first-1 or all.back()==res.second+1){
        res.first=min(res.first,all.back());
        res.second=max(res.second,all.back());
        all.pop_back();
      }
      else break;
    }
    possible|=(res.first==1 and res.second==n);
  }

  cout<<(possible? "yes": "no")<<endl;
}
