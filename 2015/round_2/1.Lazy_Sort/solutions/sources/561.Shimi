#include <bits/stdc++.h>

using namespace std;

const long long ool = 0x3f3f3f3f3f3f3f3fLL;
const long long mod = 1000000007;
const int oo = 0x3f3f3f3f;
const int dx[] = {0, 0, -1, 1, -1, -1, 1, 1};
const int dy[] = {-1, 1, 0, 0, 1, -1, 1, -1};

int N, a[50005];
void solve() {
	scanf("%d", &N);
	for (int i = 0; i < N; ++i) scanf("%d", &a[i]);
	if (N <= 3) {
		printf("yes\n");
		return;
	}
	deque<int> q;
	int i = 0, j = N - 1;
	q.push_back(a[i++]);
	while (i <= j) {
		int x = q.front(), y = q.back();
		if (a[i] == x - 1) q.push_front(a[i++]);
		else if (a[i] == y + 1) q.push_back(a[i++]);
		else if (a[j] == x - 1) q.push_front(a[j--]);
		else if (a[j] == y + 1) q.push_back(a[j--]);
		else break;
	}
	if (q.size() == N) {
		printf("yes\n");
		return;
	}
	i = 0, j = N - 1;
	q.clear();
	q.push_back(a[j--]);
	while (i <= j) {
		int x = q.front(), y = q.back();
		if (a[i] == x - 1) q.push_front(a[i++]);
		else if (a[i] == y + 1) q.push_back(a[i++]);
		else if (a[j] == x - 1) q.push_front(a[j--]);
		else if (a[j] == y + 1) q.push_back(a[j--]);
		else break;
	}
	if (q.size() == N) {
		printf("yes\n");
		return;
	}
	printf("no\n");
}
int main() {
	freopen("lazy_sort.txt", "r", stdin);
	freopen("lazy_sort.out", "w", stdout);
	int __; scanf("%d", &__);
	for (int _ = 1; _ <= __; ++_) {
		printf("Case #%d: ", _);
		solve();
	}
	return 0;
}