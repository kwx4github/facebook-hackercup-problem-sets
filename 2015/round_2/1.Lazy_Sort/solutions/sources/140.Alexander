
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>
#include <numeric>
#include <cassert>
#include <unordered_set>
#include <unordered_map>
#include <fstream>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)

bool calc(){
	int N;
	cin >> N;
	vi v(N);
	FOR(i,0,N)cin >> v[i];
	FOR(i,0,2){
		reverse(all(v));
		int f = v[0], t = v[0];
		int F = 1, T = N-1;
		while(F <= T){
			if(v[F] == f - 1){
				--f;
				++F;
			} else if(v[F] == t + 1){
				++t;
				++F;
			} else if(v[T] == f - 1){
				--f;
				--T;
			} else if(v[T] == t + 1){
				++t;
				--T;
			} else {
				break;
			}
		}
		if(f == 1 && t == N)return true;
	}
	return false;
}

int main() {
	int T;
	cin >> T;
	FOR(t,0,T){
		cout << "Case #" << t + 1 << ": ";
		if(calc())cout << "yes\n";
		else cout << "no\n";
	}
	return 0;
}
