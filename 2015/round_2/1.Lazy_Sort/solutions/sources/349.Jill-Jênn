from collections import Counter

def is_okay(stack):
    # print(stack)
    for debut in [0, 1]:
        if debut == 0:
            nd, nf = stack[0], stack[0]
            d, f = 1, len(stack) - 1
        else:
            nd, nf = stack[-1], stack[-1]
            d, f = 0, len(stack) - 2
        while d <= f:
            # print(d, f)
            if stack[d] == nd - 1:
                # print('DD')
                nd -= 1
                d += 1
            elif stack[f] == nd - 1:
                # print('FD')
                nd -= 1
                f -= 1
            elif stack[d] == nf + 1:
                # print('DF')
                nf += 1
                d += 1
            elif stack[f] == nf + 1:
                # print('FF')
                nf += 1
                f -= 1
            else:
                if debut == 0:
                    break
                else:
                    return 'no'
        if d > f:
            return 'yes'
    return 'yes'

T = int(raw_input())
for t in range(T):
    raw_input()
    stack = map(int, raw_input().split())
    print 'Case #%d: %s' % (t + 1, is_okay(stack))
