#include <iostream>
#include <fstream>
#include <string>
#include <memory.h>
#include <sys/resource.h>
using namespace std;


int a[50010];

int main() {
    /*const rlim_t kStackSize = 1000000000;
    struct rlimit rl;
    int result;

    result = getrlimit(RLIMIT_STACK, &rl);
    if (result == 0)
    {
        if (rl.rlim_cur < kStackSize)
        {
            rl.rlim_cur = kStackSize;
            result = setrlimit(RLIMIT_STACK, &rl);
            if (result != 0)
            {
                fprintf(stderr, "setrlimit returned result = %d\n", result);
            }
        }
    }*/

    ifstream inf("input.txt");
    ofstream outf("output.txt");
    int T; inf >> T;
    for (int tt = 1; tt <= T; ++tt) {
        outf << "Case #" << tt << ": ";
        int N; inf >> N;
        for (int i = 0; i < N; ++i) {
            inf >> a[i];
        }
        int l = 1, r = N - 1;
        int top = a[0], bottom = a[0];
        bool possible = true;
        while (l <= r && possible) {
            if (a[l] > a[r]) {
                if (a[l] < top) {
                    top = a[l];
                    ++l;
                } else if (a[r] < top) {
                    top = a[r];
                    --r;
                } else if (a[r] > bottom) {
                    bottom = a[r];
                    --r;
                } else if (a[l] > bottom) {
                    bottom = a[l];
                    ++l;
                } else {
                    possible = false;
                }
            } else {
                if (a[r] < top) {
                    top = a[r];
                    --r;
                } else if (a[l] < top) {
                    top = a[l];
                    ++l;
                } else if (a[l] > bottom) {
                    bottom = a[l];
                    ++l;
                } else if (a[r] > bottom) {
                    bottom = a[r];
                    --r;
                } else {
                    possible = false;
                }
            }
        }
        if (possible) {
            outf << "yes\n";
        } else {
            outf << "no\n";
        }
    }
}

