//
//  main.cpp
//  HackerCup
//
//  Created by liruqi on 1/18/15.
//  Copyright (c) 2015 liruqi. All rights reserved.
//
// Corporate Gifting

#include <iostream>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <algorithm>
#include "string.h"
#include "stdio.h"
#include <sys/resource.h>

using namespace std;

struct  LazySort {
    int dat[100000];
    int sort(int N) {
        return lazysort(dat+1, N-1, dat[0]) || lazysort(dat, N-1, dat[N-1]);
        return 0;
    }
    
    int lazysort(int* d, int N, int first) {
        deque<int> que(d, d+N);
        
        pair<int, int> dest;
        dest.first = first;
        dest.second = first;

        for(; que.size() > 0; ) {
            int front = que.front();
            
            if (front < dest.first) {
                if (front == dest.first - 1) {
                    dest.first = front;
                    que.pop_front();
                    continue;
                }
                return 0;
            }
            
            if (front == dest.second + 1) {
                dest.second = front;
                que.pop_front();
                continue;
            }
            
            front = que.back();
            
            if (front < dest.first) {
                if (front == dest.first - 1) {
                    dest.first = front;
                    que.pop_back();
                    continue;
                }
                return 0;
            }
            
            if (front == dest.second + 1) {
                dest.second = front;
                que.pop_back();
                continue;
            }
            return 0;
        }
        return 1;
    }
};

int main () {
    
    freopen ("/Users/liruqi/Documents/iOS/HackerCup/HackerCup/lazy_sort.txt","r",stdin);
    freopen ("/Users/liruqi/Documents/iOS/HackerCup/HackerCup/lazy_sort_out.txt","w",stdout);

    LazySort ls;
    int N, T;
    cin >> T;
    for (int ks=1; ks<=T; ks++) {
        cin >> N;
        for (int i=0; i<N; i++) {
            cin >> ls.dat[i];
        }
        cout<<"Case #"<<ks<<": "<<(ls.sort(N) ? "yes" : "no")<<endl;

    }
}
