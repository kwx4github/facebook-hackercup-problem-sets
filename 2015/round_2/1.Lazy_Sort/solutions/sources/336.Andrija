#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <deque>

using namespace std;

bool tryMe ( vector < int > &v, int st, int nd )
{
    if ( v.size() == 1 )
        return true;

    nd--;


    int gore, dole;

    if ( st == 0 )
    {
        gore = v[v.size() - 1];
        dole = v[v.size() - 1];
    }
    else
    {
        gore = v[0];
        dole = v[0];
    }

    while ( st <= nd )
    {
        if ( gore == v[st] + 1 )
        {
            gore = v[st];
            st++;
            continue;
        }

        if ( gore == v[nd] + 1 )
        {
            gore = v[nd];
            nd--;
            continue;
        }

        if ( dole == v[st] - 1 )
        {
            dole = v[st];
            st++;
            continue;
        }

        if ( dole == v[nd] - 1 )
        {
            dole = v[nd];
            nd--;
            continue;
        }

        break;

    }

    return ( st > nd );
}

void Solve ( int num )
{
    string ret = "no";

    int n; cin >> n;
    vector < int > v ( n );

    for ( int i = 0; i < n; i++ )
        cin >> v[i];

    if ( tryMe ( v, 0, n - 1 ) || tryMe ( v, 1, n ) )
        ret = "yes";

    cout << "Case #" << num << ": " << ret << endl;
}

int main()
{
    int t; cin >> t;

    for ( int i = 1; i <= t; i++ )
        Solve ( i );

    return 0;
}
