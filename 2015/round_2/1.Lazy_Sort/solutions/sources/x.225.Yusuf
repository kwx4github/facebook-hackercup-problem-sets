//TC

#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(a,b,c) for(int (a)=(b);(a)<=(c);(a)++)
#define forr(a,b,c) for(int (a)=(b);(a)>=(c);(a)--)
#define foreach(a,b) for( typeof( (b).begin() ) a=(b).begin(); (a)!=(b).end() ; (a)++ )
#define foreachr(a,b) for( typeof( (b).rbegin() ) a=(b).rbegin(); (a)!=(b).rend() ; (a)++ )
#define dg(x)  cerr <<#x<<':'<<x<<" "
#define dbg(x)  cerr <<#x<<':'<<x<<endl
#define SET(A,b) memset(A,b,sizeof (A) )
#define SIZE(A) ((int)(A).size())
#define ALL(A) (A).begin(),(A).end()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define num(a) (1LL<<(a))
using namespace std;

typedef double dbl;
typedef long long Lint;
typedef pair<int,int> ii;
typedef pair<Lint,Lint> Lii;

const Lint mod = 1e9;

const int MAXN = 1e5+10;

int L,R;

int ar[MAXN];

int solve(int b,int e){
	
	while(b<e){
		
		if( ar[b]==L-1 || ar[b]==R+1 )
		{
			L=min(L,ar[b]);
			R=max(R,ar[b]);
			b++;
		}
		else if( ar[e]==L-1 || ar[e]==R+1 )
		{
			L=min(L,ar[e]);
			R=max(R,ar[e]);
			e--;
		}
		else
			return 0;
	}
	
	return 1;	
	
}

int main(){
	
	int Task,N,tmp;
	
	scanf(" %d",&Task);
	
	forn(Case,1,Task){
		
		scanf(" %d",&N);
		
		forn(i,1,N)
			scanf(" %d",ar+i);
		
		tmp=0;
		
		L=R=ar[1];
		tmp|=solve(2,N);
		
		L=R=ar[N];
		tmp|=solve(1,N);
		
		if(tmp)
			printf("Case #%d: yes\n",Case);
		else
			printf("Case #%d: no\n",Case);
		
	}
	
	return 0;
	
}
