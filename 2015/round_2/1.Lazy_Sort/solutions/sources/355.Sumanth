#include <iostream>
#include <stdio.h>
#include <vector>
#include <map>
#include <list>
#include <string>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <queue>

using namespace std;

#define fore(i, l, r) for(int i = l; i < r; i++)
#define forn(i, n) fore(i, 0, n)
#define pb push_back
#define mp make_pair
#define x first
#define y second

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef long long ll;
typedef vector<pii> vpii;
typedef vector<ll> vll;


int main(){
  int t;
  scanf("%d", &t);
  forn(cs, t){
    int n;
    scanf("%d", &n);
    vi arr(n);
    vi brr(2*n+5);
    forn(i, n) scanf("%d", &arr[i]);
    
    int ind = 1;
    if (n == 1 || n == 2){
      ind = 1;
    }
    else{
      ind = 1;
      brr[n] = arr[0];
      int start = 1, end = n - 1;
      int p1 = n, p2 = n;
      while (start <= end){
	//	cout<<brr[p2]<<" "<<arr[start]<<endl;
	if (brr[p2] + 1 == arr[start]){
	  brr[++p2] = arr[start++];
	}
	else if (brr[p2] + 1 == arr[end]){
	  brr[++p2] = arr[end--];
	}
	else if (brr[p1] - 1 == arr[start]){
	  brr[--p1] = arr[start++];
	}
	else if (brr[p1] - 1 == arr[end]){
	  brr[--p1] = arr[end--];
	}
	else {
	  ind = 0;
	  break;
	}
      }
    
      if (!ind){
	ind = 1;
	brr[n] = arr[n - 1];
	start = 0, end = n - 2;
	p1 = n, p2 = n;
	while (start <= end){
	  if (brr[p2] + 1 == arr[start]){
	    brr[++p2] = arr[start++];
	  }
	  else if (brr[p2] + 1 == arr[end]){
	    brr[++p2] = arr[end--];
	  }
	  else if (brr[p1] - 1 == arr[start]){
	    brr[--p1] = arr[start++];
	  }
	  else if (brr[p1] - 1 == arr[end]){
	    brr[--p1] = arr[end--];
	  }
	  else {
	    ind = 0;
	    break;
	  }
	}
      }
    }
    
    if (ind) printf("Case #%d: yes\n", cs + 1);
    else printf("Case #%d: no\n", cs + 1);
  }
}
