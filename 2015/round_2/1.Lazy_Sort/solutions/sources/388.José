#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cassert>

using namespace std;

#define ri(X) scanf("%d", &(X))
#define pi(X) printf("%d", (X))
#define mp(X,Y) make_pair(X,Y)
#define pb(X) push_back(X)
#define lint long long
#define pii pair<int,int>
#define inf 1e9
#define linf 1e18
#define X first
#define Y second
#define all(X) (X).begin(),(X).end()
#define uni(X) X.erase(unique(X.begin(), X.end()), X.end());


int T;
int n;
vector<int> ve;



bool f1(){
  int lo, hi;
  lo = 1;
  hi = n-1;
  int mi, ma;
  mi = ma = ve[0];
  while(lo <= hi){
    if(ve[lo] == mi-1){
      mi = ve[lo];
      lo++;
    }else if(ve[lo] == ma+1){
      ma = ve[lo];
      lo++;
    }else if(ve[hi] == mi-1){
      mi = ve[hi];
      hi--;
    }else if(ve[hi] == ma+1){
      ma = ve[hi];
      hi--;
    }else{
      return 0;
    }
  }
  return 1;
}

bool f2(){
  int lo, hi;
  lo = 0;
  hi = n-2;
  int mi, ma;
  mi = ma = ve[n-1];
  while(lo <= hi){
    if(ve[lo] == mi-1){
      mi = ve[lo];
      lo++;
    }else if(ve[lo] == ma+1){
      ma = ve[lo];
      lo++;
    }else if(ve[hi] == mi-1){
      mi = ve[hi];
      hi--;
    }else if(ve[hi] == ma+1){
      ma = ve[hi];
      hi--;
    }else{
      return 0;
    }
  }
  return 1;
}
bool f(){
  //cout << f1() << " " << f2() << endl;
  return f1()||f2();
}
int main(){
  ri(T);
  int e;
  
  for(int t = 0; t < T; t++){
    ri(n);
    ve.clear();
    for(int i = 0; i < n; i++){
      ri(e);
      ve.pb(e-1);
    }
    printf("Case #%d: %s\n", t+1, f()?"yes":"no");
  }

  return 0;
}

