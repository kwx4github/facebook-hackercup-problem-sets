#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <queue>
#include <cstring>
#include <string>

#define vi vector<int>
#define vpii vector< pair<int,int> >
#define pii pair<int,int>
#define mp(x,y) make_pair(x,y)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define sqr(x) ((x)*(x))
#define FOR(i,n) for (ll i = 0; i < ll(n); i++)
#define FOR1(i,n) for (ll i = 1; i < ll(n); i++)
#define READ(v,n) { FOR(i,n){int x;cin>>x;v.pb(x);} }
#define FREAD(v,n) { FOR(i,n){int x;in>>x;v.pb(x);} }
#define WRITE(v) "";FOR(i,sz(v))cout<<v[i]<<" ";cout
#define FWRITE(v) "";FOR(i,sz(v))out<<v[i]<<" ";out
#define gmin(a,b) { if (b < a) a = b; }
#define gmax(a,b) { if (b > a) a = b; }
#define pb push_back
#define ppb pop_back
typedef long long ll;
typedef unsigned long long ull;
using namespace std;

int main(void){
  int T;
  cin>>T;
  FOR1(t,T+1){
    int n;
    cin>>n;
    deque<int> d;
    FOR(i,n){
      int x;
      cin>>x;
      d.pb(x);
    }
    int first, last;
    bool b = false;
    deque<int> d2 = d;
    
    first = d.front();
    last = d.front();
    d.pop_front();
    while(d.size()!=0){
      if(d.front()==first-1){
        d.pop_front();
        first--;
      }else if(d.front()==last+1){
        d.pop_front();
        last++;
      }else if(d.back()==first-1){
        d.pop_back();
        first--;
      }else if(d.back()==last+1){
        d.pop_back();
        last++;
      }else{
        break;
      }
      if(d.size()==0) b=true;
    }
    
    d= d2;
    
    if(!b){
      first = d.back();
      last = d.back();
      d.pop_back();
      while(d.size()!=0){
        if(d.front()==first-1){
          d.pop_front();
          first--;
        }else if(d.front()==last+1){
          d.pop_front();
          last++;
        }else if(d.back()==first-1){
          d.pop_back();
          first--;
        }else if(d.back()==last+1){
          d.pop_back();
          last++;
        }else{
          break;
        }
        if(d.size()==0) b=true;
      }
    }
        
    cout<<"Case #"<<t<<": "<< (b?"yes":"no") <<endl;    
  }
    
  return 0;
}
