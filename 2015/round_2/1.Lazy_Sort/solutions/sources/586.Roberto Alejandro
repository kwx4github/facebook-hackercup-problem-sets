#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cmath>
#include <climits>
#include <cstring>
#include <list>
#include <deque>

using namespace std;

int main(){
	
	int nc, caso = 1;
	scanf("%d", &nc);
	
	while(nc--){
		
		int n;
		scanf("%d", &n);
		
		deque<int> Q1, Q2;
		
		for(int i = 0; i < n; i++){
			int x;
			scanf("%d", &x);
			
			Q1.push_front(x);
			Q2.push_front(x);
			
		}
		
		bool enc = false;
		
		deque<int> S;
		S.push_front(Q1.front());
		Q1.pop_front();
		
		bool val1 = true;
		for(int i = 0; i < n - 1; i++){
			int a = Q1.front(), b = Q1.back();
			
			//cout<<a<<" "<<b<<endl;
			
			if(a == S.front() - 1){
				S.push_front(a);
				Q1.pop_front();
			}
			else{
				if(a == S.back() + 1){
					S.push_back(a);
					Q1.pop_front();
					
				}
				else{
					
					if(b == S.front() - 1){
						S.push_front(b);
						Q1.pop_back();
					}
					else{
						if(b == S.back() + 1){
							S.push_back(b);
							Q1.pop_back();
							
						}
						else{
							val1 = false;
							break;
						}
					}
				}
			}
			
		}
		
		if(val1) enc = true;
		
		deque<int> S2;
		S2.push_front(Q2.back());
		Q2.pop_back();
		
		bool val2 = true;
		for(int i = 0; i < n - 1; i++){
			int a = Q2.front(), b = Q2.back();
			
			//cout<<"->"<<a<<" "<<b<<endl;
			
			if(a == S2.front() - 1){
				S2.push_front(a);
				Q2.pop_front();
			}
			else{
				if(a == S2.back() + 1){
					S2.push_back(a);
					Q2.pop_front();
					
				}
				else{
					
					if(b == S2.front() - 1){
						S2.push_front(b);
						Q2.pop_back();
					}
					else{
						if(b == S2.back() + 1){
							S2.push_back(b);
							Q2.pop_back();
							
						}
						else{
							val2 = false;
							break;
						}
					}
				}
			}
			
		}
		
		if(val2) enc = true;
		
		cout<<"Case #"<<caso<<": ";
		if(enc) cout<<"yes";
		else cout<<"no";
		cout<<endl;
		
		caso++;
	}
	
	return 0;
}
