#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <ctime>
#include <climits>
#include <cassert>
#include <vector>
#include <queue>
#include <stack>
#include <deque>
#include <set>
#include <map>
#include <bitset>
#include <utility>
#include <algorithm>

#define forn(i, n) for (int i = 0; i < int(n); i++)

typedef long long li;
typedef long double ld;

const ld EPS = 1E-10;

using namespace std;

int n;
const int N = 51000;
vector<bool> z[N];
int a[N];

void read()
{
    cin >> n;

    forn(i, n)
     cin >> a[i];
}

int main(int argc, char* argv[])
{
	freopen("input.txt", "rt", stdin);

	int testCases;
	cin >> testCases;

    int minTestCase = 0;
    if (argc >= 2)
        minTestCase = atoi(argv[1]);

    int maxTestCase = testCases - 1;
    if (argc >= 3)
        maxTestCase = atoi(argv[2]);

	forn(testCase, testCases)
	{
        read();
        if (testCase >= minTestCase && testCase <= maxTestCase)
        {
            forn(i, n + 2)
                z[i] = vector<bool>(n + 2);

            z[1][n] = true;

            vector<int> minp(n + 1);
            vector<int> maxp(n + 1);
            vector<int> mins(n + 1);
            vector<int> maxs(n + 1);
            minp[0] = mins[0] = INT_MAX;
            maxp[0] = maxs[0] = INT_MIN;

            for (int i = 1; i <= n; i++)
            {
                minp[i] = min(minp[i - 1], a[i - 1]);
                maxp[i] = max(maxp[i - 1], a[i - 1]);
                mins[i] = min(mins[i - 1], a[n - i]);
                maxs[i] = max(maxs[i - 1], a[n - i]);
            }

            for (int i = 1; i <= n; i++)
                for (int j = n; j >= i; j--)
                {
                    if (z[i][j])
                    {
                        int mint = min(minp[i - 1], mins[n - j]);
                        int maxt = max(maxp[i - 1], maxs[n - j]);

                        if (mint == INT_MAX || mint - 1 == a[i - 1])
                        {
                            z[i + 1][j] = true;
                        }

                        if (maxt == INT_MIN || maxt + 1 == a[i - 1])
                        {
                            z[i + 1][j] = true;
                        }

                        if (mint == INT_MAX || mint - 1 == a[j - 1])
                        {
                            z[i][j - 1] = true;
                        }

                        if (maxt == INT_MIN || maxt + 1 == a[j - 1])
                        {
                            z[i][j - 1] = true;
                        }
                    }
                }

		    bool ok = false;
            for (int i = 0; i <= n + 1; i++)
                for (int j = 0; j <= n + 1; j++)
                    if (z[i][j] && i > j)
                        ok = true;
            
            cout << "Case #" << testCase + 1 << ": " << (ok ? "yes" : "no") << endl;
        }
	}

	return 0;
}
