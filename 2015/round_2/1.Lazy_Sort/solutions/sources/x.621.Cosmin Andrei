#include <cstdio>
#define NMAX 50005
int tests, n, P[NMAX], A[NMAX];

int main()
{
	freopen("A.in", "r", stdin);
	freopen("A.out", "w", stdout);
	
	scanf("%d", &tests);
	for (int test_no = 1; test_no <= tests; test_no++)
	{
		printf("Case #%d: ", test_no);
		
		scanf("%d", &n);
		for (int i = 1; i <= n; i++)
		{
			scanf("%d", &A[i]);
			P[A[i]] = i;
		}
		
		bool res = false;
		int pos = P[1];
		// search for 1
		
		// case 1
		bool ok = true;
		int left = 1, right = n;
		for (int i = 1; i > pos; i--)
			if (A[i] < A[i + 1])
				ok = false;
		
		if (ok)
		{
			int last = A[1];	
			for (int i = 2; i <= pos && ok; i++)
			{
				while (last - 1 != A[i])
				{
					if (last - 1 == A[right])
					{
						right--;
						break ;
					}
					else
					{
						ok = false;
						break ;
					}
				}
				last--;
			}
			
			if (ok)
			{
				bool ok2 = true;
				for (int i = pos + 1; i < right; i++)
					if (A[i] > A[i + 1])
						ok2 = false;
				if (ok2)
					res = true;
				else
				{
					ok2 = true;
					for (int i = pos + 1; i < right; i++)
						if (A[i] < A[i + 1])
							ok2 = false;
					if (ok2)
						res = true;
				}
			}
		}
				
		// case 2
		ok = true;
		left = 1; right = n;
		for (int i = pos; i < n; i++)
			if (A[i] > A[i + 1])
				ok = false;
		
		if (ok)
		{
			int last = A[n];
			for (int i = n - 1; i >= pos && ok; i--)
			{
				while (last - 1 != A[i])
				{
					if (last - 1 == A[left])
					{
						left++;
						break ;
					}
					else
					{
						ok = false;
						break ;
					}
				}
				last--;
			}
			
			if (ok)
			{
				bool ok2 = true;
				for (int i = left; i < pos - 1; i++)
					if (A[i] > A[i + 1])
						ok2 = false;
				if (ok2)
					res = true;
				else
				{
					ok2 = true;
					for (int i = left; i < pos - 1; i++)
						if (A[i] < A[i + 1])
							ok2 = false;
					if (ok2)
						res = true;
				}
			}
		}
		
		if (res)
			printf("yes\n");
		else
			printf("no\n");
	}
	return 0;
}
