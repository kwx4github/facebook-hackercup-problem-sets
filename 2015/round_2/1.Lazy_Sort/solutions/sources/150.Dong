#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

bool check(deque<int> orig, int start) {
	deque<int> dest;
	dest.push_back(start);
	while (!orig.empty()) {
		if (orig.front() == dest.front() - 1) {
			dest.push_front(orig.front());
			orig.pop_front();
		} else if (orig.front() == dest.back() + 1) {
			dest.push_back(orig.front());
			orig.pop_front();
		} else if (orig.back() == dest.front() - 1) {
			dest.push_front(orig.back());
			orig.pop_back();
		} else if (orig.back() == dest.back() + 1) {
			dest.push_back(orig.back());
			orig.pop_back();
		} else {
			return false;
		}
	}
	return true;
}

int main() {
	int caseNum;
	scanf("%d", &caseNum);
	for (int caseIndex = 1; caseIndex <= caseNum; caseIndex++) {
		int n;
		scanf("%d", &n);
		vector<int> input(n);
		for (int i = 0; i < n; i++) {
			scanf("%d", &input[i]);
		}
		bool ans = check(deque<int>(input.begin(), input.end() - 1), input.back()) ||
			check(deque<int>(input.begin() + 1, input.end()), input.front());
		printf("Case #%d: %s\n", caseIndex, ans ? "yes" : "no");
	}

	return 0;
}