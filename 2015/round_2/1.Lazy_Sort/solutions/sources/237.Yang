#include <functional>
#include <algorithm>
#include <stdexcept>
#include <iostream>
#include <sstream>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <cstdlib>
#include <cstring>
#include <utility>
#include <cctype>
#include <vector>
#include <string>
#include <bitset>
#include <cmath>
#include <queue>
#include <stdio.h>
#include <stack>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <assert.h>
#define REP(i,n) for(int i=0;i<n;i++)
#define TR(i,x) for(typeof(x.begin()) i=x.begin();i!=x.end();i++)
#define ALL(x) x.begin(),x.end()
#define SORT(x) sort(ALL(x))
#define CLEAR(x) memset(x,0,sizeof(x))
#define FILL(x,c) memset(x,c,sizeof(x))

using namespace std;

const double eps = 1e-8;

#define PB push_back
#define MP make_pair

typedef map<int,int> MII;
typedef map<string,int> MSI;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<long double> VD;
typedef pair<int,int> PII;
typedef long long int64;
typedef long long ll;
typedef unsigned int UI;
typedef long double LD;
typedef unsigned long long ULL;

const int N = 200000;

int a[N];

void Solve(int case_id) {
    int n;
    cin >> n;
    REP(i, n) cin >> a[i];
    int l = a[0], r = a[0];
    bool good = true;
    int l0 = 1, r0 = n - 1;
    for (int i = 1; i < n; ++i) {
        if (a[l0] == l - 1) {
            --l;
            ++l0;
        } else if (a[l0] == r + 1) {
            ++r;
            ++l0;
        } else if (a[r0] == l - 1) {
            --l;
            --r0;
        } else if (a[r0] == r + 1) {
            ++r;
            --r0;
        } else {
            good = false;
            break;
        }
    }

    if (!good) {
        l0 = 0; r0 = n - 2;
        l = r = a[n - 1];

        for (int i = 1; i < n; ++i) {
            if (a[l0] == l - 1) {
                --l;
                ++l0;
            } else if (a[l0] == r + 1) {
                ++r;
                ++l0;
            } else if (a[r0] == l - 1) {
                --l;
                --r0;
            } else if (a[r0] == r + 1) {
                ++r;
                --r0;
            } else {
                good = false;
                break;
            }
        }
    }

    cout << "Case #" << case_id << ": " << (good ? "yes" : "no") << endl;
}

int main() {
    int case_num;
    cin >> case_num;
    for (int i = 1; i <= case_num; ++i) {
        Solve(i);
    }
    return 0;
}