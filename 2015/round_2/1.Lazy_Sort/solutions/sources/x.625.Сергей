#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define x first
#define y second
#define in(n) int (n) = nxt()

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef int itn;
typedef pair<int, int> PII;

int nxt() {
    int res;
    scanf("%d", &res);
    return res;
}

struct InputData {
    int n;
    vector<int> a;
};

struct OutputData {
    string result;

    void print() {
        cout << result;
    }
};


InputData readInputData() {
    InputData ret;
    cin >> ret.n;
    ret.a.assign(ret.n, 0);
    for (int i = 0; i < ret.n; ++i) {
        cin >> ret.a[i];
    }
    return ret;
}

InputData generateInputData() {
    InputData ret;
    return ret;
}


OutputData solve(InputData);

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    ios_base::sync_with_stdio(false);
    cin.tie(0);
    srand(4524234);

    ld cl0 = clock();

    int t;
    cin >> t;
    future<OutputData> fu[t];

    cerr << "Reading input..." << endl;
    for (int i = 0; i < t; ++i) {
        InputData inputData = readInputData();
        fu[i] = async(launch::async, solve, inputData);
    }

    OutputData res[t];
    cerr << "Waiting for threads..." << endl;
    for (int i = 0; i < t; ++i) {
        res[i] = fu[i].get();
    }


    cerr << "Printing results..." << endl;
    for (int i = 0; i < t; ++i) {
        cout << "Case #" << i + 1 << ": ";
        res[i].print();
        cout << endl;
    }


    cerr << setprecision(3) << fixed;
    cerr << "Time elapsed: " << (clock() - cl0) / (CLOCKS_PER_SEC) << " sec." << endl;
    return 0;
}




OutputData solve(InputData in) {
    vector<int> a = in.a;
    int n = in.n;
    OutputData out;
    out.result = "no";

    {
        deque<int> st;
        int l = 1, r = n - 1;
        st.pb(a[0]);
        while (l <= r) {
            if (a[l] == st.front() - 1 || a[l] == st.back() + 1) {
                if (a[l] == st.front() - 1) {
                    st.push_front(a[l++]);
                } else {
                    st.push_back(a[l++]);
                }
            } else {
                if (a[r] == st.front() - 1 || a[r] == st.back() + 1) {
                    if (a[r] == st.front() - 1) {
                        st.push_front(a[r--]);
                    } else {
                        st.push_back(a[r--]);
                    }
                } else {
                    break;
                }
            }
        }
        if (l > r) {
            out.result = "yes";
        }
    }
    {
        deque<int> st;
        int l = 1, r = n - 1;
        st.pb(a[0]);
        while (l <= r) {
            if (a[l] == st.front() - 1 || a[l] == st.back() + 1) {
                if (a[l] == st.front() - 1) {
                    st.push_front(a[l++]);
                } else {
                    st.push_back(a[l++]);
                }
            } else {
                if (a[r] == st.front() - 1 || a[r] == st.back() + 1) {
                    if (a[r] == st.front() - 1) {
                        st.push_front(a[r--]);
                    } else {
                        st.push_back(a[r--]);
                    }
                } else {
                    break;
                }
            }
        }
        if (l > r) {
            out.result = "yes";
        }
    }
    return out;
}

