#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <fstream>

using namespace std;

int main()
{
	freopen("lazy_sort.txt", "r", stdin);
	freopen("OUTPUT.TXT", "w", stdout);

	int T, caseno = 1;
	cin >> T;


	while (T--)
	{
		int n;
		cin >> n;
		vector<int> numbers(n);

		for (int i = 0; i < n; i++)
			cin >> numbers[i];

		int left = 1;
		int right = n - 1;

		int top = numbers[0];
		int bottom = top;

		bool failed1 = false;
		while (left <= right)
		{
			if (numbers[left] == bottom - 1)
			{
				left++;
				bottom--;
				continue;
			}

			if (numbers[right] == bottom - 1)
			{
				bottom--;
				right--;
				continue;
			}

			if (numbers[left] == top + 1)
			{
				left++;
				top++;

				continue;
			}
			if (numbers[right] == top + 1)
			{
				right--; 
				top++;
				continue;
			}
			failed1 = true;
			break;
		}
		
		left = 0;
		right = n - 2;

		top = numbers[n-1];
		bottom = top;

		bool failed2 = false;
		while (left <= right)
		{
			if (numbers[left] == bottom - 1)
			{
				left++;
				bottom--;
				continue;
			}

			if (numbers[right] == bottom - 1)
			{
				bottom--;
				right--;
				continue;
			}

			if (numbers[left] == top + 1)
			{
				left++;
				top++;

				continue;
			}
			if (numbers[right] == top + 1)
			{
				right--;
				top++;
				continue;
			}
			failed2 = true;
			break;
		}

		cout << "Case #" << caseno++ << ": " << (failed1 && failed2 ? "no" : "yes") << "\n";
	}
}