#include<cstdio>
#include<cassert>
#include<cstring>
#include<map>
#include<set>
#include<time.h>
#include<algorithm>
#include<stack>
#include<queue>
#include<utility>
#include<cmath>
#include<iostream>
#include<string>
#include<vector>
#include <limits>
   
using namespace std;
  
typedef pair <int, int> ii;
//typedef pair <long long, long long> ll;
const long long INF = 1e9 + 7;
const long long INF9 = 1e9 + 9;

long long gcd( long long b, long long s ){
	return (s!=0) ? gcd( s, b%s ) : b;
}

long long Pow( long long a, long long b, long long c ){
	if( b == 0 ) return 1%c;
	else if( b == 1 ) return a%c;
	else{
		long long A = Pow( a, b/2, c );
		A = (A*A) % c;
		if( b & 1 ) A = (A*a) % c;
		return A;
	}
}

const int N = 50005;

int a[N];

bool can( int n ){
	int mx = a[0], mi = a[0], t = 1, b = n-1;

	bool ok = 1;
	for(int i=1; i<n; i++){
		if( (a[t] == mi-1) || (a[t] == mx+1) ){
			mx = max( mx, a[t] );

			mi = min( mi, a[t] );
			++t;
		}else if( (a[b] == mi-1) || (a[b] == mx+1) ){
			mx = max( mx, a[b] );
			mi = min( mi, a[b] );
			--b;
		}
		else{
			ok = 0;
			break;
		}
	}
	if( ok ) return 1;

	mx = a[n-1], mi = a[n-1], t = 0, b = n-2;

	ok = 1;
	for(int i=1; i<n; i++){
		if( (a[t] == mi-1) || (a[t] == mx+1) ){
			mx = max( mx, a[t] );
			mi = min( mi, a[t] );
			++t;
		}else if( (a[b] == mi-1) || (a[b] == mx+1) ){
			mx = max( mx, a[b] );
			mi = min( mi, a[b] );
			--b;
		}
		else{
			ok = 0;
			break;
		}
	}
	if( ok ) return 1;
	return 0;
}

int main(){
	//freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);

	int T;
	scanf("%d", &T);

	for(int R=1; R<=T; R++){
		int n;
		scanf("%d", &n);
		for(int i=0; i<n; i++)
			scanf("%d", a+i);

		

		printf("Case #%d: ", R);
		if( can( n ) ) puts("yes");
		else puts("no");
	}


}