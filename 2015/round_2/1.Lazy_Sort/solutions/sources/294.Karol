//Karol Kaszuba
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef double D;
typedef long double LD;
typedef vector<PII> VII;

#define FOR(i,x,y) for(auto i=(x);i<=(y);++i)
#define REP(i,x) FOR(i,0,(x)-1)
#define FORD(i,x,y) for(auto i=(x);i>=(y);--i)
#define VAR(i,c) __typeof(c) i=(c)
#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)

#define SIZE(c) (int)((c).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define IN insert
#define ER erase
#define MP make_pair
#define ST first
#define ND second
#define IOSYNC ios_base::sync_with_stdio(0)
#define FREOPEN(f) freopen(f, "r", stdin),freopen(f, "w", stdout)

int tab[50004];

bool czek(int start, int n)
{
	if(n < 3) return true;
	
	int pocz[2], kon[2];
	pocz[1] = tab[start], kon[1] = tab[start];
	pocz[0] = 0;
	kon[0] = n - 1;
	if(pocz[0] == start) pocz[0]++;
	if(kon[0] == start) kon[0]--;
	while(pocz[0] <= kon[0])
	{
		int a = tab[pocz[0]], b = tab[kon[0]];
		if(a == pocz[1] - 1)
		{
			pocz[1]--;
			pocz[0]++;
			continue;
		}
		if(b == kon[1] + 1)
		{
			kon[1]++;
			kon[0]--;
			continue;
		}
		if(a == kon[1] + 1)
		{
			pocz[0]++;
			kon[1]++;
			continue;
		}
		if(b == pocz[1] - 1)
		{
			kon[0]--;
			pocz[1]--;
			continue;
		}
		return false;
	}
	return true;
}

bool jebaj()
{
	int n;
	cin >> n;
	REP(i, n)
		cin >> tab[i];
	
	if(czek(0, n)) return true;
	if(czek(n - 1, n)) return true;
	
	return false;
}

int main()
{
	IOSYNC;	
	int t;
	t = 1;
	cin >> t;
	
	REP(i, t) 
	{
		cout << "Case #" << i + 1 << ": ";
		if(jebaj())
			cout << "yes\n";
		else
			cout << "no\n";
	}
}
