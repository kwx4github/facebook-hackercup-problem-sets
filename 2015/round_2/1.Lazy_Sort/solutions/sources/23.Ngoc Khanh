#include <iostream>
#include <cassert>
#include <cstdio>
using namespace std;

const int N = 50000;
int a[N];
int n;

bool solve(int first, int from, int to) {
    int last = first;
    while (from <= to) {
        if (a[from] == first - 1) {
            ++from;
            --first;
        } else if (a[from] == last + 1) {
            ++from;
            ++last;
        } else if (a[to] == first - 1) {
            --to;
            --first;
        } else if (a[to] == last + 1) {
            --to;
            ++last;
        } else {
            return false;
        }
    }
    assert(first == 0 && last == n - 1);
    return true;
}

int main() {
    ios::sync_with_stdio(false);
    int numTests; cin >> numTests;
    for (int test = 0; test < numTests; ++test) {
        cin >> n;
        for (int i = 0; i < n; ++i) {
            cin >> a[i];
            --a[i];
        }
        printf("Case #%d: %s\n", test + 1, solve(a[0], 1, n - 1) || solve(a[n - 1], 0, n - 2) ? "yes" : "no");
    }
    return 0;
}
