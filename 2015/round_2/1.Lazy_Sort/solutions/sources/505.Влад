#if 1
#include <functional>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <sstream>
#include <numeric>
#include <string>
#include <vector>
#include <bitset>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <list>
 
using namespace std;
 
typedef long long LL;
typedef long double LD;
typedef pair<int, int> pii;
 
const LD eps = 1e-9;
const LD pi = acos(-1.0);
const LL inf = 1e+9;
 
#define mp make_pair
#define pb push_back
#define X first
#define Y second
 
#define dbg(x) { cerr << #x << " = " << x << endl; }
 
// extended template
#pragma comment(linker, "/STACK:36777216")
typedef vector<int> vi;
typedef vector<vi> vvi;
 
#define forn(i, n) for (int i = 0; i < n; ++i)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
 
template<typename T> istream & operator >> (istream &, vector<T> &);
template<typename T> ostream & operator << (ostream &, const vector<T> &);
 
#define START clock_t _clock = clock();
#define END cerr << endl << "time: " << (clock() - _clock) / LD(CLOCKS_PER_SEC) << endl;
 
#define NAME "kabaleo"

int get(vector <int> a)
{
	int n = a.size();
	
	int l = a[0] - 1;
	int r = a[0] + 1;

	int L = 1, R = n - 1;
	bool fl = true;
	while (R >= L && fl)
	{
		fl = false;
		if (a[L] == l)
		{
			l--;
			L++;
			fl = true;
			continue;
		}

		if (a[L] == r)
		{
			r++;
			L++;
			fl = true;
			continue;
		}

		if (a[R] == l)
		{
			l--;
			R--;
			fl = true;
			continue;
		}

		if (a[R] == r)
		{
			R--;
			r++;
			fl = true;
			continue;
		}
	}

	if (fl)
		return 1;
	else
		return 0;
}

int main()
{
    //freopen(NAME ".in", "r", stdin); freopen(NAME ".out", "w", stdout);
    freopen("input.txt", "r", stdin);  freopen("output.txt", "w", stdout);
	//START
	
	int t;
	scanf("%d", &t);
	for (int q = 0; q < t; q++)
	{
		int n;
		scanf("%d", &n);
		vector <int> a(n);
		for (int i = 0; i < n; i++)
			scanf("%d", &a[i]);

		int ans = get(a);
		reverse(a.begin(), a.end());
		ans |= get(a);
		if (ans)
			printf("Case #%d: yes\n", q + 1);
		else
			printf("Case #%d: no\n", q + 1);
	}
	//END
    return 0;
}
/*******************************************
*******************************************/
 
template<typename T> istream & operator >> (istream &is, vector<T> &v)
{
    forn(i, v.size())
        is >> v[i];
    return is;
}
template<typename T> ostream & operator << (ostream &os, const vector<T> &v)
{
    forn(i, v.size())
        os << v[i] << " ";
    return os;
}
#endif