#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<vector>
#include<map>
#include<cmath>
#include<queue>
#include<deque>
#include<set>
#define PII pair<int,int>
#define f first
#define s second
#define VI vector<int>
#define LL long long
#define MP make_pair
#define LD long double
#define PB push_back
#define ALL(V) V.begin(),V.end()
#define abs(x) max((x),-(x))
#define PDD pair<LD,LD> 
#define VPII vector< PII > 
#define siz(V) ((int)V.size())
#define FOR(x, b, e)  for(int x=b;x<=(e);x++)
#define FORD(x, b, e) for(int x=b;x>=(e);x--)
#define REP(x, n)     for(int x=0;x<(n);x++)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
using namespace std;
int n,a,b,c,d,k,m,q,z;
const int MXN=1e5;
deque<int> D;
bool go(int a,deque<int> D)
  {
 // cerr<<"A"<<endl;
  int b=a;
  while(D.size())
    {
   // cerr<<D.front()<<" "<<D.back()<<endl;
    if(D.front()==a-1)
      {
      a--;
      D.pop_front();
      continue;
      }
   if(D.front()==b+1)
      {
      b++;
      D.pop_front();
      continue;
      }
    if(D.back()==a-1)
      {
      a--;
      D.pop_back();
      continue;
      }
    if(D.back()==b+1)
      {
      b++;
      D.pop_back();
      continue;
      }
    return 0;
    }
  return 1;
  }
void solve()
  {
  deque<int> D;
  scanf("%d",&n);
  FOR(i,1,n)
    {
    scanf("%d",&a);
    D.PB(a);
    }
  int x=D.front();
  D.pop_front();
  if(go(x,D))
    {
    puts("yes");
    return;
    }
  D.push_front(x);
  x=D.back();
  D.pop_back();
  if(go(x,D))
    {
    puts("yes");
    return;
    }
  puts("no");
  }
main()
{

scanf("%d",&z);
FOR(i,1,z)
  {
  printf("Case #%d: ",i);
  solve();
  }
}

