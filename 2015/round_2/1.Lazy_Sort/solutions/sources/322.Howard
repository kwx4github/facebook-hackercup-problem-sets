#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <cmath>
#include <sstream>

using namespace std;

void solve()
{
  int N;
  int id[50000];

  cin >> N;
  for (int i = 0; i < N; i++) {
    cin >> id[i];
  }
  
  // try the top first
  int topmost = id[0], botmost = id[0];
  int front = 1, back = N-1;

  bool good = true;
  for (int i = 1; i < N && good; i++) {
    if (id[front] == topmost-1) {
      front++;
      topmost--;
    } else if (id[front] == botmost+1) {
      front++;
      botmost++;
    } else if (id[back] == topmost-1) {
      back--;
      topmost--;
    } else if (id[back] == botmost+1) {
      back--;
      botmost++;
    } else {
      good = false;
    }
  }

  if (good) {
    cout << "yes" << endl;
    return;
  }

  // try last one first
  topmost = id[N-1], botmost = id[N-1];
  front = 0, back = N-2;

  good = true;
  for (int i = 1; i < N && good; i++) {
    if (id[front] == topmost-1) {
      front++;
      topmost--;
    } else if (id[front] == botmost+1) {
      front++;
      botmost++;
    } else if (id[back] == topmost-1) {
      back--;
      topmost--;
    } else if (id[back] == botmost+1) {
      back--;
      botmost++;
    } else {
      good = false;
    }
  }

  cout << (good ? "yes" : "no") << endl;
}

int main()
{
  int T;
  cin >> T;
  for (int c = 1; c <= T; c++) {
    cout << "Case #" << c << ": ";
    solve();
  }
  return 0;
}
