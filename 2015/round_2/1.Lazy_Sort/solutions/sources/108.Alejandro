#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

typedef long long LL;
#define rep(it,s) for(__typeof((s).begin()) it=(s).begin();it!=(s).end();it++)

int n;
int v[50010];
deque<int> q;

int main() {

    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);

    int tt;
    cin>>tt;
    for (int cas=1; cas<=tt; cas++) {

        cin>>n;
        for (int i=0; i<n; i++) scanf("%d", v+i);

        while (!q.empty()) q.pop_back();

        q.push_back(v[0]);

        int i = 1, j = n-1;

        bool bad = 0;
        while (i<=j) {

            int a = q.back();
            int b = q.front();

            if (v[i]==a-1) {
                q.push_back(v[i]);
                i++;
            }
            else if (v[j]==a-1) {
                q.push_back(v[j]);
                j--;
            }
            else if (v[i]==b+1) {
                q.push_front(v[i]);
                i++;
            }
            else if (v[j]==b+1) {
                q.push_front(v[j]);
                j--;
            }
            else {
                bad = 1;
                break;
            }

        }

        bool good = 0;

        if (!bad) good = 1;



        while (!q.empty()) q.pop_back();

        q.push_back(v[n-1]);

        i = 0, j = n-2;

        bad = 0;
        while (i<=j) {

            int a = q.back();
            int b = q.front();

            if (v[i]==a-1) {
                q.push_back(v[i]);
                i++;
            }
            else if (v[j]==a-1) {
                q.push_back(v[j]);
                j--;
            }
            else if (v[i]==b+1) {
                q.push_front(v[i]);
                i++;
            }
            else if (v[j]==b+1) {
                q.push_front(v[j]);
                j--;
            }
            else {
                bad = 1;
                break;
            }

        }

        if (!bad) good = 1;

        if (good)
            printf("Case #%d: yes\n", cas);
        else
            printf("Case #%d: no\n", cas);

    }


    return 0;

}
