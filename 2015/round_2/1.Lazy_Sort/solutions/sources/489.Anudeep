//Template

// By Anudeep :)
//Includes
#include <vector> 
#include <queue>
#include <map> 
#include <set>
#include <utility> //Pair
#include <algorithm>
#include <sstream> // istringstream>> ostring stream<<
#include <iostream> 
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <limits>
using namespace std;

//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)  a.begin(),a.end() 
#define ESP (1e-9)

#define gi(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define dg(n,s); printf("%s %d",s,n)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()

int a[111111];

bool solve(int lo, int hi, int l, int r) {
	while(lo <= hi) {
		if(a[lo] == l-1) {
			l--;
			lo++;
			continue;
		}
		if(a[lo] == r+1) {
			r++;
			lo++;
			continue;
		}
		if(a[hi] == l-1) {
			l--;
			hi--;
			continue;
		}
		if(a[hi] == r+1) {
			r++;
			hi--;
			continue;
		}
		return false;
	}
	return true;
}

int main() {
	int t;
	gi(t);
	rep(T, t) {
		if(T) pn;
		int n;
		gi(n);
		rep(i, n) gi(a[i]);
		bool answer;
		if(solve(1, n-1, a[0], a[0]) || solve(0, n-2, a[n-1], a[n-1])) {
			answer = true;
		} else answer = false;
		printf("Case #%d: %s", T+1, (answer ? "yes" : "no"));
	}
}