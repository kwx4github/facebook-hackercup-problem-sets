#include <iostream>
#include <string>
#include <map>
#include <math.h>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <set>
#include <queue>
#include <sstream>
#include <deque>
#include <memory.h>
#include <cassert>
#include <ctime>
#include <cstring>


using namespace std; 

#define ll long long
#pragma comment(linker, "/STACK:64000000")

const int maxn = -1;
const int inf = 1000000007;
const int mod = 1000000007;
const int dx[4] = {1, -1, 0, 0};
const int dy[4] = {0, 0, 1, -1};

bool solve(deque<int> d, vector<int> a, int l, int r) {
	while (l <= r) {
		if (a[l] == d.front() - 1) {
			d.push_front(a[l++]);
		} else if (a[l] == d.back() + 1) {
			d.push_back(a[l++]);
		} else if (a[r] == d.front() - 1) {
			d.push_front(a[r--]);
		} else if (a[r] == d.back() + 1) {
			d.push_back(a[r--]);
		} else return 0;
	}
	return 1;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    //ios_base::sync_with_stdio(0);
    
    int T;
    scanf("%d\n", &T);
    for (int test = 1; test <= T; test++) {
        cerr << "Case #" << test << ": ";
        printf("Case #%d: ", test);
        
		int n;
		scanf("%d", &n);
		vector<int> a(n);
		for (int i = 0; i < n; i++) {
			scanf("%d", &a[i]);
		}
		deque<int> d;
		bool ok = 0;
		{
			d.push_back(a[0]);
			ok |= solve(d, a, 1, n - 1);
			d.pop_back();
		}
		{
			d.push_back(a[n - 1]);
			ok |= solve(d, a, 0, n - 2);
			d.pop_back();
		}
		cout << (ok ? "yes" : "no") << endl;
		cerr << (ok ? "yes" : "no") << endl;
    }
    
    return 0;
}