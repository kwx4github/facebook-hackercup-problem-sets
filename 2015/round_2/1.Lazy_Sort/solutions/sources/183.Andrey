#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <cassert>
#include <queue>
#include <unordered_map>
#include <cassert>
#include <string>
#include <sstream>
#include <string>
#include <fstream>

using namespace std;

#define DB(x) cerr << #x << ": " << x << endl;

const long long INF = 1e9;
const int MAXN = 200 * 1000 + 9;

struct Solver {
    Solver()
    { }

    void readInput() {
        cin >> N;
        a.resize(N);
        for (int i = 0; i < N; ++i) {
            cin >> a[i];
        }
    }

    string solve() {
        string answer = "";

        bool s1 = canSolve(a[0], 1, N - 1);
        bool s2 = canSolve(a[N - 1], 0, N - 2);

        if (s1 || s2) {
            answer = "yes";
        } else {
            answer = "no";
        }

        return answer;
    }

    bool canSolve(int start, int l, int r) {
        int curLeft = start;
        int curRight = start;
        while (l <= r) {
            //DB(l);
            //DB(r);
            //DB(curLeft);
            //DB(curRight);
            if ((curLeft - a[l]) == 1) {
                curLeft = a[l];
                ++l;
                continue;
            }
            if ((curLeft - a[r]) == 1) {
                curLeft = a[r];
                --r;
                continue;
            }

            if (-(curRight - a[l]) == 1) {
                curRight = a[l];
                ++l;
                continue;
            }
            if (-(curRight - a[r]) == 1) {
                curRight = a[r];
                --r;
                continue;
            }

            return false;
        }
        return true;
    }

    int N;
    vector<int> a;
};

void gen(int N, string filename) {
    ofstream ofs(filename);
    //freopen("big_input.txt", "w", stdout);
    int T = 100;
    ofs << T << endl;
    for (int t = 0; t < T; ++t) {
        ofs << N << endl;
        ofs << 0;
        for (int i = 1; i < N; ++i) {
            ofs << " " << (rand() % i) + 1;
        }
        ofs << endl;
    }
}

int main() {
    //gen(200000, "big_input.txt");
    //freopen("big_input.txt", "r", stdin);
    
    //freopen("input.txt", "r", stdin);
    freopen("lazy_sort.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    
    int T;
    cin >> T;
    for (int t = 0; t < T; ++t) {
        cerr << t << endl;
        Solver solver;
        solver.readInput();
        string answer = solver.solve();
        cout << "Case #" << (t + 1) << ": " << answer << endl;
    }

    return 0;
}
