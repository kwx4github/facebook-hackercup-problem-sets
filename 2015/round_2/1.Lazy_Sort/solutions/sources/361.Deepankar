#include<bits/stdc++.h>

using namespace std;

#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 2000000000
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define all(x) x.begin(),x.end()
#define mset(x,v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()

int a[50004];

int main()
{
    freopen("lazy.txt","r",stdin);
    freopen("lazyo.txt","w",stdout);
    int t,tc=1,n,i;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            scanf("%d",&a[i]);
        }
        deque < int > q;
        int l = 0 , r = n - 1;
        q.push_back(a[l]);
        l++;
        int f1 = 1;
        while(l <= r)
        {
            int f = q.front();
            int b = q.back();
            if(a[l] == b+1)
            {
                q.push_back(a[l]);
                l++;
            }
            else if(a[l] == f-1)
            {
                q.push_front(a[l]);
                l++;
            }
            else if(a[r] == b+1)
            {
                q.push_back(a[r]);
                r--;
            }
            else if(a[r] == f-1)
            {
                q.push_front(a[r]);
                r--;
            }
            else
            {
                f1 = 0;
                break;
            }
        }
        int pre = INF;
        while(!q.empty())
        {
            int cur = q.back();
            q.pop_back();
            if(cur > pre)
            {
                f1 = 0;
            }
            pre = cur;
        }

        l = 0 , r = n - 1;
        q.push_back(a[r]);
        r--;
        int f2 = 1;
        while(l <= r)
        {
            int f = q.front();
            int b = q.back();
            if(a[l] == b+1)
            {
                q.push_back(a[l]);
                l++;
            }
            else if(a[l] == f-1)
            {
                q.push_front(a[l]);
                l++;
            }
            else if(a[r] == b+1)
            {
                q.push_back(a[r]);
                r--;
            }
            else if(a[r] == f-1)
            {
                q.push_front(a[r]);
                r--;
            }
            else
            {
                f2 = 0;
                break;
            }
        }
        pre = INF;
        while(!q.empty())
        {
            int cur = q.back();
            q.pop_back();
            if(cur > pre)
            {
                f2 = 0;
            }
            pre = cur;
        }


        printf("Case #%d: ",tc++);
        int f = f1 || f2;
        if(f)
            printf("yes\n");
        else
            printf("no\n");
    }
    return 0;
}

