#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setDP(a) memset(a,-1,sizeof(a))

using namespace std;

int arr[50005];

int main()
{
    ios_base::sync_with_stdio(0);
    freopen("lazy_sort.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    int t;
    cin >> t;
    int tt = 1;
    while(t--)
    {
        int n;
        cin >> n;
        for(int i=0;i<n;i++)
            cin >> arr[i];
        int L,R;
        cout << "Case #" << tt++ << ": ";
        L = R = arr[0];
        int x = 1, y = n - 1;
        bool can = 1;
        for(int i=1;i<n && can;i++)
        {
            if(arr[x] + 1 == L)
                L = arr[x], x++;
            else if(arr[x] - 1 == R)
                R = arr[x], x++;
            else if(arr[y] + 1 == L)
                L = arr[y], y--;
             else if(arr[y] - 1 == R)
                R = arr[y], y--;
            else can = 0;
        }
        if(can)
        {
            cout << "yes\n";
            continue;
        }
        L = R = arr[n - 1];
        x = 0, y = n - 2;
        can = 1;
        for(int i=1;i<n && can;i++)
        {
            if(arr[x] + 1 == L)
                L = arr[x], x++;
            else if(arr[x] - 1 == R)
                R = arr[x], x++;
            else if(arr[y] + 1 == L)
                L = arr[y], y--;
             else if(arr[y] - 1 == R)
                R = arr[y], y--;
            else can = 0;
        }
        cout << "no\n";
    }
    return 0;
}
