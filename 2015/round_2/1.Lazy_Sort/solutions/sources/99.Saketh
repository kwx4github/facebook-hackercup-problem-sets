#include <iostream>
#include <algorithm>
using namespace std;

const int MAXN = 50005;

int T, N;
int v[MAXN];

bool attempt(){
    int st = v[0], sb = v[0];
    int pi = 1, pj = N-1;

    while(pi <= pj){
        if(v[pi] == st-1){ st--; pi++; }
        else if(v[pi] == sb+1){ sb++; pi++; }
        else if(v[pj] == st-1){ st--; pj--; }
        else if(v[pj] == sb+1){ sb++; pj--; }
        else return false;
    }

    return true;
}

int main(){
    ios_base::sync_with_stdio(false);

    cin >> T;
    for(int t=1; t<=T; t++){
        cin >> N;
        for(int i=0; i<N; i++)
            cin >> v[i];

        bool good = attempt();
        reverse(v, v+N);
        good |= attempt();

        cout << "Case #" << t << ": " << (good?"yes":"no") << endl;
    }
}
