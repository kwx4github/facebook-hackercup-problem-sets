#include<fstream>
#include<iostream>
#include<sstream>
#include<iomanip>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<functional>
#include<numeric>
using namespace std;
typedef pair<int, int> pii;
typedef long long ll;

namespace
{
	bool solve(const vector<int>& v, int idxLo, int idxHi, int valLo, int valHi)
	{
		while (idxLo != idxHi)
		{
			if (v[idxLo] == valLo - 1)
				++idxLo, --valLo;
			else if (v[idxHi-1] == valLo - 1)
				--idxHi, --valLo;
			else if (v[idxLo] == valHi + 1)
				++idxLo, ++valHi;
			else if (v[idxHi - 1] == valHi + 1)
				--idxHi, ++valHi;
			else
				return false;
		}

		return true;
	}
}

//int mainFHC15_R2_P1()
int main()
{
	ifstream fin("FHC\\lazy_sort.txt");
	ofstream fout("FHC\\lazy_sort_out.txt");	

	unsigned int numberOfCases;
	fin >> numberOfCases;

	for (unsigned int zz=1; zz<=numberOfCases; ++zz)
	{
		int n;
		fin >> n;
		vector<int> v(n);
		for (int i = 0; i < n; ++i)
			fin >> v[i];

		bool ret1 = solve(v, 0, n-1, v.back(), v.back());
		bool ret2 = solve(v, 1, n, v[0], v[0]);
		string ret = (ret1 || ret2) ? "yes" : "no";

		fout << "Case #" << zz << ": ";
		fout << ret << endl;
	}

	return 0;
}