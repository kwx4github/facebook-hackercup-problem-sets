using System;
using System.Collections.Generic;
using System.Linq;

class Myon
{
    public Myon() { }
    public static void Main()
    {
        new Myon().run2();
    }

    Scanner cin;
    public void run2()
    {
        init();
        cin = new Scanner();
        int T = cin.nextInt();
        for (int i = 0; i < T; i++)
        {
            Console.Write("Case #{0}: ", i + 1);

            run();
        }
    }


    void init()
    {
    }


    void run()
    {
        int N = cin.nextInt();
        int[] num = new int[N];
        for (int i = 0; i < N; i++)
        {
            num[i] = cin.nextInt();
        }
        int[] rnum = (int[])num.Clone();
        Array.Reverse(rnum);
        if (check(num) || check(rnum)) Console.WriteLine("yes");
        else Console.WriteLine("no");
        
    }

    bool check(int[] num)
    {
        int start = 1;
        int end = num.Length - 1;
        int min = num[0];
        int max = num[0];

        while (start <= end)
        {
            bool flag = false;
            if (true)
            {
                int s = start;
                int pre = num[s];
                int tmin = pre;
                int tmax = pre;
                s++;
                /*
                while (s <= end && Math.Abs(pre - num[s]) <= 1)
                {
                    pre = num[s];
                    tmin = Math.Min(tmin, pre);
                    tmax = Math.Max(tmax, pre);
                    s++;
                }
                */
                if (min - tmax == 1 || tmin - max == 1)
                {
                    min = Math.Min(tmin, min);
                    max = Math.Max(tmax, max);
                    flag = true;
                    start = s;
                }
            }

            if (true)
            {
                int s = end;
                int pre = num[s];
                int tmin = pre;
                int tmax = pre;
                s--;
                /*
                while (s >= start && Math.Abs(pre - num[s]) <= 1)
                {
                    pre = num[s];
                    tmin = Math.Min(tmin, pre);
                    tmax = Math.Max(tmax, pre);
                    s--;
                }
                 * */
                if (min - tmax == 1 || tmin - max == 1)
                {
                    min = Math.Min(tmin, min);
                    max = Math.Max(tmax, max);
                    flag = true;
                    end = s;
                }
            }

            if (!flag) break;
        }

        if (min == 1 && max == num.Length) return true;
        return false;
    }



}

class Scanner
{
    string[] s;
    int i;

    char[] cs = new char[] { ' ' };

    public Scanner()
    {
        s = new string[0];
        i = 0;
    }

    public string next()
    {
        if (i < s.Length) return s[i++];
        string st = Console.ReadLine();
        while (st == "") st = Console.ReadLine();
        s = st.Split(cs, StringSplitOptions.RemoveEmptyEntries);
        i = 0;
        return s[i++];
    }

    public int nextInt()
    {
        return int.Parse(next());
    }

    public long nextLong()
    {
        return long.Parse(next());
    }

    public double nextDouble()
    {
        return double.Parse(next());
    }

}
