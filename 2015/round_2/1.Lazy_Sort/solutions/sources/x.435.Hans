/* gcc version 4.9.2 20141224
 * g++ -Wall -Wextra -Wconversion -std=c++11 -g
 */
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for(__typeof__((c).begin()) i=(c).begin(); i!=(c).end(); i++)
#define mp make_pair
#define pb push_back
#define has(c,i) ((c).find(i) != (c).end())
#define DBG(...) ({ if(1) fprintf(stderr, __VA_ARGS__); })
#define DBGDO(X) ({ if(1) cerr << "DBGDO: " << (#X) << " = " << (X) << endl; })

static const int maxN = 100*1000 + 2;

static int TC;
static int N;
static int src[maxN];

static bool solve(int sia, int sie, int da, int de)
{
	while (sia < sie) {
		if (src[sia] == da-1) { da--; sia++; continue; }
		if (src[sia] == de+1) { de++; sia++; continue; }
		if (src[sie] == da-1) { da--; sie--; continue; }
		if (src[sie] == de+1) { de++; sie--; continue; }
		return false;
	}
	return true;
}

int main() {
	ios::sync_with_stdio(false);

	cin >> TC;
	FOR(tc, 1, TC+1) {
		cin >> N;
		FOR(i,0,N) cin >> src[i];

		bool result = false;
		if (!result) result = solve(0, N-1, src[N-1], src[N-1]);
		if (!result) result = solve(1, N, src[0], src[0]);

		printf("Case #%d: %s\n", tc, (result ? "yes" : "no"));
	}
}
