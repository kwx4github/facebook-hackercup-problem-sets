//Hacker cup round 2A.cpp..
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector < int > vi;
typedef pair< int ,int > pii;
#define SIZE(X) ((int)(X.size()))
#define X first
#define Y second
#define LENGTH(X) ((int)(X.length()))
#define PB push_back
#define MP(X,Y) make_pair(X,Y)
#define MEM(a,b) memset(a,(b),sizeof(a))
#define tr(c,it) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define ain(a,n) int ((a)[(n)]); for(int i=0; i<(n); i++) cin>>((a)[i])
typedef long long int int64;
typedef unsigned long long uLL;
#define FOR(i,n) for(int i=0;i<n;i++)
#define FU(i,a,n) for(int i=a;i<=n;i++)
#define FD(i,a,n) for(int i=n;i>=a;i--)
#define GI(n) scanf("%d",&n)
#define GS(n) scanf("%s"&s)
#define GII(n,m) scanf("%d %d",&n,&m)
#define PI(n) printf("%d\n",n)
#define PII(n,m) printf("%d %d\n",n,m)
#define PL(n) printf("%I64d\n",n)
#define PLL(n) printf("%I64d\n",n)
#define GLL(n) scanf("%I64d",&n)
#define GL(n) scanf("%I64d",&n)
#define PN printf("\n")
#define MAX 20

#define pr16

#ifdef pr16
  #define pr(x)                 cerr << #x << ": " << x << endl;
  #define pr2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
  #define pr3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
  #define pr4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
  #define pr5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
  #define pr6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
  #define prdd(a,r,c) for(int i=0;i<(r);i++) { for(int j = 0;j<(c);j++) cerr<<a[i][j]<<" "; cerr<<endl; } cerr<<endl;
  #define prc(a) tr(a, it) cerr<<*(it)<<" "; cerr<<endl
  #define pra(a,n) for(int i=0; i<(n); i++) cerr<<((a)[i])<<" "; cerr<<"\n"
  #define prdd(a,r,c) for(int i=0;i<(r);i++) { for(int j = 0;j<(c);j++) cerr<<a[i][j]<<" "; cerr<<endl; } cerr<<endl; 
  #define prddd(a,x,y,z) for(int i=0;i<x;i++) {cerr<<"layer "<<i<<":\n";prdd(a[i],y,z)}

#else
  #define pr(x)
  #define pr2(x, y)
  #define pr3(x, y, z)
  #define pr4(a, b, c, d)
  #define pr5(a, b, c, d, e)
  #define pr6(a, b, c, d, e, f)
  #define tr(c,it)
  #define prc(a)
  #define pra(a,n)
  #define prdd(a, r, c)
  #define prddd(a,x,y,z)
#endif

using namespace std;

int main(){
	ios::sync_with_stdio(false);
	freopen("C:\\Users\\Sunny\\Documents\\C++/lazy_sort.txt","r",stdin);
	freopen("C:\\Users\\Sunny\\Documents\\C++/lazy_sort_example_output.txt","w",stdout);
	int t, caso = 1;
	cin>>t;
	FU(z,1,t){
		int n;
		cin>>n;
		deque<int> q1, q2;
		for(int i = 0; i < n; i++){
			int temp;
			cin>>temp;
			q1.push_front(temp);
			q2.push_front(temp);		
		}
		bool flag = false;
		deque<int> q3;
		q3.push_front(q1.front());
		q1.pop_front();
		bool flag1 = true;
		for(int i=0;i < n - 1; i++){
			int a = q1.front(), b = q1.back();	
			if(a == q3.front() - 1){
				q3.push_front(a);
				q1.pop_front();
			}
			else{
				if(a == q3.back() + 1){
					q3.push_back(a);
					q1.pop_front();
				}
				else{
					if(b == q3.front() - 1){
						q3.push_front(b);
						q1.pop_back();
					}
					else{
						if(b == q3.back() + 1){
							q3.push_back(b);
							q1.pop_back();
						}
						else{
							flag1 = false;
							break;
						}
					}
				}
			}
			
		}
		if(flag1) flag = true;
		deque<int> q4;
		q4.push_front(q2.back());
		q2.pop_back();
		bool flag2 = true;
		for(int i = 0; i < n - 1; i++){
			int a = q2.front(), b = q2.back();
			if(a == q4.front() - 1){
				q4.push_front(a);
				q2.pop_front();
			}
			else{
				if(a == q4.back() + 1){
					q4.push_back(a);
					q2.pop_front();
				}
				else{
					if(b == q4.front() - 1){
						q4.push_front(b);
						q2.pop_back();
					}
					else{
						if(b == q4.back() + 1){
							q4.push_back(b);
							q2.pop_back();
						}
						else{
							flag2 = false;
							break;
						}
					}
				}
			}
			
		}
		if(flag2) flag = true;
		cout<<"Case #"<<z<<": ";
		if(flag) cout<<"yes";
		else cout<<"no";
		cout<<endl;
	}
	return 0;
}
