#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <set>
#include <algorithm>
#include <vector>
#include <string>
#include <list>
#include <queue>
#include <map>
using namespace std;

#define left(i) ((i)<<1)
#define right(i) (((i)<<1)+1)
#define inf 0x3F3F3F3F
#define linf 0x3F3F3F3F3F3F3F3FLL

typedef long long ll;
typedef pair<int,int> pii;

bool foo(int k, list<int> a, int n)
{
	list<int> s;
	if(k == 1)
		s.push_back(a.front()), a.pop_front();
	else
		s.push_back(a.back()), a.pop_back();
	
	int ans = true;
	
	for(int i = 1; ans && i < n; i++)
	{
		if(a.front() == s.front() - 1)
			s.push_front(a.front()), a.pop_front();
		else if(a.front() == s.back() + 1)
			s.push_back(a.front()), a.pop_front();
		else if(a.back() == s.back() + 1)
			s.push_back(a.back()), a.pop_back();
		else if(a.back() == s.front() - 1)
			s.push_front(a.back()), a.pop_back();
		else
			ans = false;
	}
	s.clear();
	a.clear();
	return ans;
}

int
main(void)
{
	int T;
	scanf("%d", &T);
	for(int t = 1; t <= T; t++)
	{
		list<int> a;
		a.clear();

		printf("Case #%d: ", t);
		int n, x;
		scanf("%d", &n);
		for(int i = 0; i < n; i++)
		{
			scanf("%d", &x);
			a.push_back(x);
		}
		
		bool ans = (foo(1, a, n) || foo(0, a, n));
		
		a.clear();
		printf("%s\n", ans ? "yes": "no");
	}
	return 0;
}
























