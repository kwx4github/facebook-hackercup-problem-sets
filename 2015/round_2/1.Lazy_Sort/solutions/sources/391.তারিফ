#include <bits/stdc++.h>

using namespace std ; 

bool ok( vector<int> & numbers , int st ) {
	if( numbers.size() == 1 ) return true ; 
	
	int start = 0 ; 
	int end = numbers.size() - 1 ; 
	
	/*
	int topnum = numbers[ st ] ; 
	int botnum = numbers[ st ] ; 
	*/
	deque<int> q ; 
	q.push_back( numbers[ st ] ) ; 
	
	if( st == 0 ) start ++ ; 
	if( st == ( numbers.size() - 1 ) ) end -- ; 
	
	for( int i = 1 ; i < numbers.size() ; i ++ ) {
		int top = q.front() ; 
		int bot = q.back() ; 
		
		if( ( numbers[ start ] + 1 ) == top ) {
			q.push_front( numbers[ start ] ) ;
			start ++ ; 
		} 
		
		else if( ( numbers[ end ] + 1 ) == top ) {
			q.push_front( numbers[ end ] ) ; 
			end -- ; 
		}
		
		else if( ( numbers[ end ] - 1 ) == bot ) {
			q.push_back( numbers[ end ] ) ; 
			end -- ; 
		}
		
		else if( ( numbers[ start ] - 1 ) == bot ) {
			q.push_back( numbers[ start ] ) ; 
			start ++ ; 
		}
		
		else return false ;
	} 
	
	return true ;
}

string solve( vector<int> numbers ) {
	
	bool fst = ok( numbers , 0 ) ; 
	bool snd = ok( numbers , numbers.size() - 1 ) ; 
	
	bool yes = max( fst , snd ) ; 
	
	if( yes ) return "yes" ; 
	return "no" ; 
}

int main() {
	
	int T ; 
	
	cin >> T ; 
	
	vector<int> numbers ; 
	
	for( int i = 0 ; i < T ; i ++ ) {
		numbers.clear() ; 
		int N ; 
		cin >> N ; 
		
		int x ; 
		
		for( int j = 0 ; j < N ; j ++ ) {
			cin >> x ; 
			numbers.push_back( x ) ; 
		}
		
		string res = solve( numbers ) ; 
		cout << "Case #" << i + 1 << ": " << res << endl ; 
	}
	
	return 0 ; 
}
