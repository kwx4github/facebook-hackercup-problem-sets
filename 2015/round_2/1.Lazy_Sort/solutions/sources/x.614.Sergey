from collections import deque

def possible(seq):
    q = deque(seq[1:])
    s = deque([seq[0]])
    while q:
        a = s[0]
        b = s[-1]
        if q[0] == a - 1:
            s.appendleft(q.popleft())
            continue
        if q[-1] == a - 1:
            s.appendleft(q.pop())
            continue
        if q[0] == b + 1:
            s.append(q.popleft())
            continue
        if q[-1] == b + 1:
            s.append(q.pop())
            continue
        return "no"
    return "yes"

def do_case(case_num, seq):
    print "Case #%d: %s" % (case_num, possible(seq))

def main():
    T = int(raw_input())
    for case_num in range(1, T + 1):
        n = int(raw_input())
        seq = map(int, raw_input().split())
        do_case(case_num, seq)

if __name__ == "__main__":
    main()

