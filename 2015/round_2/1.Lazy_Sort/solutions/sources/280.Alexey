let _ =
  let sb = Scanf.Scanning.stdib in
  let cases = Scanf.bscanf sb "%d " (fun s -> s) in
    for ca = 1 to cases do
      let n = Scanf.bscanf sb "%d " (fun s -> s) in
      let a = Array.make n 0 in
      let _ =
	for i = 0 to n - 1 do
	  let k = Scanf.bscanf sb "%d " (fun s -> s) in
	    (*a.(i) <- (k, i)*)
	    a.(i) <- k
	done;
	(*Array.sort compare a*)
      in
      let check s =
	try
	  let u = ref a.(s)
	  and d = ref a.(s) in
	  let l = ref (if s = 0 then 1 else 0)
	  and r = ref (if s = n - 1 then n - 2 else n - 1) in
	    while !l < !r do
	      if a.(!l) = !u - 1 then (
		u := a.(!l);
		incr l;
	      ) else if a.(!l) = !d + 1 then (
		d := a.(!l);
		incr l;
	      ) else if a.(!r) = !u - 1 then (
		u := a.(!r);
		decr r;
	      ) else if a.(!r) = !d + 1 then (
		d := a.(!r);
		decr r;
	      ) else raise Not_found
	    done;
	    true
	with
	  | Not_found -> false
      in
      let res =
	check 0 || check (n - 1)
      in
	if res
	then Printf.printf "Case #%d: yes\n" ca
	else Printf.printf "Case #%d: no\n" ca;
    done
