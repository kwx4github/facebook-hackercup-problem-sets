#pragma comment(linker, "/STACK:128554432")

#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <string>
#include <sstream>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <ctime>
#include <memory.h>

using namespace std;

#define REP(i,n) for(int i=0;i<n;++i)
#define ABS(n) ((n)<0 ? -(n) : (n))
#define SQR(a) (a)*(a)
#define MIN(a,b) (a<b?a:b)
#define MAX(a,b) (a>b?a:b)
#define MP make_pair
#define PB push_back
#define FILL(a) memset(a,0,sizeof(a));
#define COPY(a,b) memcpy(a,b,sizeof (b));
#define SI(a) (int)((a).size())
#define ALL(a) (a).begin(),(a).end()
#define y1 yyyyy1
#define prev prevvvvv
#define LL long long
const double PI = 2*acos(0.0);
const double EPS = 1e-8;
const int INF = (1<<30)-1;
const int P = 1000000007;
const int dx[8] = {-1, 0, 1, 0, -1, 1, 1, -1}, dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
const int dxk[8] = {-2, -1, 1, 2, 2, 1, -1, -2}, dyk[8] = {1, 2, 2, 1, -1, -2, -2, -1};

int n, a[100000];

bool cando(int lt, int rt, int from, int to) {
	if (lt > rt) return true;
	if (a[lt] == from-1) {
		return cando(lt+1, rt, from-1, to);
	}
	if (a[lt] == to+1) {
		return cando(lt+1, rt, from, to+1);
	}
	if (a[rt] == from-1) {
		return cando(lt, rt-1, from-1, to);
	}
	if (a[rt] == to+1) {
		return cando(lt, rt-1, from, to+1);
	}
	return false;
}

int main(){

	int tc;
	cin >> tc;

	REP(ic,tc) {
		cin >> n;
		REP(i,n) cin >> a[i];
		bool ans = cando(0, n-2, a[n-1], a[n-1]) || cando(1, n-1, a[0], a[0]);
		cout << "Case #" << ic+1 << ": ";
		if (ans) cout << "yes" << endl;
		else cout << "no" << endl;
	}

	return 0;
}
