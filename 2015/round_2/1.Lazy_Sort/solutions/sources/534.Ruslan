#define _CRT_SECURE_NO_DEPRECATE
#pragma comment (linker, "/stack:64000000")

#include <iostream>
#include <cstdio>
#include <sstream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <queue>
#include <deque>
#include <set>
#include <bitset>
#include <map>
#include <memory.h>
#include <cassert>

using namespace std;

#define fo(a,b,c) for (int a = (b); a < (c); a++)
#define fr(a,b) fo(a, 0, (b))
#define fi(n) fr(i, (n))
#define fj(n) fr(j, (n))
#define fk(n) fr(k, (n))
#define fd(a,b,c) for (int a = (b); a >= (c); a--)
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define _(a,b) memset((a), (b), sizeof(a))
#define __(a) memset((a), 0, sizeof(a))
#define sz(a) (int)(a).size()
#define mp make_pair
#define pb push_back

typedef long long lint;
typedef pair<int, int> pii;

const int INF = 1000000000;
const lint LINF = 4000000000000000000LL;
const double eps = 1e-9;

int ni() { int a; scanf( "%d", &a ); return a; }
double nf() { double a; scanf( "%lf", &a ); return a; }
char sbuf[100005]; string ns() { scanf( "%s", sbuf ); return sbuf; }
long long nll() { long long a; scanf( "%lld", &a ); return a; }

void prepare()
{
//#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
//#else
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
//#endif
}

void panic(bool expression = false)
{
	if (!expression)
	{
		cerr << "PANIC!" << endl;
		assert(false);
	}
}

bool go(vector<int> a, int val)
{
	int l = 0, r = sz(a) - 1, top = val, bot = val;
	while (r >= l)
	{
		if (a[l] == top - 1)
		{
			top--;
			l++;
		}
		else if (a[r] == top - 1)
		{
			top--;
			r--;
		}
		else if (a[l] == bot + 1)
		{
			bot++;
			l++;
		}
		else if (a[r] == bot + 1)
		{
			bot++;
			r--;
		}
		else
			return false;
	}
	return true;
}

bool go(vector<int> a, int val, int l, int r)
{
	vector<int> v;
	for (int i = l; i < r; i++)
		v.pb(a[i]);
	return go(v, val);
}

void solve(int test_num)
{
	//cerr << test_num << endl;
	printf("Case #%d: ", test_num);
	int n = ni();
	vector<int> a(n);
	fi(n)
		a[i] = ni();
	if (sz(a) == 1 || go(a, a[0], 1, sz(a)) || go(a, a.back(), 0, sz(a) - 1))
		printf("yes\n");
	else
		printf("no\n");
}

int main()
{
	prepare();
	int number_of_tests;
	scanf("%d\n", &number_of_tests);
	fi(number_of_tests)
		solve(i + 1);
	return 0;
}