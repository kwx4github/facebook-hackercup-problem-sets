#include <cstdio>
using namespace std;

int a[50010];

bool dfs(int L, int R, int vL, int vR) {
    if (L > R) {
        return true;
    }
    if (a[L] == vL - 1 || a[L] == vR + 1) {
        if (a[L] == vL - 1) {
            return dfs(L + 1, R, vL - 1, vR);
        }
        return dfs(L + 1, R, vL, vR + 1);
    }
    if (a[R] == vL - 1 || a[R] == vR + 1) {
        if (a[R] == vL - 1) {
            return dfs(L, R - 1, vL - 1, vR);
        }
        return dfs(L, R - 1, vL, vR + 1);
    }
    return false;
}

int main() {
    freopen("lazy_sort.txt", "r", stdin);
    freopen("lazy_sort.out", "w", stdout);
    int T;
    scanf("%d", &T);
    for (int cas = 1; cas <= T; cas ++) {
        int n;
        scanf("%d", &n);
        for (int i = 0; i < n; i ++) {
            scanf("%d", &a[i]);
        }
        bool sol = dfs(1, n - 1, a[0], a[0]) || dfs(0, n - 2, a[n - 1], a[n - 1]);
        printf("Case #%d: %s\n", cas, sol ? "yes" : "no");
        fprintf(stderr, "%s\n", sol ? "yes" : "no");
    }
    return 0;
}