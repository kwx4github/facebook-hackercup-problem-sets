
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

int t, n;
int data[50000];
bool ans;

void solve() {
    int origin_from = 1, origin_to = n-1;
    int dest_min, dest_max;

    dest_min = dest_max = data[0]; // Pick from the start
    while (origin_from <= origin_to) {
        // Can we pick from lower end?
        if (data[origin_from] == dest_min - 1) {
            dest_min--;
            origin_from++;
        }
        else if (data[origin_to] == dest_min - 1) {
            dest_min--;
            origin_to--;
        }
        else if (data[origin_from] == dest_max+1) {
            dest_max++;
            origin_from++;
        }
        else if (data[origin_to] == dest_max+1) {
            dest_max++;
            origin_to--;
        }
        else break;
    }
    ans = origin_from > origin_to;
}

int main() {
    //ostream& fout = cout;
    ofstream fout ("lazy_sort.out");
    ifstream fin ("lazy_sort.txt");

    fin >> t;
    for (int i = 0; i < t; i++) {
        fin >> n;
        for (int j = 0; j < n; j++) fin >> data[j];
        solve();
        if (!ans) {
            reverse(&data[0], &data[n]);
            solve();
        }
        fout << "Case #" << (i+1) << ": " << (ans?"yes":"no") << "\n";
    }
    return 0;
}
