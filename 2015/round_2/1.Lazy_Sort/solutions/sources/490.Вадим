import java.io.*;
import java.math.BigInteger;
import java.util.*;


public class A {

    boolean check(int[] a,int l,int r,int top,int bottom){
        if(l>r)return true;
        if(a[l]==top-1){
            return check(a,l+1,r,top-1,bottom);
        }
        if(a[l]==bottom+1){
            return check(a,l+1,r,top,bottom+1);
        }
        if(a[r]==top-1){
            return check(a,l,r-1,top-1,bottom);
        }
        if(a[r]==bottom+1){
            return check(a,l,r-1,top,bottom+1);
        }
        return false;
    }

    void solve() throws IOException {
        int t=nextInt();
        for(int testCase=0;testCase<t;testCase++){
            out.printf("Case #%d: ",testCase+1);
            int n=nextInt();
            int[] a=new int[n];
            for(int i=0;i<n;i++)a[i]=nextInt();
            if(check(a,0,n-2,a[n-1],a[n-1])){
                out.println("yes");
            }
            else
                if(check(a,1,n-1,a[0],a[0]))
                    out.println("yes");
            else
                    out.println("no");
        }
    }

    public static void main(String[] args) throws IOException {
        new A().run();
    }

    void run() throws IOException {
        reader = new BufferedReader(new InputStreamReader(System.in));
		reader = new BufferedReader(new FileReader("input.txt"));
        tokenizer = null;
        out = new PrintWriter(new OutputStreamWriter(System.out));
		out = new PrintWriter(new FileWriter("output.txt"));
        solve();
        reader.close();
        out.flush();

    }

    BufferedReader reader;
    StringTokenizer tokenizer;
    PrintWriter out;

    int nextInt() throws IOException {
        return Integer.parseInt(nextToken());
    }

    long nextLong() throws IOException {
        return Long.parseLong(nextToken());
    }

    double nextDouble() throws IOException {
        return Double.parseDouble(nextToken());
    }

    String nextToken() throws IOException {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            tokenizer = new StringTokenizer(reader.readLine());
        }
        return tokenizer.nextToken();
    }
}
