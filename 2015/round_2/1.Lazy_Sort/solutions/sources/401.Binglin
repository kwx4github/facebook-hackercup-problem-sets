import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;


public class A {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        
        int T = in.nextInt();
        
        for (int id = 0; id < T; ++ id) {
            int N = in.nextInt();
            List<Integer> D = new LinkedList<>();
            for (int i = 0; i < N; ++ i) {
                D.add(in.nextInt());
            }
            List<Integer> copy = new LinkedList<>(D);
            
            boolean possible = true;
            int min = D.get(0);
            int max = D.get(0);
            D.remove(0);
            
            while (possible && !D.isEmpty()) {
                if (D.get(0) == min - 1) {
                    -- min;
                    D.remove(0);
                    continue;
                }
                if (D.get(0) == max + 1) {
                    ++ max;
                    D.remove(0);
                    continue;
                }
                if (D.get(D.size() - 1) == min - 1) {
                    -- min;
                    D.remove(D.size() - 1);
                    continue;
                }
                if (D.get(D.size() - 1) == max + 1) {
                    ++ max;
                    D.remove(D.size() - 1);
                    continue;
                }
                
                possible = false;
            }
            
            if (possible) {
                System.out.println(String.format("Case #%d: %s", id + 1, possible ? "yes" : "no"));
                continue;
            }
            
            D = copy;
            possible = true;
            min = D.get(D.size() - 1);
            max = D.get(D.size() - 1);
            D.remove(D.size() - 1);
            
            while (possible && !D.isEmpty()) {
                if (D.get(0) == min - 1) {
                    -- min;
                    D.remove(0);
                    continue;
                }
                if (D.get(0) == max + 1) {
                    ++ max;
                    D.remove(0);
                    continue;
                }
                if (D.get(D.size() - 1) == min - 1) {
                    -- min;
                    D.remove(D.size() - 1);
                    continue;
                }
                if (D.get(D.size() - 1) == max + 1) {
                    ++ max;
                    D.remove(D.size() - 1);
                    continue;
                }
                
                possible = false;
            }
            
            System.out.println(String.format("Case #%d: %s", id + 1, possible ? "yes" : "no"));
        }
        
        in.close();
    }
}
