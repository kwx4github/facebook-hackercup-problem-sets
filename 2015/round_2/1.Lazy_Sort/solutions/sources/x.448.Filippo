#include <algorithm>
#include <iostream>
#include <set>
#include <utility>

using namespace std;

typedef pair< int, int > ii;

int P[50005];
set< ii > memo;

bool f(int l, int r, int t, int b) {
	bool solved = false;
	if(memo.find(ii(l, r)) != memo.end()) return false;
	if(l > r) return true;
	if(P[l] + 1 == t) solved |= f(l + 1, r, t - 1, b);
	else if(P[l] - 1 == b) solved |= f(l + 1, r, t, b + 1);
	if(P[r] + 1 == t) solved |= f(l, r - 1, t - 1, b);
	else if(P[r] - 1 == b) solved |= f(l, r - 1, t, b + 1);
	memo.emplace(l, r);
	return solved;
}

void solve(int t) {
	memo.clear();
	int N;
	cin >> N;
	cout << "Case #" << t << ": ";
	for(int n = 0; n < N; ++n) {
		int x;
		cin >> x;
		P[n] = x;
	}
	bool solved = false;
	solved = f(1, N - 1, P[0], P[0]) | f(0, N - 1, P[N - 1], P[N - 1]);
	if(solved) cout << "yes\n";
	else cout << "no\n";
}

int main() {
	ios_base::sync_with_stdio(false);
	int T;
	cin >> T;
	for(int t = 1; t <= T; ++t) solve(t);
}
