#include <stdio.h>
#include <math.h>

#include <set>
#include <map>
#include <queue>
#include <tuple>
#include <utility>
#include <vector>
#include <algorithm>
using namespace std;

using int64 = long long;

int n;
int a[50010];

bool bktk(int i, int j, int lo, int hi) {
  if (i > j) return true;

  bool ret = false;
  if (a[i] == lo-1) {
    ret = bktk(i+1, j, lo-1, hi);
    if (ret) return true;
  } else if (a[i] == hi+1) {
    ret = bktk(i+1, j, lo, hi+1);
    if (ret) return true;
  }
  
  if (a[j] == lo-1) {
    ret = bktk(i, j-1, lo-1, hi);
    if (ret) return true;
  } else if (a[j] == hi+1) {
    ret = bktk(i, j-1, lo, hi+1);
    if (ret) return true;
  }

  return false;
}

bool func(int first) {
  int i, j, lo, hi;
  if (first == 0) {
    i = 1;
    j = n-1;
    lo = hi = a[0];
  } else {
    i = 0;
    j = n-2;
    lo = hi = a[n-1];
  }
  return bktk(i, j, lo, hi);
}

int main() {
  int T;
  scanf("%d", &T);
  for (int N = 1; N <= T; ++N) {
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
      scanf("%d", &a[i]);
    }
    bool res = func(0);
    if (!res) res = func(n-1);

    printf("Case #%d: %s\n", N, res ? "yes" : "no");
  }
  return 0;
}
