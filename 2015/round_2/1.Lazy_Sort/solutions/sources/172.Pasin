#include <iostream>

#define MAX_N 50005
#define INF 1000005

using namespace std;

int tests, n, x[MAX_N], answer;
int prevv, now;
int maxx[MAX_N], maxy[MAX_N], minx[MAX_N], miny[MAX_N];
int max1, min1, max2, min2;
bool dp[2][MAX_N];

int main() {
    cin >> tests;
    for (int test = 0 ; test < tests ; test ++) {
    	cin >> n;
    	for (int i = 1 ; i <= n ; i ++) {
    		cin >> x[i];
    	}
    	minx[0] = miny[0] = INF;
    	for (int i = 1 ; i <= n ; i ++) {
    		maxx[i] = max(maxx[i - 1], x[i]);
    		maxy[i] = max(maxy[i - 1], x[n - i + 1]);
    		minx[i] = min(minx[i - 1], x[i]);
    		miny[i] = min(miny[i - 1], x[n - i + 1]);
    	}
    	answer = 0;
    	prevv = 0;
    	now = 1;
    	for (int i = 0 ; i <= n ; i ++) {
    		for (int j = 0 ; j <= n - i ; j ++) {
    			if (i != 0 or j != 0) {
    				dp[now][j] = 0;
    				max1 = max(maxx[i], maxy[j]);
    				min1 = min(minx[i], miny[j]);
    				if (max1 - min1 == i + j - 1) {
    					if (i >= 1 and dp[prevv][j]) {
    						dp[now][j] = 1;
    					} else if (j >= 1 and dp[now][j - 1]) {
    						dp[now][j] = 1;
    					}
    				}
    			} else {
    				dp[now][j] = 1;
    			}
    		}
    		if (dp[now][n - i] == 1) {
    			answer = 1;
    			break;
    		}
    		prevv = 1 - prevv;
    		now = 1 - now;
    	}
		printf("Case #%d: %s\n", test + 1, answer ? "yes" : "no");
    }
    return 0;
}
