import java.io.*;
import java.util.*;
public class probbb {
static class Reader {
	BufferedReader boiler;
	StringTokenizer plate;
	
	void init(InputStream input) {
		boiler = new BufferedReader(new InputStreamReader(input));
		plate = new StringTokenizer("");
	}
	
	String next() throws IOException {
		while (!plate.hasMoreTokens()) {
			plate = new StringTokenizer(boiler.readLine());
		}
		return plate.nextToken();
	}
	
	int nextInt() throws IOException {
		return Integer.parseInt(next());
	}
}
public static void main(String[] args)throws Exception{
	Reader sc = new Reader();
	//sc.init(System.in);
	sc.init(new FileInputStream(new File("C:\\Users\\jlear2013\\Desktop\\in.txt")));
	int tc = sc.nextInt();
	for(int z = 1; z <= tc; z++){
		boolean possible = true;
		String ans ="yes";
		int n = sc.nextInt();
		ArrayList<Integer> nums = new ArrayList<Integer>(n+10);
		for(int i = 0; i < n; i++){
			nums.add(sc.nextInt());
		}
		if(n > 3){
		for(int i = 0; i < n; i++){
			int mid = nums.get(i);
			int left = i-1;
			int right = (i+1)%n;
			if(left == -1){
				left = n-1;
			}
			left = nums.get(left);
			right = nums.get(right);
			if(mid == 1){
				if(!(left == 2 || right == 2) || !(left == n || right == n)){
					possible = false;
					break;
				}
			} else if(mid == n){
				if(!(left == 1 || right == 1) || !(left == n-1 || right == n-1)){
					possible = false;
					break;
				}
			} else {
				if(!(left == mid-1 || right == mid-1) || !(left == mid+1 || right == mid+1)){
					possible = false;
					break;
				}
			}
		}
		} else {
			possible = true;
		}
		if(!possible){
			ans = "no";
		}
		System.out.printf("Case #%d: %s\n", z, ans);
	}
}
}

