#include <cstdio>
#include <algorithm>
#define N 50005
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int tc, n, a[N], l, r, al, ar, next;
bool fail;

bool scan(int x, int y){
	int mn = a[x], mx = a[x];
	
	int dif = a[x] - a[x + y];
	if(abs(dif) == 1){
		while(x >= 0 && x < n){
			mn = min(mn, a[x]);
			mx = max(mx, a[x]);
			if(x + y < 0 || x + y >= n || a[x] - a[x + y] != dif) break;
			x += y;
		}
	}
	
	next = x + y;
	if(l == -1){
		l = mn;
		r = mx;
		return 1;
	}
	
	if(dif == 1 && mx + 1 == l){
		l = mn;
		return 1;
	}
	
	if(dif == -1 && mn - 1 == r){
		r = mx;
		return 1;
	}
	
	if(abs(dif) != 1){
		if(a[x] - 1 == r) r = a[x];
		if(a[x] + 1 == l) l = a[x];
		return 1;
	}
	
	return 0;
}

void solve(int tt){
	scanf("%d", &n);
	fi(i, 0, n) scanf("%d", &a[i]);
	if(n == 1){
		printf("Case #%d: yes\n", tt);
		return;
	}
	
	al = 0;
	ar = n - 1;
	l = r = -1;
	
	while(l != 1 || r != n){
		fail = 1;
		if(scan(al, 1)){
			al = next;
			fail = 0;
		}
		
		if(scan(ar, -1)){
			ar = next;
			fail = 0;
		}
		
		if(fail) break;
	}
	
	printf("Case #%d: %s\n", tt, l == 1 && r == n ? "yes" : "no");
}

int main(){
	scanf("%d", &tc);
	FI(t, 1, tc) solve(t);
	scanf("\n");
}
