#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <limits>
#include <cstring>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

int main(){
	ios::sync_with_stdio(false);
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int t,c=1,n;
	int i;

	cin>>t;
	int arr[50005];
	while(t--){
		cout<<"Case #"<<c++<<": ";
		cin>>n;
		for(i=0;i<n;i++)
			cin>>arr[i];

		int left, right, top,bot;

		bool possible = false;

		for(i=0;i<2;i++){
			if(i==0)
				left = 1, right = n-1, top = arr[0], bot = arr[0];
			else
				left = 0, right = n-2, top = arr[n-1], bot = arr[n-1];
			bool moves_possible;

			do{
				if(left > right) break;

				moves_possible = false;
				if(arr[left]== top-1){
					top = arr[left];
					left++;
					moves_possible = true;
					continue;
				}

				if(arr[left] == bot+1){
					bot = arr[left];
					left++;
					moves_possible = true;
					continue;
				}

				if(arr[right] == top-1){
					top = arr[right];
					right--;
					moves_possible = true;
					continue;
				}

				if(arr[right] == bot+1){
					bot = arr[right];
					right--;
					moves_possible = true;
					continue;
				}

			}while(moves_possible);

			if(top == 1 && bot == n){
				possible = true;
				break;
			}
		}
		if(possible)
			cout<<"yes"<<endl;
		else cout<<"no"<<endl;
	}


	return 0;
}