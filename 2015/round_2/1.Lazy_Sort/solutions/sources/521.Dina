#include <algorithm>
#include <bitset>
#include <deque>
#include <iostream>
#include <limits.h>
#include <map>
#include <math.h>
#include <queue>
#include <set>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <vector>
using namespace std;
int main() {
  int ntc;
  cin>>ntc;
  for(int tc=1; tc<=ntc; ++tc) {
    int n;
    cin>>n;
    deque<int> Q1, Q2;
    int tmp;
    for(int i=0; i<n; ++i) {
      cin>>tmp;
      Q1.push_back(tmp);
      Q2.push_back(tmp);
    }
    int low1 = Q1.front();
    int high1 = Q1.front();
    Q1.pop_front();
    bool can = false;
    while (!Q1.empty()) {
      tmp = Q1.front();
      if (tmp == low1-1) {
        --low1;
        Q1.pop_front();
        continue;
      } else if (tmp == high1 + 1) {
        ++high1;
        Q1.pop_front();
        continue;
      }
      tmp = Q1.back();
      if (tmp == low1-1) {
        --low1;
        Q1.pop_back();
        continue;
      } else if (tmp == high1 + 1) {
        ++high1;
        Q1.pop_back();
        continue;
      }
      break;
    }
    if (Q1.empty()) can = true;

    int low2 = Q2.back();
    int high2 = Q2.back();
    Q2.pop_back();
    while (!Q2.empty()) {
      tmp = Q2.front();
      if (tmp == low1-1) {
        --low1;
        Q2.pop_front();
        continue;
      } else if (tmp == high1 + 1) {
        ++high1;
        Q2.pop_front();
        continue;
      }
      tmp = Q2.back();
      if (tmp == low1-1) {
        --low1;
        Q2.pop_back();
        continue;
      } else if (tmp == high1 + 1) {
        ++high1;
        Q2.pop_back();
        continue;
      }
      break;
    }
    if (Q2.empty()) can = true;

    cout<<"Case #"<<tc<<": ";
    if(can) cout<<"yes"<<endl;
    else cout<<"no"<<endl;
  }
  return 0;
}
