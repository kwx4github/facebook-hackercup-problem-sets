#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 200500;
typedef long long LL;
const LL MOD = 1000000000 + 7;


int main()
{
//#ifdef _DEBUG || _RELEASE
	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
//#else
	//freopen("html.in", "r", stdin); freopen("html.out", "w", stdout);
//#endif
	int T;
	scanf("%d", &T);

	forn(caze, 0, T)
	{
		bool ans = false;
		int n;
		cin>>n;
		vector<int> a(n);
		forn(i, 0, n)
		{
			cin>>a[i];
			a[i]--;
		}

		int l = 0, r = n - 1;
		int la = a[0], ra = a[0];
		l++;
		while(l <= r)
		{
			if (a[l] == ra + 1)
			{
				l++;
				ra++;continue;
			}
			if (a[r] == ra + 1)
			{
				r--;
				ra++;continue;
			}
			if (a[l] == la - 1)
			{
				la--;
				l++;continue;
			}
			if (a[r] == la - 1)
			{
				r--;
				la--;
				continue;
			}
			break;
		}

		if (l > r && la == 0 && ra == n - 1) ans = true;
		l = 0, r = n - 1;
		la = a[n - 1], ra = a[n - 1];
		r--;;
		while(l <= r)
		{
			if (a[l] == ra + 1)
			{
				l++;
				ra++;continue;
			}
			if (a[r] == ra + 1)
			{
				r--;
				ra++;continue;
			}
			if (a[l] == la - 1)
			{
				la--;
				l++;continue;
			}
			if (a[r] == la - 1)
			{
				r--;
				la--;continue;
			}
			break;
		}

		if (l > r && la == 0 && ra == n - 1) ans = true;

		cout<<"Case #"<<caze + 1<<": "<<(ans ? "yes" : "no")<<endl;
	}
	return 0;
}