#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define LLD long long
using namespace std;

int n, a[50005];

int can(){
	int hd = 1, tl = n - 1;
	int lo = a[0], hi = a[0];
	FOR(i,1,n){
		if (a[hd] == lo - 1) ++hd, --lo;
		else if (a[hd] == hi + 1) ++hd, ++hi;
		else if (a[tl] == lo - 1) --tl, --lo;
		else if (a[tl] == hi + 1) --tl, ++hi;
		else return 0;
	}
	return 1;
}

int solve(){
	scanf("%d", &n);
	FOR(i,0,n) scanf("%d", &a[i]);
	if (can()) return 1;
	reverse(a, a + n);
	if (can()) return 1;
	return 0;
}

int main(){
	int tc;
	scanf("%d", &tc);
	FOE(i,1,tc) printf("Case #%d: %s\n", i, solve() ? "yes" : "no");
	return 0;
}

