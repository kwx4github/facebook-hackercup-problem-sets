using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace FacebookHackercup2015
{
    public class LazySort
    {
        public static void Main(string[] args)
        {
            RunCases(args[0]);
            //RunTests();
        }

        private static void RunCases(string fileName)
        {
            StreamReader sr = new StreamReader(fileName);
            int testCases = int.Parse(sr.ReadLine());

            for (int i = 0; i < testCases; i++)
            {
                RunCase(sr, i + 1);
            }
        }

        private static void RunCase(StreamReader sr, int i)
        {
            int n = int.Parse(sr.ReadLine());
            string[] parts = sr.ReadLine().Split(' ');
            int[] arr = new int[n];
            for (int j = 0; j < n; j++)
            {
                arr[j] = int.Parse(parts[j]);
            }
                
            Console.WriteLine("Case #{0}: {1}", i, CanBeSorted(arr) ? "yes" : "no");
        }

        private static void RunTests()
        {
            int[] arr = {2, 3, 4, 1, 5, 6, 9, 8, 7};
            int[] arr2 = {1, 2, 3, 4};
            Console.WriteLine(CanBeSorted(arr));
        }

        private static bool CanBeSorted(int[] arr)
        {
            int n = arr.Length;
            if (n == 1)
            {
                return true;
            }
            return Sort(arr, 1, n - 1, arr[0]) || Sort(arr, 0, n - 2, arr[n - 1]);
        }

        private static bool Sort(int[] arr, int i, int j, int init)
        {
            int k = init;
            int l = init;
            while (i != j)
            {
                if (arr[i] == k - 1)
                {
                    i++;
                    k--;
                    continue;
                }

                if (arr[i] == l + 1)
                {
                    i++;
                    l++;
                    continue;
                }

                if (arr[j] == k - 1)
                {
                    j--;
                    k--;
                    continue;
                }

                if (arr[j] == l + 1)
                {
                    j--;
                    l++;
                    continue;
                }

                return false;
            }

            return true;
        }
    }
}
