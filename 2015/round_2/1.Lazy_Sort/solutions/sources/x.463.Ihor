package facebook;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.security.KeyStore.Entry;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;

public class Qual {

	private static BufferedReader br = null;
	private static int readInt() {
		try {
			return Integer.parseInt(br.readLine());
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}
	private static int[] readIntArr() {
		int[] ret = null;
		String[] tmp;
		try {
			String str = br.readLine();
			tmp = str.split(" ");
			ret = new int[tmp.length];
			for (int i = 0; i < tmp.length; i++)
				ret[i] = Integer.parseInt(tmp[i]);
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return ret;
	}
	
	
	
	public static void main(String[] args) {
		//Scanner in = null;
		try {
//			in = new Scanner(new File("E:\\workspace\\facebook\\bin\\input.txt"));
			System.setOut(new PrintStream(new FileOutputStream("E:\\workspace\\output.txt")));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			br = new BufferedReader(new FileReader("E:\\workspace\\input.txt"));
		}  catch (FileNotFoundException e) {
		    e.printStackTrace();
		}
		int T = readInt();
		for(int ind = 1; ind <= T; ind++) {
			int n = readInt();
			int[] arr = readIntArr();
			int mi = arr[0];
			int ma = arr[0];
			int l = 1;
			int r = arr.length - 1;
			boolean ok = true;
			while (l < r) {
				if (arr[l] == mi - 1) {
					mi--;
					l++;
				} else if (arr[l] == ma +1) {
					ma++;
					l++;
				} else if (arr[r] == mi - 1) {
					mi--;
					r--;
				} else if (arr[r] == ma + 1) {
					ma ++;
					r--;
				} else {
					ok = false;
					break;
				}
			}
			System.out.println("Case #" + ind + ": " + (ok ? "yes" : "no"));
		}
	}

}
