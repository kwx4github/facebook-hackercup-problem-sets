/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//std::ios_base::sync_with_stdio (false);

#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <iomanip>
#include <map>
#include <assert.h>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>
#include <deque>
#include <fstream>
#include <bitset>

#define endl '\n'
#define deb(x) cout << "> " << #x << " : " << (x) << endl;
#define EPS 0.0000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF ((1<<30)-1)
#define pb push_back
#define mp make_pair
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int , int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector < int >
#define DID (long long)
#define ll long long
#define AL(a) (a).begin(),(a).end()
#define INFF DID INF*INF
#define debug 1

using namespace std;

int n,x;
int place[100005],s[100005];

void update(int pos){
    while (pos<100005){
        s[pos]++;
        pos = 2*pos-(pos&(pos-1));
    }
}

int get(int p){
    if (p==0)
        return s[0];
    int ans = 0;
    while (p){
        ans += s[p];
        p = p&(p-1);
    }
    return ans;
}

int getsum(int a,int b){
    if (a>b)
        return 0;
    return get(b)-get(a-1);
}



int main(){
    #ifndef ONLINE_JUDGE
        freopen("text.in","r",stdin);  freopen("text.out","w",stdout);
    #endif

    int t;
    cin>>t;
    int tt = t;
    while (t--){
        cin>>n;
        memset(s,0,sizeof(s));
        for (int i=0;i<n;i++){
            cin>>x;
            place[x]=i+1;
        }
        vector <PI> v;
        for (int i=1;i<n;i++){
            int a = place[i];
            int b = place[i+1];
            if (a>b)
                swap(a,b);
            v.pb(mp(a,b));
        }
        sort(AL(v));
        int x = 0;
        bool ok = 1;
        for (int pos = 1;pos<=n;pos++){
            int xwas = x;
            while (x<v.S && v[x].fi == pos){
                if (getsum(pos+1,v[x].se-1)>0)
                    ok = 0;
                x++;
            }
            for (int i  = xwas;i<x;i++){
                update(v[i].se);
            }
        }

        cout<<"Case #"<<tt-t<<": ";
        if (ok)
            cout<<"yes"<<endl;
        else
            cout<<"no"<<endl;
    }

}
