#include <algorithm>
#include <assert.h>
#include <climits>
#include <cstring>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <list>
#include <cmath>
#include <fstream>
#include <iostream>
#include <sstream>
#include <numeric>
#include <limits>
#include <iomanip>
using namespace std;

#define sz(a) ((int)a.size())
#define all(a) a.begin(), a.end()
#define LL long long
#define LD long double
#define vi vector<int>
#define vl vector<LL>
#define vs vector<string>
#define vb vector<bool>
#define ii pair<int, int>
#define vii vector<ii>
#define SET(v, i) (v | (1 << i))
#define TEST(v, i) (v & (1 << i))
#define TOGGLE(v, i) (v ^ (1 << i))

bool Solve(const vi& ids, int s) {
  if (sz(ids) == 1)
    return true;

  int i = s == 0 ? 1 : 0;
  int j = s == sz(ids) - 1 ? sz(ids) - 2 : sz(ids) - 1;
  int top = ids[s];
  int bottom = ids[s];

  while (i < j) {
    if (top - 1 == ids[i]) {
      top = ids[i++];
    } else if (top - 1 == ids[j]) {
      top = ids[j--];
    } else if (bottom + 1 == ids[i]) {
      bottom = ids[i++];
    } else if (bottom + 1 == ids[j]) {
      bottom = ids[j--];
    } else {
      return false;
    }
  }

  return true;
}

int main() {
  int t;
  cin >> t;
  for (int test = 1; test <= t; ++test) {
    int n;
    cin >> n;
    vi ids(n);
    for (int i = 0; i < n; ++i)
      cin >> ids[i];

    cout << "Case #" << test << ": ";
    if (Solve(ids, 0) || Solve(ids, n - 1)) {
      cout << "yes" << endl;
    } else {
      cout << "no" << endl;
    }
  }
  return 0;
}
