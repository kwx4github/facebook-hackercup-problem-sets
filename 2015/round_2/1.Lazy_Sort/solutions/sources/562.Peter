package R2;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

public class LazySort {
	static String inFile = "LazySort_in.txt";
	static String outFile = "LazySort_out.txt";
	static InputStreamReader isr;
	static BufferedReader br;
	static PrintWriter pw;

	static int gint() throws NumberFormatException, IOException {
		return Integer.parseInt(br.readLine());
	}

	static int[] ginta() throws NumberFormatException, IOException {
		String l = br.readLine();
		String[] v = l.split(" ");
		int[] a = new int[v.length];

		for (int i = 0; i < a.length; i++) {
			a[i] = Integer.parseInt(v[i]);
		}

		return a;
	}

	public static void main(String[] args) throws NumberFormatException,
			IOException {
		isr = new InputStreamReader(new FileInputStream(inFile));
		br = new BufferedReader(isr);
		pw = new PrintWriter(outFile);

		int t = gint();
		for (int i = 1; i <= t; i++) {
			String l = solve(i);
			System.out.println(l);
			pw.println(l);
		}
		
		pw.close();
	}
	
	static String solve(int casen) throws NumberFormatException, IOException {
		gint();
		int[] n = ginta();
		
		boolean s1 = trythis(n, n[0], n[0], 1, n.length - 1);
		boolean s2 = trythis(n, n[n.length - 1], n[n.length - 1], 0, n.length - 2);
		
		if(s1 || s2) {
			return String.format("Case #%d: yes", casen);
		} else {
			return String.format("Case #%d: no", casen);
		}
	}
	
	static boolean trythis(int[] n, int max, int min, int from, int to) {
		
		int l = 1;
		while(from <= to) {
			
			boolean f = true;
			if (n[from] == min - 1) {
				min--;
				from++;			
			} else if(n[from] == max + 1) {
				max++;
				from++;
			} else if (n[to] == min - 1) {
				min--;
				to--;
			} else if (n[to] == max + 1) {
				max++;
				to--;
			} else {
				f = false;
			}
			
			if (!f)
				break;
			
			l++;
		}
		
		return l == n.length;
	}
	
	
	
	
	
	
	
	
	
	
	
	
}
