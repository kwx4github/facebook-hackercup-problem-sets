#include<cstdio>
#include<algorithm>
#include<vector>
#include<cstring>
#include<set>
using namespace std;
#define FOR(i,a,n) for(int i = (a); i <= (n); ++i)
#define FORD(i,a,n) for(int i = (a); i >= (n); --i)
#define REP(i,n) FOR(i,0,(n)-1)
#define RI(i,n) FOR(i,1,(n))
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define mini(a,b) a=min(a,(b))
#define maxi(a,b) a=max(a,(b))
#ifdef LOK
#define debug printf
#else
#define debug if(0)printf
#endif
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
const int inf = 1e9 + 5;
const int nax = 1e5 + 5;

int gora,dol,n,testy;
int t[nax];

bool check(int l, int p) {
	if (l > p) return true;
	if (t[l] == dol-1 || t[l] == gora+1) {
		dol = min(dol,t[l]);
		gora = max(gora,t[l]);
		return check(l+1,p);
	}
	else if (t[p] == dol-1 || t[p] == gora+1) {
		dol = min(dol,t[p]);
		gora = max(gora,t[p]);
		return check(l,p-1);	
	}
	return false;
}

bool solve() {
	scanf("%d",&n);
	REP(i,n) scanf("%d",&t[i]);
	dol = gora = t[0];
	if (check(1,n-1)) return true;
	dol = gora = t[n-1];
	if (check(0,n-2)) return true;
	return false;
}

int main() {
	scanf("%d",&testy);
	FOR(g,1,testy) {
		printf("Case #%d: ",g);
		puts(solve() ? "yes" : "no");
	}
	return 0;
}
