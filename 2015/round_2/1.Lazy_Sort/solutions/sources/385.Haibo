#include <stdio.h>
#include <string.h>

const int MAXN = 50000;
bool valid[MAXN+1];
bool dp[2][MAXN+2];
int value[MAXN], N;

bool solve() {
	scanf("%d", &N);
	for (int i = 0; i < N; i ++) {
		scanf("%d", &value[i]);
	}
	memset(dp, 0, sizeof(dp));
	dp[0][N] = true;
	for (int i=0;i<=N;i++) {
		memset(valid, 0, sizeof(valid));
		valid[i]=true;
		int min=MAXN+1, max=0;
		for (int j=0;j<i;j++) {
			if (value[j] > max) {
				max = value[j];
			}
			if (value[j] < min) {
				min=value[j];
			}
		}
		valid[N] = (i == 0 || max-min+1 == i);
		for (int j = N-1; j >=i; j --) {
			if (value[j] > max) {
				max = value[j];
			}
			if (value[j] < min) {
				min=value[j];
			}
			valid[j] = (max-min+1 == N-j+i);
		}
		int cur = i%2, pre = !cur;
		for(int j=N;j>=i;j--) {
			if (valid[j]) {
				dp[cur][j] |= dp[pre][j] || dp[cur][j+1];
			}
		}
		if (dp[cur][i]) {
			return true;
		}
		memset(dp[pre], 0, sizeof(dp[cur]));
	}
	return false;
}

int main() {
	int T;
	scanf("%d", &T);
	for (int c = 1; c <= T; c++) {
		printf("Case #%d: %s\n", c, solve()?"yes":"no");
	}
}