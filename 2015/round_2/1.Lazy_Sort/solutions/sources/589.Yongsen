#include <iostream>
#include <cstdio>
using namespace std;

const int N = 55555;
int pile[N];
bool check(int L, int R, int l, int r) {
    while (l <= r) {
        bool found = false;
        while (pile[l] == L - 1 || pile[l] == R + 1) {
            found = true;
            if (pile[l] == L - 1) L--;
            else R++;
            l++;
        }
        while (pile[r] == L - 1 || pile[r] == R + 1) {
            found = true;
            if (pile[r] == L - 1) L--;
            else R++;
            r--;
        }
        if (!found) break;
    }
    return l > r;
}

int main() {
    int T, Case = 1;
    cin >> T;
    while (T--) {
        int n;
        cin >> n;
        for (int i = 0; i < n; i++) { cin >> pile[i]; }
        bool can_sort = check(pile[0], pile[0], 1, n - 1) | check(pile[n - 1], pile[n - 1], 0, n - 2);
        cout << "Case #" << Case++ << ": " << (can_sort ? "yes" : "no") << endl;
    }
    return 0;
}
