#include <cstdio>
#include <cstring>
#include <cassert>

#include <algorithm>
#include <iostream>
#include <deque>
using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

int N;

bool solve(int fst, deque<int> D) {
  int lo = fst;
  int hi = fst;

  while (!D.empty()) {
    if (D.front() == hi+1) {
      D.pop_front();
      ++hi;
    } else if (D.front() == lo-1) {
      D.pop_front();
      --lo;
    } else if (D.back() == hi+1) {
      D.pop_back();
      ++hi;
    } else if (D.back() == lo-1) {
      D.pop_back();
      --lo;
    } else {
      return false;
    }
  }

  return true;
}

int main() {
  int T;
  scanf("%d", &T);
  for (int tt = 1; tt <= T; ++tt, fflush(stdout)) {
    scanf("%d", &N);

    deque<int> Q;
    REP(i, N) {
      int x;
      scanf("%d", &x);
      Q.push_back(x);
    }

    deque<int> A = Q; A.pop_front();
    deque<int> B = Q; B.pop_back();

    bool ans = false;
    ans |= solve(Q.front(), A);
    ans |= solve(Q.back(), B);

    printf("Case #%d: %s\n", tt, ans ? "yes" : "no");
  }
  return 0;
}
