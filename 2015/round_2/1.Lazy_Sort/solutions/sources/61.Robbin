#include<deque>
#include<vector>
#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

int n;

bool check(deque<int> q) {
    deque<int> bak = q;
    int top = q.front() - 1, bot = q.front() + 1;
    q.pop_front();
    while (q.size()) {
        int u = q.front();
        if (u == top || u == bot) {
            if (u == top) {
                --top;
            } else if (u == bot) {
                ++bot;
            }
            q.pop_front();
            continue;
        }
        u = q.back();
        if (u == top || u == bot) {
            if (u == top) {
                --top;
            } else if (u == bot) {
                ++bot;
            }
            q.pop_back();
            continue;
        }
        break;
    }
    if (q.size() == 0) {
        return true;
    }
    q = bak;
    top = q.back() - 1, bot = q.back() + 1;
    q.pop_back();
    while (q.size()) {
        int u = q.front();
        if (u == top || u == bot) {
            if (u == top) {
                --top;
            } else if (u == bot) {
                ++bot;
            }
            q.pop_front();
            continue;
        }
        u = q.back();
        if (u == top || u == bot) {
            if (u == top) {
                --top;
            } else if (u == bot) {
                ++bot;
            }
            q.pop_back();
            continue;
        }
        break;
    }
    if (q.size() == 0) {
        return true;
    }
    return false;
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        scanf("%d", &n);
        deque<int> q;
        for (int i = 0; i < n; ++i) {
            int a;
            scanf("%d", &a);
            q.push_back(a);
        }
        static int id = 0;
        printf("Case #%d: %s\n", ++id, check(q) ? "yes" : "no");
    }
    return 0;
}
