// Template {{{
#include <bits/stdc++.h>
#define REP(i,n) for(int i=0; i<(int)(n); ++i)
using namespace std;
typedef long long LL;

template<typename T1, typename T2>
ostream& operator << (ostream& os, const pair<T1, T2>& p) {
    os << "(" << p.first << ", " << p.second << ")";
    return os;
}

template<typename T>
ostream& operator << (ostream& os, const vector<T>& v) {
    os << "{";
    for(int i = 0; i < v.size(); i++)
        os << v[i] << (i+1<v.size()?", ":"");
    os << "}";
    return os;
}

const int dx[4] = {1, 0, -1, 0};
const int dy[4] = {0, 1, 0, -1};
inline bool valid(int x, int w) { return 0 <= x && x < w; }

void iostream_init() {
    ios::sync_with_stdio(false);
    cin.tie(0);
}
//}}}

bool check(vector<int> a) {
    int n = a.size();
    if(n <= 2) return true;

    {
        int x = 0, y = n-1;
        int head = a[x] - 1;
        int tail = a[x] + 1;
        x++;
        bool ok = true;
        REP(_, n-1) {
            if(a[x] == head) {
                x++;
                head--;
            } else if(a[x] == tail) {
                x++;
                tail++;
            } else if(a[y] == head) {
                y--;
                head--;
            } else if(a[y] == tail) {
                y--;
                tail++;
            } else {
                ok = false;
                break;
            }
        }
        if(ok) return true;
    }

    {
        int x = 0, y = n-1;
        int head = a[y] - 1;
        int tail = a[y] + 1;
        y--;
        bool ok = true;
        REP(_, n-1) {
            if(a[x] == head) {
                x++;
                head--;
            } else if(a[x] == tail) {
                x++;
                tail++;
            } else if(a[y] == head) {
                y--;
                head--;
            } else if(a[y] == tail) {
                y--;
                tail++;
            } else {
                ok = false;
                break;
            }
        }
        if(ok) return true;
    }

    return false;
}
void solve() {
    int N;
    cin >> N;
    vector<int> a(N);
    REP(i, N) cin >> a[i];

    if(check(a)) {
        cout << "yes" << endl;
    } else {
        cout << "no" << endl;
    }
}

int main(){
    iostream_init();

    int TESTCASE;
    cin >> TESTCASE;
    for(int testcase = 0; testcase < TESTCASE; testcase++) {
        cout << "Case #" << testcase + 1 << ": ";
        solve();
    }

    // const int M = 50000;
    // vector<int> a(M);
    // REP(i, M) a[i] = i + 1;
    // assert(check(a));
    // int h = 0, t = M-1;
    // REP(i, M) {
    //     if(i%2 == 0) a[h++] = i + 1;
    //     else a[t--] = i + 1;
    // }
    // assert(check(a));
    // REP(i, M) a[(i+1)%M] = i+1;
    // assert(check(a));
    // swap(a[50], a[51]);
    // assert(!check(a));

    return 0;
}

/* vim:set foldmethod=marker: */

