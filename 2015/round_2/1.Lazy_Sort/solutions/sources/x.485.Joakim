#include <map>
#include <set>
#include <stack>
#include <queue>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <climits>
#include <sstream>
#include <cstdlib>
#include <fstream>
#include <iostream>
#include <algorithm>
using namespace std;
#define FOR(it,st,en) for(int it=(st);it<(int)(en);++it)
#define REP(it,en) FOR(it,0,en)
#define ITE(it,c) for(auto it=(c).begin();it!=(c).end();++it)
#define ALLOF(c) (c).begin(), (c).end()
#define PB push_back
#define MP make_pair
#define X first
#define Y second
typedef long long int LL; 
typedef long double LD;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;
const int INF=(int)1e9; 
const double EPS=(LD)1e-7;

void solve(){
	int N;
	cin>>N;
	deque<int> start(N), end;
	REP(i,N)cin>>start[i];
	deque<int> st=start;
	end.push_back(st.back());
	st.pop_back();
	while(!st.empty()){
		if(st.front()==end.back()+1){
			end.push_back(st.front());
			st.pop_front();
		}
		else if(st.back()==end.back()+1){
			end.push_back(st.back());
			st.pop_back();
		}
		else if(st.front()==end.front()-1){
			end.push_front(st.front());
			st.pop_front();
		}
		else if(st.back()==end.front()-1){
			end.push_front(st.back());
			st.pop_back();
		}
		else{
			st.clear();
		}
	}
	if(end.size()==N){
		cout<<"yes";
		return;
	}
	end.clear();
	end.push_back(st.back());
	st=start;
	st.pop_front();
	while(!st.empty()){
		if(st.front()==end.back()+1){
			end.push_back(st.front());
			st.pop_front();
		}
		else if(st.back()==end.back()+1){
			end.push_back(st.back());
			st.pop_back();
		}
		else if(st.front()==end.front()-1){
			end.push_front(st.front());
			st.pop_front();
		}
		else if(st.back()==end.front()-1){
			end.push_front(st.back());
			st.pop_back();
		}
		else{
			st.clear();
		}
	}
	if(end.size()==N){
		cout<<"yes";
		return;
	}
	cout<<"no";
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int T;
    cin>>T;
    REP(i,T){
    	cout<<"Case #"<<i+1<<": ";
    	solve();
    	cout<<endl;
    }
	return 0;
}