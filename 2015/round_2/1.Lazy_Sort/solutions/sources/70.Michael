#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <math.h>
#include <algorithm>
#include <bitset>
#include <set>
#include <sstream>
#include <stdlib.h>
#include <map>
#include <queue>
#include <stack>
#include <assert.h>
// #include <unordered_set>
#include <iomanip>

using namespace std;

#define sz(x) ((int)x.size())
#define all(x) (x).begin(), (x).end()
#define pb(x) push_back(x)
#define mp(x, y) make_pair(x, y)

#define forit(X,Y) for(typeof((Y).begin()) X = (Y).begin(); X != (Y).end(); ++X)

#define mplus(x, y) ((x) == -1 || (y) == -1) ? -1 : ((x) + (y))
#define mmax(x, y) ((x) == -1 || (y) == -1) ? -1 : max((x), (y))
#define mmin(x, y) ((x) == -1) ? (y) : ((y) == -1) ? (x) : min((x), (y))

#define checkbit(n, k) (((1L << (k)) & (n)) != 0)

#define debug(x) cerr << '>' << #x << ':' << x << endl;

typedef long long int64;

typedef vector <int> vi;
typedef vector < vi > vvi;


const int MOD = 1000000007;

bool can(vector<int> a) {
    int n = a.size();
    {
        int lo = a[0];
        int hi = a[0];
        int left = 1;
        int right = n - 1;
        while (left <= right) {
            if (a[left] == lo - 1) {
                ++left;
                --lo;
            } else if (a[left] == hi + 1) {
                ++left;
                ++hi;
            } else if (a[right] == lo - 1) {
                --right;
                --lo;
            } else if (a[right] == hi + 1) {
                --right;
                ++hi;
            } else {
                break;
            }
        }
        if (left > right) {
            return true;
        }
    }
    {
        int lo = a[n - 1];
        int hi = a[n - 1];
        int left = 0;
        int right = n - 2;
        while (left <= right) {
            if (a[left] == lo - 1) {
                ++left;
                --lo;
            } else if (a[left] == hi + 1) {
                ++left;
                ++hi;
            } else if (a[right] == lo - 1) {
                --right;
                --lo;
            } else if (a[right] == hi + 1) {
                --right;
                ++hi;
            } else {
                break;
            }
        }
        if (left > right) {
            return true;
        }
    }
    return false;
}

int main() {
    int T;
    cin >> T;
    for (int tt = 1; tt <= T; ++tt) {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; ++i)
            cin >> a[i];
        bool res = can(a);
        cout << "Case #" << tt << ": " << (res ? "yes" : "no") << endl;
    }
}
