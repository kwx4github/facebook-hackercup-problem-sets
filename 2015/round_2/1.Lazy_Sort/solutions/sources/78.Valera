#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <cassert>
#include <ctime>
#include <numeric>

using namespace std;

#define sqr(a) ((a)*(a))
#define two(a) (1 << (a))
#define has(mask, a) ((mask) & two(a) ? 1 : 0)

int n, p[50005];

void load() {
	cin >> n;
	for (int i = 0;i < n;i++) {
		scanf("%d", &p[i]);
	}
}

bool go(int w) {
	int l = 0, r = n - 1;
	int pl = -1, pr = -1;
	if (w) {
		pl = pr = p[l];
		l++;
	} else {
		pl = pr = p[r];
		r--;
	}

	while (l <= r) {
		if (p[l] == pl - 1) {
			l++;
			pl--;
		} else if (p[l] == pr + 1) {
			pr++;
			l++;
		} else if (p[r] == pl - 1) {
			pl--;
			r--;
		} else if (p[r] == pr + 1) {
			pr++;
			r--;
		} else {
			return 0;
		}
	}
	return 1;
}

void solve(int test) {
	printf ("Case #%d: %s\n", test, (go(0) || go(1)) ? "yes" : "no");
}

int main() {
 	freopen ("a.in", "r", stdin);

 	int t;
 	scanf ("%d\n", &t);

 	clock_t start = clock();
 	for (int i = 1;i <= t;i++) {
 		clock_t cur_start = clock();

 		fprintf(stderr, "Test %d:\n", i);
 		load();
 		solve(i);
 		fprintf(stderr, "Done in %.3f\n", (clock() - cur_start) / (double)CLOCKS_PER_SEC);
 	}

 	fprintf(stderr, "Total time: %.3f\n", (clock() - start) / (double)CLOCKS_PER_SEC);

 	return 0;
}