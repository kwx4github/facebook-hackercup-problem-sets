#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include <sstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
using namespace std;
typedef long long ll;
typedef double R;
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define FOR(i, s, t) for(i = (s); i < (t); i++)
#define RFOR(i, s, t) for(i = (s)-1; i >= (t); i--)

const int MAXN = 4123;
const int MAXK = 112;
const int MAXL = 21234;

int f[MAXL][MAXK];
int next[MAXL][26];
int a[MAXL];
char s[MAXL];
int k;
int cnt;

void dfs(int i){
	f[i][0] = 0;
	if(a[i])
		f[i][1] = 0;

	for(int j = 0; j <  26; j++)
		if(next[i][j] != -1){
			dfs(next[i][j]);
			for(int x = k; x >= 0; x--)
				for(int y = k-x; y >= 1; y--){
					f[i][x+y] = min(f[i][x+y], f[i][x] + f[next[i][j]][y] + y);
				}
		}

	f[i][1] = 0;
}

int main(){
#ifdef LOCAL
	freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
#endif
	int i0, T;
	scanf("%d", &T);
	for(i0 = 1; i0 <= T; i0++){
		int n;
		int i, j;

		scanf("%d%d", &n, &k);
		memset(next, -1, sizeof next);
		memset(a, 0, sizeof a);
		cnt = 1;
		for(i = 0; i < n; i++){
			scanf("%s", s);
			j = 0;
			for(int x = 0; s[x]; x++){
				int t = s[x]-'a';
				if(next[j][t] == -1){
					next[j][t] = cnt++;
				}
				j = next[j][t];
			}
			a[j] = 1;
		}

		memset(f, 1, sizeof f);
		dfs(0);

		int ans = f[0][k];
		if(k == 1)
			ans = 1;

		printf("Case #%d: %d\n", i0, ans);
	}
	return 0;
}
