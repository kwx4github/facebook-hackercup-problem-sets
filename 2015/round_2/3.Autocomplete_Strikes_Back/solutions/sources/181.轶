#include <bits/stdc++.h>

using namespace std;

const int MAXN = 30010;
const int INF = MAXN * 101;
char buf[MAXN];
int ls[MAXN],ll;
struct node
{
	int l[26];
	int end,cnt,dep;
} d[MAXN];
int dp[MAXN][110];
int tt,root;
int T,n,ans,k;

int newnode(int h)
{
	int x = tt;
	tt++;
	memset(d[x].l,-1,sizeof(d[x].l));
	d[x].end = d[x].cnt = 0;
	d[x].dep = h;
	return x;
}

void add(char* s)
{
	int now = root;
	for(int i  = 0;s[i];i++)
	{
		d[now].cnt++;
		if (d[now].l[s[i]-'a'] == -1) d[now].l[s[i]-'a'] = newnode(i+1);
		now =  d[now].l[s[i]-'a'];
	}
	d[now].cnt++;
	d[now].end++;
}

int main()
{
	scanf("%d",&T);
	for(int I = 1;I <= T;I++)
	{
		scanf("%d%d",&n,&k);
		tt = 0;
		ans = 0;
		root = newnode(1);
		d[root].cnt = 1;
		for(int i = 0;i < n;i++)
		{
			scanf("%s",buf);
			add(buf);
		}
		for(int i = tt-1;i >= 0;i--)
		{
			for(int j = 1;j <= k;j++) dp[i][j] = INF;
			dp[i][0] = 0;
			
			for(int j = 0;j < 26;j++) if (d[i].l[j] != -1)
			{
				int x = d[i].l[j];
				for(int q = k;q > 0;q--)
					for(int p = 1;p <= q;p++)
						dp[i][q] = min(dp[i][q],dp[i][q-p] + dp[x][p]);
			}
			if (d[i].end)
			{
				for(int j = k;j > 0;j--) dp[i][j] = min(dp[i][j],dp[i][j-1] + d[i].dep);
			}
			dp[i][1] = min(dp[i][1],d[i].dep);
		}

		printf("Case #%d: %d\n", I,dp[root][k]);
	}
	return 0;
}