#pragma comment(linker, "/STACK:66777216")
#define _CRT_SECURE_NO_WARNINGS
//#include <bits/stdc++.h>
//#include <unordered_set>
//#include <unordered_map>
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <complex>
#include <cstring>
#include <cstdio>
#include <bitset>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(i,n) for(int i = 0; i < (int)(n); ++ i)
#define for1(i,n) for(int i = 1; i <= (int)(n); ++ i)
#define fore(i,a,b) for(int i = (int)(a); i <= (int)(b); ++ i)
#define ford(i,n) for(int i = (int)(n)-1; i >= 0; -- i)
#define ford1(i,n) for(int i = (int)(n); i >= 1; -- i)
#define fored(i,a,b) for(int i = (int)(b); i >= (int)(a);--i)
#define mp make_pair 
#define pb push_back
#define sz(v) ((int)((v).size()))
#define all(v) (v).begin(), (v).end()
#define FOR(i, n) for (int i = 0; i < (n); ++i)
//#define FORE(it,c) for(__typeof(c).begin() it = (c).begin(); it!=(c).end(); ++it)
//#define fi first
//#define se second

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double LD;
typedef long long i64;
typedef unsigned long long u64;
typedef long double ld;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef pair<LL,LL> pll;
typedef vector<pii> vpi;
typedef vector<ld> vd;
typedef pair<ld,ld> pdd;
typedef vector<pdd> vpd;

const int INF = 1000000000;
int n, k;
vector< string > s;
vector< vector< vector<int> > > dp;
vector< vector< vector<int> > > dp2;
vector<int> lcp;
void solve(){
	int T;
	cin>>T;
	for1(tnum, T){
		cout<<"Case #"<<tnum<<": ";
		cin>>n>>k;
		s.clear();
		dp.clear();
		dp2.clear();
		lcp.clear();
		s.resize(n);
		forn(i,n)
			cin>>s[i];
		sort(all(s));
		s.pb("");
		lcp.resize( n+1, 0 );
		
		ford(i,n){
			for(int j = 0; j < sz(s[i]) && j < sz(s[i+1]); ++ j){
				if(s[i][j]!=s[i+1][j])
					break;
				++lcp[i];
			}
		}
		dp.resize(n+1);
		dp2.resize(n+1);
		forn(i,n+1){
			dp[i].resize(s[i].length()+1,vector<int>(k+1,INF));
			dp2[i].resize(s[i].length()+1,vector<int>(k+1,INF));
		}
		dp[n][0][0] = 0;
		dp2[n][0][0] = 0;
		ford(i,n){
			//s[i]
			int f = i+1, e = lcp[i];
			vector<vector<int>> r(s[i].length()+1,vector<int>(k+1,INF));
			vector<vector<int>> r1(s[i].length()+1,vector<int>(k+1,INF));
			vector<vector<int>> r2(s[i].length()+1,vector<int>(k+1,INF));
			while(1){
				forn(j,k)
					r[e][j+1] = dp2[f][e][j];
				if(e==0)
					break;
				for(int j = f; j < n; ++ j){
					if(lcp[j] < e){
						e = min(e,lcp[j]);
						f = j+1;
						break;
					}
				}
			}
			forn(j,k+1){
				int t = sz(s[i])+1;
				forn(e,t){
					r1[e][j] = r[e][j];
					if(e)
						r1[e][j] = min(r1[e][j],r1[e-1][j]);
				}
				ford(e,t){
					r2[e][j] = min(r2[e][j],r1[e][j]+min(e+1,sz(s[i])));
					if(e+1 < t)
						r2[e][j] = min(r2[e][j],r2[e+1][j]);
				}
			}
			forn(e,sz(s[i])+1){
				forn(j,k+1){
					dp[i][e][j] = r2[e][j];
				}
			}
			forn(j,k+1){
				forn(e,sz(s[i])+1){
					dp2[i][e][j] = dp[i][e][j];
					if(e <= lcp[i])
						dp2[i][e][j] = min(dp2[i][e][j],dp2[i+1][e][j]);
				}
			}
		}
		cout<<dp2[0][0][k]<<endl;
	}
}

void testgen(){
	FILE * f = fopen("input.txt", "w");
	int T = 10;
//	srand(time(NULL));
//	fprintf(f, "%d\n", n);

	fclose(f);
}
int main() {
#ifdef LOCAL
//	testgen();
	freopen("autocomplete_strikes_back.txt", "r", stdin);
//	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
#define task ""
//	freopen(task".in", "r", stdin);
//	freopen(task".out", "w", stdout);
#endif

	cout<<fixed;
	cout.precision(15);
	cerr<<fixed;
	cerr.precision(12);

	solve();

#ifdef LOCAL
	cerr<<"Execution time = "<<clock()/1000.0<<"ms\n";
#endif
	return 0;
}