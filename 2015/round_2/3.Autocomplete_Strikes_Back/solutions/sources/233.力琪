#include <queue>
#include <cstdio>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>
#define N 20007
#define M 107
#define LL long long
using namespace std;
int a[N][26],num[N],cnt;
bool ok[N];
LL dp[N][M];
char str[N];
int K;
void dfs(int x)
{
    int y;
    dp[x][0]=0;
    if (ok[x]) dp[x][1]=0;
    for (int k=0;k<26;++k)
        if ((y=a[x][k])!=0)
        {
            dfs(y);
            for (int j=min(K,num[x]);j>=1;--j)
            {
                for (int i=1;i<=K&&i<=num[y]&&i<=j;++i)
                    dp[x][j]=min(dp[x][j],dp[x][j-i]+dp[y][i]+i);
            }
        }
    dp[x][1]=0;
}
int main()
{
    int size = 256 << 20; // 256MB
    char *p = (char*)malloc(size) + size;
    __asm__("movl %0, %%esp\n" :: "r"(p));

    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int cas,run=0,n;
    scanf("%d",&cas);
    while (cas--)
    {
        scanf("%d%d",&n,&K);
        cnt=0;
        for (int i=0;i<26;++i) a[0][i]=0;
        memset(num,0,sizeof num);
        memset(dp,0x3f,sizeof dp);
        memset(ok,0,sizeof ok);
        for (int i=0;i<n;++i)
        {
            scanf("%s",str);
            int rt=0;
            for (int j=0;str[j];++j)
            {
                ++num[rt];
                int t=str[j]-'a';
                if (a[rt][t]==0)
                {
                    a[rt][t]=++cnt;
                    for (int k=0;k<26;++k)
                        a[cnt][k]=0;
                }
                rt=a[rt][t];
            }
            ok[rt]=true;
            ++num[rt];
        }
        dfs(0);
        dp[0][1]=1;
        printf("Case #%d: %I64d\n",++run,dp[0][K]);
    }
    return 0;
}

