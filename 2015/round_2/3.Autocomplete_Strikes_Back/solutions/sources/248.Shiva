#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define LL long long
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define MOD 1000000007
#define INF 1000000007

#define SQ 1000
#define N 10001000

int n;
int a[512345][30], dp[512345][30], arr[110];
int cnt = 0, isit[512345];
string s;

inline int inse(int idx, int node){
    if(idx == s.length()) {
        isit[node] = 1;
        return 0;
    }
    if(a[node][ s[idx] - 'a'] == -1){
        cnt++;
        a[node][s[idx] - 'a'] = cnt;
    }
    inse(idx + 1, a[node][s[idx] - 'a']);
    return 0;
}

inline int make(int node){
    int bv = 0, i, ch, j, k;
    for(i = 0; i < 26; i++){
        if(a[node][i] != -1){
            make(a[node][i]);
        }
    }

    for(j = 0; j <= 100; j++){
        dp[node][j] = INF;
    }
    dp[node][0] = 0;

        for(i = 0; i < 26; i++){
            if(a[node][i] != -1){
                ch = a[node][i];
                for(j = 0;j <= 100; j++){
                    arr[j] = INF;
                }
                for(j = 0; j <= 100; j++){
                    if(dp[ch][j] == INF) break;
                    for(k = 0; (j + k) <= 100; k++){
                        if(dp[node][k] == INF) break;
                        arr[j + k] = min(arr[j + k], dp[ch][j] + dp[node][k]);
                    }
                }
            }
            for(k = 0; k <= 100; k++)
                dp[node][k] = arr[k];

        }

    if(isit[node] == 1){
        for(i = 100; i > 0; i--){
            dp[node][i] = dp[node][i - 1];
        }
    }
    dp[node][1] = 0;

    for(i = 1; i <= k; i++){
        dp[node][i] += i;
    }
}

int solve(){
    int n, k, i, ch, j;
    cin>>n>>k;
    cnt = 0;
    memset(a, -1, sizeof(a));
    memset(isit, 0, sizeof(isit));

    for(i = 1; i <= n; i++){
        cin>>s;
        inse(0, 0);
    }

    if(k == 1){
        cout<<1<<endl;
        return 0;
    }

    make(0);
    cout<<dp[0][k] - k<<endl;
}

int main(){
    freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    LL t = 1, o = 1;
    cin>>t;
    while(t--){
        cout<<"Case #"<<o<<": ";
        solve();
        o++;
    }
    return 0;
}

