#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

const int N = 20005;
const int oo = 0x1f1f1f1f;
bool hav[N];
int dp[N][105], g[N][105];
int n,k;
int ch[N][26];
struct Trie{
  int sz;
  void init(){
    memset(hav,0,sizeof(hav));
    memset(ch[0],0,sizeof(ch[0]));
    sz=1;
  }

  void insert(char* s){
    int nid=0;
    for(;*s;++s){
      int id=*s-'a';
      if(!ch[nid][id]){
        memset(ch[sz],0,sizeof(ch[sz]));
        ch[nid][id]=sz++;
      }
      nid=ch[nid][id];
    }
    hav[nid]=true;
  }

} trie;

int deep;
void dfs(int u){
  ++deep;

  int bonus;
  bonus=deep;
  g[u][0]=0;
  dp[u][0]=0;
  if(hav[u]) dp[u][1]=bonus;

  for(int i=0;i<26;++i){
    int v=ch[u][i];
    if(v==0) continue;
    dfs(v);
    for(int p=k;p>=1;--p) for(int p1=1;p1<=p;++p1){
      dp[u][p]=min(dp[u][p], dp[u][p-p1]+(p1==1?bonus+1:g[v][p1]));
      g[u][p]=min(g[u][p], g[u][p-p1]+ (p1==1?bonus+1:g[v][p1]));
    }
  }
  if(g[u][1]!=oo)
  g[u][1]=bonus;
  if(hav[u]){
    for(int p=0;p<=k;++p) g[u][p]=min(g[u][p], dp[u][p]);
  }
  --deep;
}


char s[N];
int main(){
  freopen("1.txt","r",stdin);
  freopen("2.txt","w",stdout);
  int tt, i;
  scanf("%d",&tt);
  for(int cas=1;cas<=tt;++cas){
    trie.init();
    scanf("%d%d",&n,&k);
    for(i=1;i<=n;++i){
      scanf("%s",s);
      trie.insert(s);
    }
    memset(dp,0x1f, sizeof(dp));
    memset(g,0x1f,sizeof(g));
    deep=-1, dfs(0);
    printf("Case #%d: %d\n", cas, g[0][k]);
  }
  return 0;
}
