#include <cstdio>
#include <string>
#include <algorithm>
using namespace std;

const int L = 20005;

struct Node {
    int next[27], fa, wc;
    void clear(int _fa) {
		fa = _fa;
		wc = 0;
        memset(next, 0, sizeof(next));
    }
} node[L];

int n, k, tot, f[L][105];
char s[L];

void insert() {
    int l = strlen(s), x = 0;
    for (int i = 0; i < l; ++i) {
        int c = s[i] - 'a';
        if (!node[x].next[c]) {
            node[tot].clear(x);
			f[tot][0] = 0;
            node[x].next[c] = tot++;
        }
        x = node[x].next[c];
		node[x].wc++;
    }
	f[x][1] = 0;
}

void init() {
	memset(f, 0x3f, sizeof(f));
	tot = 1;
	node[0].clear(-1);
	f[0][0] = 0;
}

int gao() {
	for (int x = tot - 1; x > 0; --x) {
		f[x][1] = 0;
		int p = node[x].fa;
		for (int i = k; i >= 0; --i) {
			for (int j = 1; i + j <= k && j <= node[x].wc; ++j) {
				f[p][i + j] = min(f[p][i + j], f[p][i] + f[x][j] + j);
			}
		}
	}
	return f[0][k];
}

int main() {
    int T; scanf("%d", &T);
    for (int cas = 1; cas <= T; ++cas) {
		init();
        scanf("%d%d", &n, &k);
        for (int i = 0; i < n; ++i) {
            scanf("%s", s);
            insert();
        }
        printf("Case #%d: %d\n", cas, gao());
    }
}
