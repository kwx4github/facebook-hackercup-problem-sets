program problemAutocomlete;
uses math;

type	tTrieNode =	record
						next: array[ 'a'..'z' ] of longInt;
						isWord: boolean;
					end;
					
var	t: array[ 1..20000 ] of tTrieNode;
	dp: array[ 1..20000, 0..100 ] of longInt;
	g: array[ 0..100 ] of longInt;
	tw, k: longInt;

procedure f( const s: ansistring );
var	i, len, v: longInt;
begin
	len := length(s);
	v := 1;
	for i := 1 to len do
	begin
		if ( t[v].next[ s[i] ] = 0 ) then
		begin
			inc( tw );
			t[v].next[ s[i] ] := tw;
		end;
		
		v := t[v].next[ s[i] ];
	end;
	
	t[v].isWord := true;
end;

procedure dfs( v: longInt );
var	i, j, u: longInt;
	c: char;
begin
	dp[v][0] := 0;
	for i := 1 to k do
		dp[v][i] := 1000000;
	
	if ( t[v].isWord ) then
		dp[v][1] := 0;
	
	for c := 'a' to 'z' do
		if ( t[v].next[c] <> 0 ) then
		begin
			u := t[v].next[c];
			
			dfs( u );
		
			for i := 0 to k do
				g[i] := dp[v][i];
			
			for i := 0 to k do
				for j := 0 to k - i do
					dp[v][i + j] := min( dp[v][i + j], g[i] + dp[u][j] );
		end;
	
	dp[v][1] := 0;
	for i := 0 to k do
		dp[v][i] := dp[v][i] + i;
end;

var	ttt, tt, n, i: longInt;
	s: ansistring;

begin
	readln( tt );
	for ttt := 1 to tt do
	begin
		fillchar( t, sizeOf(t), 0 );
		tw := 1;
		
		readln( n, k );
		for i := 1 to n do
		begin
			readln( s );
			
			f( s );
		end;
		
		dfs( 1 );
		
		writeln( 'Case #', ttt, ': ', dp[1][k] - k );
	end;
end.
