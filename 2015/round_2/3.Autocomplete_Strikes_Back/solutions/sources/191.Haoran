#include <bits/stdc++.h>

#define INF 0x3f3f3f3f

using namespace std;

int trie[20020][26];
int f[20020][110];
bool word[20020];
char s[20020];
int k;

void dfs(int u, char ch)
{
	int v;
	for (int i = 0; i < 26; i++)
		if (v = trie[u][i])
		{
			dfs(v, 'a' + i);
			for (int g = k; g > 0; g--)
				for (int h = 1; h <= g; h++)
					f[u][g] = min(f[u][g], f[u][g - h] + f[v][h] + (u == 0 ? 0 : h));
		}
	if (word[u])
		for (int i = k; i > 0; i--)
			f[u][i] = min(f[u][i], f[u][i - 1] + 1);
	f[u][1] = 1;
}

int main()
{
	freopen("C.in", "r", stdin);
	freopen("C.txt", "w", stdout);
	int ttt;
	scanf("%d", &ttt);
	for (int tt = 1; tt <= ttt; tt++)
	{
		int tot = 1;
		memset(trie, 0, sizeof(trie));
		memset(word, 0, sizeof(word));

		int n;
		scanf("%d %d", &n, &k);
		for (int i = 0; i < n; i++)
		{
			scanf("%s", s);
			int now = 0;
			for (int j = 0; s[j]; j++)
			{
				int x = s[j] - 'a';
				if (trie[now][x])
					now = trie[now][x];
				else
					now = (trie[now][x] = tot++);
			}
			word[now] = true;
		}
		for (int i = 0; i < tot; i++)
			for (int j = 1; j <= k; j++)
				f[i][j] = INF;
		dfs(0, 96);
		printf("Case #%d: %d\n", tt, f[0][k]);
	}
	return 0;
}