#include <string>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <cstring>
#include <numeric>
using namespace std;
typedef long long ll;
#define F0(i,n) for (int i = 0; i < n; i++)
#define F1(i,n) for (int i = 1; i <= n; i++)
#define CL(a,x) memset(x, a, sizeof(x));
#define SZ(x) ((int)x.size())
const double eps = 1e-10;
const int inf = 1000000009;
int i, j, k, m, n, l;
const int N = 40005;
int ans;

int nx[26][N], fin[N], hn, dp[101][N];

void go(int h)
{
	F1(i, k + 1) dp[i][h] = inf;
	if (fin[h]) dp[1][h] = 0;
	F0(i, 26) if (nx[i][h] != -1)
	{
		int j = nx[i][h];
		go(j);
		for (int k1 = k; k1 >= 0; k1--) {
			for (int k2 = 1; k1+k2 <= k; k2++) if (dp[k2][j] < inf)
			{
				dp[k1 + k2][h] = min(dp[k1 + k2][h], dp[k1][h] + dp[k2][j] + k2);
			}
		}
	}
	if (h != 0) dp[1][h] = 0;
	//cout << h << "     ";
	//F1(i, k) cout << dp[i][h] << " "; cout << endl;
}

int main() {
	freopen("c.in", "r", stdin);
	freopen("c.txt", "w", stdout);
	int tn; cin >> tn; F1(tt, tn) 
	{
		cin >> n >> k;
		CL(-1, nx); CL(0, fin); hn = 0;
		while (n--)
		{
			string s;
			cin >> s;
			int h = 0;
			F0(i, SZ(s))
			{
				int j = s[i] - 'a';
				if (nx[j][h] == -1) nx[j][h] = ++hn;
				h = nx[j][h];
			}
			fin[h] = 1;
		}
		go(0);

		cout << "Case #" << tt << ": ";
		ans = dp[k][0];
		cout << ans << endl;
	}
	return 0;
}
