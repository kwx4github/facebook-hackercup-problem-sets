#include <bits/stdc++.h>
using namespace std;

#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define pb push_back
#define f(i,x,y) for(int i = x; i<y; i++ )
#define FORV(it,A) for(vector<int>::iterator it = A.begin(); it!= A.end(); it++)
#define FORS(it,A) for(set<int>::iterator it = A.begin(); it!= A.end(); it++)
#define quad(x) (x) * (x)
#define mp make_pair
#define clr(x, y) memset(x, y, sizeof x)
#define fst first
#define snd second
typedef pair<int, int> pii;
typedef long long ll;
typedef long double ld;
#define C 26
#define inf 10000000
#define N 51000
int topo;
int s[N][C];
int pd[N][C+1][128];
int term[N];
int sz[N];

void insert (string ss){
	int at = 0;
	sz[0]++;
	f (i, 0, ss.size()){
		int c = ss[i]-'a';
		if (s[at][c] == -1) s[at][c] = topo++;
		sz[s[at][c]]++;
		at = s[at][c];
	}
	term[at] = 1;
}

int solve (int v, int l, int d, int k){
	if (k == 0) return 0;
	if (v == -1) return inf;
	if (l == 26) return inf;
	if (l == 0){
		if (k > sz[v]) return inf;
		if (k == 1) return d;
	}
///	printf("chegou\n");
	int no = s[v][l];
	int& ret = pd[v][l][k];
	if (ret != -1) return ret;
	ret = inf;
	int sum = 0;
	if (term[v] && l == 0){
		k--; sum = d;
	}
	for (int i = 0; i <= min(k,sz[no]); i++){
//		printf("Oo l = %d\n", l);
		ret = min(ret, solve(no, 0, d+1, i) + solve(v, l+1, d, k-i));
		ret = min(ret, inf);
	}
	return ret = ret+sum;
}

int go (){
	topo = 1, clr (s, -1), clr (term, 0), clr (pd, -1), clr (sz, 0);
	int n, k;
	cin >> n >> k;
	f (i, 0, n){
		string ss; cin >> ss;
		insert(ss);
	}
	if (k == 1) return 1;
	return solve (0, 0, 0, k); 
}

int main (){
	int t; cin >> t;
	f (tt, 1, t+1){
		printf("Case #%d: ", tt);
		cout << go() << endl;
	}
	return 0;
}


