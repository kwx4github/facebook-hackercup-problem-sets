#pragma comment(linker, "/STACK:134217728")

#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <stack>
#include <queue>
#include <functional>
#include <numeric>
#include <memory.h>

using namespace std;

typedef long long LL;

int T, N = 0;

int Next[1 << 15][26];
int c[1 << 15], end[1 << 15];
int dp[1 << 15][110];
vector<int> to[1 << 15];
int n, k;

char buf[1 << 15];

int dfs(int x)
{
	c[x] += end[x];
	for(int i = 0; i < 26; ++i)
		if (Next[x][i] != -1)
			c[x] += dfs(Next[x][i]);
	return c[x];
}

void go(int x)
{
	for(int i = 0; i < 26; ++i)
		if (Next[x][i] != -1)
		{
			to[x].push_back(Next[x][i]);
			go(Next[x][i]);
		}
	int s = 0;
	dp[x][0] = 0;
	for(int i = 1; i <= k; ++i)
		dp[x][i] = (int)1e9;
	for(int i = (int)to[x].size() - 1; i >= 0; --i)
	{
		for(int j = s; j >= 0; --j)
			for(int sz = 0; sz <= min(k, c[to[x][i]]); ++sz)
				dp[x][j + sz] = min(dp[x][j + sz], dp[x][j] + dp[to[x][i]][sz] + sz);
		s += c[to[x][i]];
	}
	if (end[x])
		for(int i = k; i >= 1; --i)
			dp[x][i] = min(dp[x][i - 1], dp[x][i]);
	if (x > 0)
		dp[x][1] = 0;
}

int main()
{
#ifndef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	scanf("%d", &T);
	for(int I = 1; I <= T; ++I)
	{
		for(int i = 0; i < 1 << 15; ++i)
		{
			memset(Next[i], -1, sizeof(Next[i]));
			to[i].clear();
		}
		memset(c, 0, sizeof(c));
		memset(end, 0, sizeof(end));
		N = 1;
		scanf("%d%d", &n, &k);
		for(int i = 0; i < n; ++i)
		{
			scanf("%s", buf);
			int cur = 0;
			for(int i = 0; buf[i]; ++i)
			{
				if (Next[cur][buf[i] - 'a'] == -1)
					Next[cur][buf[i] - 'a'] = N++;
				cur = Next[cur][buf[i] - 'a'];
			}
			end[cur] = 1;
		}
		dfs(0);
		go(0);
		printf("Case #%d: %d\n", I, dp[0][k]);
	}
	return 0;
}