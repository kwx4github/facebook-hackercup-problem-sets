#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const int N = 100000;

int n;
int m;
int trie[N][26];
int res[N][101];
int fin[N];
int cnt[N];
int len[N];
int cur[101];
int o;

int add (string s) {
	int x = 0;
	for (int i = 0; i < sz (s); i++) {
		cnt[x]++;
		if (trie[x][s[i] - 'a'] == 0) {
			len[o] = len[x] + 1;
			trie[x][s[i] - 'a'] = o++;
		}	
		x = trie[x][s[i] - 'a'];
	}
	cnt[x]++;
	fin[x] = 1;
	re 0;
}

int go (int x) {
	vi v;
	for (int i = 0; i < 26; i++)
		if (trie[x][i]) {
			go (trie[x][i]);
			v.pb (trie[x][i]);
		}
	for (int i = 0; i <= m; i++)
		cur[i] = 1e8;
	cur[0] = 0;
	for (int i = 0; i < sz (v); i++) {
		int y = v[i];
		for (int j = m - 1; j >= 0; j--)
			for (int k = 1; j + k <= m && k <= cnt[y]; k++)
				cur[j + k] = min (cur[j + k], cur[j] + res[y][k]);
	}
	if (len[x] > 0) {
		if (fin[x])
			for (int i = m - 1; i >= 0; i--)
				cur[i + 1] = min (cur[i + 1], cur[i] + len[x]);
		cur[1] = min (cur[1], len[x]);
	}
	for (int i = 0; i <= m; i++)
		res[x][i] = cur[i];
	re 0;
}

int main () {
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
		cin >> n >> m;
		o = 1;
		len[0] = 0;
		memset (trie, 0, sizeof (trie));
		memset (res, 0, sizeof (res));
		memset (fin, 0, sizeof (fin));
		memset (cnt, 0, sizeof (cnt));
		for (int i = 0; i < n; i++) {
			string s;
			cin >> s;
			add (s);
		}
		go (0);
		cout << "Case #" << it << ": " << res[0][m];
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
	}
	return 0;
}