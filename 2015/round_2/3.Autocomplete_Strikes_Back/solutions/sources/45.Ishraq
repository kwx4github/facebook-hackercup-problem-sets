#include <bits/stdc++.h>

#define FO(i,a,b) for (int i = (a); i < (b); i++)
#define sz(v) int(v.size())

using namespace std;

int nxt[100005][27];
int cache[30005][27][105];
int val[100005];
int cn;

int gn() {
    memset(nxt[cn], -1, sizeof(nxt[cn]));
    val[cn] = 0;
    return cn++;
}

void insert(char *s) {
    int i = 0;
    for (int j = 0; s[j]; j++) {
        int p = s[j]-'a';
        if (s[j] == '$') p = 26;
        if (nxt[i][p] == -1) {
            nxt[i][p] = gn();
        }
        i = nxt[i][p];
        if (s[j] == '$') val[i] = j;
        else val[i] = j+1;
    }
}

int dp(int i, int w, int k) {
    if (k == 0) return 0;
    if (i == -1) return 1e8;
    if (w == 27) return 1e8;
    if (cache[i][w][k] != -1) return cache[i][w][k];

    int &res = cache[i][w][k] = 1e8;
    if (w == 0 && k == 1) res = val[i];
    if (nxt[i][w] == -1) res = min(res,dp(i,w+1,k));
    else {
        FO(kk,0,k+1) res = min(res, dp(nxt[i][w], 0, kk) + dp(i,w+1,k-kk));
    }

    return res;
}

char buf[2000005];

int main() {
    int T; scanf("%d", &T);
    FO(Z,1,T+1) {
        memset(cache, -1, sizeof cache);

        cn = 0; gn();
        int n, k; scanf("%d %d", &n, &k);
        FO(i,0,n) {
            scanf(" %s", buf);
            char *l = buf+strlen(buf);
            *l++ = '$';
            *l++ = 0;
            insert(buf);
        }
        val[0] = 1e8;
        int res = dp(0,0,k);
        printf("Case #%d: %d\n", Z, res);
    }
}

