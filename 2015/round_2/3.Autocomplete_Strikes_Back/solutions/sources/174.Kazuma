#include <bits/stdc++.h>
using namespace std;


int putcase(){
	static int a = 1;
	cout << "Case #" << a++ << ": ";
}

struct Trie{
	Trie *next[26];
	int have;
	Trie(){
		have = 0;
		for(int i = 0 ; i < 26 ; i++) next[i] = 0;
	}	
};
int add(Trie *r,string s){
	int w = 0;
	for(int i = 0 ; i < s.size() ; i++){
		int c = s[i] - 'a';
		if( r->next[c] ){
			w++;	
		}else{
			r->next[c] = new Trie();
		}
		r = r->next[c];
	}
	assert( r->have == 0 );
	r->have = 1;
	return min<int>(s.size(),w+1);
}

int dp[20010][110];

int tmp2[210];

map<Trie*,int> dic;

int get(Trie *x){
	if( dic.count(x) ) return dic[x];
	int k = dic.size();
	return dic[x] = k;
}
// check stackoverflow!!!!
int dfs(Trie *r){
	int id = get(r);
	for(int i = 0 ; i < 26 ; i++){
		if( r->next[i] ){
			dfs(r->next[i]);
		}	
	}

	int *mydp = dp[get(r)];
	
	for(int i = 0 ; i < 110 ; i++)
		mydp[i] = 1e9;
	mydp[0] = 0;
	int *tmp = tmp2;
	for(int i = 0 ; i < 26 ; i++){
		if( r->next[i] == 0 ) continue;
		int *herdp = dp[get(r->next[i])];
		for(int j = 0 ; j < 110 ; j++) tmp[j] = mydp[j];

		for(int j = 0 ; j <= 100 ; j++){
			if( herdp[j] == 1e9 ) continue;
			for(int k = 100 ; k >= j ; k--){
				mydp[k] = min(mydp[k],tmp[k-j]+herdp[j]+(j>1?j:0));
			}
		}
	}
	if(r->have){
		for(int i = 100 ; i >= 1 ; i--)
			mydp[i] = min(mydp[i],mydp[i-1] + (i<2));
	}
	/*cout << get(r) << endl;
	for(int i = 0 ; i < 110 ; i++)
		if(mydp[i]!=1e9)
			cout << i << " " << mydp[i] << endl;
	*/
}
int main(){
	int T;
	cin >> T;
	while(T--){
		int N;
		cin >> N;
		int M;
		cin >> M;
		Trie *r = new Trie();
		int res = 0;
		dic.clear();
		
		while(N--){
			string t;
			cin >> t;
			
			add(r,t);	
		}
		putcase();
		dfs(r);
		cout << dp[get(r)][M] << endl;
	}
}
