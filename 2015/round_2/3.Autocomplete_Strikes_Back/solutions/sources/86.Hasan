#include <iostream>
#include <time.h>
#include <stdlib.h>
#include <stdio.h>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <string.h>
#include <cmath>
#include <memory.h>
#include <algorithm>
using namespace std;
typedef long long ll;
vector<vector<int> > v;
vector<bool> e;
vector<int> f;
int n, k;
char s[20001];
void insert(){
	int cur = 0;
	++f[cur];
	for (int i = 0; s[i]; ++i){
		if (v[cur][s[i] - 'a'] == -1){
			v[cur][s[i] - 'a'] = v.size();
			v.push_back(vector<int>(26, -1));
			e.push_back(false);
			f.push_back(0);
		}
		cur = v[cur][s[i] - 'a'];
		++f[cur];
	}
	e[cur] = true;
}
int dp[20001][101][26];
int calc(int u, int k, int i){
	if (k == 0)
		return 0;
	if (i == 26 || f[u]<k)
		return 1 << 28;
	if (u != 0 && k == 1 && i == 0)
		return 0;
	int &ret = dp[u][k][i];
	if (ret != -1)
		return ret;
	ret = 1<<29;
	if (u && e[u] && k && i == 0)
		--k;
	if (v[u][i] == -1)
		ret = calc(u, k, i + 1);
	else for (int j = 0; j <= k; ++j)
		ret = min(ret, j + calc(v[u][i], j, 0) + calc(u, k - j, i + 1));
	return ret;
}
int main()
{
	freopen("C.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int t;
	scanf("%d", &t);
	for (int T = 1; T <= t; ++T){
		printf("Case #%d: ", T);
		v.clear();
		e.clear();
		f.clear();
		v.push_back(vector<int>(26, -1));
		e.push_back(false);
		f.push_back(0);
		scanf("%d%d", &n, &k);
		for (int i = 0; i < n; ++i){
			scanf("%s", s);
			insert();
		}
		memset(dp, -1, sizeof(dp));
		printf("%d\n", calc(0, k, 0));
	}
	return 0;
}