#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define fi first
#define se second
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

struct node {
	node *go[26];
	int dp[110];
	int sz;
}pool[20100],*cur=pool,*rt;
int n,k,_,dp[2010];
char s[20100];
node* newnode() {
	node *p=cur++; p->sz=0;
	memset(p->go,0,sizeof(p->go));
	memset(p->dp,0x20,sizeof(p->dp));
	return p;
}
void dfs(node *p,int dep) {
	bool ff=p->sz;
	rep(i,0,26) if (p->go[i]) {
		dfs(p->go[i],dep+1);
		p->sz+=p->go[i]->sz;
	}
	p->dp[0]=0;
	rep(i,0,26) if (p->go[i]) {		
		rep(j,0,101) dp[j]=0x20202020;
		per(j,0,101) per(k,0,101-j) 
			dp[j+k]=min(dp[j+k],p->go[i]->dp[j]+p->dp[k]);
		rep(j,0,101) p->dp[j]=min(p->dp[j],dp[j]);
	}
	if (ff) {
		rep(j,0,101) dp[j]=0x20202020;
		per(j,0,101) dp[j+1]=min(dp[j+1],dep+p->dp[j]);
		rep(j,0,101) p->dp[j]=min(p->dp[j],dp[j]);
	}
	if (p->sz) p->dp[1]=dep;
}
void gao() {
	cur=pool;
	rt=newnode();
	scanf("%d%d",&n,&k);
	rep(i,0,n) {
		scanf("%s",s);
		int l=strlen(s);
		node *p=rt;
		rep(j,0,l) {
			int w=s[j]-'a';
			if (!p->go[w]) p->go[w]=newnode();
			p=p->go[w];
		}
		p->sz++;
	}
	if (k==1) {
		puts("1");
		return;
	}
	dfs(rt,0);
	printf("%d\n",rt->dp[k]);
}
int main() {
//	freopen("C.in","r",stdin);
	scanf("%d",&_);
	rep(i,1,_+1) {
		printf("Case #%d: ",i);
		gao();
	}
}
