#include<bits/stdc++.h>
using namespace std;
struct node{
	node* go[26];bool e;
};
node root[20480],*mem;
int f[20480][104],K;

void add(){
	string s;cin >> s;
	node* now=root;
	for(char ch:s){
		int c=ch-'a';
		if(!now->go[c])now->go[c]=++mem;
		now=now->go[c];
	}
	now->e=true;
}
void dfs(node* now=root,int h=0/*,string s=""*/){
	int *f=::f[now-root];
	fill(f+1,f+K+1,65536);
	if(now->e)f[1]=h;
	for(int i=0;i<26;++i)if(now->go[i]){
		dfs(now->go[i],h+1/*,s+char(i+'a')*/);
		int* g=::f[now->go[i]-root];
		for(int j=K;j>=1;--j)
			for(int k=1;k<=j;++k)
				f[j]=min(f[j],f[j-k]+g[k]);
	}
	if(h)f[1]=h;
	//cerr << s << "\t: ";
	//for(int i=1;i<=K;++i)cerr << f[i] <<" ";cerr << endl;
}
int sol(){
	int n;cin >> n>>K;
	memset(mem=root,0,sizeof(root));
	for(int i=0;i<n;++i)add();
	dfs();
	return f[0][K];
}
int main(){
	int T;
	cin >> T;
	for(int i=1;i<=T;++i){
		cerr << "Case" << i << "...." << endl;
		cout << "Case #"<<i<<": " << sol() << endl;
	}
}
