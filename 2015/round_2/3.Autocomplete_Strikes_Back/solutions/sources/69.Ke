#include <cstdio>
#include <cmath>
#include <iostream>
using namespace std;
int cases, n, m;
int t[30020][26], tt;
int f[30020][101];
int c[30020];
char s[30020];

void ins(char *s) {
	int p = 0;
	for (; *s; s++) {
		if (t[p][*s - 'a'] == 0) {
			t[p][*s - 'a'] = ++tt;
		}
		p = t[p][*s - 'a'];
	}
	c[p]++;
}

void dfs(int x) {
	f[x][0] = 0;
	if (c[x] == 1) {
		f[x][1] = 0;
	}
	for (int i = 0; i < 26; i++) {
		if (t[x][i] != 0) {
			int g[101];
			memset(g, 0x3f, sizeof g);
			dfs(t[x][i]);
			for (int j = 0; j <= m; j++) {
				for (int k = j; k <= m; k++) {
					g[k] = min(g[k], f[x][k - j] + f[t[x][i]][j] + j);
				}
			}
			memcpy(f[x], g, sizeof g);
		}
	}
	f[x][1] = 0;
//	printf("%d %d %d %d %d\n", f[x][0], f[x][1], f[x][2], f[x][3], f[x][4]);
}
int main() {
	scanf("%d", &cases);
	for (int casess = 1; casess <= cases; casess++) {
		memset(t, 0, sizeof t);
		memset(c, 0, sizeof c);
		memset(f, 0x3f, sizeof f);
		tt = 0;
		scanf("%d%d", &n, &m);
		for (int i = 0; i < n; i++) {
			scanf("%s", s);
			ins(s);
		}
		
		dfs(0);

		printf("Case #%d: %d\n", casess, f[0][m]);
	}
	return 0;
}