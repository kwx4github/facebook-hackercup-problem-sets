// .... .... .....!
// ...... ......!
// .... ....... ..... ..!

#include<bits/stdc++.h>
using namespace std;

#define rep(i, n) for (int i = 0, _n = (int)(n); i < _n; i++)
#define fer(i, x, n) for (int i = (int)(x), _n = (int)(n); i < _n; i++)
#define rof(i, n, x) for (int i = (int)(n), _x = (int)(x); i-- > _x; )
#define sz(x) (int((x).size()))
#define pb push_back
#define all(X) (X).begin(),(X).end()
#define X first
#define Y second

template<class P, class Q> inline void smin(P &a, Q b) { if (b < a) a = b; }
template<class P, class Q> inline void smax(P &a, Q b) { if (a < b) a = b; }

typedef long long ll;
typedef pair<int, int> pii;

////////////////////////////////////////////////////////////////////////////////

const int maxn = 4000 + 100;
const int maxk = 100 + 10;

int n, k;
string s[maxn];
int d[maxn];

vector<int> calc(int a, int b, int mn = 0) {
	if(b - a == 1) return vector<int>({0, min(mn + 1, sz(s[a]))});

	int md = a;
	fer(i, a, b-1) if(d[i] < d[md]) md = i;

	vector<int> p = calc(a, md+1, d[md]);
	vector<int> q = calc(md+1, b, d[md]);

	vector<int> v(min(b-a+1, maxk), 1<<29);

	rep(i, sz(v)) {
		rep(l, i+1) {
			int r = i - l;
			if(l >= sz(p) || r >= sz(q)) continue;
			smin(v[i], p[l] + q[r]);
		}
	}
	v[0] = 0;
	v[1] = min(mn + 1, min(p[1], q[1]));
//	cerr << " >>> " << a << ' ' << b << " : " << endl;
//	rep(i, sz(v)) cerr << " ^^^^^ " << i << " : " << v[i] << endl;
	return v;
}

void run() {
	cin >> n >> k;
	rep(i, n) cin >> s[i];
	sort(s, s+n);
//	cerr << endl; rep(i, n) cerr << "~~ " << i << " : " << s[i] << endl;
	rep(i, n-1) {
		d[i] = 0;
		while(d[i] < min(sz(s[i]), sz(s[i+1])) && s[i][d[i]] == s[i+1][d[i]])
			d[i]++;
	}

	cout << calc(0, n)[k] << endl;
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);

	int ttt; cin >> ttt;
	fer(ttc, 1, ttt+1) {
		cout << "Case #" << ttc << ": ";
		run();
	}

	return 0;
}

