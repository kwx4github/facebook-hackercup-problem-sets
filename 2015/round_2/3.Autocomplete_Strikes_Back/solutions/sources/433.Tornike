
/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//std::ios_base::sync_with_stdio (false);

#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <iomanip>
#include <map>
#include <assert.h>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>
#include <deque>
#include <fstream>
#include <bitset>

#define endl '\n'
#define deb(x) cout << "> " << #x << " : " << (x) << endl;
#define EPS 0.0000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF ((1<<30)-1)
#define pb push_back
#define mp make_pair
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int , int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector < int >
#define DID (long long)
#define ll long long
#define AL(a) (a).begin(),(a).end()
#define INFF DID INF*INF
#define debug 1

using namespace std;

const int N = 20005;
const int K = 105;

ll dp[N][K];
int isleaf[N];
int passedhere[N];
int g[N][K];
int NUM;
int n,k;
ll A[N];

void renull(){
    for (int i=0;i<N;i++)
        for (int j=0;j<K;j++)
        dp[i][j]=(ll)1e18;
    memset(isleaf,0,sizeof(isleaf));
    memset(passedhere,0,sizeof(passedhere));
    memset(g,-1,sizeof(g));
    NUM = 0;
}

void DFS(int v){
    dp[v][0]=0;
    if (isleaf[v]==1)
        dp[v][1]=0;

    for (int i = 0;i<26;i++){
        int to = g[v][i];
        if (to==-1)
            continue;
   //     cout<<(char)(i+'a')<<endl;
        DFS(to);
        for (int x=0;x<=k;x++)
            A[x]=dp[v][x];

        for (int x = 0; x<=k; x++){
            ll ans = dp[to][x];
    //        cout<<to<<" "<<ans<<" "<<x<<endl;
            for (int y = k-x;y>=0;y--){
                A[y+x]=MN(A[y+x],dp[v][y]+ans+x);
            }
        }

        for (int x=0;x<=k;x++)
            dp[v][x]=A[x];
   //     cout<<(char)(i+'a')<<"<"<<endl;
    }
    if (v)
        dp[v][1]=0;
  //  cout<<v<<" "<<dp[v][1]<<" "<<dp[v][2]<<" "<<dp[v][3]<<" "<<dp[v][4]<<" "<<dp[v][5]<<endl;
}

int main(){
    #ifndef ONLINE_JUDGE
        freopen("text.in","r",stdin);  freopen("text.out","w",stdout);
    #endif

    int t;
    scanf("%d\n",&t);
    int tt = t;

    while (t--){
        renull();
        scanf("%d %d\n",&n,&k);
        for (int i=0;i<n;i++){
            int pos = 0;
            while (1){
                char ch = getchar();
                if (ch == '\n'){
                    isleaf[pos]=1;
                    break;
                }
                int to = ch - 'a';
                if (g[pos][to]==-1){
                    g[pos][to]=++NUM;
                }
                pos = g[pos][to];
                passedhere[pos]++;
            }
        }

        DFS(0);
        cout<<"Case #"<<tt-t<<": "<<(ll)dp[0][k]<<endl;
    }

}
