#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <algorithm>
using namespace std;

const int INF = 1000000007;

class TrieGraph {
public:
    static const int SIZE = 20005;
    static const int LEAF = 26;
    int next[SIZE],e[SIZE][LEAF],n;
    int data[SIZE];
    TrieGraph(){n=SIZE;}
    void init(){
        fill_n(next,n,0);
        fill_n(data,n,0);
        memset(e,-1,n*sizeof(e[0]));
        n=1;
    }
    void insert(const char* s){
        int x=0;
        for(int i=0;s[i];i++){
            int c=s[i]-'a';
            x=~e[x][c]?e[x][c]:e[x][c]=n++;
        }
        data[x]++;
    }
}G;

char s[20005];

void gao(int x, int d, vector<int>& dp){
    vector<int> u=dp,v=dp;
    if(d)
        for(int i=dp.size()-1;i;i--) u[i]=min(u[i],u[i-1]+d);
    if(G.data[x])
        for(int i=dp.size()-1;i;i--) v[i]=min(v[i],v[i-1]+d);
    for(int i=0;i<26;i++){
        int y=G.e[x][i];
        if(y<0) continue;
        gao(y,d+1,v);
    }
    for(size_t i=0;i<dp.size();i++) dp[i]=min(u[i],v[i]);
}

int main(){
    int cs;
    scanf("%d",&cs);
    for(int no=1;no<=cs;no++){
        int n,k;
        scanf("%d%d",&n,&k);
        G.init();
        for(int i=0;i<n;i++){
            scanf("%s",s);
            G.insert(s);
        }
        vector<int> dp(k+1,INF);
        dp[0]=0;
        gao(0,0,dp);
        printf("Case #%d: %d\n",no,dp[k]);
    }
}
