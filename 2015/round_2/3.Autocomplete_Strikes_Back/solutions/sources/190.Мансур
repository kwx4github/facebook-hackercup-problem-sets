#pragma comment(linker, "/STACK:640000000")
#include<iostream>
#include<cstdio>
#include<cassert>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<bitset>
#include<algorithm>

#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

const int inf = (int)1e9;

int g[20005][26],lst;
int c[20005];
int dp[20005][105];
bool finish[20005];

void get(int v) {
	dp[v][0] = 0;
	for (int i = 1; i <= 100; i++) {
		dp[v][i] = inf;
	}
	if (finish[v]) dp[v][1] = 0;
	for (int i = 0; i < 26; i++) if (g[v][i] != -1) {
		int to = g[v][i];
		get(to);
		for (int k = 100; k >= 1; k--) {
			for (int j = 1; j <= c[to]; j++) {
				if (k < j) break;
				dp[v][k] = min(dp[v][k],dp[to][j] + j + dp[v][k - j]);
			}
		}
	}
	if (v != 0) dp[v][1] = 0;
}

void solve() {
	int n,m; cin >> n >> m;

	for (int i = 0; i < 20005; i++) {
	     memset(g[i],-1,sizeof(g[i]));
	     finish[i] = false;
	     c[i] = 0;
     }

     lst = 1;

     for (int i = 0; i < n; i++) {
     	string s; cin >> s;
     	int cur = 0;
     	c[cur]++;
     	for (int j = 0; j < sz(s); j++) {
     		s[j] -= 'a';
     		if (g[cur][s[j]] == -1) {
     			g[cur][s[j]] = lst++;
     		}
     		cur = g[cur][s[j]];
     		c[cur]++;
     	}
     	finish[cur] = true;
     }

     get(0);

     cout << dp[0][m] << endl;

     //cout << (m == 1 ? 1 : dp[0][m]) << endl; 
}

int main() {
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	
	int T; cin >> T;

	for (int t = 1; t <= T; t++) {
		cout << "Case #" << t << ": ";
		solve();
	}

	return 0;
}
