#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> T sqr(T x) {return x*x;}
#define pi acos(-1)
#define INF 100000000
#define debug(x) cerr<<#x"="<<(x)<<"\n";
#define foreach(it,v) for (__typeof((v).begin()) it=(v).begin();it!=(v).end();it++)

struct sg {
	int son[26];
	int f[4100];
	int num;
	int flag;
};
sg g[21000];
string s[4100];
int tot,n,m;

void ins(string s) {
	int x=1;
	g[x].num++;
	for (int i=0;i<s.size();i++) {
		if (g[x].son[s[i]-'a']==0) g[x].son[s[i]-'a']=++tot;
		x=g[x].son[s[i]-'a'];
		g[x].num++;
	}
	g[x].flag=1;
}

void gao(int x) {
	int w[4100];
	w[0]=0;
	for (int i=1;i<=g[x].num;i++) {
		g[x].f[i]=INF;
		w[i]=INF;
	}
	if (g[x].num==1) {
		g[x].f[1]=0;
		return;
	}
	for (int i=0;i<26;i++) {
		int y=g[x].son[i];
		if (y) {
			gao(y);
			for (int j=1;j<=g[y].num;j++) {
				if (j==1 && x!=1) g[x].f[j]=min(g[x].f[j],g[y].f[j]);
				else g[x].f[j]=min(g[x].f[j],g[y].f[j]+j);
			}
			for (int j=g[x].num;j>=0;j--)
				for (int k=1;k<=g[y].num && k<=j;k++)
					w[j]=min(w[j],w[j-k]+g[y].f[k]);
		}
	}
	for (int i=1;i<=g[x].num;i++) g[x].f[i]=min(g[x].f[i],w[i]+i);
	if (g[x].flag) {
		for (int i=g[x].num;i>=1;i--) g[x].f[i]=min(g[x].f[i],w[i-1]+i-1);
	}
//	printf("x=%d test=%s num=%d\n",x,test.data(),g[x].num);
//	for (int i=1;i<=g[x].num;i++) printf("%d%c",g[x].f[i],i==g[x].num?'\n':' ');
}

int main() {
	int tt;
	scanf("%d",&tt);
	for (int te=1;te<=tt;te++) {
		scanf("%d%d",&n,&m);
		tot=1;
		memset(g,0,sizeof(g));
		for (int i=1;i<=n;i++) {
			cin>>s[i];
			ins(s[i]);
		}
		gao(1);
		printf("Case #%d: %d\n",te,g[1].f[m]);
	}
}
