#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <sstream>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <map>
#include <set>
#include <list>
#include <queue>
#include <stack>
#include <vector>
#include <cassert>

using namespace std;

#define pb push_back
#define mp make_pair
#define REP(i, n) for (int i = 0; i < (int)(n); ++i)
#define foreach(e, x) for (__typeof(x.begin()) e = x.begin(); e != x.end(); ++e)
typedef long long LL;
typedef pair<int, int> PII;

int tt, n, k;
string s[4000];
int t[20005][26], cnt[20005], sz;
bool used[4000];

int main() {
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin >> tt;
    for (int test = 1; test <= tt; ++test) {
        cin >> n >> k;
        REP(i, n) cin >> s[i];
        REP(i, n) used[i] = false;
        sz = 1;
        REP(i, 26) t[0][i] = -1;
        cnt[0] = 2;
        int ans = 0;
        REP(times, k) {
            int best = -1, besti = -1;
            REP(i, n) if (!used[i]) {
                int cur = 0, pos = 0;
                for (char c : s[i]) if (t[pos][c - 'a'] == -1) {
                    ++cur;
                    break;
                } else {
                    pos = t[pos][c - 'a'];
                    ++cur;
                    if (cnt[pos] == 1) ++cur;
                }
                if (best == -1 || cur < best) {
                    best = cur;
                    besti = i;
                }
            }
            int pos = 0;
            for (char c : s[besti]) {
                if (t[pos][c - 'a'] == -1) {
                    REP(i, 26) t[sz][i] = -1;
                    t[pos][c - 'a'] = sz;
                    cnt[sz] = 0;
                    ++sz;
                }
                pos = t[pos][c - 'a'];
                ++cnt[pos];
            }
            used[besti] = true;
            ++cnt[pos];
            ans += best;
        }
        cout << "Case #" << test << ": " << ans << endl;
    }
	return 0;
}
