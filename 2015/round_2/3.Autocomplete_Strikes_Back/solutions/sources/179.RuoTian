#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int trie[20005][26];
bool end[20005];
int tot;
int n,k,tt;
int dp[20005][105];
int num[20005];
char s[20005];
void dfs(int x){
	for(int i=0;i<26;i++) if(trie[x][i]) dfs(trie[x][i]);
	dp[x][0]=0;
	for(int i=0;i<26;i++){
		if(trie[x][i]){
			if(end[trie[x][i]]){
				for(int t=num[x];t>=0;t--){
					for(int j=1;j<=num[trie[x][i]];j++){
						if(j==1){
							if(t>0) dp[x][t]=min(dp[x][t],dp[x][t-1]+1);
							if(t>1) dp[x][t]=min(dp[x][t],dp[x][t-2]+3);
						}else{
							if(t>=j) dp[x][t]=min(dp[x][t],dp[x][t-j]+dp[trie[x][i]][j]+j);
							if(t>j) dp[x][t]=min(dp[x][t],dp[x][t-j-1]+dp[trie[x][i]][j]+j+1);
						}
					}
				}
			}else{
				for(int t=num[x];t>=0;t--){
					for(int j=1;j<=num[trie[x][i]];j++){
						if(j==1){
							if(t>0) dp[x][t]=min(dp[x][t],dp[x][t-1]+1);
						}else{
							if(t>=j) dp[x][t]=min(dp[x][t],dp[x][t-j]+dp[trie[x][i]][j]+j);
						}
					}
				}
			}
		}
	}
	for(int i=0;i<=8;i++){
	//	printf("%d %d: %d\n",x,i,dp[x][i]);
	}
}
int kase;
int main(){
		freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);

	scanf("%d",&tt);
	while(tt--){
		tot=0;
		memset(trie,0,sizeof trie);
		memset(num,0,sizeof num);
		memset(end,0,sizeof end);
		scanf("%d%d",&n,&k);
		for(int i=0;i<n;i++){
			scanf("%s",s);
			int id=0;
			for(int j=0;s[j];j++){
				if(trie[id][s[j]-'a']) id=trie[id][s[j]-'a'];
				else id=trie[id][s[j]-'a']=++tot;
				num[id]++;
			}
			end[id]=1;
	//		printf("%d\n",id);
		}
		num[0]=n;
		memset(dp,0x3f,sizeof dp);
		dfs(0);
		printf("Case #%d: %d\n",++kase,dp[0][k]);
	}
	return 0;
}
