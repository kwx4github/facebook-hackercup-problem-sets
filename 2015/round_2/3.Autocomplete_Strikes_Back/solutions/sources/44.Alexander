#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <string.h>
#include <math.h>
#include <fstream>
#include <iostream>
using namespace std;
#define L 20100
#define N 110
#define M 1000000000
char s[L];
int b[L][26], h=2, f[L], d[L][N], g, w[L], e[N];
void add()
{
	int i, k=1;
	scanf("%s", s);
	for(i=0; s[i]; w[k]++, k=b[k][s[i]-'a'], i++)
		if(!b[k][s[i]-'a']) b[k][s[i]-'a']=h++;
	f[k]=1;
	w[k]++;
}
void dfs(int i)
{
	int j, k, l, s;
	for(j=0; j<26; j++)
		if(b[i][j]) dfs(b[i][j]);
	for(k=1; k<=g; d[i][k]=M, k++);
	s=0; d[i][0]=0;
	if(f[i]) { s=1; d[i][1]=0; }
	for(j=0; j<26; j++)
		if(b[i][j])
		{
			int p=b[i][j];
			for(k=0; k<=s && k<=g; e[k]=d[i][k], k++);
			for(; k<=g && k<=s+w[p]; e[k]=M, k++);
			for(k=1; k<=w[p] && k<=g; k++)
			{
				int c=k+d[p][k];
				if(k==1) c=1;
				for(l=0; l<=s && k+l<=g; e[k+l]=min(e[k+l], d[i][l]+c), l++);
			}
			s+=w[p];
			s=min(s, g);
			for(k=0; k<=s; d[i][k]=e[k], k++);
		}
}
void solve()
{
	int n, i, j;
	h=2;
	scanf("%d%d", &n, &g);
	for(i=0; i<n; add(), i++);
	dfs(1);
	printf("%d\n", d[1][g]);
	for(i=0; i<h; i++)
	{
		for(j=0; j<26; b[i][j]=0, j++);
		f[i]=0;
		w[i]=0;
	}
}
int main()
{
	int ts;
	scanf("%d", &ts);
	for(int t=1; t<=ts; t++)
	{
		printf("Case #%d: ", t);
		solve();
	}
	return 0;
}