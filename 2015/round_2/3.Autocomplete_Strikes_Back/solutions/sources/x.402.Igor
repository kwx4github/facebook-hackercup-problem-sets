import java.io.*;
import java.util.*;

class Fb2_3 
{
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new FileReader("autocomplete_strikes_back.txt"));
		PrintWriter pw = new PrintWriter(new FileWriter("output3.txt"));
		
		int nrT = Integer.parseInt(br.readLine());
		for(int t = 1; t <= nrT; t++) {
			String[] nks = br.readLine().split(" ");
			int n = Integer.parseInt(nks[0]);
			int k = Integer.parseInt(nks[1]);
			
			TreeSet<String> set = new TreeSet<String>();
			for(int i = 0; i < n; i++) {
	      set.add(br.readLine());
      }
			
			for(int a = 0; a < n - k; a++) {
				String prev = null, toElim = null;
				int maxPref = 0;
				
				Iterator<String> it = set.iterator();
				while(it.hasNext()) {
					if(prev == null) {
						prev = it.next();
						continue;
					}
					
					String str = it.next();
					for(int j = maxPref; j < prev.length(); j++) {
						String substr = prev.substring(0, j);
						if(str.startsWith(substr)) {
							toElim = str;
							maxPref = j;
						} else {
							break;
						}
					}
					
					prev = str;
				}
				
				set.remove(toElim);
			}
			
			int res = 0;
			String[] remaining = new String[set.size()];
			remaining = set.toArray(remaining);
			for(int i = 0; i < remaining.length; i++) {
				String s = remaining[i];
				String s1 = set.lower(s);
				String s2 = set.higher(s);
				
				boolean s1Avail = (s1 != null);
				boolean s2Avail = (s2 != null);
				if(!s1Avail && !s2Avail) {
					res++;
					continue;
				}
				int toAdd = 0;
				for(toAdd = 0; toAdd < s.length() && (s1Avail || s2Avail); toAdd++) {
					if(s1Avail) {
						if(s1.length() <= toAdd || s1.charAt(toAdd) != s.charAt(toAdd)) {
							s1Avail = false;
						}
					}
					if(s2Avail) {
						if(s2.length() <= toAdd || s2.charAt(toAdd) != s.charAt(toAdd)) {
							s2Avail = false;
						}
					}
				}
				
				res += toAdd;
			}
			
			pw.println("Case #" + t + ": " + res);
			pw.flush();
		}

		br.close();
		pw.close();
		System.out.println("done!");
	}
}
