#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cassert>
#define inf 1000000000

using namespace std;

struct node {
	int nxt[26];
	int cnt;
	bool flag;
};

node a[20010];
int f[20010][105];
string s;
int tt,n,p,m;
int ans;

void gen(const string &s) {
	int cur=0;
	int l=s.size();
	a[0].cnt++;
	for (int i=0;i<l;++i) {
		if (a[cur].nxt[s[i]-'a']==0) {
			a[cur].nxt[s[i]-'a']=m;
			memset(a[m].nxt,0,sizeof(a[m].nxt));
			a[m].cnt=0;
			a[m].flag=false;
			++m;
		}
		cur=a[cur].nxt[s[i]-'a'];
		a[cur].cnt++;
	}
	a[cur].flag=true;
}

int tmp[110];

void dp(int x,int dep) {
	int cur=min(a[x].cnt,p);
	for (int i=0;i<=a[x].cnt;++i)
		f[x][i]=inf;
	f[x][0]=0;
	for (int i=0;i<26;++i)
		if (a[x].nxt[i]!=0) {
			int nn=a[x].nxt[i];
			dp(nn,dep+1);
			for (int j=0;j<=cur;++j)
				tmp[j]=f[x][j];
			int ncur=min(a[nn].cnt,p);
			for (int j=0;j<=cur;++j)
				for (int k=0;k<=min(j,ncur);++k)
					tmp[j]=min(tmp[j],f[x][j-k]+f[nn][k]);
			for (int j=0;j<=cur;++j)
				f[x][j]=tmp[j];
		}
	if (a[x].flag)
		for (int j=cur;j>=1;--j)
			f[x][j]=min(f[x][j-1]+max(1,dep),f[x][j]);
	f[x][1]=max(1,dep);
}

int main() {
	freopen("c.in","r",stdin);
	freopen("c.out","w",stdout);

	scanf("%d",&tt);

	memset(a,0,sizeof(a));
	for (int ii=1;ii<=tt;++ii) {
		printf("Case #%d: ",ii);
		scanf("%d%d",&n,&p);
		m=1;
		memset(a[0].nxt,0,sizeof(a[0].nxt));
		a[0].cnt=0; ans=0; a[0].flag=false;
		for (int i=0;i<n;++i) {
			cin >> s;
			gen(s);
		}

		dp(0,0);

		printf("%d\n",f[0][p]);
	}
}
