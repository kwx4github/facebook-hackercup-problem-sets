#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define N 20000
#define M 100
int nodes;
struct nod
{
    int mark,child[26];
}nods[N + 10];
char s[N + 5];
int temp[M + 5];
int INF;
int dp[N + 2][M + 5];
void insert(int l)
{
    int last = 0;
    for(int i = 1 ; i<=l ; i++)
    {
        int id = nods[last].child[s[i] - 'a'];
        if(id == 0)
        {
            nodes++;
            nods[last].child[s[i] - 'a'] = nodes;
            id = nodes;
        }
        last = id;
    }
    nods[last].mark++;
}
void dfs(int u)
{
    int c = 0;
    for(int j = 0 ; j<26 ; j++)
    {
        int v = nods[u].child[j];
        if(v > 0)
        {
            dfs(v);
            c++;
        }
    }
    for(int j = 1 ; j<=M ; j++) dp[u][j] = INF,temp[j] = INF;

    for(int j = 0 ; j<26 ; j++)
    {
        int v = nods[u].child[j];
        if(v > 0)
        {
            for(int k = 1 ; k<=M ; k++) temp[k] = INF;
            for(int k = 1 ; k<=M ; k++)
            {
                for(int x = 0 ; x<=k ; x++)
                {
                    temp[k] = min(temp[k],dp[u][x] + k - x + dp[v][k-x]);
                }
            }
            for(int k = 1 ; k<=M ; k++) dp[u][k] = min(dp[u][k],temp[k]);
        }
    }

    for(int j = 1 ; j<=M ; j++) dp[u][j] = min(dp[u][j],INF);
    if(nods[u].mark == 1)
    {
        for(int j = M; j>=1 ; j--) dp[u][j] = dp[u][j-1];
    }
    if(dp[u][1] != INF) dp[u][1] = 0;
    //for(int j = 1 ; j<=M ; j++) printf("%d ",dp[u][j]);
    //printf("\n");
}
int main()
{
    INF = pow(10,7);
    int tc,t;
    freopen("C:\\Users\\dell\\Downloads\\inputC.txt","r",stdin);
    freopen("C:\\Users\\dell\\Downloads\\outputC.txt","w",stdout);
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        nodes = 0;
        int n,i,k;
        scanf("%d %d",&n,&k);
        for(i = 1 ; i<=n ; i++)
        {
            scanf("%s",s+1);
            insert(strlen(s+1));
        }
        dfs(0);
        printf("Case #%d: ",t);
        // Print the result of the code here
        printf("%d",dp[0][k]);
        //Don't do anything after this.
        printf("\n");
        for(int i = 0 ; i<=nodes ; i++)
        {
            for(int j = 0 ; j<26 ; j++)  nods[i].child[j] = 0;
            nods[i].mark = 0;
        }

    }
    return 0;
}
