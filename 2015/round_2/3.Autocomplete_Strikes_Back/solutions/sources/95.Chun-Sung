#include<stdio.h>
#include<string.h>

int T, N, K;
int nNode;
int next[20020][26], DP[20020][128], mxDP[20020];
bool wordend[20020];
char S[32768];

inline int min(int a, int b) { return a<b ? a : b; }

int main() {
    scanf("%d", &T);
    for(int tt = 1; tt <= T; ++tt) {
        scanf("%d %d", &N, &K);
        fprintf(stderr, "case %d, n %d k %d\n", tt, N, K);
        memset(next, -1, sizeof(next));
        nNode = 1;
        for(int i = 0, j; i < N; ++i) {
            scanf("%s", S);
            int now = 0;
            for(j = 0; S[j] != '\0'; ++j) {
                if(next[now][S[j]-'a'] != -1)
                    now = next[now][S[j]-'a'];
                else {
                    next[now][S[j]-'a'] = nNode;
                    wordend[nNode] = false;
                    now = nNode;
                    ++nNode;
                }
            }
            wordend[now] = true;
        }
        for(int now = nNode-1; now >= 0; --now) {
            DP[now][0] = 0;
            int mx = 0;
            for(int ch = 0; ch < 26; ++ch) if(next[now][ch] != -1) {
                int nxt = next[now][ch];
                int nmx = mxDP[nxt];
                for(int i = min(K,nmx+mx); i >= 0; --i) {
                    int m = -1;
                    for(int j = 0; j <= nmx && j <= i; ++j) if(i-j <= mx) {
                        int t = DP[nxt][j] + j + DP[now][i-j];
                        if(m == -1 || t < m) m = t;
                    }
                    DP[now][i] = m;
                }
                mx += nmx;
                if(mx > K) mx = K;
            }
            if(wordend[now]) {
                mx = min(K, mx+1);
                for(int i = mx; i > 0; --i) DP[now][i] = DP[now][i-1];
            }
            DP[now][1] = 0;
            mxDP[now] = mx;
        }
        printf("Case #%d: %d\n", tt, DP[0][K]);
    }
}

