#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <map>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <cstring>
#include <complex>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)for(int i=0;i<v;i++)
#define FORE(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define REMIN(x,y) (x)=min((x),(y))
#define REMAX(x,y) (x)=max((x),(y))
#define pb push_back
#define sz size()
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define un(v) v.erase(unique(ALL(v)),v.end())
#define LOLDBG
#ifdef LOLDBG
#define DBG(vari) cerr<<#vari<<" = "<<vari<<endl;
#define DBG2(v1,v2) cerr<<(v1)<<" - "<<(v2)<<endl;
#else
#define DBG(vari)
#define DBG2(v1,v2)
#endif
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define CZ3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z));
#define ALL(x) (x).begin(),(x).end()
#define tests int dsdsf;cin>>dsdsf;while(dsdsf--)
#define testss int dsdsf;CZ(dsdsf);while(dsdsf--)
using namespace std;
typedef pair<int,int> pii;
typedef vector<int> vi;
template<typename T,typename TT> ostream &operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream &operator<<(ostream &s,vector<T> t){s<<"{";FOR(i,t.size())s<<t[i]<<(i==t.size()-1?"":",");return s<<"}"<<endl; }
#define INF (1<<20)
int t[1<<20][30];
int k,n;
int koniec[1<<20];
char s[1<<20];
int g[30][102];
int dp[50000][102];

void dfs(int u)
{
	FOR(i,30) if (t[u][i]) 
	{
		dfs(t[u][i]);
	}
	REP(j,1,k) dp[u][j]=INF;
	
	g[0][0]=0;
	REP(j,1,k)g[0][j]=INF;
	if (koniec[u]) g[0][1]=0;
	REP(c,1,28)
	{
		REP(j,0,k) g[c][j]=g[c-1][j];
		if (t[u][c]==0) continue;
		int q=t[u][c];
		REP(f,1,k)
		{
			if (dp[q][f]>=INF) break;
			for(int i=0;i+f<=k;i++)
			{
				if (f>1) REMIN(g[c][i+f],g[c-1][i]+f+dp[q][f]);
				else REMIN(g[c][i+f],g[c-1][i]+f);
			}
		}
	}
	REP(j,0,k) dp[u][j]=g[28][j];
}

int main()
{
    int te;cin>>te;
    FOR(nrte,te)
    {
		cin>>n>>k;
		int ne=2;
		FOR(i,1<<20)FOR(j,30)t[i][j]=0;
		FOR(i,1<<20) koniec[i]=0;
		FOR(i,n)
		{
			scanf("%s",s);
			int k=strlen(s);
			int v=1;
			FOR(j,k)
			{
				char c=s[j]-'a'+1;
				if (t[v][c]) v=t[v][c];
				else 
				{
					t[v][c]=ne++;
					v=t[v][c];
				}
				
			}
			koniec[v]=1;
		}
		dfs(1);
		if (k==1) dp[1][k]=1;
    	printf("Case #%d: %d\n",nrte+1,dp[1][k]);
    }

	return 0;
}


