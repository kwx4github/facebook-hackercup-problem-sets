#include <cstdio>
#include <ctime>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <queue>
#include <set>
using namespace std;
#define MP make_pair
#define PB push_back
#define FI first
#define SE second
int tt,t,wyn,n,k;
vector<string> slo;
class node{
	public:
	node(char l){
		letter=l;
		kon=false;
		for(int i=0;i<256;i++)
			dzieci[i]=-1;
		for(int i=1;i<=100;i++)
			koszta[i]=1e6;
		koszta[0]=0;
	}
	
	int dzieci[256];
	char letter;
	bool kon;
	int koszta[101];
};
vector<node> drzewo;

int main(){
	ios_base::sync_with_stdio(false);
	cin>>tt;
	for(t=1;t<=tt;t++){
		cin>>n>>k;
		drzewo.clear();
		drzewo.PB(node(char(0)));
		for(int i=0;i<n;i++){
			string s;
			cin>>s;
			slo.PB(s);
			int akt=0;
			for(int j=0;j<s.size();j++){
				if(drzewo[akt].dzieci[s[j]]!=-1){
					akt=drzewo[akt].dzieci[s[j]];
				}else{
					drzewo.PB(node(s[j]));
					akt=drzewo[akt].dzieci[s[j]]=drzewo.size()-1;
				}
			}
			//cout<<"drzewo siz: "<<drzewo.size()<<endl;
			drzewo.back().kon=true;
		}
		//cout<<"ss"<<endl;
		for(int i=drzewo.size()-1;i>=0;i--){
			//cout<<"i: "<<i<<endl;
			if(drzewo[i].kon){
				drzewo[i].koszta[1]=0;
			}
			for(int j=0;j<256;j++){
				if(drzewo[i].dzieci[j]!=-1){
					int dziecko=drzewo[i].dzieci[j];
					for(int l=k;l>=0;l--)
						for(int m=0;m+l<=100;m++)
							drzewo[i].koszta[m+l]=min(drzewo[i].koszta[m+l],drzewo[dziecko].koszta[m]+drzewo[i].koszta[l]+m);
				}
			}
			drzewo[i].koszta[1]=0;
		}
		cout<<"Case #"<<t<<": "<<max(drzewo[0].koszta[k],1)<<"\n";
	}
}
