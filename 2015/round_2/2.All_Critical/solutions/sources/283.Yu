package fhc2015r2.b;

import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

	static final String FILENAME = "all_critical.txt";
	static final boolean LOCAL = false;

	Scanner sc;

	final int S = 20;
	double p;
	void solve() {
		p = sc.nextDouble();

		double[] E = new double[S + 1]; // あと何回必要か？
		E[S] = 0;
		for (int n = S-1; n >= 0; n--) {
			double e = 1.0;
			for (int m = n + 1; m <= S; m++) {
				e += P(n, m) * E[m];
			}
			E[n] = e / (1.0 - P(n, n));
		}
		double res = E[0];
		System.out.printf("%.5f\n", res);
	}

	double P(int cur, int to) {
		int remain = S - cur;
		int gain = to - cur;

		double res = 1.0;
		for (int i = 0; i < gain; i++) res *= p;
		for (int i = 0; i < remain - gain; i++) res *= 1.0 - p;
		res *= C[remain][gain];
		return res;
	}

	static final int MAX_N = 30;
	static final long[][] C = new long[MAX_N][MAX_N];
	static {
		for (int i = 0; i < C.length; i++)
			for (int j = 0; j <= i; j++) {
				C[i][j] = (j == 0) ? 1 : (C[i - 1][j - 1] + C[i - 1][j]);
			}
	}


	void run() throws Exception {
		String pkg = new Object(){}.getClass().getEnclosingClass().getPackage().getName().replace('.', '/');
		String dir = "src/" + pkg;
		if (LOCAL) {
			sc = new Scanner(System.in);
		} else {
			sc = new Scanner(new File("/tmp/fhc/" + FILENAME));
			System.setOut(new PrintStream(new FileOutputStream(dir + "/" + FILENAME + ".res")));
		}
		int T = sc.nextInt();

		long start = System.currentTimeMillis();
		for (int t = 1; t <= T; t++) {
			System.out.printf("Case #%d: ", t);
			solve();
			System.out.flush();
			System.err.flush();
		}
		long end = System.currentTimeMillis();
		tr(end - start, "ms");
	}

	public static void tr(Object... o) {
		System.err.println(Arrays.deepToString(o));
	}
	public static void main(String[] args) throws Exception {
		new Main().run();
	}
}
