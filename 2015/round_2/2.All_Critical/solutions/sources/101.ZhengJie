#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdio>
#include<vector>
#include<cassert>
#include<cstring>
#include<cstdlib>
#include<utility>
#include<sstream>
#include<iostream>
#include<algorithm>
#include<functional>
#define REP(x,y,z) for(int x=y;x<=z;x++)
#define FORD(x,y,z) for(int x=y;x>=z;x--)
#define MSET(x,y) memset(x,y,sizeof(x))
#define FOR(x,y) for(__typeof(y.begin()) x=y.begin();x!=y.end();x++)
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define SZ size()
#define M 
using namespace std;
typedef long long LL;
typedef long double LD;
int t;
double dp[22],p;
LD win(int x,int y)//x >= y
{
	return pow(p,y) * pow(1-p, x-y);
}
LD c(int x,int y) //x! / y! / (x-y)!
{
	LD re = 1.0;
	REP(i,y+1,x) re *= i;
	REP(i,1,x-y) re /= i;
	return re;
}
LD go(int x)
{
	if(x==0) return 0.0;
	if(x==1) return 1.0/p;
	if(dp[x] != -1.0) return dp[x];

	LD res=1.0;
	REP(i,1,x) res += c(x,i) * win(x,i) * go(x-i);
	res /= (1.0 - pow(1-p,x) );

	return dp[x] = res;
}
int main()
{
	scanf("%d",&t);
	REP(tt,1,t)
	{
		scanf("%lf",&p);
		REP(i,1,20) dp[i] = -1.0;
		printf("Case #%d: %.10f\n",tt,(double)go(20));
	}
	return 0;
}

