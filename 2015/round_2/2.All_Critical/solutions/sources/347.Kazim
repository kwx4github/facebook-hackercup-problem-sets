
#include <list>
#include <deque>
#include <queue>
#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <functional>
#include <iomanip>
#include <vector>
#include <stack>
#include <map>
#include <set>
#include <memory>
#include <cmath>
#include <string>
#include <cctype>
#include <iomanip>
#include <sstream>
#include <utility>
#include <ctime>
#include <bitset>
#include <iterator>
#include <numeric>
#include <climits>
#include <iterator>
#include <deque>

using namespace std;

#define FILE_READER freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define FAST_READER ios::sync_with_stdio(false); cin.tie(NULL);

void prn(long double ans, int test_case) {
	printf("Case #%d: %.5lf\n", test_case, ans);
	//printf("Case #%d: %I64d\n", test_case, ans);
	//cout << "Case #" << test_case << ": " << ans << "\n";
}

//#pragma comment(linker, "/STACK:1000000000") //5 GB = 5 * 10^9

long double c[50][50];
long double ppow[50];
long double qpow[50];

void init() {
	const int n = 20;
	c[0][0] = 1.0;
	for (int i = 1; i <= n; ++i) {
		c[i][0] = c[i][i] = 1.0;
		for (int j = 1; j < i; ++j) {
			c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
		}
	}
}

long double m[50];

long double solve(long double p) {
	long double q = 1.0 - p;
	ppow[0] = qpow[0] = 1.0;
	const int n = 20;
	for (int i = 1; i <= n; ++i) {
		ppow[i] = ppow[i - 1] * p;
		qpow[i] = qpow[i - 1] * q;
	}
	m[0] = 0.0;
	long double sum;
	for (int i = 1; i <= n; ++i) {
		sum = 0.0;
		for (int j = 1; j <= i; ++j) {
			sum += c[i][j]*ppow[j]*qpow[i-j]*m[i-j];
		}
		m[i] = (1.0 + sum) / (1.0 - qpow[i]);
	}
	return m[n];
}

int main() {

	FILE_READER
		FAST_READER

		init();

	int t;
	cin >> t;

	int test_case = 0;
	while (t-- > 0) {
		long double p;
		cin >> p;
		long double ans = solve(p);
		++test_case;
		prn(ans, test_case);
	}
	return 0;
}

