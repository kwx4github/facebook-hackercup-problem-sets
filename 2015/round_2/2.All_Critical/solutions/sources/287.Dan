import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;

public class P2 {
	Scanner sc;
	PrintWriter pw;
	String problemName = "P2";
	
	public P2() throws FileNotFoundException {
		sc = new Scanner(new File(problemName + ".in"));
		pw = new PrintWriter(new File(problemName + ".out"));
	}

	double[] N;
	double[][] p;
	void computeP(double p0) {
		for (int k=0; k<=20; k++) {
			for (int i=0; i<=k; i++) {
				double C = 1;
				for (int j=i+1; j<=k; j++) C = C * j / (j-i);
				
				p[i][k] = Math.pow(p0, i) * Math.pow(1-p0, k-i) * C;
			}
		}
	}
	
	double computeN(int k, double[][] p) {
		if (N[k] > -1) return N[k];
		
		double s = p[0][k];
		for (int i=1; i<=k; i++) {
			s += p[i][k] * (1 + computeN(k-i, p));
		}
		N[k] = s / (1 - p[0][k]);
		
		return N[k];
	}
	
	void init(double p0) {
		N = new double[21];
		p = new double[21][21];
		
		for (int i=0; i<=20; i++) N[i] = -2;
		N[0] = 0;
		
		computeP(p0);
	}
	
	public void solveTest(int testIdx) {
		double p0 = sc.nextDouble();
		init(p0);
		
		double result;
		
		
		if (p0 < 1) {
			result = computeN(20, p);
		}
		else {
			result = 1;
		}
		
		pw.println("Case #" + testIdx + ": " + result);
	}
	
	public void solve() {
		int T = sc.nextInt();
		for (int testIdx=1; testIdx<=T; testIdx++) {
			solveTest(testIdx);
			System.out.println("Done " + testIdx + " / " + T);
		}
		
		pw.close();
	}
	
	public static void main(String[] args) throws FileNotFoundException {
		P2 p = new P2();
		p.solve();
	}
}
