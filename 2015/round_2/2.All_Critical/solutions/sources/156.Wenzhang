#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N = 25;
double p , pp[N] , dp[N][2] , qq[N];
double c[N][N];
double choose[N][N];
int main () {
	// freopen ("all_critical.txt" , "r" , stdin);
    // freopen ("output.txt" , "w" , stdout);
    for (int i = 1 ; i < N ; i ++) {
        c[i][0] = c[i][i] = 1.0;
        for (int j = 1 ; j < i ; j ++)
            c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]);
    }
	int t , cas = 0;
    scanf ("%d" , &t);
    while (t --) {
        scanf ("%lf" , &p);
        pp[0] = qq[0] = 1;
        for (int i = 1 ; i < N ; i ++) {
            pp[i] = pp[i - 1] * p;
            qq[i] = qq[i - 1] * (1 - p);
        }
        for  (int i = 0 ; i < N ; i ++) {
            for (int j = 0 ; j <= i ; j ++)
                choose[i][j] = c[i][j] * pp[j] * qq[i - j];
        }
        memset (dp , 0 , sizeof (dp));
        dp[0][1] = 1;
        for (int i = 0; i <= 20 ; i ++) {
            double A = choose[20 - i][0];
            for (int j = 1; j <= 20 - i ; j++) {
                double B = dp[i][1] * choose[20 - i][j] / (1 - A);
                dp[i + j][1] += B;
                dp[i + j][0] += choose[20 - i][j] / (1 - A) * dp[i][0] + B / (1 - A);
            }
        }
        printf ("Case #%d: %.5f\n" , ++ cas , dp[20][0]);
    }

	return 0;
}