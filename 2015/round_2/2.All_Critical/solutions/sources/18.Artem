#define _CRT_SECURE_NO_DEPRECATE
#define _SECURE_SCL 0

#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <vector>
#include <iostream>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <cctype>
#include <sstream>
#include <cassert>
#include <bitset>
#include <memory.h>
#include <complex>
#include <iomanip>

using namespace std;

#pragma comment(linker, "/STACK:200000000")

typedef long long int64;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)
#define fore(i, a, n) for(int i = (int)(a); i < (int)(n); i++)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define last(a) (int(a.size()) - 1)
#define all(a) a.begin(), a.end()

const double EPS = 1E-9;
const int INF = 1000000000;
const int64 INF64 = (int64) 1E18;
const double PI = 3.1415926535897932384626433832795;

double p;

void read() {
  cin >> p;
}

void gen() {

}

bool u[30], u2[30][30];
double z[30], c[30][30], z2[30][30];

double rec2(int a, int b) {
  if (b < 0 || b > a)
    return 0;
  if (a == 0)
    return b == 0;
  if (u2[a][b])
    return z2[a][b];
  u2[a][b] = true;
  return z2[a][b] = p * rec2(a - 1, b - 1) + (1 - p) * rec2(a - 1, b);
}

double rec(int w) {
  if (w == 20)
    return 0;
  if (u[w])
    return z[w];
  u[w] = true;
  double sum = 0, s2 = 0;
  for (int j = 1; j <= 20 - w; j++)
    for (int i = 0; i <= w; i++) {
      double pp = rec2(20 - w, j) * rec2(w, i);
      double cur = rec(w + j) * pp;
      sum += cur;
    }
  for (int j = 0; j <= 0; j++)
    for (int i = 0; i <= w; i++) {
      double pp = rec2(20 - w, j) * rec2(w, i);
      s2 += pp;
    }

  double res = (sum + 1) / (1 - s2);

  return z[w] = res;
}

void solve() {
  memset(u, 0, sizeof(u));
  memset(u2, 0, sizeof(u2));
  double res = rec(0);
  printf("%.5lf\n", res);
}

int main() {
  freopen("input.txt", "rt", stdin);
  freopen("output.txt", "wt", stdout);

  forn(i, 30) {
    c[i][0] = c[i][i] = 1;
    for (int j = 1; j < i; j++)
      c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
  }
  
  int tests;
  cin >> tests;
  for (int test = 1; test <= tests; test++) {
    cerr << "Solving test " << setw(2) << test << " of " << tests << ". Time = " << setw(5) << clock() << endl;
    cout << "Case #" << test << ": ";
    read();
    //gen();
    solve();
  }
  
  return 0;
}