#include <bits/stdc++.h>
using namespace std;
#define ll long long
// Useful constants
#define INF (int)2e9
#define INFL (long long)1e18
#define EPS 1e-9

#define bitcount __builtin_popcount
#define gcd __gcd
// Useful container manipulation / traversal macros
#define all(a) a.begin(), a.ending()
#define in(a,b) ( (b).find(a) != (b).ending())
#define pb push_back
#define fill(a,v) memset(a, v, sizeof a)// fill originally
#define mp make_pair

// Input macros
#define s(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)

#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) typeof(v) r = (v)
#endif
#define tr(container, it) for(aut(it,container.begin()); it != container.ending(); it++)
#define ten9 1e9
#define esp 1e-9

#define llu long long unsigned
#define ld long


#define DEBUG 1
#define debug(x) {if (DEBUG)cout <<#x <<" = " <<x <<endingl; }
#define debugv(x) {if (DEBUG) {cerr <<#x <<" = "; tr((x),it) cerr <<*it <<", "; cerr <<endingl; }}
#define mod 1000000007

#define checkbit(n,b) ( (n >> b) & 1)
#define setbit(n,b) (n | ((1 << b)))
#define unsetbit(n,b) (n & (~(1 << b)))
typedef pair<int, int> pii;

double dp[59][29], ppow[21];

double C[29][29];
void ncr()
{
	int n=20,r=20;
	fill(C,0);
	for (int i=0; i<=n; i++)
	{
		for (int k=0; k<=r && k<=i; k++)
			if (k==0 || k==i)
				C[i][k] = 1;
			else
				C[i][k] = (C[i-1][k-1] + C[i-1][k]);
	}
}
int main()
{
	int t;
	s(t);

	double p;

	ncr();

	for(int itr=1;itr<=t;itr++)
	{
		printf("Case #%d: ",itr);
		long double dp[25];

		dp[0] = 1;
		for(ll i=1; i<=20; i++)
			dp[i] = (dp[i-1]*(20-i+1))/i;


		long double p, temp;
		cin>>p;
		temp = 1.0-p;

		long double ans = 0;
		for(ll i=1; i<=20; i++)
		{
			if(i%2==0)
			{
				ans -= dp[i]*(1/(1-pow(temp, i)));
			}
			else
				ans += dp[i]*(1/(1-pow(temp, i)));
		}

		printf("%0.5Lf\n",ans);
/*
		ans = 0;
		for(double i=1; i<10000; i++)
		{
			ans += i*(pow(1.000000 - pow(temp, i)+esp, 20)+ - pow(1.0000000 - pow(temp, i-1)+esp, 20));
			//cout<<ans<<endl;
		}

		printf("%0.5Lf\n",ans);

		ans = 0;
		for(double i=0; i<10000; i++)
		{
			ans += 1 - pow((1 - pow(temp, i)), 20);
		}

		printf("%0.5Lf\n",ans);

*/
	}
}
