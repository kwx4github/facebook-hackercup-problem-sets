#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <queue>
#include <stack>
#include <sstream>
#include <cstring>
#include <numeric>
#include <ctime>

#define re return
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)
#define y0 y32479
#define y1 y95874
#define fill(x, y) memset(x, y, sizeof(x))
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
#define spc(i,n) " \n"[i == n - 1]

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef double D;
typedef long double LD;
typedef long long ll;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;

template<class T> T abs(T x) { return x > 0 ? x : -x;}

int m;
int n;

int w[100];
double table[100];
double p;
double stp[100];
double stp1[100];

double getans(int k) {
	if (k == 0)
		re 0;
	if (w[k])
		re table[k];
	w[k] = 1;
	int c = k;
	double sp = 0;
	double ans = 0;
	rep(cm, (1 << k)) {
		if (cm == 0)
			continue;
		int z = __builtin_popcount(cm);
		double zp = stp[z] * stp1[c - z];
		ans += zp * getans(k - z);
		sp += zp;
	}
	ans *= 1 / sp;
	ans += 1 / sp;
	table[k] = ans;
	re ans;
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);


	int tc;
	cin >> tc;
	rep(tt, tc) {
		cout << "Case #" << tt + 1 << ": ";

		cin >> p;
		stp[0] = stp1[0] = 1;
		for (int i = 1; i <= 20; i++) {
			stp[i] = stp[i - 1] * p;
			stp1[i] = stp1[i - 1] * (1 - p);
		}
		n = 20;
		fill(w, 0);
		printf("%.10lf", getans(n));
		cout << endl;
	}



	re 0;
}
