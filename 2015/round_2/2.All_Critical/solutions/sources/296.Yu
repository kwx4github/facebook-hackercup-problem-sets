#include <iostream>
#include <iomanip>
#include <cmath>

using namespace std;

static const int N = 20;
double mem[N + 1][N + 1];
double C[N + 1][N + 1];

int main(void) {
  int T;
  double p;

  for (int i = 0; i <= N; ++i) {
    C[i][0] = C[i][i] = 1.0;
    for (int j = 1; j < i; ++j) {
      C[i][j] = C[i - 1][j - 1] + C[i - 1][j];
    }
  }

  cin >> T;
  for (int i = 1; i <= T; ++i) {
    cin >> p;
    mem[0][0] = 0.0;
    for (int j = 1; j <= N; ++j) {
      double q = pow(1.0 - p, j);
      mem[j][0] = 0.0;
      for (int k = 1; k <= j; ++k) {
        double sum = 0.0;
        for (int l = 1; l <= k; ++l) {
          sum += pow(p, l) * pow(1.0 - p, j - l) * C[j][l] * (1.0 + mem[j - l][k - l]);
        }
        mem[j][k] = (q + sum) / (1.0 - q);
      }
    }

    cout << "Case #" << i << ": " << fixed << setprecision(10) << mem[N][N] << endl;
  }

  return 0;
}
