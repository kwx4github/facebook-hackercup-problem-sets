#include <iostream>
#include <ctime>
#include <fstream>
#include <cmath>
#include <cstring>
#include <cassert>
#include <cstdio>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <complex>
#include <utility>
#include <cctype>
#include <list>
#include <bitset>

using namespace std;

#define FORALL(i,a,b) for(int i=(a);i<=(b);++i)
#define FOR(i,n) for(int i=0;i<(n);++i)
#define FORB(i,a,b) for(int i=(a);i>=(b);--i)

typedef long long ll;
typedef long double ld;
//typedef double ld;
typedef complex<ld> vec;

typedef pair<int,int> pii;
typedef map<int,int> mii;

#define pb push_back
#define mp make_pair

#define ROUNDS 8000
const int N = 20;
ld choose[N+1][N+1];

ld pw(ld p, int n) {
	if (n==0) return 1;
	ld ans = pw(p,n/2);
	ans *= ans;
	if (n&1) ans = ans*p;
	return ans;
}

ld solve(ld p) {
	ld ans = 0;
	FORALL(x,0,ROUNDS) {
		for(int k=0;k<=N-1;++k) {
			ans += choose[N][k]*pw(1-pw(p,x),k)*pw(pw(p,x),N-k);
		}
	}
	return ans;
}

int main() {
	choose[0][0] = 1;
	FORALL(n,1,N) {
		choose[n][0] = 1;
		FORALL(k,1,n) choose[n][k] = choose[n-1][k] + choose[n-1][k-1];
	}
	
	int TEST;
	cin >> TEST;
	ld p;
	FOR(test,TEST) {
		cin >> p;
		p = 1-p;
		cout << "Case #" << (test+1) << ": " << fixed << setprecision(10) << solve(p) << endl;
	}
}












