#include <iostream>
#include <vector>
#include <math.h>
#include <algorithm>
#include <set>
#include <queue>
#include <memory.h>
#include <map>

using namespace std;

const int MAX_N = 1111111;
double pn[MAX_N+1];
double P[MAX_N+1];

long long C[22][22];

int main() {
    ios::sync_with_stdio(0);
    freopen("input.txt","r",stdin);freopen("output2.txt", "w", stdout);
    
    for(int i = 1; i <= 22; ++i)
        for(int j = 1; j <= i; ++j) {
            if (i == 1)
                C[i][j] = 1;
            else if (j == 1)
                C[i][j] = i;
            else
                C[i][j] = C[i-1][j-1] + C[i-1][j];
        }
    
    int t;
    cin >> t;
    for(int T = 1; T <= t; ++T) {
        
        double p;
        cin >> p;
        cout << "Case #" << T << ": ";
        
        double s = p;
        pn[1] = p;
        P[1] = 1;
        for(int i = 1; i <= 20; ++i)
            P[1] *= p;
        
        for(int i = 2; i <= MAX_N; ++i) {
            pn[i] = pn[i-1] * (1-p);
            
            P[i] = 0;
            double k1 = 1;
            for(int i = 1; i < 20; ++i)
                k1 *= s;
            
            double k2 = pn[i];
            for(int cnt = 1; cnt <= 20; ++cnt) {
                P[i] += k1 * k2 * C[20][cnt];
                k2 *= pn[i];
                k1 /= s;
            }
            s += pn[i];
        }
        
        double res = 0;
        for(int i = 1; i <= MAX_N; ++i)
            res += i * P[i];
        cout.precision(5);
        cout << fixed << res << "\n";
    }
    
    
    return 0;
}