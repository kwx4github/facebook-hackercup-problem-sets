#include <bits/stdc++.h>

using namespace std;

typedef long double ld;
typedef long long ll;

ld memo[25], logFact[25], p;
ld logBinom(int n, int m) {
    return logFact[n]-logFact[m]-logFact[n-m];
}

ld dp(int k) {
    if (memo[k] != -1) return memo[k];
    memo[k] = 1;
    for (int j = 1; j <= k; j++) {
        ld c = exp(j*log(p) + (k-j)*log(1-p) + logBinom(k, j));
        memo[k] += c*dp(k-j);
    }
    memo[k] /= (1-pow(1-p, k));
    return memo[k];
}

int main() {
    logFact[0] = 0;
    for (int i = 1; i < 25; i++) {
        logFact[i] = log(i) + logFact[i-1];
    }
    
    int t; cin >> t;
    for (int ca = 1; ca <= t; ca++) {
        cin >> p;
        for (int i = 0; i < 25; i++) {
            memo[i] = (p == 1 ? 1 : -1);
        }
        memo[0] = 0;
        cout << "Case #" << ca << ": " << setprecision(5) << fixed << dp(20) << endl;
    }
	return 0;
}