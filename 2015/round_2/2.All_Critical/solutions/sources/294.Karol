//Karol Kaszuba
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef double D;
typedef long double LD;
typedef vector<PII> VII;

#define FOR(i,x,y) for(auto i=(x);i<=(y);++i)
#define REP(i,x) FOR(i,0,(x)-1)
#define FORD(i,x,y) for(auto i=(x);i>=(y);--i)
#define VAR(i,c) __typeof(c) i=(c)
#define FORE(i,c) for(VAR(i,(c).begin());i!=(c).end();++i)

#define SIZE(c) (int)((c).size())
#define ALL(c) (c).begin(),(c).end()
#define PB push_back
#define IN insert
#define ER erase
#define MP make_pair
#define ST first
#define ND second
#define IOSYNC ios_base::sync_with_stdio(0)
#define FREOPEN(f) freopen(f, "r", stdin),freopen(f, "w", stdout)

LD tab[100006][21][21];
LD binom[1006][1006], wyn[25][25];


LD jebaj()
{
	LD p;
	cin >> p;
	int N = 20000;
	
	FOR(i, 1, 21)
	{
		FOR(j, 0, i)
		{
			wyn[i][j] = binom[i][j] * pow(p, j) * pow(1 - p, i - j);
		}
	}
	
	tab[0][0][0] = 1;
	FOR(i, 1, N)
	{
		FOR(j, 1, 20)
			tab[i][j][0] = tab[i - 1][j][0] * pow(1 - p, j);
	}
	FOR(j, 1, 20)
	{
		FOR(k, 1, j)
		{
			FOR(i, 1, N)
			{
				tab[i][j][k] = 0.0;
				FOR(t, 0, k)
				{
					tab[i][j][k] += tab[i - 1][j - t][k - t] * wyn[j][t];
				}
			}
		}
	}
	LD res = 0;
	FOR(i, 1, N)
	{
		res += tab[i][20][20] * (LD)i;
	}
	return res;
}

void prepro()
{
	int N = 22;
	binom[0][0] = 1;
	FOR(i, 1, N)
	{
		binom[i][0] = 1;
		binom[i][i] = 1;
		FOR(j, 1, i - 1)
		{
			binom[i][j] = binom[i - 1][j - 1] + binom[i - 1][j];
		}
	}
}

int main()
{
	prepro();
	IOSYNC;	
	int t;
	t = 1;
	cin >> t;
	
	REP(i, t) 
	{
		cout << "Case #" << i + 1 << ": ";
		cout << fixed;
		cout << setprecision(5) << jebaj() << "\n";
	}
}
