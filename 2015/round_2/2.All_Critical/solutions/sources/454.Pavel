#include <cstdio>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cmath>
#include <bitset>
#include <set>
#include <cstdlib>
#include <map>
#include <string>
#include <iomanip>
#include <string.h>
#include <deque>

using namespace std;

const int magic = 10000, n = 20;
double dp[magic+3][n+1];
double P, p[n+1], np[n+1], pw2[n+1];
double c[n+1][n+1];
const double eps = 1e-18;
void solve(int test)
{
	cin>>P;
	p[0] = np[0] = 1.0;
	for (int i=1; i<=n; i++) p[i] = p[i-1]*P;
	for (int i=1; i<=n; i++) np[i] = np[i-1]*(1.0-P);
	
	memset(dp, 0, sizeof(dp));
	dp[0][0] = 1.0;
	for (int i=0; i<magic; i++)
	{
		for (int j=0; j<n; j++)
		{
			if ( dp[i][j] < eps ) continue;
			
			for (int k=0; k<=j; k++)
			{
				for (int nw = 0; nw <= n-j; nw++)
				{
					dp[i+1][j+nw] += dp[i][j]*( c[j][k] * p[k] * np[j-k] )* ( c[n-j][nw] * p[nw] * np[n-j-nw] );
				}
			}
		}
	}
	/*for (int i=0; i<5; i++)
	{
		cout<<fixed<<setprecision(3);
		for (int j=0; j<=n; j++)
			cout<<dp[i][j]<<" ";
		cout<<endl<<endl;
	}*/
	double ans = 0.0;
	for (int i=0; i<=magic; i++) 
		ans += 1.0*i*dp[i][n];
	cout<<"Case #"<<test<<": "<<ans<<endl;	
}
int main()
{
	freopen("output.txt", "w", stdout);
	cout<<fixed<<setprecision(9);
	pw2[0] = 1.0;
	for (int i=1; i<=n; i++) pw2[i] = pw2[i-1]*2.0;
	c[0][0] = 1.0;
	for (int i=1; i<=n; i++)
	{
		c[i][0] = 1.0;
		for (int j=1; j<=i; j++)
			c[i][j] = c[i-1][j-1] + c[i-1][j];
	}
	int test;
	cin>>test;
	for (int i=1; i<=test; i++) 
		solve(i);
	return 0;
}
