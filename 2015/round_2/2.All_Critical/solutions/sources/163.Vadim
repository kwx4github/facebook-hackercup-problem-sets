def fac(n)
    (1..n).reduce(1, :*)
end

def prob(maxn, n, p)
#maxn = 20
    q = 1.0 - p
    fac(maxn) / fac(n) / fac(maxn - n) * (p ** n) * (q ** (maxn - n))
end


gets.to_i.times do |test|
    $stderr.puts test
    pp = gets.to_f
    row_prev = [1.0] + [0.0] * 20
    res = 0.0
    (1..1300).each do |turn|
        row_next = []
        21.times do |i|
            acc = 0.0
            (0..i).each{ |j| acc += row_prev[j] * prob(20 - j, i - j, pp) }
            row_next.push acc
        end
        res += row_next.last * turn
        row_prev = row_next
        row_prev[-1] = 0
    end
    puts "Case ##{test+1}: #{format("%.5f", res)}"
end
