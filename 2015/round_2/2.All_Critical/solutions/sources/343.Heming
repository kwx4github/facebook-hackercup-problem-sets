import java.io.*;
import java.util.*;

public class Solution {
	
	static int N = 20;
	static double[][] w;
	
	static public void main(String[] args) throws IOException {
		Scanner scan = new Scanner(new File("Bsub.in"));
		PrintWriter pw = new PrintWriter("Bsub.out");
		int T;
		double p;
		double[] f;
		
		T = scan.nextInt();
		for (int ti = 1; ti <= T; ti ++) {
			p = scan.nextDouble();
			f = new double[N+1];
			w = new double[N+1][N+1];
			calcWeight(p);
			f[N] = 0;
			for (int i = N - 1; i >= 0; i --) {
				//f(i) = sum{ w(i,j) * (f(j) + 1), j = i.. N } 
				//w(i, j) = Choose (j - i) from (N - i)
				//f(i) - w(i,i){Choose 0 from N-i} * (f(i) + 1) = sum{ w(i,j) * (f(j) + 1), j = i .. N }
				double sum = 0;
				for (int j = i + 1; j <= N; j ++) {
					sum += w[N - i][j - i] * (f[j] + 1);
				}
				sum += w[N - i][0];
				f[i] = sum / (1 - w[N-i][0]);
			}
			pw.println(String.format("Case #%d: %.5f", ti, f[0]));
		}
		scan.close();
		pw.close();
	}
	
	static void calcWeight(double p) {
		w[0][0] = 1;
		for (int i = 1; i <= N; i ++) {
			for (int j = 0; j <= N; j ++) {
				w[i][j] = 0;
				if (j > 0) w[i][j] += w[i-1][j-1] * p;
				if (j < i) w[i][j] += w[i-1][j] * (1 - p);
			}
		}
	}
}
