package facebook;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.security.KeyStore.Entry;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;

public class Qual {

	private static BufferedReader br = null;
	private static int readInt() {
		try {
			return Integer.parseInt(br.readLine());
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}
	private static double readDouble() {
		try {
			return Double.parseDouble(br.readLine());
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}
	private static int[] readIntArr() {
		int[] ret = null;
		String[] tmp;
		try {
			String str = br.readLine();
			tmp = str.split(" ");
			ret = new int[tmp.length];
			for (int i = 0; i < tmp.length; i++)
				ret[i] = Integer.parseInt(tmp[i]);
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return ret;
	}
	
	static double[][] cnk = new double[21][21];
	
	public static void main(String[] args) {
		//Scanner in = null;
		try {
//			in = new Scanner(new File("E:\\workspace\\facebook\\bin\\input.txt"));
			System.setOut(new PrintStream(new FileOutputStream("E:\\workspace\\output.txt")));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			br = new BufferedReader(new FileReader("E:\\workspace\\input.txt"));
		}  catch (FileNotFoundException e) {
		    e.printStackTrace();
		}
		for (int i = 0; i < 21; i++) {
			cnk[0][i] = 0;
			cnk[i][0] = 1;
		}
		for (int i = 1; i < 21; i++) {
			for (int j = 1; j <= i; j++) {
				cnk[i][j] = cnk[i - 1][j-1] + cnk[i-1][j];
			}
		}
		int T = readInt();
		for(int ind = 1; ind <= T; ind++) {
			double p = readDouble();
			double pp[] = new double[21];
			double np[] = new double[21];
			pp[0] = 1;
			np[0] = 1;
			for (int i = 1; i < 21; i++) {
				pp[i] = p * pp[i-1];
				np[i] = (1. - p) * np[i -1];
			}
			double d[][] = new double[21][10003];
			for (int i = 0; i < 21; i++) {
				d[i][1] = pp[i] * cnk[20][i] * np[20 - i];
			}
			double ret = d[20][1];
			for (int j = 2; j < 10001; j++) {
				for (int i = 0; i < 21; i++) {
					d[i][j] = 0;
					for (int k = 0; k <= i; k++) {
						d[i][j] += d[k][j - 1] * pp[i - k] * cnk[20 - k][i - k] * np[20 - i];
					}
				}
				ret += j * (d[20][j] - d[20][j-1]);
			}
			ret *= 100000.;
			ret = Math.round(ret);
			ret /= 100000;
			System.out.println("Case #" + ind + ": " + ret);
		}
	}

}
