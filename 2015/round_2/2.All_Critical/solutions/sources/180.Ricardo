#include <cstdio>
#include <cstring>

#define MAX 100000

using namespace std;

double ch[32][32];
int T, C=1;
double p, pna[32], ummenospna[32];

inline double chance(int z, int tot) {
    return ch[z][tot];
}

double PD[32][MAX+2];
bool tem[32][MAX+2];

double calc(int qts, int depth) {
    if (qts==20) return 0.0;
    if (depth == MAX) return 0.0;

    if (tem[qts][depth]) return PD[qts][depth];

    int falta = 20-qts;
    double soma = 0.0;
    for (int z=0;z<=falta;z++) {
        double tt = chance(z,falta)*(1.0 + calc(qts+z,depth+1));
        soma += tt;
    }
    tem[qts][depth] = true;
    return PD[qts][depth] = soma;
}

int main() {

    for(scanf("%d",&T);T--;) {
        printf("Case #%d: ",C++);
        scanf("%lf",&p);

    pna[0] = 1.0;
    ummenospna[0] = 1.0;
    for (int i=1;i<32;i++) {
        pna[i] = pna[i-1]*p;
        ummenospna[i] = ummenospna[i-1]*(1.0 - p);
    }

    memset(ch,0,sizeof(ch));
    for (int tot=1;tot<=20;tot++) {
        for (int z=0;z<=tot;z++)
            ch[z][tot] = 0.0;
        for (int bm=0;bm<(1<<tot);bm++) {
            int z = __builtin_popcount(bm);
            ch[z][tot] += pna[z]*ummenospna[tot-z];
        }
    }



        memset(tem,false,sizeof(tem));
        double r = calc(0,0);
        printf("%.5lf\n",r);
    }

    return 0;
}
