#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for( it = coll.begin(); it != coll.end(); ++it)
const int MAXN = 35000;
typedef long long LL;

double C[21];

double rec(int n, int k)
{
	if (k == 0) return 1.0;
	if (n == k)
		return 1.0;
	if (k == 1)
		return n;
	return rec(n - 1, k - 1) + rec(n - 1, k);
}

int main() {
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

	for (int i = 0; i <= 20; i++)
	{
		C[i] = rec(20, i);

	}

	int T;
	cin >> T;
	for (int test = 0; test < T; test++)
	{
		long double p;
		cin >> p;
		long double q = 1.0 - p;
		long double ans = 0;
		for (int i = 1; i < 10000; i++)
		{
			double closeOnThis = 0.0;
			for (int j = 1; j <= 20; j++)
			{
				closeOnThis += pow((1.0 - pow(q, i - 1)), 20 - j)*C[j] * pow(pow(q, i - 1)*p, j);
			}
			ans = ans + i*closeOnThis;
			//	cout << closeOnThis << endl;
		}
		

		printf("Case #%d: %.10lf\n", test + 1, ans);

	}


	

	return 0;
}