#include <vector>
#include <iostream>
#include <sstream>
#include <math.h>
#include <sys/time.h>
#include <cstdlib>
#include <algorithm>
#include <cassert>
#include <cstring>
#include <fstream>
#include <set>

#define FOR(i,a,b)  for(__typeof(b) i=(a);i<(b);++i)
#define REP(i,a)    FOR(i,0,a)
#define FOREACH(x,c)   for(__typeof(c.begin()) x=c.begin();x != c.end(); x++)
#define ALL(c)      c.begin(),c.end()
#define CLEAR(c)    memset(c,0,sizeof(c))
#define SIZE(c) (int) ((c).size())

#define PB          push_back
#define MP          make_pair
#define X           first
#define Y           second

#define ULL         unsigned long long
#define LL          long long
#define LD          long double
#define II         pair<int, int>
#define DD         pair<double, double>

#define VC	    vector
#define VI          VC<int>
#define VVI         VC<VI>
#define VD          VC<double>
#define VS          VC<string>
#define VII         VC<II>
#define VDD         VC<DD>
#define VVD         

#define DB(a)       cerr << #a << ": " << a << endl;

using namespace std;

template<class T> void print(VC < T > v) {cerr << "[";if (SIZE(v) != 0) cerr << v[0]; FOR(i, 1, SIZE(v)) cerr << "," << v[i]; cerr << "]\n";}
template<class T> string i2s(T &x) { ostringstream o; o << x; return o.str(); }
VS split(string &s, char c = ' ') {VS all; int p = 0, np; while (np = s.find(c, p), np >= 0) {if (np != p) all.PB(s.substr(p, np - p)); p = np + 1;} if (p < SIZE(s)) all.PB(s.substr(p)); return all;}

double solve(double p){
    double q = 1-p;
    double binom[21][21];
    binom[0][0] = 1;
    FOR(n,1,21){ 
        binom[n][0] = pow(q,n); 
        binom[n][n] = pow(p,n);
        FOR(k,1,n)
            binom[n][k] = p*binom[n-1][k-1] + q*binom[n-1][k];
    }
    double E[21];
    E[0] = 0;
    FOR(n,1,21){
        E[n] = 1;
        FOR(k,1,n+1)
            E[n] += binom[n][k]*E[n-k];
        E[n] /= (1-binom[n][0]);
    }
    return E[20];
}

int main(int argc, char *argv[]){
    int T;
    cin >> T;
    REP(t,T){
        double p;
        cin >> p;
        std::cout.setf(std::ios_base::fixed, std::ios_base::floatfield);
        cout.precision(5);
        cout << "Case #" << t+1 << ": " << solve(p) << endl;
    }
    return 0;
}
