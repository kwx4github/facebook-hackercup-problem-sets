#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>

#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
#define LL long long
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define setzero(a) memset(a,0,sizeof(a))
#define setDP(a) memset(a,-1,sizeof(a))

using namespace std;

const int Magic = 10000;

double p;
double DP[21][21][Magic];

double solve(int ind, int sz, int c)
{
    if(sz == 0) return 1;
    if(ind == sz)
        return solve(0, sz, c + 1) + 1;
    double &temp = DP[ind][sz][c];
    if(temp != -1) return temp;
    temp = 0;
    if(c == Magic - 2)
        return temp = solve(ind, sz - 1, c) * p;
    return temp = solve(ind + 1, sz, c) * (1.0 - p) + solve(ind, sz - 1, c) * p;
}

int main()
{
    //ios_base::sync_with_stdio(0);
    freopen("all_critical.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    int t;
    cin >> t;
    int tt = 1;
    while(t--)
    {
        cin >> p;
        for(int i=0;i<=20;i++)
            for(int j=0;j<=20;j++)
                for(int k=0;k<=Magic - 2;k++)
                        DP[i][j][k] = -1;
        cout << "Case #" << tt++ << ": ";
        printf("%.5f\n", solve(0, 20, 0));
    }
    return 0;
}
