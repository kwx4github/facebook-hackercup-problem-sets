package facebook.roundtwo;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Scanner;

/**
 * User: RK
 * Date: 11.01.15
 * Time: 13:34
 */
public class B {

    public static BigDecimal mem[][];
    public static long memC[][] = new long[21][21];

    public static long C(int n, int count) {
        if (count==0) {
            return 1;
        }
        if (n==0) {
            return 0;
        }
        if (memC[n][count]>0) {
            return memC[n][count]-1;
        }
        long result = C(n-1,count)+C(n-1, count-1);
        memC[n][count] = result+1;
        return result;
    }

    public static BigDecimal P(int count, int steps, double p) {
        if (steps==0) {
            return BigDecimal.valueOf(count==0?1:0);
        }
        if (count==0) {
            return BigDecimal.valueOf(steps==0?1:0);
        }
        if (mem[count][steps]!=null) {
            return mem[count][steps];
        }
        BigDecimal result = BigDecimal.ZERO;
        for (int i=0;i<=count;i++) {
            BigDecimal current = BigDecimal.valueOf(1-p).pow(count-i);
            current = current.multiply(BigDecimal.valueOf(p).pow(i)).multiply(BigDecimal.valueOf(C(count, i)));
            result = result.add(current.multiply(P(count - i, steps - 1, p)));
            //current.multiply()
            //result+=Math.pow(1-p,count-i)*Math.pow(p, count)*P(count-i, steps-1, p)*C(count, i);
        }
        result = result.setScale(500, RoundingMode.DOWN);
        mem[count][steps] = result;
        return result;
    }

    public static void main(String[] args) throws FileNotFoundException {
        Scanner in = new Scanner(new FileInputStream("testZ/b.in"));
        PrintWriter out = new PrintWriter(new FileOutputStream("testZ/b.out"));
//        Scanner in = new Scanner(System.in);
//        PrintWriter out = new PrintWriter(System.out);
        int t = in.nextInt();
        int test = 1;
        while (t-->0) {
            mem = new BigDecimal[21][5001];
            double p = Double.valueOf(in.next());
            //p = 0.9;
            BigDecimal mx = BigDecimal.ZERO;
            BigDecimal sum = BigDecimal.ZERO;
            for (int i=0;i<5000;i++) {
                mx = mx.add(P(20, i, p).multiply(BigDecimal.valueOf(i)));
                //System.out.println(P(20, i, p).doubleValue()+" "+mx.doubleValue());
                sum = sum.add(P(20, i, p));
            }


            out.println("Case #"+test+": "+String.format(Locale.US,"%.5f", mx.doubleValue()));
            //System.out.println("Case #"+test+": "+String.format(Locale.US, "%.5f", mx.setScale(5, RoundingMode.DOWN).doubleValue()));
            test++;
        }
        out.close();
    }

}
