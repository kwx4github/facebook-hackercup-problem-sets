#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <string>
#include <climits>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <ctime>
#include <iostream>
#include <sstream>
#include <cctype>

#define PI 3.14159265358979
#define EPS 1e-9

using namespace std;

#define REP(i, n) for (int i=0; i<n; i++)
#define FOR(i, m, n) for (int i=m; i<=n; i++)
#define ABS(a) (((a)>0)?(a):(-(a)))
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int,int> ii;

int comb[25][25];
double pp[25];
double qq[25];
double E[25];

void solve() {
	double p; scanf("%lf", &p);
	double q = 1.0-p;
	int n = 20;
	pp[0] = 1; FOR (i, 1, 22) pp[i] = p*pp[i-1];
	qq[0] = 1; FOR (i, 1, 22) qq[i] = q*qq[i-1];
	E[n] = 0;
	REP(i, 25) E[i] = 0;
	for (int k=n-1; k>=0; k--) {
		E[k] = 1;
		for (int i=1; i+k<=n; i++) {
			E[k] += comb[n-k][i]*pp[i]*qq[n-k-i]*E[k+i];
		}
		E[k] /= (1.0 - qq[n-k]);
	}
	printf("%lf\n", E[0]);
}

int main() {
	comb[1][0] = comb[1][1] = 1;
	FOR (i, 2, 24) {
		comb[i][0] = 1;
		FOR (j, 1, i) comb[i][j] = comb[i-1][j] + comb[i-1][j-1];
	}
	int t; scanf("%d", &t);
	REP(i, t) {
		printf("Case #%d: ", i+1);
		solve();
	}
	return 0;
}
