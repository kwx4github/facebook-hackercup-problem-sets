def C(n, k):
    result = 1
    for i in range(1, k+1):
        result = result * (n-i+1) / i
    return result

def fun(p, x, n):
    a = (p ** x) * ((1-p) ** (n-x)) * C(n, x)
    # print p, x, n, a
    return (p ** x) * ((1-p) ** (n-x)) * C(n, x)

memo = {}
def solve(p, n, t):
    if n == 0 or t > 2000:
        return t
    if (n, t) in memo:
        return memo[(n, t)]

    result = 0.0
    for i in range(0, n+1):
        result += fun(p, i, n) * solve(p, n-i, t+1)

    memo[(n, t)] = result
    return result

T = int(raw_input())

import sys
sys.setrecursionlimit(100000)

for t in range(T):
    memo = {}
    p = float(raw_input())
    result = solve(p, 20, 0)
    # print memo
    print 'Case #%d: %s' % (t+1, "{0:.5f}".format(result))
