#include<iostream>
#include<algorithm>
#include<vector>
#include<utility>
#include<cmath>
#include<cstdio>
using namespace std;

double dp[21];

int com[21][21];


double find(double r)
{
    double ans;
    dp[1] = 1/r;
    for(int i=2;i<=20;i++)
    {
        dp[i] = pow(r,i);
        for(int j=1;j<i;j++)
        {
	   dp[i] += com[i][j]*(dp[j]+1)*pow(r,i-j)*pow(1-r,j);
        } 
       dp[i] += pow(1-r,i);
       dp[i] = dp[i]/(1-pow(1-r,i));
    }
   return dp[20];
}

void precompute()
{
    for(int i=1;i<21;i++)
    com[i][0] = 1;
    for(int i=1;i<=20;i++)
    {
       for(int j=1;j<=i;j++)
	{com[i][j] = com[i][j-1]*(i-j+1);
	com[i][j] = com[i][j]/j;
        }
    }
}

int main()
{
     precompute();
     int T;
     double r;
     cin >> T;
     for(int i=0;i<T;i++)
     {
	cin >> r;
	cout << "Case #" << i+1 << ": ";
	printf("%.5lf\n",find(r));
     }
     return 0;
}
