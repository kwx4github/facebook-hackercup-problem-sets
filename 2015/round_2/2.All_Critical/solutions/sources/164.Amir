#include <iostream>
#include<memory.h>
#include <map>
#include <string>
#include <iomanip>
#include <fstream>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

/*
int main()
{
	
	ifstream cin;
	cin.open("in.in");
	ofstream cout;
	cout.open("out.out");
	
	int t;
	cin>>t;
	for (int z = 1; z <= t; z++)
	{
		int N;
		cin>>N;
		vector<int> a(N);
		for (int i = 0; i < N; i++)
		{
			cin>>a[i];
		}
		bool yes = false;
		int b = 0, e = N-1;
		deque<int> q1;
		q1.push_back(a[e]);
		e--;
		while (b <= e)
		{
			if (a[b] == q1.front() - 1)
			{
				q1.push_front(a[b]);
				b++;
			}
			else if (a[b] == q1.back() + 1)
			{
				q1.push_back(a[b]);
				b++;
			}
			else if (a[e] == q1.front() - 1)
			{
				q1.push_front(a[e]);
				e--;
			}
			else if (a[e] == q1.back() + 1)
			{
				q1.push_back(a[e]);
				e--;
			}
			else
			{
				break;
			}
		}
		if (b > e)
		{
			yes = true;
		}
		b = 0;
		e = N-1;
		deque<int> q2;
		q2.push_back(a[b]);
		b++;
		while (b <= e)
		{
			if (a[b] == q2.front() - 1)
			{
				q2.push_front(a[b]);
				b++;
			}
			else if (a[b] == q2.back() + 1)
			{
				q2.push_back(a[b]);
				b++;
			}
			else if (a[e] == q2.front() - 1)
			{
				q2.push_front(a[e]);
				e--;
			}
			else if (a[e] == q2.back() + 1)
			{
				q2.push_back(a[e]);
				e--;
			}
			else
			{
				break;
			}
		}
		if (b > e) yes = true;
		if (yes)
		{
			cout<<"Case #"<<z<<": yes"<<endl;
		}
		else
		{
			cout<<"Case #"<<z<<": no"<<endl;
		}
	}
}
*/

int main()
{
	double f;
	
	ifstream cin;
	cin.open("in.in");
	ofstream cout;
	cout.open("out.out");
	
	int t;
	cin>>t;
	for (int z = 1; z <= t; z++)
	{
		double P;
		cin>>P;
		f = 1-P;
		double res = 0.0;
		double cumF = 1;
		double past = 0.0;
		for (int i = 1; true; i++)
		{
			cumF *=f;
			double pw = pow(1-cumF, 20);
			double cur = pw-past;
			past += cur;
			res += i*cur;
			if (i > 1000000 && i*cur < 0.0000001) break;
		}
		cout<<fixed<<setprecision(5)<<"Case #"<<z<<": "<<res<<endl;
	}
}