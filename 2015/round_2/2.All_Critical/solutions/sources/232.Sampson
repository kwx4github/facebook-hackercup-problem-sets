#include <cstdio>
#include <algorithm>
#define N 20
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int tc;
double dp[2][N + 1], p, ans, c[N + 1][N + 1], d[N + 1], lap[N + 1][N + 1][N + 1];

int main(){
	c[0][0] = 1;
	FI(i, 1, N){
		c[i][0] = 1;
		FI(j, 1, i) c[i][j] = c[i - 1][j] + c[i - 1][j - 1];
	}
	
	FI(i, 0, N){
		int mask = (1 << i) - 1;
		fi(j, 0, 1 << N) lap[i][__builtin_popcount(j)][__builtin_popcount(mask | j)]++;
	}
	
	scanf("%d", &tc);
	FI(tt, 1, tc){
		scanf("%lf", &p);
		
		FI(i, 0, N){
			d[i] = 1;
			fi(j, 0, i) d[i] *= p;
			fi(j, 0, N - i) d[i] *= 1 - p;
		}
		
		ans = 0;
		FI(i, 0, N) dp[0][i] = 0;
		dp[0][0] = 1;
		
		FI(i, 1, 10000){
			int t = i & 1, l = t ^ 1;
			FI(j, 0, N) dp[t][j] = 0;
			FI(j, 0, N) FI(k, 0, N) FI(x, j, N)
				dp[t][x] += dp[l][j] * lap[j][k][x] * d[k];
				
			ans += dp[t][N] * i;
			//if(i < 10) FI(j, 0, N) printf("%d %d %lf\n", i, j, dp[t][j]);
			dp[t][N] = 0;
		}
		
		printf("Case #%d: %.5lf\n", tt, ans);
	}
	scanf("\n");
}
