#pragma comment(linker, "/stack:32000000")
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <cmath>
#include <sstream>
#include <stack>
#include <cassert>
#include <string.h>
#include <ctime>

#define pb push_back
#define mp make_pair
#define PI 3.1415926535897932384626433832795
#define sqr(x) (x)*(x)
#define forn(i, n) for(int i = 0; i < n; ++i)
#define ALL(x) x.begin(), x.end()
#define sz(x) int((x).size())
#define X first
#define Y second
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
using namespace std;
typedef pair<int,int> pii;
const int INF = 2147483647;
const ll LLINF = 9223372036854775807LL;

const int maxn = 23;
double dp[maxn];

double comb[maxn][maxn];

void solve() {
	double p; scanf("%lf", &p);
	dp[20] = 0;
	for (int i = 19; i >= 0; --i) {
		int rem = 20-i;
		dp[i] = pow(1-p, rem);
		for (int j = 1; j <= rem; ++j) {
			double prob = pow(p, j) * pow(1-p, rem-j) * comb[rem][j] * (1+dp[i+j]);
			dp[i] += prob;
		}
		dp[i] /= (1-pow(1-p, rem));
	}
	printf("%.5lf\n", dp[0]);
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	forn(i, maxn) comb[i][0] = 1;
	for(int i = 1; i < maxn; ++i) for (int j = 1; j < maxn; ++j) comb[i][j] = comb[i-1][j] + comb[i-1][j-1];
	int T; scanf("%d", &T); for (int tn = 1; tn <= T; ++tn) {
		printf("Case #%d: ", tn);
		solve();
	}
	return 0;
}