package hackercup._2015.r2;


import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.Scanner;
import java.util.concurrent.ForkJoinPool;

public class B {

	Scanner scanner;

	private void solve() throws FileNotFoundException {
		File input = new File("data/hackercup/2015/r2/all_critical.txt");
		scanner = new Scanner(input);

		File test = new File("data/hackercup/2015/r2/B.out");
		PrintStream out = new PrintStream(new FileOutputStream(test));
		System.setOut(out);

		int testCase = scanner.nextInt();
		scanner.nextLine();

		c = new int[22][22];
		for (int i = 0; i < c.length; i++) {
			for (int j = 0; j < c[i].length; j++) {
				c[i][j] = -1;
			}
		}
//		System.out.println(c(0, 1));

		for (int i = 1; i <= testCase; i++) {
			System.out.printf("Case #%d: %.5f\n", i, solveCase());
		}
	}
	

	private double solveCase() {
		double p = scanner.nextDouble();
		double[] f = new double[21];

		for (int i = 1; i <= 20; i++) {
			double temp = 0;
			for (int j = 0; j < i; j++) {
				temp += c(i, j) * Math.pow(p, j) * Math.pow(1 - p, i - j) * (1 + f[i - j]);
			}
			f[i] = temp / (1 - Math.pow(1 - p, i));
//			System.out.println(p + " " + i + " " + f[i]);
		}

		return f[20] + 1;
	}

	int[][] c;
	private int c(int a, int b) {
		if (c[a][b] < 0) {
			if (a < b) {
				c[a][b] = 0;
			} else if (b == 0) {
				c[a][b] = 1;
			} else {
				c[a][b] = c(a - 1, b) + c(a - 1, b - 1);
			}
		}
		return c[a][b];
	}

	public static void main(String[] args) throws FileNotFoundException {
		new B().solve();
	}
	
}
