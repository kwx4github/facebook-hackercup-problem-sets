#include <cstdio>
#include <cassert>

#include <algorithm>
#include <iostream>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

double dp[22];
double ch[22][22];

double solve() {
  double p;
  scanf("%lf", &p);

  REP(n, 22) REP(k, 22) {
    if (n < k) continue;
    if (k == 0) ch[n][k] = 1.0;
    else ch[n][k] = ch[n - 1][k] + ch[n - 1][k - 1];
  }

  dp[0] = 0.0;

  const int n = 20;
  for (int i = 1; i <= n; ++i) {
    dp[i] = 1.0;
    for (int j = 0; j < i; ++j)
      dp[i] += ch[i][j] * pow(1.0 - p, j) * pow(p, i - j) * dp[j];
    dp[i] /= (1.0 - pow(1.0 - p, i));
  }

  return dp[n];
}

int main(void) 
{
  int T;
  scanf("%d", &T);

  REP(tc, T) 
    printf("Case #%d: %.5lf\n", tc + 1, solve());

  return 0;
}
