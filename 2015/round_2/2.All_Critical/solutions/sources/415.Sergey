#pragma comment(linker, "/STACK:200000000")

#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <cassert>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <sstream>
#include <unordered_map>
#include <omp.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef vector <int> vi;

#define pb push_back
#define mp make_pair

template <class T> inline T sqr(const T& x) { return x * x; }
template <class T> inline void updMin(T& a, const T& b) { if (b < a) a = b; }
template <class T> inline void updMax(T& a, const T& b) { if (b > a) a = b; }

long double p; 
const int N = 10000000; 
int ITER = 1; 

long double pend[N]; 
long double f[N]; 


long double powew(long double x, long double p) {
	return exp(log(x) * p); 
}

int main()
{
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

	int t; 
	cin >> t; 
	cout.precision(8);
	for (int tt = 0; tt < t; tt++) {
		cerr << tt << "\n"; 
		long double p; 
		cin >> p;

		long double cur = p; 
		long double sum = 0; 
		for (int i = 0; i < N; i++) {
			pend[i] = pow(1 - p, i) * p; 
			f[i] = 1 - pow(1 - p, i + 1); 
		}

		long double ans = 0; 
		long double mul = 1; 
		long double prev = 0; 
		for (int i = 0; i < N; i++) {
			ans += (pow(f[i], 20) - pow(prev, 20)) * (i + 1);
			prev = f[i]; 
			continue; 
			ans += 20 * pend[i] * pow(f[i], 19); 
		}

		printf("Case #%d: %.5lf\n", tt + 1, ans);
	}

	
	return 0;
}


