#include <bits/stdc++.h>

using namespace std;

#define MAXN 50

int T, N;
double P;
double dp[MAXN];
double prob[MAXN][MAXN];

int main() {
	freopen("date.in", "r", stdin);
	freopen("date.out","w", stdout);
	cin.sync_with_stdio(false);
	
	N = 20;
	
	cin >> T;
	for (int t = 1; t <= T; t++) {
		cin >> P;
		
		prob[0][0] = 1.0;
		for (int i = 1; i <= N; i++) {
			prob[i][0] = prob[i - 1][0] * (1 - P);
			for (int j = 1; j <= i; j++) {
				// got it
				prob[i][j] = prob[i - 1][j - 1] * P;
				// missed
				prob[i][j] += prob[i - 1][j] * (1 - P);
			}
		}
		
		memset(dp, 0.0, sizeof(dp));
		for (int i = 1; i <= N; i++) {
			for (int j = 1; j <= i; j++) {
				dp[i] += (1 + dp[i - j]) * prob[i][j];
			}
			dp[i] += prob[i][0];
			dp[i] /= 1 - prob[i][0];
		}
		
		cout << "Case #" << t << ": ";
		cout << fixed << setprecision(5) << dp[N] << endl;
	}
	
	return 0;
}
