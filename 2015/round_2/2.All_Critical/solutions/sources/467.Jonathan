#include<iostream>
#include<string>
#include<vector>
#include<sstream>
#include<cmath>
#include<algorithm>
#include<numeric>
#include<map>
#include<set>
#include<queue>
#include<cstring>
#include<cstdio>
using namespace std ;
double p;
double pot[1<<21];
double memo[1<<21];
bool done[21];

double dp(int t){
    if(t==20)return 0;
    if(done[t]==1)return memo[t];
    int mask=(1<<t)-1;
    double failed=0;
    double dev=0;

    for(int i=0;i<(1<<20);i++){
        if( (mask|(i)) == mask)
            failed+=pot[i];
        else{
            dev+=pot[i]*dp(__builtin_popcount((mask|(i))) );
        }
    }
    
    dev=(1+dev )/( 1-failed );
    done[t]=1;
    memo[t]=dev;
    return dev;
}

int main(){
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    
    

    int tc;
    cin>>tc;

    for(int caso=1;caso<=tc;caso++){
        cin>>p;
        
        for(int i=0;i<(1<<20);i++){
            double x=1;
            for(int j=0;j<20;j++)
                if( (i&(1<<j))!=0 )
                    x*=p;
                else
                    x*=(1-p);         
            pot[i]=x; 
        }

        memset(done,0,sizeof(done));
        double dev=dp(0);
        printf("Case #%d: %.5lf\n",caso,dev);
    }
    
    return 0;
}






