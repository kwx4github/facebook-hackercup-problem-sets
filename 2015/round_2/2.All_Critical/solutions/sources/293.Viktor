#include <iostream>
#include <vector>
#include <iomanip>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include <list>
#include <algorithm>
#include <stdlib.h>
#include <stdio.h>
#include <cstring>
#include <ctime>
#include <string>
#include <sstream>
#include <math.h>

using namespace std;

long long C[25][25];

void preC() {
	C[0][0] = 1;
	for (int i = 1; i < 25; ++i) {
		C[i][0] = C[i][i] = 1;
		for (int j = 1; j < i; ++j) {
			C[i][j] = C[i-1][j-1] + C[i-1][j];
		}
	}

}

long double calc(long double p) {

	if (fabs(p - 1) < 1e-9) {
		return 1;
	}

	long double powP[25], powNP[25];
	powP[0] = powNP[0] = 1;
	for (int i = 1; i < 25; ++i) {
		powP[i] = powP[i-1] * p;
		powNP[i] = powNP[i-1] * (1-p);
	}

	long double prob[22];
	for (int i = 0; i <= 20; ++i) {
		prob[i] = C[20][i] * powP[i] * powNP[20-i];
	}


	long double answer = 0;
	for (int step = 1; step <= 100000; ++step) {
		answer += step * prob[20];
		
		long double next_prob[22] = {0,};

		for (int from = 0; from < 20; ++from) {
			for (int to = from; to <= 20; ++to) {
				next_prob[to] += prob[from] * powP[to-from] * C[20-from][to-from] * powNP[20-from -(to-from)];
			}
		}

		for (int i = 0; i <= 20; ++i) {
			prob[i] = next_prob[i];
		}
	}
	
	cerr << "pr 20 = " << prob[20] << endl;

	return answer;
}

int main() {

	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);

	preC();

	int T; cin >> T;
	for (int test = 1; test <= T; ++test) {

		long double p;
		cin >> p;

		
		int start_ = clock();
		long double answer = calc(p);
		
		cerr << "Time: " << (clock() - start_) * 1. / CLOCKS_PER_SEC << endl;
		

		cerr.precision(15);
		cerr << test << " " << fixed << answer << endl;
		cout.precision(5);
		cout << "Case #" << test << ": " << fixed << answer << "\n";
	}



	
	return 0;
}