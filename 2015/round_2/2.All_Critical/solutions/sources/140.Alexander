
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>
#include <numeric>
#include <cassert>
#include <unordered_set>
#include <unordered_map>
#include <fstream>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)

long double res[21];
long double bino[21][21];
void calc(){
	long double p;
	cin >> p;
	p = 1.0 - p;
	res[0] = 0;
	bino[0][0] = 1.0;
	FOR(i,1,21){
		bino[i][0] = p * bino[i-1][0];
		bino[i][i] = (1.0 - p) * bino[i-1][i-1];
		FOR(j,1,i){
			bino[i][j] = p * bino[i-1][j] + (1.0 - p) * bino[i-1][j-1];
		}
//		FOR(j,0,i+1)cout << bino[i][j] << " ";
//		cout << endl;
	}
	FOR(i,1,21){
		res[i] = 1.0;
		FOR(j,0,i)res[i] += bino[i][i-j] * res[j];
		res[i] /= 1.0 - bino[i][0];
	}
	printf("%.5lf\n", (double) res[20]);
}

int main() {
	int T;
	cin >> T;
	FOR(t,0,T){
		cout << "Case #" << t + 1 << ": ";
		calc();
	}
	return 0;
}
