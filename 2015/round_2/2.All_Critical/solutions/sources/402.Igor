import java.io.*;
import java.util.*;

class Fb2_2 
{
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new FileReader("all_critical.txt"));
		PrintWriter pw = new PrintWriter(new FileWriter("output2.txt"));
		
		int nrT = Integer.parseInt(br.readLine());
		for(int t = 1; t <= nrT; t++) {
			double p = Double.parseDouble(br.readLine());
			
			double[] powP = new double[21];
			double[] powN = new double[21];
			powP[0] = powN[0] = 1;
			for(int i = 1; i < powN.length; i++) {
	      powP[i] = powP[i - 1] * p;
	      powN[i] = powN[i - 1] * (1 - p);
      }
			double[][] ps = new double[6000][21];
			Arrays.fill(ps[0], 0);
			ps[0][0] = 1;
			
			for(int k = 1; k < ps.length; k++) {
				for(int i = 0; i <= 20; i++) {
					ps[k][i] = 0;
					for(int j = 0; j <= i; j++) {
						if(i == 20 && j == i) {
							continue;
						}
						long comb = binomialCoeficient(i - j, 20 - j);
						ps[k][i] += ps[k - 1][j] * powP[i - j] * powN[20 - i] * comb;
					}
				}
			}
			
			double res = 0;
			for(int i = 1; i < ps.length; i++) {
				res += i * ps[i][20];
			}

			long intRes = Math.round(res * 100000);
			String resStr = String.valueOf(intRes);
			pw.println("Case #" + t + ": " + resStr.substring(0, resStr.length() - 5) + "." + resStr.substring(resStr.length() - 5));
			pw.flush();
		}

		br.close();
		pw.close();
		System.out.println("done!");
	}
	
	public static long[][] binom = new long[21][21];

	public static long binomialCoeficient(int k, int n) {
		if (k == n) {
			return 1;
		}
		if (k == 0) {
			return 1;
		}
		if (n == 0) {
			return 0;
		}

		if (binom[k][n] != 0) {
			return binom[k][n];
		}

		binom[k][n] = (binomialCoeficient(k - 1, n - 1) + binomialCoeficient(
		    k, n - 1));
		return binom[k][n];
	}
}
