#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define LLD long long
using namespace std;

double p, E[25]; 
double C[25][25];

double solve(){
	scanf("%lf", &p);
	CLR(C, 0);
	FOE(i,0,20){
		C[i][0] = 1;
		if (i) C[i][0] = C[i-1][0] * (1 - p);
		FOE(j,1,i) C[i][j] = C[i-1][j-1] * p + C[i-1][j] * (1 - p);
	}
	E[20] = 0;
	FOD(i,20,0){
		E[i] = 0;
		double T = 0;
		FOE(j,i+1,20){
			T += C[20-i][j-i];
			E[i] += E[j] * C[20-i][j-i];
		}
		E[i] = (E[i] + 1.) / T;
	}
	return E[0];
}

int main(){
	int tc;
	scanf("%d", &tc);
	FOE(i,1,tc) printf("Case #%d: %.9f\n", i, solve());
	return 0;
}

