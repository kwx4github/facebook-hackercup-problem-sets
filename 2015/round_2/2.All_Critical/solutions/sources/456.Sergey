import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Scanner;

public class B {

    private static final int CNT = 20;

    class Pair {
        int k, x;

        public Pair(int k, int x) {
            this.k = k;
            this.x = x;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;

            Pair pair = (Pair) o;

            if (k != pair.k) return false;
            if (x != pair.x) return false;

            return true;
        }

        @Override
        public int hashCode() {
            int result = k;
            result = 31 * result + x;
            return result;
        }
    }

    double c(int n, int k) {
        double res = 1;
        for (int i = k + 1; i <= n; i++) {
            res *= i;
        }
        for (int i = 1; i <= n - k; i++) {
            res /= i;
        }
        return res / (1 << n);
    }


    Map<Pair, Double> save = new HashMap<Pair, Double>();

    double calc(int n) {
        Pair key = new Pair(n, 0);
        if (save.containsKey(key)) {
            return save.get(key);
        }
        if (n <= 0) {
            return 0;
        }
        double res = 0;
        for (int mask = 1; mask < (1 << n); mask++) {
            int cnt = Integer.bitCount(mask);
            res += Math.pow(p, cnt) * Math.pow(1 - p, n - cnt) * (calc(n - cnt) + 1);
        }
        //res = 0.1
        double X = (Math.pow(1 - p, n) + res) / (1 - Math.pow(1 - p, n));
        save.put(key, X);
        return X;
    }

    double p;

    void solve() {
        save.clear();
        p = in.nextDouble();
        System.out.printf("%.5f\n", calc(CNT));
    }

/*
p
X = p  + (1 - p) * (X + 1)
X = p  + X + 1 - p * X - p
p * X  = 1
X = 1 / p


     */


    private Scanner in;

    void run() {
        in = new Scanner(System.in);
        int t = in.nextInt();
        for (int it = 1; it <= t; it++) {
            System.out.print("Case #" + it + ": ");
            solve();
        }
    }

    public static void main(String[] args) {
        Locale.setDefault(Locale.US);
        new B().run();
    }
}
