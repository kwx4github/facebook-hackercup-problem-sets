#include <cmath>
#include <iomanip>
#include <algorithm>
#include <iostream>
#include <map>

using namespace std;

double binom(int n, int k) {
	if(k < n / 2) return binom(n, n - k);
	double res = 1;
	for(int i = n; i > k; --i) res *= i;
	for(int i = n - k; i > 0; --i) res /= i;
	return res;
}

double P;
map< int, double > X;

double get(int n) {
	if(X.find(n) != X.end()) return X[n];
	double res = pow(1 - P, n);
	for(int k = 1; k <= n; ++k) res += binom(n, k) * pow(P, k) * pow(1 - P, n - k) * (get(n - k) + 1);
	res /= 1 - pow(1 - P, n);
	return X[n] = res;
}

void solve(int t) {
	X.clear();
	cin >> P;
	X[0] = 0;
	cout << "Case #" << t << ": " << get(20) << '\n';
}

int main() {
	ios_base::sync_with_stdio(false);
	cout << fixed << setprecision(15);
	int T;
	cin >> T;
	for(int t = 1; t <= T; ++t) solve(t);
}
