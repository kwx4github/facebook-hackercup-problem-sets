#include <cstdio>
#include <cstring>
#include <cassert>

#include <algorithm>
#include <iostream>
using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define TRACE(x) cout << #x << " = " << x << endl
#define _ << " _ " <<

typedef long long llint;

double P;
double prob[30][30];
double C[30][30];

double memo[30];

double rec(int n) {
  if (n == 0) return 0;

  double &ret = memo[n];
  if (ret > -0.5) return ret;

  double sum = 1;
  FOR(w, 1, n+1) sum += prob[n][w] * rec(n-w);
  ret = sum / (1 - prob[n][0]);
  return ret;
}

int main() {
  REP(i, 30) {
    C[i][0] = C[i][i] = 1;
    FOR(j, 1, i) C[i][j] = C[i-1][j] + C[i-1][j-1];
  }

  int T;
  scanf("%d", &T);
  for (int tt = 1; tt <= T; ++tt, fflush(stdout)) {
    scanf("%lf", &P);

    FOR(n, 1, 30) REP(w, n+1) prob[n][w] = C[n][w] * pow(P, w) * pow(1-P, n-w);

    memset(memo, -1, sizeof memo);
    printf("Case #%d: %.5lf\n", tt, rec(20));
  }
  return 0;
}
