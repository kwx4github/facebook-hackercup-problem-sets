#include<cstdio>
#include<string>
#include<vector>
#include<algorithm>
#include<cmath>
#include<map>
#include<iostream>
#include<cstdlib>
#include<queue>
#include<sstream>
#include<queue>
#include<ctype.h>
#include<cstring>


using namespace std;

#define re return
#define co continue
#define pb push_back
#define br break
#define sz size


#define pf printf
#define sf scanf

#define NCR_MAX 21
double NCR[NCR_MAX][NCR_MAX];

double EXPTABLE[NCR_MAX];
double p;

void genNCR() {
    int i,j;
    for ( i=0; i< NCR_MAX; i++)
        NCR[i][0] = 1;
    for ( i=1; i< NCR_MAX; i++)
        for ( j=1; j<NCR_MAX; j++)
            NCR[i][j] = NCR[i-1][j] + NCR[i-1][j-1];
}

double getExpected(int left) {
    if ( EXPTABLE[left] > -1)
        return EXPTABLE[left];
    double expected = 1;
    int i;
    for ( i=left-1; i> 0 ; i--)
        expected += getExpected(i)*NCR[left][i] * pow(1-p, i) * pow(p, left - i);
    expected /= (1- pow(1-p, left ));
    EXPTABLE[left] = expected;
    return expected;
}

int main()
{

    freopen ("all_critical.txt", "r", stdin);
    freopen("ans_all.txt", "w", stdout);
    int T;
    cin>>T;
    int kase=1;
    genNCR();
    while ( T--) {

        cin>>p;
        int i;
        for ( i=0; i<NCR_MAX; i++)
            EXPTABLE[i] = -1;
        EXPTABLE[0] = 0;
        double expected = getExpected(20);
        printf("Case #%d: %.6lf\n", kase++, expected);
    }
    return 0;
}
