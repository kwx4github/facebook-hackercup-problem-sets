#include <iostream>
#include <fstream>
#include <stdio.h>
#include <utility>
#include <algorithm>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <math.h>
#include <cstdio>
#include <assert.h>

#define mset(x,y) memset(x,y,sizeof(x))
#define INF 1000000000
#define MOD 1000000007
#define pb(X) push_back(X) 
#define ff first
#define ss second
#define All(c) c.begin(), c.end()
#define foreach(c, it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define gi(n) scanf("%d",&n)
#define gli(n) scanf("%lld",&n)
#define gd(n) scanf("%lf",&n)
#define gs(n) scanf("%s",n)
 
using namespace std;
 
typedef long long int lli;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<double> vd;

double C[25][25];

double bin(int a, int b)
{
	if(a==b || b == 0) return 1.0;
	if(b>a || b<0) return 0.0;

	if(a-b<b) b = a-b;

	double prod = 1.0;
	while(b > 0)
	{
		prod*=(double) a/b;
		a--, b--;
	}

	return prod;
}

void init()
{
	for(int i=0; i<25; i++)
	for(int j=0; j<25; j++)
		C[i][j] = bin(i, j);

	// cout<<bin(5,2)<<"*"<<endl;
}

double dp[25];

int main()
{
	init();

	int t;
	gi(t);

	for(int tt=1; tt<=t; tt++)
	{
		double p;
		scanf("%lf", &p);
		dp[0] = 0.0;
		for(int i=1; i<=20; i++)
		{
			dp[i] = 1;
			for(int j=1; j<=i; j++) dp[i] += dp[i-j]*pow(p, j)*pow(1-p, i-j)*C[i][j];
			dp[i] /= (1-pow(1-p, i));
		}

		// for(int i=0; i<=20; i++) cout<<dp[i]<<" "<<endl;

		printf("Case #%d: %.5lf\n", tt, dp[20]);
	}

    return 0;
}