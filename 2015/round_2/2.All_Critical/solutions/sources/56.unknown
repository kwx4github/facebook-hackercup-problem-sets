// Template {{{
#include <bits/stdc++.h>
#define REP(i,n) for(int i=0; i<(int)(n); ++i)
using namespace std;
typedef long long LL;

template<typename T1, typename T2>
ostream& operator << (ostream& os, const pair<T1, T2>& p) {
    os << "(" << p.first << ", " << p.second << ")";
    return os;
}

template<typename T>
ostream& operator << (ostream& os, const vector<T>& v) {
    os << "{";
    for(int i = 0; i < v.size(); i++)
        os << v[i] << (i+1<v.size()?", ":"");
    os << "}";
    return os;
}

const int dx[4] = {1, 0, -1, 0};
const int dy[4] = {0, 1, 0, -1};
inline bool valid(int x, int w) { return 0 <= x && x < w; }

void iostream_init() {
    ios::sync_with_stdio(false);
    cin.tie(0);
}
//}}}

typedef long double D;
void solve() {
    D p;
    cin >> p;

    D dp[21] = {};
    dp[0] = 0;

    D comb[22][22] = {};
    for(int i = 0; i < 22; i++) {
        for(int j = 0; j <= i; j++) {
            if(j == 0 || j == i) {
                comb[i][j] = 1.0;
            } else {
                comb[i][j] = comb[i-1][j-1] + comb[i-1][j];
            }
        }
    }

    D px[22] = {};
    D qx[22] = {};
    px[0] = 1.0;
    qx[0] = 1.0;
    for(int i = 1; i < 22; i++) px[i] = px[i-1] * p;
    for(int i = 1; i < 22; i++) qx[i] = qx[i-1] * (1-p);

    for(int i = 1; i <= 20; i++) {
        for(int j = 0; j < i; j++) {
            const int x = i - j;
            D prob = comb[i][j] * px[x] * qx[j];
            dp[i] += (dp[j]+1) * prob;
        }
        D dame = 1.0 * qx[i];
        dp[i] = (dp[i] + dame) / (1 - dame);
    }

    printf("%.5Lf\n", dp[20]);

}

int main(){
    //iostream_init();

    int TESTCASE;
    cin >> TESTCASE;
    for(int testcase = 0; testcase < TESTCASE; testcase++) {
        cout << "Case #" << testcase + 1 << ": ";
        solve();
    }

    return 0;
}

/* vim:set foldmethod=marker: */

