#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <queue>
#include <cstring>
#include <string>

#define vi vector<int>
#define vpii vector< pair<int,int> >
#define pii pair<int,int>
#define mp(x,y) make_pair(x,y)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define sqr(x) ((x)*(x))
#define FOR(i,n) for (ll i = 0; i < ll(n); i++)
#define FOR1(i,n) for (ll i = 1; i < ll(n); i++)
#define READ(v,n) { FOR(i,n){int x;cin>>x;v.pb(x);} }
#define FREAD(v,n) { FOR(i,n){int x;in>>x;v.pb(x);} }
#define WRITE(v) "";FOR(i,sz(v))cout<<v[i]<<" ";cout
#define FWRITE(v) "";FOR(i,sz(v))out<<v[i]<<" ";out
#define gmin(a,b) { if (b < a) a = b; }
#define gmax(a,b) { if (b > a) a = b; }
#define pb push_back
#define ppb pop_back
typedef long long ll;
typedef unsigned long long ull;
using namespace std;

int main(void){
  int T;
  cin>>T;
  FOR1(t,T+1){
    double p;
    cin>>p;
    vector<double> pp;
    pp.pb(1);
    FOR(i,21){ pp.pb(pp[i]*p); }
    vector<double> pp2;
    pp2.pb(1);
    FOR(i,21){ pp2.pb(pp2[i]*(1-p)); }
//    vector<double> sump;
//    sump.pb(0);
//    FOR(i,21){
//      sump.pb(sump[i]+pp[i+1]);
//    }
    vector<vector<double>> bin;
    FOR(k,21){
      vector <double> bin1;
      double c=1;
      bin1.pb(c);
      FOR(i,k){
        c = c * (k-i) / (i+1);
        bin1.pb(c);
      }
      bin.pb(bin1);
    }
    
//    FOR(k,21){
//      FOR(j,k+1){
//        cerr<<bin[k][j]<<" ";
//      }
//      cerr<<endl;
//    }
    
    double ave = 0;
    vector <double> vd(21, 0);
    vd[20]=1;
    FOR(i,100000){
      vector <double> vd2(21, 0);
      for(double x=20;x>0;x--){
        for(double y = x; y>=0; y--){
          vd2[y] += vd[x] * pp[x-y] * pp2[y] * bin[x][x-y];
          //sum += vd[x] * pp[x-y] * pp2[y] * bin[x][x-y];
        }
      }
      //cerr<<vd[0]<<endl;
      vd = vd2;
      ave+=vd[0] * (i+1);
      if(i%10000==0)cerr<<std::setprecision (15)<<vd[0] * (i+1)<<":"<<ave<<endl;
    }
    cout<<std::setprecision (15)<<"Case #"<<t<<": "<< ave <<endl;    
  }
    
  return 0;
}
