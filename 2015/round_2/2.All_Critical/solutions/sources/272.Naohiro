using System;
using System.Collections.Generic;
using System.Linq;

class Myon
{
    public Myon() { }
    public static void Main()
    {
        new Myon().run2();
    }

    Scanner cin;
    public void run2()
    {
        init();
        cin = new Scanner();
        int T = cin.nextInt();
        for (int i = 0; i < T; i++)
        {
            Console.Write("Case #{0}: ", i + 1);

            run();
        }
    }


    void init()
    {
    }

    const int MAX = 21;
    double[,] pp = new double[MAX, MAX];

    void first(double p)
    {
        pp[0, 0] = 1;
        for (int i = 1; i < MAX; i++)
        {
            pp[i, 0] = pp[i - 1, 0] * (1 - p);
            for (int j = 1; j < MAX; j++)
            {
                pp[i, j] = pp[i - 1, j] * (1 - p);
                pp[i, j] += pp[i - 1, j - 1] * p;
            }
        }
    }

    void run()
    {
        double p = cin.nextDouble();
        first(p);
        double[] dp = new double[MAX];
        dp[0] = 0;
        for (int i = 1; i < MAX; i++)
        {
            for (int j = 0; j < i; j++)
            {
                dp[i] += dp[j] * pp[i, i - j];
            }
            dp[i] /= (1 - pp[i, 0]);
            dp[i] += 1 / (1 - pp[i, 0]);

        }
        Console.WriteLine("{0:0.000000000000000}", dp[MAX - 1]);

    }



}

class Scanner
{
    string[] s;
    int i;

    char[] cs = new char[] { ' ' };

    public Scanner()
    {
        s = new string[0];
        i = 0;
    }

    public string next()
    {
        if (i < s.Length) return s[i++];
        string st = Console.ReadLine();
        while (st == "") st = Console.ReadLine();
        s = st.Split(cs, StringSplitOptions.RemoveEmptyEntries);
        i = 0;
        return s[i++];
    }

    public int nextInt()
    {
        return int.Parse(next());
    }

    public long nextLong()
    {
        return long.Parse(next());
    }

    public double nextDouble()
    {
        return double.Parse(next());
    }

}
