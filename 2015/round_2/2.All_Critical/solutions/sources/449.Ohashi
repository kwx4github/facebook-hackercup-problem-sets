#include <iostream>
#include <vector>
#include <algorithm>
#include <deque>
#include <cmath>

using namespace std;
typedef long long li;
#define rep(i, n) for (li i = 0; i < (li)(n); ++i)

const li inf = 1LL << 50;
const int n = 20;
double p;

double binom(int m, int k) {
    double ret = pow(p, k) * pow(1 - p, m - k);
    for (int i = 1; i <= k; ++i) {
        ret /= i;
        ret *= m - i + 1;
    }
    return ret;
}

double dp[n+1];
double rec(int left) {
    if (dp[left] >= 0) return dp[left];
    if (left == 0) return dp[0] = 0;
    double ret = 0;
    rep(nleft, left) {
        ret += (rec(nleft) + 1) * binom(left, left - nleft);
    }
    double sp = binom(left, 0);
    return (ret + sp) / (1. - sp);
}

void solve () {
    cin >> p;
    rep(i, n+1) dp[i] = -1;
    cout.precision(12);
    cout << fixed << rec(n) << endl;
}

int main () {
    int t; cin >> t;
    rep(i, t) {
        cout << "Case #" << i + 1 <<": ";
        solve();
    }
    return 0;
}
