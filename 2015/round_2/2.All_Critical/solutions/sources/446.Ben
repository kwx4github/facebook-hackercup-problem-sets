#include<iostream>
#include<cstdio>
#include<cmath>
using namespace std;
const int BUF = 25;


double p;

void read() {
    cin >> p;
}


double bino(int n, int k) {
    return k == 0 ? 1 : bino(n - 1, k - 1) * n / k;
}


double rec(int nDone, int nNotDone, double dp[BUF][BUF]) {
    double &ret = dp[nDone][nNotDone];
    if (ret > -0.5) return ret;
    if (nDone == 20) return 0;
    
    double nume = 0;
    double deno = 1 - pow(1 - p, nNotDone);
    for (int i = 1; i <= nNotDone; ++i) {
        nume += pow(p, i) * pow(1 - p, nNotDone - i) * bino(nNotDone, i) * rec(nDone + i, nNotDone - i, dp);
    }
    
    return ret = (nume +1 )/ deno;
}


void work(int cases) {
    // (nDone, nNotDone)
    double dp[BUF][BUF];
    for (int i = 0; i < BUF; ++i)
        for (int j = 0; j < BUF; ++j)
            dp[i][j] = -1;
    
    printf("Case #%d: %.10lf\n", cases, rec(0, 20, dp));
}


int main() {
    int cases;
    cin >> cases;
    for (int i = 0; i < cases; ++i) {
        read();
        work(i + 1);
    }
    return 0;
}
