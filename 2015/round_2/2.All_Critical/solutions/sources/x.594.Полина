#include <bits/stdc++.h>

using namespace std;

const long double EPS = 1e-8;

long double my_pow(long double num, int deg) {
    if (deg == 0) return static_cast<long double>(1.0);
    if (deg == 1) return num;
    if (deg % 2 == 1) return my_pow(num, deg / 2) * my_pow(num, (deg + 1) / 2);
    long double temp = my_pow(num, deg / 2);
    return temp * temp;
}

void Test (int test_num) {
    long double p;
    cin >> p;
    long double A[2];
    A[0] = static_cast<long double> (0.0);
    A[1] = my_pow(p, 20);
    long double lp = static_cast<long double> (1.0) - p;
    long double clp = lp;
    long double sum = 0;
    sum += A[1];
    int count = 2;
    while (count < 20 || (A[1] - A[0]) > EPS) {
        sum += static_cast<long double>(count) * (A[1] - A[0]);
        clp *= lp;
        A[0] = A[1];
        A[1] = my_pow((static_cast<long double>(1.0) - clp), 20);
        ++count;
    }
    printf("Case #%d: %.5Lf\n", test_num, sum + static_cast<long double> (0.000005));
    cerr << "OK " << sum << endl;
} 

int main() {
    freopen("all_critical.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int T;
    scanf("%d", &T);
    for (int i = 0; i < T; ++i) {
        Test(i + 1);
    }
}
