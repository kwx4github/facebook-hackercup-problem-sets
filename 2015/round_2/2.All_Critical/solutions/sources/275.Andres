#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;
const int nmax = 10000;
int comb[21][21];
double solve(double p){
	double dp[nmax][21]={};
	dp[0][0]=1;
	for(int i = 0; i < nmax-1; ++i){
		for(int j = 0; j <= 19; ++j){
			for(int k = j; k <= 20; ++k){
				int correct = k-j;
				int wrong = 20-k;
				dp[i+1][k]+=dp[i][j]*comb[correct+wrong][correct]*pow(p,correct)*pow(1-p,wrong);
			}
		}
	}
	double ans = 0;
	for(int i = 0; i < nmax; ++i){
		ans+=dp[i][20]*i;
	}
	return ans;
}
int main(){
	cout << fixed << setprecision(5);
	comb[0][0]=1;
	for(int i = 1; i <= 20; ++i){
		for(int j = 0; j <= 20; ++j){
			comb[i][j]=comb[i-1][j];
			if(j>0)
				comb[i][j]+=comb[i-1][j-1];
		}
	}
	int T;
	cin >> T;
	for(int test = 1; test <= T; ++test){
		cout << "Case #" << test << ": ";
		double p;
		cin >> p;
		cout << solve(p) << '\n';
	}
}
