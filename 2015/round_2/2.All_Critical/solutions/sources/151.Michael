#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <deque>
#include <iostream>
#include <limits>
#include <numeric>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define MP make_pair
#define all(v) (v).begin(), (v).end()
#define PROBLEM_ID "critical"

#pragma comment(linker, "/STACK:36777216")

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<bool> vb;
typedef long long ll;
typedef pair<int, int> pii;

int main() {
  freopen(PROBLEM_ID".in", "r", stdin);
  freopen(PROBLEM_ID".out", "w", stdout);
  int tests;
  cin >> tests;
  for (int test_index = 0; test_index < tests; ++test_index) {
    double p;
    cin >> p;
    double result = 0;
    if (p < 1) {
      double q = 1 - p;
      int n = 20;
      vector<double> qpow(n + 1);
      qpow[0] = 1;
      for (int i = 1; i <= n; ++i) {
        qpow[i] = qpow[i - 1] * q;
      }
      vector<vector<double> > C(n + 1, vector<double>(n + 1, 0));
      C[0][0] = 1;
      for (int i = 1; i <= n; ++i) {
        C[i][0] = C[i][i] = 1;
        for (int j = 1; j < i; ++j) {
          C[i][j] = C[i - 1][j] + C[i - 1][j - 1];
        }
      }      
      int sign = 1;
      for (int k = 1; k <= n; ++k) {
        result += sign * C[n][k] / (1 - qpow[k]);
        sign = -sign;
      }
    } else {
      result = 1;
    }
    cout << "Case #" << test_index + 1 << ": ";
    printf("%.10lf\n", result);
    cerr << "Case #" << test_index + 1 << ": " << result << endl;
  }
  return 0;
}
