#!/usr/bin/python

# print repr(st)
# maze = [[['#' for i in range(N+2)] for i in range(M+2)] for i in range(4)]
# (M, N) = map(int, f.readline().split())
# l = f.readline()
import argparse


def choose(n, k):
    if 0 <= k <= n:
        ntok = 1
        ktok = 1
        for t in xrange(1, min(k, n - k) + 1):
            ntok *= n
            ktok *= t
            n -= 1
        return ntok / ktok
    else:
        return 0


def doit():
    p = float(f.readline())
    q = 1-p
    allp = [[0.0 for i in range(21)] for i in range(21)]

    for i in range(21):
        for j in range(i, 21):
            allp[i][j] = p**(j-i) * q**(20-j) * choose(20-i, j-i)

    e = [0 for i in range(21)]
    for i in range(19,-1,-1):
        bla = 0
        for j in range(i+1,21):
            bla += allp[i][j] * (e[j]+1)

        e[i] = (allp[i][i] + bla) / (1 - allp[i][i])

    return "{0:.5f}".format(e[0])


parser = argparse.ArgumentParser()
parser.add_argument("filename", help="The filename to be processed")
args = parser.parse_args()
if args.filename:
    with open(args.filename) as f:
        cases = int(f.readline())
        for case in range(1, cases+1):
            print ("Case #" + str(case) + ":"), doit()