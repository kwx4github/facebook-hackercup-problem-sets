#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <set>
#include <queue>
#include <utility>
#include <functional>
#include <iomanip>

using namespace std;

long long comb(int n, int c){
	static map<pair<int, int>, long long> dp;
	
	if (c == 0)
		return 1;

	if (n == c)
		return 1;

	long long &res = dp[{n, c}];
	if (res != 0)
		return res;

	res = comb(n - 1, c) + comb(n - 1, c - 1);
	return res;
}

unordered_map<int, double> dp;
double p;

double rec(int n){
	if (n == 0)
		return 0;

	auto it = dp.find(n);
	if (it != dp.end())
		return it->second;

	double res = 1;
	for (int i = 1; i < n; ++i){
		res += rec(i) * comb(n, i) * pow(p, n - i) * pow((1 - p), i);
	}

	res /= (1 - pow(1-p, n));
	dp[n] = res;
}

void comp(int tc){
	dp.clear();
	cin >> p;
	double res = rec(20);

	cout << "Case #" << tc << ": " << fixed << setprecision(5) << res << endl;
}

int main(){
	int T;
	cin >> T;
	for (int i = 1; i <= T; ++i){
		comp(i);
	}
}