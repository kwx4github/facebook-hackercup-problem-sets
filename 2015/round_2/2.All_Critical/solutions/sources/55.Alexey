#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <deque>
#include <cmath>
#include <ctime>
#include <stack>
#include <sstream>
#include <set>
#include <map>
#include <cassert>
#include <memory.h>

using namespace std;

#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()

typedef long long li;
typedef long double ld;
typedef vector<int> vi;
typedef pair <li, li> pi;

void solve();

void precalc();

#define FILENAME "souvenir"

int main() {
	string s = FILENAME;
#ifdef RIAD
	freopen("input", "r", stdin);
#ifndef DEBUG
	freopen("output", "w", stdout);
#endif
	//cout<<FILENAME<<endl;
	//assert (s != "change me please");
	clock_t start = clock();
#else
	//freopen(FILENAME ".in", "r", stdin);
	//freopen(FILENAME ".out", "w", stdout);
#endif
	cout.sync_with_stdio(0);
	cout.precision(5);
	cout << fixed;
	int t = 1;
	cin >> t;

	//precalc();
	for (int i = 1; i <= t; ++i) {
		cout << "Case #" << i << ": ";
		solve();
	}
#ifdef DEBUG
	cerr << "\n\n" << (clock() - start) / 1.0 / CLOCKS_PER_SEC << "\n\n\n";
#endif
	return 0;
}

void solve() {
	double p;
	cin >> p;
	double dp[21];
	dp[0] = 0;
	
	for(int i = 1; i <= 20; ++i) {
		vector<vector<double>> dpin(i + 1, vector<double>(i + 1));
		dpin[0][0] = 1;
		for(int j = 1; j <= i; ++j) {
			for(int k = 0; k <= i; ++k) {
				dpin[j][k] = dpin[j - 1][k] * (1 - p);
				if (k > 0) {
					dpin[j][k] += dpin[j - 1][k - 1] * p ;
				}
			}
		}
		
		dp[i] = 1;
		for(int j = 1; j <= i; ++j) {
			dp[i] += dpin[i][j] * dp[i - j];
		}
		
		dp[i] /= (1.0 - dpin[i][0]);
	}
	
	
	cout << dp[20] << endl;
	
}