#include <bits/stdc++.h>

#define SZ 10000000
using namespace std;

typedef long long Long;


double dp[(1<<20)][22][3];
int vis[(1<<20)][22][3],True;
int Color[(1<<20)][22][3];
int CntI[(1<<20)];

double P,p2;
double par[22];
int n = 20;


double back(int mask,int pos,int tk)
{

    if(vis[mask][pos][tk] == True) return dp[mask][pos][tk];
    vis[mask][pos][tk] = True; dp[mask][pos][tk] = 0;

    if(mask==(1<<n)-1)
    {
        dp[mask][pos][tk] = 0.0;
        return dp[mask][pos][tk];
    }
    if(pos==n)
    {
        if(tk==0)
        {

            return 0;
        }
        dp[mask][pos][tk] = 1.0 + back(mask,0,0);

        return dp[mask][pos][tk];
    }

    int cnt = n - CntI[mask];


    double ee = 0;
    int nmask = ( mask | (1<<pos) );

    if( nmask != mask ) ee += P*back( (mask | (1<<pos)) , pos + 1 , 1) + (1.0-P)*back(mask,pos+1,tk);
    else ee += back( mask  , pos + 1 , tk);


    if(pos==0) dp[mask][pos][tk] =  (ee + par[cnt]) / (1.0-par[cnt]);
    else dp[mask][pos][tk] = ee;

    return dp[mask][pos][tk];

}







int main()
{
    freopen("Bin.txt","rt",stdin);
    freopen("Bout.txt","wt",stdout);
    int tst,cas;
    scanf("%d",&tst);
    for(int i=0;i<(1<<20);i++) CntI[i] = __builtin_popcount(i);

    for(cas=1;cas<=tst;cas++)
    {
        scanf("%lf",&P);

        p2 = 1.0;
        par[0] = 1.0;
        for(int i=1;i<=n;i++) {
            p2 = p2*(1.0-P) ;
            par[i] = p2;

        }
        True++;
        double ans = 1 + back(0,0,0) ;
        //ans = ans / (1.0-p2);
        printf("Case #%d: %.7lf\n",cas,ans);
    }
    return 0;
}
