#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <iostream>
#include <set>
#include <vector>
#include <cstring>
#include <string>
#include <algorithm>
#include <cmath>
#include <map>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vi> vvi;
typedef vector<double> vd;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<pii> vii;
typedef vector<string> vs;

double lnfac[100];

double c(int k, int n) {
    if (k > n || k < 0) return 0;
    return exp(lnfac[n] - lnfac[k] - lnfac[n-k]);
}

int main() {
    lnfac[0] = 0;
    for (int i = 1; i < 100; ++i)
        lnfac[i] = lnfac[i-1] + log(i);
    int T;
    cin >> T;
    for (int test = 1; test <= T; ++test) {
        printf("Case #%d: ", test);
        double p;
        scanf("%lf", &p);
        if (p >= 1-1e-8) {  printf("1.00000\n");       continue;       }
        double q = 1-p;
        vd d(21);
        vd pw(21, 1), qw(21, 1);
        for (int i = 1; i < pw.size(); ++i) {
            pw[i] = pw[i-1] * p;
            qw[i] = qw[i-1] * q;
        }
        d[0] = 0;
        for (int i = 1; i <= 20; ++i) {
            d[i] = 1;
            for (int j = 0; j < i; ++j) {
                d[i] += c(j, i) * d[j] * qw[j] * pw[i-j];
            }
            d[i] /= (1 - qw[i]);
        }
        printf("%.5lf\n", d[20]);
    }
    return 0;
}
