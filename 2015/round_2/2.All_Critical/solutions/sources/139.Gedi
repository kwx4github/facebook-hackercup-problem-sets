#include <cstdio>
#include <cassert>
#include <vector>
using std::vector;

double EPS = 1e-10;
double pp[21][21], c[21][21];
vector<double> f[2];

void Init() {
  c[0][0] = 1;
  for (int i = 0; i <= 20; ++i) {
    c[i][0] = 1;
    for (int j = 1; j <= i; ++j) {
      c[i][j] = c[i - 1][j] + c[i - 1][j - 1];
    }
  }

  double p;
  assert(scanf("%lf", &p) == 1);
  for (int n = 1; n <= 20; ++n) {
    double p1 = 1;
    for (int i = 0; i <= n; ++i) {
      double p2 = p1;
      for (int j = i + 1; j <= n; ++j) {
        p2 *= 1 - p;
      }
      pp[n][i] = p2 * c[n][i];
      p1 *= p;
    }
  }
}

void Work() {
  double ans = 0;
  int x = 0, y = 1;
  f[x] = vector<double>(21);
  f[x][0] = 1;
  for (int t = 1; f[x][20] < 1 - EPS; ++t) {
    f[y] = vector<double>(21);
    for (int i = 0; i < 20; ++i) {
      for (int j = 0; j <= 20 - i; ++j) {
        f[y][i + j] += f[x][i] * pp[20 - i][j];
      }
    }
    ans += t * f[y][20];
    f[y][20] += f[x][20];
    std::swap(x, y);
  }
  printf("%.5f\n", ans);
}

int main() {
  int cases;
  assert(scanf("%d", &cases) == 1);
  for (int i = 1; i <= cases; ++i) {
    printf("Case #%d: ", i);
    Init();
    Work();
  }
  return 0;
}
