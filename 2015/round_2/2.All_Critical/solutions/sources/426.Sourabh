#include<bits/stdc++.h>
#include<iomanip>
#include <sstream>
using namespace std;
typedef long long ll;
typedef vector < int > vi;
typedef pair< int ,int > pii;
#define SIZE(X) ((int)(X.size()))
#define X first
#define Y second
#define LENGTH(X) ((int)(X.length()))
#define PB push_back
#define MP(X,Y) make_pair(X,Y)
#define MEM(a,b) memset(a,(b),sizeof(a))
#define tr(c,it) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define ain(a,n) int ((a)[(n)]); for(int i=0; i<(n); i++) cin>>((a)[i])
typedef long long int int64;
typedef unsigned long long uLL;
#define FOR(i,n) for(int i=0;i<n;i++)
#define FU(i,a,n) for(int i=a;i<=n;i++)
#define FD(i,a,n) for(int i=n;i>=a;i--)
#define GI(n) scanf("%d",&n)
#define GS(n) scanf("%s"&s)
#define GII(n,m) scanf("%d %d",&n,&m)
#define PI(n) printf("%d\n",n)
#define PII(n,m) printf("%d %d\n",n,m)
#define PL(n) printf("%I64d\n",n)
#define PLL(n) printf("%I64d\n",n)
#define GLL(n) scanf("%I64d",&n)
#define GL(n) scanf("%I64d",&n)
#define PN printf("\n")
#define MAX 20

double p, a[27][27], pw[27], pw1[27];
double dp[27];

int main()
{
	  //ios::sync_with_stdio(false);
	  freopen("C:\\Users\\Sunny\\Documents\\C++/all_critical_example_input.txt","r",stdin);
	  freopen("C:\\Users\\Sunny\\Documents\\C++/all_critical_example_output.txt","w",stdout);
	  int t;
	  cin>>t;
	  a[0][0] = 1.0;
	  //MEM(dp,0.0);
	  dp[20] = 0.0;
	  FU(i,1,20){
	    a[i][0] = 1.0;
	    FU(j, 1, i) a[i][j] = a[i-1][j-1] + a[i-1][j];
	  }
	  FU(z, 1, t){
	    scanf("%lf", &p);
	    pw[0] = 1.0;
	    FU(i, 1, 20) pw[i] = p*pw[i-1];
	    pw1[0] = 1.0;
	    FU(i, 1, 20) pw1[i] = (1-p)*pw1[i-1];
	    dp[0] = 0.0;
	    FU(i, 1, 20)
	    {	
	      double tmp = 1;
	      FU(j, 0, i-1){
	        tmp += a[i][i-j] * pw1[j] * pw[i-j] * dp[j]; 
		  	//printf("%0.5f\n",dp[20]);
		  }
		  //printf("%0.5f\n",dp[i]);	
		  dp[i] = tmp / (1-pw1[i]);
	    }
	    printf("Case #%d: ",z);
	    printf("%0.5f\n",dp[20]);
	  }
}


