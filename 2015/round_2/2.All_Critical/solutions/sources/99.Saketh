#include <iostream>
#include <cmath>
using namespace std;

int T;
double p;
double dp[25];

int pasc[25][25];
double pass, fail;
double chance(int rem, int gain){
    return pasc[rem][gain] * pow(pass, gain) * pow(fail, rem - gain);
}

int main(){
    cout.precision(20);

    pasc[0][0] = 1;
    for(int n=1; n<=20; n++)
        for(int r=0; r<=n; r++){
            pasc[n][r] = pasc[n-1][r];
            if(r>0) pasc[n][r] += pasc[n-1][r-1];
        }

    cin >> T;
    for(int t=1; t<=T; t++){
        cin >> p;
        
        pass = p;
        fail = 1 - pass;

        dp[0] = 0;

        for(int rem = 1; rem <= 20; rem++){
            dp[rem] = 0;
            for(int gain = 1; gain <= rem; gain++)
                dp[rem] += chance(rem, gain) * (1 + dp[rem - gain]);
            
            double stay = chance(rem, 0);
            dp[rem] = (dp[rem] + stay) / (1 - stay);
        }

        cout << "Case #" << t << ": " << dp[20] << endl;
    }
}
