#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cstdio>
#include <memory>
#include <cstdlib>
#include <cmath>
#include <ctime>

using namespace std;

const int INF = 2147483647;

int C[21][21];

int countBits(int x) {
    int ans = 0;
    while(x > 0) {
        if(ans & 1)
            ans++;
        x >>= 1;
    }
    return ans;
}

int main(int argc, const char * argv[]) {
    srand((unsigned) time(0));
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    
    C[0][0] = 1;
    
    for(int i = 1; i <= 20; ++i) {
        C[i][0] = 1;
        for(int j = 1; j <= 20; ++j) {
            C[i][j] = C[i-1][j-1] + C[i-1][j];
//            cout << i << " " << j << " " << C[i][j] << endl;
        }
    }
    
    int T;
    cin >> T;
    for(int t = 1; t <= T; ++t) {
        double p;
        cin >> p;
        
//        if(fabs(p - 1.0) < 1e-8) {
//            printf("Case #%d: %.10lf\n", t, 1.0);
//            continue;
//        }
        
        int iter = 30000;
        
        vector < vector <double> > A(iter, vector<double>(21, 0.0));
        A[0][0] = 1.0;
        for(int i = 0; i+1 < iter; ++i) {
            for(int j = 0; j < 20; ++j) {
                for(int k = 0; k+j <= 20; ++k) {
                    double cur = 1.0;
                    for(int x = 0; x < k; ++x)
                        cur *= p;
                    for(int x = 0; x < 20 - j - k; ++x)
                        cur *= 1.0 - p;
                    A[i+1][k+j] += A[i][j] * cur * C[20 - j][k];
                }
            }
        }
        
        double ans = 0;
        for(int i = 0; i < iter; ++i) {
            ans += A[i][20] * i;
        }
        
        printf("Case #%d: %.10lf\n", t, ans);
    }
    
    return 0;
}