#include <vector>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include<iomanip>
using namespace std;

typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
#define pb push_back
#define sz size()
#define ln length()
#define fore(i,a,b) for(int i=a;i<b;i++)
#define fores(i,a,b) for(int i=a;i<=b;i++)
#define ford(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%d",&a)
#define md 1000000007
#define u 100000


int main() {
	freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
	int t;
	cin>>t;
	vector<vector<double> > combi(21,vector<double>(21,1));
		fore(j,1,21)
		{
            fore(i,1,(j/2)+1)
                combi[j][i] = (combi[j][i-1]*(j+1-i))/i;
            fore(i,(j/2)+1,j)
                combi[j][i] = combi[j][j-i];
		}
	fore(z,0,t)
	{
		printf("Case #%d: ",z+1);
		double p;
		cin>>p;
		vector< vector<double> > pro(21,vector<double>(21));
		fore(k,1,21)
		{
            fore(i,0,k+1)
            {
                double temp = 1;
                fore(j,0,i)
                    temp*=p;
                fore(j,0,(k-i))
                    temp*=(1-p);
                pro[k][i] = temp;
            }
		}
		double zero = 0;
		vector<vector<double> > dp(u,vector<double>(21,zero));
		vector<vector<double> > dp2(u,vector<double>(21,zero));
		fore(i,1,u)
		{
		    fore(j,0,21)
		    {
		        if(i==1)
                {
                    dp[i][j] = pro[20][j]*combi[20][j];
                    dp2[i][j] = combi[20][j];
                    continue;
                }
                fore(k,0,j+1)
                {
                    if(k==20)
                        continue;
                    dp[i][j]+=dp[i-1][k]*(pro[20-k][j-k]*(combi[20-k][j-k]));
                    dp2[i][j]+=dp2[i-1][k]*(combi[20-k][j-k]);
                }
		    }
		}
		double fa = 0;
		fore(i,1,u)
		{
		    fa+=dp[i][20]*i;
		    //cout<<dp2[i][20]<<" ";
		}
		cout<<setprecision(8)<<fa<<endl;
	}
	return 0;
}
