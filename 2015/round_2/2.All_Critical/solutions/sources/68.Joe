#include<fstream>
#include<iostream>
#include<sstream>
#include<iomanip>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<functional>
#include<numeric>
using namespace std;
typedef pair<int, int> pii;
typedef long long ll;

namespace
{
	const static int Max_nCr_mod = 22;
	ll nCr[Max_nCr_mod + 1][Max_nCr_mod + 1];

	double t[25][25];
	double mem[25];
}

//int mainFHC15_R2_P2()
int main()
{
	ifstream fin("FHC\\all_critical.txt");
	ofstream fout("FHC\\all_critical_out.txt");	

	unsigned int numberOfCases;
	fin >> numberOfCases;

	fout << std::fixed << std::setprecision(5);

	memset(nCr, 0, sizeof(nCr));
	for (int i = 0; i <= Max_nCr_mod; ++i)
	{
		nCr[i][0] = nCr[i][i] = 1;
		for (int j = 1; j<i; ++j)
		{
			nCr[i][j] = nCr[i - 1][j - 1] + nCr[i - 1][j];
		}
	}

	for (unsigned int zz=1; zz<=numberOfCases; ++zz)
	{
		memset(mem, 0, sizeof(mem));
		memset(t, 0, sizeof(t));

		double p, q;
		fin >> p;
		q = 1.0 - p;

		for (int left = 1; left <= 20; ++left)
		{
			double sum(1.0);
			for (int hit = 1; hit <= left; ++hit)
			{
				int miss = left - hit;
				double pHit = nCr[left][hit] * pow(p, hit) * pow(q, miss);
				sum += pHit * mem[miss];
			}

			double pMiss = pow(q, left);
			mem[left] = sum / (1.0 - pMiss);
		}

		fout << "Case #" << zz << ": ";
		fout << mem[20] << endl;
	}

	return 0;
}