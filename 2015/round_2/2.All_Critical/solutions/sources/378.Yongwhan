#include<iostream>
#include<iomanip>
using namespace std;

const int mx=25;
double memo[mx];

double dp(int n, double p) {
	if(n==0) return 0;
	if(memo[n]!=-1) return memo[n];

	double ret=1;
	for (int bt=1; bt<(1<<n); bt++) {
		double cur=1, ct=0;
		for (int i=0; i<n; i++) {
			if(bt&(1<<i)) cur*=p;
			else cur*=(1-p), ct++;
		}
		ret+=cur*dp(ct,p);
	}

	double bot=1;
	for (int i=0; i<n; i++) bot*=(1-p);
	bot=1-bot;
	ret/=bot;

	return memo[n]=ret;
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	int t; cin>>t;
	for (int c=1; c<=t; c++) {
		double p; cin>>p;
		for (int i=0; i<mx; i++) memo[i]=-1;
		cout << "Case #" << c << ": " << setprecision(5) << fixed << dp(20,p) << endl;
	}
	return 0;
}
