#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <queue>
#include <algorithm>
#include <iomanip>
#include <map>
#include <set>
#include <math.h>
#include <stack>
#include <deque>
#include <numeric>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <bitset>
#include <functional>
#define all(x) x.begin(),x.end()
#define mpair make_pair
using namespace std;
typedef long long ll;
typedef long double ld;
const ld epsylon = 1e-9;

vector<double> ppows;
vector<double> qpows;
vector<vector<int> > comb;

double mem[22];
double solve(double p) {
  ppows.clear();
  qpows.clear();
  comb.clear();
  ppows.resize(21);
  ppows[0] = 1.0;
  for (int i = 1; i < (int)ppows.size(); ++i) {
    ppows[i] = ppows[i - 1] * p;
  }
  qpows.resize(21);
  qpows[0] = 1.0;
  for (int i = 1; i < (int)qpows.size(); ++i) {
    qpows[i] = qpows[i - 1] * (1.0 - p);
  }

  comb.resize(22);
  comb[0].resize(1, 1);
  comb[1].resize(2, 1);
  for (int i = 2; i < (int)comb.size(); ++i) {
    comb[i].resize(i + 1);
    comb[i][0] = 1;
    comb[i][i] = 1;
    for (int j = 1; j < i; ++j) {
      comb[i][j] = comb[i - 1][j - 1] + comb[i - 1][j];
    }
  }

  vector<double> ans(21, 0.0), temp(21);
  ans[20] = 1.0;
  ld res = 0.0;

  for (ll i = 0; i < 1000000; ++i) {
    for (int j = 0; j <= 20; ++j) {
      temp[j] = 0.0;
      for (int l = j; l <= 20; ++l) {
        temp[j] += ans[l] * ppows[l - j] * qpows[j] * (double)comb[l][j];
      }
    }
    ans = temp;
    res += ans[0] * i;
    ans[0] = 0;
  }
  return res;
}

int main() {
  freopen("facebook.in", "r", stdin);
  freopen("facebook.out", "w", stdout);
  int nt;
  cin >> nt;


  for (int it = 1; it <= nt; it++) {
    double p;
    cin >> p;
    cout << "Case #" << it << ": ";
    printf("%.8lf", solve(p));
    cout << endl;
  }
  return 0;
}
