#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
double C[25][25];
double dp[25];
void doit(int CASE){
  cerr<<CASE<<'\n';
  double p;
  scanf("%lf" , &p);
  double ANS = 1.0;
  if(p < 1.0){
   dp[0] = 0;
   for(int i=1;i<=20;++i){
    double ls = 1.0 - pow(1-p , i);
    double rs = 1.0 / ls;
    for(int j=0;j<i;++j)
     rs += (dp[j] * C[i][j] * pow((1-p) , j) * pow(p , i-j)) / ls;
    dp[i] = rs;
                         }
   ANS = dp[20];
             }
  printf("Case #%d: %.5f\n" , CASE , ANS);
}
int main(){
  C[0][0] = 1;
  for(int i=1;i<25;++i){
   C[i][0] = C[i][i] = 1;
   for(int j=1;j<i;++j)
    C[i][j] = C[i-1][j] + C[i-1][j-1];
                       }
  int Q;
  scanf("%d" , &Q);
  for(int i=1;i<=Q;++i)
   doit(i);
  return 0;
}
