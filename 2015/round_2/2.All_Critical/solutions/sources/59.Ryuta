#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

int main() {
	int T;
	scanf("%d", &T);
	rep(ii, T) {
		double p;
		scanf("%lf", &p);
		const int N = 20;
		vector<vector<double> > prob(N+1, vector<double>(N+1, 0));
		prob[0][0] = 1;
		rep(i, N) rer(j, 0, i) {
			double x = prob[i][j];
			prob[i+1][j+1] += p * x;
			prob[i+1][j] += (1-p) * x;
		}
		vector<double> dp(N+1, 0);
		rer(i, 1, N) {
			double x = 0;
			rer(j, 1, i)
				x += prob[i][j] * dp[i-j];
			double q = 1 - prob[i][0];
			dp[i] = (1 + x) / q;
		}
		double ans = dp[N];
		printf("Case #%d: %.5f\n", ii+1, ans);
	}
	return 0;
}
