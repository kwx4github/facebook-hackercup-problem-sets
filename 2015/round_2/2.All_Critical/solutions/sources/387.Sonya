#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<algorithm>
#include<string>
using namespace std;

double c[25][25];
long long tot[25];
/*
double pp[25];

double ans[25];
*/

double res[2][25];
double qq[25];
double pp[25];

int main()
{
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);

	c[0][0] = 1;
	for (int i = 1; i < 25; i++)
	{
		c[i][0] = c[i][i] = 1;
		for (int j = 1; j < i; j++)
			c[i][j] = c[i-1][j-1] + c[i-1][j];
	}

	int TT;
	scanf("%d", &TT);
	for (int T = 0; T < TT; T++)
	{
		printf("Case #%d: ", T + 1);
		
		double p;
		scanf("%lf", &p);

		qq[0] = 1;
		pp[0] = 1;
		for (int i = 1; i < 25; i++)
			qq[i] = qq[i - 1] * (1 - p);
		for (int i = 1; i < 25; i++)
			pp[i] = pp[i - 1] * (p);
		
		double prob = p;
		int cur = 0;
		memset(res, 0, sizeof(res));
		
		res[0][0] = 1;
		bool id = 1;
		double ans = 0;
		for (int t = 0; t < 100000; t++)
		{
			for (int i = 0; i <= 20; i++)
			{
				res[id][i] = 0;
				for (int j = 0; j <= i; j++)
					res[id][i] += res[!id][j] * c[i][j] * pp[i-j] * qq[20-i];
			}
			ans += (t + 1) * res[id][20];
			res[id][20] = 0;
			id = !id;
		}
		printf("%.5lf\n", ans);
		/*
		pp[0] = 1;
		for (int i = 1; i < 25; i++)
			pp[i] = pp[i-1] * p;
		
		ans[0] = 0;
		for (int n = 1; n <= 20; n++)
		{
			double q = 1;
			for (int i = 0; i < 20 - n; i++)
				q *= (1 - p);
			for (int k = 0; k <= n - 1; k++)
				ans[n] += c[n][k] * pp[n-k] * (ans[k]+1);
			if (n < 20)
			{
				ans[n] ++;
				ans[n] *= q / (1 - q);
			}
		}
		printf("%.5lf\n", ans[20]);
		*/
	}

	return 0;
}