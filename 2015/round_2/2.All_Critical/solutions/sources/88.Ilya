#include <iostream>
#include <string>
#include <map>
#include <math.h>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <set>
#include <queue>
#include <sstream>
#include <deque>
#include <memory.h>
#include <cassert>
#include <ctime>
#include <cstring>


using namespace std; 

#define ll long long
#pragma comment(linker, "/STACK:64000000")

const int maxn = 21;
const int inf = 1000000007;
const int mod = 1000000007;
const int dx[4] = {1, -1, 0, 0};
const int dy[4] = {0, 0, 1, -1};

struct matrix {
	double a[maxn][maxn];

	matrix() {
		for (int i = 0; i < maxn; i++) for (int j = 0; j < maxn; j++) a[i][j] = 0;
	}

	matrix operator* (const matrix &b) {
		matrix res;
		for (int i = 0; i < maxn; i++) {
			for (int j = 0; j < maxn; j++) {
				res.a[i][j] = 0;
				for (int k = 0; k < maxn; k++) {
					res.a[i][j] = res.a[i][j] + a[i][k] * b.a[k][j];
				}
				//if (abs(res.a[i][j] < 1e-50)) res.a[i][j] = 0;
			}
		}
		return res;
	}
};

double p;
int c[maxn][maxn];

double f(int i, int j) {
	if (j < i) return 0;
	return c[20 - i][j - i] * pow(p, j - i) * pow(1 - p, 20 - i - (j - i));
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    //ios_base::sync_with_stdio(0);
	cout.precision(5);
	cout << fixed;
	cerr.precision(5);
	cerr << fixed;

	c[0][0] = 1;
	for (int i = 0; i < maxn - 1; i++) {
		for (int j = 0; j <= i; j++) {
			c[i + 1][j] += c[i][j];
			c[i + 1][j + 1] += c[i][j];
		}
	}

    int T;
    scanf("%d\n", &T);
    for (int test = 1; test <= T; test++) {
        cerr << "Case #" << test << ": ";
        printf("Case #%d: ", test);

        cin >> p;
		matrix a = matrix();
		for (int i = 0; i < maxn - 1; i++) {
			/*a.a[i][0] = 1 - p;
			if (i < maxn - 2) a.a[i][i + 1] = p;*/
			for (int j = 0; j < maxn - 1; j++) {
				a.a[i][j] = f(i, j);
			}
			a.a[i][maxn - 1] = 1;
		}
		a.a[maxn - 1][maxn - 1] = 1;
		for (int k = 0; k < 100; k++) a = a * a;
		double ans = a.a[0][maxn - 1];
		cerr << ans << endl;
		cout << ans << endl;
    }
    
    return 0;
}