#include <algorithm>
#include <numeric>
#include <string>
#include <string.h>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <iostream>
#include <fstream>
#include <cmath>
#include <math.h>
#include <iomanip>
#include <stdlib.h>
#include <time.h>
#include <sstream>
#include <stdio.h>
#include <stack>

using namespace std;

const int MAXN=10000;
double C[21][21];
double prob[21][MAXN+1];
double powP[21];
double powQ[21];

void solve(int i) {
    double pr;
    cin>>pr;
    powP[0]=1;
    for (int j=0;j<=MAXN;j++) {
        for (int i=0;i<=20;i++) {
            prob[i][j]=0;
        }
    }
    for (int i=1;i<=20;i++)
        powP[i]=powP[i-1]*pr;
    powQ[0]=1;
    for (int i=1;i<=20;i++)
        powQ[i]=powQ[i-1]*(1-pr);
    for (int i=0;i<=20;i++) {
        prob[i][0]=C[20][i]*powP[i]*powQ[20-i];
    }
    for (int j=0;j<MAXN;j++) {
        for (int i=0;i<20;i++) {
            for (int k=i;k<=20;k++) {
                prob[k][j+1]+=prob[i][j]*C[20-i][k-i]*powP[k-i]*powQ[20-k];
            }
        }
    }
    double res=0;
    for (int j=0;j<=MAXN;j++)
        res+=(j+1)*prob[20][j];
    printf("Case #%d: %.5lf\n", i+1,res);
}

int main() {
    freopen("in.in", "r", stdin);
    freopen("out.out", "w", stdout);
    std::ios_base::sync_with_stdio(false); 
    C[0][0]=1;
    for (int i=1;i<=20;i++) {
        C[i][0]=1;
        for (int j=1;j<=20;j++)
            C[i][j]=C[i-1][j]+C[i-1][j-1];
    }
    int t;
    cin>>t;
    for (int i=0;i<t;i++) {
        solve(i);
    }
    return 0;
}