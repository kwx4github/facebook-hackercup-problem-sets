#include <bits/stdc++.h>
using namespace std;
double p;
#define double long double
double dp[30];
double ncr[30][30];
double dfs(int n){
	if( n == 0 ) return 0.0;
	if( dp[n] >= 0 ) return dp[n];
	double ans=0;
	for(int i = 1 ; i <= n ; i++){
		ans += dfs(n-i) * pow(p,i) * pow(1-p,n-i) * ncr[n][i];
	}
	
	double fail = pow(1-p,n);
	return dp[n] = (ans+1)/(1-fail);
}
int main(){
	ncr[0][0] = 1;
	for(int i = 0 ; i < 25 ; i++)
		for(int j = 0 ; j < 25 ; j++){
			ncr[i+1][j] += ncr[i][j];
			ncr[i+1][j+1] += ncr[i][j];
		}
	int T;
	cin >> T;
	int t=1;
	while(T--){
		for(int i = 0 ; i < 30 ; i++) dp[i] = -1;
		cin >> p;
		printf("Case #%d: %.5Lf\n",t++,dfs(20));
	}
}
