#include <cstdio>
using namespace std;

const int N = 20;
double D[N + 1];

double mypow(double x, int n)
{
    double ans = 1;
    for (int i = 0; i < n; i++)
        ans *= x;
    return ans;
}

double C[N + 1][N + 1];

void solve(int cs)
{
    double p;
    scanf("%lf", &p);
    for (int n = 0; n <= N; n++)
    {
        C[n][0] = C[n][n] = 1.0;
        for (int k = 1; k < n; k++)
            C[n][k] = C[n - 1][k - 1] + C[n - 1][k];
    }
    D[N] = 0;
    for (int k = N - 1; k >= 0; k--)
    {
        double left = 1 - mypow(1.0 - p, N - k);
        double right = 1;
        for (int i = 1; i <= N - k; i++)
            right += D[k + i] * mypow(p, i) * mypow(1.0 - p, N - k - i) * C[N - k][i];
        D[k] = right / left;
    }
    printf("Case #%d: %.5lf\n", cs, D[0]);
}


int main()
{
    int T;
    scanf("%d", &T);
    for (int i = 0; i < T; i++)
        solve(i + 1);
}
