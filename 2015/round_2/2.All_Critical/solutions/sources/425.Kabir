#include <stdio.h>
#include <string.h>
#include <iostream>
#include <string>
using namespace std;
#define S 21
double dp[S][1 << S][2];
int nisi[S][1 << S][2];
int cs;
int czero[1 << S];
int t,txt,n;
double d;
double cp[S + 5];
double doit(int p, int m, int k){
    double &ret = dp[p][m][k];
    //ret = 0;
    if(nisi[p][m][k] == cs)return ret;
    nisi[p][m][k] = cs;
     
    if(m == (1 << 20) - 1)return 0.;
    if(p == 20){
        if(k == 0)return 0.;
        ret += doit(0, m, 0) + 1;
        return ret;
    }
    ret = 0;
    //win
    int nm = m | (1<<p);
    if(nm != m ) ret = doit(p + 1, m | (1 << p), 1) * d;
    else ret = doit(p + 1, m | (1 << p), k) * d;



    //lose
    int koto = czero[m];
    ret += doit(p + 1, m, k) * (1. - d);
    if(p == 0){
        ret = (ret + cp[koto])/(1 - cp[koto]);
    }
    return ret;
}
int main(){
    freopen("B.in", "r", stdin);
    freopen("B.out", "w", stdout);
    scanf("%d",&t);

    for(int i = 0; i < ( 1 << 20); ++i){
        int total = 0;
        for(int j = 0; j < 20; ++j)if( !((i >> j) & 1))total++;
        czero[i] = total;
    }
    
    while(t--){
        scanf("%lf",&d);
        cp[0] = 1;
        cp[1] = (1. - d);
        cs++;
        for(int i = 2; i <= 20; ++i)cp[i] = cp[i - 1] * (1. - d);
        double ans = doit(0, 0, 0) + 1.;
        printf("Case #%d: %.10lf\n", ++txt, ans);
        memset(dp, 0, sizeof dp);
    }
    return 0;
}
