#include <iostream>
#include <string>
#include <cstdio>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <queue>
#include <bitset>
#include <ctime>
#include <cmath>
#include <cstring>
#pragma comment(linker, "/STACK:256000000")

using namespace std;

const int maxN = 1 << 20;

double d[maxN];
int cnt[maxN];
double pb[50];
double qb[50];

void solve(int tcase) {
	printf("Case #%d: ", tcase);
	double p;
	scanf("%lf", &p);
	double q = 1 - p;

	for (int i = 0; i < 50; ++i) {
		pb[i] = pow(p, i + 0.);
		qb[i] = pow(q, i + 0.);
	}

	d[0] = 0;
	for (int mask = 1; mask < maxN; ++mask) {
		double sum = 0;
		int cnt1 = cnt[mask];
		for (int s = mask; ;s = (s - 1) & mask) {
			if (s != mask) {
				int cnt2 = cnt[s];
				sum += d[s] * pb[cnt[mask] - cnt[s]] * qb[cnt[s]];
			}
			if (s == 0) {
				break;
			}
		}
		++sum;
		d[mask] = sum / (1. - qb[cnt[mask]]);
	}

	printf("%.6lf\n", d[maxN - 1]);
}

int main() {
  freopen("input.txt", "r", stdin);
  freopen("all-critical-isoboliev.txt", "w", stdout);

  int t;
  scanf("%d", &t);

  for (int i = 0; i < maxN; ++i) {
	  cnt[i] = 0;
	  for (int j = 0; j < 20; ++j) {
		  if (i & (1 << j)) {
			  ++cnt[i];
		  }
	  }
  }

  for (int i = 0; i < t; ++i) {
	  solve(i + 1);

	  cerr << i << endl;
	  cerr << (double)clock() / CLOCKS_PER_SEC << endl;
  }

  return 0;
}
