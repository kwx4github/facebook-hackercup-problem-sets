import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Solution {
    
    static double[] expected;
    static double[][] ch ;
    
    public static void main(String[] args) throws IOException {
        Reader.init(System.in);
        int T = Reader.nextInt();
    
        
        ch = new double[21][21];
        
        for (int t = 0; t < T ; t++) {
        	double p = Reader.nextDouble();
     
        	double[] probLast = new double[21];
        	double[] probNext = new double[21];
        	
        	double retVal = 0;
        	int moves = 1;
        	probLast[0] = 1;
    		double max;
        	do {
        		max = 0;
        		for (int i = 0; i <= 20; i++) {
        			for (int j = i; j <= 20; j++) {
        				probNext[j] += probLast[i] * choose(20-i,j-i) * Math.pow(p,j-i) * Math.pow((1-p),20-i-(j-i));
        			}
        			max = Math.max(max, probLast[i]);
        		}
        		
        		retVal = retVal + moves * probNext[20];
        		moves++;
        		probNext[20] = 0;
        		probLast = probNext;
        		probNext = new double[21];
        		//System.out.println(max);
        	} while (max * moves > 10E-7);
        	
        	//int result = retVal * 100000;
            System.out.println("Case " + (t+1) + ": " + String.format("%.5f", retVal));
        }
    }
    
    
    public static double choose(int n, int k) {
    	double retVal = 1;
    	
    	if (ch[n][k] > 0) return ch[n][k];
    	
    	for (int i = 0; i < k; i++) {
    		retVal = retVal * (n-i)/(i+1);
    	}
    	ch[n][k] = retVal;
    	
    	return retVal;
    }
}


/** Class for buffered reading int and double values */
class Reader {
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                     new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }

    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            //TODO add check for eof if necessary
            tokenizer = new StringTokenizer(
                   reader.readLine() );
        }
        return tokenizer.nextToken();
    }

    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
    
    static double nextDouble() throws IOException {
        return Double.parseDouble( next() );
    }
}