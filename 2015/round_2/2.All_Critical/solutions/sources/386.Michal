using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using System.Threading;
using System.Globalization;

class Program
{
    static readonly int N = 21;
    static int[,] pascal = new int[N,N];

    static double Solve(double p)
    {
        double[] E = new double[N];
        E[0] = 0;
        E[1] = 1 / p;
        for (int n = 2; n < N; n++)
        {
            double e = 0;
            for (int k = 0; k <= n; k++)
            {
                e += pascal[n,k] * (1+E[n-k]) * Math.Pow(p, k) * Math.Pow(1 - p, n - k);
            }
            E[n] = e / (1 - Math.Pow(1 - p, n));
        }
        return E[20];
    }

    static void Main(string[] args)
    {
        Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture;
        for (int i = 0; i < N; i++)
        {
            pascal[i, 0] = pascal[i, i] = 1;
            for (int j = 1; j < i; j++)
            {
                pascal[i, j] = pascal[i - 1, j] + pascal[i - 1, j - 1];
            }
        }
        int T = ReadInt();
        for (int t = 1; t <= T; ++t)
        {
            double p = ReadDouble();
            Console.WriteLine("Case #{0}: {1}", t, Math.Round(Solve(p),5));
        }
    }


    // INPUT READING
    static string ReadLine()
    {
        return Console.ReadLine();
    }

    static string[] ReadWords()
    {
        return ReadLine().Split();
    }

    static string[] ReadWords(char separator)
    {
        return ReadLine().Split(separator);
    }

    static int ReadInt()
    {
        return int.Parse(ReadLine());
    }

    static long ReadLong()
    {
        return long.Parse(ReadLine());
    }

    static double ReadDouble()
    {
        return double.Parse(ReadLine());
    }

    static int[] ReadInts()
    {
        return Array.ConvertAll(ReadWords(), int.Parse);
    }

    static int[] ReadInts(char separator)
    {
        return Array.ConvertAll(ReadWords(separator), int.Parse);
    }

    static long[] ReadLongs()
    {
        return Array.ConvertAll(ReadWords(), long.Parse);
    }

    static long[] ReadLongs(char separator)
    {
        return Array.ConvertAll(ReadWords(separator), long.Parse);
    }

    static double[] ReadDoubles()
    {
        return Array.ConvertAll(ReadWords(), double.Parse);
    }

    static double[] ReadDoubles(char separator)
    {
        return Array.ConvertAll(ReadWords(separator), double.Parse);
    }

    static void WriteList<T>(List<T> col)
    {
        int count = col.Count;
        for (int i = 0; i < count - 1; i++)
            Console.Write(col[i] + " ");
        Console.WriteLine(col[count - 1]);
    }

    static void WriteArray<T>(T[] col)
    {
        int count = col.Length;
        for (int i = 0; i < count - 1; i++)
            Console.Write(col[i] + " ");
        Console.WriteLine(col[count - 1]);
    }
}
