#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define mp make_pair
#define pb push_back

#define pr(x) { cerr << #x << " = " << x << endl; }
const int N = 111;
const int INF = 1e9;

long double p;
long double a[N][N];
long double b[N][N];
long double powP[N];
long double powPR[N];

void read() {
    double _p;
    scanf("%lf", &_p);
    p = _p;
}

void solve() {
    int n = 20;
    for (int i = 0; i <= n + 1; i++) 
        for (int j = 0; j <= n + 1; j++)
            a[i][j] = 0;
    powP[0] = 1;
    powPR[0] = 1;
    for (int i = 0; i < n + 2; i++) {
        powP[i + 1] = powP[i] * p;
        powPR[i + 1] = powPR[i] * (1 - p);
    }
    memset(b, 0, sizeof(b));
    b[0][0] = 1;
    for (int i = 0; i < n + 2; i++)
        for (int j = 0; j < n + 2; j++) {
            b[i + 1][j] += b[i][j];
            b[i + 1][j + 1] += b[i][j];
        }
    //pr(b[20][6]); 
    for (int i = 0; i <= n; i++)
        a[i][i] += 1;
    for (int i = 0; i < n; i++)
        a[i][n + 1] += 1;
    
    for (int i = 0; i < n; i++) {
        int t = n - i;
        long double sum = 0;
        for (int j = 0; j <= t; j++) {
            long double cof = b[t][j] * powP[j] * powPR[t - j];
            sum += cof;
            a[i][i + j] -= cof;
        }
        //cerr << "sum: " << sum << endl;
    }
    //cerr << endl;
    //cerr.precision(2);
    //cerr << fixed;
    //for (int i = 0; i <= n + 1; i++, cerr << endl)
        //for (int j = 0; j <= n + 1; j++)
            //cerr << a[i][j] << " ";
    
    for (int i = 0; i <= n; i++) {
        int cur = 0;
        for (int j = 0; j <= n; j++)
            if (a[j][i] > a[cur][i])
                cur = j;
        for (int j = 0; j <= n + 1; j++)
            swap(a[i][j], a[cur][j]);
        long double d = a[i][i];
        for (int j = 0; j <= n + 1; j++)
            a[i][j] /= d;
        for (int j = 0; j <= n; j++) {
            if (i == j) continue;
            long double d = a[j][i];
            for (int k = 0; k <= n + 1; k++)
                a[j][k] -= a[i][k] * d;
        }
    }
    printf("%.5lf\n", (double)a[0][n + 1]);
}

void printAns() {

}

void stress() {

}

int main(){
#ifdef DEBUG
    freopen("in", "r", stdin);
    freopen("out", "w", stdout);
#endif
    if (1) {
        int t;
        scanf("%d", &t);
        for (int i = 0; i < t; i++) {
            printf("Case #%d: ", i + 1);
            read();
            solve();
            printAns();
        }
    }
    else {
        stress();
    }

    return 0;
}

