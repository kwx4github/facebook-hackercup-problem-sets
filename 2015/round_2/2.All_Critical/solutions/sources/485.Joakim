#include <map>
#include <set>
#include <stack>
#include <queue>
#include <iomanip>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <climits>
#include <sstream>
#include <cstdlib>
#include <fstream>
#include <iostream>
#include <algorithm>
#include <numeric>
using namespace std;
#define FOR(it,st,en) for(int it=(st);it<(int)(en);++it)
#define REP(it,en) FOR(it,0,en)
#define ITE(it,c) for(auto it=(c).begin();it!=(c).end();++it)
#define ALLOF(c) (c).begin(), (c).end()
#define PB push_back
#define MP make_pair
#define X first
#define Y second
typedef long long int LL; 
typedef long double LD;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;
const int INF=(int)1e9; 
const double EPS=(LD)1e-7;

double p;
// int sim(){
// 	int m=0;
// 	REP(i,20){
// 		int l=0;
// 		do{l++;}while(((double) rand() / (RAND_MAX)) > p);
// 		m=max(l,m);
// 	}
// 	return m;
// }
LD nCr( LD n, LD r ){
    if (r*2>n) r=n-r;
    if (r==0) return 1;
    LD res=n;
    FOR(i,2,r+1){
        res*=(n-i+1);
        res/=i;
    }
    return res;
}

void solve(){
	cin>>p;
	// int cnt=100000;
	// LD sum=0;
	// REP(i,cnt){
	// 	sum+=sim();
	// }
	// cout<<double(sum)/cnt<<endl;
	int C=30000;
	vector<double> prob(C+1,0);	//specificlly k days
	vector<double> pr(C+1,0);	//k or less
	FOR(i,1,C+1){
		prob[i]=pow(1-p,i-1)*p; //first go right i-1 times to then go left
		pr[i]=pr[i-1]+prob[i];
		// cout<<prob[i]<<endl;
		// cout<<":"<<pr[i]<<endl;
	}
	vector<double> P(C+1,0);
	double sum=0;
	FOR(i,1,C+1){
		FOR(j,1,20){
			P[i] += pow(prob[i],j)*pow(pr[i-1],20-j)*nCr(20,j);
		}
		if(i-1==0){
			P[i]+=pow(prob[i],20);
		}
		// cout<<i<<" "<<P[i]<<endl;
		sum+=P[i]*i;
	}
	printf("%.5lf",sum);
}

int main(){
    int T;
    cin>>T;
    REP(i,T){
    	cout<<"Case #"<<i+1<<": ";
    	solve();
    	cout<<endl;
    }
	return 0;
}