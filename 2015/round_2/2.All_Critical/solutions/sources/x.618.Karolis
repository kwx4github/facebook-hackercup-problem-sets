#include <algorithm>
#include <cmath>
#include <iostream>
#include <iomanip>
#include <cstdio>

using namespace std;

typedef long long ll;


ll d[22][22];
int combination(int n, int k) {
	if (d[n][k] != -1)
		return d[n][k];
	if (n < k)
		return d[n][k] = 0;
	if (k == 0)
		return d[n][k] = 0;
	if (k == 1)
		return d[n][k] = n;
	return combination(n - 1, k - 1) + combination(n - 1, k);
}

int main() {
	for (int i = 0; i < 22; i++)
		for (int j = 0; j < 22; j++)
			d[i][j] = -1;
	
	int t;
	double p, ans;
	__float128 p1[21], p2[21];
	cin >> t;
	for (int I = 0; I < t; I++) {
		cin >> p;
		
		fill(p1, p1 + 21, 0.0);
		fill(p2, p2 + 21, 0.0);
		ans = 0;
		p1[0] = 1.0;
		
		for (int i = 0; i < 600; i++) {
			for (int j = 0; j < 20; j++) {
				for (int q = j + 1; q <= 20; q++)
					p2[q] += p1[j] * combination(20 - j, q - j) * pow(p, q - j) * pow(double(1.0 - p), 20 - q); 
				p2[j] += p1[j] * pow(double(1.0 - p), 20 - j);
			}
			
			ans += (i + 1) * p2[20];
			copy(p2, p2 + 21, p1);
			fill(p2, p2 + 21, 0.0);
		}
		printf("Case #%d: %.05lf\n", I + 1, ans);
		//cout << "Case #" << I + 1 << ": " << setprecision(5) << ans << endl;
	}
	
}
