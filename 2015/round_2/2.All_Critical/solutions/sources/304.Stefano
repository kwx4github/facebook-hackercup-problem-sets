#include <bits/stdc++.h>

using namespace std;

typedef long long     LL;
typedef pair<int,int> pii;

double PI  = acos(-1);
double EPS = 1e-7;
int INF    = 1000000000;
LL INFLL   = 1000000000000000000LL;

#define fi            first
#define se            second
#define mp            make_pair
#define pb            push_back

#define input(in)     freopen(in,"r",stdin)
#define output(out)   freopen(out,"w",stdout)

#define MIN(a, b)     (a) = min((a), (b))
#define MAX(a, b)     (a) = max((a), (b))

#define RESET(a, b)   memset(a,b,sizeof(a))
#define ALL(a)        (a).begin(), (a).end()
#define SIZE(a)       (int)a.size()
#define SORT(a)       sort(ALL(a))
#define UNIQUE(a)     (a).erase( unique( ALL(a) ), (a).end() )
#define FOR(a, b, c)  for (int (a)=(b); (a)<=(c); (a)++)
#define FORD(a, b, c) for (int (a)=(b); (a)>=(c); (a)--)
#define FORIT(a, b)   for (__typeof((b).begin()) a=(b).begin(); a!=(b).end(); a++)

int mx[8] = {-1,1,0,0,-1,-1,1,1};
int my[8] = {0,0,-1,1,-1,1,-1,1};

// ----- //

double dp[21];
double x[21][21];
long long comb[21][21];


int main()
{
	comb[0][0] = 1;
	FOR(a,1,20)
	{
		comb[a][0] = 1;
		FOR(b,1,a)
		{
			comb[a][b] = comb[a-1][b-1]+comb[a-1][b];
		}
	}
	int tc;
	scanf("%d",&tc);
	FOR(T,1,tc) {
		double p;
		scanf("%lf",&p);
		FOR(t,0,20)
		FOR(a,0,t)
		{
			x[t][a] = 1.0;
			FOR(b,1,a) x[t][a] *= p;
			FOR(b,1,t-a) x[t][a] *= (1.0-p);
		}
		FOR(mask,0,20) {
			dp[mask] = 1.0;
			FOR(mask2,1,mask)
			{
				dp[mask] += comb[mask][mask2] * x[mask][mask2] * dp[mask-mask2];
			}
			if (mask == 0) dp[mask] = 0.0;
			else dp[mask] /= (1.0-x[mask][0]);
		}
		printf("Case #%d: %.8lf\n",T, dp[20]);
	}
}