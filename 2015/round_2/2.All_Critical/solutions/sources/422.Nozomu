#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#include<numeric>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define rrep(X,Y) for (int (X) = (Y-1);(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < (Y);++(X))
#define peat(X,Y) for (;(X) < (Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}"<<endl; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}

double p,EPS=1e-10,comb[30][30],dp[30],cnt[30],pro[30][30];
int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(5);
  int i,j,k,T;
  /*  comb[0][0]=1;
  rep(i,25){
    comb[i+1][0]=1;
    rep(j,25)
      comb[i+1][j+1]=comb[i][j]+comb[i][j+1];
      }*/
  //  rep(i,10){rep(j,6)cout<<comb[i][j]<<" ";cout<<endl;}
  cin>>T;
  rep(t,T){
    double re=0,sum=0;
    cin>>p;
    /*    fill(dp,dp+30,0);
    rep(i,21){
      sum=0;
      rep(j,i)
	sum+=pro[j][i]*comb[20][j];
      cout<<sum<<endl;
      rep(j,i)
	dp[i]+=cnt[j]*pro[j][i]/sum*comb[20][j];
      cnt[i]=dp[i]+1/(1-pow(1-p,20-i));
      cout<<dp[i]<<","<<cnt[i]<<endl;
      rep(j,20-i+1){
	pro[i][i+j]=pow(p,j)*pow(1-p,20-i-j)*comb[20-i][j];
      }
    }
    cout<<dp[20]<<endl;*/
    rrep(i,10000000){
      sum+=1-pow(1-pow(1-p,i),20);
    }
       cout<<"Case #"<<t+1<<": "<<sum<<endl;
  }
  return 0;
}
