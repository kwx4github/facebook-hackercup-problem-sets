#pragma comment(linker, "/STACK:640000000")
#include<iostream>
#include<cstdio>
#include<cassert>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<bitset>
#include<algorithm>

#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

double C[22][22];
double dp[22][10005];
double pp[22],pn[22];

void solve() {
	double p; cin >> p;
	pp[0] = 1.0;
	pn[0] = 1.0;
	for (int i = 1; i <= 20; i++) {
		pp[i] = pp[i - 1] * p;
		pn[i] = pn[i - 1] * (1.0 - p);
	}
	for (int i = 0; i <= 20; i++) {
		for (int j = 0; j <= 10000; j++) {
			dp[i][j] = 0.0;
		}
	}
	dp[0][0] = 1.0;
	for (int i = 0; i < 20; i++) {
		for (int j = 0; j <= 10000; j++) {
			for (int k = i; k <= 20; k++) {
				dp[k][j + 1] += dp[i][j] * pn[20 - k] * pp[k - i] * C[20 - i][20 - k];
			}
		}
	}
	double res = 0.0;
	for (int i = 0; i <= 10000; i++) {
		res += i * dp[20][i];
	}
	printf("%.5lf\n",res);
}

int main() {
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif

	for (int i = 0; i < 22; i++) {
		C[i][0] = 1.0;
	}

	for (int i = 1; i < 22; i++) {
		for (int j = 1; j <= i; j++) {
			C[i][j] = C[i - 1][j] + C[i - 1][j - 1];
		}
	}

	int T; cin >> T;

	for (int t = 1; t <= T; t++) {
		cout << "Case #" << t << ": ";
		solve();
	}

	return 0;
}
