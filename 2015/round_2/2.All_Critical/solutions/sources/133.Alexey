import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.FileOutputStream;
import java.util.StringTokenizer;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args) {
		InputStream inputStream;
		try {
			inputStream = new FileInputStream("input.txt");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		OutputStream outputStream;
		try {
			outputStream = new FileOutputStream("output.txt");
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		Reader in = new Reader(inputStream);
		PrintWriter out = new PrintWriter(outputStream);
		Task solver = new Task();
		int testCount = Integer.parseInt(in.next());
		for (int i = 1; i <= testCount; i++)
			solver.solve(i, in, out);
		out.close();
	}
}

class Task {
    public void solve(int testNumber, Reader in, PrintWriter out) {
        double p = in.nextDouble();
        double[] ps = new double[21];
        ps[0] = 1;
        for (int i = 1; i <= 20; i++) ps[i] = ps[i - 1] * p;
        double[] p1s = new double[21];
        p1s[0] = 1;
        for (int i = 1; i <= 20; i++) p1s[i] = p1s[i - 1] * (1 - p);
        double[] a = new double[21];
        a[1] = 1.0 / p;
        double[][] c = new double[21][21];
        c[0][0] = 1;
        for (int i = 1; i <= 20; i++) {
            c[i][0] = 1;
            for (int j = 1; j <= i; j++) {
                c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
            }
        }
        for (int i = 2; i <= 20; i++) {
            double sum = 1;
            for (int j = 1; j < i; j++) {
                sum += c[i][j] * ps[i - j] * p1s[j] * a[j];
            }
            a[i] = sum / (1 - p1s[i]);
        }
        out.printf("Case #%d: %.5f\n", testNumber, a[20]);
    }
}

class Reader {
    private BufferedReader in;
    private StringTokenizer st;
    public Reader(InputStream is) {
        in = new BufferedReader(new InputStreamReader(is));
    }
    public String next() {
        try {
            while (st == null || !st.hasMoreTokens()) {
                st = new StringTokenizer(in.readLine());
            }
            return st.nextToken();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public double nextDouble() {
        return Double.parseDouble(next());
    }

}

