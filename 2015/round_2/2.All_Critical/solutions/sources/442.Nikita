#pragma comment(linker, "/STACK:134217728")

#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <map>
#include <set>
#include <algorithm>
#include <string>
#include <stack>
#include <queue>
#include <functional>
#include <numeric>
#include <memory.h>

using namespace std;

typedef long long LL;


double p[30], q[30], dp[30];
int C[30][30];

int n = 20;

double go(int k)
{
	if (k == n)
		return 0;
	double & res = dp[k];
	if (res != -1.0)
		return res;
	res = 0;
	for(int i = 1; i <= n - k; ++i)
		res += C[n - k][i] * p[i] * q[n - k - i] * go(k + i);
	res += 1.0;
	res /= 1.0 - q[n - k];
	return res;
}

int T;

int main()
{
#ifndef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	scanf("%d", &T);
	for(int i = 0; i < 30; ++i)
	{
		C[i][i] = 1;
		C[i][0] = 1;
	}
	for(int i = 2; i < 30; ++i)
		for(int j = 1; j < i; ++j)
			C[i][j] = C[i - 1][j - 1] + C[i - 1][j];
	q[0] = 1.0, p[0] = 1.0;
	for(int I = 1; I <= T; ++I)
	{
		scanf("%lf", &p[1]);
		q[1] = 1.0 - p[1];
		for(int i = 2; i < 30; ++i)
			p[i] = p[i - 1] * p[1];
		for(int i = 2; i < 30; ++i)
			q[i] = q[i - 1] * q[1];
		for(int i = 0; i < 30; ++i)
			dp[i] = -1.0;
		printf("Case #%d: %.10lf\n", I, go(0));
	}
	return 0;
}