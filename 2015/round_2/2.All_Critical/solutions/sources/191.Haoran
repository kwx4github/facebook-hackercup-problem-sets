#include <bits/stdc++.h>

#define EPS 1e-7

using namespace std;

double c[30][30];
double a[30], b[30];
double E[30];

void prepare()
{
	for (int i = 0; i < 25; i++)
		c[i][0] = c[i][i] = 1.0;
	for (int i = 1; i < 25; i++)
		for (int j = 1; j < i; j++)
			c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
}

double dfs(int n)
{
	if (fabs(E[n]) > EPS)
		return E[n];
	if (n == 0)
		return 0;
	double tmp = 1.0;
	for (int i = 1; i <= n; i++)
		tmp += c[n][i] * a[i] * b[n - i] * dfs(n - i);
	E[n] = tmp / (1 - b[n]);
	return E[n];
}

int main()
{
	freopen("B.in", "r", stdin);
	freopen("B.txt", "w", stdout);
	prepare();

	int ttt;
	scanf("%d", &ttt);
	for (int tt = 1; tt <= ttt; tt++)
	{
		double p;
		scanf("%lf", &p);
		a[0] = 1.0;
		for (int i = 1; i < 25; i++)
			a[i] = a[i - 1] * p;
		b[0] = 1.0;
		for (int i = 1; i < 25; i++)
			b[i] = b[i - 1] * (1.0 - p);
		memset(E, 0, sizeof(E));
		printf("Case #%d: %.5f\n", tt, dfs(20));
	}
	return 0;
}