#include <iostream>
#include <utility>
#include <algorithm>
#include <memory.h>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <numeric>
#include <list>
#include <stack>
#include <cmath>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>
#include <time.h>
using namespace std;

typedef  long long LL;
const int Mod = 1e9 + 7;
inline int FIX(LL a) {return (a % Mod + Mod) % Mod;}
#define MP(x,y) make_pair(x,y)
#define LEN(x) ((int)x.length())
#define take(x,y) (((x)>>(y)) & 1ll)
//#define move(n) (1<<(n))
#define what_is(x) cerr << #x << " is " << x << endl;
#define eb emplace_back
#define pb push_back
#define UNQ(x) (sort(begin(x),end(x)),x.erase(unique(begin(x),end(x)),end(x)))
int C[20 + 5][20 + 5];

void Init(){
    for(int i = 0;i <= 20;i++) {
        C[i][0] = 1;
        for(int j = 1;j <= 20 && j <= i;j++) {
            C[i][j] = C[i-1][j] + C[i-1][j-1];
        }
    }
    return;
}
double p;
double Pow(double x,int p) {
    double ret = 1.0;
    for(int i = 1;i <= p;i++) ret *= x;
    return ret;
}
int main(){
    freopen("all_critical.txt","r",stdin);
    freopen("all_critical.out","w",stdout);
    Init();
    int T = 0,cas = 0;
    scanf("%d",&T);
    while(T--){
        scanf("%lf",&p);
        double ret = 0.0;
        if(p == 1.0) {
            ret = 1.0;
            printf("Case #%d: %.5lf\n",++cas,ret);
            continue;
        }
        for(int i = 1;i <= 20;i++) {
            double cur = 0.0;
            cur = 1.0/(1.0 - Pow(1.0 - p,i));
            cur *= C[20][i];
            if((i + 1) % 2 == 0) ret += cur;
            else ret -= cur;
        }
        printf("Case #%d: %.5lf\n",++cas,ret);
    }
    return 0;
}