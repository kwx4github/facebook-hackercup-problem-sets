#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <cstring>
#include <string>
using namespace std;

typedef pair<int,int> pairii;
typedef long long llong;

#define pb push_back
#define FOR(i,s,n) for (int (i) = (s); (i) < (n); (i)++)
#define FORZ(i,n) FOR((i),0,(n))

const int MAXN = 10005;
double p;
double dp[21][MAXN];

double pow(double x, int y) {
  double r = 1.0;
  while (y > 0) {
    if (y & 1) r = (r * x);
    x = (x * x);
    y /= 2;
  }
  return r;
}

llong comb(int n, int k) {
  if (k==0) return 1;
  if (k*2>n) return comb(n,n-k);
  llong res=1;
  FORZ(i,k) res*=(llong)(n-i);
  FORZ(i,k) res/=(llong)(i+1);
  return res;
}

void solve() {
  scanf("%lf",&p);
  FOR(i,1,MAXN) dp[1][i] = pow(1.0-p,i-1)*p;
  FOR(i,2,21) {
    dp[i][1] = pow(p,i);
    FOR(j,2,MAXN) {
      dp[i][j]=0;
      FORZ(k,i) {
        dp[i][j]+= (double)comb(i,k)*pow(p,k)*pow(1.0-p,i-k)*dp[i-k][j-1];
      }
    }
  }
  double res = 0.0;
  FOR(i,1,MAXN) res += (double)i*dp[20][i];
  printf("%.5f\n",res);
}

int main() {
#ifdef DEBUG
  freopen("in.txt", "r", stdin);
  freopen("out.txt", "w", stdout);
#endif
  
  int t;
  scanf("%d", &t);
  FOR(i,1,t+1) {
    printf("Case #%d: ", i);
    solve();
  }
  
  return 0;
}
