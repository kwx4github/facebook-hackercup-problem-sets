#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
const int md=1000000007;
int t,tt,x,n,i,all,tot,a[5005],v[5005],d[5005],pw2[5005],pwm[5005];
vector<int> g[5005];
long long f[5005];
void dfs(int i) {
  f[i]=1;
  for (int j=0; j<g[i].size(); j++) {
    int cur=g[i][j];
    all=0;
    for (int k=0; k<n; k++) a[k]=0;
    for (int k=0; k<cur; k++) if (v[k]>=0 && d[v[k]]==i) { a[v[k]]++; all++; }
    tot=pwm[all];
    for (int k=0; k<n; k++) tot=(tot+md-pwm[a[k]])%md;
    tot=(tot+pw2[all])%md;
    f[i]=(f[i]*tot)%md;
    dfs(cur);
    d[cur]=i;
    f[i]=(f[i]*f[cur])%md;
  }
  for (int j=0; j<n; j++) if (v[j]>=0 && d[v[j]]==i) v[j]=i;
  v[i]=i;
}
int main() {
  for (pw2[0]=i=1; i<5005; i++) pw2[i]=(pw2[i-1]*2)%md;
  for (i=0; i<5005; i++) pwm[i]=(pw2[i]+md-1)%md;
  scanf("%d",&tt);
  for (t=1; t<=tt; t++) {
    scanf("%d",&n);
    for (i=0; i<n; i++) { g[i].clear(); v[i]=-1; d[i]=-1; }
    for (i=1; i<n; i++) { scanf("%d",&x); g[x].push_back(i); }
    for (i=0; i<n; i++) sort(g[i].begin(),g[i].end());
    dfs(0);
    printf("Case #%d: %I64d\n",t,f[0]);
  }
  return 0;
} 