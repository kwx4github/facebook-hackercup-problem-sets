/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-12

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(5005);

int a[MAXN];

vector<int>g[MAXN];

bool visited[MAXN];

void dfs(int node){

    visited[node]=1;

    REP(i,g[node].sz)
    {
        if(!visited[g[node][i]])
        {
            dfs(g[node][i]);
        }
    }
}

long long power2(int x){

    if(x==0) return 1ll;

    long long ret = power2(x/2);

    ret = ret*ret%MOD;

    if(x%2) ret = ret*2ll%MOD;

    return ret;
}

void solve(int ncase){

    int n;
    S("%d",&n);
    FOR(i,1,n-1)
     S("%d",&a[i]);

    REP(i,n) g[i].clear();

    long long ans = 1;

    FOR(i,1,n-1)
    {
        REP(j,n) visited[j]=0;

        dfs(a[i]);

        int cnt=0;

        REP(j,n) cnt += (visited[j]);

        ans *= (power2(cnt)-cnt);
        ans %= MOD;

        g[a[i]].pb(i);
    }

    if(ans < 0) ans += MOD;

    P("Case #%d: %I64d\n",ncase,ans);
}

int main(){

    freopen("1input.txt","r",stdin);
    freopen("1output.txt","w",stdout);

    int t;
    S("%d",&t);
    FOR(i,1,t) solve(i);

}
