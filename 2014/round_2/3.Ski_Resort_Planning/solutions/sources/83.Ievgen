#include <iostream>
#include <string>
#include <set>
#include <map>
#include <cstdio>
#include <bitset>
#include <vector>
#include <cmath>
#include <queue>
#include <algorithm>
#include <ctime>
#include <cstring>
#pragma comment(linker, "/STACK:256000000")

using namespace std;

const int maxN = 5500;
const int mod = 1000000007;
int n;
int a[maxN];
int p[maxN][maxN];
int ways[maxN][maxN];

void solve(int tcase) {
  printf("Case #%d: ", tcase);
  scanf("%d", &n);
  for (int i = 1; i < n; ++i) {
    scanf("%d", &a[i]);
  }

  for (int i = 0; i < n; ++i) {
    p[i][i] = i;
    for (int j = 1; j < i; ++j) {
      p[i][j] = p[j][i] = p[a[i]][j];
    }
  }
  memset(ways, 0, sizeof(ways));
  for (int i = 0; i + 1 < n; ++i) {
    ways[i][i] = 1LL;
    for (int j = 0; j <= i; ++j) {
      ways[i + 1][p[j][i + 1]] = (ways[i + 1][p[j][i + 1]] + ways[i][j]) % mod;
      ways[i + 1][j] = (ways[i + 1][j] + ways[i][j]) % mod;
    }
  }

  long long ret = 1LL;
  for (int i = 1; i < n; ++i) {
    ret *= (long long)(ways[i - 1][a[i]]);
    ret %= (long long)(mod);
  }
  cout << ret << endl;
}

int main() {
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);

  int t;
  scanf("%d", &t);

  for (int i = 0; i < t; ++i) {
    cerr << i << endl;
    solve(i + 1);
  }
  return 0;
}
