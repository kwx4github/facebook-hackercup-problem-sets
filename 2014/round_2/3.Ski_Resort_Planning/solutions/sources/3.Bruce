#include <bits/stdc++.h>
#include <fcntl.h>
#include <unistd.h>

using namespace std;

/*** START OF TEMPLATE CODE ***/

typedef vector<int> vi;
typedef vector<string> vs;
typedef long long ll;
typedef complex<double> pnt;
typedef pair<int, int> pii;

#define RA(x) begin(x), end(x)
#define FE(i, x) for (auto i = begin(x); i != end(x); ++i)
#define SZ(x) ((int) (x).size())

template<class T>
vector<T> splitstr(const string &s)
{
    istringstream in(s);
    vector<T> out;
    copy(istream_iterator<T>(in), istream_iterator<T>(), back_inserter(out));
    return out;
}

template<class T> T gcd(T a, T b) { return b ? gcd(b, a % b) : a; }

static void redirect(int argc, const char **argv)
{
    ios::sync_with_stdio(false);

    if (argc > 1)
    {
        int fd = open(argv[1], O_RDONLY);
        if (fd == -1) { perror(argv[1]); exit(1); }
        if (-1 == dup2(fd, 0)) { perror(argv[1]); exit(1); }
        if (-1 == close(fd)) { perror(argv[1]); exit(1); }
    }

    if (argc > 2)
    {
        int fd = open(argv[2], O_WRONLY | O_CREAT, 0666);
        if (fd == -1) { perror(argv[2]); exit(1); }
        if (-1 == dup2(fd, 1)) { perror(argv[2]); exit(1); }
        if (-1 == close(fd)) { perror(argv[2]); exit(1); }
    }

    cin.exceptions(ios::failbit | ios::badbit);
}

/*** END OF TEMPLATE CODE ***/

#define MOD 1000000007

int main(int argc, const char **argv)
{
    redirect(argc, argv);

    int cases;
    cin >> cases;
    for (int cas = 0; cas < cases; cas++)
    {
        int N;
        cin >> N;
        vector<int> A(N);
        A[0] = -1;
        for (int i = 1; i < N; i++)
            cin >> A[i];

        vector<ll> p2(N + 1);
        p2[0] = 1;
        for (int i = 1; i <= N; i++)
            p2[i] = 2 * p2[i - 1] % MOD;

        vector<int> ts(N, 1);
        vector<vi> ch(N);

        ll ans = 1;
        for (int i = 1; i < N; i++)
        {
            int a = A[i];
            ll sub = p2[ts[a]] - 1;
            for (int c : ch[a])
                sub -= p2[ts[c]] - 1;
            ans = ans * sub % MOD;

            for (int x = a; x != -1; x = A[x])
                ts[x]++;
            ch[a].push_back(i);
        }
        ans %= MOD;
        if (ans < 0)
            ans += MOD;

        cout << "Case #" << cas + 1 << ": " << ans << "\n";
    }
    return 0;
}
