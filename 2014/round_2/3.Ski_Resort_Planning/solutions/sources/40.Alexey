program SkiResortPlanning;

const	md =	1000000007;

var	sz, p, twoPow: array[ 0..5000 ] of longInt;

function f( v, n: longInt ): int64;
var	res, i: longInt;
begin
	res := twoPow[ sz[v] ];
	for i := 1 to n do
		if ( p[i] = v ) then
			res := ( res - twoPow[ sz[i] ] + md ) mod md;
			
	exit( res );
end;

procedure add( v: longInt );
begin
	inc( sz[0] );
	while ( v > 0 ) do
	begin
		inc( sz[v] );
		v := p[v];
	end;
end;

var	t, tt, n, i: longInt;
	ans: int64;

begin
	twoPow[0] := 0;
	for i := 1 to 5000 do
		twoPow[i] := ( int64(2) * twoPow[i-1] + 1 ) mod md;

	readln( t );
	for tt := 1 to t do
	begin
		readln( n );
		
		ans := 1;
		sz[0] := 1;
		for i := 1 to n - 1 do
		begin
			read( p[i] );
			
			ans := ( ans * f( p[i], i - 1 ) ) mod md;
			
			sz[i] := 0;
			add( i );
		end;

		writeln( 'Case #', tt, ': ', ans );
	end;
end.
