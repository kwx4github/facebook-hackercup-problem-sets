import java.io.*;
import java.util.*;

public class Main {
	
	public static void main(String[] args) throws IOException {
		InputStream in = System.in;
		PrintStream out = System.out;
		in = new FileInputStream("ski_resort_planning.txt");
		out = new PrintStream(new File("ski_resort_planning.out"));
		bufReader = new BufferedReader(new InputStreamReader(in));
		
		long MOD = 1000000007;
		int T = nextInt();
		for (int cas = 1; cas <= T; ++cas) {
			int n = nextInt();
			int []p = new int[n];
			p[0] = -1;
			for (int i = 1; i < n; ++i) {
				p[i] = nextInt();
			}
			int [][]cnt = new int[n][n];
			for (int i = n - 1; i >= 1; --i) {
				for (int j = i + 1; j < n; ++j) {
					++cnt[p[i]][j];
				}
			}
			long res = 1;
			for (int i = 1; i < n; ++i) {
				int k = cnt[p[i]][i] + 1;
				long m = (pow(2, k, MOD) - k + MOD) % MOD;
				res = res * m % MOD;
			}
			out.printf("Case #%d: %d\n", cas, res);
		}
		
		out.close();
	}
	

	private static long pow(long x, int p, long mod) {
		long r = 1;
		while (p > 0) {
			if (p % 2 != 0) {
				r = r * x % mod;
			}
			x = x * x % mod;
			p /= 2;
		}
		return r;
	}

	static BufferedReader bufReader;
	static StringTokenizer stringTokenizer;

	static String nextString() throws IOException {
		while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {
			String line = bufReader.readLine();
			if (line == null) {
				return null;
			}
		stringTokenizer = new StringTokenizer(line);
		}
		return stringTokenizer.nextToken();
	}

	static int nextInt() throws IOException {
		return Integer.parseInt(nextString());
	}

	static long nextLong() throws IOException {
		return Long.parseLong(nextString());
	}

	static double nextDouble() throws IOException {
		return Double.parseDouble(nextString());
	}
}