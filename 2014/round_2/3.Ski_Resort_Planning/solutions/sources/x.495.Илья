#include <iostream>
#include <vector>
#include <unordered_map>
#include <unordered_set>

using namespace std;

const long long M = 1e9 + 7;

int lca[5010][5010];
vector <vector <pair <int, int> > > dp;

long long pow2(long long y)
{
    if (y == 0)
        return 1;
    long long res = 2;
    y--;
    while (y)
    {
        if (y % 2 == 1)
        {
            res = (res * 2) % M;
            y--;
        }
        else
        {
            res = (res * res) % M;
            y >>= 1;
        }
    }

    return res;
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int tc;
    cin >> tc;
    for (int t = 0; t < tc; t++) 
    {
        memset(lca, -1, sizeof(lca));
        long long ans = 1;
        int n = 0;
        cin >> n;
        dp.assign(n + 1, vector <pair <int, int> > ());
        vector <int> arr(n, 0);
        for (int i = 0; i < n - 1; i++)
            cin >> arr[i + 1];
        for (int i = 0; i < n; i++)
            for (int j = i + 1; j < n; j++)
            {
                int a = i;
                int b = j;
                while (a != b)
                {
                    if (lca[a][b] != -1)
                    {
                        a = lca[a][b];
                        break;
                    }
                    b = arr[b];
                    if (a > b)
                        swap(a, b);
                }
                lca[i][j] = a;
                dp[a].push_back(make_pair(i, j));
            }
        for (int i = 0; i < n; i++)
        {
            int cnt = 0;
            for (int j = 0; j < i; j++)
                if (lca[j][i] == arr[i])
                    cnt++;
            ans = (ans * (pow2(cnt) - cnt)) % M;
        }
        printf("Case #%d: ", t + 1);
        cout << ans << endl;
    }
}