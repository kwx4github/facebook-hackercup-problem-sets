#include <algorithm>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <deque>
#include <numeric>
#include <iterator>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
#include <climits>
#include <sys/time.h>
#include <regex.h>

using namespace std;

#define DEBUG(x) cout << #x << ": " << x << endl

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FOREACH(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
typedef pair<int,int> PII;
#define MOD 1000000007
int P[5010];
int DP[5010][5010];

typedef vector<int> VI;
typedef vector<VI> VVI;
VVI adj;
int SZ[5010];

int POW2[5010];

int dfs(int u , int ROOT)
{
	int ret = 0;
	SZ[u] = 1;
	for(int i = 0; i < adj[u].size(); ++i)
	{
		int v = adj[u][i];
		ret = ( ret + dfs(v,ROOT) ) % MOD;
		SZ[u] += SZ[v];
	}
	if(ROOT == u)return ret;
	return (1LL*ret + POW2[SZ[u]] - 1 + MOD) % MOD;
}

int main()
{
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
	int TC;
	cin >> TC;
	POW2[0] = 1;
	for(int i = 1; i < 5010; ++i)
		POW2[i] = (2LL*POW2[i-1]) % MOD;
	for(int tc = 1 ; tc<=TC ; ++tc)
	{
		int N;
		cin >> N;
		adj = VVI(N);
		int ans = 1;
		for(int i = 1; i < N; ++i)
		{
			cin >> P[i];
			int min = dfs(P[i] , P[i]);
			ans = (1LL*ans*(((POW2[SZ[P[i]]] - min - 1)%MOD + MOD)%MOD))%MOD;
			adj[P[i]].push_back(i);
			
		}
		cout <<"Case #" << tc << ": " << ans << endl;
	}
	
	
}



/*

0: 1
1: 1
2: 2
3: 5
4: 1
5: 2



5
4
0 0 1
6
0 0 0 2 2
2
0
3
0 0
3
0 1

 * 
5
8 6
0 0 1 3 5
0 1 0 4 5
5 5
2 5 2 5 7
2 9 3 2 7
12 11
2 5 2 5 7
2 9 3 2 7
10 10
0 1 0 1 11
0 0 1 1 11
10 10
0 1 0 1 11
0 0 1 10 11




 */








