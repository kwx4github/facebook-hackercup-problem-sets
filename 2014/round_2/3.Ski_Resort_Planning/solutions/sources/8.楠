#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
using namespace std;
vector<int> nt[5005];
int fa[5005];
__int64 cnt[5005];
__int64 pow2[5005];
__int64 pmod = 1000000007;
void pre() {
	int i;
	pow2[0] = 1;
	for (i = 1; i < 5005; ++i)
		pow2[i] = (pow2[i - 1] * 2) % pmod;
}
int main() {
	int t, cas = 0;
	__int64 ans;
	int i, j, k, n;
	scanf("%d", &t);
	pre();
	while (t--) {
		cas++;
		scanf("%d", &n);
		for (i = 0; i < n; ++i) {
			nt[i].clear();
		}
		for (i = 1; i < n; ++i) {
			scanf("%d", &fa[i]);
			nt[fa[i]].push_back(i);
		}
		memset(cnt, 0, sizeof(cnt));
		ans = 1;
		cnt[0] = 1;
		for (i = 1; i < n; ++i) {
			k = fa[i];
			__int64 score = 0;
			score = pow2[cnt[k]] - 1;
			for (j = 0; j < nt[k].size(); ++j) {
				score -= pow2[cnt[nt[k][j]]] - 1;
				score %= pmod;
			}
			if (score < 0)
				score += pmod;
			ans *= score;
			ans %= pmod;
			k = i;
			while (1) {
				cnt[k]++;
				if (k == 0)
					break;
				k = fa[k];
			}
		}
		printf("Case #%d: %I64d\n", cas, ans);
	}
}
