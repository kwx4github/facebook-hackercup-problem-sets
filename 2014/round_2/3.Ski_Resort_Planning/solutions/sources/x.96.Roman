#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <fstream>
#include <time.h>
using namespace std;

#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,value) memset(A,value,sizeof(A))
#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define y0 gfdssdfer
#define y1 wetgwervbwqr

#define distance sgfsdfgs

typedef long long Int;
typedef unsigned int uint;
typedef vector<int> VI;
typedef pair<int,int> PII;

const double PI = acos(-1.0);
const int INF = 1000000000;
const int MAX = 2048;
const int MAX2 = 1000007;
const int MOD = 1000000007;

vector<int> g[5005];
vector<int> a[5005];
int pw[5005];
Int r[5005];
Int c[5005];

int dfs(int v){
    a[v].PB(v);
        if (g[v].size() == 0){
            return 1;
        }
        //cout << v << endl;
        FOR(i,0,g[v].size()){
            r[i] = dfs(g[v][i]);
            FOR(j,0,a[g[v][i]].size())
                a[v].PB(a[g[v][i]][j]);
        }
        Int ret = 1;
        FOR(i,0,g[v].size()){
            ret *= r[i];
            ret %= MOD;
            Int ways = 1;
            Int sum = 0;
            FOR(j,0,i){
                int t = 0;
                FOR(k,0,a[g[v][j]].size())
                    if (a[g[v][j]][k] < g[v][i])
                        ++t;
                c[j] = (pw[t] - 1 + MOD) % MOD;
                sum += c[j];
                sum %= MOD;
                ways *= (1 + c[j]);
                ways %= MOD;
                //cout << c[j] << 'y';
            }
            //cout << ways << ' ' << sum << ' ';
            ways *= 2;
            ++sum;
            ways %= MOD;
            sum %= MOD;
            ways = (ways - sum + MOD) % MOD;
            ret *= ways;
            ret %= MOD;
            //cout << ways << " x ";
        }
        //cout << endl;

        return ret;
}

int main()
{
  freopen("in.txt", "r", stdin);
  freopen("out.txt" , "w" , stdout);

    pw[0] = 1;
    FOR(i,1,5005)
        pw[i] = (pw[i - 1] * 2) % MOD;

  int t;
  cin >> t;
  FOR(tt,0,t){
     printf("Case #%d: ", tt + 1);
     FOR(i,0,5005){
        g[i].clear();
        a[i].clear();
     }
    int n;
    cin >> n;
    FOR(i,1,n){
            int a;
            cin >> a;
            g[a].PB(i);
    }
    //dfs(0);
    cerr << tt << endl;
    cout << dfs(0) << endl;
  }
}
