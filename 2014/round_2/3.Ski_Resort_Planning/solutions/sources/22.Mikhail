#include <iostream>
#include <vector>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <fstream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <algorithm>
#include <numeric>

#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)

using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef long long i64;
typedef vector<i64> vi64;
typedef vector<vi64> vvi64;

const i64 P = 1000000000 + 7;
i64 d2[10000];

int p[10000];
int sub[10000];

int main() {
#ifdef LOCAL_DEFINE
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif

    d2[0] = 1;
    for (int i = 1; i < 10000; ++i) {
        d2[i] = (2 * d2[i - 1]) % P;
    }

    int T;
    cin >> T;
    forn(t, T) {
        cerr << "Case #" << t + 1 << '\n';
        int N;
        cin >> N;
        p[0] = -1;
        forn(i, N - 1) {
            cin >> p[i + 1];
        }
        forn(i, N) {
            sub[i] = 0;
        }
        i64 ans = 1;
        sub[0] = 1;
        for (int i = 1; i < N; ++i) {
            i64 res = (d2[sub[p[i]]] + P - 1) % P;
            for (int j = p[i] + 1; j < i; ++j) {
                if (p[j] == p[i]) {
                    res = (res - (d2[sub[j]] - 1) + P) % P;
                }
            }
            ans = (ans * res) % P;
            int ii = i;
            while (ii != -1) {
                ++sub[ii];
                ii = p[ii];
            }
        }
        cout << "Case #" << t + 1 << ": " << ans << '\n';
    }

#ifdef LOCAL_DEFINE
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
#endif
    return 0;
}
