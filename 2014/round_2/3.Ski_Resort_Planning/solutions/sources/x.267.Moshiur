#include<stdio.h>
#include<string.h>
#include<math.h>
#include<ctype.h>
#include<assert.h>
#include<stdlib.h>
#include<time.h>
#include<assert.h>

#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<set>
#include<iostream>
#include<algorithm>
#include<string>

using namespace std;

//#define DEBUG_MODE

#define FOR(i,n) for(int i=0;i<(n);++i)
#define REP(i,a,b) for(int i=(a);i<=(b);++i)
#define CLR(a,x) memset(a,(x),sizeof(a))

#ifdef DEBUG_MODE
#define DBG(X) X
#else
#define DBG(X)
#endif

inline int ___INT(){int ret; scanf("%d",&ret); return ret;}
#define INT ___INT()

typedef long long LL;
typedef pair<int,int> pii;
typedef vector<int> VI;

#define MAX 5005

const int mod = 1000000007;

int N;
int deg[MAX];
int A[MAX];

void buildgraph(){
    FOR(u,N)deg[u]=0;

    FOR(u,N)if(u){
        deg[A[u]]++;
    }
}

int bigmod(int a, int b){
    if(b==0)return 1;
    LL ret = bigmod(a,b/2);
    ret=(ret*ret)%mod;
    if(b&1)ret=(ret*a)%mod;
    return ret;
}

int G(int u){ // many parents
    if(u==0) return 0;
    int ret = bigmod(2,u);
    ret = (ret - 1 - u + mod)%mod;
    return ret;
}

int F(int cnt){
    if(cnt==1) return 1;
  //  printf("cnt=%d >>>>>>>>>\n",cnt);
    LL ret = 1;
    FOR(u,cnt)if(u){
        // one
        LL tmp = 1;
        tmp = (tmp + G(u))%mod;

        ret = (ret * tmp)%mod;

        //printf("u=%d, --> %d\n",u,1+G(u));
    }

    return ret;
}

int calc(){
    LL ret = 1;

    FOR(u,N){
        ret = (ret * F(1+deg[u]))%mod;
    }

    return ret;
}

int main() {
    freopen("ski_resort_planning.txt","r",stdin);
    freopen("C.out","w",stdout);

    int T=INT;
    REP(t,1,T){
        N=INT;
        REP(u,1,N-1) A[u]=INT;
        buildgraph();
        printf("Case #%d: %d\n",t,calc());
    }
    return 0;
}











