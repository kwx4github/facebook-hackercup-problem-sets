/******************************************************************************\
*                         Author:  Dumbear                                     *
*                         Email:   dumbear[#at]163.com                         *
*                         Website: http://dumbear.com                          *
\******************************************************************************/
#include <algorithm>
#include <bitset>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <typeinfo>
#include <utility>
#include <vector>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef vector<long long> VL;
typedef vector<double> VD;
typedef vector<string> VS;

const int mod =  1000000007;

int t, n, pre[5010], acc[5010], nx[5010][5010];
bool pp[5010][5010];
LL pow2[5010];

void add(LL &a, LL b) {
    a = (a + b) % mod;
}

LL get_count() {
    LL res = 1LL;
    memset(pp, 0, sizeof(pp));
    for (int i = 1; i < n; ++i) {
        int last = i;
        for (int j = pre[i]; j != -1; j = pre[j]) {
            nx[i][j] = last;
            pp[i][j] = true;
            last = j;
        }
    }
    for (int i = 1; i < n; ++i) {
        LL tmp = 0;
        int p = pre[i];
        int cnt = 0;
        memset(acc, 0, sizeof(acc));
        int sum = 0;
        for (int j = p + 1; j < i; ++j) {
            if (!pp[j][p])
                continue;
            ++cnt;
            ++acc[nx[j][p]];
            ++sum;
        }
        for (int j = p + 1; j < i; ++j) {
            if (acc[j] > 0) {
                add(tmp, (pow2[acc[j]] - 1) * (pow2[acc[j - 1]] - 1) % mod);
            }
            acc[j] += acc[j - 1];
        }
        // cout << tmp << endl;
        add(tmp, pow2[cnt]);
        // cout << tmp << endl;
        res = (res * tmp) % mod;
    }
    return res;
}

void solve() {
    scanf("%d", &n);
    pre[0] = -1;
    for (int i = 1; i < n; ++i)
        scanf("%d", &pre[i]);
    printf("Case #%d: ", ++t);
    cout << get_count() << endl;
}

int main() {
    freopen("out.txt", "w", stdout);
    pow2[0] = 1;
    for (int i = 1; i < 5010; ++i)
        pow2[i] = pow2[i - 1] * 2 % mod;
    int t;
    scanf("%d", &t);
    for (int i = 0; i < t; ++i)
        solve();
    return 0;
}
