#include<iostream>
#include<vector>
#include<string>
#include<map>
#include<set>
#include<algorithm>
#include<math.h>

using namespace std;
const long double PI = 3.14159265358979323;
const long double eps = 1e-10;
typedef pair<int, int> pii;
typedef long long ll;
typedef unsigned int uint;
ll mod = 1000 * 1000 * 1000 + 7;

ll power(ll a, int n) {
	ll res = 1;
	while(n) {
		if (n & 1)
			res = (res * a) % mod;
		a = (a * a) % mod;
		n /= 2;
	}
	return res;
}

ll solve() {
	int n;
	cin >> n;
	vector<int> pr(n);
	vector<vector<int> > sons(n);
	for (int i = 1; i < n; ++i) {
		cin >> pr[i];
		sons[pr[i]].push_back(i);
	}
	ll res = 1;
	vector<int> count(n, 0);
	for (int i = 1; i < n; ++i) {
		int k = i;
		while(k != 0) {
			++count[pr[k]];
			k = pr[k];
		}
		int p = pr[i];
		ll mult = (power(2, count[p]) + mod - 1) % mod;
		for (int j = 0; j < sons[p].size(); ++j) {
			if (sons[p][j] < i) {
				mult = (mult + mod - power(2, count[sons[p][j]] + 1) + 1) % mod;
			}
		}
		res = (res * mult) % mod;
	}
	return res;	
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int t;
	cin >> t;
	for (int i = 0; i < t; ++i) {
		//cout.precision(6);
		cout << "Case #" << i + 1 << ": " << solve() << "\n";
		std::cerr << i << endl;
	}
	
	return 0;	
}

