#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;

const int mod = 1000000007;

long long qpow(long long v, long long st)
{
	long long r = 1;
	while (st)
	{
		if (st&1)
		{
			r = r * v;
			if (r >= mod)
				r %= mod;
		}
		v = v * v;
		if (v >= mod)
			v %= mod;
		st /= 2;
	}
	return r;
}

int n;
int a[5020];
long long tsz[5020];
long long d2[5020];
vector<int> son[5020];

int main()
{
	d2[0] = 1;
	for (int i	= 1; i <= 5010; ++i)
	{
		d2[i] = (d2[i-1]*2) % mod;
	}
	
	long long d2inv = qpow(2, mod-2);
	
	int t, T;
	scanf("%d", &T);
	for (t = 1; t <= T; ++t)
	{
		scanf("%d", &n);
		long long ans = 1;

		memset(tsz, 0, sizeof(tsz));
		for (int i = 0; i <= n; ++i)
			son[i].clear();

		for (int i = 1; i < n; ++i)
		{
			scanf("%d", &a[i]);
			long long mul = d2[ tsz[a[i]] ]; // take 1
			
			//take 2
			long long t2 = 0;
			for (int j = 0; j < (int) son[a[i]].size(); ++j)
			{
				int u = son[ a[i] ][j];
				//~ printf("S %d %d %lld\n", a[i], u, tsz[u]);
				t2 += (tsz[u]+1LL) * (tsz[a[i]] - (tsz[u]+1LL));
				if (t2 >= mod)
					t2 %= mod;
			}
			t2 = t2 * d2inv;
			if (t2 >= mod)
				t2 %= mod;
			mul = mul + t2;
			if (mul >= mod) mul %= mod;
			
			//~ printf("OP %d %lld __ %lld __ %lld (%d)\n", i, mul, t2, tsz[ a[i] ], a[i]);
			ans *= mul;
			if (ans >= mod)	ans %= mod;
			
			son[a[i]].push_back(i);

			int j = i;
			while (j > 0)
			{
				//~ printf("ADD %d\n", a[j]);
				++tsz[a[j]];
				j = a[j];
			}
		}
		
		printf("Case #%d: %lld\n", t, ans);
	}
	return 0;
}
