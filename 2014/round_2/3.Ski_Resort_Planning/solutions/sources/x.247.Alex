#pragma comment (linker, "/STACK:128000000")
#include <cstdio>
#include <cassert>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <cmath>
#include <unordered_map>
#include <unordered_set>
#include <ctime>
#include <stack>
#include <queue>
using namespace std;
//#define FILENAME ""
#define mp make_pair
#define all(a) a.begin(), a.end()
typedef long long li;
typedef long double ld;
void solve();
//void precalc();
clock_t start;
int timer = 1;
int main() {
#ifdef room111
    freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#else
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
    //freopen(FILENAME".in", "r", stdin);
    //freopen(FILENAME ".out", "w", stdout);
#endif
    int t = 1;
	//cout.sync_with_stdio(0);
	//precalc();
	cout.precision(10);
	cout << fixed;
	cin >> t;
	start = clock();
    while (t--) {
        solve();
		++timer;
	}

#ifdef room111
	cerr << "\n\n" << (clock() - start) / 1.0 / CLOCKS_PER_SEC << "\n\n";
#endif

    return 0;
}

//BE CAREFUL: IS INT REALLY INT?

#define int li

int mod = 1000000007;

int n;
int a[5050];
bool from[5050][5050];

void solve() {
	memset(from, false, sizeof from);
	cout << "Case #" << timer << ": ";

	a[0] = 0;
	cin >> n;
	for (int i = 1; i < n; ++i) {
		cin >> a[i];
		from[a[i]][i] = true;
	}

	for (int i = 1; i < n; ++i) {
		for (int j = 0; j < i; ++j)
			if (from[j][a[i]])
				from[j][i] = true;
	}

	for (int i = 0; i < n; ++i)
		from[i][i] = true;

	/*for (int i = 1; i < n; ++i)
		for (int j = 0; j < i; ++j)
			if (from[j][i])
				cout << j <<' ' << i << endl;*/

	int res = 1;
	for (int i = 1; i < n; ++i) {
		int add = 1;
		for (int j = a[i]; j < i; ++j)
			if (from[a[i]][j]) {
				add = (add * 2) % mod;
			}
		int dec = 1;
		for (int j = a[i]; j < i; ++j)
			if (from[a[i]][j] && a[j] > a[i])
				dec = (dec * 2) % mod;

		for (int j = a[i] + 1; j < i; ++j)
			if (from[a[i]][j] && a[j] == a[i])
				++dec;

		//cout << "look " << add << ' ' << dec << "\n";

		res *= (((add - dec) % mod) + mod) % mod;
		res %= mod;
	}

	cout << res << "\n";

}