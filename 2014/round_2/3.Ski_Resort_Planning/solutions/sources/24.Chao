/*
	Author : ChnLich
*/
#include<cstdio>
#include<cmath>
#include<iomanip>
#include<cstring>
#include<cstdlib>
#include<ctime>
#include<iostream>
#include<sstream>
#include<fstream>
#include<algorithm>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<deque>
#include<set>
#include<map>
#include<string>
#include<bitset>
#include<functional>
#include<utility>

using namespace std;

typedef long long llint;
typedef pair<int,int> ipair;
typedef unsigned int uint;
#define pb push_back
#define fi first
#define se second
#define mp make_pair

const int MOD=1000000007,dx[]={0,1,0,-1},dy[]={1,0,-1,0};
const double eps=1e-8;

void read(int &k)
{
	k=0; char x=getchar();
	while(x<'0'||x>'9') x=getchar();
	while(x>='0'&&x<='9') { k=k*10-48+x; x=getchar(); }
}

int T,p[5010],cnt[5010],out,n;

struct graph
{
	int a[5010],b[5010],c[5010],p;
	void clear()
	{
		memset(a,0,sizeof a);
		p=0;
	}
	void addedge(int x,int y)
	{
		c[++p]=a[x]; a[x]=p; b[p]=y;
	}
	void dfs(int x)
	{
		for(int i=a[x];i;i=c[i])
		{
			dfs(b[i]);
			cnt[x]+=cnt[b[i]];
		}
	}
} A;

llint powe(llint x,llint y)
{
	llint ret=1;
	for(;y;y>>=1,x=x*x%MOD) if (y&1) ret=ret*x%MOD;
	return ret;
}

int main()
{
	freopen("C.in","r",stdin);
	freopen("C.out","w",stdout);
	
	scanf("%d",&T);
	for(int tt=1;tt<=T;tt++)
	{
		fprintf(stderr,"%d\n",tt);
		A.clear();
		scanf("%d",&n);
		out=1;
		for(int i=2;i<=n;i++) scanf("%d",&p[i]),p[i]++;
		for(int i=2;i<=n;i++)
		{
		//	cerr<<i<<endl;
			memset(cnt,0,sizeof cnt);
			for(int j=1;j<i;j++) cnt[j]++;
			A.dfs(p[i]);
			int ans=(powe(2,cnt[p[i]])-1)%MOD;
			for(int j=A.a[p[i]];j;j=A.c[j]) ans=(ans+MOD-powe(2,cnt[A.b[j]])+1)%MOD;
			out=1ll*out*ans%MOD;
			A.addedge(p[i],i);
		}
		printf("Case #%d: %d\n",tt,out);
	}
	
	return 0;
}
