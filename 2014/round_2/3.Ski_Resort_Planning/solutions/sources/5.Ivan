package contest;

import java.util.*;
import java.io.*;
import java.math.*;

public class SkiResort {
    final static String PROBLEM_NAME = "resort";
    final static String WORK_DIR = "D:\\HackerCup\\" + PROBLEM_NAME + "\\";

    class Edge {
        int from, to;
        Edge next;
        public Edge(int from, int to) {
            this.from = from;
            this.to = to;
        }
    }

    public void addEdge(int from, int to) {
        Edge e = new Edge(from, to);
        e.next = adj[from];
        adj[from] = e;
    }

    Edge[] adj;

    final int MOD = 1000000007;

    int size(int v) {
        int ans = 1;
        Edge e = adj[v];
        while (e != null) {
            ans += size(e.to);
            e = e.next;
        }
        return ans;
    }

    long[] www;

    long numWays(int v) {
        long ans = www[size(v)];
        Edge e = adj[v];
        while (e != null) {
            ans = (ans - www[size(e.to)] + MOD) % MOD;
            e = e.next;
        }
        return ans;
    }

    void solve(Scanner sc, PrintWriter pw) {
        int N = sc.nextInt();
        adj = new Edge[N];
        www = new long[N+1];
        www[1] = 1;
        for (int i=2; i<=N; i++) {
            www[i] = (2*www[i-1] + 1) % MOD;
        }
        long ans = 1;
        for (int i = 1; i < N; i++) {
            int prev = sc.nextInt();
            ans = (ans * numWays(prev)) % MOD;
            addEdge(prev, i);
        }
        pw.println(ans);
    }

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(new FileReader(WORK_DIR + "input.txt"));
        PrintWriter pw = new PrintWriter(new FileWriter(WORK_DIR + "output.txt"));
        int caseCnt = sc.nextInt();
        for (int caseNum=0; caseNum<caseCnt; caseNum++) {
            System.out.println("Processing test case " + (caseNum + 1));
            pw.print("Case #" + (caseNum+1) + ": ");
            new SkiResort().solve(sc, pw);
        }
        pw.flush();
        pw.close();
        sc.close();
    }
}
