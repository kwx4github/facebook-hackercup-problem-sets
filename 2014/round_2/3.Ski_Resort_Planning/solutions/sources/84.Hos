#include <bits/stdc++.h>
using namespace std;

long long Pow(long long e, long long m) {
	if(e == 0) return 1;
	long long x =Pow(e/2,m);
	x =(x*x)%m;
	if(e%2 != 0) x =(x*2)%m;
	return x;}

int main() {
	cin.sync_with_stdio(0);
	int T;
	cin >> T;
	for(int t =0; t < T; t++) {
		int N;
		cin >> N;
		long long ans =1, m =1000000007;
		vector<int> A(N,0);
		for(int i =1; i < N; i++) {
			cin >> A[i];
			vector< vector<int> > tree(N);
			vector<bool> inT(N,false);
			inT[A[i]] =true;
			for(int j =A[i]+1; j < i; j++) {
				if(inT[A[j]]) inT[j] =true;
				else continue;
				tree[A[j]].push_back(j);}
			vector<int> S(N,0);
			for(int j =i-1; j >= A[i]; j--) if(inT[j]) {
				S[j]++;
				if(j > A[i]) S[A[j]] +=S[j];}
			long long akt =Pow(S[A[i]],m)+tree[A[i]].size()-1;
			for(int j =0; j < tree[A[i]].size(); j++) akt -=Pow(S[tree[A[i]][j]],m);
			akt =akt%m;
			if(akt < 0) akt +=m;
			ans =(akt*ans)%m;}
		cout << "Case #" << t+1 << ": " << ans << "\n";}
	return 0;}
