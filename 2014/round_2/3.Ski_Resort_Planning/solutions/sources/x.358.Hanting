#include <iostream>
using namespace std;
typedef long long int64;
const int64 MOD = 1000000007ll;
int64 dp[5005];
int par[5005];
int N;
void solve(int);

int main (){
    int Z;
    cin >> Z;
    for(int zi=1;zi<=Z;zi++){
        cin >>N;
        for(int i=1;i<N;i++)cin >> par[i];
        solve(zi);
    }
    return 0;
}
void solve(int zi){
    int64 tmp;
    int cnt,cnt2;
    fill(&dp[0],&dp[N],0);
    dp[0] = 1;
    for(int i=1;i<N;i++){
        cnt = 0;cnt2 = 0;
        for(int j=par[i]+1;j<i;j++){
            if(par[j] == par[i]){
                cnt++;
            }else if(par[j] < par[i]){
                cnt2++;
            }
        }
       // cout << cnt << " " << cnt2 << "\n";
        tmp = 1;
        if(cnt >= 2){
            for(int k=0;k<i - par[i] - cnt2  - 1;k++){
                tmp = tmp * 2;
                tmp %= MOD;
            }
            tmp = tmp * 2 - 1 - cnt;
        }else{
            for(int k=0;k<i - par[i] - cnt2  - 1;k++){
                tmp = tmp * 2;
                tmp %= MOD;
            }
        }
        dp[i] = dp[i-1] * tmp ;
        dp[i] %= MOD;
    }
    cout << "Case #" << zi << ": " << dp[N-1] << "\n";
}
