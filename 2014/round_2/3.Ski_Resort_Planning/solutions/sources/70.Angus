#include <cstdio>

#define M 1000000007

long long modsub(long long a, long long b) {
	b = b % M;
	b = M - b;
	return (a+b) % M;
}

int main() {
	// table of 2^p mod M
	long long modexp[5000];
	modexp[0] = 1;
	for (int i=1;i<5000;i++) {
		modexp[i] = (modexp[i-1]*2)%M;
	}

	int parent[5000];
	int ndesc[5000];

	int num_cases;
	scanf("%d",&num_cases);
	for (int case_num=1;case_num<=num_cases;case_num++) {
		int n;
		scanf("%d",&n);
		ndesc[0] = 1;
		long long result = 1;
		for (int i=1;i<n;i++) {
			scanf("%d",&parent[i]);
			long long c = modsub(modexp[ndesc[parent[i]]],1);
			//printf("i,orig_c = %d,%lld\n",i,c);
			for (int j=1;j<i;j++) {
				if (parent[j]==parent[i]) {
					long long c2 = modsub(modexp[ndesc[j]],1);
					c = modsub(c,c2);
				}
			}
			//printf("i,c = %d,%lld\n",i,c);
			result = (result*c) % M;
			// update ndesc
			ndesc[i] = 1;
			int j = i;
			while (j) {
				j = parent[j];
				ndesc[j]++;
			}
		}
		printf("Case #%d: %lld\n",case_num,result);
	}
}
