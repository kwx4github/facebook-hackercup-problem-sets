#include <cstdio>
#include <iostream>
#include <cstring>
#include <vector>

using namespace std;

const int MaxN = 5010;
const int Mod = 1000000007;

typedef long long llint;

int N, tot[MaxN], A[MaxN], pow2[MaxN], tc;
vector <int> E[MaxN];

void solve (int tc) {
  memset(tot, 0, sizeof(tot));
  scanf("%d",&N);
  for (int i = 0; i < N; ++i)
    E[i].clear();
  for (int i = 1; i < N; ++i) {
    scanf("%d",&A[i]);
    E[A[i]].push_back(i);
  }
  A[0] = -1;

  ++tot[0];

  llint sol = 1;

  for (int i = 1; i < N; ++i) {
    int my = (pow2[tot[A[i]]] - 1 + Mod) % Mod;

    for (int j = 0; j < E[A[i]].size(); ++j)
      my = (my - (pow2[tot[E[A[i]][j]]] - 1) + Mod) % Mod;

    sol = (sol * my) % Mod;
    
    int x = i;
    while (x != -1) {
      ++tot[x];
      x = A[x];
    }
  }

  printf("Case #%d: %lld\n",tc,sol);
}

int main (void) {
  pow2[0] = 1;
  for (int i = 1; i <= 5001; ++i)
    pow2[i] = pow2[i - 1] * 2 % Mod;

  int t;
  scanf("%d",&t);
  for (int i = 1; i <= t; ++i)
    solve(i);
  return 0;
}
