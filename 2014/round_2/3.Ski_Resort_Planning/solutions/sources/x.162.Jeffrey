#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define LLD long long
#define N 5005
using namespace std;

int n, src;
int a[N], v[N];
LLD ret, mul, pow[N];
LLD MOD = 1000000007;

void solve(int tc){
	scanf("%d", &n);
	FOR(i,1,n) scanf("%d", &a[i]);
	ret = 1;
	FOR(i,1,n){
		src = a[i];
		CLR(v, 0);
		int cnt = 0;
		FOR(j,src+1,i){
			if (a[j] == src) v[j] = 1;
			else if (a[j] > src && v[a[j]]) v[j] = 1;
			cnt += v[j];
		}
		mul = (1 + (pow[cnt + 1] - (cnt + 1) - 1 + MOD)) % MOD;
		ret = (ret * mul) % MOD;
	}
	
	printf("Case #%d: %lld\n", tc, ret);
}

int main(){
	pow[0] = 1;
	FOR(i,1,N) pow[i] = (pow[i - 1] * 2) % MOD;

	int tc;
	scanf("%d", &tc);
	FOE(i,1,tc) solve(i);
	return 0;
}
