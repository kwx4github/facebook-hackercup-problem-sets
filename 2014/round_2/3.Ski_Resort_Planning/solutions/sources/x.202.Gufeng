#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <cmath>
#include <iostream>
#include <cstdlib>
#include <sstream>

using namespace std;
const int maxn=5050;
const int M=(int)1e9+7;

int dp[maxn];
int pre[maxn];
int two[maxn];

vector <int> g[maxn];
int root,limit,ha,son;

int dfs(int x)
{
	int sz=1;
	for(int i=0;i<g[x].size();i++)
	{
		if(g[x][i]<=limit)
		{
			int t=dfs(g[x][i]);
			sz+=t;
			if(x==root)
			{
				son++;
				ha=1LL*ha*(t+1)%M;
			}
		}
	}
	return sz;
}
int main()
{
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
	int T,cas=0;
	scanf("%d",&T);
	two[0]=1;
	for(int i=1;i<maxn;i++)two[i]=2LL*two[i-1]%M;
	while(T--)
	{
		printf("Case #%d: ",++cas);
		int n;
		scanf("%d",&n);
		for(int i=1;i<n;i++)scanf("%d",&pre[i]);
		for(int i=0;i<n;i++)g[i].clear();
		for(int i=1;i<n;i++)g[pre[i]].push_back(i);

		int res=1;
		for(int i=1;i<n;i++)
		{
			root=pre[i];
			limit=i-1;
			ha=1;son=0;
			int total=dfs(root);
			int t=two[total-1];
			if(son>=2)
			{
				t=(1LL*t+ha-total)%M;
				if(t<0)t+=M;
			}
			res=1LL*res*t%M;
		}

		printf("%d\n",res);

	}
}
