#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <memory.h>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

const int md = 1000000007;

inline int add(int &a, int b) {
  a += b;
  if (a >= md) a -= md;
}

const int N = 5010;

int pr[N][N];
int f[N][N];

int solve(int n, int* a) {
  a[0] = 0;
  for (int i = 0; i <= n; i++)
    for (int j = 0; j <= n; j++)
      if (i == n || j == n) pr[i][j] = i + j - n; else
      if (i == j) pr[i][j] = i; else
      if (i < j) pr[i][j] = pr[i][a[j]];
      else pr[i][j] = pr[a[i]][j];
  for (int j = 0; j <= n; j++)
    for (int u = 0; u <= n; u++) f[j][u] = 0;
  f[0][n] = 1;
  for (int j = 0; j < n; j++)
    for (int u = 0; u <= n; u++) {
      add(f[j + 1][u], f[j][u]);
      add(f[j + 1][pr[u][j]], f[j][u]);
    }
  long long ans = 1;
  for (int i = 1; i < n; i++) {
    ans = ans * f[i][a[i]] % md;
  }
  return ans;
}

int a[N];

int main() {
  freopen("in", "r", stdin);
  freopen("out", "w", stdout);
  int tt;
  scanf("%d", &tt);
  for (int qq = 1; qq <= tt; qq++) {
    printf("Case #%d: ", qq);
    int n;
    scanf("%d", &n);
    for (int i = 1; i < n; i++) scanf("%d", a + i);
    int ans = solve(n, a);
    printf("%d\n", ans);
    fflush(stdout);
  }
  return 0;
}
