// TwT514 {{{
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cmath>
#include <bitset>
#include <queue>
#include <stack>
#include <functional>
#include <utility>
#define SZ(x) ((int)(x).size())
#define FOR(i,c) for (__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)
#define REP(i,n) for (int i=0; i<(int)(n); i++)
#define REP1(i,a,b) for (int i=(int)(a); i<=(int)(b); i++)
#define ALL(x) (x).begin(),(x).end()
#define MS0(x,n) memset((x),0,(n)*sizeof(*x))
#define MS1(x,n) memset((x),-1,(n)*sizeof(*x))
#define MP make_pair
#define PB push_back
#define RI(a) scanf("%d",&(a))
#define RII(a,b) scanf("%d%d",&(a),&(b))
#define RIII(a,b,c) scanf("%d%d%d",&(a),&(b),&(c))
using namespace std;
typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
// }}}

#define N 5010
#define MOD 1000000007

int two[N];
void predo() {
    two[0]=1;
    REP1(i,1,N-1) two[i]=two[i-1]*2%MOD;
}

int n,fa[N];
void input() {
    RI(n);
    REP1(i,1,n-1) RI(fa[i]);
}

vector<int> e[N];
int size[N];

void go( int p ) {
    size[p]=1;
    FOR(it,e[p]) go(*it);
    FOR(it,e[p]) size[p]+=size[*it];
    //printf("size %d: %d\n",p,size[p]);
}

void solve() {
    REP(i,n) e[i].clear();
    LL ans=1;
    REP1(i,1,n-1) {
        int p=fa[i];
        go(p);
        LL now=0;
        now+=two[size[p]-1]; // choose me
        now+=two[size[p]-1]-1; // do not choose me, and non-empty
        FOR(it,e[p]) now-=two[size[*it]]-1; // all in same subtree
        now%=MOD;
        if ( now<0 ) now+=MOD;
        //printf("%d: %d\n",i,(int)now);
        ans=ans*now%MOD;
        e[p].PB(i);
    }
    printf("%lld\n",ans);
}

int main( int argc, char *argv[] ) {
    predo();
    int t;
    RI(t);
    REP1(i,1,t) {
        input();
        if ( argc>=3 && (i<atoi(argv[1]) || i>atoi(argv[2])) ) continue;
        printf("Case #%d: ",i);
        solve();
    }
    return 0;
}


