namespace ZTCSharp.Hackercup
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using ZTCSharp.Helpers;

    internal class SkiResortPlanning
    {
        public static void Run()
        {
            const string input = @"ski_resort_planning.txt";
            const string output = @"ski_resort_planning.out";

            using (StreamWriter writer = new StreamWriter(output))
            {
                InputHelper fin = new FileInputHelper(input);
                int T = fin.ReadInt();
                for (int tCase = 1; tCase <= T; ++tCase)
                {
                    writer.WriteLine("Case #{0}: {1}", tCase, Solve(fin));
                }
            }
        }

        private static int Solve(InputHelper fin)
        {
            const int Mod = 1000000007;

            int n = fin.ReadInt();

            long[] mi = new long[n];
            int[] a = new int[n];
            long r = 1;

            mi[0] = 1;
            for (int i = 1; i < n; ++i)
            {
                mi[i] = mi[i - 1] * 2 % Mod;
                int x = fin.ReadInt();
                long cur = mi[a[x]];

                if (a[x] > 1)
                {
                    cur = ((cur + mi[a[x]] - 1 - a[x]) % Mod + Mod) % Mod;
                }

                r = r * cur % Mod;
                ++a[x];
            }
            return (int)r;
        }
    }
}
