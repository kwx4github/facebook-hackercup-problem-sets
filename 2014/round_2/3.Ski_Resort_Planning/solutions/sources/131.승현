#pragma warning(disable:4996)
#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;
int T, n, p[5010], TC, w[5010], C[5010];
long long RRes, Mod = 1000000007, Res;
vector<int>E[5010];
void DFS(int a, int b){
	C[a]++;
	int i;
	for (i = 0; i < E[a].size(); i++){
		if (E[a][i] < b){
			DFS(E[a][i], b);
			C[a] += C[E[a][i]];
		}
	}
}
int Po(int a){
	int i, t = 1;
	for (i = 0; i < a; i++){
		t = t + t;
		if (t >= Mod)t -= Mod;
	}
	t--;
	if (t < 0)t += Mod;
	return t;
}
int main()
{
	int i, j;
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	scanf("%d", &TC);
	for (T = 1; T <= TC; T++){
		printf("Case #%d: ", T);
		scanf("%d", &n);
		for (i = 0; i < n; i++)E[i].clear();
		for (i = 1; i < n; i++){
			scanf("%d", &p[i]);
			E[p[i]].push_back(i);
		}
		RRes = 1;
		for (i = n - 1; i > 0; i--){
			for (j = 0; j < n; j++)C[j] = 0;
			DFS(p[i], i);
			Res = Po(C[p[i]]);
			for (j = 0; j < E[p[i]].size(); j++){
				Res -= Po(C[E[p[i]][j]]);
				if (Res < 0)Res += Mod;
			}
			RRes = RRes * Res % Mod;
		}
		printf("%lld\n", RRes);
	}
}