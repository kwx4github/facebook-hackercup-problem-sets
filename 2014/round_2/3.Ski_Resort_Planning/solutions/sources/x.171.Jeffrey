#include <iostream>
#include <vector>
#include <cstring>
#include <map>
using namespace std;

#define MOD 1000000007

int a[5050];
bool b[5050];
long long pow2[5050];

long long calc(vector<int>& g) {
  int tot = 0;
  for (int i = 0; i < g.size(); i++) tot += g[i];

  long long res = (pow2[tot+1] + MOD - 1) % MOD;
  for (int i = 0; i < g.size(); i++) res = (res - (pow2[g[i]] - 1) + MOD) % MOD;
  return res;
}

int main() {
  pow2[0] = 1;
  for (int i = 1; i < 5050; i++)
    pow2[i] = (pow2[i-1] * 2) % MOD;

  int t; cin >> t;
  for (int c = 1; c <= t; c++) {
    int n; cin >> n;
    for (int i = 1; i < n; i++) cin >> a[i];
    long long res = 1;
    for (int i = 1; i < n; i++) {
      memset(b, 0, sizeof(b));
      int p = a[i]; map<int, int> ct;
      for (int j = p+1; j < i; j++) {
        if (a[j] == p) {
          b[j] = j;
          ct[j]++;
        } else if (b[a[j]] > 0) {
          b[j] = b[a[j]];
          ct[b[j]]++;
        }
      }

      vector<int> g;
      for (map<int, int>::iterator it = ct.begin(); it != ct.end(); ++it)
        g.push_back(it->second);
      res = (res * calc(g)) % MOD;
    }
    cout << "Case #" << c << ": " << res << endl;
  }
  return 0;
}
