#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <climits>
#include <ctime>
#include <Windows.h>
#include <iostream>
#include <iomanip>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#pragma comment(linker, "/STACK:36777216")

using namespace std;

typedef pair<int, int> pii;
typedef long long ll;
typedef unsigned long long ull;

void Print(int test_index, ll res) {
  cout << "Case #" << test_index << ": " << res << endl;
}

const int kN = 10000 + 1;
const ll kMod = 1000000007;

ll dp[kN];
ll p[kN];

ll DP(int n) {
  if (n == 0) {
    return 1;
  }
  if (dp[n] == -1) {
    dp[n] = (DP(n - 1) * p[n - 1]) % kMod;
    dp[n] += (DP(n - 1) * (p[n - 1] + (kMod - n))) % kMod;
    dp[n] %= kMod;
  }
  return dp[n];
}

void PreCalc() {
  p[0] = 1;
  for (int i = 1; i < kN; ++i)
    p[i] = (p[i - 1] * 2) % kMod;
}

int main() {
  freopen("input_c.txt", "r", stdin);
  freopen("output_c.txt", "w", stdout);
  PreCalc();
  int test_count;
  cin >> test_count;
  for (int test_index = 0; test_index < test_count; ++test_index) {
    int n;
    cin >> n;
    vector<int> a(n);
    vector<int> b(n);
    for (int i = 1; i < n; ++i) {
      cin >> a[i];
      ++b[a[i]];
    }
    memset(dp, 255, sizeof(dp));
    ll res = 1;
    for (int i = 0; i < n; ++i) {
      res = (res * DP(b[i])) % kMod;
    }
    Print(test_index + 1, res);
  }
  return 0;
}