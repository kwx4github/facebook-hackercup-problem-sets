#include <cstdio>
#include <vector>
#include <cstring>

#define MAX 5005
#define MOD 1000000007

std::vector<int> e[MAX];

bool vis[MAX];
long long pow[MAX];


int sum(int now)
{
    int s = 1;
    vis[now] = true;
    for (auto child : e[now])
    {
        if (not vis[child])
            s += sum(child);
    }
    return s;
}
long long calc(int now)
{
    memset(vis, 0, sizeof(vis));

    int s = 1;
    long long ans = 0;
    for (auto child : e[now])
    {
        int v = sum(child);
        s += v;

        ans = (ans - (pow[v] - 1) + MOD) % MOD;
    }
    ans = (ans + (pow[s] - 1) + MOD)%MOD;
    return ans;
}

int main()
{
    int T;
    scanf("%d", &T);

    pow[0] = 1;
    for(int i = 1; i < MAX; ++i)
        pow[i] = (2 * pow[i - 1]) % MOD;

    for (int Ti = 1; Ti <= T; ++Ti)
    {
        int N;
        scanf("%d", &N);

        for (int i = 0; i < N; ++i)
            e[i].clear();

        long long ans = 1;
        for (int i = 1; i < N; ++i)
        {
            int f;
            scanf("%d", &f);

            ans = (ans * calc(f))%MOD;

            e[f].push_back(i);
        }
        printf("Case #%d: %lld\n", Ti, ans);
    }

}
