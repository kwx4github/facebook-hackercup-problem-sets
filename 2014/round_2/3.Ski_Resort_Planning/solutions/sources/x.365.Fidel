#include <vector>
#include <iostream>
using namespace std;

#define MOD 1000000007LL
#define MAXN 5100

long long pow2[MAXN];

struct node {
    int p;
    vector<int> c;
} n[MAXN];

int count(int cur, int top) {
    int RES = 1;
    for (int i=0; i<(int)n[cur].c.size(); i++) {
        int next = n[cur].c[i];
        if (next < top) RES += count(next, top);
    }
    return RES;
}

int main() {
    int t, T, N, i;
    long long tmp, RES;

    pow2[0] = 1LL;
    for (i=1; i<MAXN; i++) pow2[i] = (pow2[i-1]*2LL)%MOD;

    cin >> T;
    for (t=1; t<=T; t++) {
        cin >> N;
        for (i=0; i<N; i++) n[i].c.clear();

        n[0].p = -1;
        for (i=1; i<N; i++) {
            cin >> n[i].p;
            n[n[i].p].c.push_back(i);
        }

        RES = 1LL;
        for (i=1; i<N; i++) {
            tmp = count(n[i].p, i);
            RES = (RES*((pow2[tmp] + MOD - tmp)%MOD))%MOD;
        }
        cout << "Case #" << t << ": " << RES << endl;
    }

    return 0;
}
