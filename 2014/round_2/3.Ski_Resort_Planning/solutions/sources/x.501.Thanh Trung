#include <bits/stdc++.h>

#define FOR(i,a,b) for(int i=(a),_b=(b); i<=_b; i++)
#define FORD(i,a,b) for(int i=(a),_b=(b); i>=_b; i--)
#define REP(i,a) for(int i=0,_a=(a); i<_a; i++)

#define DEBUG(x) { cout << #x << " = "; cout << x << endl; }
#define PR(a,n) { cout << #a << " = "; FOR(_,1,n) cout << a[_] << ' '; cout << endl; }
#define PR0(a,n) { cout << #a << " = "; REP(_,n) cout << a[_] << ' '; cout << endl; }
using namespace std;

//Buffer reading
int INP,AM,REACHEOF;
const int BUFSIZE = (1<<12) + 17;
char BUF[BUFSIZE+1], *inp=BUF;
#define GETCHAR(INP) { \
    if(!*inp && !REACHEOF) { \
        memset(BUF,0,sizeof BUF);\
        int inpzzz = fread(BUF,1,BUFSIZE,stdin);\
        if (inpzzz != BUFSIZE) REACHEOF = true;\
        inp=BUF; \
    } \
    INP=*inp++; \
}
#define DIG(a) (((a)>='0')&&((a)<='9'))
#define GN(j) { \
    AM=0;\
    GETCHAR(INP); while(!DIG(INP) && INP!='-') GETCHAR(INP);\
    if (INP=='-') {AM=1;GETCHAR(INP);} \
    j=INP-'0'; GETCHAR(INP); \
    while(DIG(INP)){j=10*j+(INP-'0');GETCHAR(INP);} \
    if (AM) j=-j;\
}
//End of buffer reading

#define TWO(x) (1LL<<(x))
#define CONTAIN(S,x) (S & TWO(x))
;

int a[11][11];
long long f[5011];
int n;

bool check() {
    f[1] = 1;
    FOR(i,2,n) {
        f[i] = 0;
        FOR(j,1,i-1)
        if (a[j][i]) {
            f[i] += f[j];
            if (f[i] < 0) puts(":@)");
        }

        if (!a[1][i]) {
            if (f[i] < 2) return false;
            FOR(j,1,i-1)
            if (a[j][i] && f[i] == f[j]) return false;
        }
    }
    return true;
}

int gen() {
    ios :: sync_with_stdio(false);
    FOR(n,1,8) {
        ::n = n;
        int res = 0;
        REP(mask,TWO(n*(n-1)/2)) {
            int cur = 0;
            FOR(i,1,n) FOR(j,i+1,n) {
                if (CONTAIN(mask,cur)) a[i][j] = 1;
                else a[i][j] = 0;
                ++cur;
            }
            if (check()) {
                ++res;
            }
        }
        cout << res << endl;
    }
    return 0;
}

int cnt[5011];
const long long MOD = 1000000007;

int main() {
    ios :: sync_with_stdio(false);
    int ntest; cin >> ntest;
    f[0] = 1;
    f[1] = 1;
    f[2] = 2;
    long long t = 2;
    FOR(i,3,5000) {
        t = (t * 2 + i - 2) % MOD;
        f[i] = (f[i-1] * t) % MOD;
    }
    PR0(f, 10);
    FOR(test,1,ntest) {
        int n; cin >> n;
        memset(cnt, 0, sizeof cnt);
        FOR(i,1,n-1) {
            int a; cin >> a;
            cnt[a]++;
        }
        long long res = 1;
        REP(i,n)
            res = (res * f[cnt[i]]) % MOD;
        cout << "Case #" << test << ": " << res << endl;
    }
}
