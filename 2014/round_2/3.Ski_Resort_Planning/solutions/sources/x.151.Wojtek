#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <cstdio>
#include <utility>
#define MP make_pair
#define PB push_back

typedef long long ll;

using namespace std;
const ll P = 1000000007;
const int N = 5005;
int sieg[N];
ll pot[N];
int domnie[N];
int main()
{
  // nie zapomnij o ll
  ios_base::sync_with_stdio(0);
    int tt;
  cin>>tt;
  pot[0] = 1;
  for (int i = 1; i < N; i++) {
    pot[i] = 2 * pot[i - 1] % P;
  }
  for (int yy = 1; yy <= tt; yy++) {
    cout<<"Case #"<<yy<<": ";
    int n;
    cin>>n;
    for (int i = 1; i <= n; i++) {
      domnie[i] = 0;
    }
    ll res = 1;
    for (int i = 1; i < n; i++) {
      cin>>sieg[i];
      domnie[sieg[i]]++;
      int possible = 0, exact = 0;
      for (int j = sieg[i]; j < i; j++) {
        /* if (j == sieg[i] || sieg[j] == sieg[i]) {
          exact++;
        } */
        if (j == sieg[i] || sieg[j] >= sieg[i]) {
          possible++;
        }
      }
      ll mn = pot[possible] - 1;
      int acc = 0;
      for (int j = i - 1; j > sieg[i]; j--) {
        if (sieg[j] >= sieg[i]) {
          acc += domnie[j];
          mn -= pot[acc];
        }
      }
      //res *= (pot[possible] - pot[possible - exact] + P);
      //cout<<i<<" "<<possible<<" "<<exact<<endl;
      //cout<<possible<<" "<<mn<<endl;
      res *= mn;
      res %= P;
    }
    cout<<res<<endl;
  }
    
  // nie zapomnij o ll
  return 0;
}
