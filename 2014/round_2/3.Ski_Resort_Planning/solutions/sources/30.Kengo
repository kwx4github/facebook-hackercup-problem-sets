#include<vector>
#include<cmath>
#include<map>
#include<cstdlib>
#include<iostream>
#include<sstream>
#include<fstream>
#include<string>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<set>
#include<stack>
#include<bitset>
#include<functional>
#include<ctime>
#include<queue>
#include<deque>
#include<complex>
using namespace std;
#define pb push_back
#define pf push_front
typedef long long lint;
typedef complex<double> P;
#define mp make_pair
#define fi first
#define se second
typedef pair<int,int> pint;
#define All(s) s.begin(),s.end()
#define rAll(s) s.rbegin(),s.rend()
#define REP(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
int a[5100],num[5100];
lint zyo[5100];
lint mo=1000000007;
vector<int> gr[5100];
int main()
{
	zyo[0]=1;rep(i,5050) zyo[i+1]=(zyo[i]*2)%mo;a[0]=-1;
	int n,t;
	cin>>t;
	rep(i,t){
		cin>>n;REP(j,1,n) cin>>a[j];
		rep(j,n){gr[j].clear();num[j]=1;}
		lint ret=1;
		REP(j,1,n){
			int par=a[j];//cout<<par<<' '<<num[par]<<endl;
			if(gr[par].size()<2) ret=(ret*zyo[num[par]-1])%mo;
			else{
				lint bai=zyo[num[par]]-1;
				rep(k,gr[par].size()) bai-=zyo[num[gr[par][k]]]-1;
				bai=(bai%mo+mo)%mo;ret=(ret*bai)%mo;
			}
			gr[par].pb(j);
			for(;par>=0;par=a[par]) num[par]++;
			//cout<<ret<<endl;
		}
		cout<<"Case #"<<i+1<<": "<<ret<<endl;
	}
}
