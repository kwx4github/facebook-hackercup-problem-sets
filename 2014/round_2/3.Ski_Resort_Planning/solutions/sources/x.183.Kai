#include <cstdio>
#include <vector>
#include <set>
#include <map>
#include <cstring>
#include <utility>
#include <algorithm>
using namespace std;
using namespace rel_ops;

typedef pair<int,int> PII;
typedef long long LL;

class Imp {
public:
    static const int MOD = 1000000007;
    typedef long long LL;
    int u;
    Imp(){};
    Imp(int v):u(v){}
    operator int&(){return u;}
    operator const int&() const {return u;}
    Imp operator +(int v) const {return u+v<MOD?u+v:u+v-MOD;}
    Imp operator -(int v) const {return u<v?u-v+MOD:u-v;}
    Imp operator *(int v) const {return u*LL(v)%MOD;}
    Imp operator /(int v) const {return u*RR(v)%MOD;}
    Imp operator -() const {return u?MOD-u:0;}
    Imp& operator +=(int v){u+=u+v<MOD?v:v-MOD; return *this;}
    Imp& operator -=(int v){u-=u<v?v-MOD:v; return *this;}
    Imp& operator *=(int v){u=u*LL(v)%MOD; return *this;}
    Imp& operator /=(int v){u=u*RR(v)%MOD; return *this;}
    static LL RR(int x){
        return x>1?RR(MOD%x)*(MOD-MOD/x)%MOD:x;
    }
};

Imp dp[5005];

void init(){
    dp[0]=dp[1]=1;
    for(int i=2;i<5005;i++) dp[i]=dp[i-1]*(3*i-4);
}

int main(){
    init();
    int cs,no=0;
    scanf("%d",&cs);
    while(cs--){
        int n,a[5005];
        Imp ans=1;
        scanf("%d",&n);
        map<int,int> cnt;
        for(int i=1;i<n;i++) scanf("%d",a+i);
        for(int i=1;i<n;i++) cnt[a[i]]++;
        for(auto& r:cnt) ans*=dp[r.second];
        printf("Case #%d: %d\n",++no,ans.u);
    }
}
