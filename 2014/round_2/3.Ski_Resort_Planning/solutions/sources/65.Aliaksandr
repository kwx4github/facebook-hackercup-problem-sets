#pragma comment(linker, "/stack:32000000")
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <cmath>
#include <sstream>
#include <stack>
#include <cassert>
#include <string.h>
#include <ctime>

#define pb push_back
#define mp make_pair
#define PI 3.1415926535897932384626433832795
#define sqr(x) (x)*(x)
#define forn(i, n) for(int i = 0; i < n; ++i)
#define ALL(x) x.begin(), x.end()
#define sz(x) int((x).size())
#define X first
#define Y second
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
using namespace std;
typedef pair<int,int> pii;
const int INF = 2147483647;
const ll LLINF = 9223372036854775807LL;

const int mod = 1000000007;
const int maxn = 5010;
ll pw2[maxn];

ll add(ll x, ll y) {
	return (x+y)%mod;
}

ll sub(ll x, ll y) {
	return ((x-y)%mod+mod)%mod;
}

vector<int> a[maxn];

ll dfs(int v, bool root) {
	int subsize = 1;
	ll ans = 0;
	forn(i, sz(a[v])) {
		ll tmp = dfs(a[v][i], false);
		subsize += tmp;
		ll tadd = sub(pw2[tmp],1);
		ans = sub(ans,tadd);
	}
	if (!root) return subsize;
	ans = add(ans, pw2[subsize]);
	ans = sub(ans, 1);
	return ans;
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	pw2[0] = 1;
	for (int i = 1; i < maxn; ++i) pw2[i] = ((ll)pw2[i-1]*2LL)%mod;
	int T; scanf("%d", &T); for (int tn = 1; tn <= T; ++tn) {
		forn(i,maxn) a[i].clear();
		cerr << tn << endl;
		int n; scanf("%d", &n);
		vector<int> v(n);
		forn(i, n-1) scanf("%d", &v[i+1]);
		vector<int> dp(n);
		dp[0] = 1;
		for (int i = 1; i < n; ++i) {
			ll tmult = dfs(v[i], 1);
			dp[i] = (dp[i-1] * tmult) % mod;
			a[v[i]].pb(i);
		}
		printf("Case #%d: %d\n", tn, dp[n-1]);
	}
	return 0;
}