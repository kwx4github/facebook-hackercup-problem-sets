#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <algorithm>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <sstream>

using namespace std;

typedef long long ll;

#define REP(i,s,t) for(int i=(s);i<(t);i++)
#define FOREACH(i,v) for(typeof((v).begin()) i=(v).begin();i!=(v).end();i++)
#define FILL(x,v) memset(x,v,sizeof(x))
const int INF = (int)1E9;
#define MAXN 5005
const ll MOD = 1000000007;

int N;

ll powmod(ll a, ll k, ll mod){
	a %= mod; k %= mod;
	ll ans = 1, bs = a;
	while(k){
		if(k&1) ans = ans*bs%mod;
		bs = bs*bs%mod;
		k >>= 1;
	}
	return ans;
}

int a[MAXN];
int dp[MAXN][MAXN];
int cnt[MAXN];
int cc[MAXN], lcc;

int main(){
	int cs;
	cin >> cs;
	REP(csn, 1, cs+1){
		printf("Case #%d: ", csn);
		cin >> N;
		REP(i,1,N) scanf("%d", a+i);
		a[0] = 0;
		FILL(dp, -1);
		REP(k, 0, N){
			REP(i, 0, N){
				if(i==k){
					dp[i][k] = k;
				}else{
					dp[i][k] = dp[a[i]][k];
				}
			}
		}
		/*
		REP(i, 0, N){
			REP(j, 0, N){
				cerr << dp[i][j] << " ";
			}
			cerr << endl;
		}
		*/
		ll ans = 1;

		REP(i,0,N){
			int k = 0;
			FILL(cnt, 0);
			lcc = 0;
			for(int j=i-1; j>a[i]; j--){
				if(dp[j][a[i]]>=a[i]){
					k++;
					cnt[j]++;
					cnt[a[j]] += cnt[j];
					if(a[j]==a[i]){
						cc[lcc++] = cnt[j];
					}
				}
			}
			ll bans = powmod(2, k, MOD); // go a[i]
			bans += powmod(2, k, MOD)+MOD-1;
			bans %= MOD;
			REP(j,0,lcc){
				bans += MOD - powmod(2, cc[j], MOD) + 1;
				bans %= MOD;
			}
			ans *= bans;
			ans %= MOD;
		}
		cout << ans << endl;
	}
	return 0;
}