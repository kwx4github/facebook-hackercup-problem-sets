import java.io.*;

import java.awt.geom.Point2D;
import java.text.*;
import java.math.*;
import java.util.*;

public class Main implements Runnable {

	final String filename = "ski_resort_planning";

	final long MOD = 1000000007;

	public void solve() throws Exception {
		int N = iread();
		int[] cnt = new int[N];

		long[] pow2 = new long[N + 1];
		pow2[0] = 1;
		for (int i = 1; i <= N; i++)
			pow2[i] = (pow2[i - 1] * 2) % MOD;

		long ans = 1;
		for (int i = 1; i < N; i++) {
			int A = iread();
			cnt[A]++;
			ans = ans * (pow2[cnt[A]] - 1 - (cnt[A] - 1) + MOD) % MOD;
		}
		out.write(ans + "\n");
	}

	public void run() {
		try {
			// in = new BufferedReader(new InputStreamReader(System.in));
			// out = new BufferedWriter(new OutputStreamWriter(System.out));
			in = new BufferedReader(new FileReader(filename + ".txt"));
			out = new BufferedWriter(new FileWriter(filename + ".out"));
			int tests = iread();
			for (int test = 1; test <= tests; test++) {
				out.write("Case #" + test + ": ");
				solve();
			}
			out.flush();
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

	public int iread() throws Exception {
		return Integer.parseInt(readword());
	}

	public double dread() throws Exception {
		return Double.parseDouble(readword());
	}

	public long lread() throws Exception {
		return Long.parseLong(readword());
	}

	BufferedReader in;

	BufferedWriter out;

	public String readword() throws IOException {
		StringBuilder b = new StringBuilder();
		int c;
		c = in.read();
		while (c >= 0 && c <= ' ')
			c = in.read();
		if (c < 0)
			return "";
		while (c > ' ') {
			b.append((char) c);
			c = in.read();
		}
		return b.toString();
	}

	public static void main(String[] args) {
		try {
			Locale.setDefault(Locale.US);
		} catch (Exception e) {

		}
		// new Thread(new Main()).start();
		new Thread(null, new Main(), "1", 1 << 25).start();
	}
}