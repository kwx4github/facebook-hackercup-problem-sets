#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<vector>
#include<math.h>
#include<stdlib.h>
#include<set>
#include<ctype.h>
using namespace std;

#define X first
#define Y second
typedef long long ll;
typedef pair<int,int> Pi;

bool chk[110][110];
//x<=y
inline int f2(int x,int y)
{
	return (y-x)*x + x*(x-1);
}

int f3(int x,int y,int z)
{
	return (z-y)*f2(x,y) + (y-x)*f2(x,y-1) + x*f2(x-1,y-1);
}

Pi P[10010];

bool comp(const Pi a,const Pi b)
{
	return a.X+a.Y!=b.X+b.Y?a.X+a.Y<b.X+b.Y:a.Y<b.Y;
}

ll check(int x,int y,int N)
{
	int i,j,k;
	ll ret=0;
	for(i=N;i;i--){
		if(i==x||i==y)continue;
		int a;
		if(i>y)a=x+y-i-1;
		else a=x+y-i;
		a=min(a,i-1);
		for(j=i-1;j;j--){
			if(j==x||j==y)continue;
			int b;
			if(j>y)b=x+y-j-1;
			else b=x+y-j;
			b=min(b,j-1);
			for(k=j-1;k;k--){
				if(k==x||k==y)continue;
				int c;
				if(k>y)c=x+y-k-1;
				else c=x+y-k;
				c=min(c,k-1);
				int p=a,q=b,r=c;
				if(a>=x)p--;
				if(b>=x)q--;
				if(c>=x)r--;
				if(a>=j)p--;
				if(a>=k)p--;
				if(b>=k)q--;
				if(p>q)p^=q^=p^=q;
				if(q>r)q^=r^=q^=r;
				if(p>q)p^=q^=p^=q;
				if(p>0&&q>0&&r>0)ret+=(ll)f3(p,q,r);
			}
		}
	}
	return ret;
}

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int T,t;
	scanf("%d",&T);
	for(t=1;t<=T;t++){
		int i,j;
		for(i=0;i<110;i++)for(j=0;j<110;j++)chk[i][j]=0;
		for(i=0;i<7000;i++)P[i].X=P[i].Y=0;
		int N,H,a,b;
		scanf("%d%d",&N,&H);
		P[1].X=1,P[1].Y=2;
		for(i=2;i<=N*(N-1)/2;i++){
			if(P[i-1].Y-P[i-1].X != 1){
				P[i].Y=P[i-1].Y,P[i].X=P[i-1].X+1;
			}
			else{
				P[i].Y=P[i-1].Y+1;
				P[i].X=1;
			}
		}
		ll tot;
		tot=(ll)(N-2)*(ll)(N-3)*(ll)(N-4)*(ll)(N-5)*(ll)(N-6)*(ll)(N-7)/6/2/2/2;
		sort(P+1,P+1+N*(N-1)/2,comp);
		int st=1,en=N*(N-1)/2,mi;
		int ans=en;
		while(st<=en){
			mi=(st+en)>>1;
			int x=P[mi].X,y=P[mi].Y;
			if(check(x,y,N)*4 > tot)ans=mi,en=mi-1;
			else st=mi+1;
		}
		for(i=1;i<=N;i++){
			for(j=i+1;j<=N;j++){
				if(i+j>P[ans].X+P[ans].Y){
					chk[i][j]=1;
				}
				else if(i+j==P[ans].X+P[ans].Y && j>=P[ans].Y){
					chk[i][j]=1;
				}
				else chk[i][j]=0;
			}
		}
		printf("Case #%d : ",t);
		while(H--){
			scanf("%d%d",&a,&b);
			if(a>b)a^=b^=a^=b;
			if(chk[a][b])printf("B");
			else printf("F");
		}
		puts("");
	}
	return 0;
}
