#pragma comment(linker, "/STACK:60777216")  

#include <cassert>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<complex>
#include<vector>
#include<set>
#include<map>
#include<cmath>
#include<queue>
#include<string>
#include<cstdlib>
#include<memory.h>
#include<ctime>
#include<bitset>
#include<fstream>
#include<queue>

using namespace std;


typedef long double ld;

typedef long long ll;
typedef pair<int,int>	pii;
typedef pair<ld,ld>	pdd;
typedef vector<int> vi;
typedef vector<ld> vd;
typedef pair<ll,ll> pl;

#define FOR(i,a,b)		for(int i=(a);i<(b);i++)
#define REP(i,n)		FOR(i,0,n)
#define SORT(v)			sort((v).begin(),(v).end())
#define UN(v)			SORT(v),(v).erase(unique((v).begin(),(v).end()),(v).end())
#define CL(a,b)			memset(a,b,sizeof a)
#define pb				push_back

int d[111][111];

int main(){	
#ifdef LocalHost
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif

	int tc;
	cin>>tc;
	REP(TC,tc){
		int n,m;
		cin>>n>>m;
		//n=100;m=10000;
		cout<<"Case #"<<TC+1<<": ";
		CL(d,-1);
		REP(i,m){
			int c1,c2;
			cin>>c1>>c2;
			//c1=rand()%n+1;
			//c2=rand()%n+1;
			if (c1<c2) swap(c1,c2);
			if (d[c1][c2]==-1) {
				ll x = n - 2;
				ll total = x * (x-1)/2 * (x-2)*(x-3)/2 * (x-4)*(x-5)/2;
				ll wins = 0;

				FOR(m1,1,n+1)if(m1!=c1 && m1!=c2) {
					int p1 = c1 + c2 - m1;
					if (m1>c1) p1--;
					p1=min(p1,m1-1);
					if (p1<1) continue;				
					FOR(m2,1,m1)if(m2!=c1 && m2!=c2 && m2!=m1){
						int p2 = c1 + c2 - m2;
						if (m2>c1) p2--;
						p2=min(p2,m2-1);
						if (p2<1) continue;
						FOR(m3,1,m2)if(m3!=c1 && m3!=c2 && m3!=m1 && m3!=m2){
							int p3 = c1 + c2 - m3;
							if (m3>c1)p3--;
							p3=min(p3,m3-1);
							if (p3<1) continue;
							int num = 1;
							int mn = min(p1,min(p2,p3));
							int mx = max(p1,max(p2,p3));
							int md = p1 + p2 + p3 - mn - mx;
							int s1 = 0;
							if (m1<=mn) s1++;
							if (m2<=mn) s1++;
							if (m3<=mn) s1++;
							if (c1<=mn) s1++;
							if (c2<=mn) s1++;
							if (mn - s1 <=0) continue;
							num *= (mn - s1);

							int s2 = 1;
							if (m1<=md) s2++;
							if (m2<=md) s2++;
							if (m3<=md) s2++;
							if (c1<=md) s2++;
							if (c2<=md) s2++;
							if (md - s2 <=0) continue;
							num *= (md - s2);

							int s3 = 2;
							if (m1<=mx) s3++;
							if (m2<=mx) s3++;
							if (m3<=mx) s3++;
							if (c1<=mx) s3++;
							if (c2<=mx) s3++;
							if (mx - s3 <=0) continue;
							num *= (mx - s3);

							wins += num  * 6ll;
						}
					}
				}
				//cout<<"!"<<wins<<' '<<total<<"!"<<endl;
				d[c1][c2]=(wins*4>total);
			}
			
			if (d[c1][c2]) printf("B");
			else printf("F");
		}
		puts("");
	}

#ifdef LocalHost
	printf("TIME: %.3lf\n",ld(clock())/CLOCKS_PER_SEC);
#endif
	return 0;
}