#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <cctype> 
#include <string> 
#include <cstring> 
#include <ctime> 

using namespace std;

#define _int64 long long

_int64 d[110][110];
int used[110];
int sum[110];
int ma[110];
int a[110];
//int tot[60][60];

/*
void search(int x)
{
  int i,bi,st;
  if (x==8)
  {
    for (i=0;i<4;i++)
    {
      sum[i]=a[i*2]+a[i*2+1];
      ma[i]=max(a[i*2],a[i*2+1]);
      tot[a[i*2]+a[i*2+1]-ma[i]][ma[i]]++;
    }
    bi=0;
    for (i=1;i<4;i++)
      if ((sum[i]>sum[bi])||((sum[i]==sum[bi])&&(ma[i]>ma[bi])))
        bi=i;
    d[a[bi*2]+a[bi*2+1]-ma[bi]][ma[bi]]++;
    return;
  }
  st=0;
  if (x%2==0)
  {
    if (x-2>=0)
      st=a[x-2];
  }
  else st=a[x-1];
  for (i=st;i<n;i++)
    if (used[i]==0)
    {
      a[x]=i;
      used[i]=1;
      search(x+1);
      used[i]=0;
    }
}
*/
int cnt[200];

void solve(int n)
{
  _int64 ans,tot;
  int i,j,k,l,o;
  /*
  int i,j;
  n=12;
  memset(tot,0,sizeof(tot));
  memset(d,0,sizeof(d));
  search(0);
  //printf("%d %d\n",d[3][6],tot[3][6]);
  //printf("%.9lf\n",(double)d[3][6]/tot[3][6]);
  for (i=0;i<n;i++)
    for (j=i+1;j<n;j++)
    {
      printf("%d %d:\n",i,j);
      printf("%d %d\n",d[i][j],tot[i][j]);
      printf("%.9lf\n",(double)d[i][j]/tot[i][j]);
    }
  printf("%d %d\n",d[5][8],tot[5][8]);
  printf("%.9lf\n",(double)d[5][8]/tot[5][8]);
  */
  //n=100;
  for (i=0;i<n;i++)
    for (j=i+1;j<n;j++)
    {
      
      memset(cnt,0,sizeof(cnt));
      tot=0;
      for (k=0;k<n;k++)
        if ((k!=i)&&(k!=j))
          for (l=k+1;l<n;l++)
            if ((l!=i)&&(l!=j))
            {
              if ((k+l<i+j)||((k+l==i+j)&&(l<j)))
              {
                cnt[k]++;
                cnt[l]++;
                tot++;
              }
            }
      if (tot<3)
      {
        d[i][j]=0;
        continue;
      }
      ans=(tot*(tot-1)*(tot-2)/6);
      for (k=0;k<n;k++)
        if (cnt[k]>=2)
        {
          ans-=(cnt[k]*(cnt[k]-1)/2)*(tot-2);
        }
      for (k=0;k<n;k++)
        if ((k!=i)&&(k!=j))
          for (l=k+1;l<n;l++)
            if ((l!=i)&&(l!=j))
            {
              if ((k+l<i+j)||((k+l==i+j)&&(l<j)))
              {
                ans+=(cnt[k]-1)*(cnt[l]-1);
              }
            }
      for (k=0;k<n;k++)
        if (cnt[k]>=3)
        {
          ans+=(cnt[k]*(cnt[k]-1)*(cnt[k]-2)/6)*2;
        }
      for (k=0;k<n;k++)
        if ((k!=i)&&(k!=j))
          for (l=k+1;l<n;l++)
            if ((l!=i)&&(l!=j))
            {
              if ((k+l<i+j)||((k+l==i+j)&&(l<j)))
              {
                for (o=l+1;o<n;o++)
                  if ((o!=i)&&(o!=j))
                    if (((k+o<i+j)||((k+o==i+j)&&(o<j)))&&((l+o<i+j)||((l+o==i+j)&&(o<j))))
                      ans--;
              }
            }
      d[i][j]=ans;
    }
  /*
  for (i=0;i<n;i++)
    for (j=i+1;j<n;j++)
    {
      printf("%d %d:\n",i,j);
      printf("%lld %lld\n",d[i][j],(_int64)(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)/8/6);
      printf("%.9lf\n",(double)d[i][j]/((_int64)(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)/8/6));
    }
  */
}

int main()
{
  double tmp;
  int i,q,l,t,n,x,y;
  scanf("%d",&t);
  for (l=0;l<t;l++)
  {
    scanf("%d%d",&n,&q);
    solve(n);
    printf("Case #%d: ",l+1);
    for (i=0;i<q;i++)
    {
      scanf("%d%d",&x,&y);
      x--;y--;
      if (x>y) swap(x,y);
      tmp=d[x][y];
      tmp/=((_int64)(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)/8/6);
      //printf("%.9lf\n",tmp);
      if (tmp>=0.25) printf("B");
      else printf("F");
    }
    printf("\n");
  }
}
