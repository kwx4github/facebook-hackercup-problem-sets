#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string>
#include <cassert>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define forup(i,a,b) for(int i=a; i<b; ++i)
#define fordn(i,a,b) for(int i=a; i>b; --i)
#define rep(i,a) for(int i=0; i<a; ++i)

#define dforup(i,a,b) for(i=a; i<b; ++i)
#define dfordn(i,a,b) for(i=a; i>b; --i)
#define drep(i,a) for(i=0; i<a; ++i)

#define slenn(s,n) for(n=0; s[n]!='\0'; ++n)

#define gi(x) scanf("%d",&x)
#define gl(x) cin>>x
#define gd(x) scanf("%lf",&x)
#define gs(x) scanf("%s",x)

#define pis(x) printf("%d ",x)
#define pin(x) printf("%d\n",x)
#define pls(x) cout<<x<<" "
#define pln(x) cout<<x<<"\n"
#define pds(x) printf("%.12f ",x)
#define pdn(x) printf("%.12f\n",x)
#define pnl() printf("\n")

#define fs first
#define sc second

#define pb push_back

const int inv=1000000000;
const int minv=-inv;

const int max_n=110;

int T;
int n,h;
int c1,c2;
int ref;
LL tot;

pii hand[max_n*max_n]; int nhand;
map<pii,int> M;

int reduce(int a, int Q[5])
{
	int ret=a;
	rep(i,5)
		if(Q[i]<=a)
			--ret;
		else
			break;
	return ret;
}

LL cres; 
bool bsf(int x)
{
	int a0=hand[x].fs, b0=hand[x].sc;

	cres=0ll;
	for(int a1=1; a1<a0+b0; ++a1)
	{
		if(a1==a0 or a1==b0) continue;
		for(int a2=1; a2<a0+b0; ++a2)
		{
			if(a2==a0 or a2==b0 or a2==a1) continue;
			for(int a3=1; a3<a0+b0; ++a3)
			{
				if(a3==a0 or a3==b0 or a3==a1 or a3==a2) continue;
				{
					int Q[5];
					Q[0]=a0; Q[1]=a1; Q[2]=a2; Q[3]=a3; Q[4]=b0;
					sort(Q,Q+5);

					int b1=min(a0+b0-a1,n); if(a1+b1==a0+b0 and max(a1,b1)>=b0) --b1;
					if(b1>0) b1=reduce(b1,Q);
					int b2=min(a0+b0-a2,n); if(a2+b2==a0+b0 and max(a2,b2)>=b0) --b2;
					if(b2>0) b2=reduce(b2,Q);
					int b3=min(a0+b0-a3,n); if(a3+b3==a0+b0 and max(a3,b3)>=b0) --b3;
					if(b3>0) b3=reduce(b3,Q);

					if(b2>b3) swap(b2,b3);
					if(b1>b2) swap(b1,b2);
					if(b2>b3) swap(b2,b3);

					cres += ( (LL) (max(b1,0)*max(b2-1,0)*max(b3-2,0)) );
					//if(x==ref+1) cout<<a0<<" "<<b0<<" :: "<<a1<<" "<<a2<<" "<<a3<<" :: "<<b1<<" "<<b2<<" "<<b3<<" :: "<<( (LL) (max(b1,0)*max(b2-1,0)*max(b3-2,0)) )<<" "<<cres<<"\n";
				}
			}
		}
	}

	return (2ll*cres>tot);
}

int main()
{
	gi(T);

	rep(z,T)
	{
		gi(n); gi(h);

		tot = ( (LL(n-2)) * (LL(n-3)) * (LL(n-4)) * (LL(n-5)) * (LL(n-6)) * (LL(n-7)) ); 

		nhand=0; M.clear();
		for(int s=3; s<=2*n-1; ++s)
		{
			//cout<<i<<" "<<s-i<<" "<<n<<"\n";
			for(int i=(s-1)/2; (i>=1 and s-i<=n); --i)
			{
				hand[nhand]=pii(i,s-i);
				M[pii(i,s-i)]=nhand;
				++nhand;
			}
		}

		/*cout<<"@"<<n<<" "<<nhand<<"\n";
		rep(i,nhand)
		{
			cout<<hand[i].fs<<" "<<hand[i].sc<<"\n";
		}
		pnl();*/

		ref=-1;
		int l=0, r=nhand;
		while(r-l>1)
		{
			int mid=(l+r)/2;
			if(bsf(mid)) r=mid;
			else l=mid;
		}
		ref=l;
		//cout<<"** "<<hand[ref+1].fs<<" "<<hand[ref+1].sc<<" "<<bsf(ref+1)<<"\n";
		//cout<<cres<<" "<<tot<<"\n";

		printf("Case #%d: ",z+1);
		rep(i,h)
		{
			gi(c1); gi(c2);
			if(c1>c2) swap(c1,c2);

			if( M[pii(c1,c2)] > ref )
				printf("B");
			else printf("F");
		}
		pnl();
	}
	
	return 0;
}