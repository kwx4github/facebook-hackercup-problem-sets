#include <iostream>
#include <vector>
#include <set>
#include <string>
#include <algorithm>

using namespace std;
typedef long long ll;

ll ch6(ll n){
    return (n*(n-1)*(n-2)*(n-3)*(n-4)*(n-5))/720;
}

ll ch3(ll n){
    return (n*(n-1)*(n-2))/6;
}

ll ch2(ll n){
    return (n*(n-1))/2;
}

int cache[101][101][101];

bool solve(int N, int C1, int C2){
    if(cache[N][C1][C2]>=0){
        return cache[N][C1][C2];
    }
    ll E = 0;
    vector<vector<ll> > adjlist(N);
    vector<ll> degs(N, 0);
    
    vector<bool> row(N, false);
    vector<vector<bool> > adjmat(N, row);
    
    for(int i=1;i<=N;i++){
        if(i!=C1 && i!=C2){
            for(int j=1;j<i;j++){
                if(j!=C1 && j!= C2){
                    if((i+j)<(C1+C2)||((i+j)==(C1+C2) && i<C1)){
                        E++;
                        adjlist[i-1].push_back(j-1);
                        adjlist[j-1].push_back(i-1);
                        degs[i-1]++;
                        degs[j-1]++;
                        adjmat[i-1][j-1] = true;
                        adjmat[j-1][i-1] = true;
                    }
                }
            }
        }
    }
    
    ll num = 0;
    num += ch3(E);
    
    for(int i=0;i<N;i++){
        num -= (E-2)*ch2(degs[i]);
        num += 2*ch3(degs[i]);
    }
    
    for(int i=0;i<N;i++){
        for(int j=0;j<i;j++){
            if(adjmat[i][j]){
                num += (degs[i]-1)*(degs[j]-1);
                for(int k=0;k<j;k++){
                    if(adjmat[i][k] && adjmat[j][k]) num--;
                }
            }
        }
    }
    
    ll den = 15*ch6(N-2);
    if(4*num > den) cache[N][C1][C2] = 1;
    else cache[N][C1][C2] = 0;
    
    return cache[N][C1][C2];
}

int main(){
    for(int i=0;i<101;i++) for(int j=0;j<101;j++) for(int k=0;k<101;k++) cache[i][j][k]=-1;
    
    int T;
    cin >> T;
    for(int t=1;t<=T;t++){
        int N, H;
        cin >> N >> H;
        
        cout << "Case #" << t << ": ";
        for(int h=0;h<H;h++){
            // construct graph
            int C1, C2;
            cin >> C1 >> C2;
            
            if(C1 < C2){
                C1^=C2;
                C2^=C1;
                C1^=C2;
            }
            
            if(solve(N, C1, C2)) cout << "B";
            else cout << "F";
        }
        cout << endl;
        
        
    }
    
    return 0;
}