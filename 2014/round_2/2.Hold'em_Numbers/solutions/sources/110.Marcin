#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<queue>
#include<stack>
#include<cmath>
#include<map>
using namespace std;
typedef pair<int,int> PI;
typedef long long LL;
typedef double D;
#define FI first
#define SE second
#define MP make_pair
#define PB push_back
#define R(I,N) for(int I=0;I<N;I++)
#define F(I,A,B) for(int I=A;I<B;I++)
#define FD(I,N) for(int I=N-1;I>=0;I--)
#define make(A) scanf("%d",&A)
#define MAX 101
int n;
LL wyn[MAX][MAX];
LL il1,il2,il3,iltr,ilgw;
LL il3w[MAX],iltrw[MAX],k2[MAX];
vector<int> d[MAX];
void clr(){
	il1=0;il2=0;il3=0;iltr=0;ilgw=0;
	R(i,n){
		il3w[i]=0;
		iltrw[i]=0;
		k2[i]=0;
		d[i].clear();
	}
}
LL po2(LL a){
	return a*(a-1)/2;
}
LL po3(LL a){
	return a*(a-1)*(a-2) / 6;
}

void add(int a,int b){
	LL as = d[a].size(),bs = d[b].size();
	il1++;
	il2+=as + bs;
	k2[a] += bs;
	k2[b] += as;
	
	il3+=as * bs;
	il3w[a] += as * bs;
	il3w[b] += as * bs;
	
	R(i,as){
		LL pom = (int(d[d[a][i]].size())-1); 
		k2[d[a][i]]++;
		il3w[a] += pom;
		il3w[d[a][i]] +=pom;
		il3 += pom;
	}
	
	R(i,bs){
		LL pom = (int(d[d[b][i]].size())-1); 
		k2[d[b][i]]++;
		il3w[b] += pom;
		il3w[d[b][i]] +=pom;
		il3+=pom;
	}
	
	int i=0,j=0;
	while(i < as && j < bs){
		if(d[a][i] == d[b][j]){
			iltrw[a]++;
			iltrw[b]++;
			iltrw[d[a][i]]++;
			iltr++;
		}
		if(d[a][i] < d[b][j]) i++; else j++;
	}
	//printf("(%lld %lld %lld",ilgw,as,bs);
	ilgw += po2(as) + po2(bs);
	//printf(" %lld)\n",ilgw);
	d[a].PB(b);
	d[b].PB(a);
	
}
LL licz(int a,int b){
	int as = d[a].size(),bs = d[b].size();
	LL u1,u2,u3,utr,ugw;
	u1 = il1 - d[a].size() - d[b].size();
	u2 = il2 - po2(as) - po2(bs);
	u3 = il3 - il3w[a] - il3w[b];
	//printf("u3u3 %lld\n",u3);
	
	utr = iltr - iltrw[a] - iltrw[b];
	ugw = ilgw - po3(as) - po3(bs);
	R(i,as){
		int ak = d[a][i];
		u2 -= (d[ak] .size()-1);
		u3 -= k2[ak] - as +1;
		//u3 += (as-1)*(d[ak].size()-1);
		ugw -= po2(int(d[ak].size())-1);
		//printf("  u3u3 %lld\n",u3);
	}
	u3 += iltrw[a];
	//printf("u3u3 %lld\n",u3);

	R(i,bs){
		int ak = d[b][i];
		u2 -= (d[ak] .size()-1);
		u3 -= k2[ak] - bs +1;
		//u3 += (bs-1)*(d[ak] .size()-1);
		ugw -= po2(int(d[ak].size())-1);
	}
	u3 += iltrw[b];
	//printf("u3u3 %lld\n",u3);
	int i=0,j=0;
	LL sp2 = 0;
	while(i < as && j < bs){
		if(d[a][i] == d[b][j]){
			ugw += int(d[d[a][i]].size())-2;
			sp2++;
		}
		if(d[a][i] < d[b][j]) i++; else j++;
	}
	u2 += sp2;
	u3 += sp2 * (as-1 + bs-1);
	
	//printf("u3u3 %lld\n",u3);
	u3 += as * bs - sp2;
// 	if(a==6 && b==7){
// 		printf("bez %d %d\n",a,b);
// 		printf(" %lld %lld %lld %lld %lld\n",u1,u2,u3,utr,ugw);
// 	}
	return po3(u1) - u2  * (u1-2) + u3 - utr + 2*ugw;
}
vector<PI> kr;
bool qq(PI a,PI b){
	if(a.FI + a.SE != b.FI + b.SE)
		return a.FI + a.SE < b.FI + b.SE;
	return a.FI > b.FI;
}
void test(){
	make(n);
	clr();
	kr.clear();
	R(i,n)F(j,i+1,n)
		kr.PB(MP(i,j));
	sort(kr.begin(),kr.end(),qq);
	R(_,kr.size()){
		int i = kr[_].FI;
		int j = kr[_].SE;
		//printf("<<< %d %d >>> \n",i,j);
		wyn[i][j] = licz(i,j);
		//printf("wynik : %lld\n",wyn[i][j]);
		add(i,j);
		//printf("added\n%lld %lld %lld %lld %lld\n",il1,il2,il3,iltr,ilgw);
		//R(i,n)printf("%lld ",k2[i]);
		//printf("\n\n");
	}
	LL all = 1;
	R(i,6)all *= n-i-2;
	all /= 8;
	all /= 6;
	int H;make(H);
	//printf("%lld\n",all);
	R(i,H){
		int a,b;
		make(a);make(b);a--;b--;
		if(a>b)swap(a,b);
		//printf("(%lld)",wyn[a][b]);
		printf("%c",wyn[a][b]*4>all?'B':'F');
	}
	printf("\n");
}
main(){
	int _;make(_);
	R(i,_){
		printf("Case #%d: ",i+1);
		test();
	}
}
