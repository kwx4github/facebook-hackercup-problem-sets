#include <iostream>
#include <ctime>
#include <fstream>
#include <cmath>
#include <cstring>
#include <cassert>
#include <cstdio>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <complex>
#include <utility>
#include <cctype>
#include <list>
#include <deque>

using namespace std;

#define FORALL(i,a,b) for(int i=(a);i<=(b);++i)
#define FOR(i,n) for(int i=0;i<(n);++i)
#define FORB(i,a,b) for(int i=(a);i>=(b);--i)

typedef long long ll;
typedef long double ld;
typedef complex<ld> vec;

typedef pair<int,int> pii;
typedef map<int,int> mii;

#define pb push_back
#define mp make_pair

#define TIMES 10000
#define MAXN 105
#define MAXH 10000
double pr[MAXN][MAXN];

//#define swap(p_,q_) p_^=(q_);q_^=(p_);p_^=(q_)
#define drop(x) swap(A[x],A[N]);  --N;
#define go(x) ++N; swap(A[x],A[N]);

int A[MAXN];

int t,p;
int tmp[MAXN];
void select_hand(int* a, int i, int j, int N) {
	drop(i);drop(j);
	
	for(p=0;p<6;++p) {
		tmp[p] = rand()%N + 1;
		a[p] = A[tmp[p]];
		drop(tmp[p]);
	}
	
	for(p=5;p>=0;--p) {
		go(tmp[p]);
	}
	go(j);go(i);
}

#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))

int my_sum, my_max, sum;
inline bool win(int* a, int N, int i , int j) {
	my_sum = i+j;
	my_max = max(i,j);
	sum =0;
	FOR(x,3) {
		sum = a[2*x] + a[2*x+1];
		if (sum > my_sum || ((sum==my_sum) && (max(a[2*x],a[2*x+1]) > my_max))) {
			return false;
		}
	}
	return true;
}

int main() {
	int TEST, w,a[6];
	cin >> TEST;
	FOR(test,TEST) {
		int N,H;
		scanf("%d%d",&N,&H);
		FORALL(i,1,N) A[i] = i;
		FORALL(i,1,N) {
			FORALL(j,1,i-1) {
				w=0;
				FOR(t,TIMES) {
					select_hand(a,i,j,N);
					if (win(a,N,i,j)) ++w;
					//FORALL(x,1,N) assert(A[x] == x);
					/*
					a = b = c = d = e = f = i;
					while(a==i || a==j) a = rand()%N + 1;
					while(b==i || b==j || b==a) b = rand()%N + 1;
					while(c==i || c==j || c==a || c==b) c = rand()%N + 1;
					while(d==i || d==j || d==a || d==b || d==c) d = rand()%N + 1;
					while(e==i || e==j || e==a || e==b || e==c || e==d) e = rand()%N + 1;
					while(e==i || e==j || e==a || e==b || e==c || e==d) e = rand()%N + 1;
					while(c==i || c==j || c==a) c = rand()%N + 1;
					while(c==i || c==j || c==a) c = rand()%N + 1;
					while(a==i || a==j) a = rand()%N + 1;
					while(a==i || a==j) a = rand()%N + 1;
					while(a==i || a==j) a = rand()%N + 1;
					while(a==i || a==j) a = rand()%N + 1;*/
					//FOR(x,6) cout << a[x] << " ";
					//cout << endl;
				}
				
				pr[i][j] = 1.0*w/TIMES;
				//printf("%d %d %d %d\n", i, j, w, TIMES);
				//cout << i << " " << j << " " << w << " " << TIMES << endl;
			}
		}
		
		cout << "Case #" << (test+1) << ": ";
		
		#define EPS 0.01
		ld ex;
		int i,j;
		FOR(h,H) {
			scanf("%d%d",&i,&j);
			if (i<j) swap(i,j);
			ex = pr[i][j]*3 - (1-pr[i][j])*1;
			if (ex > EPS) printf("B");
			else printf("F");
		}
		printf("\n");
	}
}






















