#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

int n;
int m;
int was[110][110][110][3];
ll res[110][110][110][3];
int g[110][110];
int ct;

ll calc (int i, int a, int b, int c, int x, int y) {
	if (b == -1) {
		int A = x + y - a;
		if (a > y) A--;
		A = max (0, min (A, i));
		re A - int (A >= x) - int (A >= y);
	} else
	if (c == -1) {
		int A = x + y - a, B = x + y - b;
		if (a > y) A--;
		if (b > y) B--;
		A = max (0, min (A, i));
		B = max (0, min (B, i));
		re (ll)(A - int (A >= x) - int (A >= y)) * (B - int (B >= x) - int (B >= y) - 1);
	}
	int A = x + y - a, B = x + y - b, C = x + y - c;
	if (a > y) A--;
	if (b > y) B--;
	if (C > y) C--;
	A = max (0, min (A, i));
	B = max (0, min (B, i));
	C = max (0, min (C, i));
//	printf ("%d %d %d\n", A, B, C);
	re (ll)(A - int (A >= x) - int (A >= y)) * (B - int (B >= x) - int (B >= y) - 1) * (C - int (C >= x) - int (C >= y) - 2);
}

ll get (int i, int a, int b, int c, int k, int x, int y) {
	if (a < b) swap (a, b);
	if (b < c) swap (b, c);
	if (a < b) swap (a, b);
	if (i == x || i == y) re get (i - 1, a, b, c, k, x, y);
	if (k == 3) {
//		printf ("%d %d %d %d %d %d %d = %I64d\n", i, a, b, c, k, x, y, calc (i, a, b, c, x, y));
		re calc (i, a, b, c, x, y);
	}	
	if (i == 0) re 0;
	if (was[i][a + 1][b + 1][k] == ct) re res[i][a + 1][b + 1][k];
	was[i][a + 1][b + 1][k] = ct;
	ll cur = get (i - 1, a, b, c, k, x, y);
	if (a > 0) {
		if (mp (a + i, a) < mp (y + x, y)) cur += get (i - 1, -1, b, c, k, x, y);
		if (b > 0) {
			if (mp (b + i, b) < mp (y + x, y)) cur += get (i - 1, a, -1, c, k, x, y);
			if (c == 0) cur += get (i - 1, a, b, i, k + 1, x, y);
		} else
		if (b == 0) cur += get (i - 1, a, i, c, k + 1, x, y);
	} else
	if (a == 0) cur += get (i - 1, i, b, c, k + 1, x, y);
//	printf ("%d %d %d %d %d %d %d = %I64d\n", i, a, b, c, k, x, y, cur);
	re res[i][a + 1][b + 1][k] = cur;
}

int cool (int a, int b) {
	ct++;
	ll all = 1;
	for (int i = 2; i < 8; i++) all *= n - i;
	all /= 8;
	ll won = get (n, 0, 0, 0, 0, a, b) * 6;
//	printf ("%d %d = %I64d %I64d\n", a, b, won, all);
	re int (4 * won > all);
}

int main () {
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
		scanf ("%d%d", &n, &m);
		memset (g, 0, sizeof (g));
		int a = 1, b = n;
		while (true) {
			while (a < b && !cool (a, b)) a++;
			if (a < b) {
				for (int i = a; i < b; i++)
					g[i][b] = g[b][i] = 1;
				b--;
			} else break;
		}
		string res = "";
		for (int i = 0; i < m; i++) {
			int a, b;
			scanf ("%d%d", &a, &b);
			res += g[a][b] ? "B" : "F";
		}
		cout << "Case #" << it << ": " << res;
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
	}
	return 0;
}