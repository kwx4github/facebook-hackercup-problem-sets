#include <ctype.h>
#include <limits.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <algorithm>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define SZ(a) (int)(a).size()
#define FOR(i,a,b) for (int i=(a); i<=(b); ++i)
#define REP(i,n) for (int i=0; i<(n); ++i)
#define ALL(c) c.begin(), c.end()
typedef vector<int> VI;
typedef pair<int, int> PII;
#define CLR(c,n) memset(c,n,sizeof(c))
template <class T> void checkmin(T &a, T b) { if (b<a) a=b; }
template <class T> void checkmax(T &a, T b) { if (b>a) a=b; }
#define TR(it, container) for(typeof(container.begin()) it = container.begin();\
it != container.end(); it++)
#define CONTAIN(it, container) (container.find(it)!=container.end())

int cnt[256], n;
long N;
void init(void) {
  memset(cnt, 0, sizeof(cnt));
  FOR(i, 1, n) FOR(j, 1, n) ++cnt[i+j];
  FOR(i, 1, n*2) cnt[i] += cnt[i-1];
  N = 1;
  FOR(i, n-7, n-2) N *= i;
  N /= 48;
}

void dec(int *n, int b[], int bsize) {
  int cnt = 0;
  REP(i, bsize) if (b[i] <= *n) ++cnt;
  *n -= cnt;
}

long check(int u1, int u2, int u3) {
  if (u1 < u2) swap(u1, u2);
  if (u1 < u3) swap(u1, u3);
  if (u2 < u3) swap(u2, u3);
  if (u1 < 3 || u2 < 2 || u3 < 1) return 0;
  return u3 * (u2 - 1) * (u1 -2);
}
bool check(int c1, int c2) {
  int used[5];
  long valid = 0;
  used[0] = c1; used[1] = c2;
  FOR(i1, 1, min(n, c1 + c2 - 1)) {
    if (i1 == c1 || i1 == c2) continue;
    FOR(i2, 1, i1 - 1) {
      if (i2 == c1 || i2 == c2) continue;
      FOR(i3, 1, i2 - 1) {
	if (i3 == c1 || i3 == c2) continue;
	int max1 = min(c1 + c2 - i1 - (i1 > c1), i1 - 1);
	int max2 = min(c1 + c2 - i2 - (i2 > c1), i2 - 1);
	int max3 = min(c1 + c2 - i3 - (i2 > c1), i3 - 1);
	if (max3 <=  0) continue;
	//printf("%d %d : %d %d, %d %d, %d %d\n", c1, c2, i1, max1, i2, max2, i3, max3);
	used[2] = i1; used[3] = i2; used[4] = i3;
	dec(&max1, used, 5);
	dec(&max2, used, 5);
	dec(&max3, used, 5);
	
	valid += check(max1, max2, max3);
	//printf(" -> %d %d, %d %d, %d %d, %ld\n", i1, max1, i2, max2, i3, max3, valid);
      }
    }
  }
  return valid * 4 > N;
}

int main(int argc, char *argv[]) {
  int tc, h, c1, c2;
  char ans[16384];
  cin >> tc;
  FOR(ic, 1, tc) {
    cin >> n >> h;
    init();
    ans[h] = '\0';
    REP(i, h) {
      cin >> c1 >> c2;
      if (c1 < c2) swap(c1, c2);
      ans[i] = check(c1, c2) ? 'B' : 'F';
    }
    printf("Case #%d: %s\n", ic, ans);
  }
}
