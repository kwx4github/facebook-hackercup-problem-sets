#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(i,a,b) for(int i=int(a);i<=int(b);++i)
#define REP(i,n) FOR(i,0,(n)-1)
#define debug(x) cout<<(#x)<<":"<<(x)<<endl
#define PB push_back
typedef long long int64;

struct hand {
	int h, l;
	hand() {}
	hand(int hh, int ll): h(hh), l(ll) {}
};

bool better(const hand& a, const hand& b) {
	if (a.h+a.l != b.h+b.l) return (a.h+a.l > b.h+b.l);
	return a.h > b.h;
}

int canWin[93] = {9,12,14,18,22,26,31,36,42,47,53,60,67,74,82,90,98,107,116,126,136,146,157,167,178,190,202,215,228,241,254,268,283,297,313,328,344,359,376,393,410,428,446,465,484,502,522,542,562,583,604,625,646,669,691,714,737,761,785,809,833,859,884,910,936,963,989,1016,1044,1072,1101,1130,1159,1188,1218,1248,1279,1310,1341,1373,1404,1437,1470,1503,1537,1571,1605,1640,1674,1710,1746,1782,1819};

vector<hand> all;
int n;

int main() {
	int cT;
	scanf("%d", &cT);
	FOR(cN, 1, cT) {
		int rnd;
		scanf("%d%d", &n, &rnd);
		all.clear();
		FOR(i, 1, n)
		FOR(j, i+1, n) all.PB(hand(j, i));
		sort(all.begin(), all.end(), better);
		int need = canWin[n-8];
		cout << "Case #" << cN << ": ";
		while (rnd--) {
			hand my;
			scanf("%d%d", &my.h, &my.l);
			if (my.h < my.l) swap(my.h, my.l);
			if (!better(all[need], my)) printf("B"); else printf("F");
		}
		puts("");
	}
}
