#pragma comment (linker, "/STACK:268435456")
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <queue>
#include <cmath>
#include <cctype>
#include <sstream>
#include <ctime>

using namespace std;

int z1, z2;
int n;
int d[10010][2];
int used[110];
int a[6];
int r[4];

int find(int up)
{
	int result = up;
	for (int i = 0; i < 5; i++)
		if (a[i] <= up)
			result--;
	return result;
}

int getmx(int t)
{
	int result = max(0, z1 + z2 - t - 1);
	if (result + t == z1 + z2 - 1 && z1 > t && z1 > result + 1)
		result++;
	return min(result, n);
}

int win(int pp)
{
	memset(used, 0, sizeof used);
	z1 = d[pp][0];
	z2 = d[pp][1];
	/*z1 = 7;
	z2 = 4;*/
	used[z1] = used[z2] = 1;
	long long ww = 0, ll = 0;
	long long f = 1LL * (n - 5) * (n - 6) * (n - 7);
	for (int i = 1; i <= n; i++) if (!used[i])
	{
		used[i] = 1;
		for (int j = 1; j <= n; j++) if (!used[j])
		{
			used[j] = 1;
			for (int k = 1; k <= n; k++) if (!used[k])
			{
				used[k] = 1;
				a[0] = z1;
				a[1] = z2;
				a[2] = i;
				a[3] = j;
				a[4] = k;
				sort(a, a + 5);

				r[0] = find(getmx(i));
				r[1] = find(getmx(j));
				r[2] = find(getmx(k));
				/*for (int i = 0; i < 5; i++)
					cout << a[i] << " ";
				cout << endl;
				cout << i << " " << j << " " << k << ": " << r[0] << " " << r[1] << " " << r[2] << endl;*/
				sort(r, r + 3);

				int nw = r[0] * max(0, r[1] - 1) * max(0, r[2] - 2);
				ww += nw;
				ll += f - nw;

				used[k] = 0;
			}
			used[j] = 0;
		}
		used[i] = 0;
	}
	//cout << z1 << " " << z2 << ":: " << ww << " " << ll << endl;
	return ww * 3 >= ll;
}

void solve()
{
	/*win(0);
	return;*/
	int cnt = 0;
	for (int sum = 3; sum <= n * 2 - 1; sum++)
		for (int mx = 2; mx <= sum - 1; mx++)
			if (mx > sum - mx && mx <= n)
			{
				d[cnt][0] = mx;
				d[cnt++][1] = sum - mx;
			}
	int l = 0, r = cnt;
	while (l < r)
	{
		int c = (l + r) / 2;
		if (win(c))
			r = c;
		else
			l = c + 1;
	}
	if (l == cnt)
		cout << endl << "FAIL" << endl;
	z1 = d[l][0];
	z2 = d[l][1];
}

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int tn;
    cin >> tn;
    for (int tc = 0; tc < tn; tc++)
    {
    	int h;
    	cin >> n >> h;
    	solve();
    	cout << "Case #" << tc + 1 << ": ";
    	for (int i = 0; i < h; i++)
    	{
    		int a1, a2;
    		cin >> a1 >> a2;
    		if (a1 < a2)
    			swap(a1, a2);
    		int ok = (a1 + a2 == z1 + z2) ? (a1 >= z1) : (a1 + a2 > z1 + z2);
    		cout << (ok ? "B" : "F");
    	}
    	cout << endl;
    }    
    return 0;
}