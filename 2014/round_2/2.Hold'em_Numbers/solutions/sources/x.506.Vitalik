import java.io.*;
import java.util.*;
import java.math.*;

public class B {
	public static void main(String[] args) {
		new B().run();
	}

	BufferedReader br;
	StringTokenizer in;
	PrintWriter out;

	public String nextToken() throws IOException {
		while (in == null || !in.hasMoreTokens())
			in = new StringTokenizer(br.readLine());
		return in.nextToken();
	}

	public int nextInt() throws IOException {
		return Integer.parseInt(nextToken());
	}

	public long nextLong() throws IOException {
		return Long.parseLong(nextToken());
	}

	public double nextDouble() throws IOException {
		return Double.parseDouble(nextToken());
	}

	public int sum(int l, int r) {
		return r * (r + 1) / 2 - l * (l - 1) / 2;
	}

	public void solve2(int n, int c1, int c2) {
		if (c1 < c2) {
			int p = c1;
			c1 = c2;
			c2 = p;
		}

		long total = 15L * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)
				* (n - 7) / (1 * 2 * 3 * 4 * 5 * 6);

		int s = c1 + c2;
		int lb = (s + 1) / 2;
		int ub = Math.min(s - 1, n);
		int s1 = s - 1;
		int s2 = s - 2;
		int s3 = s - 3;
		long cnt = 0;
		for (int l2 = lb + 1; l2 < ub; l2++) {
			if (l2 == c1)
				continue;

			int x = l2 - lb;
			int y = (ub - lb + 1) - x - 1;

			int sx = sum(lb, l2 - 1);
			int sy = sum(l2 + 1, ub);

			if (l2 > c1) {
				x--;
				sx -= c1;
			} else {
				y--;
				sy -= c1;
			}

			cnt += 1L * y * s1 * (s2 - l2) * x * s3;
			cnt -= 1L * y * s1 * (s2 - l2) * sx;
			cnt -= 1L * sy * (s2 - l2) * x * s3;
			cnt += 1L * sy * (s2 - l2) * sx;
		}

		for (int l2 = lb; l2 < ub; l2++) {
			if (l2 == c1)
				continue;
			int x = lb - 4;
			int y = ub - l2;

			int sy = sum(l2 + 1, ub);

			if (l2 < c1) {
				y--;
				sy -= c1;
			}

			if (x < 0)
				x = 0;

			cnt += 1L * x * (x - 1) / 2 * (s2 - l2) * y * s1;
			cnt -= 1L * x * (x - 1) / 2 * (s2 - l2) * sy;
		}

		for (int l1 = lb; l1 <= ub; l1++) {
			if (l1 == c1)
				continue;
			int x = lb - 3;
			if (x < 0)
				x = 0;
			cnt += 3L * x * (x - 1) * (x - 2) * (x - 3) / (1 * 2 * 3 * 4)
					* (s1 - l1);
		}

		int x = lb - 2;
		cnt += 15L * x * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (x - 5)
				/ (1 * 2 * 3 * 4 * 5 * 6);

		if (4 * cnt > total) {
			out.print("B");
		} else {
			out.print("F");
		}
	}

	public void solve() throws IOException {
		int n = nextInt();
		int h = nextInt();

		for (int i = 0; i < h; i++) {
			solve2(n, nextInt(), nextInt());
		}

		out.println();
	}

	public void run() {
		try {
			br = new BufferedReader(new FileReader("input.txt"));
			out = new PrintWriter("output.txt");

			int t = nextInt();
			for (int i = 0; i < t; i++) {
				System.err.println("Test case " + (i + 1));
				out.print("Case #" + (i + 1) + ": ");
				solve();
			}

			out.close();
		} catch (IOException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}
}
