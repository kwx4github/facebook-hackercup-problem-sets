#include <cmath>
#include <ctime>
#include <iostream>
#include <string>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <cctype>
#include <stack>
#include <complex>
using namespace std;

typedef long long int int64;

#define EPS 10e-9
#define INF 0x3f3f3f3f
#define REP(i,n) for(int i=0; i<(n); i++)

int n, h;
vector<int> v;

bool calcula(int a, int b) {
	int num = n-2;
	REP(i, 3) {
		int ind = rand() % num;
		int x = v[ind];
		num--;
		swap(v[ind], v[num]);
		ind = rand() % num;
		int y = v[ind];
		num--;
		swap(v[ind], v[num]);
		if (x + y > a + b) return false;
		if (x + y == a + b && max(x, y) > max(a, b)) return false;
	}
	return true;	
}

int main()
{	
	int t;
	scanf("%d", &t);
	REP(k, t) {
		scanf("%d", &n);
		scanf("%d", &h);
		printf("Case #%d: ", k+1);
		v.clear();
		REP(i, n) v.push_back(i);
		srand(time(NULL));
		REP(i, h) {
			int a, b;
			scanf("%d %d", &a, &b);
			a--; b--;
			REP(j, n) {
				if (v[j] == a) {
					swap(v[j], v[n-2]);
					break;
				}
			}
			REP(j, n) {
				if (v[j] == b) {
					swap(v[j], v[n-1]);
					break;
				}
			}
			int res = 0;

			REP(j, 10000) {
				if (calcula(min(a,b), max(a, b))) res++;
			}
			//printf("%d\n", res);
			if (res > 0.25*10000) printf("B");
			else printf("F");
		}
		printf("\n");
	}
	return 0;
}