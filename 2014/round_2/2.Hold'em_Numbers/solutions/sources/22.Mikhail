#include <iostream>
#include <vector>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <fstream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <algorithm>
#include <numeric>

#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)

using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef long long i64;
typedef vector<i64> vi64;
typedef vector<vi64> vvi64;

int win[101];

void write_precalc(int N) {
    cerr << "Precalc for N = " << N << '\n';
    for (int a = 1; a <= N; ++a) {
        for (int b = a + 1; b <= N; ++b) {
            for (int i = 1; i <= N; ++i) {
                win[i] = 0;
            }

            i64 ans = 0;

            for (int c = 1; c <= N; ++c) {
                for (int d = 1; d < c; ++d) {
                    if (c + d < a + b || (c + d == a + b && c < b)) {
                        ++win[c];
                    }
                }
            }

            for (int c = 1; c <= N; ++c) {
                if (c == a || c == b) {
                    continue;
                }
                int lc = win[c];
                if (a <= win[c]) {
                    --lc;
                }
                if (b <= win[c]) {
                    --lc;
                }
                for (int d = c + 1; d <= N; ++d) {
                    if (d == a || d == b) {
                        continue;
                    }
                    int ld = win[d];
                    if (a <= win[d]) {
                        --ld;
                    }
                    if (b <= win[d]) {
                        --ld;
                    }
                    if (c <= win[d]) {
                        --ld;
                    }
                    for (int e = d + 1; e <= N; ++e) {
                        if (e == a || e == b) {
                            continue;
                        }
                        int le = win[e];
                        if (a <= win[e]) {
                            --le;
                        }
                        if (b <= win[e]) {
                            --le;
                        }
                        if (c <= win[e]) {
                            --le;
                        }
                        if (d <= win[e]) {
                            --le;
                        }
                        int l1 = lc, l2 = ld, l3 = le;
                        if (l1 > l2) {
                            swap(l1, l2);
                        }
                        if (l2 > l3) {
                            swap(l2, l3);
                        }
                        if (l1 > l2) {
                            swap(l1, l2);
                        }
                        if (l2 > 0 && l3 > 1) ans += 1LL * l1 * (l2 - 1) * (l3 - 2);
                    }
                }
            }
//            cerr << a << ' ' << b << ": " << ans << " lucky chances\n";
            if (4 * ans > 1LL * (N - 2) * (N - 3) * (N - 4) * (N - 5) * (N - 6) * (N - 7) / 48) {
                printf("B");
            } else {
                printf("F");
            }
        }
        printf("\n");
    }
    cerr << "Done\n";
}

char precalc[101][101][101];

void readPrecalc(int N) {
    for (int a = 1; a < N; ++a) {
        scanf("%s", precalc[N][a]);
    }
}

char getPrecalc(int N, int a, int b) {
    return precalc[N][a][b - a - 1];
}

int main() {
    for (int i = 8; i <= 100; ++i) {
        readPrecalc(i); // from stdin
    }

/*    for (int i = 8; i <= 100; ++i) {
        write_precalc(i);
    }
    return 0;

    */


#ifdef LOCAL_DEFINE
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif

    int T;
    cin >> T;
    forn(t, T) {
        int N, H;
        cin >> N >> H;
        cout << "Case #" << t + 1 << ": ";
        forn(i, H) {
            int a, b;
            cin >> a >> b;
            if (a > b) {
                swap(a, b);
            }
            cout << getPrecalc(N, a, b);
        }
        cout << '\n';
    }

#ifdef LOCAL_DEFINE
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
#endif
    return 0;
}
