//
// Facebook hacker cup 2014 - round 2 - the one for the T shirt
// John Smith's attempt
// problem 2:
//
#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
//#include <gmpxx.h>

using namespace std;
typedef pair<unsigned int,unsigned int> pii;

//typedef mpz_class bigint;
//typedef uint64_t bigint;

//bigint mod = 1000000007;
int table[101][101];

unsigned int compute( unsigned int c1, unsigned int c2, unsigned int n )
{
     unsigned int d1, d2, d3, d4, d5, d6;
     //unsigned int i;
     //for (c1=0; c1<n; c1++)
     {
	  //for (i=0; i<c1; i++) cerr << " ";
	  //for (c2=c1+1; c2<n; c2++)
	  {
	       unsigned int wins=0;
	       unsigned int loses=0;
	       unsigned int s1 = c1+c2;
	       for (d1=0; d1<n; d1++)
	       {
		    if (d1 == c1) continue;
		    if (d1 == c2) continue;
		    for (d2=d1+1; d2<n; d2++)
		    {
			 if (d2 == c1) continue;
			 if (d2 == c2) continue;
			 if (d2 == d1) continue;
			 unsigned int s2 = d1+d2;
			 for (d3=0; d3<n; d3++)
			 {
			      if (d3 == c1) continue;
			      if (d3 == c2) continue;
			      if (d3 == d1) continue;
			      if (d3 == d2) continue;
			      for (d4=d3+1; d4<n; d4++)
			      {
				   if (d4 == c1) continue;
				   if (d4 == c2) continue;
				   if (d4 == d1) continue;
				   if (d4 == d2) continue;
				   if (d4 == d3) continue;
				   unsigned int s3 = d3+d4;
				   for (d5=0; d5<n; d5++)
				   {
					if (d5 == c1) continue;
					if (d5 == c2) continue;
					if (d5 == d1) continue;
					if (d5 == d2) continue;
					if (d5 == d3) continue;
					if (d5 == d4) continue;

					for (d6=d5+1; d6<n; d6++)
					{
					     if (d6 == c1) continue;
					     if (d6 == c2) continue;
					     if (d6 == d1) continue;
					     if (d6 == d2) continue;
					     if (d6 == d3) continue;
					     if (d6 == d4) continue;
					     if (d6 == d5) continue;
					     
					     unsigned int s4 = d5+d6;
					     
					     if (s1 < s2 ||
						 s1 < s3 ||
						 s1 < s4)
					     {
						  loses++;
					     }
					     else if (s1 == s2 &&
						      ((c2 < d1) || (c2 < d2)))
					     {
						  loses++;
					     }
					     else if (s1 == s3 &&
						      ((c2 < d3) || (c2 < d4)))
					     {
						  loses++;
					     }
					     else if (s1 == s4 &&
						      ((c2 < d5) || (c2 < d6)))
					     {
						  loses++;
					     }
					     else
					     {
						  wins++;
					     }
					}
				   }
			      }
			 }
		    }
	       }
	       
	       if (3*wins > loses) return 1; else return 0;
	  }

     }
	       }

void prepare1( unsigned int n )
{
     unsigned int c1, c2;
     unsigned int d1, d2;
     for (c1=0; c1<n; c1++)
     {
	  for (c2=c1+1; c2<n; c2++)
	  {
	       unsigned int wins = 0;
	       unsigned int loses = 0;
	       for (d1=0; d1<n; d1++)
	       {
		    if (d1 == c1) continue;
		    if (d1 == c2) continue;
		    for (d2=d1+1; d2<n; d2++)
		    {
			 if (d2 == c1) continue;
			 if (d2 == c2) continue;

			 unsigned int s1=c1+c2;
			 unsigned int s2=d1+d2;
			 if (s1 < s2)
			 {
			      loses++;
			 }
			 else if (s1 == s2 && c2 < d2)
			 {
			      loses++;
			 }
			 else
			 {
			      wins++;
			 }
		    }
	       }

	       double p = wins/(float) (wins+loses);
	       if (p*p*p >= 0.25)
	       {
		    table[c1][c2] = 1;
	       }
	       else
	       {
		    table[c1][c2] = 0;
	       }
	       cerr << table[c1][c2] ;
	  }
	  cerr << endl;
     }
}

void prepare( unsigned int n )
{
     unsigned int c1, c2;
     unsigned int d1, d2, d3, d4, d5, d6;
     //unsigned int i;
     for (c1=0; c1<n; c1++)
     {
	  //for (i=0; i<c1; i++) cerr << " ";
	  for (c2=c1+1; c2<n; c2++)
	  {
	       unsigned int wins=0;
	       unsigned int loses=0;
	       unsigned int s1 = c1+c2;
	       for (d1=0; d1<n; d1++)
	       {
		    if (d1 == c1) continue;
		    if (d1 == c2) continue;
		    for (d2=d1+1; d2<n; d2++)
		    {
			 if (d2 == c1) continue;
			 if (d2 == c2) continue;
			 if (d2 == d1) continue;
			 unsigned int s2 = d1+d2;
			 for (d3=0; d3<n; d3++)
			 {
			      if (d3 == c1) continue;
			      if (d3 == c2) continue;
			      if (d3 == d1) continue;
			      if (d3 == d2) continue;
			      for (d4=d3+1; d4<n; d4++)
			      {
				   if (d4 == c1) continue;
				   if (d4 == c2) continue;
				   if (d4 == d1) continue;
				   if (d4 == d2) continue;
				   if (d4 == d3) continue;
				   unsigned int s3 = d3+d4;
				   for (d5=0; d5<n; d5++)
				   {
					if (d5 == c1) continue;
					if (d5 == c2) continue;
					if (d5 == d1) continue;
					if (d5 == d2) continue;
					if (d5 == d3) continue;
					if (d5 == d4) continue;

					for (d6=d5+1; d6<n; d6++)
					{
					     if (d6 == c1) continue;
					     if (d6 == c2) continue;
					     if (d6 == d1) continue;
					     if (d6 == d2) continue;
					     if (d6 == d3) continue;
					     if (d6 == d4) continue;
					     if (d6 == d5) continue;
					     
					     unsigned int s4 = d5+d6;
					     
					     if (s1 < s2 ||
						 s1 < s3 ||
						 s1 < s4)
					     {
						  loses++;
					     }
					     else if (s1 == s2 &&
						      ((c2 < d1) || (c2 < d2)))
					     {
						  loses++;
					     }
					     else if (s1 == s3 &&
						      ((c2 < d3) || (c2 < d4)))
					     {
						  loses++;
					     }
					     else if (s1 == s4 &&
						      ((c2 < d5) || (c2 < d6)))
					     {
						  loses++;
					     }
					     else
					     {
						  wins++;
					     }
					}
				   }
			      }
			 }
		    }
	       }
	       
	       if (3*wins > loses) 
	       {
		    while (c2 < n)
		    {
			 cerr << "1" ;
			 table[c1][c2] = 1; 
			 c2++;
		    }
	       }
	       else 
	       {
		    table[c1][c2] = 0;
		    cerr << "0";
	       }
	       //cout << setw(5) << wins << " " << setw(5) << loses << "  " << wins+loses << endl;

	  }
	  cerr << endl;
     }
	       }

int main( int argc, char ** argv )
{
     int t;


     cin >> t;

     for (auto i=1; i<=t; i++)
     {
	  unsigned int n;
	  unsigned int h;
	  cin >> n ;
	  cin >> h ;

	  if (n > 22)
	  {
	       prepare1(n);
	  }
	  else
	  {
	       prepare(n);
	  }

	  string s;
	  for (auto j=0u; j<h; j++)
	  {
	       unsigned int c1,c2;

	       cin >> c1;
	       cin >> c2;
	       if (c1 > c2) swap(c1,c2);

	       if (table[c1-1][c2-1]) s += "B" ; else s += "F";
	  }

	  cout << "Case #" << i << ": ";
	  cout << s << endl;
     }

     return 0;
}

