#include <bits/stdc++.h>/*{{{*/
using namespace std;typedef long long ll;typedef long double ld;void run();int main(){ios::sync_with_stdio(0);run();}/*}}}*/

int card[100];
ld max_ab=0;
ld min_ab=1e12L;

bool simulate(int a,int b,int n){
  return (a+b)*9ll>n*10ll;

  int win=0,lose=0;

  for (int i=0; i<n; i++) if (card[i]==a) swap(card[i],card[0]);
  for (int i=0; i<n; i++) if (card[i]==b) swap(card[i],card[1]);

  for (int sample=1000000; sample--;){
    for (int i=2; i<8; i++){
      swap(card[i],card[i+(rand()%(n-i))]);
    }

    bool won=true;
    for (int i=2; i<8; i+=2)
      if (card[i]+card[i+1]> card[0]+card[1] or
          card[i]+card[i+1]==card[0]+card[1] and max(card[i],card[i+1]) > max(card[0],card[1]))
        won=false;

    (won? win: lose)++;
  }

  if (win*3>lose) max_ab=max(max_ab,(a+b)/ld(n));
  if (win*3>lose) min_ab=min(min_ab,(a+b)/ld(n));
  return win*3>lose;
}

bool win[101][101][101];
bool did[101];

void run(){
  srand(539539);

  int tsts; cin>>tsts; for (int tst=1; tst<=tsts; ++tst){
    int n,h; cin>>n>>h;

    if (not did[n]){
      did[n]=true;
      for (int i=0; i<n; i++) card[i]=i;

      for (int i=0,j=n; i<n; i++){
        cerr<<"i = "<<i<<endl;
        while (j>i+1 and simulate(i,j-1,n)) --j;

        for (int k=j; k<n; k++){
          win[n][i][k]=win[n][k][i]=true;
        }
      }
    }

    int last_b=-1;
    cout<<"Case #"<<tst<<": ";
    while (h--){
      int a,b; cin>>a>>b; --a,--b;
//      if (last_b>=b) cout<<endl<<a<<": "; last_b=b;
      cout<<(win[n][a][b]? 'B': 'F');
    }
    cout<<endl;
  }
//  cerr.precision(20);
//  cerr<<fixed<<min_ab<<" ... "<<max_ab<<endl;
}
