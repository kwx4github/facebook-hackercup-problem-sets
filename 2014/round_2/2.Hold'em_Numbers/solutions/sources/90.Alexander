#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <map>
using namespace std;
#define N 110
struct T
{
	int a, b;
	T(int a=0, int b=0): a(a), b(b) {}
};
bool operator <(T x, T y) { return x.a+x.b<y.a+y.b || (x.a+x.b==y.a+y.b && x.a<y.a); }
T w[N*N];
int brute(int n, int i, int j)
{
	int all=0, cur=0;
	for(int k=1; k<=n; k++)
		if(k!=i && k!=j)
			for(int l=1; l<k; l++)
				if(l!=i && l!=j)
					for(int t=1; t<=n; t++)
						if(t!=i && t!=j && t!=k && t!=l)
							for(int f=1; f<t; f++)
								if(f!=i && f!=j && f!=k && f!=l)
									for(int c=1; c<=n; c++)
										if(c!=i && c!=j && c!=k && c!=l && c!=t && c!=f)
											for(int d=1; d<c; d++)
												if(d!=i && d!=j && d!=k && d!=l && d!=t && d!=f)
												{
													all++;
													if(T(i, j)<T(k, l)) continue;
													if(T(i, j)<T(t, f)) continue;
													if(T(i, j)<T(c, d)) continue;
													cur++;
												}
	return cur*4>all;
}
int main()
{
	int ts;
	scanf("%d", &ts);
	for(int t=1; t<=ts; t++)
	{
		int n, q, k;
		scanf("%d%d", &n, &q);
		k=0;
		for(int i=1; i<=n; i++)
			for(int j=i+1; j<=n; w[k++]=T(j, i), j++);
		sort(w, w+k);
		int l, r, c;
		long long all=1;
		all*=(n-2)*(n-3)/2;
		all*=(n-4)*(n-5)/2;
		all*=(n-6)*(n-7)/2;
		for(l=0, r=k-1; l<r; )
		{
			c=(l+r)/2;
			T p=w[c];
			long long cur=0;
			for(int i=2; i<=n && i<=p.a+p.b && cur*4<=all; i++)
				if(i!=p.a && i!=p.b)
					for(int j=2; j<=n && j<=p.a+p.b && cur*4<=all; j++)
						if(j!=p.a && j!=p.b && j!=i)
							for(int k=2; k<=n && k<=p.a+p.b && cur*4<=all; k++)
								if(k!=p.a && k!=p.b && k!=i && k!=j)
								{
									int ii=p.a+p.b-i;
									if(ii>i-1) ii=i-1;
									if(ii+i==p.a+p.b && i>p.a) ii--;
									int jj=p.a+p.b-j;
									if(jj>j-1) jj=j-1;
									if(jj+j==p.a+p.b && j>p.a) jj--;
									int kk=p.a+p.b-k;
									if(kk>k-1) kk=k-1;
									if(kk+k==p.a+p.b && k>p.a) kk--;
									ii-=(p.a<=ii)+(p.b<=ii)+(i<=ii)+(j<=ii)+(k<=ii);
									jj-=(p.a<=jj)+(p.b<=jj)+(i<=jj)+(j<=jj)+(k<=jj);
									kk-=(p.a<=kk)+(p.b<=kk)+(i<=kk)+(j<=kk)+(k<=kk);
									if(jj<ii) swap(ii, jj);
									if(kk<jj) swap(jj, kk);
									if(jj<ii) swap(ii, jj);
									cur+=ii*(jj-1)*(kk-2);
								}
			if(cur*4>all) r=c;
			else l=c+1;
		}
		printf("Case #%d: ", t);
		for(; q--; )
		{
			int i, j;
			scanf("%d%d", &i, &j);
			if(j<i) swap(i, j);
			T p(j, i);
			if(p<w[r]) printf("F");
			else printf("B");
		}
		printf("\n");
	}
	return 0;
}
