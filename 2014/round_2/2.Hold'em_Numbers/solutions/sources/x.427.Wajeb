#include <fstream>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;

int main()
{
	ifstream cin("holdem_numbers_input.txt");
	ofstream cout("holdem_numbers_output.txt");
	int T;
	cin >> T;
	for(int t = 1; t <= T; t++)
	{
		int N, H;
		cin >> N >> H;
		vector<pair<int, int> > v;
		for(int i = 0; i < H; i++)
		{
			pair<int, int> p;
			cin >> p.first >> p.second;
			v.push_back(p);
		}

		int total = (N - 3) * (N - 2) / 2;
		long long den = total * (total - 1) * (total - 2);

		map<pair<int, int>, int > mp;
		for(int i = 1; i <= N; i++)
		{
			for(int j = i + 1; j <= N; j++)
			{
				pair<int, int> p = make_pair(i, j);
				mp[p] = 0;
				for(int f = 1; f <= N; f++)
				{
					for(int s = f + 1; s <= N; s++)
					{
						if(i == f || i == s || j == f || j == s) continue;
						if(f + s < i + j) mp[p] = mp[p] + 1;
						else if((f + s == i + j) && s < j) mp[p] = mp[p] + 1;
					}
				}
			}
		}

		string res = "";

		for(int i = 0; i < H; i++)
		{
			pair<int, int> p = v[i];
			pair<int, int> pt = make_pair(p.second, p.first);
			if(mp.count(p) == 0) p = pt;

			int win = mp[p];
			long long num = win * (win - 1) * (win - 2);

			long double prob = ((long double) num) / den;
			if(prob > 1/3.0) res = res + "B";
			else res = res + "F";

		}

		cout << "Case #" << t << ": " << res << endl;
	}
}
