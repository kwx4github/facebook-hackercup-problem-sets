/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//#pragma comment(linker,"/STACK:256000000")
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>

#define EPS 0.000000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF 1000000500ll
#define mp make_pair
#define pb push_back
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int,int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector <int>
#define DID (long long)
#define ll long long
#define AL(a) (a).begin(),(a).end()
#define INFF DID INF*INF


using namespace std;

PI d[100000];
ll fix[100000];
ll raod;

bool cmp(PI A,PI B){
    if (A.fi+A.se<B.fi+B.se) return true;
    if (A.fi+A.se==B.fi+B.se && max(A.fi,A.se)<max(B.fi,B.se)) return true;
    return false;
}

string solve(){
    int N,H;

    cin>>N>>H;
    string ans;

    int A,B;

    int l=0;
    int sum,a,b;

    for (a=1;a<=N;a++)
        for (b=a+1;b<=N;b++)
        d[l++]=mp(a,b);

    sort(d,d+l,cmp);

    int L,R;

    L=0;
    R=l-1;
    int good,bad;

    while (L<R){
        int M=(L+R)>>1;
        bool flag;

        good=bad=0;
        for (int num=1;num<=2000000;num++){
            raod++;
            fix[d[M].fi]=raod;
            fix[d[M].se]=raod;

            bool flagg=1;
            bool ok=1;

            for (int k=0;k<3;k++){
                int x=rand()%N+1;
                int y=rand()%N+1;
                if (fix[x]==raod || fix[y]==raod) flagg=false;
                fix[x]=fix[y]=raod;
                if (cmp(d[M],mp(x,y))) ok=false;
            }

            if (flagg)
                if (ok)
                good++;else bad++;
        }

        flag=(good*4>bad);

        if (flag)
            R=M; else L=M+1;

        if (R==L+1){
            int M=L;
                    bool flag;

        good=bad=0;
        for (int num=1;num<=2000000;num++){
            raod++;
            fix[d[M].fi]=raod;
            fix[d[M].se]=raod;

            bool flagg=1;
            bool ok=1;

            for (int k=0;k<3;k++){
                int x=rand()%N+1;
                int y=rand()%N+1;
                if (fix[x]==raod || fix[y]==raod) flagg=false;
                fix[x]=fix[y]=raod;
                if (cmp(d[M],mp(x,y))) ok=false;
            }

            if (flagg)
                if (ok)
                good++;else bad++;
        }

        flag=(good*4>bad);

            if (flag)
                R--; else L++;
        }
    }

    A=d[L].fi;
    B=d[L].se;

    while (H--){
        int C1,C2;
        cin>>C1>>C2;

        if (C1+C2>A+B || (C1+C2==A+B && max(C1,C2)>=max(A,B)) )
            ans+="B";
            else
            ans+="F";
        }

    return ans;
}

main(){
    #ifndef ONLINE_JUDGE
            freopen("text.in","r",stdin); freopen("text.out","w",stdout);
    #endif

    srand(time(NULL));
    int tests;
    cin>>tests;
    for (int t=1;t<=tests;t++){
        cout<<"Case #"<<t<<": "<<solve()<<endl;
    }

}
