#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <iostream>
#include <sstream>
#include <vector>
#include <string>
#include <math.h>
#include <queue>
#include <list>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
using namespace std;

#define ALL(c) (c).begin(),(c).end()
#define PRESENT(c,x) (find(c.begin(),c.end(),x) != (c).end())
#define REP(i,n) for (int i=0;i<(n);i++)
#define FOR(i,a,b) for (int i=(a);i<=(b);i++)
#define INIT(a,v) memset(a,v,sizeof(a))
#define UNIQUE(c) (sort(c.begin(),c.end()), c.resize(distance(c.begin(),unique(c.begin(),c.end()))))
template<class A, class B> A cvt(B x) { stringstream ss; ss<<x; A y; ss>>y; return y; }

typedef long long int64;
typedef pair<int,int> PII;

//combinations C[n][r]
long long C[101][101];
void comb(int lim) {
	int n,r;
	C[0][0]=1;
	for (n=1;n<=lim;n++) {
		C[n][0]=1;
		for (r=1;r<=n-1;r++) {
			C[n][r]=(C[n-1][r-1]+C[n-1][r]);
		}
		C[n][n]=1;
	}
}

int n,h;
int64 f[4][10005];
int64 g[4][10005];

int main() {
	freopen("holdem.txt","r",stdin);
	freopen("holdem.out","wb",stdout);
	comb(100);
	int T;
	scanf("%d",&T);
	FOR (t,1,T) {
		fprintf(stderr,"%d/%d\n",t,T);
		scanf("%d %d",&n,&h);
		printf("Case #%d: ",t);
		REP (hand,h) {
			int c1,c2,s;
			scanf("%d %d",&c1,&c2);
			s=c1+c2;
			if (c1>c2) swap(c1,c2);
			for (int x=1;x<=n;x++) f[0][x]=1;
			for (int k=1;k<=3;k++) {
				f[k][0]=0;
				for (int x=1;x<=n;x++) {
					f[k][x]=f[k][x-1];
					if (x==c2 || x==c1) continue;
					int y;
					if (x>c2) y=min(s-1-x,x-1);
					else y=min(s-x,x-1);
					int64 p=y;
					p-=3-k;
					if (c1<=y) p--;
					if (c2<=y) p--;
					if (p>0) f[k][x]+=p*f[k-1][x-1];
				}
			}
			/*for (int k=0;k<=3;k++) {
				for (int x=0;x<=n;x++) {
					printf("%d %d: %I64d\n",k,x,f[k][x]);
				}
			}*/
			int64 all=C[n-2][2]*C[n-4][2]*C[n-6][2]/6;
			if (f[3][n]*4>all) printf("B"); else printf("F");
		}
		printf("\n");
	}
	return 0;
}
