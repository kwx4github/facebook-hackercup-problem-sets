// @author peter50216
// #includes {{{
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<functional>
#include<math.h>
#include<assert.h>
#include<stdarg.h>
#include<time.h>
#include<limits.h>
#include<ctype.h>
#include<string>
#include<map>
#include<set>
#include<queue>
#include<algorithm>
#include<vector>
#include<iostream>
#include<sstream>
using namespace std;
// }}}
// #defines {{{
#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define REP(i,n) for(int i=0;i<(n);i++)
#define REP1(i,a,b) for(int i=(a);i<=(b);i++)
#define REPL(i,x) for(int i=0;x[i];i++)
#define PER(i,n) for(int i=(n)-1;i>=0;i--)
#define PER1(i,a,b) for(int i=(a);i>=(b);i--)
#define RI(x) scanf("%d",&x)
#define DRI(x) int x;RI(x)
#define RII(x,y) scanf("%d%d",&x,&y)
#define DRII(x,y) int x,y;RII(x,y)
#define RIII(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define DRIII(x,y,z) int x,y,z;RIII(x,y,z)
#define RS(x) scanf("%s",x)
#define PI(x) printf("%d\n",x)
#define PIS(x) printf("%d ",x)
#define CASET int ___T,cas=1;scanf("%d ",&___T);while(___T--)
#define CASEN0(n) int cas=1;while(scanf("%d",&n)!=EOF&&n)
#define CASEN(n) int cas=1;while(scanf("%d",&n)!=EOF)
#define MP make_pair
#define PB push_back
#define MS0(x) memset(x,0,sizeof(x))
#define MS1(x) memset(x,-1,sizeof(x))
#define SEP(x) ((x)?'\n':' ')
#define F first
#define S second
#ifdef ONLINE_JUDGE
#define FILEIO(x) freopen(#x ".in","r",stdin);freopen(#x ".out","w",stdout);
#define FILEIOS freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#else
#define FILEIO(x) ;
#define FILEIOS ;
#endif
typedef pair<int,int> PII;
typedef long long LL;
typedef unsigned long long ULL;
// }}}

int n;
inline LL bin(int x,int y){
    LL r=1;
    REP1(i,1,y){
        r=r*(x-y+i)/i;
    }
    return r;
}
inline bool bigg(int a1,int a2,int b1,int b2){
    return a1+a2>b1+b2||(a1+a2==b1+b2&&a2>b2);
}
inline int s1(int i1,int c1,int c2,int x1){
    int i2=c1+c2-i1;
    if(i2<=0)return 0;
    if(i2>n)i2=n;
    if((i1>c2||i2>c2)&&i1+i2==c1+c2)i2--;
    int ans=i2;
    if(i2>=c1)ans--;
    if(i2>=c2)ans--;
    if(i2>=x1)ans--;
    return ans;
}
inline int s1(int i1,int c1,int c2,int x1,int x2){
    int i2=c1+c2-i1;
    if(i2<=0)return 0;
    if(i2>n)i2=n;
    if((i1>c2||i2>c2)&&i1+i2==c1+c2)i2--;
    int ans=i2;
    if(i2>=c1)ans--;
    if(i2>=c2)ans--;
    if(i2>=x1)ans--;
    if(i2>=x2)ans--;
    return ans;
}
inline int mv(int i1,int c1,int c2){
    int i2=c1+c2-i1;
    if(i2<=0)return 0;
    if(i2>n)i2=n;
    if(i2>c2&&i1+i2==c1+c2)i2--;
    return i2;
}
inline bool solve(int c1,int c2){
    LL tot=bin(n-2,6)*15LL*6LL;
    LL ans=0;
    if(c1>c2)swap(c1,c2);
    int lc=0;
    REP1(i,1,n){
        if(i==c1||i==c2)continue;
        REP1(j,i+1,n){
            if(j==c1||j==c2)continue;
            if(bigg(c1,c2,i,j)){
                //printf("i=%d j=%d\n",i,j);
                lc++;
            }
        }
    }
    if(lc<3)return 0;
    ans+=bin(lc,3)*6;
    //printf("lc=%d ans=%I64d\n",lc,ans);
    REP1(i,1,n){
        if(i==c1||i==c2)continue;
        int cc=s1(i,c1,c2,i);
        //printf("i=%d cc=%d\n",i,cc);
        ans-=bin(cc,2)*2*(lc-2)*3;
        ans+=bin(cc,3)*6*2;
    }
   // printf("lc=%d ans=%I64d\n",lc,ans);
    REP1(i,1,n){
        if(i==c1||i==c2)continue;
        REP1(j,i+1,n){
            if(j==c1||j==c2)continue;
            if(!bigg(c1,c2,i,j))continue;
            int cc1=s1(i,c1,c2,i,j);
            int cc2=s1(j,c1,c2,i,j);
          //  printf("i=%d j=%d %d %d\n",i,j,cc1,cc2);
            ans+=cc1*(LL)cc2*6;
            int cc=i-1;
            if(c1<i)cc--;if(c2<i)cc--;
            ans-=cc*6;
        }
    }
    //printf("tot=%I64d ans=%I64d\n",tot,ans);
    return ans*4>tot;
}
int main(){
    CASET{
        RI(n);
        DRI(h);
        printf("Case #%d: ",cas++);
        REP(hh,h){
            DRII(c1,c2);
            printf("%c",solve(c1,c2)?'B':'F');
        }
        puts("");
    }
}
// vim: fdm=marker:commentstring=\ \"\ %s:nowrap:autoread

