#include <iostream>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <map>
#include <queue>
#include <set>
#include <cstring>
#include <numeric>

using namespace std;

#define INF 0x7FFFFFFFFFFFFFFFLL

bool st[110];

int strand(int N) {
  for(;;) {
    int x = rand() % N;
    if(!st[x]) {
      st[x] = true;
      return x;
    }
  }
}

int main() {
  int T; cin >> T;
  for (int t = 1; t <= T; t++) {
    cout << "Case #" << t << ": ";

    int N, H; cin >> N >> H;
    for(int i = 0; i < H; i++) {
      int c0, c1; cin >> c0 >> c1; c0--; c1--;

      int r = 0;
      int t = 0;
      memset(st, 0, sizeof(st));
      st[c0] = st[c1] = true;
      pair<int, int> target(c0 + c1, max(c0, c1));
      for(int i = 0; i < 10000; i++) {
        int x0 = strand(N);
        int x1 = strand(N);
        int y0 = strand(N);
        int y1 = strand(N);
        int z0 = strand(N);
        int z1 = strand(N);
        if(make_pair(x0 + x1, max(x0, x1)) < target &&
           make_pair(y0 + y1, max(y0, y1)) < target &&
           make_pair(z0 + z1, max(z0, z1)) < target) {
          r++;
        }
        st[x0] = st[x1] = st[y0] = st[y1] = st[z0] = st[z1] = false;
        t++;
      }

      if(4 * r > t) {
        cout << 'B';
      } else {
        cout << 'F';
      }
    }
    cout << endl;
  }
  return 0;
}
