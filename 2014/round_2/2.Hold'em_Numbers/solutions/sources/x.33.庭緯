// TwT514 {{{
#include <cstdio>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cmath>
#include <bitset>
#include <queue>
#include <stack>
#include <functional>
#include <utility>
#define SZ(x) ((int)(x).size())
#define FOR(i,c) for (__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)
#define REP(i,n) for (int i=0; i<(int)(n); i++)
#define REP1(i,a,b) for (int i=(int)(a); i<=(int)(b); i++)
#define ALL(x) (x).begin(),(x).end()
#define MS0(x,n) memset((x),0,(n)*sizeof(*x))
#define MS1(x,n) memset((x),-1,(n)*sizeof(*x))
#define MP make_pair
#define PB push_back
#define RI(a) scanf("%d",&(a))
#define RII(a,b) scanf("%d%d",&(a),&(b))
#define RIII(a,b,c) scanf("%d%d%d",&(a),&(b),&(c))
using namespace std;
typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
// }}}

#define N 110
#define M 10010
int n,m,c[M][2];
void input() {
    RII(n,m);
    REP(i,m) RII(c[i][0],c[i][1]);
}

bool win_test( int a1, int b1, int a2, int b2 ) {
    if ( a1+b1!=a2+b2 ) return a1+b1>a2+b2;
    return max(a1,b1) > max(a2,b2);
}


bool lasai2( int a, int b ) {
    static int vis[N],ucs;
    int rem[N],rn=0,cnt=0,all=0;
    REP1(i,1,n) if ( i!=a && i!=b ) rem[rn++]=i;
    while ( abs(4*cnt-all)<1000 ) {
        ucs++;
        bool win=1;
        int ab[2];
        REP(i,6) {
            int v=rand()%rn;
            while ( vis[v]==ucs ) v=rand()%rn;
            vis[v]=ucs;
            ab[i%2]=rem[v];
            if ( i%2==0 ) continue;
            if ( !win_test(a,b,ab[0],ab[1]) ) {
                win=0;
                break;
            }
        }
        if ( win ) cnt++;
        all++;
    }
    //if ( abs(4*cnt-all)<2500 ) printf("a=%d, b=%d, cnt=%d, all=%d, diff=%d\n",a,b,cnt,all,4*cnt-all);
    return 4*cnt>all;
}

bool lasai( int a, int b ) {
    int all=0,cnt=0;
    while ( all<20 || fabs(1.0*cnt/all - 0.5) < 0.1 ) {
        if ( all>=5 && (cnt==0 || cnt==all) ) break;
        bool win=lasai2(a,b);
        if ( win ) cnt++;
        all++;
        if ( all>20 ) fprintf(stderr,"-- n=%d, a=%d, b=%d, cnt=%d, all=%d\n",n,a,b,cnt,all);
        if ( all>40 ) break;
    }
    //fprintf(stderr,"---- n=%d, a=%d, b=%d, cnt=%d, all=%d\n",n,a,b,cnt,all);
    return 2*cnt > all;
}

void solve() {
    int tbl[N];
    for ( int i=1,j=n; i<=n; i++ ) {
        while ( i==j || lasai(i,j) ) j--;
        tbl[i]=j;
        //printf("%d %d %d\n",n,i,j);
    }
    REP(i,m) {
        bool now=c[i][1]>tbl[c[i][0]];
        putchar(now?'B':'F');
    }
    puts("");
}

void predo() {
    clock_t pre=clock();
    REP1(i,8,100) {
        n=i;
        m=0;
        solve();
        fprintf(stderr,"%.2f i=%d\n",1.*(clock()-pre)/CLOCKS_PER_SEC,i);
        pre=clock();
    }
}

int main( int argc, char *argv[] ) {
    srand(514514514);
    int t;
    RI(t);
    REP1(i,1,t) {
        input();
        if ( argc>=3 && (i<atoi(argv[1]) || i>atoi(argv[2])) ) continue;
        printf("Case #%d: ",i);
        solve();
    }
    return 0;
}


