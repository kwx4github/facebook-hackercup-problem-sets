#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <climits>
#include <cfloat>
#include <map>
#include <utility>
#include <set>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <sstream>
#include <complex>
#include <stack>
#include <queue>
#include <cstring>
#include <assert.h>
#include <sys/time.h>
#include <fstream>

#define FOR(i,a,b) for(ll i=(a);i<(b);++i)
#define rep(i,n)  FOR(i,0,n)
#define REP(i,n)  FOR(i,0,n)
#define each(i,c) for(auto i=(c).begin(); i!=(c).end(); ++i)
#define EACH(i,c) for(auto i=(c).begin(); i!=(c).end(); ++i)
#define exist(s,e) ((s).find(e)!=(s).end())

#define dump(x)  cerr << #x << " = " << (x) << endl;
#define debug(x) cerr << #x << " = " << (x) << " (L" << __LINE__ << ")" << " " << __FILE__ << endl;
#define deb(x) cerr << #x << " = " << (x) << " , ";
#define debl cerr << " (L" << __LINE__ << ")"<< endl;
#define sz(s) (int)((s).size())


#define clr(a) memset((a),0,sizeof(a))
#define nclr(a) memset((a),-1,sizeof(a))
#define pb push_back
#define INRANGE(x,s,e) ((s)<=(x) && (x)<(e))
#define MP(x,y) make_pair((x),(y))

double pi=3.14159265358979323846;

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef vector<string> vs;

template<typename T> std::ostream& operator<<(std::ostream& os, const vector<T>& z){
	os << "[ ";
	REP(i,z.size())os << z[i] << ", " ;
	return ( os << "]" << endl);
}

template<typename T> std::ostream& operator<<(std::ostream& os, const set<T>& z){
	os << "set( ";
	EACH(p,z)os << (*p) << ", " ;
	return ( os << ")" << endl);
}

template<typename T,typename U> std::ostream& operator<<(std::ostream& os, const map<T,U>& z){
	os << "{ ";
	EACH(p,z)os << (p->first) << ": " << (p->second) << ", " ;
	return ( os << "}" << endl);
}

template<typename T,typename U> std::ostream& operator<<(std::ostream& os, const pair<T,U>& z){
	return ( os << "(" << z.first << ", " << z.second << ",)" );
}

double get_time(){
	struct timeval tv;
	gettimeofday(&tv, NULL);
	return tv.tv_sec + tv.tv_usec*1e-6;
}

typedef unsigned int uint32_t;
struct RND{
	uint32_t x;
	uint32_t y;
	uint32_t z;
	uint32_t w;
	RND(){
		x=123456789;
		y=362436069;
		z=521288629;
		w=88675123;
	}
	void init(int seed){
		x=123456789;
		y=362436069;
		z=521288629;
		w=seed+100;
		REP(i,10)get();
	}
	uint32_t get(){
		uint32_t t;
		t=x^(x<<11);
		x=y;y=z;z=w;
		w=(w^(w>>19))^(t^(t>>8));
		return w;
	}
};
RND rnd;

ll N,H;
ll winprob(ll C, ll M){
	if(C<M){
		swap(C,M);
	}
	assert(C>M);
	ll res = 0;
	rep(g1,N) if(g1!=C && g1!=M){
		rep(g2,g1) if(g2!=C && g2!=M){
			rep(g3,g2) if(g3!=C && g3!=M){
				ll ms[3];
				ms[0] = min(g1-1,  C+M-g1 - (g1>C));
				ms[1] = min(g2-1, C+M-g2 - (g2>C));
				ms[2]= min(g3-1, C+M-g3 - (g3>C));
				sort(ms, ms+3);
				ll under[3];
				rep(t,3){
					under[t] = 0;
					ll use[5] = {C, M, g1, g2, g3};
					rep(t2,5){
						if(use[t2]<=ms[t]){
							under[t]++;
						}
					}
				}
				if(false && N==8 && g1==5 && g2==4 && g3==3 && C==7 && M==6){
					rep(t,3){
						debug(under[t]);
					}
				}
				ll v0 = (ms[0]+1) - under[0];
				ll v1 = (ms[1]+1) - under[1]-1;
				ll v2 = (ms[2]+1) - under[2]-2;
				if(v0<0 || v1<0 || v2<0)continue;

				res += v0*v1*v2;
			}
		}
	}
	return res;
}

void _main(istream &inp){
	int T;
	inp >> T;
	rep(tt, T){
		inp >> N >> H;
		ll tot=(N-2)*(N-3)*(N-4)*(N-5)*(N-6)*(N-7) / 6 / 8;
		ll c2=N;
		vl seq(N);
		deb(N);deb(tot);debl;
		if(0)rep(i,8) rep(j,8) if(i!=j){
			deb(i);deb(j);deb(winprob(i,j));debl;
		}
		rep(c,N){
			while(true){
				ll nc2 = (c2-1==c ? c2-2 : c2-1);
				//deb(c);deb(nc2);deb(winprob(c,nc2));debl;
				if(nc2<0 || winprob(c, nc2)*4<=tot)break;;
				c2 = nc2;
			}
			seq[c] = c2; // c,c2は勝てる
		}
		deb(seq);debl;
		string s;
		rep(j,H){
			int C1,C2;
			inp >> C1 >> C2;
			C1--;
			C2--;
			if(C2 >= seq[C1]){
				s.pb('B');
			}
			else{
				s.pb('F');
			}
		}
		cout << "Case #" << tt+1 << ": " << s<< endl;

	}

}

int main(){
	if(0){
		ifstream ifs("test.txt");
		_main(ifs);
	}
	else{
		_main(cin);
	}
	return 0;
}
