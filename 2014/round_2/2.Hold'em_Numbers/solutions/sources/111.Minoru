package fhc14.r2;

import java.io.File;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Scanner;

public class B {
	Scanner in;
	PrintWriter out;
	String DATE = new SimpleDateFormat("HHmmss").format(new Date());
	String BASE = "X:\\facebook\\";
	String INPATH = BASE + "holdem_numbers.txt";
	String OUTPATH = BASE + B.class.getSimpleName() + "-" + DATE + ".txt";
	String INPUT = "";
	
	void solve()
	{
		int T = ni();
		for(int cas = 1;cas <= T;cas++){
			out.print("Case #" + cas + ": ");
			int n = ni(), h = ni();
			for(int i = 0;i < h;i++){
				int c1 = ni(), c2 = ni();
				if(c1 > c2){
					int d = c1; c1 = c2; c2 = d;
				}
				long lose = 0;
				for(int j = 1;j <= n;j++){
					if(j == c1 || j == c2)continue;
					int supk = Math.min(n, c1+c2-j);
					if(j+supk == c1+c2 && (supk > c2 || j > c2))supk--;
					long okk = supk - (supk >= j ? 1 : 0) - (supk >= c1 ? 1 : 0) - (supk >= c2 ? 1 : 0);
					if(okk < 0)continue;
					lose += okk;
				}
				lose /= 2;
				
//				{
//			int ooo = 0;
//			for(int j = 1;j <= n;j++){
//				if(j == c1 || j == c2)continue;
//				for(int k = j+1;k <= n;k++){
//					if(k == c1 || k == c2)continue;
//					if(j+k < c1+c2 || j+k == c1+c2 && k < c2){
//						for(int l = 1; l <= n;l++){
//							if(l == c1 || l == c2)continue;
//							for(int m = l+1;m <= n;m++){
//								if(m == c1 || m == c2)continue;
//								if(l+m < c1+c2 || l+m == c1+c2 && m < c2){
//									if(j == l || j == m || k == l || k == m){
//										ooo++;
//									}
//								}
//							}
//						}
//					}
//				}
//			}
//				}
				
				long ct2 = 0;
				long ct2ex = 0;
				for(int j = 1;j <= n;j++){
					if(j == c1 || j == c2)continue;
					int supk = Math.min(n, c1+c2-j);
					if(j+supk == c1+c2 && (supk > c2 || j > c2))supk--;
					long okk = supk - (supk >= j ? 1 : 0) - (supk >= c1 ? 1 : 0) - (supk >= c2 ? 1 : 0);
					if(okk < 0)continue;
//					tr(j, okk, supk, lose);
					// j k1
					// j k2
					ct2 += okk*okk*lose;
					
					// j k
					// j k
					ct2ex += okk*lose;
				}
//				if(lose > 0){
//					tr("res");
//					tr(ct2/lose/3);
//					tr(ct2ex/3/lose/2);
//				}
				long p2 = ct2 - ct2ex/2;
				
//				int ooo = 0;
//				for(int j = 1;j <= n;j++){
//					if(j == c1 || j == c2)continue;
//					for(int k = j+1;k <= n;k++){
//						if(k == c1 || k == c2)continue;
//						if(j+k < c1+c2 || j+k == c1+c2 && k < c2){
//							for(int l = 1; l <= n;l++){
//								if(l == c1 || l == c2)continue;
//								for(int m = l+1;m <= n;m++){
//									if(m == c1 || m == c2)continue;
//									if(l+m < c1+c2 || l+m == c1+c2 && m < c2){
//										for(int e = 1;e <= n;e++){
//											if(e == c1 || e == c2)continue;
//											for(int f = e+1;f <= n;f++){
//												if(f == c1 || f == c2)continue;
//												int[] u = new int[20];
//												u[j]++;
//												u[k]++;
//												u[l]++;
//												u[m]++;
//												u[e]++;
//												u[f]++;
//												int ff = 0;
//												int qq = 0;
//												int tt = 0;
//												for(int z = 0;z < 20;z++){
//													if(u[z] == 1)qq++;
//													if(u[z] == 3)tt++;
////													if(u[z] == 2)ff++;
//												}
//												if(tt == 1)ooo++;
////												if(tt == 1 && qq == 3)ooo++;
////												if(qq == 6)ooo++;
////												if(j == l && k == m)continue;
////												if(l == e && m == f)continue;
////												if(j == e && k == f)continue;
////												if(ff == 2 && qq == 2)ooo++;
////												if((j == l || j == m) && (j == e || j == f)){
////													ooo++;
////												}else if((k == l || k == m) && (k == e || k == f)){
////													ooo++;
////												}
//											}
//										}
//									}
//								}
//							}
//						}
//					}
//				}
				
//				tr("guro?", ooo);
				long ct3 = 0;
				long ct3ex = 0;
				for(int j = 1;j <= n;j++){
					if(j == c1 || j == c2)continue;
					int supk = Math.min(n, c1+c2-j);
					if(j+supk == c1+c2 && (supk > c2 || j > c2))supk--;
					long okk = supk - (supk >= j ? 1 : 0) - (supk >= c1 ? 1 : 0) - (supk >= c2 ? 1 : 0);
					if(okk < 0)continue;
					// j k1
					// j k2
					// j k3
					ct3 += okk*(okk-1)*(okk-2);
					
					// j k
					// j k
					// j k2
					ct3 += okk*(okk-1)*3;
					
					// j k
					// j k
					// j k
					ct3ex += okk;
				}
				ct3ex /= 2;
				
				long q = 0;
				// j k
				// j l
				// k m
				for(int j = 1;j <= n;j++){
					if(j == c1 || j == c2)continue;
					for(int k = j+1;k <= n;k++){
						if(k == c1 || k == c2)continue;
						if(j+k < c1+c2 || j+k == c1+c2 && k < c2){
							int supl = Math.min(n, c1+c2-j);
							if(j+supl == c1+c2 && (supl > c2 || j > c2))supl--;
							long okl = supl - (supl >= k ? 1 : 0) - (supl >= j ? 1 : 0) - (supl >= c1 ? 1 : 0) - (supl >= c2 ? 1 : 0);
							if(okl < 0)continue;
							
							int supm = Math.min(n, c1+c2-k);
							if(k+supm == c1+c2 && (supm > c2 || k > c2))supm--;
							long okm = supm - (supm >= k ? 1 : 0) - (supm >= j ? 1 : 0) - (supm >= c1 ? 1 : 0) - (supm >= c2 ? 1 : 0);
							if(okm < 0)continue;
							
							q += (okl*okm-Math.min(okl, okm))*6L;
						}
					}
				}
				
				// j k 
				// j l
				// k l
				long minus = 0;
				for(int j = 1;j <= n;j++){
					if(j == c1 || j == c2)continue;
					for(int k = j+1;k <= n;k++){
						if(k == c1 || k == c2)continue;
						if(j+k < c1+c2 || j+k == c1+c2 && k < c2){
							int supl = Math.min(n, Math.min(c1+c2-j, c1+c2-k));
							if(k+supl == c1+c2 && (supl > c2 || k > c2))supl--;
							long okl = supl - (supl >= k ? 1 : 0) - (supl >= j ? 1 : 0) - (supl >= c1 ? 1 : 0) - (supl >= c2 ? 1 : 0);
							if(okl < 0)continue;
							minus += okl*2;
						}
					}
				}
				ct3 += minus;
				
				long p3 = lose*lose*lose;
				long num = p3-3*p2+2*ct3+2*ct3ex+q;
				long all = (long)(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)/2/2/2;
//				tr(p3, p2, q, ct3, ct3ex, p3-3*p2+2*ct3+2*ct3ex+q);
//				tr(num, all);
				//num/all*4-1>0
				if(num*4 > all){
					out.print('B');
				}else{
					out.print('F');
				}
			}
			out.println();
		}
	}
	
	void run() throws Exception
	{
		in = INPUT.isEmpty() ? new Scanner(new File(INPATH)) : new Scanner(INPUT);
		out = INPUT.isEmpty() ? new PrintWriter(new File(OUTPATH)) : new PrintWriter(System.out);
		solve();
		out.flush();
	}
	
	public static void main(String[] args) throws Exception
	{
		new B().run();
	}
	
	int ni() { return Integer.parseInt(in.next()); }
	void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }
}
