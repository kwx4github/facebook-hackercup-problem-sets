/*
	Author : ChnLich
*/
#include<cstdio>
#include<cmath>
#include<iomanip>
#include<cstring>
#include<cstdlib>
#include<ctime>
#include<iostream>
#include<sstream>
#include<fstream>
#include<algorithm>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<deque>
#include<set>
#include<map>
#include<string>
#include<bitset>
#include<functional>
#include<utility>

using namespace std;

typedef long long llint;
typedef pair<int,int> ipair;
typedef unsigned int uint;
#define pb push_back
#define fi first
#define se second
#define mp make_pair

const int MOD=1000000007,dx[]={0,1,0,-1},dy[]={1,0,-1,0};
const double eps=1e-8;

void read(int &k)
{
	k=0; char x=getchar();
	while(x<'0'||x>'9') x=getchar();
	while(x>='0'&&x<='9') { k=k*10-48+x; x=getchar(); }
}

struct arr
{
	int x,y;
	bool operator < (arr b) const
	{
		if (x+y!=b.x+b.y) return x+y<b.x+b.y;
		return max(x,y)<max(b.x,b.y);
	}
} lis[10010];

int n,H,x,y;
llint dp[2][201][201][201];

void update(llint &a,llint b)
{
	a+=b;
}

llint solve(int x,int y)
{
	memset(dp,0,sizeof dp);
	int u=0,v=1;
	dp[v][x+y][x+y][x+y]=1;
	for(int i=1;i<=n&&i<x+y;i++)
	{
		swap(u,v);
		memset(dp[v],0,sizeof dp[v]);
		for(int j=0;j<=x+y;j++) if (j==0||j>=i)
		for(int k=0;k<=x+y;k++) if (k==0||k>=i)
		for(int l=0;l<=x+y;l++) if (l==0||l>=i)
		{
			update(dp[v][j][k][l],dp[u][j][k][l]);
			if (i!=x&&i!=y)
			{
				if (((j<x||j<y)&&j>=i)||(j>i))
					if (j<x+y) update(dp[v][0][k][l],dp[u][j][k][l]);
					else update(dp[v][x+y-i][k][l],dp[u][j][k][l]);
				if (((k<x||k<y)&&k>=i)||(k>i))
					if (k<x+y) update(dp[v][j][0][l],dp[u][j][k][l]);
					else update(dp[v][j][x+y-i][l],dp[u][j][k][l]);
				if (((l<x||l<y)&&l>=i)||(l>i))
					if (l<x+y) update(dp[v][j][k][0],dp[u][j][k][l]);
					else update(dp[v][j][k][x+y-i],dp[u][j][k][l]);
			}
		}
	}
	return dp[v][0][0][0];
}

int main()
{
	freopen("B.in","r",stdin);
	freopen("B.out","w",stdout);
	
	int T;
	scanf("%d",&T);
	for(int tt=1;tt<=T;tt++)
	{
		fprintf(stderr,"%d\n",tt);
		scanf("%d%d",&n,&H);
		
		int len=0;
		for(int i=1;i<=n;i++)
			for(int j=i+1;j<=n;j++)
				lis[++len]=(arr){i,j};
		sort(lis+1,lis+len+1);
		//for(int i=1;i<=len;i++) printf("%I64d ",solve(lis[i].x,lis[i].y));
		int L,R,ans=len+1,t;
		llint p=1ll*(n-2)*(n-3)*(n-4)*(n-5)*(n-6)*(n-7)/8;
		for(L=1,R=len;L<=R;)
		{
			t=(L+R)>>1;
			fprintf(stderr,"%d %d\n",L,R);
			llint x=solve(lis[t].x,lis[t].y);
			if (x*4>p) ans=t,R=t-1; else L=t+1;
		}
		printf("Case #%d: ",tt);
		for(int i=0;i<H;i++)
		{
			arr u;
			scanf("%d%d",&u.x,&u.y);
			int o=lower_bound(lis+1,lis+len+1,u)-lis;
			if (o>=ans) printf("B"); else printf("F");
		}
		puts("");
	}
	
	return 0;
}
