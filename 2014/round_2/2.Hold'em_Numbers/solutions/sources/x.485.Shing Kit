#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <queue>
#include <algorithm>
#include <map>
#include <cmath>
using namespace std;

typedef long long ll;

int t, n, h, c1, c2, limit;
int dp[200][105];
ll lose, cc, cc2;

inline ll nc2(ll n) {
	return (n * (n - 1ll)) / 2ll;
}

int main() {
	scanf("%d", &t);
	for (int case_no = 1; case_no <= t; case_no++) {
		printf("Case #%d: ", case_no);
		scanf("%d %d", &n, &h);
	
		cc = nc2(n - 2) * nc2(n - 4) * nc2(n - 6) / 6;
		cc2 = nc2(n - 4) * nc2(n - 6) / 2;
		// round r
		for (int r = 0; r < h; r++) {
			memset(dp, 0, sizeof dp);
			scanf("%d %d", &c1, &c2);

			if (c1 > c2)
				swap(c1, c2);

			for (int i = 1; i <= n; i++) {
				if (i == c1 || i == c2)
					continue;
				for (int j = i + 1; j <= n; j++) {
					if (j == c1 || j == c2)
						continue;
					dp[i+j][j] = 1;
				}
			}

			lose = 0;
			limit = n + n - 1;
			for (int i = c1 + c2 + 1; i <= limit; i++)
				for (int j = 1; j <= n; j++)
					if (dp[i][j])
						lose++;
			for (int i = c2 + 1; i <= n; i++)
				if (dp[c1+c2][i])
					lose++;

			lose *= cc2;
			// lose = (nc2(n-2) * nc2(n-4) * nc2(n-6))/6 - lose;
			// cout << lose << ' ' << cc << endl;
			if (lose < cc)
				putchar('B');
			else
				putchar('F');
			// puts("");
		}
		putchar('\n');
	}
	return 0;
}