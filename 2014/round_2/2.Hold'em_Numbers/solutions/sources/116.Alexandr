#include <cstdio>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <iostream>
#include <set>
#include <cmath>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)
typedef long long ll;

int n;
int v1,v2;
int s;
ll num=0;
ll den=0;

int used[101];
int sum[101];
ll binomial[101][5];
int choice[3];
int r[3];
int sbb[3];
int cur_ways=0;

void solve(int c, int cid)
{
	if(cid==3)
	{
		r[0]=choice[0]-1-sum[choice[0]];
		r[1]=choice[1]-1-2-sum[choice[1]];
		r[2]=choice[2]-1-4-sum[choice[2]];
		if(r[0]<=0|| r[1]<=0 || r[2]<=0)
		{
//			assert(cur_ways==0);
			return;
		}
//		assert(cur_ways==r[0]*r[1]*r[2]);
		den+=r[0]*r[1]*r[2];
		r[0]=min(choice[0]-1,s-choice[0]-(choice[0]>v2?1:0));
		r[1]=min(choice[1]-1,s-choice[1]-(choice[1]>v2?1:0));
		r[2]=min(choice[2]-1,s-choice[2]-(choice[2]>v2?1:0));
		sort(r,r+3);
		sbb[0]=sbb[1]=sbb[2]=0;
		REP(i,3) REP(j,3)
			if(choice[i]<=r[j])
				sbb[j]++;
		r[0]-=sum[r[0]]+sbb[0];
		r[1]-=sum[r[1]]+1+sbb[1];
		r[2]-=sum[r[2]]+2+sbb[2];
		if(r[0]<=0|| r[1]<=0 || r[2]<=0)
		{
//			assert(cur_ways==0);
			return;
		}
//		assert(cur_ways==r[0]*r[1]*r[2]);
		num+=r[0]*r[1]*r[2];

		return;
	}
	if(c==n+1) return;
	solve(c+1,cid);
	if(!used[c])
	{
		choice[cid]=c;
		solve(c+1,cid+1);
	}
}

char res[101][101];

int main()
{
	for(int i=0;i<=101;i++)
	{
		binomial[i][0]=1;
		for(int j=1;j<i;j++)
			binomial[i][j]=binomial[i-1][j-1]+binomial[i-1][j];
		binomial[i][i]=1;
	}
	int t;
	scanf("%d",&t);
	for(int test=1;test<=t;test++)
	{
		int h;
		scanf("%d%d",&n,&h);
		printf("Case #%d: ",test);
		memset(res,0,sizeof(res));
		REP(j,h)
		{
			num=0;
			den=0;
			scanf("%d%d",&v1,&v2);
//			v1=j%n+1;
//			v2=j/n%n+1;
			memset(used,0,sizeof(used));
			memset(sum,0,sizeof(sum));
			used[v1]=1;
			used[v2]=1;
			sum[v1]=1;
			sum[v2]=1;
			for(int i=1;i<=n;i++)
				sum[i]+=sum[i-1];
			s=v1+v2;
			if(v1>v2) swap(v1,v2);
			if(res[v1][v2]==0)
			{
				solve(1,0);
				if(4*num>den)
					res[v1][v2]='B';
				else
					res[v1][v2]='F';
			}
			putchar(res[v1][v2]);
//			printf("%lld %lld\n",num,den);
//			if(4*num>den)
//				putchar('B');
//			else
//				putchar('F');
		}
		puts("");
	}
	return 0;
}
