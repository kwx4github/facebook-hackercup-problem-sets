// Jakub Radoszewski

//#include<iostream>
#include<cstdio>
#include<cctype>
#include<cmath>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<string>
#include<list>
#include<deque>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<utility>
#include<sstream>
#include<cstring>
#include<numeric>
#include<cassert>
using namespace std;

#define FOR(I,A,B) for(int I=(A);I<=(B);I++)
#define FORD(I,A,B) for(int I=(A);I>=(B);I--)
#define REP(I,N) for(int I=0;I<(N);I++)
#define ALL(X) (X).begin(),(X).end()
#define PB push_back
#define MP make_pair
#define FI first
#define SE second
#define INFTY 100000000
#define VAR(V,init) __typeof(init) V=(init)
#define FORE(I,C) for(VAR(I,(C).begin());I!=(C).end();I++)
#define SIZE(x) ((int)(x).size())

typedef vector<int> VI;
typedef pair<int,int> PII;
typedef long long ll;
typedef vector<string> VS;

ll nwd(ll a,ll b) { return !b?a:nwd(b,a%b); }
inline int CEIL(int a,int b) { return a%b ? a/b+1 : a/b; }
template <class T> inline T sqr(const T&a) { return a*a; }

int los(int m)
{
  return (int)((double)m*(rand()/(RAND_MAX+1.0)));
}

int n,h;

typedef unsigned int uint;

int N;
int m;
VI t[110];
int nei[110];
uint tab[110][10];
ll tri;

ll caseC()
{
  ll w=0;
  REP(i,n) REP(z,SIZE(t[i]))
  {
    int j=t[i][z];
    if (i>j) continue;
    REP(k,N) w+=__builtin_popcountl(tab[i][k] & tab[j][k]);
  }
  assert(w%3==0);
  return w/3;
}

ll caseB()
{
  ll w=0;
  REP(i,n) if (nei[i]>=3)
  {
    ll a=1;
    FOR(j,nei[i]-2,nei[i]) a*=j;
    FOR(j,2,3) a/=j;
    w+=a;
  }
  return w;
}

ll caseA()
{
  ll w=0;
  REP(i,n) if (nei[i]>=2)
  {
    ll a=(nei[i]*(nei[i]-1)/2)*(m-nei[i]);
    int suma=0;
    REP(j,SIZE(t[i])) suma+=(nei[t[i][j]]-1);
    a-=((ll)(nei[i]-1))*suma;
    //fprintf(stderr,"  %d %lld %d\n",i,a,suma);
    w+=a;
  }
  return w+3*tri;
}

ll caseD()
{
  ll w=0;
  REP(i,n) REP(k,SIZE(t[i])) if (nei[i]>=2 && nei[t[i][k]]>=2)
  {
    int j=t[i][k];
    if (i>j) continue;
    w+=(ll)(nei[i]-1)*(nei[j]-1);
  }
  return w-3*tri;
}

char doit()
{
  // wszystkie
  ll all=1;
  FOR(i,n-7,n-2) all*=i;
  FOR(i,2,6) all/=i;
  all*=5*3;
 
  ll lose=1;
  FOR(i,m-2,m) lose*=i;
  FOR(i,2,3) lose/=i;
//  fprintf(stderr,"m = %d\n",m);
//  fprintf(stderr,"lose1 = %lld\n",lose);

  if (lose)
  {
    tri = caseC();
    lose -= caseA();
    lose -= caseB();
    lose -= tri;
    lose -= caseD();
  }
/*  fprintf(stderr,"caseA = %lld\n",caseA());
  fprintf(stderr,"caseB = %lld\n",caseB());
  fprintf(stderr,"caseC = %lld\n",caseC());
  fprintf(stderr,"caseD = %lld\n",caseD());
  fprintf(stderr,"all = %lld\n",all);
  fprintf(stderr,"lose = %lld\n",lose);*/

  ll win=all-lose;
  return (lose*3-win>0) ? 'B' : 'F';
}

string wyn;

void tc()
{
  scanf("%d%d",&n,&h);
  wyn.clear();
  N=CEIL(n,32);
  while (h--)
  {
    REP(i,n) t[i].clear();
    memset(tab,0,sizeof(tab));

    m=0;
    int a,b;
    scanf("%d%d",&a,&b);
    if (a>b) swap(a,b);
    --a; --b;
    REP(i,n) if (i!=a && i!=b)
      FOR(j,i+1,n-1) if (j!=a && j!=b)
      {
        if (i+j<a+b || (i+j==a+b && j<b))
        {
          //printf("%d %d\n",i,j);
          ++m;
          t[i].PB(j);
          tab[i][j/32] |= (1U << (j%32));
          t[j].PB(i);
          tab[j][i/32] |= (1U << (i%32));
        }
      }
    REP(i,n) nei[i]=SIZE(t[i]);

    wyn+=doit();
  }
  puts(wyn.c_str());
}

int main()
{
  int ILE;
  scanf("%d",&ILE);
  FOR(iii,1,ILE)
  {
    printf("Case #%d: ",iii);
    fprintf(stderr,"Case #%d:\n",iii);
    tc();
  }
  return 0;
}
