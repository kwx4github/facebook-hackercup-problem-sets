#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>

using namespace std;
 
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int was[110];
int a[6];
int TIMES=100;

int main()
{
#ifdef Fcdkbear
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
	double beg=clock();
#else
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
#endif
	srand(time(NULL));
	int t;
	scanf("%d",&t);
	FOR(it,0,t)
	{
		int n,h;
		scanf("%d%d",&n,&h);
		printf("Case #%d: ",it+1);
		FOR(c,0,h)
		{
			int c1,c2;
			scanf("%d%d",&c1,&c2);
			c1--;
			c2--;
			//c1=0;
			//c2=1;
			was[c1]=was[c2]=1;
			int msum=c1+c2;
			int mmax=MAX(c1,c2);
			int cnt=0;
			FOR(itt,0,TIMES)
			{
				int sum=0;
				FOR(i,0,6)
				{
					while (1)
					{
						int v=rand()%n;
						if (was[v]==0)
						{
							was[v]=1;
							a[i]=v;
							sum+=v;
							break;
						}
					}
					if (i&1)
					{
						if (sum>msum)
						{
							cnt++;
							break;
						}
						else
							if ((sum==msum) && (MAX(a[i],a[i-1])>mmax))
							{
								cnt++;
								break;
							}
						sum=0;
					}
				}
				FOR(j,0,6)
					was[a[j]]=0;
			}
			if ((TIMES-cnt)*4>TIMES)
				printf("B");
			else
				printf("F");
			was[c1]=was[c2]=0;
		}
		printf("\n");
		fprintf(stderr,"Case #%d done\n",it+1);
	}

#ifdef Fcdkbear
	double end=clock();
	fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}