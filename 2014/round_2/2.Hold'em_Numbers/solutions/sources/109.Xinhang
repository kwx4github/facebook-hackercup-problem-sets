/*
Author: elfness@UESTC
*/
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<iostream>
#include<vector>
#include<string>
using namespace std;
typedef long long LL;
const int V=110;
LL C[V][V];
LL dp[10][V];
char ret[100100];
LL xs[12];
int main()
{
    freopen("B.in","r",stdin);
    freopen("B.out","w",stdout);
	memset(C,0,sizeof(C));
	for(int i=0;i<=100;i++)
	{
		C[i][0]=C[i][i]=1;
		for(int j=1;j<i;j++)
		C[i][j]=C[i-1][j-1]+C[i-1][j];
	}
	xs[0]=1;xs[1]=1;xs[2]=3;xs[3]=15;
	int _;
	scanf("%d",&_);
	for(int ca=1;ca<=_;ca++)
	{
	    int n,H,x,y;
		scanf("%d %d",&n,&H);
		LL all=C[n-2][6]*xs[3];
		for(int h=0;h<H;h++)
		{
			scanf("%d%d",&x,&y);
			if(x>y)swap(x,y);
			memset(dp,0,sizeof(dp));
			dp[0][n+1]=1;
			for(int i=0;i<3;i++)
			for(int j=1;j<=n+1;j++)
			if(dp[i][j]!=0)
			{
			    //printf("%d %d %lld\n",i,j,dp[i][j]);
				for(int k=j-1;k>0;k--)
				{
					if(k==x||k==y)continue;
					int up=x+y-k;
					if(up>=k)break;
					if(k>y)up--;
					if(up-i<=0)break;
					if(up>=x)
					dp[i+1][k]+=dp[i][j]*max(0,up-1-i);
					else
					dp[i+1][k]+=dp[i][j]*max(0,up-i);
				}
			}
			int ls=(x+y)/2;
			LL win=0;
			for(int i=0;i<=3;i++)
			for(int j=1;j<=n+1;j++)
			{
				int re=ls-1-i;
				if(re>=0)
				win+=dp[i][j]*C[re][(3-i)*2]*xs[(3-i)];
			}
			//printf("%lld %lld\n",all,win);
			if(win*4>all)ret[h]='B';
			else ret[h]='F';
		}
		printf("Case #%d: ",ca);
		for(int i=0;i<H;i++)printf("%c",ret[i]);
		puts("");
	}
	return 0;
}
