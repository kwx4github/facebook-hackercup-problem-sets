import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;



public class BR2 {

	private static BufferedReader in;
	private static PrintWriter out;
	private static StringTokenizer input;
	
	public static void main(String[] args) throws IOException {
		//-------------------------------------------------------------------------
		//Initializing...
		new BR2();
		//-------------------------------------------------------------------------
		//put your code here... :)
		
		int test = nextInt();
		for (int cases = 1; cases <= test; cases++) {
			int n = nextInt();
			int h = nextInt();
			StringBuilder ret = new StringBuilder("");
			while(h-->0){
				int c1 = nextInt();
				int c2 = nextInt();
				if(c2>c1){c1^=c2;c2^=c1;c1^=c2;}
				int all = 0;
				int large = 0;
				for (int i = 1; i <= n; i++) {
					if(i==c1 || i == c2 )continue;
					for (int j = 1; j < i; j++) {
						if(j == c1 || j == c2 )continue;
						all++;
						if(i+j > c1+c2 || (i+j == c1+c2 && i > c1))
							large++;
					}	
				}
				if (all > 3*large)ret.append("B");
				else ret.append("F");
			}
			out.println("Case #" + cases + ": "+ret.toString());
		}
		writeln("");
		//-------------------------------------------------------------------------
		//closing up
		end();
		//--------------------------------------------------------------------------

	}
	public BR2() throws IOException {
		//Input Output for Console to be used for trying the test samples of the problem 
		in = new BufferedReader(new InputStreamReader(System.in));
		out = new PrintWriter("BR2.out");
		//-------------------------------------------------------------------------
		//Initalize Stringtokenizer input
		input = new StringTokenizer(in.readLine());
	}

	private static int nextInt() throws IOException {
		if (!input.hasMoreTokens())input=new StringTokenizer(in.readLine());
		return Integer.parseInt(input.nextToken());
	}
	private static long nextLong() throws IOException {
		if (!input.hasMoreTokens())input=new StringTokenizer(in.readLine());
		return Long.parseLong(input.nextToken());
	}
	private static double nextDouble() throws IOException {
		if (!input.hasMoreTokens())input=new StringTokenizer(in.readLine());
		return Double.parseDouble(input.nextToken());
	}
	private static String nextString() throws IOException {
		if (!input.hasMoreTokens())input=new StringTokenizer(in.readLine());
		return input.nextToken();
	}
	private static void write(String output){
		out.write(output);
		out.flush();
	}
	private static void writeln(String output){
		out.write(output+"\n");
		out.flush();
	}
	private static void end() throws IOException{
		in.close();
		out.close();
		System.exit(0);
	}

	

}
