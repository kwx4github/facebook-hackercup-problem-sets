#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <memory.h>
#include <ctime>
using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<string> VS;

#define sz size()
#define mp make_pair()
#define pb push_back
#define ALL(a) (a).begin(), (a).end()
#define RALL(a) (a).rbegin(), (a).rend()
#define FOR(i,a,b) for (int i(a),_b(b); i < _b; ++i)
#define RFOR(i,a,b) for (int i((a)-1),_b(b); i>=_b; --i)
#define CLR(a,x) memset((a), (x), sizeof(a))

char CHAR_BUFFER[1<<20];

int gi() {
  int x;
  scanf("%d", &x);
  return x;
}

string gs() {
  gets(CHAR_BUFFER);
  return string (CHAR_BUFFER);
}

template <class T> T gcd(T a, T b) {
  return (a == 0 ? b : gcd(b%a, a));
}
////////////////////////////////////////////////////////////////

int R[8];

int N;
int X[1111];
LL P[1111][1111];
LL T[1111][1111];
void dfs(int x) {
  if (x==8) {
    int mxA = 0;
    int mxB = 0;
    FOR(i,0,4) {
      if (mxA+mxB < R[i*2]+R[i*2+1] ||
          mxA+mxB == R[i*2]+R[i*2+1] &&
          max(mxA,mxB) < max(R[i*2+1],R[i*2])) {
        mxA = R[i*2];
        mxB = R[i*2+1];
      }
    }
    T[R[0]][R[1]]++;
    T[R[2]][R[3]]++;
    T[R[4]][R[5]]++;
    T[R[6]][R[7]]++;
    P[mxA][mxB]++;
    return;
  }
  FOR(i,0,N) if (!X[i]) {
    X[i]=1;
    R[x]=i+1;
    dfs(x+1);
    X[i]=0;
  }
}



int lss(PII a, PII b) {
  return a.first+a.second < b.first + b.second ||
            (a.first+a.second == b.first + b.second &&
            max(a.first,a.second) < max(b.first,b.second));
}

void srt(vector<PII> &r) {
  FOR(i,0,r.sz) if (r[i].first>r[i].second) swap(r[i].first,r[i].second);
  FOR(i,0,r.sz) FOR(j,i+1,r.sz) {
      if (lss(r[i],r[j])) {
        swap(r[i],r[j]);
      }
    }
}

int sim(int a, int b, int N) {
  int X[6];
  int was[100] = {0};
  int total = 0;
  int win = 0;
  was[a] = 1;
  was[b] = 1;
  FOR(iter,0,1000000) {
    FOR(i,0,6) {
      int x = rand()%N+1;
      while (was[x]) {
        x = rand()%N+1;
      }
      R[i] = x;
      was[x]=1;
    }
    win += !lss(PII(a,b), PII(R[0],R[1])) &&
        !lss(PII(a,b), PII(R[2],R[3])) &&
        !lss(PII(a,b), PII(R[4],R[5]));
    total++;

    FOR(i,0,6) was[R[i]]=0;
  }
  return win*4>total;
}

void solveTest() {
  int N;
  cin >> N;
  vector<PII> R;
  FOR(i,0,N+1) FOR(j,i+1,N+1) {
    R.pb(PII(i,j));
  }
  srt(R);
  int l = 0;
  int r = R.sz-1;
  int best = l;
  while(l<=r) {
    int m = (l+r)/2;
    if (sim(R[m].first, R[m].second, N)) {
      best=m;
      l=m+1;
    } else r=m-1;
  }
  int M;
  cin >> M;
  FOR(i,0,M) {
    int a, b;
    cin >> a >> b;
    if (!lss(PII(a,b),R[best])) {
      printf("B");
    } else {
      printf("F");
    }
  }
  printf("\n");
}

int main() {
  freopen("in.txt", "r", stdin);
  freopen("out.txt", "w", stdout);


  /* TEST GEN
  freopen("in.txt", "w", stdout);
  printf("1\n500 500\n"); FOR(i,0,500) printf("%s\n", string(500,'.').c_str());
  exit(0);
  //*/
  clock_t beginTime = clock();

  int numberOfTests;
  cin >> numberOfTests;
  for (int testCase = 1; testCase <= numberOfTests; ++testCase) {
    printf("Case #%d: ", testCase);
    clock_t testBeginTime = clock();
    solveTest();
    fprintf(stderr, "Test %3d: %.3lf sec\n",
        testCase,
        1.0 * (clock() - testBeginTime) / CLOCKS_PER_SEC);
  }

  fprintf(stderr, "   Total: %.3lf sec\n", 1.0 * (clock() - beginTime) / CLOCKS_PER_SEC);
  return 0;
}
