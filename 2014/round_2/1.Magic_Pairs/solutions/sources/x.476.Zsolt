

def calc_diff n, m, x1, a1, b1, c1, r1, x2, a2, b2, c2, r2
  had1 = { x1 => true }
  had2 = { x2 => true }
  hadc1 = 1
  hadc2 = 1
  hads1 = x1
  hads2 = x2
  board1 = [ x1 ]
  board2 = [ x2 ]
  result = x1 == x2 ? 1 : 0 # first is good if equals


  diff = x1 == x2 ? {} : { x1 => true, x2 => true }

  ch = false
  pg1 = pg2 = (x1 == x2)
  good = x1 == x2
  1.upto([n, m].min - 1).map do |i|
    board1 << (bb1 = ((a1 * board1[(i-1) % n] + b1 * board2[(i-1) % m] + c1) % r1))
    board2 << (bb2 = ((a2 * board1[(i-1) % n] + b2 * board2[(i-1) % m] + c2) % r2))

    if !had1[bb1]
      hadc1 += 1
      had1[bb1] = true
      hads1 += bb1
      ch = true

      if diff[bb1] == :b2
        diff.delete bb1
      else
        diff[bb1] = :b1
      end

      pg1 = false

      return result if bb1 >= r2
    else
      result += 1 if pg1 && !had2[bb2]
    end

    if !had2[bb2]
      hadc2 += 1
      had2[bb2] = true
      hads2 += bb2
      ch = true

      if diff[bb2] == :b1
        diff.delete bb2
      else
        diff[bb2] = :b2
      end

      pg2 = false

      return result if bb2 >= r1
    else
      result += 1 if pg2 && !had1[bb1]
    end

    if ch
      good = diff.empty?
      if good
        pg1 = true
        pg2 = true
      end
    end
    if good
      result += 1
    end
    ch = false
  end

  [n, m].min.upto([n, m].max - 1) do |i|
    board1 << (bb1 = ((a1 * board1[(i-1) % n] + b1 * board2[(i-1) % m] + c1) % r1))
    board2 << (bb2 = ((a2 * board1[(i-1) % n] + b2 * board2[(i-1) % m] + c2) % r2))

    if !had1[bb1]
      hadc1 += 1
      had1[bb1] = true
      hads1 += bb1
      ch = true

      if diff[bb1] == :b2
        diff.delete bb1
      else
        diff[bb1] = :b1
      end

      pg1 = false

      return result if bb1 >= r2
    else
      result += 1 if pg1 && !had2[bb2]
    end

    if !had2[bb2]
      hadc2 += 1
      had2[bb2] = true
      hads2 += bb2
      ch = true

      if diff[bb2] == :b1
        diff.delete bb2
      else
        diff[bb2] = :b2
      end

      pg2 = false

      return result if bb2 >= r1
    else
      result += 1 if pg2 && !had1[bb1]
    end

    if ch
      good = diff.empty?
      if good
        pg1 = true
        pg2 = true
      end
    end
    if good
      result += 1
    end
    ch = false
  end

  result
end

File.open(ARGV[0], 'r') do |f|
  pc = f.gets.to_i
  1.upto(pc) do |pp|
    n, m = f.gets.split.map(&:to_i)

    a = f.gets.split.map(&:to_i)
    b = f.gets.split.map(&:to_i)

    r = calc_diff n, m, *a, *b

    puts "Case ##{pp}: #{r}"

  end
end