#include<stdio.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<iostream>
#include<algorithm>
using namespace std;
#define maxn 1010101
int board[2][maxn],board2[maxn];
int A[2],B[2],C[2],x[2],r[2];
int IN[2];

set<int>se1,se2;
void gene(){
	board[0][0]=x[0];
	board[1][0]=x[1];
	int i,j;
	for(i=1;i<IN[0]||i<IN[1];i++){
		for(j=0;j<2;j++){
			if(i>=IN[j])continue;
			board[j][i]=(A[j]*1LL * board[0][(i-1)%IN[0]] + B[j]*1LL*board[1][(i-1)%IN[1]] + C[j])%r[j];
		}
	}
}
long long calc(){
	
	long long ans=0,sum=0;
	int k=0;
	int i,j;
	for(i=0;i<IN[0];i++){
		if(se1.find(board[0][i])!=se1.end()){
			ans+=sum;
			continue;
		}
		se1.insert(board[0][i]);
		sum=0;
		for(j=k;j<IN[1];j++){
			if(se1.find(board[1][j])!=se1.end()){
				se2.insert(board[1][j]);
				if(se2.size()==se1.size()){
					sum++;
				}
			}else break;
		}
		k=j;
		ans+=sum;
	}
	return ans;
}
int main()
{
	freopen("1.in","r",stdin),freopen("1.out","w",stdout);
	int i,j,k;
	int t,tcas;
	scanf("%d",&t);
	for(tcas=1;tcas<=t;tcas++){
		
		se1.clear();
		se2.clear();
		scanf("%d%d",&IN[0],&IN[1]);
		for(i=0;i<2;i++){
			scanf("%d%d%d%d%d",&x[i],&A[i],&B[i],&C[i],&r[i]);
		}
		gene();

		printf("Case #%d: ",tcas);
		cout<<calc()<<endl; 
	}
}
