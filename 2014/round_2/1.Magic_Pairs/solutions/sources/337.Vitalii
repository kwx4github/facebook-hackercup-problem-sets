#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <memory.h>
#include <ctime>
using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<string> VS;

#define sz size()
#define mp make_pair()
#define pb push_back
#define ALL(a) (a).begin(), (a).end()
#define RALL(a) (a).rbegin(), (a).rend()
#define FOR(i,a,b) for (int i(a),_b(b); i < _b; ++i)
#define RFOR(i,a,b) for (int i((a)-1),_b(b); i>=_b; --i)
#define CLR(a,x) memset((a), (x), sizeof(a))

char CHAR_BUFFER[1<<20];

int gi() {
  int x;
  scanf("%d", &x);
  return x;
}

string gs() {
  gets(CHAR_BUFFER);
  return string (CHAR_BUFFER);
}

template <class T> T gcd(T a, T b) {
  return (a == 0 ? b : gcd(b%a, a));
}
////////////////////////////////////////////////////////////////

int B1[1111111];
int B2[1111111];

void solveTest() {
  int N,M;
  int x1, a1, b1, c1, r1;
  int x2, a2, b2, c2, r2;
  scanf("%d%d",&N,&M);
  scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
  scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);

  B1[0] = x1;
  B2[0] = x2;
  FOR(i,1,max(N,M)) {
    if (i < N) B1[i] = ((LL) a1 * B1[(i-1) % N] + (LL) b1 * B2[(i-1) % M] + c1) % r1;
    if (i < M) B2[i] = ((LL) a2 * B1[(i-1) % N] + (LL) b2 * B2[(i-1) % M] + c2) % r2;
  }
  LL res = 0;

  //FOR(i,0,N) cout << B1[i] << ", "; cout << endl;
  //FOR(i,0,M) cout << B2[i] << ", "; cout << endl;

  set<int> AA;
  int p1 = 0;
  int p2 = 0;
  while(p1 < N && p2 < M) {
    //printf("ST(%d,%d)\n", p1, p2);
    set<int> A1;
    set<int> A2;
    if (B1[p1] == B2[p2]) {
      AA.insert(B1[p1]);
      ++p1;
      ++p2;
    } else {
      if (!AA.count(B1[p1])) A1.insert(B1[p1++]);
      if (!AA.count(B2[p2])) A2.insert(B2[p2++]);
    }

    while(A1.size() || A2.size()) {
      /*
      printf("[p1=%d, p2=%d]\n", p1,p2);
      printf("set AA: ("); for (set<int>::iterator it = AA.begin(); it != AA.end(); ++it) {
        printf("%d,",*it);
      } printf(");\n");
      printf("set A1: ("); for (set<int>::iterator it = A1.begin(); it != A1.end(); ++it) {
        printf("%d,",*it);
      } printf(");\n");
      printf("set A2: ("); for (set<int>::iterator it = A2.begin(); it != A2.end(); ++it) {
        printf("%d,",*it);
      } printf(");\n");//*/

      if (p2==M && p1==N) break;
      if (A1.size()>A2.size() && p2<M || p1==N)  {
        int x = B2[p2++];
        if (A1.count(x)) {
          A1.erase(x);
          AA.insert(x);
        } else {
          if (!AA.count(x)) {
            A2.insert(x);
          }
        }
      } else {
        int x = B1[p1++];
        if (A2.count(x)) {
          A2.erase(x);
          AA.insert(x);
        } else {
          if (!AA.count(x)) {
            A1.insert(x);
          }
        }
      }
    }
    //printf("  F(%d,%d)\n", p1, p2);
    if (A1.sz==0 && A2.sz==0) {
      int p1_e = p1;
      int p2_e = p2;
      while(p1_e < N && AA.count(B1[p1_e])) ++p1_e;
      while(p2_e < M && AA.count(B2[p2_e])) ++p2_e;
      //printf("   EN(%d,%d)\n", p1_e, p2_e);
      res += (LL) (p1_e-p1+1) * (LL) (p2_e-p2+1);
      p1 = p1_e;
      p2 = p2_e;
    }
  }
  cout << res << endl;
}

int main() {
  freopen("in.txt", "r", stdin);
  freopen("out.txt", "w", stdout);


  /* TEST GEN
  freopen("in.txt", "w", stdout);
  printf("1\n500 500\n"); FOR(i,0,500) printf("%s\n", string(500,'.').c_str());
  exit(0);
  //*/
  clock_t beginTime = clock();

  int numberOfTests;
  cin >> numberOfTests;
  for (int testCase = 1; testCase <= numberOfTests; ++testCase) {
    printf("Case #%d: ", testCase);
    clock_t testBeginTime = clock();
    solveTest();
    fprintf(stderr, "Test %3d: %.3lf sec\n",
        testCase,
        1.0 * (clock() - testBeginTime) / CLOCKS_PER_SEC);
  }

  fprintf(stderr, "   Total: %.3lf sec\n", 1.0 * (clock() - beginTime) / CLOCKS_PER_SEC);
  return 0;
}
