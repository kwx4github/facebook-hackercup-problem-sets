#include <cstdio>
#include <set>

using namespace std;

#define lmax 1000111

long long n,m,T,x1,x2,a1,a2,b1,b2,c1,c2,r1,r2,sol, nn;
set<long long> A1, A2;
long long X1[lmax], X2[lmax];

int main() {
  long long ii, i, j, x,sti,stj;
  freopen("a.in", "r", stdin);
  scanf("%lld", &T);
  for (ii = 1; ii <= T; ++ii) {
    scanf("%lld %lld", &n, &m);
    scanf("%lld %lld %lld %lld %lld", &x1, &a1, &b1, &c1, &r1);
    scanf("%lld %lld %lld %lld %lld", &x2, &a2, &b2, &c2, &r2);
    X1[0] = x1;
    X2[0] = x2;
    for (i = 0; i < n || i < m; ++i) {
      X1[i + 1] = (a1 * X1[i % n] + b1 * X2[i % m] + c1) % r1;
      X2[i + 1] = (a2 * X1[i % n] + b2 * X2[i % m] + c2) % r2;
    }
    A1.clear();
    A1.insert(x1);
    A2.clear();
    sol = 0;
    i = 1;
    j = 0;
    nn = 0;
    while (1) {
      if (A1.size() < A2.size()) {
        if (i == n) break;
        x = X1[i];
        i++;
        if (A1.find(x) != A1.end()) {
          continue;
        }
        A1.insert(x);
        if (A2.find(x) != A2.end()) {
          nn++;
        }
      } else if (A1.size() > A2.size()) {
        if (j == m) break;
        x = X2[j];
        j++;
        if (A2.find(x) != A2.end()) {
          continue;
        }
        A2.insert(x);
        if (A1.find(x) != A1.end()) {
          nn++;
        }
      } else {
        for(sti=i; i < n && A1.find(X1[i]) != A1.end();++i);
        for(stj=j; j < m && A2.find(X2[j]) != A2.end();++j);
        if (nn == A1.size()) {
          sol += (i - sti + 1) * (j - stj + 1);
        }
        if (i < n) {
          if (A2.find(X1[i]) != A2.end()) {
            nn++;
          }
          A1.insert(X1[i++]);
        } else if (j < m) {
          if (A1.find(X2[j]) != A1.end()) {
            nn++;
          }
          A2.insert(X2[j++]);
        } else {
          break;
        }
      }
    }
    printf("Case #%lld: %lld\n", ii, sol);
  }
  return 0;
}
