#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <set>
#include <map>
#include <vector>
#include <string>
#include <cmath>
#include <cstring>
#include <queue>
#include <stack>
#include <algorithm>
#include <sstream>
#include <numeric>
using namespace std;

#define f first
#define s second
#define mp make_pair
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define forit(it,S) for(__typeof(S.begin()) it = S.begin(); it != S.end(); ++it)
#ifdef WIN32
#define I64d "%I64d"
#else
#define I64d "%lld"
#endif

typedef pair <int, int> pi;
typedef vector <int> vi;
typedef long long ll;

int a[1111111], b[1111111];
int n, m;
map <int, int> pa, pb;

long long calc(int a[], int b[], map <int, int> &pa, map <int, int> &pb, int n, int m) {
    long long res = 0;
    int mx = -1, i = -1, k = -1;
    for (int j = 0; j < m; ++j) {
        if (!pa.count(b[j])) {
            return res;
        }
        int target = pa[b[j]];
        while (i < target) {
            ++i;
            if (!pb.count(a[i])) {
                return res;
            }
            mx = max(mx, pb[a[i]]);
        }
        if (mx <= j) {
            if (k < i) k = i;
            while (k < n) {
                if (!pb.count(a[k]) || pb[a[k]] > j) {
                    break;
                }
                ++k;
            }
            res += k - i;
        }
    }
    return res;
}

int main() {
    int tests;
    scanf("%d", &tests);
    for (int casenum = 1; casenum <= tests; ++casenum) {
        printf("Case #%d: ", casenum);
        scanf("%d%d", &n, &m);
        int x1, a1, b1, c1, r1, x2, a2, b2, c2, r2;
        scanf("%d%d%d%d%d", &x1, &a1, &b1, &c1, &r1);
        scanf("%d%d%d%d%d", &x2, &a2, &b2, &c2, &r2);
        a[0] = x1, b[0] = x2;
        
        for (int i = 1, j = 0, k = 0; i < max(n, m); ++i, ++j, ++k) {
            if (j == n) j = 0;
            if (k == m) k = 0;
            a[i] = (1LL * a1 * a[j] + 1LL * b1 * b[k] + c1) % r1;
            b[i] = (1LL * a2 * a[j] + 1LL * b2 * b[k] + c2) % r2;
        }
        /*for (int i = 0; i < n; ++i) {
            printf("%d ", a[i]);
        }
        puts("");
        for (int i = 0; i < m; ++i) {
            printf("%d ", b[i]);
        }
        puts("");*/
        
        
        pa.clear();
        pb.clear();
        for (int i = n - 1; i >= 0; --i) {
            pa[a[i]] = i;
        }
        for (int j = m - 1; j >= 0; --j) {
            pb[b[j]] = j;
        }
        
        long long res = calc(a, b, pa, pb, n, m);
        res += calc(b, a, pb, pa, m, n);
        
        cout << res / 2 << endl;
    }
    return 0;
}