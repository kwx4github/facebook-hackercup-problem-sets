#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <ctime>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <list>
#include <set>
#include <map>
#include <iostream>

#define pb push_back
#define mp make_pair
#define TASKNAME ""

#ifdef LOCAL
#define eprintf(...) fprintf(stderr,__VA_ARGS__)
#else
#define eprintf(...)
#endif

#define TIMESTAMP(x) eprintf("[" #x "] Time = %.3lfs\n",clock()*1.0/CLOCKS_PER_SEC)

#ifdef linux
#define LLD "%lld"
#else
#define LLD "%I64d"
#endif

#define sz(x) ((int)(x).size())

using namespace std;

typedef long double ld;
typedef long long ll;
typedef vector<ll> vll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef pair<int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef vector<pli> vpli;
typedef vector<pii> vpii;

const int inf = 1e9;
const double eps = 1e-9;
const int INF = inf;
const double EPS = eps;

#ifdef LOCAL
struct __timestamper {
  ~__timestamper(){
    TIMESTAMP(end);
  }
} __Timestamper;
#endif

/*Template end*/

const int maxn = 1123123;
int A[2], Bb[2], Cc[2], R[2], N[2];
int B[2][maxn];
int C[2][maxn], E[2], L[2][maxn];
set <int> S;
int sum;
map <int, int> M;

void add (int v)
{
  if (M.count(v))
  {
    assert(M[v]==1);
    M[v]++, sum++;
    return;
  }
  M[v]=1;
}

int main()
{
  int cnt, tst;
  int i, it, j;
  #ifdef LOCAL
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  #endif
  scanf("%d", &tst);
  for (cnt=1; cnt<=tst; cnt++)
  {
    cerr<<cnt<<endl;
    printf("Case #%d: ", cnt);
    scanf("%d%d", &N[0], &N[1]);
    for (it=0; it<2; it++)
      scanf("%d%d%d%d%d", &B[it][0], &A[it], &Bb[it], &Cc[it], &R[it]);
    for (i=0; i<max(N[0],N[1]); i++)
      for (it=0; it<2; it++) 
        B[it][i+1]=(A[it]*1ll*B[0][i%N[0]]+Bb[it]*1ll*B[1][i%N[1]]+Cc[it])%R[it];  
    /*for (it=0; it<2; it++)
    {
      for (i=0; i<N[it]; i++)
        cerr<<B[it][i]<<" ";
      cerr<<endl;
    }*/
    for (it=0; it<2; it++)
    {  
      S.clear(), E[it]=0;
      for (i=0; i<N[it]; )
      {
        j=i, S.insert(B[it][i]);
        while (i<N[it] && S.count(B[it][i]))
          i++;
        C[it][E[it]]=B[it][j], L[it][E[it]]=i-j, E[it]++;
      }
    }
    sum=0, M.clear();
    ll res=0;
    for (i=0; i<min(E[0],E[1]); i++)
    {
      add(C[0][i]), add(C[1][i]);
      if (sum==(int)M.size())
        res+=L[0][i]*1ll*L[1][i];
    }
    printf("%I64d\n", res);
  }
  return 0;
}
