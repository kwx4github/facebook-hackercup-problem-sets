package round2;

import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class A {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int cases = sc.nextInt();
		for (int caze = 1; caze <= cases; caze++) {
			int N = sc.nextInt();
			int M = sc.nextInt();
			long x1 = sc.nextLong();
			long a1 = sc.nextLong();
			long b1 = sc.nextLong();
			long c1 = sc.nextLong();
			long r1 = sc.nextLong();
			long x2 = sc.nextLong();
			long a2 = sc.nextLong();
			long b2 = sc.nextLong();
			long c2 = sc.nextLong();
			long r2 = sc.nextLong();
			int[] board1 = new int[N], board2 = new int[M];
			board1[0] = (int)x1;
			board2[0] = (int)x2;
			for (int i=1;i< Math.max(N, M);i++) {
				if (i<N) {
					board1[i] = (int)((a1 * board1[(i-1) % N] + b1 * board2[(i-1) % M] + c1) % r1);
				}
				if (i<M) {
					board2[i] = (int)((a2 * board1[(i-1) % N] + b2 * board2[(i-1) % M] + c2) % r2);
				}
			}
			long ans = 0;
			Set<Integer> common = new HashSet<Integer>();
			Set<Integer> first = new HashSet<Integer>(), second = new HashSet<Integer>();
			int pos2 = 0, lastSum = 0;
			boolean ok = false;
			
			for (int pos1 = 0; pos1 < N; pos1++) {
				int next1 = board1[pos1];
				if (!common.contains(next1) && !first.contains(next1)) {
					if (second.contains(next1)) {
						second.remove(next1);
						common.add(next1);
					} else {
						first.add(next1);
					}
					while (first.size() > second.size() && pos2 < M) {
						int next2 = board2[pos2];
						if (first.contains(next2)) {
							first.remove(next2);
							common.add(next2);
						} else if (common.contains(next2)) {
							
						} else {
							second.add(next2);
						}
						pos2++;
					}
					ok = first.isEmpty() && second.isEmpty();
					if (ok) {
						lastSum = 1;
						while (pos2 < M && (common.contains(board2[pos2]) || second.contains(board2[pos2]))) {
							pos2++;
							lastSum++;
						}
					} else {
						lastSum = 0;
					}
					ans += lastSum;
				} else {
					ans += lastSum;
				}
			}
			
			
			System.out.println("Case #" + caze + ": " + ans);
		}
	}

}
