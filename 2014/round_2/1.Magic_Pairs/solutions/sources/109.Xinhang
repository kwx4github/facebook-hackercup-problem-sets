/*
Author: elfness@UESTC
*/
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<iostream>
#include<vector>
#include<string>
#include<map>
using namespace std;
typedef long long LL;
const int V=1001000;
int pa[V],pb[V],na[V],nb[V],ta,tb,a[V],b[V];
int main()
{
    freopen("A.in","r",stdin);
    freopen("A.out","w",stdout);
	int _;
	scanf("%d",&_);
	for(int ca=1;ca<=_;ca++)
	{
		int n,m,x1,a1,b1,c1,r1,x2,a2,b2,c2,r2;
		scanf("%d%d",&n,&m);
		scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
		scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);
		a[0]=x1,b[0]=x2;
		for(int i=1;i<max(n,m);i++)
		{
			a[i]=((LL)a1*a[(i-1)%n]%r1+(LL)b1*b[(i-1)%m]%r1+c1)%r1;
			b[i]=((LL)a2*a[(i-1)%n]%r2+(LL)b2*b[(i-1)%m]%r2+c2)%r2;
		}
		//for(int i=0;i<n;i++)printf("%d ",a[i]);puts("");
		//for(int i=0;i<m;i++)printf("%d ",b[i]);puts("");
		a[n++]=-1;
		b[m++]=-1;
		map<int,int> A,B;
		ta=0,tb=0;
		A.clear();
		for(int i=0;i<n;i++)
		{
			if(A.find(a[i])==A.end())
			{
				A[a[i]]=1;
				pa[ta]=i;
				na[ta++]=a[i];
			}
		}
		A.clear();
		B.clear();
		for(int i=0;i<m;i++)
		{
			if(B.find(b[i])==B.end())
			{
				B[b[i]]=1;
				pb[tb]=i;
				nb[tb++]=b[i];
			}
		}
		B.clear();
		//for(int i=0;i<ta;i++)printf("%d %d\n",pa[i],na[i]);
		//for(int i=0;i<tb;i++)printf("%d %d\n",pb[i],nb[i]);
		int pta=0,ptb=0;
		int onlya=0,onlyb=0;
		LL ret=0;
		ta--;tb--;
		while(1)
		{
			if(pta==ta&&ptb==tb)break;
			int add=0;
			if(ptb==tb||(onlyb>0&&pta!=ta))
			{
				if(B.find(na[pta])==B.end())
				{
					A[na[pta]]=1;
					onlya++;
				}
				else
				{
					onlyb--;
				}
				add=0;
			}
			else
			{
				if(A.find(nb[ptb])==A.end())
				{
					B[nb[ptb]]=1;
					onlyb++;
				}
				else
				{
					onlya--;
				}
				add=1;
			}
			if(add==0)ptb--;
			else pta--;
			if(onlya==0&&onlyb==0)
			{
                ret+=(LL)(pa[pta+1]-pa[pta])*(pb[ptb+1]-pb[ptb]);
                //printf("%d %d %d %d\n",pa[pta],pa[pta+1],pb[ptb],pb[ptb+1]);
			}
			pta++;ptb++;
		}
		printf("Case #%d: %lld\n",ca,ret);
	}
	return 0;
}
