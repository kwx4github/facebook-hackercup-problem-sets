/*
	Author : ChnLich
*/
#include<cstdio>
#include<cmath>
#include<iomanip>
#include<cstring>
#include<cstdlib>
#include<ctime>
#include<iostream>
#include<sstream>
#include<fstream>
#include<algorithm>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<deque>
#include<set>
#include<map>
#include<string>
#include<bitset>
#include<functional>
#include<utility>

using namespace std;

typedef long long llint;
typedef pair<int,int> ipair;
typedef unsigned int uint;
#define pb push_back
#define fi first
#define se second
#define mp make_pair

const int MOD=1000000007,dx[]={0,1,0,-1},dy[]={1,0,-1,0};
const double eps=1e-8;

void read(int &k)
{
	k=0; char x=getchar();
	while(x<'0'||x>'9') x=getchar();
	while(x>='0'&&x<='9') { k=k*10-48+x; x=getchar(); }
}

set<int> A,B,C,D;
int n,m,a[1000010],b[1000010],T;

int main()
{
	freopen("A.in","r",stdin);
	freopen("A.out","w",stdout);
	
	scanf("%d",&T);
	for(int tt=1;tt<=T;tt++)
	{
		A.clear();
		B.clear();
		C.clear();
		D.clear();
		int x1,a1,b1,c1,r1,x2,a2,b2,c2,r2;
		scanf("%d%d",&n,&m);
		scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
		scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);
		a[0]=x1; b[0]=x2;
		for(int i=1;i<n||i<m;i++)
		{
			a[i]=(1ll*a1*a[(i-1)%n]+1ll*b1*b[(i-1)%m]+c1)%r1;
			b[i]=(1ll*a2*a[(i-1)%n]+1ll*b2*b[(i-1)%m]+c2)%r2;
		}
		llint ans=0;
		for(int i=0,j=0;;)
		{
			while(i<n&&C.find(a[i])!=C.end()) i++;
			if (i==n) break;
			A.insert(a[i]);
			C.insert(a[i]);
			i++;
			int flag=1;
			while((!A.empty()||!B.empty())&&flag)
			{
				flag=0;
				while(!A.empty()&&j<m)
				{
					if (A.find(b[j])!=A.end())
						A.erase(b[j]);
					else if (D.find(b[j])==D.end())
						B.insert(b[j]);
					D.insert(b[j]);
					j++;
					flag=1;
				}
				while(!B.empty()&&i<n)
				{
					if (B.find(a[i])!=B.end())
						B.erase(a[i]);
					else if (C.find(a[i])==C.end())
						A.insert(a[i]);
					C.insert(a[i]);
					i++;
					flag=1;
				}
			}
			if (A.empty()&&B.empty())
			{
				int p=i,q=j;
				while(i<n&&C.find(a[i])!=C.end()) i++;
				while(j<m&&D.find(b[j])!=D.end()) j++;
				ans+=1ll*(i-p+1)*(j-q+1);
			} else break;
		}
		printf("Case #%d: %I64d\n",tt,ans);
	}
	
	return 0;
}
