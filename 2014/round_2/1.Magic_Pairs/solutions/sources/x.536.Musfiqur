/*
Author :: MD. Musfiqur Rahman Sanim
Aust cse 28th Batch
ID:11.02.04.097
*/


//{ Template
using namespace std;
//{ C-headers
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <climits>
#include <cfloat>
#include <cctype>
#include <cassert>
#include <ctime>
//}
//{ C++-headers
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <utility>
#include <string>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <map>
//}
//{ Loops
#define forab(i,a,b) for (__typeof(b) i = (a); i <= (b); ++i)
#define rep(i,n) forab (i, 0, (n) - 1)
#define For(i,n) forab (i, 1, n)
#define rofba(i,a,b) for (__typeof(b) i = (b); i >= (a); --i)
#define per(i,n) rofba (i, 0, (n) - 1)
#define rof(i,n) rofba (i, 1, n)
#define forstl(i,s) for (__typeof ((s).end ()) i = (s).begin (); i != (s).end (); ++i)
//}
//{ Floating-points
#define EPS 1e-7
#define abs(x) (((x) < 0) ? - (x) : (x))
#define zero(x) (abs (x) < EPS)
#define equal(a,b) (zero ((a) - (b)))
#define PI 2*acos (0.0)
//}
typedef long long int64;
typedef unsigned long long int64u;
#define memo(a,v) memset(a,v,sizeof(a))
#define all(a) a.begin(),a.end()
#define db double
#define pb push_back
#define pii pair<int ,int >
#define NL puts("")
//{
//Intput_Output
#define II ({ int a; scanf("%d",&a); a;})
#define IL ({ int64 a; scanf("%lld",&a);  a;})
#define ID ({ db a; scanf("%lf",&a);  a;})
#define IC ({ char a; scanf("%c",&a);  a;})
#define IS ({ string a; cin >> a;  a;})
#define ICA(n) ({ char a[n]; scanf("%s",&a);  a;})
#define OC printf("Case #%d:",cs);
//}
//}
template <class T, class U> inline T max (T &a, U &b)
{
    return a > b ? a : b;
}
template <class T, class U> inline T min (T &a, U &b)
{
    return a < b ? a : b;
}
template <class T, class U> inline T swap (T &a, U &b)
{
    T tmp = a;
    a = b;
    b = tmp;
}
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[6]={2,1,-1,-2,-1,1};int dy[6]={0,1,1,0,-1,-1}; //Hexagonal Direction

const int INF = 1e9;
const int mx = 1e6 + 7;
const int hi = 250000;
const db pi = PI;
int EQ(double d) {
    if ( fabs(d) < EPS ) return 0;
    return d > EPS ? 1 : -1 ;
}
int64 N[mx],M[mx];
map<int ,bool>NN,MM;
map<int ,int >top;
int main() {
#ifdef Sanim
    freopen ("in.txt", "r", stdin);
    //freopen ("out.txt", "w", stdout);
#endif
    int t = II;
    For(cs,t) {
        NN.clear(),MM.clear(),top.clear();
        int n = II,m = II;
        int x1 = II, a1 = II, b1 = II, c1 = II, r1 = II,x2 = II, a2 = II, b2 = II, c2 = II, r2 = II;

        N[0] = x1;
        M[0] = x2;
        int Max = max(n,m);
        For(i,Max-1){
            if(i<n) N[i] = (a1 * N[((i-1+n) % n)] + b1 * M[((i-1+m) % m)] + c1) % r1;
            if(i<m) M[i] = (a2 * N[((i-1+n) % n)] + b2 * M[((i-1+m) % m)] + c2) % r2;
        }
        //rep(i,n) cout << N[i] << " ";NL;
        //rep(i,m) cout << M[i] << " ";NL;
        int ans = 0,l = 0,h = 0,nn = 0,mm = 0,com = 0,np = 0,mp,nc = 0,mc = 0,prev = 0;
        bool flag = false;
        while(l<n || h<m){
            if(l<n && NN.find(N[l]) == NN.end()){
                NN[N[l]] = true;
                top[N[l]]++;
                if(top[N[l]] == 2) com++;
                nn++;
            }
            if(h < m && MM.find(M[h]) == MM.end()){
                MM[M[h]] = true;
                top[M[h]]++;
                if(top[M[h]] == 2) com ++;
                mm++;
            }
            if(nn == np && l!=n) nc++;
            else if(l!=n)nc = 1;
            if(mm == mp && h!=m ) mc++;
            else if(h!=m)mc = 1;
            if(flag && prev == com){
                if(nn == com || mm == com) ans++;
                else flag = false;
            }
            else if(nn == mm && mm == com) {
                if(com == np) ans += nc;
                else if(com == mp) ans += mc;
                else ans++;
                flag = true;
            }
            else flag = false;
            //cout << nn << " " << mm << " " << com << " " <<ans<< endl;
            l++,h++;
            np = nn,mp = mm;
            prev = com;
        }
        OC;
        cout << " " << ans << endl;

    }
    return 0;
}
