
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<climits>
#include<sstream>

#include<algorithm>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef vector<string> vs; 
typedef pair<int,int> pii;
typedef long long int lld;
typedef long double Lf;
typedef unsigned long long int llu;
   template <typename T>
ostream& operator <<(ostream &o,vector < T >  &v)
{
   for(typeof(v.size()) i=0;i<v.size();++i)
      o<<v[i]<<" ";
   o<<endl;
   return o;
}
template < class T1, class T2, class T3 > 
struct trio{
   T1 first;
   T2 second;
   T3 third;
   trio(): first(T1()),second(T2()),third(T3()){}
   trio(const T1 &x, const T2 &y, const T3 &z): first(x),second(y),third(z){}
   template < class X, class Y, class Z >
      trio (const trio < X, Y , Z > &p) : first(p.first),second(p.second), third(p.third){}

};
typedef trio < int, int , int > tiii;
   template < class T1, class T2, class T3 > 
bool operator < (const trio < T1, T2 , T3 > &x,const trio < T1, T2 , T3 > &y)
{
   if(x.first<y.first) return true;
   else if(x.first> y.first) return false;
   if(x.second<y.second) return true;
   else if(x.second> y.second) return false;
   if(x.third<y.third) return true;
   else if(x.third> y.third) return false;
   return true;
}

#define sz(a)                        int((a).size()) 
#define pb                           push_back 
#define mp                           make_pair
#define F                            first
#define S                            second
#define present(c,x)                 ((c).find(x) != (c).end()) 
#define cpresent(c,x)                (find(all(c),x) != (c).end())
#define tr(c,i)                      for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define rtr(c,i)                      for(typeof((c).rbegin()) i = (c).rbegin(); i != (c).rend(); i++)
#define all(c)                       (c).begin(),(c).end()
#define si(n)                        scanf("%d",&n)
#define sl(n)                        scanf("%lld",&n)
#define sf(n)                        scanf("%f",&n)
#define sd(n)                        scanf("%lf",&n)
#define ss(n)                        scanf("%s",n)
   template<typename T,typename U>
ostream &operator <<(ostream &o,const pair< T,U  > &x)
{
   o<< x.first <<","<< x.second <<" ";
   return o;
}
   template <typename T>
istream& operator >>(istream &i,vector < T >  &v)
{
   int n;
   i>>n;
   while(n--){
      int x;
      i>>x;
      v.pb(x);
   }
   return i;
}
#define abs(x)                       ((x)<0?-(x):(x))
#define fill(a,v)                    memset((a),(v),sizeof (a))
#define INF                          INT_MAX
#define LINF                         (long long)1e18
#define EPS                          1e-9
#define MODBY 1000000007
#define MAX                          1123456
int preprocess()
{
   int ans=0;
   return ans;
}
lld arr[2][MAX];
lld x[2],a[2],b[2],c[3],r[2];
int n[2];
int main()
{
   int cases,casectr=1;
   for(scanf("%d",&cases);casectr<=cases;casectr++){
      printf("Case #%d: ",casectr);
      fflush(stdout);
      scanf("%d%d",&n[0],&n[1]);
      for(int i=0;i<2;++i){
         scanf("%lld",&x[i]);
         scanf("%lld",&a[i]);
         scanf("%lld",&b[i]);
         scanf("%lld",&c[i]);
         scanf("%lld",&r[i]);
         arr[i][0]=x[i];
      }
      for(int j=1;j<max(n[0],n[1]);++j){
         arr[0][j]=(a[0]*arr[0][(j-1)%n[0]]+b[0]*arr[1][(j-1)%n[1]]+c[0])%r[0];
         arr[1][j]=(a[1]*arr[0][(j-1)%n[0]]+b[1]*arr[1][(j-1)%n[1]]+c[1])%r[1];
      }
      lld ans = 0;
      set < int > common;
      set < int > ex[2];

      int i[2]={};
      if(arr[0][0]==arr[1][0])
         common.insert(arr[0][0]);
      else
         for(int curr = 0; curr < 2;++curr)
            ex[curr].insert(arr[curr][0]);
      while((i[0]<n[0])||(i[1]<n[1])){
         //printf("i[0]=%d,i[1]=%d in this iteration \n",i[0],i[1]);
         if((!ex[0].empty())||(!ex[1].empty())){
            int prog = 0;
            for(int curr = 0; curr < 2;++curr){
               if(ex[curr].empty()) continue;
               int next = 1 - curr;
               int t = *ex[curr].begin();//does not really matter
               for(;i[next]<n[next];i[next]++){
                  prog = 1;
                  //old index considered again - who cares
                  int val = arr[next][i[next]];
                  if(common.find(val)!=common.end())
                     continue;
                  else if(present(ex[curr],val)){
                     ex[curr].erase(val);
                     common.insert(val);
                     t = -1;
                     break;
                  }
                  else if(!present(ex[next],val)){
                     ex[next].insert(val);
                     t = -1;
                     break;
                  }
               }
               if(t==-1)
                  break;
            }
            if(prog == 0)
               goto  final;
            continue;
         }
         //both of them have the same colours in the prefix
         lld cnt[2]={};
         //printf("i[0]=%d,i[1]=%d, both have same prefix\n",i[0],i[1]);
         int done = 0;
         for(int curr = 0; curr < 2;++curr){
            cnt[curr]=1;
            if(i[curr]<n[curr])
               i[curr]++;
            while(i[curr]<n[curr]){
               int val = arr[curr][i[curr]];
               if(common.find(val)!=common.end())
                  cnt[curr]++;
               else{
                  if(done == 0){
                     ex[curr].insert(val);
                     done = 1;
                  }
                  else
                     i[curr]--;
                  break;
               }
               i[curr]++;
            }
         }
//         printf("cnt[0]=%lld,cnt[1]=%lld\n",cnt[0],cnt[1]);
         ans+=cnt[0]*cnt[1];
      }
final: printf("%lld\n",ans);
   }
}
