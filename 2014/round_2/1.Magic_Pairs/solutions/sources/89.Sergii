#include <iostream>
#include <map>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <vector>
#include <cstring>
#include <cstdlib>

#define mp make_pair
#define pb push_back
#define ppb pop_back
#define X first
#define Y second

using namespace std;

long long bo1[2000000];
long long bo2[2000000];
int u[2000000];
long long x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
int n, m;
map<long long, int> dist;
long long P[4000000];
long long P2[4000000];
long long hash;
long long hash2;
map<pair<long long, long long>, long long> E;
long long ans;

int Q[2000000];
int W[2000000];

int main(){
    freopen("a.in", "r", stdin);
    freopen("a.out", "w", stdout);    
    int testcases;
    cin >> testcases;
    for (int testcase = 1; testcase <= testcases; testcase++){
        cout << "Case #" << testcase << ": ";
        
        cin >> n >> m;
        cin >> x1 >> a1 >> b1 >> c1 >> r1;
        cin >> x2 >> a2 >> b2 >> c2 >> r2;
        
        bo1[0] = x1;
        bo2[0] = x2;
        for (int i = 1; i < 1000000; i++){
            bo1[i] = (a1 * bo1[(i - 1) % n] + b1 * bo2[(i - 1) % m] + c1) % r1;
            bo2[i] = (a2 * bo1[(i - 1) % n] + b2 * bo2[(i - 1) % m] + c2) % r2;            
        }
               
        
        dist.clear();
        int D = 0;
        for (int i = 0; i < n; i++){
            if (dist[bo1[i]] == 0){
               D++;
               dist[bo1[i]] = D;
            }
            Q[i] = dist[bo1[i]];
        }
        for (int i = 0; i < m; i++){
            if (dist[bo2[i]] == 0){
               D++;
               dist[bo2[i]] = D;
            }
            W[i] = dist[bo2[i]];
        }    
        
        P[0] = 1;
        P2[0] = 1;
        for (int i = 1; i < 3000000; i++){
            P[i] = P[i - 1] * 3;
            P2[i] = (P2[i - 1] * 7) % 1000000007;
        }        
        
        hash = 0;
        hash2 = 0;
        memset(u, 0, sizeof(u));
        E.clear();
        
        for (int i = 0; i < n; i++){
            if (u[Q[i]] == 0) {
               hash = hash + P[Q[i]];
               hash2 = (hash2 + P2[Q[i]]) % 1000000007;
            }
            u[Q[i]] = 1;
            E[mp(hash, hash2)]++;
        }
        
        ans = 0;
        hash = 0;
        hash2 = 0;
        memset(u, 0, sizeof(u));        
        for (int i = 0; i < m; i++){
            if (u[W[i]] == 0) {
               hash = hash + P[W[i]];
               hash2 = (hash2 + P2[W[i]]) % 1000000007;
            }
            u[W[i]] = 1;
            ans = ans + E[mp(hash, hash2)];
        }        
        cout << ans << endl;
    }
    //system("pause");
    return 0;
}
