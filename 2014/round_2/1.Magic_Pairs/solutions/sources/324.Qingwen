#include <iostream>
#include <vector>
#include <cstdint>
#include <set>
using namespace std;

void solve(int ri) {
	int n, m; cin >> n >> m;
	int64_t x1, a1, b1, c1, r1; cin >> x1 >> a1 >> b1 >> c1 >> r1;
	int64_t x2, a2, b2, c2, r2; cin >> x2 >> a2 >> b2 >> c2 >> r2;
	vector<int64_t> B1(n), B2(m);
	B1[0] = x1; B2[0] = x2;	
	for (int i = 1; i < n || i < m; ++i) {
		if (i < n) B1[i] = (a1 * B1[(i-1)%n] % r1 + b1 * B2[(i-1)%m] % r1 + c1) % r1;
		if (i < m) B2[i] = (a2 * B1[(i-1)%n] % r2 + b2 * B2[(i-1)%m] % r2 + c2) % r2;
	}
//	for ( auto v : B1) cout << v << " "; cout << endl;
//	for ( auto v : B2) cout << v << " "; cout << endl;
	set<int64_t> S1, S2, Sd;
	int64_t ans = 0;

	for (int i1 = 0, i2, j1 = -1, j2;i1 < n;) {
		S1.insert( B1[i1] ); 
		Sd.insert( B1[i1] );
		i2 = i1;
		while ( i2+1 < n && S1.find(B1[i2+1]) != S1.end() ) ++i2;

		while ( j1+1 < m && !Sd.empty() && (Sd.find(B2[j1+1]) != Sd.end() || S2.find(B2[j1+1]) != S2.end()) ) {
			if ( Sd.find(B2[j1+1]) != Sd.end() ) {
				Sd.erase(B2[j1+1]);
				S2.insert(B2[j1+1]);
			}
			++j1;
		}

		if ( !Sd.empty() ) {
			i1 = i2 + 1;
			continue;
		} else {
			j2 = j1;
			while ( j2+1 < m && S2.find(B2[j2+1]) != S2.end() ) {
				++j2;
			}
			ans += (int64_t)(j2 - j1 + 1) * (i2 - i1 + 1);
			i1 = i2 + 1;
			j1 = j2;
		}
	}

	printf("Case #%d: ", ri); cout << ans << endl;
}

int main() {
	freopen("C:/Users/v-qiguan/Downloads/_magic_pairs.txt", "r", stdin);
	freopen("0.out", "w", stdout);
	int re; cin >> re;
	for ( int ri = 1; ri <= re; ++ri ) solve(ri);
}