let _ =
  let sb = Scanf.Scanning.stdib in
  let cases = Scanf.bscanf sb "%d " (fun s -> s) in
    for ca = 1 to cases do
      let n = Scanf.bscanf sb "%d " (fun s -> s) in
      let m = Scanf.bscanf sb "%d " (fun s -> s) in
      let x1 = Scanf.bscanf sb "%d " (fun s -> s) in
      let a1 = Scanf.bscanf sb "%d " (fun s -> s) in
      let b1 = Scanf.bscanf sb "%d " (fun s -> s) in
      let c1 = Scanf.bscanf sb "%d " (fun s -> s) in
      let r1 = Scanf.bscanf sb "%d " (fun s -> s) in
      let x2 = Scanf.bscanf sb "%d " (fun s -> s) in
      let a2 = Scanf.bscanf sb "%d " (fun s -> s) in
      let b2 = Scanf.bscanf sb "%d " (fun s -> s) in
      let c2 = Scanf.bscanf sb "%d " (fun s -> s) in
      let r2 = Scanf.bscanf sb "%d " (fun s -> s) in
      let a = Array.make n x1 in
      let b = Array.make m x2 in
      let _ =
	for i = 1 to max n m - 1 do
	  if i < n
	  then a.(i) <- (a1 * a.((i - 1) mod n) +
			   b1 * b.((i - 1) mod m) + c1) mod r1;
	  if i < m
	  then b.(i) <- (a2 * a.((i - 1) mod n) +
			   b2 * b.((i - 1) mod m) + c2) mod r2;
	done;
	(*for i = 0 to n - 1 do
	  Printf.printf "a %d\n" a.(i)
	done;
	for i = 0 to m - 1 do
	  Printf.printf "b %d\n" b.(i)
	done;*)
      in
      let sa = Array.make (n + 1) x1 in
      let sb = Array.make (m + 1) x2 in
      let ka = Array.make (n + 1) x1 in
      let kb = Array.make (m + 1) x2 in
      let cnta = ref 0 in
      let cntb = ref 0 in
      let _ =
	let h = Hashtbl.create 10 in
	let s = sa in
	let k = ka in
	let cnt = cnta in
	  for i = 0 to n - 1 do
	    let x = a.(i) in
	      if Hashtbl.mem h x
	      then k.(!cnt) <- k.(!cnt) + 1
	      else (
		incr cnt;
		k.(!cnt) <- 1;
		s.(!cnt) <- x;
		Hashtbl.replace h x ();
	      )
	  done;
      in
      let _ =
	let h = Hashtbl.create 10 in
	let s = sb in
	let k = kb in
	let cnt = cntb in
	  for i = 0 to m - 1 do
	    let x = b.(i) in
	      if Hashtbl.mem h x
	      then k.(!cnt) <- k.(!cnt) + 1
	      else (
		incr cnt;
		k.(!cnt) <- 1;
		s.(!cnt) <- x;
		Hashtbl.replace h x ();
	      )
	  done;
      in
      let res = ref 0 in
      let ea = Hashtbl.create 10 in
      let eb = Hashtbl.create 10 in
	for i = 1 to min !cnta !cntb do
	  let x = sa.(i)
	  and y = sb.(i) in
	    if Hashtbl.mem eb x
	    then Hashtbl.remove eb x
	    else Hashtbl.replace ea x ();
	    if Hashtbl.mem ea y
	    then Hashtbl.remove ea y
	    else Hashtbl.replace eb y ();
	    if Hashtbl.length ea = 0 && Hashtbl.length eb = 0
	    then res := !res + ka.(i) * kb.(i)
	done;
	Printf.printf "Case #%d: %d\n" ca !res;
    done
