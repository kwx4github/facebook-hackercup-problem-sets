#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <fstream>
#include <time.h>
using namespace std;

#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,value) memset(A,value,sizeof(A))
#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define y0 gfdssdfer
#define y1 wetgwervbwqr

#define distance sgfsdfgs

typedef long long Int;
typedef unsigned int uint;
typedef vector<int> VI;
typedef pair<int,int> PII;

const double PI = acos(-1.0);
const int INF = 1000000000;
const int MAX = 2048;
const int MAX2 = 1000007;
const int MOD = 1000000007;

map<int,int> M;
int cnt;
set<int> S1;
set<int> S2;
Int a[1000007];
Int b[1000007];

void add(int val, int d){
    M[val] += d;
    if (M[val] == 0)
        --cnt;
    if (M[val] != 0)
        ++cnt;
}

int main()
{
  freopen("in.txt", "r", stdin);
  freopen("out.txt" , "w" , stdout);

    int t;
    cin >> t;
    FOR(tt,0,t){
        M.clear();
        cnt = 0;
        printf("Case #%d: " , tt + 1);
        S1.clear();
        S2.clear();
        int N,M;
        cin >> N >> M;
        Int x1,a1,b1,c1,r1;
        Int x2,a2,b2,c2,r2;
        cin >> x1 >> a1 >> b1 >> c1 >> r1;
        cin >> x2 >> a2 >> b2 >> c2 >> r2;
        a[0] = x1;
        b[0] = x2;
        S1.insert(x1);
        S2.insert(x2);
        add(x1,1);
        add(x2,-1);
        Int res = 0;

        FOR(i,1,max(N,M) + 4){
            a[i] = (a1 * a[(i - 1) % N] + b1 * b[(i - 1) % M] + c1) % r1;
            b[i] = (a2 * a[(i - 1) % N] + b2 * b[(i - 1) % M] + c2) % r2;
        }

        int i = 0;
        int j = 0;
        while (i < N && j < M){
            int c1 = 0;
            while (i < N && S1.find(a[i]) != S1.end()){
                c1++;
                ++i;
            }
            int c2 = 0;
            while (j < M && S2.find(b[j]) != S2.end()){
                ++c2;
                ++j;
            }
            if (cnt == 0){
                res += 1LL * c1 * c2;
            }
            if (i == N || j == M)
                break;
            S1.insert(a[i]);
            S2.insert(b[j]);
            add(a[i] , 1);
            add(b[j] , -1);
        }
        cerr << tt << endl;
        cout << res << endl;
    }

}
