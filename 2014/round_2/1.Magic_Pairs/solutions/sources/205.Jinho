#include <map>
#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

int main()
{
	int T;
	scanf("%d", &T);
	for (int cn = 1; cn <= T; ++cn)
	{
		int n, m;
		scanf("%d%d", &n, &m);
		vector<long long> a(n), b(m);
		int x1, a1, b1, c1, r1;
		int x2, a2, b2, c2, r2;
		scanf("%d%d%d%d%d", &x1, &a1, &b1, &c1, &r1);
		scanf("%d%d%d%d%d", &x2, &a2, &b2, &c2, &r2);
		
		a[0] = x1; 
		b[0] = x2;
		for (int i = 1; i < min(n, m); ++i)
		{
			a[i] = ((long long)a1 * a[i - 1] + (long long)b1 * b[i - 1] + (long long)c1) % r1;
			b[i] = ((long long)a2 * a[i - 1] + (long long)b2 * b[i - 1] + (long long)c2) % r2;
		}
		if (n > m)
		{
			for (int i = m; i < n; ++i)
				a[i] = ((long long)a1 * a[i - 1] + (long long)b1 * b[(i - 1) % m] + (long long)c1) % r1;
		}
		else
		{
			for (int i = n; i < m; ++i)
				b[i] = ((long long)a2 * a[(i - 1) % n] + (long long)b2 * b[i - 1] + (long long)c2) % r2;
		}

		map<int, int> starta;
		map<int, int> lasta;
		vector<int> nexta(n, -1);
		vector<int> isnewa(n, 0);
		for (int i = 0; i < n; ++i)
		{
			if (starta.find(a[i]) == starta.end())
			{
				starta[a[i]] = i;
				isnewa[ i ] = 1;
			}
			else
			{
				nexta[ lasta[a[i]] ] = i;
			}
			lasta[a[i]] = i;
		}
		
		map<int, int> startb;
		map<int, int> lastb;
		vector<int> nextb(m, -1);
		vector<int> isnewb(m, 0);
		vector<int> cntb(m + 1, 0);
		for (int i = 0; i < m; ++i)
		{
			if (startb.find(b[i]) == startb.end())
			{
				startb[b[i]] = i;
				isnewb[ i ] = 1;
			}
			else
			{
				nextb[ lastb[b[i]] ] = i;
			}
			lastb[b[i]] = i;
		}
/*		
		printf("A : ");
		for (int i = 0; i < n; ++i)
			printf("%d ", a[i]);
		printf("\n");
		printf("B : ");
		for (int i = 0; i < m; ++i)
			printf("%d ", b[i]);
		printf("\n");
*/
		int lb = 0;
		for (int i = m - 1; i >= 0; --i)
		{
			if (isnewb[i]) lb = 0; else lb = lb + 1;
			cntb[i] = lb;
		}

		long long ret = 0;
		int bpos = -1;

		int anum = 0, bnum = 0;

		for (int i = 0; i < n; ++i)
		{
			if (isnewa[ i ])
			{
				anum++;

				int v = a[i];
				if (startb.find(v) == startb.end()) break;

				int nowb = startb[ v ];
				for (int j = bpos + 1; j <= nowb; ++j)
				{
					if (isnewb[ j ]) bnum++;
				}
				if (bpos < nowb) bpos = nowb;
			}
			if (anum == bnum)
			{
				ret += cntb[bpos + 1] + 1;
			}
		}
		cout << "Case #" << cn << ": " << ret << endl;
	}
}

