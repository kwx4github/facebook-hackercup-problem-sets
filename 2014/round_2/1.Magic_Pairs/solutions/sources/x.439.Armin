#include <cstdio>
#include <iostream>
#include <set>
#include <cstring>


using namespace std;

typedef long long int LL;

int T, N, M;
int x1, a1, b1, c1, r1;
int x2, a2, b2, c2, r2;

LL B1[1000001], B2[1000001];
int STP1[1000001], STP2[1000001];
bool same[1000001];

int min(int a, int b){ return a<b? a:b;}
int max(int a, int b){ return a>b? a:b;}

set<LL> COL1, COL2, GS;

int main(){

	scanf("%d ", &T);

	for(int cas=1;cas<=T;cas++){
		scanf("%d %d ", &N, &M);
		scanf("%d %d %d %d %d ", &x1, &a1, &b1, &c1, &r1);
		scanf("%d %d %d %d %d ", &x2, &a2, &b2, &c2, &r2);

		B1[0] = x1;
		B2[0] = x2;


		for(int i=1;i<max(N,M);i++){
			if(i < N) B1[i] = (a1 * B1[(i-1)%N] + b1 * B2[(i-1)%M] + c1) % r1;
			if(i < M) B2[i] = (a2 * B1[(i-1)%N] + b2 * B2[(i-1)%M] + c2) % r2;
		}

		COL1.clear(); COL2.clear(); GS.clear();

		int ct=0;		
		int z1 = 0, z2 = 0;
		int az1 = 0, az2 = 0;

		memset(STP1, 0, sizeof(STP1));
		memset(STP2, 0, sizeof(STP2));
		memset(same, false, sizeof(same));

		for(int i=0;i<N;i++){
			COL1.insert(B1[i]);
			STP1[COL1.size()]+=1;
		}

		for(int i=0;i<M;i++){
			COL2.insert(B2[i]);
			STP2[COL2.size()]+=1;
		}

		COL1.clear(); COL2.clear();

		while(1){
	
				if(GS.size() == COL2.size() && COL2.size() == COL1.size()) same[GS.size()] = true;
				while(z1 < N && COL1.count(B1[z1])) z1++;
				while(z2 < M && COL2.count(B2[z2])) z2++;

				//printf("%d %d %d\n",GS.size(), COL1.size(), COL2.size());

				if(z1 == N) break;
				if(z2 == M) break;

				COL1.insert(B1[z1]);
				GS.insert(B1[z1]);

				COL2.insert(B2[z2]);
				GS.insert(B2[z2]);
		}

		LL res = 0;
		for(int i=1;i<=min(N, M);i++){
			if(same[i]) res += STP1[i] * STP2[i];
		}

		printf("Case #%d: %lld\n", cas, res);
	}
}
