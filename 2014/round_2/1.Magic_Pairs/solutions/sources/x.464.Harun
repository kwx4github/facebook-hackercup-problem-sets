#include <algorithm>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <vector>
#define FOR(i,a,b) for(i=a; i<=b; i++)
#define FOR2(i,n) FOR(i,0,n-1)
#define TFOR(i,a,b) for(i=a; i>=b; i--)
#define all(x) x.begin(),x.end()
#define f first
#define s second
#define BASE 2ll
#define MAXN 1000005
using namespace std;
typedef pair < int , int > pii;
int read(){ int res(0),sign(1); char c;
	while(1){ c = getchar(); if('0' <= c && c <= '9') { res = c - '0'; break; } else if(c == '-') { sign = -1; break; } }
	while(1){ c = getchar(); if('0' <= c && c <= '9') res = res*10 + c - '0'; else break; }
	return res * sign;
}
map < long long , bool > mp;
vector < long long > V;
long long A[MAXN] , B[MAXN];
pii P[MAXN];
int M,N;
void yaz(long long a)
{
	while(a)
	{
		printf("%lld" , (a&1) );
		a >>= 1;
	}
	printf("\n");
}
void generate_arrays()
{
	long long x1,x2,a1,b1,c1,r1,a2,b2,c2,r2;
	M = read(); N = read();
	x1 = read(); a1 = read(); b1 = read(); c1 = read(); r1 = read();
	x2 = read(); a2 = read(); b2 = read(); c2 = read(); r2 = read();
	int i , K = max( M , N );
	A[0] = x1;
	B[0] = x2;
	FOR(i,1,K-1)
	{
		A[i] = ( a1 * A[(i-1)%M] + b1 * B[(i-1)%N] + c1 ) % r1;
		B[i] = ( a2 * A[(i-1)%M] + b2 * B[(i-1)%N] + c2 ) % r2;
	}

}
long long us(long long a , int b)
{
	if(!b) return a;
	long long t = us(a,b>>1);
	t *= t;
	return (b&1) ? t * a : t;
}
void solve()
{
	generate_arrays();

	int K = max( M , N ) , i;

	long long t = 0;

	V.clear();
	mp.clear();
	FOR2(i,M)
	{
		if(!mp[ A[i] ])
		{
			t += us(BASE,A[i]);
			mp[ A[i] ] = true;
		}
		V.push_back( t );
	}

	mp.clear();
	long long res(0);

	t = 0;

	sort( all(V) );

	FOR2(i,N)
	{
		if( !mp[ B[i] ])
		{
			t += us(BASE , B[i]);
			mp[ B[i] ] = true;
		}
		res += upper_bound( all(V) , t ) - lower_bound( all(V) , t );
	}

	printf("%lld\n" , res );


}
int main()
{
	int T = read() , i;
	FOR(i,1,T)
	{
		printf("Case #%d: " , i );
		solve();
	}
	return 0;
}
