#include <algorithm>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <bitset>
#include <deque>
#include <numeric>
#include <iterator>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
#include <climits>
#include <sys/time.h>
#include <regex.h>

using namespace std;

#define DEBUG(x) cout << #x << ": " << x << endl

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FOREACH(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)

int A[2000010], B[2000010];
int CNT[3000010];
int SEEN[3000010];
int main()
{
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
	int TC;
	cin >> TC;
	for(int tc = 1 ; tc<=TC; ++tc)
	{
		memset(SEEN,0,sizeof(SEEN));
		memset(CNT,0,sizeof(CNT));
		int N,M;
		cin >> N >> M;
		map<int,int> MAP;
		int idx = 0;
		int x1 , a1 , b1 , c1 , r1; 
		cin >> x1 >> a1 >> b1 >> c1 >> r1;
		int x2 , a2 , b2 , c2 , r2;
		cin >> x2 >> a2 >> b2 >> c2 >> r2;
		A[0] = x1;
		B[0] = x2;
		for(int i = 1; i < max(N,M); ++i)
		{
			if(i < N)
				A[i] = (1LL*a1*A[ (i-1+N)%N ] + 1LL*b1*B[ (i-1+M)%M ] + c1) % r1;
			if(i < M)
				B[i] = (1LL*a2*A[ (i-1+N)%N ] + 1LL*b2*B[ (i-1+M)%M ] + c2) % r2;
		}
		
		for(int i = 0; i < N; ++i)
		{
			if(MAP.count(A[i]) == 0)
				MAP[A[i]] = idx++;
			A[i] = MAP[A[i]];
			CNT[idx-1]++;
		} 
		int ma = 0 , cnt = 0;
		long long ans = 0;
		for(int i = 0; i < M; ++i)
		{
			if(MAP.count(B[i]) == 0)
				MAP[B[i]] = idx++;
			B[i] = MAP[B[i]];
			
			ma = max(ma , B[i]);
			if(!SEEN[B[i]])
			{
				SEEN[B[i]] = 1 , cnt++;
			}
			if(ma == cnt - 1)
			{
				ans += CNT[ma];
			}
		}
		cout << "Case #" << tc << ": " << ans << endl;
	}
}



/*
5
8 6
0 0 1 3 5
0 1 0 4 5
5 5
2 5 2 5 7
2 9 3 2 7
12 11
2 5 2 5 7
2 9 3 2 7
10 10
0 1 0 1 11
0 0 1 1 11
10 10
0 1 0 1 11
0 0 1 10 11



 */








