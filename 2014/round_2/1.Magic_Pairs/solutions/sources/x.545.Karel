#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <string>
#include <climits>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <ctime>
#include <iostream>
#include <sstream>
#include <cctype>

#define PI 3.14159265358979
#define EPS 1e-9

using namespace std;

#define REP(i, n) for (int i=0; i<n; i++)
#define FOR(i, m, n) for (int i=m; i<=n; i++)
#define ABS(a) (((a)>0)?(a):(-(a)))
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int,int> ii;

int n, m;
int x1,x2,a1,a2,b1,b2,c1,c2,r1,r2;
int A[1111111];
int B[1111111];

void solve() {
	scanf("%d%d", &n, &m);
	scanf("%d%d%d%d%d", &x1, &a1, &b1, &c1, &r1);
	scanf("%d%d%d%d%d", &x2, &a2, &b2, &c2, &r2);
	A[0] = x1; B[0] = x2;
	FOR(i, 1, max(n,m)-1) {
		if (i<n) {
			A[i] = (a1 * A[(i-1) % n] + b1 * B[(i-1) % m] + c1) % r1;
		}
		if (i<m) {
			B[i] = (a2 * A[(i-1) % n] + b2 * B[(i-1) % m] + c2) % r2;
		}
	}
	//REP(i, n) printf("%d ", A[i]); printf("\n");
	//REP(i, m) printf("%d ", B[i]); printf("\n");	
	map<int, int> mp;
	set<int> sta;
	set<int> stb;
	vector<ll> ans(m, 0);
	int a = 0;
	REP(i, m) {
		mp[B[i]] = 1;
		int S = stb.size();
		stb.insert(B[i]);
		if (stb.size()==S) ans[i] = ans[i-1];
		else while (a<n && mp[A[a]]) {
			sta.insert(A[a]);
			if (sta.size()==stb.size()) ans[i]++;
			a++;
		}
	}
	//REP(i, m) printf("%d ", ans[i]); printf("\n");
	ll res = 0; REP(i, m) res += ans[i];
	printf("%lld\n", res);
}

int main() {
	int t; scanf("%d", &t);
	REP(i, t) {
		printf("Case #%d: ", i+1);
		solve();
	}
	return 0;
}
