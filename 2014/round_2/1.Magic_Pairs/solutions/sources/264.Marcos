#include <bits/stdc++.h>
using namespace std;

#define debug(args...) fprintf(stderr,args)

typedef long long lint;
typedef pair<int,int> pii;
typedef pair<lint,lint> pll;

const int INF = 0x3f3f3f3f;
const lint LINF = 0x3f3f3f3f3f3f3f3fll;
const int MAXN = 1e6+10;

int B1[MAXN], B2[MAXN];

int main() {
    int t=1,T;
    for(scanf("%d",&T);t<=T;++t) {
        int n,m;
        scanf("%d%d",&n,&m);
        lint x1,a1,b1,c1,r1,x2,a2,b2,c2,r2;
        scanf("%lld%lld%lld%lld%lld",&x1,&a1,&b1,&c1,&r1);
        scanf("%lld%lld%lld%lld%lld",&x2,&a2,&b2,&c2,&r2);
        B1[0] = x1; B2[0] = x2;
        for(int a=1;a<max(n,m);++a) {
            if(a < n) B1[a] = (a1 * B1[(a-1)%n] + b1 * B2[(a-1)%m] + c1)%r1;
            if(a < m) B2[a] = (a2 * B1[(a-1)%n] + b2 * B2[(a-1)%m] + c2)%r2;
        }        
        lint ans = 0;
        set<int> cj1, cj2;
        int j=0;
        int diffi=0, diffj=0;
        bool has1,has2;
        lint q2 = 0;
        for(int i=0;i<n;++i) {
            lint q1 = 1;
            has1 = cj1.find(B1[i]) != cj1.end();
            has2 = cj2.find(B1[i]) != cj2.end();
            if(!has1) {
                cj1.insert(B1[i]);                
                if(has2) diffj--;
                else diffi++;
            }
            while(i+1 < n && cj1.find(B1[i+1]) != cj1.end()) {
                q1++;
                i++;
            }
            if(diffi) {
                while(j < m && diffi) {
                    has1 = cj1.find(B2[j]) != cj1.end();
                    has2 = cj2.find(B2[j]) != cj2.end();
                    if(!has2) {
                        if(has1) --diffi;
                        else ++diffj;
                    }
                    cj2.insert(B2[j]);
                    ++j;
                }
                q2 = 1;
                while(j < m && cj2.find(B2[j]) != cj2.end()) {
                    q2++;
                    j++;
                }
            }
            if(!diffi && !diffj) {
                ans += q1*q2;
            }
        }
        printf("Case #%d: %lld\n",t,ans);            
    }        
    return 0;
}
