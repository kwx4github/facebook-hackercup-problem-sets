#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <fstream>
using namespace std;
#define pb push_back 
#define REP(i,n) for(int i=0;i<(n);i++ )
typedef long long LL;
typedef pair<int, int> pii;


vector<pii> V[2];
set<int> S[2];
vector<int> B[2];
		set<int> SS;

int main(){
	int T;
	cin>>T;
	for (int cases = 0; cases < T; cases++) {
		int N[2];
		cin>>N[0]>>N[1];
		int x[2], a[2], b[2], c[2], r[2];
		REP(i, 2) {
			cin>>x[i]>>a[i]>>b[i]>>c[i]>>r[i];
			V[i].clear(); S[i].clear(); B[i].clear();
		}
		REP(i, max(N[0], N[1])) {
			REP(j, 2) {
				if (i < N[j]) {
					int num;
					if (i == 0) {
						num = x[j];
					} else {
						num =  (a[j] * B[0][(i-1) % N[0]] + b[j] * B[1][(i-1) % N[1]] + c[j]) % r[j];
					}
					B[j].pb(num);
					//cout<<i<<' '<<j<<' '<<num<<endl;
					if (S[j].find(num) == S[j].end()) {
						V[j].pb(make_pair(num, 1));
						S[j].insert(num);
					} else {
						V[j][V[j].size() - 1].second++;
					}
				}
			}
		}
		/*REP(i, V[0].size()) {
			cout<<0<<' '<<i<<' '<<V[0][i].first<<' '<<V[0][i].second<<endl;
		}
		REP(i, V[1].size()) {
			cout<<1<<' '<<i<<' '<<V[1][i].first<<' '<<V[1][i].second<<endl;
		}*/
		SS.clear();
		int c1 = 0, c2 = 0, cc = 0;
		LL res = 0;
		REP(i, min(V[0].size(), V[1].size())) {
			if (SS.find(V[0][i].first) == SS.end()) {
				SS.insert(V[0][i].first);
				cc++;
			} else {
				cc--;
			}
			if (SS.find(V[1][i].first) == SS.end()) {
				SS.insert(V[1][i].first);
				cc++;
			} else {
				cc--;
			}
			if (cc == 0) {
				//cout<<i<<endl;
				//cout<<c1<<' '<<c2<<endl;
				//cout<<c1 + V[0][i].second<<' '<<c2 + V[1][i].second<<endl;
				res += (LL)(V[0][i].second) * (V[1][i].second);
			}
			c1 += V[0][i].second;
			c2 += V[1][i].second;
		}
		printf("Case #%d: %lld\n", cases + 1, res);
	}
	return 0;
}
