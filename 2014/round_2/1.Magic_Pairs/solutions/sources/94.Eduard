#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <utility>
#include <set>
#define MAXN 1000005

using namespace std;

int main ()
{
	int T, iT;
	scanf("%d",&T);
	static int a[MAXN];
	static int b[MAXN];
	set<int> sa;
	set<int> sb;
	for (iT = 0; iT < T; iT++)
	{
		int N, M;
		scanf("%d %d",&N,&M);
		int i;
		int X1, A1, B1, C1, R1;
		scanf("%d %d %d %d %d",&X1,&A1,&B1,&C1,&R1);
		int X2, A2, B2, C2, R2;
		scanf("%d %d %d %d %d",&X2,&A2,&B2,&C2,&R2);
		a[0] = X1;
		b[0] = X2;
		int D;
		if (N > M) D = N;
		else D = M;
		for (i = 1; i < D; i++)
		{
			if (i < N) a[i] = (int)(((long long)A1 * (long long)a[(i-1) % N] + (long long)B1 * (long long)b[(i-1) % M] + (long long)C1) % (long long)R1);
			if (i < M) b[i] = (int)(((long long)A2 * (long long)a[(i-1) % N] + (long long)B2 * (long long)b[(i-1) % M] + (long long)C2) % (long long)R2);
		}
		//for (i = 0; i < N; i++) printf("%d ",a[i]);
		//printf("\n");
		//for (i = 0; i < M; i++) printf("%d ",b[i]);
		//printf("\n");
		sa.clear();
		sb.clear();
		int diff = 0;
		char block = 0;
		long long res = 0LL;
		int j = 0;
		int k;
		int prev = 0;
		for (i = 0; i < N; i++)
		{
			if (sa.find(a[i]) == sa.end())
			{
				sa.insert(a[i]);
				if (sb.find(a[i]) == sb.end()) diff++;
				else block = 0;
				if (!block)
				{
					while (diff)
					{
						if (j == M) break;
						if (sb.find(b[j]) == sb.end())
						{
							sb.insert(b[j]);
							if (sa.find(b[j]) == sa.end())
							{
								block = 1;
								j++;
								break;
							}
							else diff--;
						}
						j++;
					}
					if (diff) prev = 0;
					else
					{
						k = j;
						while ((j < M) && (sb.find(b[j]) != sb.end())) j++;
						prev = j - k + 1;
					}
				}
			}
			res += (long long)(prev);
		}
		printf("Case #%d: %I64i\n",iT+1,res);
	}
	return 0;
}
