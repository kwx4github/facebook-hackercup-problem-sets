
import sys

def solve(N, M, x1, a1, b1, c1, r1, x2, a2, b2, c2, r2):
    board1 = [x1]
    board2 = [x2]
    for i in xrange(1, max(M, N)):
        if i < N:
            board1.append((a1 * board1[(i - 1) % N] + b1 * board2[(i - 1) % M] + c1) % r1)
        if i < M:
            board2.append((a2 * board1[(i - 1) % N] + b2 * board2[(i - 1) % M] + c2) % r2)
    res = 0
    set1 = set()
    set2 = set()
    extras1 = set()
    extras2 = set()
    i = 0
    j = 0
    while i < N and j < M:
        set1.add(board1[i])
        extras1.add(board1[i])
        i += 1
        while len(extras1) != 0 or len(extras2) != 0:
            if i >= N and j >= M:
                return res
            while len(extras2) != 0 and i < N:
                if board1[i] in set1:
                    i += 1
                    continue
                set1.add(board1[i])
                if board1[i] in extras2:
                    extras2.remove(board1[i])
                else:
                    extras1.add(board1[i])
                i += 1
            while len(extras1) != 0 and j < M:
                if board2[j] in set2:
                    j += 1
                    continue
                set2.add(board2[j])
                if board2[j] in extras1:
                    extras1.remove(board2[j])
                else:
                    extras2.add(board2[j])
                j += 1
        #contains the same
        count1 = 0
        count2 = 0
        while i + count1 < N and board1[i + count1] in set1:
            count1 += 1
        i = i + count1
        count1 += 1
        while j + count2 < M and board2[j + count2] in set2:
            count2 += 1
        j = j + count2
        count2 += 1
        res += count1 * count2

    return res


def solveAll(input):
    T = int(input.readline()[:-1])
    for i in xrange(T):
        NM = input.readline()[:-1].split(' ')
        NM = [int(s) for s in NM]
        xabcr1 = input.readline()[:-1].split(' ')
        xabcr1 = [int(s) for s in xabcr1]
        xabcr2 = input.readline()[:-1].split(' ')
        xabcr2 = [int(s) for s in xabcr2]
        print "Case #%d: %d" % (i + 1, solve(NM[0], NM[1], xabcr1[0], xabcr1[1], xabcr1[2], xabcr1[3], xabcr1[4], xabcr2[0], xabcr2[1], xabcr2[2], xabcr2[3], xabcr2[4]))

if len(sys.argv) > 1:
    fd = open(sys.argv[1])
    solveAll(fd)
else:
    solveAll(sys.stdin)
