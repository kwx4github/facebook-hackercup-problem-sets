#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

#define all(x) (x).begin(),(x).end()
#define rep(i,n) for(int (i)=0;(i)<(n);(i)++)
#define dbg(args...) {debug,args; cerr << endl;}

#define mp make_pair
#define mt(a,b,c) mp(a,mp(b,c))
#define P1(a) (a).first
#define P2(a) (a).second
#define T1(a) (a).first
#define T2(a) (a).second.first
#define T3(a) (a).second.second
#define INF 1e20
#define EPS 1e-8

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<int,pii> tiii;

class debu{
	public:
	template<class someClass>
	debu & operator,(someClass arg){
		cerr << arg << " ";
		return *this;
	}
} debug;


void init(){
    cout << setprecision(8)<< fixed;
}

ll solve(int testnr){
    ll N,M;
    cin >> N >> M;
    
    ll x1, a1, b1, c1, r1, x2, a2, b2, c2, r2;
    vector<ll> bo1(N), bo2(M);
    vector<ll> comp, count;
    
    cin >> x1 >> a1 >> b1 >> c1 >> r1 >> x2 >> a2 >> b2 >> c2 >> r2;
    
    bo1[0] = x1;
    bo2[0] = x2;
    
    set<ll> curr;
    curr.insert(x1);
    comp.push_back(x1);
    count.push_back(1);
    
    for(ll i=1; i<max(M,N); i++){
        if (i<N) {
            bo1[i] = (a1 * bo1[(i-1) % N] + b1 * bo2[(i-1) % M] + c1) % r1;
            if (curr.find(bo1[i])==curr.end()){
                curr.insert(bo1[i]);
                comp.push_back(bo1[i]);
                count.push_back(1);
            }else{
                count.back()++;
            }
        }
        if (i<M) bo2[i] = (a2 * bo1[(i-1) % N] + b2 * bo2[(i-1) % M] + c2) % r2;
    }/*
    for(ll i=0;i<N;i++){
        cerr << bo1[i] << " ";
    }
    cerr << endl;
    for(ll i=0;i<comp.size();i++){
        cerr << comp[i] << " ";
    }
    cerr << endl;
    for(ll i=0;i<count.size();i++){
        cerr << count[i] << " ";
    }
    cerr << endl;
    for(ll i=0;i<M;i++){
        cerr << bo2[i] << " ";
    }
    cerr << endl;*/
    ll total = 0;
    curr.clear();
    int ind = 0;
    bool equal=false;
    if (x1==x2) {
        total+=count[0];
        equal = true;
        ind = 1;
    }
    curr.insert(x1);
    
    for(ll i=1; i<M;i++){
        if (curr.find(bo2[i])!=curr.end()){
            if (equal) total+=count[ind-1];
        }else{
            curr.insert(bo2[i]);
            equal = false;
            while (ind < count.size() && curr.find(comp[ind])!=curr.end()){
                ind++;
            }
            if (curr.size()==ind){
                equal = true;
                total+=count[ind-1];
            }   
        }
    }
    return total;
}

int main(){

    init();
    
    int T;
    cin >> T;
    for(int i=1;i<=T;i++){
        cout << "Case #" << i << ": " << solve(i) << "\n";
    }
    
    return 0;
}
