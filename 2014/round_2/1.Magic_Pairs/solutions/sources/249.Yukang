#include<stdio.h>
#include<string.h>
#include<math.h>
#include<map>
#include<set>
#include<iostream>
#include<algorithm>
using namespace std;
#define maxn 1000010
int board[2][maxn],board2[maxn];
int a[2],b[2],c[2],x[2],r[2];
int n[2];

set<int>se1,se2;
int main()
{
	freopen("_magic_pairs.txt","r",stdin);
	freopen("_magic_pairs_output.txt","w",stdout);
	int i,j,k;
	int t,cas;
	scanf("%d",&t);
	for(cas=1;cas<=t;cas++){
		scanf("%d%d",&n[0],&n[1]);
		for(i=0;i<2;i++){
			scanf("%d%d%d%d%d",&x[i],&a[i],&b[i],&c[i],&r[i]);
		}
		board[0][0]=x[0];
		board[1][0]=x[1];
		for(i=1;i<n[0]||i<n[1];i++){
			for(j=0;j<2;j++){
				if(i>=n[j])continue;
				board[j][i]=(a[j]*1LL * board[0][(i-1)%n[0]] + b[j]*1LL*board[1][(i-1)%n[1]] + c[j])%r[j];
			}
		}

		long long ans=0;
		se1.clear();
		se2.clear();
		int sum=0;
		int k=0;
		for(i=0;i<n[0];i++){
			if(se1.find(board[0][i])!=se1.end()){

				ans+=sum;
				continue;
			}
			se1.insert(board[0][i]);
			sum=0;
			for(j=k;j<n[1];j++){
				if(se1.find(board[1][j])!=se1.end()){
					se2.insert(board[1][j]);
					if(se2.size()==se1.size()){
						sum++;
					}
				}else break;
			}
			k=j;
			ans+=sum;
		}
	/*	for(i=0;i<n[0];i++){
			printf("%d ",board[0][i]);
		}
		printf("\n");
		for(i=0;i<n[1];i++){
			printf("%d ",board[1][i]);
		}
		printf("\n");*/
		printf("Case #%d: ",cas);
		cout<<ans<<endl; 
	}
	return 0;
}
