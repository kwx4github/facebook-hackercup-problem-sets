/*
AUTHOR : VUAcoder
LANGUAGE : C++
PROBLEM :
*/

#include<iostream>
#include<stdio.h>
#include<math.h>
#include<string.h>
#include<algorithm>
#include<string>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<sstream>
#include<set>
#include<fstream>
#include<cfloat>
using namespace std;
#define PI (2.*acos(0.))
#define EPS 1e-9
#define ZERO(x)     (fabs(x) < EPS)
#define EQ(a,b)     (ZERO((a)-(b)))
#define LESSER(a,b) (!EQ(a,b) && (a)<(b))
#define GREATER(a,b)(!EQ(a,b) && (a)>(b))
#define GETBIT(x,i) (x&(1<<i))
#define SETBIT(x,i) (x|(1<<i))
#define FORab(i,a,b) for(typeof(b) i=(a);i<=(b);i++)
#define FOR(i,n) FORab(i,0,(n)-1)
#define FOR1(i,n) FORab(i,1,n)
#define FORit(it,a) for( typeof((a).begin()) it=(a).begin();it!=(a).end();it++)
#define all(a) (a).begin(),(a).end()
#define ms(a,b) memset((a),(b),sizeof(a))
#define pb push_back
#define sz(a) (int)a.size()
#define in(a,b,c) ((a) <= (b) && (b) <= (c))
#define px first
#define py second
#define __eXYZ__
#ifdef __eXYZ__
//USE THESE FOR DEBUG
#define RFILE(a)    freopen(a, "r", stdin)
#define WFILE(a)    freopen(a, "w", stdout)
#define _r(arg) {dbg,arg; dbg.start(); }
#define _n(arg...) {_r(#arg " ==> ");dbg,arg; }
#define _(arg...) { _n(arg); dbg.nl(); }
#else
#define RFILE(a)
#define WFILE(a)
#define _n(arg) {}
#define _n(arg...) {}
#define _(arg...) {}
#endif


typedef long long  LL;
typedef vector<int>   vi;
typedef pair<int,int>  pii;

template<class A, class B> ostream &operator<<(ostream& o, pair<A,B>& p) { //pair print
	return o << "("<<p.first<<", "<<p.second<<")";
}

template<class T> ostream& operator<<(ostream& o, const vector<T>& v) { //vector print
	o << "{";FORit(it, v) o << *it << ", "; return o << "}";
}

struct debugger
{
	ostream &out; bool first;
	void start() { first = true; }
	debugger(ostream& out):out(out) {start();}
	void nl() { out << endl; start(); }
	// Taken from rudradevbasak
	template<class T> debugger& operator,(T& v) {
		if(first) first = false; else out << ", ";
		out << v; return *this;
	}
	template<class T> debugger& operator,(pair<T*,int> arr) { //array print
		out << "{";
			FOR(i, arr.second) { out << arr.first[i] << ", "; }
		out << "}";
		return *this;
	}
} dbg(cerr);
LL Board1[1111111];
LL Board2[1111111];
int main()
{
	RFILE("input.txt");
	WFILE("hcput21.txt");
	int t;
	LL n,m,x1, x2, a1, a2, b1, b2, c1, c2, r1, r2 ,cn=1;
	cin>>t;
	while(t--){
        cin>>n>>m;
        cin>>x1>> a1>> b1>> c1>> r1;
        cin>>x2>> a2>> b2>> c2>> r2;
        Board1[0] = x1;
        Board2[0] = x2;
        FOR1(i,max(n,m)-1) {

            Board1[i] = (a1 * Board1[(i-1) % n] + b1 * Board2[(i-1) % m] + c1) % r1;
            Board2[i] = (a2 * Board1[(i-1) % n] + b2 * Board2[(i-1) % m] + c2) % r2;
           // cout<<Board1[i]<<" "<<Board2[i]<<endl;
        }
        //FOR(i,m)
        int j=0;
        LL ans=0,x=0;
        set<LL>s,s1,s2;
        FOR(i,n){
            s1.insert(Board1[i]);
            s.insert(Board1[i]);
            //cout<<Board1[i]<<" board1 insert"<<endl;
            if(sz(s)==sz(s1) && sz(s)==sz(s2)){
             //   cout<<"answer+= "<<x<<endl;
                ans+=x;
            }


            if(s2.find(Board1[i])==s2.end() ){
               // cout<<"before "<<j<<endl;
                while(Board2[j]!=Board1[i] && j<m){
                    s2.insert(Board2[j]);
                    s.insert(Board2[j]);
                   // cout<<Board2[j]<<"board2 insert"<<endl;
                    j++;
                }
                if(j<m){
                    s2.insert(Board2[j]);
                    s.insert(Board2[j]);
                    //cout<<Board2[j]<<"board2 insert"<<endl;
                    j++;
                }
                //cout<<"after "<<j<<endl;
                x=1;
                while(s2.find(Board2[j])!=s2.end()  && j<m){
                //    cout<<Board2[j]<<" b2"<<endl;
                    j++;
                    x++;
                }
              //  cout<<"x "<<x<<endl;
                if(j<m){
                    s2.erase(Board2[j]);

                   // cout<<"answer+=== "<<x<<endl;
                     }
                     if(sz(s)==sz(s1) && sz(s)==sz(s2)){ ans+=x;
                }
            }
        }
        cout<<"Case #"<<cn++<<": "<<ans<<endl;
	}

	return 0;
}
