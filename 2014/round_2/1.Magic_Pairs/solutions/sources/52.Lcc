#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <map>
#include <vector>
#include <set>
#include <cmath>
#include <cstring>
#include <string>
using namespace std;
typedef long long LL;

LL x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
int n, m;
const int maxn = 1000000 + 10;
LL p[maxn], q[maxn];
int main(){
	int T, cas = 0;
	for (cin>>T;T--;){
		cin>>n>>m;
		cin>>x1>>a1>>b1>>c1>>r1;
		cin>>x2>>a2>>b2>>c2>>r2;
		p[0] = x1;
		q[0] = x2;
		for (int i = 1; i<n || i<m; i++){
			p[i] = (a1*p[(i-1)%n]+b1*q[(i-1)%m]+c1)%r1;
			q[i] = (a2*p[(i-1)%n]+b2*q[(i-1)%m]+c2)%r2;
		}
		set<int> s1, s2;
		map<int, int> crs;
		int cnt = 0;
		LL tot = 0;
		for (int i = 0, j = 0; i<n && j<m;){
			s1.insert(p[i]);
			if (crs[p[i]]++ == 0) cnt++; else cnt--;

			int thi = i;
			i++;
			while (i<n && s1.find(p[i]) != s1.end()){
				i++;
			}
			s2.insert(q[j]);
			if (crs[q[j]]-- == 0) cnt++; else cnt--;

			int thj = j;
			j++;
			while (j<m && s2.find(q[j]) != s2.end()){
				j++;
			}
			//cout<<i<<' '<<j<<' '<<cnt<<endl;
			if (cnt == 0){
				tot += (LL)(i-thi)*(LL)(j-thj);
			}
		}
		cout<<"Case #"<<++cas<<": "<<tot<<endl;
	}
	return 0;
}






