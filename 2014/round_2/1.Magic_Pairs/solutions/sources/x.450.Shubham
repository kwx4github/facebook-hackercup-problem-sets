#include <iostream>
#include <vector>
#include <cstdio>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <deque>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <cassert>

using namespace std;

#define FOR(i,a,b)				for (i=a;i<b;i++)
#define s(n)					scanf("%d",&n)
#define p(n)					printf("%d\n",n)
#define pl(n)					printf("%lld\n",n)
#define sd(n)					int n;scanf("%d",&n)
#define sl(n)					scanf("%lld",&n)
#define sld(n)					long long int n;scanf("%lld",&n)
#define pb(n)                                   push_back(n)
#define all(c)                                  (c).begin(),(c).end()
#define tr(container,it)                        for (typeof(container.begin()) it=container.begin();it!=container.end();it++ )
#define sz(a)                                   int((a).size())
#define clr(a)                                  memset(a,0,sizeof(a))
#define mp(a,b)                                 make_pair(a,b)
#define ps(str)                                 printf("%s\n",str)

#define INF                                     INT_MAX
#define UINF                                    UINT_MAX
#define INF_LL                                  LLONG_MAX
#define UINF_LL                                 ULLONG_MAX
#define PI 3.14159265358979323846

typedef long long ll;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <string> vstr;
typedef pair<int,int> pii;
typedef vector<vector<pair<int,int> > > TG;

int mulmod(int a,int b,int m)
{
    ll t=(ll)a*(ll)b;
    int ans=(int)(t%(ll)m);
    return ans;
}

int addmod(int a,int b,int m)
{
    ll t=(ll)a+(ll)b;
    int ans=(int)(t%(ll)m);
    return ans;
}

void add(vi &arr1,vi &arr2,int &i,int &j,set<int> &a,set<int> &b,set<int> &diff1,set<int> &diff2,bool &iseq,ll &ans,bool which)
{
    if (which==false)
    {
        int cur=arr1[i++];
        if (a.find(cur)==a.end())
        {
            iseq=false;
            if (b.find(cur)==b.end())
            {
                diff1.insert(cur);
                a.insert(cur);
            }
            else
            {
                diff2.erase(cur);
                a.insert(cur);
            }
        }
        else
        {
            if (b.find(cur)==b.end())
            {
                iseq=false;
            }
            else
            {
//                if (iseq) ans++;
            }
        }
    }
    else
    {
        int cur=arr2[j++];
        if (b.find(cur)==b.end())
        {
            iseq=false;
            if (a.find(cur)==a.end())
            {
                diff2.insert(cur);
                b.insert(cur);
            }
            else
            {
                diff1.erase(cur);
                b.insert(cur);
            }
        }
        else
        {
            if (a.find(cur)==a.end())
            {
                iseq=false;
            }
            else
            {
//                if (iseq) ans++;
            }
        }
    }
}

int main()
{
    sd(T);
    int t;
    int i,j;
    FOR(t,0,T)
    {
        sd(n);sd(m);
        sd(x1);sd(a1);sd(b1);sd(c1);sd(r1);
        sd(x2);sd(a2);sd(b2);sd(c2);sd(r2);
        vi arr1(n),arr2(m);
        arr1[0]=x1;arr2[0]=x2;
        FOR(i,1,max(m,n))
        {
            if (i<n) arr1[i]=addmod(addmod(mulmod(a1,arr1[i-1],r1),mulmod(b1,arr2[(i-1)%m],r1),r1),c1,r1);
            if (i<m) arr2[i]=addmod(addmod(mulmod(a2,arr1[(i-1)%n],r2),mulmod(b2,arr2[i-1],r2),r2),c2,r2);
        }
//        FOR(i,0,sz(arr1)) printf("%d ",arr1[i]); printf("\n");
//        FOR(i,0,sz(arr2)) printf("%d ",arr2[i]); printf("\n");
        set<int> a,b,diff1,diff2;
        i=j=0;
        ll ans=0;
        bool iseq=true;

        while (i<n||j<m)
        {
//            printf("%d %d:\n",i,j);
            if ((diff1.empty()&&diff2.empty())||(!diff1.empty()&&!diff2.empty()))
            {
//                ps("here1");
                if (diff1.empty()&&diff2.empty()&&(i>0||j>0))
                {
                    ans++;
//                    printf("(%d,%d) ",i,j);
                }
                if (i<n) add(arr1,arr2,i,j,a,b,diff1,diff2,iseq,ans,false);
                else add(arr1,arr2,i,j,a,b,diff1,diff2,iseq,ans,true);
            }
            else
            {
//                ps("here2");
                if (diff1.empty())
                {
                    if (i<n) add(arr1,arr2,i,j,a,b,diff1,diff2,iseq,ans,false);
                    else add(arr1,arr2,i,j,a,b,diff1,diff2,iseq,ans,true);
                }
                else
                {
                    if (j<m) add(arr1,arr2,i,j,a,b,diff1,diff2,iseq,ans,true);
                    else add(arr1,arr2,i,j,a,b,diff1,diff2,iseq,ans,false);
                }
            }
        }
        if (diff1.empty()&&diff2.empty()) {/*printf("(%d,%d) ",i,j);*/ ans++;}
        printf("Case #%d: ",t+1);
        pl(ans);
    }
}
