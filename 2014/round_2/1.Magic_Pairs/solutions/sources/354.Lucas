// https://www.facebook.com/hackercup/problems.php?pid=620734011349888&round=544142832342014

#include <cstdio>
#include <algorithm>
#include <cstring>
#include <utility>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <string>
#include <set>
#include <cmath>
#include <iostream>
#include <ctime>
#include <cassert>

using namespace std;

#define db(x) cout << #x " == " << x << endl
//#define _ << ", " <<
#define Fr(a,b,c) for( int a = b ; a < c ; ++a )
#define rF(a,b,c) for( int a = c-1 ; a >= b ; --a )
#define CL(a,b) memset(a,b,sizeof(a))
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef vector<pair<int,int> > vpii;
typedef map<int,int> mii;
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define INF 0x3f3f3f3f
#define LINF 0x3f3f3f3f3f3f3f3fLL
#define ULMAX 0xffffffffffffffffULL
#define y1 Y1

#define N 1001000
#define dbg if(0)

int ns[N],ms[N],n,m,t;
int a1,a2,b1,b2,c1,c2,r1,r2;
set<int> um, dois;

bool botanovo(int *ns, int &it, int n, int &qual, int &qts, set<int> &seu, set<int> &outro){
	qual=-1, qts=0;
	while(it<n){
	//	printf("TENTA %d (%d)\n",ns[it], outro.count(ns[it]));
		if(outro.count(ns[it])) it++, qts++;
		else break;
	}
	
	if(it<n) seu.insert(ns[it]), qual=ns[it];
	return false;
}

bool tentanovo(int *ns, int &it, int n, int &qual, int &qts, set<int> &seu, set<int> &outro){
	while(it<n){
dbg		printf(" blah %d\n",ns[it]);
		if(outro.count(ns[it])) seu.insert(ns[it]);
		else if(seu.count(ns[it])==0) break;
		if(seu.size() == outro.size()){
			return true;
		}
		it++;
	}
	qual=-1;
	if(it<n)seu.insert(ns[it]), qual=ns[it];
	return false;
}

int main() {
//	cin.sync_with_stdio(false);
	int _=1;
	for(scanf("%d",&t);t--;){
		scanf("%d%d",&n,&m);
		scanf("%d%d%d%d%d",&ns[0],&a1,&b1,&c1,&r1);
		scanf("%d%d%d%d%d",&ms[0],&a2,&b2,&c2,&r2);
		Fr(i,1,max(n,m))
			ns[i] = int( (ll(a1)*ll(ns[(i-1)%n]) + ll(b1)*ll(ms[(i-1)%m]) + ll(c1)) % ll(r1) ),
			ms[i] = int( (ll(a2)*ll(ns[(i-1)%n]) + ll(b2)*ll(ms[(i-1)%m]) + ll(c2)) % ll(r2) );
		
		ll resp=0;
		um.clear(), dois.clear();
		int it1=0, it2=0;
		
	dbg	{Fr(i,0,n) printf("%d ",ns[i]); puts(""); }
	dbg	{Fr(i,0,m) printf("%d ",ms[i]); puts(""); }
		
		while(it1<n && it2<m){
	dbg		printf("its %d %d\n",it1,it2);
			//Sets estão iguais
			botanovo(ns,it1,n, a1,b1, um,um);
			botanovo(ms,it2,m, a2,b2, dois,dois);
			
	dbg		printf("its %d %d\n",it1,it2);
	dbg		printf("a1 %d a2 %d b1 %d b2 %d\n",a1,a2,b1,b2);
			//Contou quantos tem com os sets iguais
			resp += ll(b2)*ll(b1);
	dbg		printf("resp %lld\n",resp);
			
			//Sets estão cada um com um cara que não tinham antes
			if(a1 == a2) continue;	//se igualaram de novo
			
			//Set1 tem alguém que o Set2 não tem (a1)
			eh:
			while(it2<m && a2!=a1) botanovo(ms,it2,m, a2,b2, dois,dois);//, printf(">%d\n",a2);
	dbg		printf("it2: %d\n",it2);
			//Set2 tá no final ou tá >= Set1
			if(it2==m) continue;	//Tá no final, acaba
			
			//Set2 >= Set1
			if(tentanovo(ns,it1,n, a1,b1, um,dois)){	// igualou os sets
	dbg			puts(" conseguiu igualar");
				continue;
			} else {
	dbg			puts(" nao conseguiu igualar");
				//Set1 chegou no final ou tem alguém que o Set2 não tem
				if(it1==n) continue;	//Set1 chegou no final
				
				//Set1 tem alguém que o Set2 não tem (a1)
				goto eh;
			}
		}
		
		printf("Case #%d: %lld\n",_++,resp);
	}
	return 0;
}
