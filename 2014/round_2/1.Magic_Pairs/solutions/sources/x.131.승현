#pragma warning(disable:4996)
#include<stdio.h>
#include<algorithm>
#include<map>
using namespace std;
int TC, T, n, m, i, j, C, k;
long long x1, a1, b1, c1, r1, t, x2, a2, b2, c2, r2, A[1000010], B[1000010], R[1000010], M, Res;
bool v[1000010];
map<int, int>Map;
int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	scanf("%d", &TC);
	for (T = 1; T <= TC; T++){
		printf("Case #%d: ", T);
		scanf("%d%d", &n, &m);
		scanf("%lld%lld%lld%lld%lld", &x1, &a1, &b1, &c1, &r1);
		scanf("%lld%lld%lld%lld%lld", &x2, &a2, &b2, &c2, &r2);
		A[0] = x1, B[0] = x2;
		for (i = 1; i < n || i<m; i++){
			if (i < n){
				A[i] = (a1*A[(i - 1) % n] + b1*B[(i - 1) % m] + c1) % r1;
			}
			if (i < m){
				B[i] = (a2*A[(i - 1) % n] + b2*B[(i - 1) % m] + c2) % r2;
			}
		}
		C = 0;
		Map.clear();
		for (i = 0; i < n; i++){
			if (!Map[A[i]])Map[A[i]] = ++C;
			R[C]++;
		}
		C = 0, M = 0;
		Res = 0;
		for (i = 0; i < m; i++){
			if (!Map[B[i]])break;
			k = Map[B[i]];
			if (M < k)M = k;
			if (!v[k])v[k] = true, C++;
			if (C == M){
				Res = Res + R[C];
			}
		}
		for (i = 1; i <= C; i++){
			v[i] = false;
			R[i] = 0;
		}
		printf("%lld\n", Res);
	}
}