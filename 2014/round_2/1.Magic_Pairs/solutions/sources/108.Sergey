#include <iostream>
#include <map>
#include <algorithm>
using namespace std;

#define maxn 2000005

int tqn, tqi, n, m, x1, x2, a1, a2, b1, b2, c1, c2, r1, r2, sn, i, was[maxn];
long long bo1[maxn], bo2[maxn], pw1[maxn], pw2[maxn], sr[maxn], carry1, carry2, ret;
map<pair<long long, long long>, int> ma1;

int main (int argc, char * const argv[]) {
	freopen("input.txt", "r", stdin);
	scanf("%d", &tqn);
	for(tqi = 1; tqi <= tqn; tqi++) {
		scanf("%d %d", &n, &m);
		scanf("%d %d %d %d %d", &x1, &a1, &b1, &c1, &r1);
		scanf("%d %d %d %d %d", &x2, &a2, &b2, &c2, &r2);
		bo1[0] = x1;
		bo2[0] = x2;
		for(i = 1; i < max(n, m); i++) {
			bo1[i] = (a1 * 1LL * bo1[(i-1) % n] + b1 * 1LL * bo2[(i-1) % m] + c1) % r1;
			bo2[i] = (a2 * 1LL * bo1[(i-1) % n] + b2 * 1LL * bo2[(i-1) % m] + c2) % r2;
		}
		sn = 0;
		for(i = 0; i < n; i++) sr[++sn] = bo1[i];
		for(i = 0; i < m; i++) sr[++sn] = bo2[i];
		sort(sr + 1, sr + sn + 1);
		sn = unique(sr + 1, sr + sn + 1) - (sr + 1);
		for(i = 0; i < n; i++) bo1[i] = lower_bound(sr + 1, sr + sn + 1, bo1[i]) - sr;
		for(i = 0; i < m; i++) bo2[i] = lower_bound(sr + 1, sr + sn + 1, bo2[i]) - sr;
		pw1[0] = 1;
		pw2[0] = 1;
		for(i = 1; i <= sn; i++) {
			pw1[i] = (pw1[i - 1] * 10007LL) % 1000000009LL;
			pw2[i] = (pw2[i - 1] * 3123797LL);
		}
		carry1 = 0;
		carry2 = 0;
		for(i = 1; i <= sn; i++) was[i] = 0;
		ma1.clear();
		for(i = 0; i < n; i++) {
			if (!was[bo1[i]]) {
				was[bo1[i]] = 1;
				carry1 = (carry1 + pw1[bo1[i]]) % 1000000009LL;
				carry2 += pw2[bo1[i]];				
			}
			++ma1[make_pair(carry1, carry2)];
		}
		carry1 = 0;
		ret = 0;
		carry2 = 0;
		for(i = 1; i <= sn; i++) was[i] = 0;
		for(i = 0; i < m; i++) {
			if (!was[bo2[i]]) {
				was[bo2[i]] = 1;
				carry1 = (carry1 + pw1[bo2[i]]) % 1000000009LL;
				carry2 += pw2[bo2[i]];
			}
			ret += ma1[make_pair(carry1, carry2)];
		}
		cout << "Case #" << tqi << ": " << ret << endl;
	}
    return 0;
}
