#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<string>
#include<iostream>

using namespace std;

typedef long long LL;

LL a[1000100],b[1000100];
int x1,a1,b1,c1,r1;
int x2,a2,b2,c2,r2;
int suma[1000100],sumb[1000100];

int main(){
	freopen("input.txt","r",stdin);
	freopen("hackerout.txt","w",stdout);
	int T;
	scanf("%d",&T);
	for(int cas = 1;cas <= T;++cas){
		int n,m;
		scanf("%d%d",&n,&m);
		scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
		scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);
		a[0] = x1;
		b[0] = x2;
		int maxn = max(n,m);
		for(int i = 1;i < maxn;++i){
			if(i < n)
				a[i] = (a1 * a[(i - 1) % n] + b1 * b[(i - 1) % m] + c1) % r1;
			if(i < m)
				b[i] = (a2 * a[(i - 1) % n] + b2 * b[(i - 1) % m] + c2) % r2;
		}
		set<int> colora;
		set<int> colorb;
		set<int> needa;
		set<int> needb;
		int pa = 0,pb = 0;
		LL ans = 0;
		while(pa < n && pb < m){
/*			printf("%d %d, %d %d: %lld\n",needa.size(),pa,needb.size(),pb,ans);
			for(set<int>::iterator it = needa.begin();it != needa.end();++it)
				printf("%d ",*it);
			puts("");
			for(set<int>::iterator it = needb.begin();it != needb.end();++it)
				printf("%d ",*it);
			puts("");*/
			if(needa.size() > 0){
				colora.insert(a[pa]);
				if(needa.find(a[pa]) != needa.end())
					needa.erase(needa.find(a[pa]));
				if(colorb.find(a[pa]) == colorb.end())
					needb.insert(a[pa]);
				if(pa == n - 1){
					if(needa.size() == 0 && needb.size() == 0){
						++ans;	
					}	
				}
				++pa;
				continue;
			}
			if(needb.size() > 0){
				colorb.insert(b[pb]);
				if(needb.find(b[pb]) != needb.end())
					needb.erase(needb.find(b[pb]));
				if(colora.find(b[pb]) == colora.end())
					needa.insert(b[pb]);
				if(pb == m - 1){
					if(needa.size() == 0 && needb.size() == 0){
						++ans;	
					}	
				}
				++pb;
				continue;
			}

			if(needa.size() > 0 || needb.size() > 0){
				++pa;
				++pb;
				continue;
			}
			int nexta = pa;
			int nextb = pb;
			while(nexta < n){
				if(colora.find(a[nexta]) == colora.end())
					break;
				++nexta;
			}
			while(nextb < m){
				if(colorb.find(b[nextb]) == colorb.end())
					break;
				++nextb;
			}
//			printf("%d %d, %d %d, %lld\n",pa,nexta,pb,nextb,ans);
			LL cnta = nexta - pa ;
			LL cntb = nextb - pb ;
			ans += cnta * cntb;
			pa = nexta;
			pb = nextb;
			colora.insert(a[pa]);
			if(colorb.find(a[pa]) == colorb.end())
				needb.insert(a[pa]);
			colorb.insert(b[pb]);
			if(needb.find(b[pb]) != needb.end())
				needb.erase(needb.find(b[pb]));
			if(colora.find(b[pb]) == colora.end())
				needa.insert(b[pb]);
		}
	//	printf("done: %d %d\n",pa,pb);
	//	printf("before: %lld\n",ans);
		while(pa < n){
	//		printf("pa %d\n",pa);
			if(needb.size() > 0)
				break;
			if(colorb.find(a[pa]) == colorb.end())
				break;
			colora.insert(a[pa]);
			if(needa.find(a[pa]) != needa.end())
				needa.erase(needa.find(a[pa]));
			if(needa.size() == 0)
				++ans;
			++pa;
		}
		while(pb < m){
			if(needa.size() > 0)
				break;
			if(colora.find(b[pb]) == colora.end())
				break;
			colorb.insert(b[pb]);
			if(needb.find(b[pb]) != needb.end())
				needb.erase(needb.find(b[pb]));
			if(needb.size() == 0)
				++ans;
			++pb;
		}
//		printf("Case #%d: ",cas);
		cout << "Case #" << cas << ": " << ans << endl;
	}
//	while(1);
//	system("pause");
	return 0;
}

