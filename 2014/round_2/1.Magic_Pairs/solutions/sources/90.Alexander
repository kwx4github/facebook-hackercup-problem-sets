#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <map>
using namespace std;
#define N 1000100
int Board1[N], Board2[N], v[4];
map <int, int> u;
void add(int t, int c)
{
	v[u[t]]--;
	u[t]|=c;
	v[u[t]]++;
}
int main()
{
	int ts;
	scanf("%d", &ts);
	for(int t=1; t<=ts; t++)
	{
		int n, m, x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
		scanf("%d%d", &n, &m);
		scanf("%d%d%d%d%d", &x1, &a1, &b1, &c1, &r1);
		scanf("%d%d%d%d%d", &x2, &a2, &b2, &c2, &r2);
		Board1[0] = x1;
		Board2[0] = x2;
		int i, j;
		for(i=1; i<n || i<m; i++)
		{
			if(i<n) Board1[i] = ((long long)a1 * Board1[(i-1) % n] + (long long)b1 * Board2[(i-1) % m] + c1) % r1;
			if(i<m) Board2[i] = ((long long)a2 * Board1[(i-1) % n] + (long long)b2 * Board2[(i-1) % m] + c2) % r2;
		}
		long long ans=0;
		u.clear();
		v[1]=0;
		v[2]=0;
		i=0;
		j=0;
		for(; i<n && j<m; )
		{
			add(Board1[i], 1); i++;
			add(Board2[j], 2); j++;
			for(; i<n && v[2]; add(Board1[i], 1), i++)
				for(; j<m && v[1]; add(Board2[j], 2), j++);
			if(!v[1] && !v[2])
			{
				int i1=i, j1=j;
				for(; i<n && u[Board1[i]]==3; i++);
				for(; j<m && u[Board2[j]]==3; j++);
				ans+=(long long)(i-i1+1)*(j-j1+1);
			}
		}
		printf("Case #%d: %lld\n", t, ans);
	}
	return 0;
}
