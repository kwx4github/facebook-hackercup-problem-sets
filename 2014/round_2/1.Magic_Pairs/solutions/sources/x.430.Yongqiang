import java.util.*;
import java.io.*;


public class MagicPairs {
	
	static Scanner in;
	static PrintWriter out;
	static int test;
	
	static int N, M;
	static long[] B1, B2;
	
	
	static void solve() {
		N = in.nextInt();
		M = in.nextInt();
		if(N < M){
			int t = N;
			N = M;
			M = t;
		}
		
		initArrays();
		
		
		printCase();
		//out.println();
		//for(int i = 0; i < N; i++) out.print(B1[i] + " ");
		//out.println();
		//for(int j = 0; j < M; j++) out.print(B2[j] + " ");
		out.println(count());
		
	}
	
	static long count() {
		long c = 0;
		
		HashSet<Long> set1 = new HashSet<Long>(N);
		HashSet<Long> set2 = new HashSet<Long>(M);
		int n = 0, m = 0;
		
		for( ; m < M; m++){
			Assert.check( !set2.contains(B2[m]) );
			set2.add( B2[m] );
			if(!set1.contains(B2[m]) ){
				while(n < N && B1[n] != B2[m]){
					if(!set1.contains(B1[n]) ) {
						set1.add(B1[n]);
					}
					n++;
				}
				if(n == N) return c;
				else set1.add(B1[n++]);
			}
			long a = 1, b = 1;
			while( n < N - 1 && set1.contains(B1[n]) ) {
				a++;
				n++;
			}
			while( m < M - 1 && set2.contains(B2[m+1]) ) {
				b++;
				m++;
			}
			if(set1.size() == set2.size() ) c += a * b;
		}
		
		return c;
	}
	
	static void initArrays() {
		B1 = new long[N];
		B2 = new long[M];
		long x1 = in.nextLong(), a1 = in.nextLong(), b1 = in.nextLong(), c1 = in.nextLong(), r1 = in.nextLong();
		long x2 = in.nextLong(), a2 = in.nextLong(), b2 = in.nextLong(), c2 = in.nextLong(), r2 = in.nextLong();
		B1[0] = x1;
		B2[0] = x2;
		int i;
		for(i = 1; i < M; i++){
			long t1 = gen(x1, x2, a1, b1, c1, r1);
			long t2 = gen(x1, x2, a2, b2, c2, r2);
			x1 = t1;
			x2 = t2;
			B1[i] = x1;
			B2[i] = x2;
		}
		for(; i < N; i++){
			x1 = gen(x1, B2[(i-1) % M], a1, b1, c1, r1);
			B1[i] = x1;
		}
	}
	
	static long gen(long s1, long s2, long a, long b, long c, long r) {
		return (a * s1  + b * s2  + c) % r;
	}
	
	static void printCase() {
		out.print("Case #" + test + ": ");
	}
	
	static class Assert{
		static void check(boolean e){
			if( !e ) throw new Error();
		}
	}



	public static void main(String[] args) throws FileNotFoundException {
        in = new Scanner(new FileReader("_magic_pairs.txt"));
        out = new PrintWriter("_magic_pairs_out.txt");
        int tests = in.nextInt();
        for(test = 1; test <= tests; test++) {
        	solve();
        }
        in.close();
        out.close();
	}

}
