#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <map>
#include <cassert>
#define bitcount __builtin_popcount
#define mod  1000000007
#define PHI 1000000006
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define rz(x) resize(n)
#define cl()  clear()
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define S1(x) scanf("%llu",&x)
using namespace std;

ill n,m;
bool dp[1000009];
vector <ill> a,b,aa,bb;

void cal (vector <ill> a, vector <ill> &s)
{
    ill n = a.size();
    s.clear();
    s.resize (n);

    ill i,xx=0;

    map <ill, ill> m;
    F (i, 0, a.size()) {
        if (m[a[i]] == 0) {
            s.pb (xx+1);
            xx++;
            m[a[i]]++;
            continue;
        }
        s.pb (xx);
    }
}


int main()
{
  //  freopen ("_magic_pairs.txt", "r", stdin);
    //freopen ("out.txt", "w", stdout);
    int t,ii=1;
    S (t);

    while (t--) {
        memset (dp, false, sizeof(dp));
        cout << "Case #" << ii++ << ": ";
        cin >> n >> m;
        ill i,j,x1,x2,a1,a2,b1,b2,c1,c2,r1,r2;
        cin >> x1 >> a1 >> b1 >> c1 >> r1;
        cin >> x2 >> a2 >> b2 >> c2 >> r2;
        a.resize (n);
        b.resize (m);

        a[0] = x1;
        b[0] = x2;

        F (i, 1, min (n, m)) {
            a[i] = (a1*a[(i-1)%n] + b1*b[(i-1)%m] + c1)%r1;
            b[i] = (a2*a[(i-1)%n] + b2*b[(i-1)%m] + c2)%r2;
        }

        F (i, min (n, m), max (n, m)) {
            if (n == max (n, m)) {
                a[i] = (a1*a[(i-1)%n] + b1*b[(i-1)%m] + c1)%r1;
                continue;
            }
            b[i] = (a2*a[(i-1)%n] + b2*b[(i-1)%m] + c2)%r2;
        }

        if (a.size() < b.size()) {
            swap (a, b);
            swap (n, m);
        }


        cal (a, aa);
        cal (b, bb);

        set <ill> s1,s2,match;
        i = 0;
        while (i < m) {
            s1.insert (a[i]);
            s2.insert (b[i]);

            if (s1.find(b[i]) != s1.end()) {
                match.insert (b[i]);
            }
            if (s2.find(a[i]) != s2.end()) {
                match.insert (a[i]);
            }
            if (s1.size() == s2.size() && s1.size() == match.size()) {
                ill sz = s1.size();
                dp[sz] = true;
            }
           // cout << i << " --> " << s1.size() << " " << s2.size() << " " << match.size() << endl;
            i++;
        }

        while (i < n) {
            s1.insert (a[i]);
            if (s2.find(a[i]) != s2.end()) {
                match.insert (a[i]);
            }
            if (s1.size() == s2.size() && s1.size() == match.size()) {
                ill sz = s1.size();
                dp[sz] = true;
            }
            i++;
        }
        ill sum = 0;
        for (ill i = 1; i <= m; i++) {
            if (!dp[i]) {
                continue;
            }
            ill nn = (upper_bound(aa.begin(), aa.end(), i)-(lower_bound(aa.begin(), aa.end(), i)));
            ill mm = (upper_bound(bb.begin(), bb.end(), i)-(lower_bound(bb.begin(), bb.end(), i)));
            sum += nn*mm;
        }
        cout << sum << endl;
    }
    return 0;
}
