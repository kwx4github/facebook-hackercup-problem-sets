/* Divanshu Garg */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
int ABS(int a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second

/* Relevant code begins here */

/* Input from file or online */

void input() {
#ifndef ONLINE_JUDGE
    freopen("_magic_pairs.txt","r",stdin);
    // freopen("out.txt","w",stdout);
#endif
}

/* Input opener ends */

ill arr1[1000005];
ill arr2[1000005];

int u1[1000005];
int u2[1000005];

set<ill> s1,s2, matched;

int main() {
    //input();
    int test = 1;
    int t; S(t); // cout << t<<endl;
    while ( t-- ) {
    	s1.clear(); s2.clear();
    	ill n,m,x1,x2,a1,a2,b1,b2,c1,c2,r1,r2;
    	Sl(n); Sl(m); //cout << n << " " << m << endl;
    	Sl(x1); Sl(a1); Sl(b1); Sl(c1); Sl(r1); 
    	Sl(x2); Sl(a2); Sl(b2); Sl(c2); Sl(r2);
    	arr1[0] = x1; arr2[0] = x2;
    	// cout << arr1[0] << " " << arr2[0] << endl;
    	int till = max(n,m);
    	F(i,1,till) {
    		if ( i < n ) {
    			arr1[i] = ( a1*arr1[(i-1)%n] + b1*arr2[(i-1)%m] + c1 ) % r1;
    		}
    		if ( i < m ) {
    			arr2[i] = ( a2*arr1[(i-1)%n] + b2*arr2[(i-1)%m] + c2 ) % r2;
    		}
    	}
    	// F(i,0,n) cout << arr1[i] << " "; cout << endl;
    	// F(i,0,m) cout << arr2[i] << " "; cout << endl;
    	// cout <<endl;
    	u1[0] = 1;
    	u2[0] = 1;
    	s1.insert(x1); s2.insert(x2);
    	F(i,1,n) {
    		s1.insert(arr1[i]);
    		u1[i] = s1.size();
    	}
    	F(i,1,m) {
    		s2.insert(arr2[i]);
    		u2[i] = s2.size();
    	}
    	// F(i,0,n) cout << u1[i] << " "; cout << endl;
    	// F(i,0,m) cout << u2[i] << " "; cout << endl;
    	// cout <<endl;
    	s1.clear(); s2.clear(); matched.clear();
    	int idx1 = 0, idx2 = 0, k = 1;
    	ill ans = 0;
    	while ( idx1 < n && idx2 < m ) {
    		ill range1 = upper_bound(u1,u1+n,k)-lower_bound(u1,u1+n,k);
    		ill range2 = upper_bound(u2,u2+m,k)-lower_bound(u2,u2+m,k);
    		if ( range1 == 0 || range2 == 0 ) break;
    		int el1 = arr1[lower_bound(u1,u1+n,k)-u1];
    		int el2 = arr2[lower_bound(u2,u2+m,k)-u2];
    		// cout << "-- " << el1 << " " << el2 << endl; 
    		s1.insert(el1); s2.insert(el2);
    		if ( s2.find(el1) != s2.end() ) matched.insert(el1);
    		if ( s1.find(el2) != s1.end() ) matched.insert(el2);
    		if ( matched.size() == s1.size() && matched.size() == s2.size() ) {
    			// cout << idx1 << " " << idx2 << endl;
    			ans += (range2*range1);
    		}
    		idx1 = upper_bound(u1,u1+n,k)-u1;
    		idx2 = upper_bound(u2,u2+m,k)-u2;
    		k++;
    	}
    	printf("Case #%d: %lld\n", test++, ans);
    }
    return 0;
}