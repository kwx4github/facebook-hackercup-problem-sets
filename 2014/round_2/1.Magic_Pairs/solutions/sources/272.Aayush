#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<vector>
#include<list>
#include<set>
#include<deque>
#include<cmath>
#include<map>
#include<queue>
#include<cassert>
#include<numeric>
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#define FOR(i,j,k,l) for(((i)=(j));((i)<(k));((i)+=(l)))
#define REP(i,n) for((i)=0;(i)<(n);(i)++)
#define ABS(x) (((x)>=0)?((x)):(-(x)))
#define SWAP(x,y) do{x^=y;y^=x;x^=y;}while(0)
#define MIN(a,b) (((a)<(b))?(a):(b))
#define MAX(a,b) (((a)>(b))?(a):(b))
#define VLL vector<long long int>
#define VI vector<int>
#define PB push_back
#define POB pop_back
#define PII pair<int, int>
#define PLL pair<long long int,long long int>
#define VPII vector<pair<int, int> >
#define VPLL vector<PLL>
#define SI(x) scanf("%d",&(x))
#define SLL(x) scanf("%lld",&(x))
#define PI (3.141592654)
typedef long long int ll;
typedef long double ld;
 
#define MOD (1000000007)
#define FEQ(x,y) (ABS((x)-(y))<0.000002)
using namespace std;
void precompute(){
  int i,j,k;
  
}
int main(){
  ll i,j,k,x,y,z,n,m;
  ll nin,inum;
  precompute();
  scanf("%lld",&nin);
  FOR(inum, 0,nin,1){
    //each test case
      SLL(n);SLL(m);
      ll *a=new ll[n];
      ll *b=new ll[m];
      ll x1,a1,b1,c1,r1;
      ll x2,a2,b2,c2,r2;
      
      SLL(x1);SLL(a1);SLL(b1);SLL(c1);SLL(r1);
      SLL(x2);SLL(a2);SLL(b2);SLL(c2);SLL(r2);
      a[0]=x1;b[0]=x2;
      FOR(i,1,max(n,m),1){
          if(i<n)a[i]=(a1*a[(i+n-1)%n]+b1*b[(i+m-1)%m]+c1)%r1;
          if(i<m)b[i]=(a2*a[(i+n-1)%n]+b2*b[(i+m-1)%m]+c2)%r2;
      }
      map<ll,ll> cum2;
      ll *bcnt=new ll[m];
      REP(i,m){
          bcnt[i]=(i==0?0:bcnt[i-1]);
          if(cum2.find(b[i])==cum2.end()){
              bcnt[i]+=1;
              cum2[b[i]]=i;
          }
      }
      map<ll,ll> cum1;
      ll *acnt=new ll[n];
      REP(i,n){
          acnt[i]=(i==0?0:acnt[i-1]);
          if(cum1.find(a[i])==cum1.end()){
              acnt[i]+=1;
              cum1[a[i]]=i;
          }
      }
      j=-1;
      ll ans=0;
      REP(i,n){
          if(cum2.find(a[i])==cum2.end())break;
          j=max(j,cum2[a[i]]);
          if(acnt[i]==bcnt[j]){
              ll d1=0;
              ll d2=0;
              while(i<n-1 && acnt[i+1]==acnt[i]){
                  d1++;i++;
              }
              while(j<m-1 && bcnt[j+1]==bcnt[j]){
                  d2++;j++;
              }
              ans+=(1+d1)*(1+d2);
          }
      }
      cout<<"Case #"<<1+inum<<": "<<ans<<endl;
      
      delete []a;delete []b;delete []acnt;delete []bcnt;
  }
  
  return 0;
}
