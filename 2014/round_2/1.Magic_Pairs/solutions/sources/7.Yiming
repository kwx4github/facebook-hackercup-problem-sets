#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <cctype> 
#include <string> 
#include <cstring> 
#include <ctime> 

using namespace std;

#define _int64 long long

_int64 d1[1100000],d2[1100000];
//int used1[1100000];
set<int> st1,st2;
//int used2[1100000];

int main()
{
  _int64 x1,a1,b1,c1,r1,x2,a2,b2,c2,r2,ans,cnt1,cnt2;
  int i,j,m,n,l,t,same;
  scanf("%d",&t);
  for (l=0;l<t;l++)
  {
    scanf("%d%d",&n,&m);
    scanf("%lld%lld%lld%lld%lld",&x1,&a1,&b1,&c1,&r1);
    scanf("%lld%lld%lld%lld%lld",&x2,&a2,&b2,&c2,&r2);
    d1[0]=x1;
    d2[0]=x2;
    for (i=1;i<n||i<m;i++)
    {
      if (i<n)
      {
        d1[i]=(a1*d1[(i-1)%n]+b1*d2[(i-1)%m]+c1) % r1;
      }
      if (i<m)
      {
        d2[i]=(a2 * d1[(i-1) % n] + b2 * d2[(i-1) % m] + c2) % r2;
      }
    }
    i=0;j=0;
    //memset(used1,0,sizeof(used1));
    //memset(used2,0,sizeof(used2));
    st1.clear();
    st2.clear();
    same=2000000000;
    ans=0;
    while (1)
    {
      cnt1=0;cnt2=0;
      while ((i<n)&&(st1.find(d1[i])!=st1.end()))
      {
        i++;
        cnt1++;
      }
      while ((j<m)&&(st2.find(d2[j])!=st2.end()))
      {
        j++;
        cnt2++;
      }
      //cout<<i<<" "<<j<<" "<<cnt1<<" "<<cnt2<<" "<<same<<endl;
      if (same==2000000000)
      {
        if (st1.size()!=0)
          ans+=cnt1*cnt2;
      }
      //cout<<ans<<endl;
      if ((i==n)||(j==m)) break;
      st1.insert(d1[i]);
      if (st2.find(d1[i])==st2.end()) same--;
      else same++;
      st2.insert(d2[j]);
      if (st1.find(d2[j])==st1.end()) same--;
      else same++;
    }
    printf("Case #%d: %lld\n",l+1,ans);
  }
}
