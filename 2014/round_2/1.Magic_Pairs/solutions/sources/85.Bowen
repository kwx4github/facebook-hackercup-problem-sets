#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <algorithm>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <sstream>

using namespace std;

typedef long long ll;

#define REP(i,s,t) for(int i=(s);i<(t);i++)
#define FOREACH(i,v) for(typeof((v).begin()) i=(v).begin();i!=(v).end();i++)
#define FILL(x,v) memset(x,v,sizeof(x))
const int INF = (int)1E9;
#define MAXN 1000005

int N, M;
ll a1, a2, b1, b2, c1, c2, r1, r2;
ll x[MAXN], y[MAXN];
int main(){
	int cs;
	cin >> cs;
	REP(csn, 1, cs+1){
		printf("Case #%d: ", csn);
		cin >> N >> M;
		cin >>x[0]>>a1>>b1>>c1>>r1;
		cin >>y[0]>>a2>>b2>>c2>>r2;
		int mn = min(N,M);
		REP(i,1,mn){
			x[i] = (a1*x[(i-1)%N]%r1+b1*y[(i-1)%M]%r1+c1)%r1;
			y[i] = (a2*x[(i-1)%N]%r2+b2*y[(i-1)%M]%r2+c2)%r2;
		}
		REP(i,mn,N) x[i] = (a1*x[(i-1)%N]%r1+b1*y[(i-1)%M]%r1+c1)%r1;
		REP(i,mn,M) y[i] = (a2*x[(i-1)%N]%r2+b2*y[(i-1)%M]%r2+c2)%r2;
		ll ans = 0;
		map<ll,bool> sx, sy;
		ll c1, c2;
		c1 = c2 = 0;
		int ii,jj;
		ii = jj = 0;
		int b1, b2;
		b1 = b2 = 0;
		
		/*
		cerr << endl;
		REP(i,0,N) cerr << x[i] << " ";
		cerr << endl;
		REP(j,0,M) cerr << y[j] << " ";
		cerr << endl;
		*/

		while(ii<N && jj<M){
			int a = x[ii];
			int b = y[jj];
			sx[a] = sy[b] = 1;
			if(a!=b) {
				b1++; b2++;
			}

			while( (b1 || b2) && ii<N && jj<M ){
				while(b1 && jj<M){
					jj++;
					int a = y[jj];
					if(sy[a]==0){
						sy[a] = 1;
						if(sx[a]==0) b2++;
						else if(sx[a]==1) b1--;
					}
				}
				while(b2 && ii<N){
					ii++;
					int a = x[ii];
					if(sx[a]==0){
						sx[a] = 1;
						if(sy[a]==0) b1++;
						else if(sy[a]==1) b2--;
					}
				}
			}
			if(b1 || b2) break;
			while(sx[x[ii]] && ii<N) {
				ii++; c1++;
			}
			while(sy[y[jj]] && jj<M) {
				jj++; c2++;
			}
			ans += c1*c2;
			c1 = c2 = 0;
			//cerr << i << " " << j << endl;
		}
		cout << ans << endl;
	}
	return 0;
}