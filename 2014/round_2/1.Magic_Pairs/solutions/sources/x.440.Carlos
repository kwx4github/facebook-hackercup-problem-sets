#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<map>
#include<vector>
#include<utility>
#include<stack>
#include<queue>
#include<string>
#include<bitset>
#include<set>
#include<algorithm>

#define FOR(a,b) for(int a=0;a<b;a++)
#define FORR(a,b) for(int a=b-1;a>=0;a--)
#define FOR2(a,b,c) for(int a=b;a<c;a++)
#define FORR2(a,b,c) for(int a=c-1;a>=b;a--)
#define EACH(i,v) for(typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)

#define VI vector<int>
#define VVI vector< vector<int> >
#define PII pair<int,int>
#define VS vector<string>

#define MAXN  1000001
#define BSIZE 1010

using namespace::std;

typedef unsigned long long lint;

lint brd1[MAXN],brd2[MAXN];

int main(){
    int tot_cases;
    scanf("%d",&tot_cases);
    for(int case_num=1;case_num<=tot_cases;case_num++){

        lint x1,x2,a1,a2,b1,b2,c1,c2,r1,r2;
        int n,m,mx;
        scanf("%d%d",&n,&m);
        scanf("%Ld%Ld%Ld%Ld%Ld",&x1,&a1,&b1,&c1,&r1);
        scanf("%Ld%Ld%Ld%Ld%Ld",&x2,&a2,&b2,&c2,&r2);
        
        set<int> s1,s2,df1,df2;
        brd1[0]=x1,brd2[0]=x2;

        mx = max(m,n);
        for(int i=1;i<mx;i++){
            if(i<n){
                brd1[i] = (a1*brd1[(i-1)%n])%r1;
                brd1[i] = (brd1[i] + b1*brd2[(i-1)%m])%r1;
                brd1[i] = (brd1[i] +c1)%r1;
            }
            if(i<n){
                brd2[i] = (a2*brd1[(i-1)%n])%r2;
                brd2[i] = (brd2[i] + b2*brd2[(i-1)%m])%r2;
                brd2[i] = (brd2[i] +c2)%r2;
            }
        }
        lint sol = 0;
        for(int i=0,j=0;i<n&&j<m;){
            s1.insert(brd1[i]);
            s2.insert(brd2[j]);

            if(s2.count(brd1[i])==0) df2.insert(brd1[i]);
            else df1.erase(brd1[i]);
            
            if(s1.count(brd2[j])==0) df1.insert(brd2[j]);
            else df2.erase(brd2[j]);

            i++,j++;
            lint cnt1=1,cnt2=1;
            while(i<n && s1.count(brd1[i])>0) i++,cnt1++;
            while(j<m && s2.count(brd2[j])>0) j++,cnt2++;

            if(df1.size()+df2.size() == 0) sol+=cnt1*cnt2;
        }
        printf("Case #%d: %Ld\n",case_num,sol);
    }
    return 0;
}
