#include <queue>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <numeric>
typedef long long ll;
using namespace std;
#define F0(i,n) for (i=0;i<n;i++)
#define F1(i,n) for (i=1;i<=n;i++)
#define CL(a,x) memset(x, a, sizeof(x))
#define SZ(s) ((int)s.size())
const double eps = 1e-9;
const int inf = 1000000009;
typedef pair<int,int> pii;
int i, j, k, m, n;

ll ans;

ll b[2][1000001], cnt[2][1000001], h[2][5][1000001];

void calc(int o, int n)
{
	set<ll> S;
	ll h0 = 58861;
	ll h1 = 81815;
	ll h2 = 38731;
	ll h3 = 38731;
	ll h4 = 38731;
	for (int i = 0; i < n; i++)
	{
		ll x = b[o][i];
		if (!S.count(x))
		{
			S.insert(x);
			x = x*139 + 1;
			h0 = h0 + x;
			x *= 15;
			h1 = h1 + x*x;
			x++;
			h2 = h2 + x*x*x;
			x *= 12;
			h3 = h3 + x*x*x*x;
			x += 1023;
			h4 = h4 + x*x*x*x*x*x*x;
		}
		cnt[o][i] = SZ(S);
		h[o][0][i] = h0;
		h[o][1][i] = h1;
		h[o][2][i] = h2;
		h[o][3][i] = h3;
		h[o][4][i] = h4;
	}
}

void solve()
{
	calc(0, n);
	calc(1, m);

	i = j = 0;
	ans = 0;
	while (i < n || j < m)
	{
		int i2 = i, j2 = j;
		while (i2 < n && cnt[0][i2] == cnt[0][i]) i2++;
		while (j2 < m && cnt[1][j2] == cnt[1][j]) j2++;

		F0(k,5) if (h[0][k][i] != h[1][k][j]) break;
		if (k == 5) ans += (ll)(i2-i) * (ll)(j2-j);
		i = i2;
		j = j2;
	}
}

void prepare()
{
	ll x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
	cin >> x1 >> a1 >> b1 >> c1 >> r1;
	cin >> x2 >> a2 >> b2 >> c2 >> r2;

	b[0][0] = x1;
	b[1][0] = x2;
	for (i = 1; i < n || i < m; i++)
	{
		if (i < n)
		{
			b[0][i] = (a1 * b[0][(i-1) % n] + b1 * b[1][(i-1) % m] + c1) % r1;
		}
		if (i < m)
		{
			 b[1][i] = (a2 * b[0][(i-1) % n] + b2 * b[1][(i-1) % m] + c2) % r2;
		}
	}
}

int main() {
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);

	int tn; cin >> tn; for (int ti = 1; ti <= tn; ti++)
	{	
		cerr << ti << endl;
		cin >> n >> m;
		prepare();
		solve();
		printf("Case #%d: ", ti);
		cout << ans << endl;
	}
	//while(1);
	return 0;
} 
