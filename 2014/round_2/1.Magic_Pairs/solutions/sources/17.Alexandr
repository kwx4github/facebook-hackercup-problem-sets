#pragma comment(linker, "/STACK:600000000")
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>

#include <vector>
#include <set>
#include <map>
#include <bitset>
#include <queue>
#include <stack>
#include <list>

#include <ctime>
#include <cassert>

using namespace std;

typedef long double ldb;
typedef long long int64;
typedef pair <int, int> pii;
typedef pair <double, double> pdd;

#define y0 wwwwwww
#define y1 qqqqqqq
#define next NEXT
#define prev PREV
#define forn(i, n) for (int i = 0; i < (int) n; i++)
#define ford(i, n) for (int i = (int) n - 1; i >= 0; i--)
#define seta(a, b) memset(a, b, sizeof(a))
#define pb push_back
#define all(a) (a).begin(), (a).end()
#define last(a) a[a.size() - 1]
#define mp make_pair
#define fs first
#define sc second

template <class T> T sqr(T x) { return x * x; }

double const pi = 3.1415926535897932384626433832795;
int const inf = (int) 1e9;
int64 const inf64 = (int64) 4e18;
const string name = "a";

const int NMAX = 2001000;

int n, m, num, zn1[NMAX], zn2[NMAX];
int ca[NMAX], cb[NMAX];
long long a[NMAX], b[NMAX];
map<long long, int> M;

void solve() {
	long long x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
	cin >> n >> m >> x1 >> a1 >> b1 >> c1 >> r1 >> x2 >> a2 >> b2 >> c2 >> r2;
	a[0] = x1, b[0] = x2;
	forn(i, max(n, m)) {
		if (i > 0 && i < n) {
			a[i] = (a1 * a[(i - 1) % n] + b1 * b[(i - 1) % m] + c1) % r1;
		}
		if (i > 0 && i < m) {
			b[i] = (a2 * a[(i - 1) % n] + b2 * b[(i - 1) % m] + c2) % r2;
		}
	}
	M.clear();
	num = 0;
	forn(i, n) {
		if (M.find(a[i]) == M.end()) M[a[i]] = num++;
		zn1[i] = M[a[i]];
	}
	forn(i, m) {
		if (M.find(b[i]) == M.end()) M[b[i]] = num++;
		zn2[i] = M[b[i]];
	}

	seta(ca, 0);
	seta(cb, 0);
	long long ans = 0;
	int aa = 0, bb = 0, diff = 0;
	while (aa < n && bb < m) {
		ca[zn1[aa]] = 1;
		if (cb[zn1[aa]] == 1) diff--;
		else diff++;

		cb[zn2[bb]] = 1;
		if (ca[zn2[bb]] == 1) diff--;
		else diff++;

		int nowa = 0, nowb = 0;
		while (aa < n && ca[zn1[aa]]) aa++, nowa++;
		while (bb < m && cb[zn2[bb]]) bb++, nowb++;

		if (diff == 0) ans += nowa * 1LL * nowb;
	}
	cout << ans << endl;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen((name + ".in").data(), "r", stdin);
	freopen((name + ".out").data(), "w", stdout);
#endif

	int tst;
	cin >> tst;
	forn(i, tst) {
		printf("Case #%d: ", i + 1);
		solve();
		cerr << clock() << endl;
	}

	return 0;
}