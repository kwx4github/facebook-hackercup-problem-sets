#include <bits/stdc++.h>
using namespace std;

set <int> ss1, ss2;

int bo1[1000010], bo2[1000010];

int main() {
    freopen("_magic_pairs.txt", "r", stdin);
    freopen("_magic_pairs_out.txt", "w", stdout);
    int T;
    scanf("%d", &T);
    for (int cas = 1; cas <= T; cas++) {
        int n, m;
        scanf("%d%d", &n, &m);
        int x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
        scanf("%d%d%d%d%d", &x1, &a1, &b1, &c1, &r1);
        scanf("%d%d%d%d%d", &x2, &a2, &b2, &c2, &r2);
        bo1[0] = x1;
        bo2[0] = x2;
        for (int i = 1; i < n; i++) {
            bo1[i] = ((long long)a1 * bo1[(i-1)%n] + (long long)b1 * bo2[(i-1)%m] +c1) % r1;
            bo2[i] = ((long long)a2 * bo1[(i-1)%n] + (long long)b2 * bo2[(i-1)%m] +c2) % r2;
        }
        ss1.clear();
        ss2.clear();
        long long ans = 0;
        int pos = 0, padd = 0;
        for (int i = 0; i < n; i++) {
            if (ss1.find(bo1[i]) == ss1.end()) {
                ss1.insert(bo1[i]);
                while (pos < m && ss2.find(bo1[i]) == ss2.end()) {
                    ss2.insert(bo2[pos]);
                    pos++;
                }
                if (ss2.find(bo1[i]) == ss2.end()) break;
                padd = 0;
                if (ss1.size() == ss2.size()) {
                    while (true) {
                        padd++;
                        if (pos < m && ss2.find(bo2[pos]) != ss2.end()) pos++;
                        else break;
                    }
                }
            }
            ans += padd;
        }
        printf("Case #%d: %I64d\n", cas, ans);
    }
    return 0;
}


