#include <string>
#include <vector>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <algorithm>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <set>

using namespace std;

#define FOR(i, A, B) for(int i=(A); i<(B); i++)
#define REP(i, N) for(int i=0; i<(N); i++)
#define SZ(v) ((int)(v).size())
#define ALL(v) (v).begin(), (v).end()
#define SORT(v) sort(ALL(v))
#define MP make_pair
#define PB push_back
#define VI vector<int>
#define VS vector<string>
#define PII pair<int, int>
#define X first
#define Y second

int aabs(int a) { return (a<0)?-a:a; }
int mmax(int a, int b) { return (a>b)?a:b; }
int mmin(int a, int b) { return (a<b)?a:b; }

int N, M, x1, a1, b1, c1, r1, x2, a2, b2, c2, r2;
int B1[1000100], B2[1000100];
int mapa1[2000100], mapa2[2000100];
map<int, int> m;


int main()
{
    
    
    int T;
    cin>>T;
    REP(caso, T) {
        cin >> N >> M;
        cin >> x1 >> a1 >> b1 >> c1 >> r1;
        cin >> x2 >> a2 >> b2 >> c2 >> r2;
        
        B1[0] = x1;
        B2[0] = x2;
        
        FOR(i, 1, mmax(N, M)) {
            if(i < N) {
                B1[i] = (a1 * B1[(i-1) % N] + b1 * B2[(i-1)%M] + c1) % r1;
            }
            if(i < M) {
                B2[i] = (a2 * B1[(i-1) % N] + b2 * B2[(i-1)%M] + c2) % r2;
            }
        }
        
        //cout << "arreglos\n";
        //REP(i, N) cout << B1[i] << " ";
        //cout << endl;
        //REP(i, M) cout << B2[i] << " ";
        //cout << endl;
        //cout << "fin arreglos\n";
        
        m.clear();
        int mnum = 0;
        
        
        
        REP(i, N) if(m.find(B1[i]) == m.end()) m[B1[i]] = mnum++;
        REP(i, M) if(m.find(B2[i]) == m.end()) m[B2[i]] = mnum++;
        
        REP(i, N) B1[i] = m[B1[i]];
        REP(i, M) B2[i] = m[B2[i]];
        
        //cout << "arreglos\n";
        //REP(i, N) cout << B1[i] << " ";
        //cout << endl;
        //REP(i, M) cout << B2[i] << " ";
        //cout << endl;
        //cout << "fin arreglos\n";
        
        memset(mapa1, 0, sizeof(mapa1));
        memset(mapa2, 0, sizeof(mapa2));
        int diff1 = 0, diff2 = 0;
        int ib1, ie1, ib2, ie2;
        ib1 = 0;
        ie1 = 0;
        while(ie1 + 1 < N and B1[ie1+1] == B1[ib1]) ie1++;
        mapa1[B1[ib1]] = 1;
        ib2 = 0;
        diff2 = 1;
        diff1 = 0;
        
        long long tot = 0;
        
        while(1) {
            //cout << ib1 << " " << ie1 << endl;
            //cout << ib2 << " " << ie2 << endl;
            if(diff1 == 0 and diff2 == 0) {
                //cout << "suma\n";
                //cout << ib1 << " " << ie1 << endl;
                //cout << ib2 << " " << ie2 << endl;
                tot += (long long)(ie1-ib1+1) * (long long)(ie2-ib2+1);
                if(ie1 ==  N-1 or ie2 == M-1) break;
                ib1 = ie1+1;
                ie1++;
                ib2 = ie2+1;
                ie2++;
                mapa1[B1[ie1]] = 1;
                diff2 = 1;
                while(ie1+1 < N and mapa1[B1[ie1+1]] == 1) ie1++;
            } else if(diff2 > 0) {
                //cout << "caso diff2\n";
                //cout << ib1 << " " << ie1 << endl;
                //cout << ib2 << " " << ie2 << endl;
                while(ib2 < M and diff2 > 0) {
                    if(mapa2[B2[ib2]] == 0) {
                        mapa2[B2[ib2]] = 1;
                        if(mapa1[B2[ib2]] == 1) {
                            //cout << "found " << B2[ib2] << endl;
                            diff2--;
                            if(diff2 == 0) break;
                        } else diff1++;
                    }
                    ib2++;
                }
                if(ib2 >= M) break;
                ie2 = ib2;
                while(ie2+1 < M and mapa2[B2[ie2+1]] == 1) ie2++;
            } else if(diff1 > 0) {
                //cout << "caso diff1\n";
                //cout << ib1 << " " << ie1 << endl;
                //cout << ib2 << " " << ie2 << endl;
                while(ib1 < N and diff1 > 0) {
                    if(mapa1[B1[ib1]] == 0) {
                        mapa1[B1[ib1]] = 1;
                        if(mapa2[B1[ib1]] == 1) {
                            diff1--;
                            if(diff1 == 0) break;
                        } else diff2++;
                    }
                    ib1++;
                }
                if(ib1 >= N) break;
                ie1 = ib1;
                while(ie1+1 < N and mapa1[B1[ie1+1]] == 1) ie1++;
            }
        }
        
        cout << "Case #" << caso+1 << ": " << tot << endl;
        
    }
}
