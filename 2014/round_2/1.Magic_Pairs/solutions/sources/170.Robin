#include <bits/stdc++.h>/*{{{*/
using namespace std;typedef long long ll;typedef long double ld;void run();int main(){ios::sync_with_stdio(0);run();}/*}}}*/

ll board1[1234567];
ll board2[1234567];

template <class C> vector<pair<ll,ll>> prepare(C beg,C end){
  vector<pair<ll,ll>> res;

  set<int> have;
  for (; beg!=end; ++beg){
    if (have.count(*beg)) ++res.back().second;
    else res.emplace_back(*beg, 1), have.insert(*beg);
  }

  return res;
}

void run(){
  int tsts; cin>>tsts; for (int tst=1; tst<=tsts; ++tst){
    int n,m; cin>>n>>m;

    // generate
    {
      ll a1,b1,c1,r1; cin>>board1[0]>>a1>>b1>>c1>>r1;
      ll a2,b2,c2,r2; cin>>board2[0]>>a2>>b2>>c2>>r2;

      for (int i=1; i<max(n,m); i++){
        board1[i]=(a1*board1[(i-1)%n]+b1*board2[(i-1)%m]+c1)%r1;
        board2[i]=(a2*board1[(i-1)%n]+b2*board2[(i-1)%m]+c2)%r2;
      }
    }

    // show sequences
    if (false){
      for (int i=0; i<n; i++) cerr<<" "<<board1[i]; cerr<<endl;
      for (int i=0; i<m; i++) cerr<<" "<<board2[i]; cerr<<endl;
      cerr<<endl;
    }

    // decompose
    vector<pair<ll,ll>> a=prepare(board1,board1+n);
    vector<pair<ll,ll>> b=prepare(board2,board2+m);

    // calculate answer
    ll res=0;
    set<int> missa,missb;
    for (int i=0; i<min(a.size(),b.size()); i++){
      if (a[i].first!=b[i].first){
        if (missa.count(a[i].first)) missa.erase(a[i].first); else missb.insert(a[i].first);
        if (missb.count(b[i].first)) missb.erase(b[i].first); else missa.insert(b[i].first);
      }

      if (missa.empty() and missb.empty()){
        res+=a[i].second*b[i].second;
      }
    }

    // print answer
    cout<<"Case #"<<tst<<": "<<res<<endl;
  }
}
