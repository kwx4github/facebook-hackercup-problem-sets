#include<iostream>
#include<set>
#include<cstdio>
#include<cassert>
#include<iostream>
using namespace std;



#define ll long long

#define NN 1000006

ll B1[NN],B2[NN];
ll A1[ NN ],A2[ NN ];


ll N,M;







/*
123

14 18
3 5 0 94632 11
3 0 2 7710 11

*/

int main()
{

    freopen("_magic_pairs.txt","r",stdin);
    freopen("out.txt","w",stdout);

    ll T,ks,i,j,k;
    ll x1,a1,b1,c1,r1;
    ll x2,a2,b2,c2,r2;

    cin>>T;

    //cout<<T<<endl;

    for( ks=1;ks<=T;ks++ )
    {
        cin>>N>>M;

        cin>>x1>> a1>> b1>>c1>> r1;
        cin>>x2>> a2>> b2>>c2>> r2;





        B1[0] = x1;
        B2[0] = x2;



        for(i=1;i<max(N,M);i++)
        {
            if(i<N)B1[i] = ((a1 * B1[(i-1) % N])%r1 + (b1 * B2[(i-1) % M])%r1 + c1) % r1;
            if(i<M)B2[i] = ((a2 * B1[(i-1) % N])%r2 + (b2 * B2[(i-1) % M])%r2 + c2) % r2;
        }






        set< ll >s1,s2;


        j=-1;

        for(i=0;i<N;i++)
        {
            if( s1.count( B1[i] )==0 )
            {
                if( j!=-1 )A1[ j ]=i;
                j=i;
                s1.insert( B1[i] );
            }
        }


        A1[j]=N;


        for(i=0;i<M;i++)
        {
            if( s2.count( B2[i] )==0 )
            {
                if( j!=-1 )A2[ j ]=i;
                j=i;
                s2.insert( B2[i] );
            }
        }


        A2[j]=M;


/*
        for( i=0;i<N;i++ )cout<<B1[i]<<" ";cout<<endl;
        for( i=0;i<M;i++ )cout<<B2[i]<<" ";cout<<endl;


        for( i=0;i<N;i++ )cout<<A1[i]<<" ";cout<<endl;
        for( i=0;i<M;i++ )cout<<A2[i]<<" ";cout<<endl;
*/



        ll p1=1,p2=0;
        ll ans=0;

        s1.clear();
        s2.clear();

        set<ll>v1,v2;


        v1.insert( B1[0] );
        s1.insert( B1[0] );

        ll t=1;
        while( p1<N || p2<M )
        {



            if(t)
            {
                while( p2<M && !v1.empty() )
                {
                    if( v1.count( B2[p2] ) )v1.erase( B2[p2] );
                    else if( !s1.count( B2[p2] ) )
                    {
                        v2.insert( B2[p2] );
                    }

                    s2.insert( B2[p2] );
                    p2++;
                }
            }
            else
            {
                while( p1<N && !v2.empty() )
                {
                    if( v2.count( B1[p1] ) )v2.erase( B1[p1] );
                    else if( !s2.count( B1[p1] ) )
                    {
                        v1.insert( B1[p1] );
                    }

                    s1.insert( B1[p1] );

                    p1++;
                }
            }


            t^=1;

            if( v1.empty() && v2.empty() )
            {

              //  cout<<"asd"<<endl;
                assert((A1[p1-1]-p1+1)>=0);
                assert((A2[p2-1]-p2+1)>=0);

                ans+=(A1[p1-1]-p1+1)*(A2[p2-1]-p2+1);
                p1=A1[p1-1];
                p2=A2[p2-1];



                if(  p1<N )
                {
                    v1.insert( B1[p1] );
                    s1.insert( B1[p1] );
                    p1++;
                    t=1;
                }
                else break;

            }
//            cout<<p1<<" "<<p2<<endl;//while(1);


        }

        printf("Case #%d: ",ks);
        cout<<ans<<endl;

       // while(1);
    }



    return 0;
}
