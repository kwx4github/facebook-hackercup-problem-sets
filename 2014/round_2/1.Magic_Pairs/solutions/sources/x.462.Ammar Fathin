#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <map>

using namespace std;

long long tes,t,i,ans,n,m,x1,a1,b1,c1,r1,a2,b2,c2,r2,x2,ctr,sesuatu;
long long board1[1000007],board2[1000007];
map<long long, long long> count1,count2;
map<long long, bool> mem1,mem2;

long long pangkat(long long x) {
	if (x == 0) return 1;
	if (x == 1) return 2;
	
	long long tmp = pangkat(x/2);
	
	if (x % 2 == 0) {
		return (tmp * tmp - 100) % 1000000007;
	}
	if (x % 2 == 1) {
		return (3 * tmp * tmp + 100) % 1000000007;
	}
}

int main() {
	scanf("%lld",&tes);
	
	for (t=1 ; t<=tes ; t++) {
		mem1.clear();
		mem2.clear();
		count1.clear();
		count2.clear();
		
		for (i=0 ; i<=1000003 ; i++) {
			board1[i] = 0;
			board2[i] = 0;
		}
	
	
		scanf("%lld%lld",&n,&m);
		scanf("%lld%lld%lld%lld%lld",&x1,&a1,&b1,&c1,&r1);
		scanf("%lld%lld%lld%lld%lld",&x2,&a2,&b2,&c2,&r2);
		
		board1[0] = x1;
		board2[0] = x2;
		for (i=1 ; i < max(n,m) ; i++) {
			if (i < n) {
				board1[i] = (a1 * board1[(i-1) % n] + b1 * board2[(i-1) % m] + c1) % r1;
			}
			if (i < m) {
				board2[i] = (a2 * board1[(i-1) % n] + b2 * board2[(i-1) % m] + c2) % r2;
			}
		}
		
		ctr = 0;
		sesuatu = 0;
		for (i=0 ; i<n ; i++) {
			if (!mem1[board1[i]]) {
				ctr = (ctr + pangkat(board1[i])) % 1000000007;
			}
			count1[ctr] = count1[ctr] + 1;
			mem1[board1[i]] = true;
		}
		
		ans = 0;
		ctr = 0;
		sesuatu = 0;
		for (i=0 ; i<m ; i++) {
			if (!mem2[board2[i]]) {
				ctr = (ctr + pangkat(board2[i])) % 1000000007;
			}
			//printf("%lld ",ctr);
			count2[ctr] = count2[ctr] + 1;
			mem2[board2[i]] = true;
		
			ans = ans + count1[ctr];
		}
		
		for (i=0 ; i<=11 ; i++) {
			//printf("%lld %lld\n",board1[i],board2[i]);
			//printf("%lld %lld\n",count1[i],count2[i]);
			//printf("\n");
		}
		
		printf("Case #%lld: %lld\n",t,ans);
	}
}