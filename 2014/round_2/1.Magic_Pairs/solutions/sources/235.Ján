// pre-written code {{{
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <queue>
#include <numeric>
#include <iostream>
#include <cassert>
#include <set>
#define FOR(i,n) for(int _n=n,i=0;i<_n;++i)
#define FR(i,a,b) for(int _b=b,i=a;i<_b;++i)
#define CL(x) memset(x,0,sizeof(x))
#define PN printf("\n");
#define MP make_pair
#define PB push_back
#define SZ size()
#define ALL(x) x.begin(),x.end()
#define FORSZ(i,v) FOR(i,v.size())
#define FORIT(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
using namespace std;
typedef vector<int> VI;
typedef vector<string> VS;
typedef long long LL;
///////////////////////////////////////////////////////////////////////////////////
// }}}

int n,m;
LL x1, a1, b1, c1, r1;
LL x2, a2, b2, c2, r2;

int a[1000005];
int b[1000005];
map<int, int> fa,fb;
set<int> ma,mb;

void solve(){
  scanf("%d %d",&n,&m);
  LL N=n, M=m;
  scanf("%lld %lld %lld %lld %lld",&x1, &a1, &b1, &c1, &r1);
  scanf("%lld %lld %lld %lld %lld",&x2, &a2, &b2, &c2, &r2);
  a[0] = x1;
  b[0] = x2;
  for(int i=1;i<max(n,m);i++) {
    a[i] = (a1 * a[(i-1) % N] + b1 * b[(i-1) % M] + c1) % r1;
    b[i] = (a2 * a[(i-1) % N] + b2 * b[(i-1) % M] + c2) % r2;
  }
//  FOR(i,n) printf(" %d",a[i]); PN;
//  FOR(j,m) printf(" %d",b[j]); PN;
  fa.clear();
  fb.clear();
  for(int i=n-1;i>=0;i--) {
    fa[a[i]]=i;
  }
  for(int j=m-1;j>=0;j--) {
    fb[b[j]]=j;
  }
  ma.clear();
  mb.clear();
  int i=0,j=0;
  LL ret = 0;
  while(i<n && j<m) {    
    int ii=i,jj=j;
    //najst prve take, ktore maju rovnaku mnozinu farieb..
    while(i<=ii && j<=jj) {
      if(i<=ii) {
        ma.insert(a[i]);
        //aby bola farba a[i] aj v b-cku..
        if(fb.count(a[i])) {
          jj=max(jj,fb[a[i]]);
        } else {
          goto endy;
        }
        i++;
      }
      if(j<=jj) {
        mb.insert(b[j]);
        //aby bola farba b[j] aj v a-cku
        if(fa.count(b[j])) { 
          ii = max(ii, fa[b[j]]);          
        } else {
          goto endy;
        }
        j++;
      }
    }
//    printf("ii, jj: %d %d\n",ii,jj); 
    int ki=ii;
    for(ki=ii+1;ki<=n;ki++) {
      if(ki==n || (!ma.count(a[ki]))) break;
    }
    int kj=jj;  
    for(kj=jj+1;kj<=m;kj++) {
      if(kj==m || (!mb.count(b[kj]))) break;
    }
//    printf("ki, kj: %d %d\n",ki,kj);
    ret += (LL)(ki-ii) * (LL)(kj-jj);
    i = ki;
    j = kj;
  }
  endy:
  printf("%lld\n",ret);
}

int main(){
  int pvs; scanf("%d",&pvs);
  FR(ppp,1,pvs+1){
     printf("Case #%d: ",ppp);

     solve();
  }
}


// vim: fdm=marker:commentstring=\ \"\ %s:nowrap:autoread
