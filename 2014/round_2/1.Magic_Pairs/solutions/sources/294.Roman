#include <cstdio>
#include <iostream>
#include <map>

using namespace std;

const int maxn = 1000333;

long long board1[maxn], board2[maxn], f[maxn];

int i;

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int tc;
	scanf("%d", &tc);
	int tcc = 0;
	while (tc--)
	{
		tcc++;
		long long  n, m, x1, x2, a1, b1, c1, a2, b2, c2, r1, r2;
		memset(f, 0, sizeof(f));
		memset(board1, 0, sizeof(board1));
		memset(board2, 0, sizeof(board2));
		cin >> n >> m;
		cin >> x1 >> a1 >> b1 >> c1 >> r1;
		cin >> x2 >> a2 >> b2 >> c2 >> r2;
		board1[0] = x1;
		board2[0] = x2;
		for (i = 1; i < max(n, m); i++)
		{
			if (i < n) 
				board1[i] = (a1 * board1[(i - 1) % n] + b1 * board2[(i - 1) % m] + c1) % r1;
			if (i < m)
				board2[i] = (a2 * board1[(i - 1) % n] + b2 * board2[(i - 1) % m] + c2) % r2;
		}
		map <long long, int> mp1, mp2;
/*
		for (i = 0; i < n; i++)
			cout << board1[i] << " ";
		cout << endl;
		for (i = 0; i < m; i++)
			cout << board2[i] << " ";
		cout << endl; 
*/
		int l = 0;
		int conf = 0;
		int sz1 = 0;
		int sz2 = 0;
		for (i = 0; i < n; i++)
		{
			if (i > 0 && mp1[board1[i]] == 1) 
			{
				f[i] = f[i - 1];
				continue;
			}
			mp1[board1[i]] = 1;
			sz1++;
			while (mp2[board1[i]] == 0 && l < m)
			{
				if (mp2[board2[l]] == 0)
				{
					mp2[board2[l]] = 1;
					sz2++;
				}
				l++;
			}
			if (mp2[board1[i]] == 0) break;
			f[i] = 1;
			while (l < m && mp2[board2[l]] == 1 && sz1 == sz2)
			{
				f[i]++;
				l++;
			}
			if (sz1 != sz2) f[i] = 0;
			
		}
		long long ans = 0;
		for (i = 0; i < n; i++)
			ans += f[i];
		printf("Case #%d: ", tcc);
		cout << ans << endl;
	}
}