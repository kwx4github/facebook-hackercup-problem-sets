// TwT514 {{{
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cmath>
#include <bitset>
#include <queue>
#include <stack>
#include <functional>
#include <utility>
#define SZ(x) ((int)(x).size())
#define FOR(i,c) for (__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)
#define REP(i,n) for (int i=0; i<(int)(n); i++)
#define REP1(i,a,b) for (int i=(int)(a); i<=(int)(b); i++)
#define ALL(x) (x).begin(),(x).end()
#define MS0(x,n) memset((x),0,(n)*sizeof(*x))
#define MS1(x,n) memset((x),-1,(n)*sizeof(*x))
#define MP make_pair
#define PB push_back
#define RI(a) scanf("%d",&(a))
#define RII(a,b) scanf("%d%d",&(a),&(b))
#define RIII(a,b,c) scanf("%d%d%d",&(a),&(b),&(c))
using namespace std;
typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
// }}}

typedef unsigned long long ULL;
ULL my_rand() {
    ULL r=rand();
    r<<=32;
    r|=rand();
    return r;
}

#define N 1000010
int n,m,x[2][N];
void input() {
    RII(n,m);
    int x1,a1,b1,c1,r1;
    int x2,a2,b2,c2,r2;
    RII(x1,a1); RIII(b1,c1,r1);
    RII(x2,a2); RIII(b2,c2,r2);
    x[0][0]=x1;
    x[1][0]=x2;
    for ( int i=1; i<n || i<m; i++ ) {
        if ( i<n ) x[0][i]=((LL)a1*x[0][(i-1)%n]+(LL)b1*x[1][(i-1)%m]+c1)%r1;
        if ( i<m ) x[1][i]=((LL)a2*x[0][(i-1)%n]+(LL)b2*x[1][(i-1)%m]+c2)%r2;
    }
}

map<int,ULL> mp;
ULL conv( int v ) {
    if ( !mp.count(v) ) mp[v]=my_rand();
    return mp[v];
}

void build( int nn, int xx[N], ULL yy[N] ) {
    set<int> app;
    ULL s=0;
    REP(i,nn) {
        if ( !app.count(xx[i]) ) {
            app.insert(xx[i]);
            s^=conv(xx[i]);
        }
        yy[i]=s;
    }
    sort(yy,yy+nn);
}

ULL y[2][N];
void solve() {
    build(n,x[0],y[0]);
    build(m,x[1],y[1]);
    map<ULL,int> cnt;
    REP(i,n) cnt[y[0][i]]++;
    LL ans=0;
    REP(i,m) ans+=cnt[y[1][i]];
    printf("%lld\n",ans);
}

int main( int argc, char *argv[] ) {
    int t;
    RI(t);
    REP1(i,1,t) {
        input();
        if ( argc>=3 && (i<atoi(argv[1]) || i>atoi(argv[2])) ) continue;
        printf("Case #%d: ",i);
        solve();
    }
    return 0;
}


