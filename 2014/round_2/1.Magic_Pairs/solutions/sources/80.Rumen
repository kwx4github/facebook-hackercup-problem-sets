#include <set>
#include <cstdio>
#include <algorithm>
using namespace std;

int n, m;
int a[1 << 20], b[1 << 20];
set <int> ua, ub;

void read() {
	scanf("%d%d", &n, &m);
	long long x1, a1, b1, c1, r1;
	long long x2, a2, b2, c2, r2;
	
	scanf("%lld%lld%lld%lld%lld", &x1, &a1, &b1, &c1, &r1);
	scanf("%lld%lld%lld%lld%lld", &x2, &a2, &b2, &c2, &r2);
	
	a[0] = x1;
	b[0] = x2;
	for (int i = 1; i < n || i < m; i++) {
		if (i < n) a[i] = (a1 * (long long)a[(i - 1) % n] + b1 * (long long)b[(i - 1) % m] + c1) % r1;
		if (i < m) b[i] = (a2 * (long long)a[(i - 1) % n] + b2 * (long long)b[(i - 1) % m] + c2) % r2;
	}
}

void solve() {
	long long ans = 0;
	int one = 0, two = 0;
	int i, j;
	int oi, oj;
	
	ua.clear();
	ub.clear();
	
//	for (i = 0; i < n; i++) printf ("%d ", a[i]); printf ("\n");
//	for (i = 0; i < m; i++) printf ("%d ", b[i]); printf ("\n");
	
	oi = oj = i = j = -1;
	while (i < n && j < m) {
		for (; i + 1 < n; i++) {
			if (ua.count(a[i + 1]) == 0) {
				break;
			}
		}
		
		
		for (; j + 1 < m; j++) {
			if (ub.count(b[j + 1]) == 0) {
				break;
			}
		}
				
		if (one == 0 && two == 0) {
			ans += (long long)(i - oi + 1) * (long long)(j - oj + 1);
		}
		if (i + 1 == n || j + 1 == m) {
			break;
		}
		oi = i + 1;
		oj = j + 1;
		if (!ub.count(a[i + 1])) {
			++ one;
		} else {
			-- two;
		}
		ua.insert(a[i + 1]);
							   
		if (!ua.count(b[j + 1])) {
			++ two;
		} else {
			-- one;
		}
		ub.insert(b[j + 1]);
		
		++ i;
		++ j;
	}
	
	printf ("%lld\n", ans - 1);
}

int main() {
	int cases;
	
	scanf ("%d", &cases);
	for (int i = 1; i <= cases; i++) {
		read();
		printf ("Case #%d: ", i);
		solve();
	}
	
	return 0;
}
