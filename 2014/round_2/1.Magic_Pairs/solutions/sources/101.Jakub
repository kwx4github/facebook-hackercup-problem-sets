// Jakub Radoszewski

//#include<iostream>
#include<cstdio>
#include<cctype>
#include<cmath>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<string>
#include<list>
#include<deque>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<utility>
#include<sstream>
#include<cstring>
#include<numeric>
#include<cassert>
using namespace std;

#define FOR(I,A,B) for(int I=(A);I<=(B);I++)
#define FORD(I,A,B) for(int I=(A);I>=(B);I--)
#define REP(I,N) for(int I=0;I<(N);I++)
#define ALL(X) (X).begin(),(X).end()
#define PB push_back
#define MP make_pair
#define FI first
#define SE second
#define INFTY 100000000
#define VAR(V,init) __typeof(init) V=(init)
#define FORE(I,C) for(VAR(I,(C).begin());I!=(C).end();I++)
#define SIZE(x) ((int)(x).size())

typedef vector<int> VI;
typedef pair<int,int> PII;
typedef long long ll;
typedef vector<string> VS;

ll nwd(ll a,ll b) { return !b?a:nwd(b,a%b); }
inline int CEIL(int a,int b) { return a%b ? a/b+1 : a/b; }
template <class T> inline T sqr(const T&a) { return a*a; }

int los(int m)
{
  return (int)((double)m*(rand()/(RAND_MAX+1.0)));
}

int n,m;
int x1, a1, b1, c1, r1;
int x2, a2, b2, c2, r2;

int t1[1000010];
int t2[1000010];

set<int> z1,z2;
map<int,int> mapa;
int ilep,ilem;

void doit()
{
  assert(n<1000010);
  assert(m<1000010);
  z1.clear(); z2.clear();
  mapa.clear();
  ilep=ilem=0;
  ll wyn=0;
  int i=0,j=0;
  while (i<n && j<m)
  {
    // i
    int i0=i;
    int x=t1[i0];
    z1.insert(x);
    if (mapa.find(x)!=mapa.end())
    {
      mapa[x]=0;
      --ilem;
    } else
    {
      mapa[x]=1;
      ++ilep;
    }
    while (i0<n && z1.find(t1[i0])!=z1.end()) ++i0;

    // j
    int j0=j;
    int y=t2[j0];
    z2.insert(y);
    if (mapa.find(y)!=mapa.end())
    {
      mapa[y]=0;
      --ilep;
    } else
    {
      mapa[y]=-1;
      ++ilem;
    }
    while (j0<m && z2.find(t2[j0])!=z2.end()) ++j0;

    if (!ilep && !ilem) wyn+=((ll)(i0-i))*(j0-j);

    i=i0;
    j=j0;
  }
  printf("%lld\n",wyn);
}

void tc()
{
  scanf("%d%d",&n,&m);
  scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
  scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);
  t1[0]=x1; t2[0]=x2;
  FOR(i,1,max(n,m)-1)
  {
    if (i<n) t1[i] = (((ll)a1) * t1[(i-1) % n] + ((ll)b1) * t2[(i-1) % m] + c1) % r1;
    if (i<m) t2[i] = (((ll)a2) * t1[(i-1) % n] + ((ll)b2) * t2[(i-1) % m] + c2) % r2;
  }
  fprintf(stderr,"%d %d\n",n,m);
  //REP(i,n) printf("%d ",t1[i]); puts("");
  //REP(i,m) printf("%d ",t2[i]); puts("");

  doit();
}

int main()
{
  int ILE;
  scanf("%d",&ILE);
  FOR(iii,1,ILE)
  {
    printf("Case #%d: ",iii);
    fprintf(stderr,"Case #%d: ",iii);
    tc();
  }
  return 0;
}
