#include <iostream>
#include <vector>
#include <set>
using namespace std;

long long y1[1001000], y2[1001000];

int main() {
  int t; cin >> t;
  for (int c = 1; c <= t; c++) {
    long long n, m; cin >> n >> m;
    long long x1, a1, b1, c1, r1; cin >> x1 >> a1 >> b1 >> c1 >> r1;
    long long x2, a2, b2, c2, r2; cin >> x2 >> a2 >> b2 >> c2 >> r2;

    y1[0] = x1; y2[0] = x2;
    for (int i = 1; i < max(n, m); i++) {
      if (i < n) y1[i] = ((a1*y1[(i+n-1)%n])%r1 + (b1*y2[(i+m-1)%m])%r1 + c1) % r1;
      if (i < m) y2[i] = ((a2*y1[(i+n-1)%n])%r2 + (b2*y2[(i+m-1)%m])%r2 + c2) % r2;
    }

    /* cout << "Y1: ";
    for (int i = 0; i < n; i++) cout << y1[i] << " ";
    cout << endl;
    cout << "Y2: ";
    for (int i = 0; i < m; i++) cout << y2[i] << " ";
    cout << endl; */

    vector<pair<int, long long> > v1, v2;
    set<long long> s1, s2;
    for (int i = 0; i < n; i++)
      if (s1.find(y1[i]) == s1.end()) {
        s1.insert(y1[i]);
        v1.push_back(make_pair(i, y1[i]));
      }
    for (int i = 0; i < m; i++)
      if (s2.find(y2[i]) == s2.end()) {
        s2.insert(y2[i]);
        v2.push_back(make_pair(i, y2[i]));
      }

    /* cout << "V1: ";
    for (int i = 0; i < v1.size(); i++) cout << "(" << v1[i].first << ", " << v1[i].second << ") ";
    cout << endl;
    cout << "V2: ";
    for (int i = 0; i < v2.size(); i++) cout << "(" << v2[i].first << ", " << v2[i].second << ") ";
    cout << endl; */

    long long res = 0;
    s1.clear(); s2.clear();
    for (int i = 0; i < min(v1.size(), v2.size()); i++) {
      long long p1 = v1[i].second, p2 = v2[i].second;
      if (p1 != p2) {
        if (s2.erase(p1) == 0) s1.insert(p1);
        if (s1.erase(p2) == 0) s2.insert(p2);
      }
      if (s1.size() == 0 && s2.size() == 0) {
        long long e1, e2;
        if (i+1 < v1.size()) e1 = v1[i+1].first - v1[i].first;
        else e1 = n - v1[i].first;
        if (i+1 < v2.size()) e2 = v2[i+1].first - v2[i].first;
        else e2 = m - v2[i].first;
        res += e1*e2;
      }
    }

    cout << "Case #" << c << ": " << res << endl;
  }
  return 0;
}
