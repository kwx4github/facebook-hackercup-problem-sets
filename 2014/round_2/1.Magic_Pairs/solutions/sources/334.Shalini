#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
using namespace std;
long long bd1[2000000], bd2[2000000];
void input(int tt)
{
    long long n,m,x1,x2,b1,b2,c1,c2,r1,r2,cnt = 0,a1,a2;
    //tak in input
    cin>>n>>m;
    cin>>x1>>a1>>b1>>c1>>r1;
    cin>>x2>>a2>>b2>>c2>>r2;
    bd1[0] = x1;
    bd2[0] = x2;
    //form arrays
    for(int i = 1;i <= max(n,m);++i){
    bd1[i] = ( (a1 * bd1[(i-1+n) % n])%r1 + (b1 * bd2[(i-1+m) % m])%r1 + c1%r1) % r1;
    bd2[i] = ( (a2 * bd1[(i-1+n) % n])%r2 + (b2 * bd2[(i-1+m) % m])%r2 + c2%r2) % r2;
    }
    //process
    set<long long>v1,v2;
    int j = 0;
    int lvsz = 0;
    long long lcnt = 0;
    for(int i = 0;i < n;++i)
    {
        v1.insert(bd1[i]);
        int vsz = v1.size();

        if(lvsz == vsz)
        {
            cnt += lcnt;
            continue;
        }

        bool fl = 0;
        long long tc = 0;

        for(;j < m;++j)
        {
            if(v1.find(bd2[j])== v1.end())
            {
                break;
            }
            v2.insert(bd2[j]);
            if(!fl&&(vsz == (int)v2.size()) )
            {
                fl = 1;
                ++tc;
            }
            else if(fl)
            {
                ++tc;
            }
        }

        cnt += tc;
        lcnt = tc;
        lvsz = vsz;
      //  cout<<tc<<" "<<v2.size()<<" "<<j<<"\n";
    }
    cout<<"Case #"<<tt<<": "<<cnt<<"\n";
}

int main()
{
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int t,tt=0;
    cin>>t;
    while(t--)
    {
        ++tt;
        input(tt);
    }
    return 0;
}
