#include <bits/stdc++.h>
using namespace std;
#define MAX 1000005
typedef long long ill;
ill B1[MAX],B2[MAX];

int main()
{
	freopen("inp.txt","r",stdin);
	freopen("out.txt","w",stdout);

	int t;
	cin >> t;
	for(int k = 1; k <= t; ++k){
		int n,m;
		cin >> n >> m;
		ill x1,x2,a1,a2,b1,b2,c1,c2,r1,r2;
		cin >> x1 >> a1 >> b1 >> c1 >> r1 >> x2 >> a2 >> b2 >> c2 >> r2;
	
		B1[0] = x1;
		B2[0] = x2;
		for(int i = 1; i < max(n,m); ++i){
			if (i < n)
				B1[i] = (a1 * B1[(i-1) % n] + b1 * B2[(i-1) % m] + c1) % r1;
			if (i < m)
				B2[i] = (a2 * B1[(i-1) % n] + b2 * B2[(i-1) % m] + c2) % r2;
		}

		// for(int i = 0; i < n; ++i) cout << B1[i] << " "; cout << endl;
		// for(int i = 0; i < m; ++i) cout << B2[i] << " "; cout << endl;

		set<int> s1,s2;
		int i = 0, j = 0;
		ill ans = 0;
		ill pre = 0;

		while(i < n){
			int lt = -1,rt= -1;
			if (i > 0 && (s1.find(B1[i]) != s1.end())){
				ans += pre;
				++i;
				continue;
			}

			s1.insert(B1[i]);
			while(j < m){
				s2.insert(B2[j]);
				if ((s2.find(B1[i]) != s2.end()) && s2.size() > s1.size()){
					rt = j;
					break;
				}
				else if (lt == -1 && s2.find(B1[i]) != s2.end() && s2.size() == s1.size()){
					lt = j;
				}
				++j;  
			}
			//cout << i << " " << j << " " << lt << " " << rt << endl;
			if (lt != -1){
				if (j == m) ans += m-lt, pre = m-lt;
				else ans += rt-lt, pre = rt-lt;
			} else pre = 0;
			++i;
		}
		cout << "Case #" << k << ": " << ans << endl;
	}
}