// AUTHOR : SIKANDER MAHAN
// sikander_nsit
// PLAGIARISM IS BAD

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<string.h>
#define tr(c,it) for(typeof(c.begin()) it=c.begin();it!=c.end();++it)
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define itor(c) typeof(c.begin())
#define ll long long
#define vi vector<int>
#define vs vector<string>
#define si set<int>
#define msi multiset<int>
#define ii pair<int,int>
#define sii set<ii>
#define vii vector<ii>
#define vvi vector<vi>
#define pb push_back
//#define mp make_pair

using namespace std;

ll arr[3][1000003];
set<ll> s,s1;
map<ll,ll> mp[3];

int main()
{
    //ios::sync_with_stdio(false);
    freopen("input.txt","r",stdin);
    freopen("out.txt","w",stdout);
    ll t=0,i=0,j=0,n=0,m,f,flag,k=0,temp=0,cnt=0,num=0,z;
    ll a1,a2,b1,b2,c1,c2,r1,r2,x1,x2;
    ll ans,t1,t2,ind;
    ll a[3];
    cin>>t;
    for(z=1;z<=t;++z)
    {
        s.clear();
        s1.clear();
        mp[1].clear();
        mp[2].clear();
       cin>>n>>m;
       cin>>x1>>a1>>b1>>c1>>r1;
       cin>>x2>>a2>>b2>>c2>>r2;
       arr[1][0]=x1;
       arr[2][0]=x2;
       temp=max(n,m);
       flag=0;
       for(i=1;i<temp;++i)
       {
           if(i<n)
           {
               arr[1][i]=(a1*arr[1][i-1]+b1*arr[2][(i-1)%m]+c1)%r1;
           }
           if(i<m)
           {
               arr[2][i]=(a2*arr[1][(i-1)%n]+b2*arr[2][i-1]+c2)%r2;
           }
       }
       for(i=0;i<n;++i)
       {
           if(mp[1].find(arr[1][i])==mp[1].end())
           {
               mp[1][arr[1][i]]=i;
           }
       }
       for(i=0;i<m;++i)
       {
           if(mp[2].find(arr[2][i])==mp[2].end())
           {
               mp[2][arr[2][i]]=i;
           }
       }
       arr[1][n]=-1;
       arr[2][m]=-1;
       s1.insert(arr[1][0]);
       f=2;
       ans=0;
       a[1]=0;
       a[2]=0;
           while(true)
           {
               ind=-1;
               tr(s1,it)
               {
                   temp=(*it);
                   if(mp[f].find(temp)==mp[f].end())
                   {
                       flag=1;
                       break;
                   }
                   ind=max(ind,mp[f][temp]);
                   s.insert(temp);
               }
               s1.clear();
               if(flag==1)
                break;
               for(j=a[f];j<=ind;++j)
               {
                   if(s.find(arr[f][j])==s.end())
                   s1.insert(arr[f][j]);
               }
               a[f]=ind;
               t1=0;
               t2=0;
               if(s1.size()==0)
               {
                   k=a[1];
                   while(s.find(arr[1][k])!=s.end()){
                    ++t1;
                    ++k;
                   }
                   k=a[2];
                   while(s.find(arr[2][k])!=s.end()){
                    ++k;
                    ++t2;
                   }
                   ans+=t1*t2;
                   a[1]+=t1;
                   a[2]+=t2;
                   s1.insert(arr[f][a[f]]);
               }
               f=3-f;
           }
       cout<<"Case #"<<z<<": ";
       cout<<ans<<endl;
    }
    return 0;
}
