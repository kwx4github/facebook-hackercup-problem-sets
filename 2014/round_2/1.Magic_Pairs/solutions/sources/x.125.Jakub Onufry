import sys

S1 = set()
S2 = set()
C = set()

def add_to_1(x):
  if x in C:
    return
  if x in S2:
    C.add(x)
    S2.remove(x)
    return
  S1.add(x)

def add_to_2(x):
  if x in C:
    return
  if x in S1:
    C.add(x)
    S1.remove(x)
    return
  S2.add(x)

def Eq():
  return not S1 and (not S2)

T = int(sys.stdin.readline())
for t in range(T):
  (N,M) = [int(n) for n in sys.stdin.readline().split(" ")]
  (x1,a1,b1,c1,r1) = [int(n) for n in sys.stdin.readline().split(" ")]
  B1 = [x1]
  (x2,a2,b2,c2,r2) = [int(n) for n in sys.stdin.readline().split(" ")]
  B2 = [x2]
  for i in range(1,max(N,M)):
    if (i < N):
      B1.append((a1 * B1[i-1] + b1 * B2[(i-1) % M] + c1) % r1)
    if (i < M):
      B2.append((a2 * B1[(i-1) % N] + b2 * B2[i-1] + c2) % r2)

  S1 = set()
  S2 = set()
  C = set()
  i1 = 0
  i2 = 0
  res = 0
  while i1 < N or i2 < M:
    if i1 == N:
      add_to_2(B2[i2])
      i2 += 1
    elif i2 == M:
      add_to_1(B1[i1])
      i1 += 1
    elif S1:
      add_to_2(B2[i2])
      i2 += 1
    else:
      add_to_1(B1[i1])
      i1 += 1
    if Eq():
      c1 = 1
      c2 = 1
      while i1 < N and B1[i1] in S1:
        i1 += 1
        c1 += 1
      while i2 < M and B2[i2] in S2:
        i2 += 1
        c2 += 1
      res += c1 * c2
  print "Case #%d: %d" % (t+1, res)
