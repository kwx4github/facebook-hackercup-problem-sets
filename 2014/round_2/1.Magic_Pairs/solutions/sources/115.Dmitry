#pragma comment (linker, "/STACK:268435456")
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <queue>
#include <cmath>
#include <cctype>
#include <sstream>
#include <ctime>

using namespace std;
const int maxn = 1000100;

int n, m;
long long x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
int a[maxn];
int b[maxn];

map<int, int> used;
map<int, int> u2;
int lst[maxn];
int p[maxn];
int p2[maxn];

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    int tn;
    cin >> tn;
    for (int tc = 0; tc < tn; tc++)
    {
    	cin >> n >> m >> x1 >> a1 >> b1 >> c1 >> r1 >> x2 >> a2 >> b2 >> c2 >> r2;
    	a[0] = x1;
    	b[0] = x2;
    	for (int i = 1; i < n || i < m; i++)
    	{
    		if (i < n)
    			a[i] = (a1 * a[(i-1) % n] + b1 * b[(i-1) % m] + c1) % r1;
    		if (i < m)
    			b[i] = (a2 * a[(i-1) % n] + b2 * b[(i-1) % m] + c2) % r2;
    	}
    	/*for (int i = 0; i < n; i++)
    		cout << a[i] << " ";
    	cout << endl;
    	for (int i = 0; i < m; i++)
    		cout << b[i] << " ";
    	cout << endl;*/

		used.clear();
		u2.clear();
		int cnt = 0;

		for (int i = 0; i < n; i++)
			if (used.find(a[i]) == used.end())
			{
				p[cnt] = i;
				used[a[i]] = cnt++;
			}
		p[cnt] = n;
		int cnt2 = 0;
		int mx = -1;
		int lc = 0;

		/*for (int i = 0; i <= cnt; i++)
			cout << p[i] << " ";
		cout << endl;*/

		int fail = 0;
		for (int i = 0; i < m; i++)
			if (u2.find(b[i]) == u2.end())
			{
				if (used.find(b[i]) == used.end())
				{
					p2[cnt2] = i;
					fail = 1;
					break;
				}
				mx = max(mx, used[b[i]]);
				if (cnt2 == mx)
					lst[lc++] = cnt2;
				p2[cnt2] = i;
				u2[b[i]] = cnt2++;
			}
		if (!fail)
			p2[cnt2] = m;

		/*for (int i = 0; i <= cnt2; i++)
			cout << p2[i] << " ";
		cout << endl;
		for (int i = 0; i < lc; i++)
			cout << lst[i] << " ";
		cout << endl;*/

		long long result = 0;
		for (int i = 0; i < lc; i++)
			result += 1LL * (p[lst[i] + 1] - p[lst[i]]) * (p2[lst[i] + 1] - p2[lst[i]]);
    	cout << "Case #" << tc + 1 << ": " << result << endl;
    }    
    return 0;
}