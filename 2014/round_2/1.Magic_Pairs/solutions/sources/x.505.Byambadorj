#include <cstdio>
#include <map>
#include <set>
#include <iostream>
using namespace std;


int board1[1000005];
int board2[1000005];
int sz1[1000005];
int sz2[1000005];


int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    int test, n, m, x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
    scanf("%d",&test);
    for(int t = 1; t <= test; t++){
        map <int, int> indx2;

        scanf("%d%d",&n,&m);
        scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
        scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);

        board1[0] = x1;
        board2[0] = x2;
        indx2[x2] = 0;

        for(int i = 1; i < max(n,m); i++){
            if(i < n)
                board1[i] = (a1 * board1[(i-1) % n] + b1 * board2[(i-1) % m] + c1) % r1;
            if(i < m){
                board2[i] = (a2 * board1[(i-1) % n] + b2 * board2[(i-1) % m] + c2) % r2;
                if(indx2.find(board2[i]) == indx2.end())
                    indx2[board2[i]] = i;
            }
        }

        set<int> q1,q2;
        for(int i = 0; i < n; i++){
            //cout << board1[i] << " ";
            q1.insert(board1[i]);
            sz1[i] = q1.size();
        }
        //cout << endl;
        for(int i = 0; i < m; i++){
            //cout << board2[i] << " ";
            q2.insert(board2[i]);
            sz2[i] = q2.size();
        }
        //cout << endl;

        long long cnt = 0;
        int mx = 0;
        for(int i = 0; i < n; i++){
            if(indx2.find(board1[i]) == indx2.end())break;
            mx = max(mx, indx2[board1[i]]);
            if(sz1[i] == sz2[mx]){
                //cout << i << " " << mx << endl;
                //if(mx != 0)return 0;
                int l = mx, r = m;
                while(l < r){
                    int mid = (l + r + 1) / 2;
                    if(sz2[mid] != sz1[i]) r = mid - 1;
                    else l = mid;
                }
                cnt += (l - mx + 1);
            }
        }
        printf("Case #%d: %lld\n",t,cnt);
    }

    return 0;
}
