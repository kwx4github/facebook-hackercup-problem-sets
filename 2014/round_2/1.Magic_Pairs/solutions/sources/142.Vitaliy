#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility> 
using namespace std;
 
#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,value) memset(A,value,sizeof(A))
 
#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define Pi 3.14159265358979

typedef long long Int;
typedef unsigned long long UINT;
typedef vector <int> VI;
typedef pair <int, int> PII;

const int INF = 1000000000;
const int MAX = 4000000;
const int MAX2 = 200000;

#define BASE 1000000007

int T, n, m, z;
int x1, a1, b1, c1, r1;
int x2, a2, b2, c2, r2;
int A[MAX];
int B[MAX];
int C[MAX];
int W[MAX];
Int P[MAX];
Int HA[MAX];
Int HB[MAX];
map <Int, int> M;

int main()
{
	freopen("_magic_pairs.txt", "r", stdin);
	freopen("out.txt", "w", stdout);

	P[0] = 1;
	FOR (i,1,MAX)
		P[i] = P[i-1] * BASE;

	scanf("%d", &T);
	FOR (test,0,T)
	{
		scanf("%d %d", &n, &m);
		scanf("%d %d %d %d %d", &x1, &a1, &b1, &c1, &r1);
		scanf("%d %d %d %d %d", &x2, &a2, &b2, &c2, &r2);
		A[0] = x1;
		B[0] = x2;
		FOR (i,1,max(n, m))
		{
			//Board1[i] = (a1 * Board1[(i-1) % N] + b1 * Board2[(i-1) % M] + c1) % r1, for 0 < i < N
			//Board2[i] = (a2 * Board1[(i-1) % N] + b2 * Board2[(i-1) % M] + c2) % r2, for 0 < i < M
			if (i < n)
				A[i] = (Int(a1) * A[(i-1) % n] + Int(b1) * B[(i-1) % m] + c1) % r1;
			if (i < m)
				B[i] = (Int(a2) * A[(i-1) % n] + Int(b2) * B[(i-1) % m] + c2) % r2;
		}
		/*FOR (i,0,n)
			cout << A[i] << ' ';
		cout << endl;
		FOR (i,0,m)
			cout << B[i] << ' ';
		cout << endl;*/

		z = 0;
		FOR (i,0,n)
			C[z ++] = A[i];
		FOR (i,0,m)
			C[z ++] = B[i];
		sort(C, C+z);
		FOR (i,0,n)
			A[i] = lower_bound(C, C+z, A[i]) - C;
		FOR (i,0,m)
			B[i] = lower_bound(C, C+z, B[i]) - C;

		Int cur;

		FILL(W, 0);
		cur = 0;
		FOR (i,0,n)
		{
			if (W[A[i]] == 0)
				cur += P[A[i]];
			W[A[i]] = 1;
			HA[i] = cur;
		}
		FILL(W, 0);
		cur = 0;
		FOR (i,0,m)
		{
			if (W[B[i]] == 0)
				cur += P[B[i]];
			W[B[i]] = 1;
			HB[i] = cur;
		}
		
		M.clear();
		FOR (i,0,n)
			M[HA[i]] ++;
		Int res = 0;
		FOR (i,0,m)
			res += M[HB[i]];
		printf("Case #%d: %I64d\n", test+1, res);
		cerr << test << endl;
	}

	return 0;
}