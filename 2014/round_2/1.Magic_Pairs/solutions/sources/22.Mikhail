#include <iostream>
#include <vector>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <fstream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <algorithm>
#include <numeric>

#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define forn(i, n) for (int i = 0; i < (int)(n); ++i)
#define fore(i, a, b) for (int i = (int)(a); i <= (int)(b); ++i)

using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef long long i64;
typedef vector<i64> vi64;
typedef vector<vi64> vvi64;

const int maxn = 1 << 20;
i64 a[maxn], b[maxn];

int main() {
#ifdef LOCAL_DEFINE
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif

    int T;
    cin >> T;
    forn (t, T) {
        cerr << "Case #" << t + 1 << '\n';
        int N, M;
        i64 x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
        cin >> N >> M >> x1 >> a1 >> b1 >> c1 >> r1 >> x2 >> a2 >> b2 >> c2 >> r2;
        a[0] = x1;
        b[0] = x2;
        for (int i = 1; i < max(N, M); ++i) {
            a[i] = (a1 * a[(i - 1) % N] + b1 * b[(i - 1) % M] + c1) % r1;
            b[i] = (a2 * a[(i - 1) % N] + b2 * b[(i - 1) % M] + c2) % r2;
        }
/*        forn(i, N) cout << a[i] << ' ';
        cout << '\n';
        forn(j, M) cout << b[j] << ' ';
        cout << '\n';*/

        set<i64> as, bs;
        map<i64, int> c;

        i64 ans = 0;
        int i = 0, j = 0;
        int nz = 0;
        while (i < N && j < M) {
            as.insert(a[i]);
            bs.insert(b[j]);
            nz -= (c[a[i]] != 0);
            ++c[a[i]];
            nz += (c[a[i]] != 0);
            nz -= (c[b[j]] != 0);
            --c[b[j]];
            nz += (c[b[j]] != 0);
            int ii = i, jj = j;
            while (ii < N && as.count(a[ii])) {
                ++ii;
            }
            while (jj < M && bs.count(b[jj])) {
                ++jj;
            }
            if (nz == 0) {
                ans += 1LL * (ii - i) * (jj - j);
            }

            i = ii;
            j = jj;
        }
        cout << "Case #" << t + 1 << ": " << ans << '\n';
    }

#ifdef LOCAL_DEFINE
    cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
#endif
    return 0;
}
