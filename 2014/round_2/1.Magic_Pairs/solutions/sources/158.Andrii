#include <cstdio>
#include <cstring>
#include <iostream>
#include <set>
#include <vector>
#include <string>
#include <sstream>
#include <algorithm>
#include <map>
using namespace std;
#define pb push_back
#define L(s) ((int)(s).size())
#define VI vector<int>
#define ll long long
#define pii pair<int,int>
#define mp make_pair
#define x first
#define y second
#define inf 1000000000
#define all(s) (s).begin(), (s).end()
int n, m, t;
int x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
set<int> s1, s2, c;
int br1[1111111];
int br2[1111111];
int main() {
	freopen("_magic_pairs.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	cin >> t;
	for(int tc = 1; tc <= t; ++tc) {
		cerr << tc << endl;
		cin >> n >> m;
		cin >> x1 >> a1 >> b1 >> c1 >> r1;
		cin >> x2 >> a2 >> b2 >> c2 >> r2;
		
		br1[0] = x1;
		br2[0] = x2;

		for(int i = 1; i < max(m, n); ++i) {
			if (i < n) br1[i] = ((ll)a1 * br1[(i - 1) % n] + (ll)b1 * br2[(i - 1) % m] + (ll)c1) % r1;
			if (i < m) br2[i] = ((ll)a2 * br1[(i - 1) % n] + (ll)b2 * br2[(i - 1) % m] + (ll)c2) % r2;
		}
	
		int i = 0, j = 0;
		ll ans = 0;
		int oi, oj;

		s1.clear();
		s2.clear();
		c.clear();

		for(int sz = 1; ; ++sz) {

			oi = i;
			s1.insert(br1[i++]);
			while(i < n && s1.count(br1[i])) ++i;

			oj = j;
			s2.insert(br2[j++]);
			while(j < m && s2.count(br2[j])) ++j;

			if (s2.count(br1[oi])) c.insert(br1[oi]);
			if (s1.count(br2[oj])) c.insert(br2[oj]);

			if (L(c) == sz) {
				ans += (ll)(i - oi) * (j - oj);
			}
			
			if (i == n || j == m) break;

		}
		
		cout << "Case #" << tc <<": " << ans << endl;
	}
}