#include <cstdio>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
using namespace std;

typedef long long LL;

void init(vector<int> u[]){
    int n[2],x[2],a[2],b[2],c[2],r[2];
    for(int i=0;i<2;i++){
        scanf("%d",&n[i]);
        u[i].resize(n[i]);
    }
    for(int i=0;i<2;i++){
        scanf("%d%d%d%d%d",x+i,a+i,b+i,c+i,r+i);
        u[i][0]=x[i];
    }
    int t=max(n[0],n[1]);
    for(int i=1;i<t;i++){
        for(int j=0;j<2;j++) if(i<n[j]){
            u[j][i]=(LL(a[j])*u[0][(i-1)%n[0]]
                    +LL(b[j])*u[1][(i-1)%n[1]]
                    +c[j])%r[j];
        }
    }
}

int main(){
    int cs,no=0;
    scanf("%d",&cs);
    while(cs--){
        LL ans=0;
        vector<int> a[2];
        init(a);
        map<int,int> v;
        set<int> u[2];
        int cnt=0;
        size_t i[2]={0,0},j[2];
        while(1){
            bool go=true;
            for(int o=0;o<2;o++)
                if(i[o]==a[o].size()) go=false;
            if(!go) break;
            for(int o=0;o<2;o++){
                int x=a[o][j[o]=i[o]++];
                if(v[x]^=1) cnt++; else cnt--;
                u[o].insert(x);
                while(i[o]!=a[o].size() && u[o].count(a[o][i[o]])) i[o]++;
            }
            if(!cnt) ans+=(i[0]-j[0])*LL(i[1]-j[1]);
        }
        printf("Case #%d: %I64d\n",++no,ans);
    }
}
