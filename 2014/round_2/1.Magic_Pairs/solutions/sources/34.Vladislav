#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

int n;
int m;
int x1, a1, b1, c1, r1;
int x2, a2, b2, c2, r2;

int x[1000000];
int y[1000000];
set<int> ax, ay, az;

int main () {
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
		scanf ("%d%d", &n, &m);
		scanf ("%d%d%d%d%d", &x1, &a1, &b1, &c1, &r1);
		scanf ("%d%d%d%d%d", &x2, &a2, &b2, &c2, &r2);
		x[0] = x1;
		y[0] = x2;
		for (int i = 1; i < max (n, m); i++) {
			if (i < n) x[i] = ((ll)a1 * x[(i - 1) % n] + (ll)b1 * y[(i - 1) % m] + c1) % r1;
			if (i < m) y[i] = ((ll)a2 * x[(i - 1) % m] + (ll)b2 * y[(i - 1) % m] + c2) % r2;
		}
		ax.clear ();
		ay.clear ();
		az.clear ();
		int i = 0, j = 0;
		ll ans = 0;
		while (true) {
			int ii = i, jj = j;
			while (ii < n && ax.find (x[ii]) != ax.end ()) ii++;
			while (jj < m && ay.find (y[jj]) != ay.end ()) jj++;
			if (sz (az) == sz (ax)) ans += (ll)(ii - i) * (jj - j);
//			printf ("%d %d - %d %d\n", i, j, ii, jj);
			i = ii;
			j = jj;
			if (i == n || j == m) break;
			ax.insert (x[i]);
			ay.insert (y[j]);
			az.insert (x[i]);
			az.insert (y[j]);
		}
		cout << "Case #" << it << ": " << ans;
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
	}
	return 0;
}