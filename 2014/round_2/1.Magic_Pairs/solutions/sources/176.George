#include <cstdio>
#include <iostream>
#include <fstream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctype.h>
#include <cstring>
#include <string>
#include <ctime>
#include <cassert>
#include <utility>

using namespace std;

#define MAXN 1000050

int T, N, M;
long long X1, A1, B1, C1, R1, X2, A2, B2, C2, R2;
long long V1[MAXN], V2[MAXN];
set<long long> V;
set<long long> U;
set<long long> R;

int main() {
	freopen("date.in", "r", stdin);
	freopen("date.out","w", stdout);

	scanf("%d", &T);
	for(int t = 1; t <= T; t++) {
	    cerr << N << " " << M << "\n";
        scanf("%d %d", &N, &M);
        scanf("%I64d %I64d %I64d %I64d %I64d", &X1, &A1, &B1, &C1, &R1);
        scanf("%I64d %I64d %I64d %I64d %I64d", &X2, &A2, &B2, &C2, &R2);

        V1[0] = X1;
        V2[0] = X2;
        for(int i = 1; i < max(N, M); i++) {
            if(i < N)
                V1[i] = (A1 * V1[(i - 1) % N] + B1 * V2[(i - 1) % M] + C1) % R1;
            if(i < M)
                V2[i] = (A2 * V1[(i - 1) % N] + B2 * V2[(i - 1) % M] + C2) % R2;
        }

        V.clear();
        U.clear();

        long long ans = 0;
        int j = 0;
        int k = 0;
        for(int i = 0; i < N; i++) {
            if(V.count(V1[i]) == 0)
                U.insert(V1[i]);
            V.insert(V1[i]);

            while(j < M && V.count(V2[j]) > 0) {
                k++;
                if(U.count(V2[j]) > 0) {
                    U.erase(V2[j]);
                    k = 1;
                }
                j++;
            }

            if(U.size() == 0) {
                ans += k;
            }
        }

        printf("Case #%d: %I64d\n", t, ans);
	}

	return 0;
}
