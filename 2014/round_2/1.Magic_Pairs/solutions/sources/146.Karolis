#include <cstdio>
#include <set>
#include <map>
using namespace std;

typedef long long ll;

const int Maxn = 1000005;

int t;
int n, m;
int A[Maxn], B[Maxn];
int a1, b1, c1, r1;
int a2, b2, c2, r2;
set <int> was1, was2;
map <int, int> M;
ll res;

int main()
{
	scanf("%d", &t);
	for (int tc = 1; tc <= t; tc++) {
		scanf("%d %d", &n, &m);
		scanf("%d %d %d %d %d", &A[0], &a1, &b1, &c1, &r1);
		scanf("%d %d %d %d %d", &B[0], &a2, &b2, &c2, &r2);
		for (int i = 1; i < n || i < m; i++) {
			if (i < n) A[i] = (ll(a1) * ll(A[(i - 1) % n]) + ll(b1) * ll(B[(i - 1) % m]) + c1) % r1;
			if (i < m) B[i] = (ll(a2) * ll(A[(i - 1) % n]) + ll(b2) * ll(B[(i - 1) % m]) + c2) % r2;
		}
		was1.clear(); was2.clear(); M.clear();
		res = 0ll;
		int i2 = 0, j2 = 0;
		for (int i = 0, j = 0; i < n; i = j) {
			was1.insert(A[j]); if (++M[A[j]] == 0) M.erase(A[j]); j++;
			while (j < n && was1.count(A[j])) j++;
			i2 = j2;
			if (i2 == m) break;
			was2.insert(B[j2]); if (--M[B[j2]] == 0) M.erase(B[j2]); j2++;
			while (j2 < m && was2.count(B[j2])) j2++;
			if (M.empty()) res += ll(j - i) * ll(j2 - i2);
		} 
		printf("Case #%d: %lld\n", tc, res);
	}
	return 0;
}