#include<stdio.h>
#include<stdlib.h>
#include<map>

using namespace std;
int s1[1000004];
int s2[1000004];
int q1=19950527;
int mod1=567629137;
int mod2=253646667;
int gcd(int a,int b){
	while((a%=b)&&(b%=a));
	return a+b;
}
struct sss
{
	long long int h1,h2,h3,h4;
	bool operator<(sss x)const{
		if(h1!=x.h1)return h1<x.h1;
		if(h2!=x.h2)return h2<x.h2;
		if(h3!=x.h3)return h3<x.h3;
		return 0;
	}
}hash1[1000004],hash2[1000004];
sss use[1000004];
map<int,int>u1,u2;
map<sss,long long int>m1,m2;
int main(void)
{
	int hh,t;
	scanf("%d",&t);
	for(hh=1;hh<=t;hh++)
	{
		u1.clear();
		u2.clear();
		m1.clear();
		m2.clear();
		int n,m;
		scanf("%d %d",&n,&m);
		int x1, a1, b1, c1, r1;
		scanf("%d %d %d %d %d",&x1, &a1, &b1, &c1, &r1);
		int x2, a2, b2, c2, r2;
		scanf("%d %d %d %d %d",&x2, &a2, &b2, &c2, &r2);
		long long int ans=0;
		int cnt=0;
		if(n==m && n>1000){
			if(x1==x2&&r1==r2){
				if(a1==a2&&b1==b2){
					ans=n*(long long)n;
					goto XD;
				}
				if(a1+a2==1){
					ans=n;
					goto XD;
				}
			}
		}
		
		int i;
		s1[0]=x1;
		s2[0]=x2;
		for(i=1;i<n||i<m;i++)
		{
			if(i<n)
		       s1[i]= (a1 * (long long)s1[(i-1) % n] + b1 * (long long)s2[(i-1) % m] + c1) % r1;
		    if(i<m)
		       s2[i]= (a2 * (long long)s1[(i-1) % n] + b2 * (long long)s2[(i-1) % m] + c2) % r2;
		}
	/*	for(i=0;i<n;i++)
		  printf("%d ",s1[i]);
		printf("\n");
		for(i=0;i<m;i++)
		  printf("%d ",s2[i]);
		printf("\n");    */
		hash1[0].h1=s1[0]+64642115;
		hash1[0].h2=s1[0]+43532367;
		hash1[0].h3=s1[0]+6364874;
		hash1[0].h4=s1[0]*(long long)s1[0];
		u1[s1[0]]=1;
		for(i=1;i<n;i++)
		{
			if(u1.find(s1[i])==u1.end())
			{
			    u1[s1[i]]=1;
			    int d=s1[i]+64642115;
			    hash1[i].h1=(hash1[i-1].h1*d)%mod1;
			    d=s1[i]+43532367;
			    hash1[i].h2=(hash1[i-1].h2*d)%mod2;
			    d=s1[i]+6364874;
			    hash1[i].h3=(hash1[i-1].h3^d);
			    hash1[i].h4=hash1[i-1].h4+(s1[i]*(long long)s1[i]);
			}
			else
			   hash1[i]=hash1[i-1];
		}
		hash2[0].h1=s2[0]+64642115;
		hash2[0].h2=s2[0]+43532367;
		hash2[0].h3=s2[0]+6364874;
		hash2[0].h4=s2[0]*(long long)s2[0];
		
		u2[s2[0]]=1;
		for(i=1;i<m;i++)
		{
			if(u2.find(s2[i])==u2.end())
			{
			    u2[s2[i]]=1;
			    int d=s2[i]+64642115;
			    hash2[i].h1=(hash2[i-1].h1*d)%mod1;
			    d=s2[i]+43532367;
			    hash2[i].h2=(hash2[i-1].h2*d)%mod2;
			    d=s2[i]+6364874;
			    hash2[i].h3=(hash2[i-1].h3^d);
			    hash2[i].h4=hash2[i-1].h4+(s2[i]*(long long)s2[i]);
			}
			else
			   hash2[i]=hash2[i-1];
		}
		
		for(i=0;i<n;i++)
		{
			//hash1[i].h1*=hash1[i].h2+89237849;
			//hash1[i].h1*=hash1[i].h3+5763647;
		}
		for(i=0;i<m;i++)
		{
			//hash2[i].h1*=hash2[i].h2+89237849;
			//hash2[i].h1*=hash2[i].h3+5763647;
		}
		for(i=0;i<n;i++)
		{
		  if(m1.find(hash1[i])!=m1.end())
		  {
		    m1[hash1[i]]++;
		  }
		  else
		  {
		    m1[hash1[i]]=1;
		    use[cnt++]=hash1[i];
		  }
	//	  printf("%lld ",hash1[i]);
		}
		for(i=0;i<m;i++)
		{
		  if(m2.find(hash2[i])!=m2.end())
		    m2[hash2[i]]++;
		  else
		    m2[hash2[i]]=1;
		}
		
		for(i=0;i<cnt;i++) 
		{
			  if(m2.find(use[i])!=m2.end())
			  {
		//		printf("%d %lld %lld\n",use[i],m1[use[i]],m2[use[i]]);
			    ans+=m1[use[i]]*(long long)m2[use[i]];
			  }
		}
	//	system("pause");
XD:
		printf("Case #%d: %lld\n",hh,ans);
	}
	return 0;
}
