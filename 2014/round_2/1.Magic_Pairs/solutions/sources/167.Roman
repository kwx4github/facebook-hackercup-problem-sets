#ifdef SHTRIX 
#include "/Users/roman/Dev/SharedCpp/DebugOutput.h"
#endif
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <stack>
#include <cstring>
#include <ctime>
#include <cstdio>
#include <memory>
using namespace std;
#define pb push_back
#define INF 1000000000
#define L(s) (int)((s).end()-(s).begin())
#define FOR(i,a,b) for (int i = (a); i <= (b); i++)
#define FORD(i,a,b) for(int i = (a); i >= (b); i--)
#define rep(i,n) FOR(i,1,(n))
#define rept(i,n) FOR(i,0,(n)-1)
#define C(a) memset((a),0,sizeof(a))
#define ll long long
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))
#define VI vector<int>
#define ppb pop_back
#define mp make_pair
#define pii pair<int,int>
#define pdd pair<double,double>
//#define x first
//#define y second
#define sqr(a) (a)*(a)
#define D(a,b) sqrt(((a).x-(b).x)*((a).x-(b).x)+((a).y-(b).y)*((a).y-(b).y))
#define pi 3.1415926535897932384626433832795028841971
#define UN(v) sort((v).begin(),(v).end()),v.erase(unique(v.begin(),v.end()),v.end())

ll pw2(ll y, int MOD) {
    if (y == 0) return 1;
    ll t = pw2( y / 2, MOD);
    t *= t;
    t %= MOD;
    if (y & 1) {
        t *= 2;
    }
    t %= MOD;
    return t;
}

ll whash(int key) {
    return (pw2(key, INF + 7) << 32) + pw2(key, INF + 9); 
}


const int N = 1111111;
void go(int *x, ll *y, int n) {
    set<int> s;
    ll now = 0;
    rept(i, n) {
        if (s.find(x[i]) == s.end()) {
            s.insert(x[i]);
            now += whash(x[i]);
        }
        y[i] = now;
    }
}

int a[N], b[N];
ll ha[N], hb[N];

void solve(int case_id) {
    cerr << case_id << endl;
    int n, m, x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
    cin >> n >> m;
    cin >> x1 >> a1 >> b1 >> c1 >> r1;
    cin >> x2 >> a2 >> b2 >> c2 >> r2;
    a[0] = x1;
    b[0] = x2;
    for (int i = 1; i < N; i++) {
        a[i] = ((ll)a1 * a[(i - 1) % n] + (ll)b1 * b[(i - 1) % m] + c1) % r1;
        b[i] = ((ll)a2 * a[(i - 1) % m] + (ll)b2 * b[(i - 1) % m] + c2) % r2;
    }
    go(a, ha, n);
    go(b, hb, m);
    // cout << DEB(a, n) << endl;
    // cout << DEB(b, m) << endl;
    // cout << DEB(ha, n) << endl;
    // cout << DEB(hb, m) << endl;

    map<ll, int> left, right;
    rept(i, n) left[ha[i]]++;
    rept(i, m) right[hb[i]]++;
    ll ans = 0;
    for (map<ll, int>::iterator it = left.begin(); it != left.end(); it++) {
        ans += (ll)(it->second) * right[it->first];
    }
    cout << "Case #" << case_id << ": " << ans << endl;
}

int main()
{
    #ifdef SHTRIX 
    freopen("input.txt","rt",stdin); 
    //freopen("output.txt","wt",stdout); 
    #endif
	int TC;
    scanf("%d", &TC);
    rep(tc, TC) {
        solve(tc);
    }
    return 0;
}
