#!/usr/bin/python2
T = int(raw_input())
for _ in xrange(T):
	[N,M] = [int(x) for x in raw_input().split(' ')]
	[x1,a1,b1,c1,r1] = [int(x) for x in raw_input().split(' ')]
	[x2,a2,b2,c2,r2] = [int(x) for x in raw_input().split(' ')]

	board1 = [x1]*N
	board2 = [x2]*M

	for i in xrange(1, max(N, M)):
		if i < N: board1[i] = (a1*board1[(i-1)%N] + b1*board2[(i-1)%M] + c1) % r1
		if i < M: board2[i] = (a2*board1[(i-1)%N] + b2*board2[(i-1)%M] + c2) % r2

	# Process board 1
	l = []
	s = set([])
	count = []

	for i in xrange(N):
		if board1[i] not in s:
			l.append(board1[i])
			s.add(board1[i])
			count.append(0)
		count[-1] += 1

	if len(l) != len(s): print "WTF"
	if len(l) != len(count): print "WTF"
	if sum(count) != N: print "WTF"

	ans = 0
	# Process board 2
	s = set([]) # set of seen colors
	s2 = set([]) # set of missing colors
	
	for i in xrange(M):
		if board2[i] not in s:
			s.add(board2[i])
			if len(s) > len(l):
				break
			if board2[i] in s2:
				s2.remove(board2[i])
			if l[len(s) - 1] not in s:
				s2.add(l[len(s)-1])
		if len(s) > len(count):
			break
		if len(s2) == 0:
			ans += count[len(s)-1]

	print "Case #%d: %d" % (_ + 1, ans)
