
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>
#include <numeric>
#include <cassert>
#include <unordered_set>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;

const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)

int N[2];
ll v[2][1000100];
ll a[2], b[2], c[2], r[2];
void calc(){
	FOR(i,0,2)cin >> N[i];
	FOR(i,0,2){
		cin >> v[i][0];
		cin >> a[i] >> b[i] >> c[i] >> r[i];
	}
	FOR(i,1,max(N[0], N[1])){
		if(i < N[0])v[0][i] = (a[0] * v[0][(i-1) % N[0]] + b[0] * v[1][(i-1) % N[1]] + c[0]) % r[0];
		if(i < N[1])v[1][i] = (a[1] * v[0][(i-1) % N[0]] + b[1] * v[1][(i-1) % N[1]] + c[1]) % r[1];
	}
	ll res = 0;
	c[0] = c[1] = 0;
	unordered_set<ll> inside[2];
	queue<ll> todo = queue<ll>();
	FOR(i,0,2){
		inside[i].clear();
	}
	bool failed = false;
	while(c[0] < N[0] && c[1] < N[1] && !failed){
		FOR(i,0,2)todo.push(v[i][c[i]]);
		FOR(i,0,2)inside[i].insert(v[i][c[i]++]);
		while(!todo.empty() && !failed){
			ll next = todo.front();
			todo.pop();
			FOR(i,0,2){
				if(inside[i].find(next) != inside[i].end())continue;
				while(c[i] < N[i]){
					inside[i].insert(v[i][c[i]]);
					todo.push(v[i][c[i]]);
					if(next == v[i][c[i]++])break;
				}
				if(inside[i].find(next) == inside[i].end())failed = true;
				if(failed)break;
			}
			if(failed)break;
		}
		if(failed)break;
		FOR(i,0,2){
			a[i] = 1;
			while(c[i] < N[i] && inside[i].find(v[i][c[i]]) != inside[i].end()){
				++a[i];
				++c[i];
			}
		}
		res += a[0] * a[1];
	}
	cout << res << endl;
}
int main() {
	int T;
	cin >> T;
	FOR(tc,1,T+1){
		cout << "Case #" << tc << ": ";
		calc();
	}
	return 0;
}
