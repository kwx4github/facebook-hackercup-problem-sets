#include<iostream>
#include<algorithm>
#include<set>
#include<string>
#include<vector>
#include<cstdio>
#define pb push_back
#define fs first
#define sc second
#include<map>
#define BUFFER_SIZE 8192
using namespace std;

vector<int> g[101010];
int viz[101010];
int cost[101010];
long long best[101010];
long long ret;


long long N,M,x,y,T;
long long x1,x2,a1,a2,b1,b2,c1,c2;
long long b[2][1010100];
long long rez=0;
map<long long,int> myH1,myH2;
int r1,r2;
int main()
{

    freopen("hacker.in","r",stdin);
    freopen("hacker.out","w",stdout);
    cin>>T;
    int ind=0;
    while(T--){
        ++ind;
        rez=0;
        myH2.clear();
        myH1.clear();
        cin>>N>>M;
        cin>>b[0][0]>>a1>>b1>>c1>>r1;
        cin>>b[1][0]>>a2>>b2>>c2>>r2;
        for(int i=1;i<max(N,M);++i){
            b[0][i] = (1LL * (b[0][(i-1)%N] * a1) + 1LL* b[1][(i-1)%M] * b1 + c1) % r1;
            b[1][i] = (1LL * (b[0][(i-1)%N] * a2) + 1LL* b[1][(i-1)%M] * b2 + c2) % r2;
        }

        int st=0,st1=0,init1=0,init2=0,myq=0,diff=0;
        //cout<<N<<M;
        while(1){

            if(st!=N){
                //cout<<st<<st1;
                init1 = st;
                if(myH1[b[0][st]] == 0){
                    if(myH2[b[0][st]] == 0)
                        ++diff;
                    myH1[b[0][st]]=1;
                }

                while(myH1[b[0][st]] !=0 && st<N){
                    ++st;
                }

            }

            if(st1!=M){
                if(myH2[b[1][st1]] == 0){
                    if(myH1[b[1][st1]] == 1)
                        --diff;
                    myH2[b[1][st1]]=1;
                }

                init2 = st1;
                while(myH2[b[1][st1]]!=0 && st1<(M)){
                    ++st1;
                }
            }
            if(diff == 0){
                rez += (st1-init2) * (st-init1);
            }
            if(st==N && st1==M){
                break;
            }
        }
        printf("Case #%d: %lld\n",ind,rez);
    }
    return 0;
}
