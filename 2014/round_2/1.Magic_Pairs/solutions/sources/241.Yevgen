#pragma comment(linker, "/STACK:256000000")
#include <iostream>
#include <string>
#include <string.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <ctime>
#include <cmath>
#include <stdio.h>
#include <cassert>
#include <set>
#include <map>
#include <stack>
#include <deque>
#include <hash_set>
#include <list>

#define SZ(x) (int((x).size()))
#define FOR(i, a, b) for(int (i) = (a); (i) <= (b); ++(i))
#define ROF(i, a, b) for(int (i) = (a); (i) >= (b); --(i))
#define REP(i, n) for (int (i) = 0; (i) < (n); ++(i))
#define REPD(i, n) for (int (i) = (n); (i)--; )
#define FE(i, a) for (int (i) = 0; (i) < (int((a).size())); ++(i))
#define MEM(a, val) memset((a), val, sizeof(a))
#define INF 1000000000
#define LLINF 1000000000000000000LL
#define PB push_back
#define PPB pop_back
#define ALL(c) (c).begin(), (c).end()
#define SQR(a) ((a)*(a))
#define MP(a,b) make_pair((a), (b))
#define XX first
#define YY second

using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double dbl;
typedef pair<int, int> pii ;
typedef vector<int> vint;
typedef vector<LL> vLL;

const int nmax = 1000009;

int B1[nmax], B2[nmax];
int T[nmax * 2];
int S1[nmax * 2], S2[nmax * 2];
int sz1, sz2;
int sz;

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#endif
	int TTT;
	
	cin >> TTT;
	FOR(TT, 1, TTT) {
		int comon = 0;
		sz1 = sz2 = 0;
		int N, M;
		cin >> N >> M;
		LL x1, a1, b1, c1, r1;
		cin >> x1 >> a1 >> b1 >> c1 >> r1;
		LL x2, a2, b2, c2, r2;
		cin >> x2 >> a2 >> b2 >> c2 >> r2;

		B1[0] = x1;
		B2[0] = x2;
		//cout << x1 << " " << x2 << endl;
		FOR(i, 1, max(N, M) - 1) {
			B1[i] = (a1 * B1[(i-1) % N] + b1 * B2[(i-1) % M] + c1) % r1;
			B2[i] = (a2 * B1[(i-1) % N] + b2 * B2[(i-1) % M] + c2) % r2;
			//cout << B1[i] << " " << B2[i] << endl;
		}

		REP(i, N)
			T[i] = B1[i];
		REP(i, M)
			T[i + N] = B2[i];

		sort(T, T + N + M);

		sz = 1;
		FOR(i, 1, N + M - 1) {
			if (T[i] != T[i - 1]) {
				T[sz] = T[i];
				++sz;
			}
		}

		REP(i, N)
			B1[i] = lower_bound(T, T + N + M, B1[i]) - T;

		REP(i, M)
			B2[i] = lower_bound(T, T + N + M, B2[i]) - T;

		int i = 0, j = 0;
		LL ans = 0;
		while (i + j < N + M) {
			if (i < N && sz1 < sz2) {
				if (S1[B1[i]] != TT) {
					S1[B1[i]] = TT;
					++sz1;
					if (S2[B1[i]] == TT)
						++comon;
				}
				++i;
			} else {
				if (S2[B2[j]] != TT) {
					S2[B2[j]] = TT;
					++sz2;
					if (S1[B2[j]] == TT)
						++comon;
				}
				++j;
			}
			if (comon == sz1 && comon == sz2) {
				LL t1 = 1;
				while (i < N && S1[B1[i]] == TT) {
					++i;
					++t1;
				}
				LL t2 = 1;
				while (j < M && S2[B2[j]] == TT) {
					++j;
					++t2;
				}
				ans += t1 * t2;
			}
		}
		cout << "Case #" << TT << ": " << ans << endl;
	}
	
	
	return 0;
}

