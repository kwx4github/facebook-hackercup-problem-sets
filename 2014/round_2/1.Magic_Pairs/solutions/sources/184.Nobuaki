import java.util.HashSet;
import java.util.Scanner;

public class A {

	static Scanner sc = new Scanner(System.in);

	public static void main(String[] args) {
		int T = sc.nextInt();
		for (int i = 1; i <= T; ++i) {
			System.out.println("Case #" + i + ": " + solve());
		}
	}

	static long solve() {
		int N = sc.nextInt();
		int M = sc.nextInt();
		int[][] param = new int[2][5];
		for (int i = 0; i < 2; ++i) {
			for (int j = 0; j < 5; ++j) {
				param[i][j] = sc.nextInt();
			}
		}
		long[][] b = new long[2][];
		b[0] = new long[N + 1];
		b[1] = new long[M + 1];
		b[0][0] = param[0][0];
		b[1][0] = param[1][0];
		for (int i = 1; i < Math.max(N, M); ++i) {
			if (i < N) {
				b[0][i] = (param[0][1] * b[0][(i - 1) % N] + param[0][2] * b[1][(i - 1) % M] + param[0][3]) % param[0][4];
			}
			if (i < M) {
				b[1][i] = (param[1][1] * b[0][(i - 1) % N] + param[1][2] * b[1][(i - 1) % M] + param[1][3]) % param[1][4];
			}
		}
		b[0][N] = b[1][M] = -1;
		long[][] skip = new long[2][];
		long[][] skiprev = new long[2][];
		int[] size = { N, M };
		for (int i = 0; i < 2; ++i) {
			HashSet<Long> set = new HashSet<>();
			skip[i] = new long[size[i] + 1];
			skiprev[i] = new long[size[i] + 1];
			set.add(b[i][0]);
			int prev = 0;
			for (int j = 1; j <= size[i]; ++j) {
				if (!set.contains(b[i][j])) {
					skip[i][prev] = skiprev[i][j] = j - prev;
					set.add(b[i][j]);
					prev = j;
				}
			}
		}
		long ans = 0;
		int ai = 0;
		int bi = 0;
		HashSet<Long> setA = new HashSet<>();
		HashSet<Long> setB = new HashSet<>();
		while (ai < N) {
			setA.add(b[0][ai]);
			while (setA.contains(b[1][bi])) {
				setB.add(b[1][bi]);
				bi += skip[1][bi];
			}
			if (setA.size() == setB.size()) {
				ans += skip[0][ai] * skiprev[1][bi];
			}
			ai += skip[0][ai];
		}

		return ans;
	}
}