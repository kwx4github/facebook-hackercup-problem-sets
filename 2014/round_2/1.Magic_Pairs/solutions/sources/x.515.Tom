#include <iostream>
#include <vector>
#include <cstring>

using namespace std;

bool used1[1000000010];
bool used2[1000000010];

int main()
{
    int runs;
    cin >> runs;
    for(int run = 1; run <= runs; ++run)
    {
        int N, M;
        cin >> N >> M;
        long long x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
        cin >> x1 >> a1 >> b1 >> c1 >> r1;
        cin >> x2 >> a2 >> b2 >> c2 >> r2;

        vector<long long> list1(N);
        vector<long long> list2(M);

        list1[0] = x1;
        list2[0] = x2;

        for(int i = 1; i < N || i < M; ++i){
            if( i < N )
                list1[i] = ( a1*list1[(i-1)%N] + b1*list2[(i-1)%M] + c1 ) % r1;
            if( i < M )
                list2[i] = ( a2*list1[(i-1)%N] + b2*list2[(i-1)%M] + c2 ) % r2;
        }

        memset(used1, 0, sizeof(bool)*(r1+1));
        memset(used2, 0, sizeof(bool)*(r2+1));

        //cerr << "List1: ";
        //for(int i = 0; i < N; ++i)
        //    cerr << list1[i] << ' ';
        //cerr << endl;
        //cerr << "List2: ";
        //for(int i = 0; i < M; ++i)
        //    cerr << list2[i] << ' ';
        //cerr << endl;

        int answer = 0;

        int differentCount1 = 0;
        int differentCount2 = 0;
        int i = 0, j = 0;

        for(;;){
            //Advance in list1
            int value = list1[i];
            ++i;
            if( used1[value] == false ){
                used1[value] = true;
                differentCount1++;
            }

            //See if value has been seen in list2
            if( used2[value] ){
                //we know everything that appeared before in list1 is already seen in list2
                //so if the amount of distinct values is equal
                //then they must be the same values
                if( differentCount1 == differentCount2 ){
                    ++answer; //new magic pair
                    //cerr << "pair  " << i << ',' << j << endl;
                }
            }else{
                //find value in the second list
                bool found = false;
                for( ;; ){

                    //Advance in list2
                    int value2 = list2[j];
                    ++j;
                    if( used2[value2] == false )
                    {
                        differentCount2++;
                        used2[value2] = true;
                    }

                    //Found the value
                    if( value2 == value ){
                        found = true;
                        //same situation as before
                        if( differentCount1 == differentCount2 ){
                            ++answer;
                            //cerr << "pair* " << i << ',' << j << endl;
                        }
                        break;
                    }

                    if( j == M )
                        break;
                }
                if( !found ) break;
            }
            //We reached the end of the first list
            //Process remainder of second list
            if( i == N ){
                for(; j < M; ){
                    int value2 = list2[j];
                    ++j;

                    if( used2[value2] == false )
                    {
                        differentCount2++;
                        used2[value2] = true;
                    }

                    if( used1[value] == false ) break;

                    if( differentCount1 == differentCount2 ){
                        ++answer;
                        //cerr << "pair$ " << i << ',' << j << endl;
                    }
                }
                break;
            }
        }

        cout << "Case #" << run << ": " << answer << endl;
    }
    return 0;
}
