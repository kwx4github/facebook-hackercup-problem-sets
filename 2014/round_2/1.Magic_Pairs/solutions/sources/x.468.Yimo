from collections import deque
import sys
f = open("magic.in", "r")


T = int(f.readline())

for t in range(T):
	temp = f.readline().strip()
	temp = list(temp.split(' '))
	for i in range(len(temp)):
		temp[i] = int(temp[i])

	N = temp[0]
	M = temp[1]
	board1 = N * [0]
	board2 = M * [0]

	temp = f.readline().strip()
	temp = list(temp.split(' '))
	for i in range(len(temp)):
		temp[i] = int(temp[i])
	x1 = temp[0]
	a1 = temp[1]
	b1 = temp[2]
	c1 = temp[3]
	r1 = temp[4]

	temp = f.readline().strip()
	temp = list(temp.split(' '))
	for i in range(len(temp)):
		temp[i] = int(temp[i])

	x2 = temp[0]
	a2 = temp[1]
	b2 = temp[2]
	c2 = temp[3]
	r2 = temp[4]

	board1[0] = x1
	board2[0] = x2
	for i in range(1, max(N, M)):
		if i < N:
			board1[i] = (a1 * board1[(i-1)%N] + b1*board2[(i-1)%M] + c1)%r1
		if i < M:
			board2[i] = (a2 * board1[(i-1)%N] + b2*board2[(i-1)%M] + c2)%r1
	#print board1
	#print board2

	answer = 0
	board1stuff = set()
	board2stuff = set()
	otherstuff = set()
	board1x = []
	board2x = []
	for i in range(N):
		gem = board1[i]
		if not gem in board1stuff:
			board1stuff.add(gem)
			board1x.append([gem, i])
	for i in range(M):
		gem = board2[i]
		if not gem in board2stuff:
			board2stuff.add(gem)
			board2x.append([gem, i])	

	board1stuff = set()
	board2stuff = set()

	i_2 = 0
	for i in range(min(len(board1x), len(board2x))):
		gem1 = board1x[i][0]
		if i == len(board1x) - 1:
			power1 = N - board1x[i][1]
		else:
			power1 = board1x[i + 1][1] - board1x[i][1]

		if gem1 in board2stuff:
			board2stuff.remove(gem1)
		else:
			board1stuff.add(gem1)

		gem2 = board2x[i][0]
		if i == len(board2x) - 1:
			power2 = M - board2x[i][1]
		else:
			power2 = board2x[i + 1][1] - board2x[i][1]

		if gem2 in board1stuff:
			board1stuff.remove(gem2)
		else:
			board2stuff.add(gem2)

		if len(board1stuff) == 0 and len(board2stuff) == 0:
			answer += power1 * power2
	print "Case", "#" + str(t + 1) + ":", answer

