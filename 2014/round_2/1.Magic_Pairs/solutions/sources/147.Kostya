#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <queue>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <stack>
#include <bitset>
#include <sstream>
#include <fstream>

typedef unsigned long long ull;
#define mp make_pair
#define pb push_back

const long double eps = 1e-9;
const double pi = acos(-1.0);
const long long inf = 1e18;

using namespace std;

int n, m, a[ 1000100 ], b[ 1000100 ];
vector< pair< int, int > > aa, bb;
set< int > s1, s2;
int mns, pls;
map< int, int > diff;

int fun()
{
	if ( mns == 0 && pls == 0 ) return 0;
	return 1;
}

void add( int x, int d )
{
	if ( diff[x] < 0 ) mns--;
	if ( diff[x] > 0 ) pls--;
	diff[x] += d;
	if ( diff[x] < 0 ) mns++;
	if ( diff[x] > 0 ) pls++;
}

void solve( int id )
{
	//cout << "---------------------\n";
	cin >> n >> m;
	long long x1, a1, b1, c1, r1;
	cin >> x1 >> a1 >> b1 >> c1 >> r1;
	long long x2, a2, b2, c2, r2;
	cin >> x2 >> a2 >> b2 >> c2 >> r2;
	a[0] = x1;
	b[0] = x2;
	for ( int i = 1; i < 1000100; i++ )
	{
		if ( i < n )
		{
			a[i] = ( a1 * a[ ( i - 1 ) % n ] + b1 * b[ ( i - 1 ) % m ] + c1 ) % r1;
		}
		if ( i < m )
		{
			b[i] = ( a2 * a[ ( i - 1 ) % n ] + b2 * b[ ( i - 1 ) % m ] + c2 ) % r2;
		}
	}
	diff.clear(); mns = pls = 0;
	aa.clear(); bb.clear();
	s1.clear(); s2.clear();
	for ( int i = 0; i < n; i++ )
	{
		if ( s1.find( a[i] ) != s1.end() ) continue;
		aa.pb( mp( a[i], i ) );
		s1.insert( a[i] );
	}
	for ( int i = 0; i < m; i++ )
	{
		if ( s2.find( b[i] ) != s2.end() ) continue;
		bb.pb( mp( b[i], i ) );
		s2.insert( b[i] );
	}
	//cout << "A: "; for ( int i = 0; i < n; i++ ) cout << a[i] << " "; cout << "\n";
	//cout << "B: "; for ( int i = 0; i < m; i++ ) cout << b[i] << " "; cout << "\n";
	aa.pb( mp( 1000000005, n ) );
	bb.pb( mp( 1000000006, m ) );
	long long ans = 0;
	for ( int i = 0; i < min( aa.size(), bb.size() ); i++ )
	{
		add( aa[i].first, 1 );
		add( bb[i].first, -1 );
		if ( fun() > 0 ) continue;
		long long len1 = aa[i + 1].second - aa[i].second;
		long long len2 = bb[i + 1].second - bb[i].second;
		ans += len1 * len2;
	}
	cout << "Case #" << id << ": ";
	cout << ans << "\n";
}

int main (int argc, const char * argv[])
{
	int tt; cin >> tt;
	for ( int it = 1; it <= tt; it++ ) solve( it );
    return 0;
}
