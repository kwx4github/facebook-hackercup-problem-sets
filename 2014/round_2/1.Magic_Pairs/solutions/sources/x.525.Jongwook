#include <cstdio>
#include <cstring>
#include <queue>
#include <unordered_map>
#include <set>
#include <map>
#include <tuple>
#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

#define REP(t, n) for(int t=0; t<(int)(n); ++t)
#define FOR(t, x, y) for(int t=x; t<(int)(y); ++t)
#define MSET(x, with) memset(x, with, sizeof(x))

#define all(v) begin(v), end(v)
#define uniquify(v) {sort(all(v));(v).erase(unique(all(v)), (v).end());}
#define TR(x) { cerr << "Line " << __LINE__ << " : " << #x << " = " << (x) <<endl; }

int n, m;
long long x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
int a[1000000];
int b[1000000];

int Adistinct = 0;
int Bdistinct = 0;
unordered_map<int, int> countA;
unordered_map<int, int> countB;


long long solve() {
	int j = 0;
	long long ans = 0;
	set<int> B_minus_A;

	for(int i = 0; i < n; ) {
		int ii;

		if(++ countA[a[i]] == 1) {
			B_minus_A.erase(a[i]);
		}
		for(ii = i + 1; ii < n; ++ ii) {
			// try a[ii]
			if(countA.count(a[ii]) == 0)
				break;
		}
		-- ii;
		int i_len = ii - i + 1;

		while(j < m) {
			// try a[j]
			if(++ countB[b[j]] == 1) {
				if(countA.count(b[j]) == 0) {
					B_minus_A.insert(b[j]);
					break;
				}
				break;
			}
			++ j;
			if(countA.size() == countB.size())
				break;
		}

		int jj;
		for(jj = j + 1; jj < m; ++ jj) {
			if(countB.count(b[jj]) == 0)
				break;
		}
		-- jj;
		int j_len = jj - j + 1;

//		printf("%s %d-%d %d-%d : %d\n", B_minus_A.empty() ? "*" : " ", i, ii, j, jj, i_len * j_len);
		if(B_minus_A.empty()) {
			ans += (1LL * i_len * j_len);
		}

		i = ii + 1;
	}
	return ans;
}

long long go() {
	Adistinct = Bdistinct = 0;
	countA.clear();
	countB.clear();

	a[0] = (int)x1;
	b[0] = (int)x2;
	for(int i = 1; i < n || i < m; ++ i) {
		if(i < n)
			a[i] = (a[(i - 1) % n] * a1 + b[(i - 1) % m] * b1 + c1) % r1;
		if(i < m)
			b[i] = (a[(i - 1) % n] * a2 + b[(i - 1) % m] * b2 + c2) % r2;
	}

//	REP(i, n) cout << a[i] << ' '; cout << endl;
//	REP(i, m) cout << b[i] << ' '; cout << endl;

	return solve();
}

int main() {

#ifdef _MSC_VER
#pragma warning(disable:4996)
#define PROB "magic_pairs"
	freopen(PROB".in", "r", stdin);
	freopen(PROB".out", "w", stdout);
#endif

	int T;
	scanf("%d", &T);

	for(int t = 1; t <= T; ++t) {
		cerr << t << endl;
		cin >> n >> m;
		cin >> x1 >> a1 >> b1 >> c1 >> r1;
		cin >> x2 >> a2 >> b2 >> c2 >> r2;
		printf("Case #%d: %lld\n", t, go());
	}
	
	return 0;
}
