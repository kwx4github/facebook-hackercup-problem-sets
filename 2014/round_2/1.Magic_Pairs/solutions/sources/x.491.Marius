#include <fstream>
#include <iostream>
#include <set>
#define Nmax 1000005

using namespace std;

ifstream fin("A.in");
ofstream fout("A.out");

long long A[Nmax], B[Nmax];
int N,M;

set <int> SA;
set <int> SB;


int main()
{
	int T;
	fin>>T;
	long long x1, a1, b1, c1, r1;
	long long x2, a2, b2, c2, r2;

	for (int t = 1; t <= T; ++t)
	{
		fout<<"Case #"<<t<<": ";
		fin>>N>>M;
		
		fin>>x1>>a1>>b1>>c1>>r1;
		fin>>x2>>a2>>b2>>c2>>r2;

		A[0] = x1;
		B[0] = x2;

		for (int i = 1; i < min(N,M); ++i)
		{
			A[i] = ( (a1 * A[(i-1)%N]) % r1 + (b1 * B[(i-1)%M])%r1  + c1) % r1;
			B[i] = ( (a2 * A[(i-1)%N]) % r2 + (b2 * B[(i-1)%M])%r2  + c2) % r2;
		}

		for (int i = min(N,M); i < N; ++i)
			A[i] = ( (a1 * A[(i-1)%N]) % r1 + (b1 * B[(i-1)%M])%r1  + c1) % r1;
		for (int i = min(N,M); i < M; ++i)
			B[i] = ( (a2 * A[(i-1)%N]) % r2 + (b2 * B[(i-1)%M])%r2  + c2) % r2;


		SA.clear();
		SB.clear();

		int i = 0;
		int j = 0 ; 
		long long sol = 0 ;
		do
		{
			SA.insert(A[i]);

			if (SB.find(A[i]) == SB.end())
			{
				while (j < M && B[j] != A[i])
				{
					SB.insert(B[j]);
					++j;
				}

				if (j >= M)
					break;

				SB.insert(B[j]);
			}

			while (j < M && SA.size() == SB.size())
			{
				sol++;
				//cout<<"Test: "<<i<<" "<<j<<endl;

				if (j+1 < M && SA.find(B[j+1]) != SA.end())
				{
					++j;
				}
				else
					break;
			}
			++i;
		} while(i < N && j < M);
		fout <<sol<<endl;

	}

	return 0;
}