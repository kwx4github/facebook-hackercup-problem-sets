/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         2.0*acos(0.0)
#define linf       (1ll<<62)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M) {
    if(e==0)return 1;
    if(e%2==0){LL t=bigmod(p,e/2,M);return (T)((t*t)%M);}
    return (T)(((LL)bigmod(p,e-1,M)*(LL)(p))%M);
}
template <class T> inline T gcd(T a,T b) {if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M) {return bigmod(a,M-2,M);}


map < LL, LL > mm[2];
LL ar[2][1000001];
LL val[2][6];
set < LL > ss;
pair < LL, LL > pp[2][1000001];
main()
{
    freopen("a.in", "r", stdin);
    freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0); cin.tie(0);
    LL a,b,c,d,e = 0,f,g,h = 1,x = 1,y,z = 1;
    cin >> a;
    FOR(l, 1, a + 1){
        mm[0].clear(); mm[1].clear(); ss.clear();
        cin >> b >> c;
        REP(i, 2){
            REP(j, 5)cin >> val[i][j];
        }
        ar[0][0] = val[0][0];
        ar[1][0] = val[1][0];
        for(int i = 1; i < max(b, c); i++){
            if(i < b)ar[0][i] = (val[0][1] * ar[0][(i - 1) % b] + val[0][2] * ar[1][(i - 1) % c] + val[0][3]) % val[0][4];
            if(i < c)ar[1][i] = (val[1][1] * ar[0][(i - 1) % b] + val[1][2] * ar[1][(i - 1) % c] + val[1][3]) % val[1][4];
        }
        e = f = -1;
        for(int i = 0; i < b; i++){
            if(mm[0][ar[0][i]] == 0){
                pp[0][++e] = mp(ar[0][i], 1);
                mm[0][ar[0][i]] = 1;
            }
            else pp[0][e].yy++;
        }
        for(int i = 0; i < c; i++){
            if(mm[1][ar[1][i]] == 0){
                pp[1][++f] = mp(ar[1][i], 1);
                mm[1][ar[1][i]] = 1;
            }
            else pp[1][f].yy++;
        }
        LL res = 0;
        for(int i = 0; i <= min(e, f); i++){
            if(ss.count(pp[0][i].xx) > 0)ss.erase(ss.find(pp[0][i].xx));
            else ss.insert(pp[0][i].xx);
            if(ss.count(pp[1][i].xx) > 0)ss.erase(ss.find(pp[1][i].xx));
            else ss.insert(pp[1][i].xx);
            if(ss.size() == 0)res += pp[0][i].yy * pp[1][i].yy;
        }
        cout << "Case #" << l << ": " << res << endl;
    }
}
