#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <cstdlib>
#include <cctype>
#include <bitset>
#include <string>
#include <map>
#include <cassert>
#include <set>

#ifdef PEYEK 
	#define debugln {printf("----OK----\n");}
	#define debug(...) {printf(__VA_ARGS__);}
	#define debugs(...) {printf(":::::--->> ");printf(__VA_ARGS__);}
	#define TIME() printf("%.3lf\n",clock()/(double)CLOCKS_PER_SEC)
#else
	#define debugln {}
	#define debug(...) {}
	#define debugs(...) {}
	#define TIME() {}
#endif

#ifdef __WIN32__
	char getchar_unlocked() {return getchar();}
#endif

#define FOR(_i,_n,_m) for(int (_i)=(_n),_t=(_m);_i<(_t);++(_i))
#define FORN(_i,_n,_m) for(int (_i)=(_n),_t=(_m);_i<=(_t);++(_i))
#define FORD(_i,_n,_m) for(int (_i)=(_n),_t=(_m);_i>=(_t);--(_i))
#define FORLL(_i,_n,_m) for(long long (_i)=(_n),_t=(_m);_i<(_t);++(_i))
#define FORNLL(_i,_n,_m) for(long long (_i)=(_n),_t=(_m);(_i)<=(_t);++(_i))
#define FORDLL(_i,_n,_m) for(long long (_i)=(_n),_t=(_m);(_i)>=(_t);--(_i))
#define FOREACH(_i,_a) for (__typeof(_a.begin()) _i=_a.begin();_i!=_a.end();++_i)
#define RESET(_a,_value) memset(_a,_value,sizeof(_a))
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define ff first
#define ss second
#define mp make_pair
#define SIZE(_a) (int)_a.size()
#define VSORT(_a) sort(_a.begin(),_a.end())
#define SSORT(_a,_val) sort(_a,_a+(_val))
#define ALL(_a) _a.begin(),_a.end()
 
using namespace std;
 
const int dr[]={ 1, 0,-1, 0, 1, 1,-1,-1};
const int dc[]={ 0, 1, 0,-1, 1,-1,-1, 1};
const double eps=1e-9;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<ll,ll> pll;
typedef vector<pll> vpll;
typedef vector<ll> vll;
typedef pair<double,double> pdd;
typedef vector<pdd> vpdd;
const int INF=0x7FFFFFFF;
const ll INFLL=0x7FFFFFFFFFFFFFFFLL;
const double pi=acos(-1);

template <class T> T take(queue<T> &O) {T tmp=O.front();O.pop();return tmp;}
template <class T> T take(stack<T> &O) {T tmp=O.top();O.pop();return tmp;}
template <class T> T take(priority_queue<T> &O) {T tmp=O.top();O.pop();return tmp;}
template <class T> inline void getint(T &num)
{
	bool neg=0;
	num=0;
	char c;
	while ((c=getchar_unlocked()) && (!isdigit(c) && c!='-'));
	if (c=='-')
	{
		neg=1;
		c=getchar_unlocked();
	}
	do num=num*10+c-'0';
	while ((c=getchar_unlocked()) && isdigit(c));
	num*=(neg)?-1:1;
}

void OPEN(string in="input.txt",string out="output.txt")
{
	freopen(in.c_str(),"r",stdin);
	freopen(out.c_str(),"w",stdout);
	return ;
}

//using sokokaleb's template v2.8

#define N 1000005
ll n[2],x[2],a[2],b[2],c[2],r[2];
ll arr[2][N],zz[N];

int main()
{
	getint(n[0]);
	FOR (tc,0,n[0])
	{
		FOR (i,0,2) getint(n[i]);
		ll ans = 0;
		RESET(arr,0);
		FOR (i,0,2)
		{
			getint(x[i]);
			getint(a[i]);
			getint(b[i]);
			getint(c[i]);
			getint(r[i]);
		}
		arr[0][0] = x[0];
		arr[1][0] = x[1];
		FOR (j,1,max(n[0],n[1]))
		{
			FOR (i,0,2)
				if (j < n[i])
					arr[i][j] = ((a[i] * arr[0][(j-1)%n[0]])%r[i] + (b[i] * arr[1][(j-1)%n[1]])%r[i] + c[i])%r[i];
		}
		FOR (i,0,2)
		{
			FOR (j,0,n[i]) debug("%lld ",arr[i][j]);debug("\n");
		}

		set<ll> SET0,SET1;
		SET0.clear();
		SET1.clear();
		RESET(zz,0);
		int cnt0 = 0,cnt1 = 0,pos1 = 0;
		FOR (i,0,n[0])
		{
			if (SET0.count(arr[0][i]));
			else ++cnt0;
			SET0.insert(arr[0][i]);
			while (pos1 < n[1] && SET0.count(arr[1][pos1]))
			{
				if (SET1.count(arr[1][pos1]));
				else ++cnt1;
				SET1.insert(arr[1][pos1]);
				if (cnt1 >= cnt0) ++zz[cnt1];
				++pos1;
			}
			if (cnt0 == cnt1)
				ans += 1LL * zz[cnt0];
		}
		debug("CNT = %d %d\n",cnt0,cnt1);
		debug("pos = %d\n",pos1);

		printf("Case #%d: %lld\n",tc + 1,ans);
	}
	return 0;
}