#include <iostream>
#include <cassert>
#include <string>
#include <vector>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef long long i64;

#define fu(i,m,n) for(int i=m; i<n; i++)
#define fr(i,m,n) for(typeof(m) i=m; i!=n; ++i)
#define fa(i,c) fr(i,(c).begin(),(c).end())

int main(void) {
	int TS; cin >> TS;
	for(int ts=1; ts<=TS; ts++) {
		cout << "Case #" << ts << ": ";
		i64 N,M,x1,a1,b1,c1,r1,x2,a2,b2,c2,r2;
		cin >> N>>M>>x1>>a1>>b1>>c1>>r1>>x2>>a2>>b2>>c2>>r2;

		vector<i64> B1(N), B2(M);
		map<i64,int> w1,w2;
		B1[0]=x1;
		B2[0]=x2;
		for(int i=1; i<max(M,N); i++) {
			if(i<N) B1[i]=(a1*B1[(i-1)%N] + b1*B2[(i-1)%M] + c1)%r1;
		        if(i<M) B2[i]=(a2*B1[(i-1)%N] + b2*B2[(i-1)%M] + c2)%r2;
		}

		{
			map<i64,int> cnt;
			fu(i,0,N) if(cnt[B1[i]]++) B1[i]=-1; else w1[B1[i]]=i;
		}

		{
			map<i64,int> cnt;
			fu(i,0,M) if(cnt[B2[i]]++) B2[i]=-1; else w2[B2[i]]=i;
		}

		//fu(i,0,N) cout << B1[i] << " "; cout << endl;
		//fu(j,0,M) cout << B2[j] << " "; cout << endl;

		i64 ret=0;
		int i=-1, j=-1;
		int ti=0, tj=0;

		map<i64,int> seen;

		for(;;) {
			//cout << i << " " << j << " " << ti << " " << tj << " " << " " << ret << endl;
			bool ready=true;
			while(i<ti) {
				i++;
				ready=false;
				if(B1[i]+1) {
					if(!w2.count(B1[i])) goto done;
				        tj = max(tj, w2[B1[i]]);
					seen[B1[i]]++;
				}
			}

			while(j<tj) {
				j++;
				ready=false;
				if(B2[j]+1) {
					if(!w1.count(B2[j])) goto done;
					ti = max(ti, w1[B2[j]]);
					seen[B2[j]]++;
				}
			}
			if(ready) {
				assert(ti==i && tj==j);
				do { ti++; } while(ti<N && (B1[ti]==-1||seen[B1[ti]]));
				do { tj++; } while(tj<M && (B2[tj]==-1||seen[B2[tj]]));
				//cout << i << " " << ti << " " << j << " " << tj << endl;
				ret += (ti-i+0LL)*(tj-j+0LL);
				i=ti-1;
				j=tj-1;
				if(ti==N || tj==M) break;
			}
		}
done:;
		cout << ret << endl;
	}
}
