#include <iostream>
#include <fstream>
#include <set>
#include <vector>

using namespace std;

typedef vector <int> vi;
#define For(i,a,b) for(int i = a; i < b; i++)

int tt,M,N,x1,a1,b1,c1,r1,x2,a2,b2,c2,r2;
int B1[1000009], B2[1000009];

void generate() {
	B1[0] = x1;
	B2[0] = x2;
	int mx = max(M,N);
	For(i,1,mx) {
		B1[i] = (a1 * B1[(i-1) % N] + b1 * B2[(i-1) % M] + c1) % r1;
		B2[i] = (a2 * B1[(i-1) % N] + b2 * B2[(i-1) % M] + c2) % r2;
	}
}

vi chk(vi v1, vi v2) {
	set <int> s;
	vi res;
	int sz = min(v1.size(),v2.size());
	For(i,0,sz) {
		s.insert(B1[v1[i]]);
		s.insert(B2[v2[i]]);
		if((int)s.size() == i+1)
			res.push_back(1);
		else
			res.push_back(0);
	}
	return res;
}

long long solve() {
	generate();
	set <int> s1;
	set <int> s2;
	vi v1;
	vi v2;
	For(i,0,N) {
		if(s1.count(B1[i]) == 0) {
			s1.insert(B1[i]);
			v1.push_back(i);
		}
	}
	For(i,0,M) {
		if(s2.count(B2[i]) == 0) {
			s2.insert(B2[i]);
			v2.push_back(i);
		}
	}
	int mn = min(v1.size(),v2.size());
	vi v3 = chk(v1,v2);
	v1.push_back(N);
	v2.push_back(M);
	long long res = 0;
	For(i,0,mn) {
		if(v3[i])
			res += 1LL * (v1[i+1] - v1[i]) * (v2[i+1] - v2[i]);
	}
	return res;
}

int main() {
	freopen("input.in","r",stdin);
	freopen("output.out","w",stdout);
	cin >> tt;
	For(t,1,tt+1) {
		cin >> N >> M >> x1 >> a1 >> b1 >> c1 >> r1 >> x2 >> a2 >> b2 >> c2 >> r2;
		long long res = solve();
		cout << "Case #" << t << ": " << res << endl;		
	}
}
