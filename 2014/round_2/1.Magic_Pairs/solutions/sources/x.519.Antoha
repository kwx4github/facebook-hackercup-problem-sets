//
//  main.cpp
//  FaceBook
//
//  Created by Антон Краснокутский on 15.12.13.
//  Copyright (c) 2013 Антон Краснокутский. All rights reserved.
//

#include <iostream>
#include <set>
#include <map>

using namespace std;

int genX[1000001], genY[1000001];
int cntX[1000001];

set<int> s, s2;
int cnt[1000001];

long long solve(int n, int m, int x1, int a1, int b1, int c1, int r1, int x2, int a2, int b2, int c2, int r2) {
    s.clear();
    genX[0] = x1, genY[0] = x2;
    for (int i = 1; i < max(n, m); i++) {
        genX[i] = (a1 * genX[(i-1) % n] + b1 * genY[(i-1) % m] + c1) % r1;
        genY[i] = (a2 * genX[(i-1) % n] + b2 * genY[(i-1) % m] + c2) % r2;
    }
    for (int i = 0; i < m;) {
        s.insert(genY[i]);
        int j;
        for (j = i + 1; j < m; j++)
            if (s.find(genY[j]) == s.end())
                break;
        for (int k = i; k < j; k++)
            cnt[k] = j - i;
        i = j;
    }
    s.clear();
    s2.clear();
    int it = 0;
    long long answer = 0;
    for (int i = 0; i < n; i++) {
        s2.insert(genX[i]);
        while (s.find(genX[i]) == s.end() && it < m)
            s.insert(genY[it++]);
        if (it == m && s.find(genX[i]) == s.end())
            break;
        if (s.size() == s2.size())
            answer += cnt[it - 1];
    }
    return answer;
}

int main() {
    int T;
    cin >> T;
    for (int i = 1; i <= T; i++) {
        int n, m, x1, a1, b1, c1, r1, x2, a2, b2, c2, r2;
        cin >> n >> m >> x1 >> a1 >> b1 >> c1 >> r1 >> x2 >> a2 >> b2 >> c2 >> r2;
        cout << "Case #" << i << ": " << solve(n, m, x1, a1, b1, c1, r1, x2, a2, b2, c2, r2) << endl;
    }
}


