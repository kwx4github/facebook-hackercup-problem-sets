#include<fstream>
#include<set>
#include<map>
#include<iostream>
using namespace std;

long long A;
int N, M, T, t;
long long x1, a1, b1, c1, r1;
long long x2, a2, b2, c2, r2;

long long x[1000005];
long long y[1000005];

ifstream fin("mpairs.in");
ofstream fout("mpairs.out");

set<long long> in1;
set<long long> in2;

map<int, int> wher1;
pair<int, int> intr1[1000005]; int i1;
map<int, int> wher2;
pair<int, int> intr2[1000005]; int i2;

int main(){
    for(fin >> T; T; T--){
        fout << "Case #" << ++t << ": ";
        
        fin >> N >> M;
        fin >> x1 >> a1 >> b1 >> c1 >> r1;
        fin >> x2 >> a2 >> b2 >> c2 >> r2;
        
        in1.clear();
        in2.clear();
        wher1.clear();
        wher2.clear();
        A = 0;
        i1 = 1;
        i2 = 1;
    
        x[0] = x1;
        y[0] = x2;
        in1.insert(x1);
        intr1[0] = make_pair(0, x1);
        wher1[x1] = 0;
        in2.insert(x2);
        intr2[0] = make_pair(0, x2);
        wher2[x2] = 0;
    
        for(int i=1; i<N || i<M; i++){
            if(i<N) x[i] = (a1 * x[(i-1)%N] + b1 * y[(i-1)%M] + c1)% r1;
            if(in1.count(x[i])==0){
                in1.insert(x[i]);
                wher1[x[i]] = i1;
                intr1[i1++] = make_pair(i, x[i]);
            }
            if(i<M) y[i] = (a2 * x[(i-1)%N] + b2 * y[(i-1)%M] + c2)% r2;
            if(in2.count(y[i])==0){
                in2.insert(y[i]);
                wher2[y[i]] = i2;
                intr2[i2++] = make_pair(i, y[i]);
            }
        }
        
        /* DEBUG OUTPUT 
        fout << endl << "Sequence 1: ";
        for(int i=0; i<N; i++)
            fout << x[i] << " ";
        fout << endl << "Sequence 2: ";
        for(int i=0; i<M; i++)
            fout << y[i] << " ";
        fout << endl;
                      */
    
        for(int n=-1, m=-1; n<i1-1 && m<i2-1; ){
            int nc = n+1, no = n;
            int mc = m, mo = m;
            bool done = false;
            while(nc!=mc && !done){
                if(nc<mc){  //mc was just sent forward
                    no = nc;
                    for(int i = mo+1; i<=mc; i++){
                        if(wher1.count(intr2[i].second) == 0){
                            done = true;
                            break;
                        }
                        nc = max(nc, wher1[intr2[i].second]);
                    }
                }
                else if(mc<nc){
                    mo = mc;
                    for(int i = no+1; i<=nc; i++){
                        if(wher2.count(intr1[i].second) == 0){
                            done = true;
                            break;
                        }
                        mc = max(mc, wher2[intr1[i].second]);
                    }
                }
            }
            if(done) break;
            
            n = nc;
            m = mc;
            
            int next_n = (n < i1-1)? intr1[n+1].first : N;
            long long countn = next_n - intr1[n].first;
            int next_m = (m < i2-1)? intr2[m+1].first : M;
            long long countm = next_m - intr2[m].first;    
        
            A += countn * countm;
        }
        fout << A << endl;
    }
}
