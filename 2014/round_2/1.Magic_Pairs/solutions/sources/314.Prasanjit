#pragma comment(linker, "/STACK:16777216")

#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<ctype.h>
#include<assert.h>
#include<iostream>
#include<vector>
#include<stack>
#include<queue>
#include<set>
#include<map>
#include<string>
#include<utility>
#include<algorithm>
#include<list>
#include<bitset>
using namespace std;

#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define pb push_back
#define SZ(a) ((long)a.size())
#define ALL(a) a.begin(),a.end()
#define FOREACH(i, c) for( __typeof( (c).begin() ) i = (c).begin(); i != (c).end(); ++i )
#define AREA2(x1,y1,x2,y2,x3,y3) ( x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) )
#define SQR(x) ((x)*(x))
#define STR string
#define IT iterator
#define ff first
#define ss second
#define MP make_pair
#define EPS 1e-9
#define INF 1000000007

#define chk(a,k) ((bool)(a&(1<<(k))))
#define set0(a,k) (a&(~(1<<(k))))
#define set1(a,k) (a|(1<<(k)))

typedef long long Long;
typedef vector<long> Vl;
typedef vector<Long> VL;
typedef pair<long,long> Pll;
typedef pair<Long,Long> PLL;

inline long FastMax(long x, long y) { return (((y-x)>>(32-1))&(x^y))^y; }
inline long FastMin(long x, long y) { return (((y-x)>>(32-1))&(x^y))^x; }

long IR[] = { 0,-1,0,1,-1,-1,1,1 };
long IC[] = { 1,0,-1,0,1,-1,-1,1 };

#define MAX 1000007

Long N,M;
Long x1,a1,b1,c1,r1;
Long x2,a2,b2,c2,r2;
Long B1[MAX+7];
Long B2[MAX+7];

int main( void )
{
    Long i,j,Icase,k = 0;

    freopen("A.in","r",stdin );
    freopen("A.out","w",stdout );

    cin>>Icase;
    while( Icase-- ){
        cin>>N>>M;
        cin>>x1>>a1>>b1>>c1>>r1;
        cin>>x2>>a2>>b2>>c2>>r2;
        B1[0] = x1;
        B2[0] = x2;
        for( i=1;i<max( N,M );i++ ){
            B1[i] = ( a1*B1[(i-1)%N] + b1*B2[(i-1)%M] + c1)%r1;
            B2[i] = ( a2*B1[(i-1)%N] + b2*B2[(i-1)%M] + c2)%r2;
        }
        /*for( i=0;i<N;i++ ){
            printf(" %I64d",B1[i] );
        }
        printf("\n");
        for( i=0;i<M;i++ ){
            printf(" %I64d",B2[i] );
        }
        printf("\n");*/
        set<Long> Nw1,Nd1;
        set<Long> Nw2,Nd2;
        Long Ans = 0,LJ = -1,CJ = -1;
        j = 0;
        for( i=0;i<N;i++ ){
            Nw1.insert( B1[i] );
            if( Nd1.find( B1[i] )!=Nd1.end()){
                Nd1.erase( B1[i] );
            }
            if( Nw2.find( B1[i] )==Nw2.end()){
                Nd2.insert( B1[i] );
            }
            bool IsC = false;
            while( j<M ){
                if( !Nd2.size() ) break;
                IsC = true;
                Nw2.insert( B2[j] );
                if( Nd2.find( B2[j] )!=Nd2.end()){
                    Nd2.erase( B2[j] );
                }
                if( Nw1.find( B2[j] )==Nw1.end()){
                    Nd1.insert( B2[j] );
                }
                j++;
            }
            if( IsC ){
                LJ = j-1;
                while( j<M ){
                    if( Nw2.find( B2[j] )!=Nw2.end()) j++;
                    else break;
                }
                CJ = j-1;
            }
            if( !Nd1.size() && !Nd2.size()){
                Ans += CJ-LJ+1;
            }
            //printf("i = %I64d j = %I64d %ld %ld %ld %ld %I64d\n",i,j,Nw1.size(),Nd1.size(),Nw2.size(),Nd2.size(),Ans );
        }
        printf("Case #%I64d: %I64d\n",++k,Ans );
    }

    return 0;
}
