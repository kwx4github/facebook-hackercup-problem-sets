#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <queue>
#include <stack>
#include <sstream>
#include <cstring>
#include <numeric>
#include <ctime>

#define re return
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)
#define y0 y32479
#define y1 y95874
#define fill(x, y) memset(x, y, sizeof(x))
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define unq(x) (x.resize(unique(all(x)) - x.begin()))
#define spc(i,n) " \n"[i == n - 1]

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef double D;
typedef long double LD;
typedef long long ll;
typedef pair<ll, ll> pll;
typedef vector<ll> vll;

template<class T> T abs(T x) { return x > 0 ? x : -x;}

ll n[2];

int a[2][1000010];
set<int> s[3];

ll x1[2],a1[2],b1[2],c1[2],r1[2];

void gen() {
	a[0][0] = x1[0];
	a[1][0] = x1[1];
	for (int i = 1; i < max(n[0], n[1]); i++) {
		rep(p, 2)
			a[p][i] = (a1[p] * a[0][(i-1) % n[0]] + b1[p] * a[1][(i-1) % n[1]] + c1[p]) % r1[p];
	}

	if (0)
	rep(p, 2) {
		cout << endl;
		rep(i, n[p])
			cout << a[p][i] << ' ';
		cout << endl;
	}
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	int tc;
	cin >> tc;
	rep(tt, tc) {
		cout << "Case #" << tt + 1 << ": ";
		rep(i, 2)
			cin >> n[i];
		rep(i, 2)
			cin >> x1[i] >> a1[i] >> b1[i] >> c1[i] >> r1[i];
		gen();
		rep(i, 3)
			s[i].clear();

		ll ans = 0;
		int cl = 0, cr = 0;
		rep(i, n[0]) {
			int f = 0;
			if (!sz(s[0]) && !sz(s[1]))
				f = 1;
			int x = a[0][i];
			//cout << x << " ";
			if (s[2].find(x) == s[2].end()) {
				if (s[1].find(x) != s[1].end()) {
					s[0].erase(x);
					s[1].erase(x);
					s[2].insert(x);
				}
				else
					s[0].insert(x);
			}
			//cout << sz(s[0]) << ' ' << sz(s[1]) << endl;
			if (sz(s[0])) {
				//cout << " ex ";
				cl = cr;
				while (cl < n[1]) {
					int x = a[1][cl];
					if (s[0].find(x) != s[0].end()) {
						s[0].erase(x);
						s[1].erase(x);
						s[2].insert(x);
					}
					else {
						if (s[2].find(x) == s[2].end())
							s[1].insert(x);
					}
					cl++;
					if (!sz(s[0]))
						break;
				}
				if (sz(s[0]) && cl == n[1])
					break;
				f = 0;
				//cout << "cl = " << cl << " ";
			}

			if (f) {
				//cout << "ff ";
				ans += cr - cl + 1;
			}
			else {
				if (!sz(s[1])) {
					//cout << "not f ";
					cr = cl;
					while (cr < n[1]) {
						int x = a[1][cr];
						if (s[2].find(x) != s[2].end())
							cr++;
						else
							break;
					}
					ans += cr - cl + 1;
					//cout << "cr = " << cr << " ";
				}
			}
			//cout << "ans = " << ans << endl;
			//cout << cl << endl;
		}
		cout << ans << endl;
	}


	re 0;
}

