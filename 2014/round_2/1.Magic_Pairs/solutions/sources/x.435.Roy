#include <bits/stdc++.h>

using namespace std;

int main()
{
	int T;
	cin>>T;
	
	for(int caso=1; caso<=T; caso++)
	{
		int N, M;
		
		long long x1, a1, b1, c1, r1;
		long long x2, a2, b2, c2, r2;
		
		cin>>N>>M;
		
		cin>>x1>>a1>>b1>>c1>>r1;
		cin>>x2>>a2>>b2>>c2>>r2;
		
		vector <int> B1(N), B2(M);
		B1[0] = x1;
		B2[0] = x2;
		for(int i=1; i<max(N, M); i++)
		{
			if(i < N) B1[i] = (a1 * B1[(i-1)%N] + b1 * B2[(i-1)%M] + c1) % r1;
			if(i < M) B2[i] = (a2 * B1[(i-1)%N] + b2 * B2[(i-1)%M] + c2) % r2;
		}
		
		long long ans = 0;
		int p1 = 0, p2 = 0;
		
		set <int> S1, S2;
		set <int> U1, U2;
		
		while(p1 < N && p2 < M)
		{
			if(B1[p1] != B2[p2])
			{
				S1.insert(B1[p1]);
				U1.insert(B1[p1]);
				S2.insert(B2[p2]);
				U2.insert(B2[p2]);
				p1++;
				p2++;
				
				while((p1 < N || p2 < M) && (U1.size() > 0 || U2.size() > 0))
				{
					while(p2 < M && U1.size() > 0)
					{
						int e2 = B2[p2];
					
						S2.insert(e2);
						if(U1.find(e2) != U1.end()) U1.erase(e2);
						else if(S1.find(e2) == S1.end()) U2.insert(e2);
					
						p2++;
					}
				
					while(p1 < N && U2.size() > 0)
					{
						int e1 = B1[p1];
					
						S1.insert(e1);
						if(U2.find(e1) != U2.end()) U2.erase(e1);
						else if(S2.find(e1) == S2.end()) U1.insert(e1);
					
						p1++;
					}
				}
				
				if(U1.size() == 0 && U2.size() == 0)
				{
					int q1 = p1, q2 = p2;
					
					while(q1 < N && S1.find(B1[q1]) != S1.end())
						q1++;
					
					while(q2 < M && S2.find(B2[q2]) != S2.end())
						q2++;
					
					int cnt1 = q1 - p1 + 1;
					int cnt2 = q2 - p2 + 1;
					
					ans += 1LL * cnt1 * cnt2;
					p1 = q1;
					p2 = q2;
				}
			}
			else
			{
				S1.insert(B1[p1]);
				S2.insert(B2[p2]);
				
				int q1 = p1, q2 = p2;
				
				while(q1 < N && B1[q1] == B1[p1])
					q1++;
				
				while(q2 < M && B2[q2] == B2[p2])
					q2++;
				
				int cnt1 = q1 - p1;
				int cnt2 = q2 - p2;
				
				ans += 1LL * cnt1 * cnt2;
				p1 = q1;
				p2 = q2;
			}
		}
		
		cout<<"Case #"<<caso<<": "<<ans<<endl;
	}
  
	return 0;
}
