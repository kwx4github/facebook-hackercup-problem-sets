#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<string>
#include<algorithm>
#include<queue>
#include<vector>
#include<set>
#include<map>
using namespace std;

int a[2][1000005];
int n[2];
long long aa[2], bb[2], cc[2], r[2];


int main()
{
	freopen("A.in", "r", stdin);
	freopen("A.out", "w", stdout);

	int TT;
	scanf("%d", &TT);
	for(int T = 0; T < TT; T++)
	{
		printf("Case #%d: ", T + 1);
		scanf("%d%d", &n[0], &n[1]);
		for(int i = 0; i < 2; i++)
			scanf("%d%lld%lld%lld%lld", &a[i][0], &aa[i], &bb[i], &cc[i], &r[i]);
		/*
		scanf("%d%d", &a[0][0], &a[1][0]);
		scanf("%lld%lld%lld%lld%lld%lld", &aa[0], &aa[1], &bb[0], &bb[1], &cc[0], &cc[1]);
		
		scanf("%lld%lld", &r[0], &r[1]);
		*/

		set<int> s[2];
		//s[0].clear();
		//s[1].clear();

		for(int i = 1; i < n[0] || i < n[1]; i++)
		{
			a[0][i] = ((aa[0]*a[0][(i-1)%n[0]]) % r[0] + (bb[0]*a[1][(i-1)%n[1]]) % r[0] + cc[0]) % r[0];
			a[1][i] = ((aa[1]*a[0][(i-1)%n[0]]) % r[1] + (bb[1]*a[1][(i-1)%n[1]]) % r[1] + cc[1]) % r[1];
		}

		long long res = 0;
		int eq = 0;
		for(int i = 0, j = 0; i < n[0] && j < n[1];)
		{
			if(i == n[0] && s[1].size() >= s[0].size())
				break;
			if(j == n[1] && s[0].size() >= s[1].size())
				break;
			long long w1 = 1, w2 = 1;
			set<int>::iterator it;
			s[0].insert(a[0][i]);
			it = s[1].lower_bound(a[0][i]);
			if(it != s[1].end() && *it == a[0][i])
				eq++;
			i++;
			while(i < n[0])
			{
				it = s[0].lower_bound(a[0][i]);
				if(it == s[0].end() || *it != a[0][i])
					break;
				i++;
				w1++;
			}

			s[1].insert(a[1][j]);
			it = s[0].lower_bound(a[1][j]);
			if(it != s[0].end() && *it == a[1][j])
				eq++;
			j++;
			while(j < n[1])
			{
				set<int>::iterator it = s[1].lower_bound(a[1][j]);
				if(it == s[1].end() || *it != a[1][j])
					break;
				j++;
				w2++;
			}
			if(eq == s[0].size())
				res += w1 * w2;
		}

		printf("%lld\n", res);
	}

	return 0;
}