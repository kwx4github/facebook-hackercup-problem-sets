# include <cstdio>
# include <iostream>
# include <vector>
# include <queue>
# include <algorithm>
# include <cstring>
# include <cmath>
# include <cctype>
# include <set>
# include <map>

using namespace std;

long long board1[1000000],board2[1000000];
set<long long> good,b1bad,b2bad;

int main()
{
  int T;
  scanf("%d",&T);
  for(int t=1;t<=T;t++)
  {
    int N,M;
    scanf("%d%d",&N,&M);
    int x1,a1,b1,c1,r1;
    scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
    int x2,a2,b2,c2,r2;
    scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);

    board1[0]=x1;board2[0]=x2;
    for(int i=1;i<max(M,N);i++)
    {
      if(i<N)board1[i]=(a1*board1[(i-1)%N]+b1*board2[(i-1)%M]+c1)%r1;
      if(i<M)board2[i]=(a2*board1[(i-1)%N]+b2*board2[(i-1)%M]+c2)%r2;
    }

    good.clear();b1bad.clear();b2bad.clear();
    long long tot=0;
    for(int i=0,j=0;;)
    {
      if(b1bad.empty()&&(i<N))
      {
        //printf("%d %d\n",i,j);
        if(b2bad.count(board1[i]))
        {
          good.insert(board1[i]);
          b2bad.erase(board1[i]);
          i++;
          if(b2bad.empty())
          {
            long long cnt1=1,cnt2=1;
            while((i<N)&&(good.count(board1[i])))i++,cnt1++;
            while((j<M)&&(good.count(board2[j])))j++,cnt2++;
            tot+=cnt1*cnt2;
            //printf("1: %Ld\n",cnt1*cnt2);
          }
        }
        else if(!good.count(board1[i]))
        {
          b1bad.insert(board1[i++]);
        }
        else i++;
      }
      else if(j<M)
      {
        //printf("%d %d\n",i,j);
        if(b1bad.count(board2[j]))
        {
          good.insert(board2[j]);
          b1bad.erase(board2[j]);
          j++;
          if(b1bad.empty()&&b2bad.empty())
          {
            long long cnt1=1,cnt2=1;
            while((i<N)&&(good.count(board1[i])))i++,cnt1++;
            while((j<M)&&(good.count(board2[j])))j++,cnt2++;
            tot+=cnt1*cnt2;
            //printf("2: %Ld\n",cnt1*cnt2);
          }
        }
        else if(!good.count(board2[j]))
        {
          b2bad.insert(board2[j++]);
        }
        else j++;
      }
      else break;
    }
    printf("Case #%d: %Ld\n",t,tot);
  }
  return 0;
}

