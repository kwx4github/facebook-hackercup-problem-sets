#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/STACK:128777216")

#include <cstdio>
#include <cmath>
#include <cstring>
#include <ctime>
#include <algorithm>
#include <vector>
#include <queue>
#include <string>
#include <map>
#include <set>
#include <iostream>
#include <functional>
#include <numeric>
#include <sstream>
#include <exception>
#include <cassert>

typedef long long i64;
typedef unsigned int u32;
const int null = 0;
using namespace std;

typedef vector<int> VI;
typedef vector<int>::iterator VII;

#define all(a) a.begin(),a.end()

template<class T> int size(const T &a) {
	return int(a.size());
}
template<class T> T abs(const T &a) {
	return (a < 0? -a: a);
}
template<class T> T sqr(const T &a) {
	return a * a;
}

const int max_n = 1000010;

set<int> h1, h2, diff;

i64 x1[max_n], x2[max_n];

int main() {
#ifdef pperm
	freopen("input.txt", "r", stdin);
	//freopen("input.txt", "w", stdout);
	freopen("output.txt", "w", stdout);
#endif
	int T;
	scanf("%d", &T);
	
	for (int iTest = 1; iTest <= T; iTest++) {
		printf("Case #%d: ", iTest);
		int n, m;
		scanf("%d %d", &n, &m);
		i64 a1, b1, c1, r1;
		i64 a2, b2, c2, r2;
		cin >> x1[0] >> a1 >> b1 >> c1 >> r1;
		cin >> x2[0] >> a2 >> b2 >> c2 >> r2;
		h1.clear();
		h2.clear();
		diff.clear();
		{
			for (int i = 0; i < max(n, m); i++) {
				if (i > 0) {
					x1[i] = (a1 * x1[(i-1) % n] + b1 * x2[(i-1) % m] + c1) % r1;
					x2[i] = (a2 * x1[(i-1) % n] + b2 * x2[(i-1) % m] + c2) % r2;
				}
			}
		}
		int i = 0, j = 0;
		i64 res = -1;
		while (true) {
			i64 c1 = 1, c2 = 1;
			while (i < n && h1.find(x1[i]) != h1.end()) {
				c1++;
				i++;
			}
			while (j < m && h2.find(x2[j]) != h2.end()) {
				c2++;
				j++;
			}
			res += c1 * c2;
			if (i < n && j < m) {
				h1.insert(x1[i]);
				diff.insert(x1[i]);
				i++;
				while (diff.size()) {
					int j2 = j;
					while (j2 < m && diff.size()) {
						if (diff.find(x2[j2]) != diff.end()) {
							diff.erase(x2[j2]);
						}
						j2++;
					}
					if (diff.size()) {
						break;
					}
					for (j; j < j2; j++) {
						if (h1.find(x2[j]) == h1.end()) {
							diff.insert(x2[j]);
						}
						h2.insert(x2[j]);
					}

					int i2 = i;
					while (i2 < n && diff.size()) {
						if (diff.find(x1[i2]) != diff.end()) {
							diff.erase(x1[i2]);
						}
						i2++;
					}
					if (diff.size()) {
						break;
					}
					for (i; i < i2; i++) {
						if (h2.find(x1[i]) == h2.end()) {
							diff.insert(x1[i]);
						}
						h1.insert(x1[i]);
					}
				}
				if (diff.size()) {
					break;
				}
			} else {
				break;
			}
		}
		cout << res << endl;
	}
#ifdef pperm
	fprintf(stderr, "\n%.3lf\n", clock() / double(CLOCKS_PER_SEC));
#endif
	return 0;
}