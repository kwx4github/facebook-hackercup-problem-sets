import sys

def gets():
  return sys.stdin.readline().rstrip('\r\n')

def getint():
  return int(gets())

def getints():
  return [int(i) for i in gets().split()]

def gen_boards(n,m,x1,a1,b1,c1,r1,x2,a2,b2,c2,r2):
  board1 = [x1]
  board2 = [x2]
  for i in range(1,max(n,m)):
    if i < n:
      next1 = (a1 * board1[(i-1)%n] + b1 * board2[(i-1)%m] + c1) % r1
      board1.append(next1)
    if i < m:
      next2 = (a2 * board1[(i-1)%n] + b2 * board2[(i-1)%m] + c2) % r2
      board2.append(next2)
  return board1, board2

def solve_slow(board1, board2):
  ans = 0
  for i in range(len(board1)):
    for j in range(len(board2)):
      if set(board1[:i+1]) == set(board2[:j+1]):
        ans += 1
  return ans

def solve(board1, board2):
  i,j = 0,0
  ans = 0
  n,m = len(board1),len(board2)
  diff1,diff2 = set(),set()
  set1,set2 = set(),set()
  while i < n and j < m:
    x2 = board2[j]
    j += 1
    if x2 in set2:
      temp = 1 if len(diff1) == 0 and len(diff2) == 0 else 0
      ans += temp
      while i < n and board1[i] in set1:
        i += 1
        ans += temp
      while j < m and board2[j] in set2:
        j += 1
        ans += temp
    else:
      set2.add(x2)
      if x2 not in set1:
        diff2.add(x2)
        while (len(diff1) > 0 or len(diff2) > 0) and i < n and j < m:
          while i < n and len(diff2) > 0:
            x1 = board1[i]
            set1.add(x1)
            i += 1
            if x1 in diff2:
              diff2.remove(x1)
            if not x1 in set2:
              diff1.add(x1)
          while j < m and len(diff1) > 0:
            x2 = board2[j]
            set2.add(x2)
            j += 1
            if x2 in diff1:
              diff1.remove(x2)
            if not x2 in set1:
              diff2.add(x2)

        temp = 1 if len(diff1) == 0 and len(diff2) == 0 else 0
        ans += temp
        while i < n and board1[i] in set1:
          i += 1
          ans += temp

  while i < n:
    x1 = board1[i]
    i += 1
    set1.add(x1)
    if x1 in diff2:
      diff2.remove(x1)
    if not x1 in set2:
      diff1.add(x1)
    if len(diff1) == 0 and len(diff2) == 0:
      ans += 1
  while j < m:
    x2 = board2[j]
    j += 1
    set2.add(x2)
    if x2 in diff1:
      diff1.remove(x2)
    if not x2 in set1:
      diff2.add(x2)
    if len(diff1) == 0 and len(diff2) == 0:
      ans += 1
  return ans


T = getint()
for ic in range(T):
  n,m = getints()
  x1,a1,b1,c1,r1 = getints()
  x2,a2,b2,c2,r2 = getints()
  board1,board2 = gen_boards(n,m,x1,a1,b1,c1,r1,x2,a2,b2,c2,r2)
  ans = solve(board1,board2)
  print("Case #{0}: {1}".format(ic+1, ans))
