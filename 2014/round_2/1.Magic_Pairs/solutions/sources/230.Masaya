#include<iostream>
#include<sstream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
#include<vector>
#include<cmath>
#include<set>
#include<map>
#include<stack>
#include<queue>
#include<numeric>
#include<functional>
#include<complex>
#include<bitset>
#include<cassert>

using namespace std;

#define FOR(i,n)  for(int i=0;i<(int)(n);i++)
#define FOR3(i,a,b) for(int i=a,i##_end=b;i<i##_end;i++)
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define MP make_pair
#define BET(a,x,b) ((a)<=(x)&&(x)<(b))
#define FOR_EACH(it,v) for(__typeof(v.begin()) it=v.begin(),it_end=v.end() ; it != it_end ; it++)

typedef long long ll_t;
typedef vector<int> VI;

int dx[]  = {0,1,0,-1};
int dy[]  = {1,0,-1,0};
string ds = "SENW";
//string ds = "URDL";

ll_t B1[1000000+10];
ll_t B2[1000000+10];

map<ll_t,int> toindex;

bool used1[1000000 + 10];
bool used2[1000000 + 10];

int main()
{
  int t,caseNo=1;
  cin>>t;
  while(t--){
    ll_t ans = 0;
    int N,M;
    cin>>N>>M;
    ll_t x1,a1,b1,c1,r1;
    ll_t x2,a2,b2,c2,r2;
    cin>>x1>>a1>>b1>>c1>>r1;
    cin>>x2>>a2>>b2>>c2>>r2;
    B1[0] = x1;
    B2[0] = x2;
    int MN = max(N,M);
    FOR(i,MN) if(i) {
      if(i < N) {
        B1[i] = (a1 * B1[(i-1)%N] + b1 * B2[(i-1)%M] + c1) % r1;
      }
      if(i < M) {
        B2[i] = (a2 * B1[(i-1)%N] + b2 * B2[(i-1)%M] + c2) % r2;
      }
    }

    vector<ll_t> dat;
    FOR(i,N) dat.push_back(B1[i]);
    FOR(i,M) dat.push_back(B2[i]);
    sort(ALL(dat));
    dat.erase(unique(dat.begin(),dat.end()),dat.end());
    toindex.clear();
    FOR(i,SZ(dat)) toindex[dat[i]] = i ;
    FOR(i,N) B1[i] = toindex[B1[i]];
    FOR(i,M) B2[i] = toindex[B2[i]];

    memset(used1 , 0 , sizeof(used1));
    memset(used2 , 0 , sizeof(used2));
    //FOR(i,N) cout<<" "<<B1[i]; cout<<endl;
    //FOR(i,M) cout<<" "<<B2[i]; cout<<endl;
    //cout<<SZ(toindex)<<endl;

    int set1size = 0;
    int set2size = 0;
    int cur1=0,cur2=0;
    int size = 1;
    int diff = 0 ;
    while(cur1 < N && cur2 < M){
      while(cur1 < N && set1size < size) {
        int b = B1[cur1++];
        if(!used1[b]) {
          if(used2[b]) diff--;
          else diff++;
          used1[b] = true;
          set1size++;
        }
      }
      while(cur2 < M && set2size < size) {
        int b = B2[cur2++];
        if(!used2[b]) {
          if(used1[b]) diff--;
          else diff++;
          used2[b] = true;
          set2size++;
        }
      }
      if(set1size < size || set2size < size) break;
      long long sz1 = 1, sz2 = 1;
      while(cur1 < N && used1[B1[cur1]]) cur1++, sz1++;
      while(cur2 < M && used2[B2[cur2]]) cur2++, sz2++;
      if(diff == 0){
        //FOR_EACH(it, S1) cout<<" "<<*it; cout<<endl;
        //cout<< "   "<<sz1<<" "<<sz2<<endl;
        ans += 1LL * sz1 * sz2;
      }
      size++;
      //if(size % 1000 ==0)cout<<size<<endl;
    }
    
    printf("Case #%d: %lld\n", caseNo++, ans);
  }
  return 0;
}
