#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<map>
#include<utility>
#include<vector>
#include<cmath>
#include<cstdlib>
#include<algorithm>
#include<stack>
#include<queue>

#define MP(a,b)	make_pair(a,b)
#define ii pair<int,int>
#define MAX_N 110
#define LL long long
#define pll pair<long long,long long>
#define inf 1123123123
#define MOD 1000000007
using namespace std;
LL t,z,n,i,j,A[1001000],B[1001000],a1,a2,b1,b2,c1,c2,r1,r2,m,ans,x,y,k,k1,k2;
map<LL,LL> mp1,mp2;
LL aa,bb;
void OPEN(){
	freopen("in.txt","r",stdin);
	freopen("out.txt","w",stdout);
}


int main(){
	OPEN();
	scanf("%lld",&t);
	for(z=1;z<=t;z++){
		scanf("%lld%lld",&n,&m);
		scanf("%lld%lld%lld%lld%lld",&x,&a1,&b1,&c1,&r1);
		scanf("%lld%lld%lld%lld%lld",&y,&a2,&b2,&c2,&r2);
		mp1.clear();
		mp2.clear();
		aa=0;
		bb=0;
		ans=0;
		A[0]=x;
		B[0]=y;
		if(n<m)	swap(n,m);
		for(i=1;i<n;i++){
			A[i]=(a1*A[(i-1)%n] + b1*B[(i-1)%m] + c1)%r1;
			B[i]=(a2*A[(i-1)%n] + b2*B[(i-1)%m] + c2)%r2;
		}
		j=0;
		k1=k2=0;
		for(i=0;i<n;i++){
			if(mp1.count(A[i])==0){
				aa++;
				k1=0;
			}

			mp1[A[i]]=1;
			k1++;
			while(i+1<n && mp1.count(A[i+1])!=0){
				i++;
				k1++;
			}
			//cout<<i<<" "<<k1<<endl;
			
			while(j<m && mp1.count(B[j])!=0){
				if(mp2.count(B[j])==0){
					bb++;
					k2=0;
				}

				mp2[B[j]]=1;
				k2++;
				
				while(j+1<m && mp2.count(B[j+1])!=0){
					j++;
					k2++;
				}
				
				if(aa==bb){
					ans+=k1*k2;
				}
				j++;
			}
			
		}
		
		printf("Case #%lld: %lld\n",z,ans);
	}
	return 0;
}