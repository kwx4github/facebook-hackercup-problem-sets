#include <cstdio>
#include <set>
#include <vector>
#include <memory.h>
#include <cassert>
#include <algorithm>
using namespace std;

typedef long long llong;

const int N = 2 * 1e6 + 42;
llong HV[N];
int cnt[N];
int ver[N];

vector<llong> get(const vector<llong>& A)
{
    memset(cnt, 0, sizeof(cnt));
    llong curh = 0;
    vector<llong> ret;
    for (int i = 0; i < A.size(); i++)
    {
        if (cnt[A[i]] == 0)
            curh ^= HV[A[i]];
        cnt[A[i]]++;
        ret.push_back(curh);
    }
    return ret;
}

void solve(int tc)
{
    int n, m;
    scanf("%d %d", &n, &m);
    vector<llong> A(n), B(m);
    llong a1, b1, c1, r1;
    llong a2, b2, c2, r2;
    scanf("%lld %lld %lld %lld %lld", &A[0], &a1, &b1, &c1, &r1);
    scanf("%lld %lld %lld %lld %lld", &B[0], &a2, &b2, &c2, &r2);
    for (int i = 1; i < max(n, m); i++)
    {
        if (i < n)
            A[i] = (a1 * A[(i - 1) % n] + b1 * B[(i - 1) % m] + c1) % r1;
        if (i < m)
            B[i] = (a2 * A[(i - 1) % n] + b2 * B[(i - 1) % m] + c2) % r2;
    }
    vector<llong> cond;
    for (int i = 0; i < n; i++)
        cond.push_back(A[i]);
    for (int j = 0; j < m; j++)
        cond.push_back(B[j]);
    sort(cond.begin(), cond.end());
    cond.resize(unique(cond.begin(), cond.end()) - cond.begin());
    for (int i = 0; i < n; i++)
        A[i] = lower_bound(cond.begin(), cond.end(), A[i]) - cond.begin();
    for (int i = 0; i < m; i++)
        B[i] = lower_bound(cond.begin(), cond.end(), B[i]) - cond.begin();
    for (int i = 0; i < cond.size(); i++)
        HV[i] = (rand() * ((llong)RAND_MAX + 1)) + rand();
    vector<llong> vA = get(A);
    vector<llong> vB = get(B);
    /*int stup = 0;
    for (int i = 0; i < vA.size(); i++)
        for (int j = 0; j < vB.size(); j++)
            if (vA[i] == vB[j])
                stup++;*/
    sort(vA.begin(), vA.end());
    llong ans = 0;
    for (int i = 0; i < vB.size(); i++)
        ans += upper_bound(vA.begin(), vA.end(), vB[i]) - lower_bound(vA.begin(), vA.end(), vB[i]);
    //assert(ans == stup);
    printf("Case #%d: %lld\n", tc, ans);
    fprintf(stderr, "Case #%d: %lld\n", tc, ans);
}

int main()
{
    int T;
    scanf("%d", &T);
    for (int i = 0; i < T; i++)
    {
        solve(i + 1);
    }

}

