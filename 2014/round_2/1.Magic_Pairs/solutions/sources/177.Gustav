#include <cstdio>
#include <cstring>

#include <map>
#include <algorithm>

using namespace std;
typedef long long llint;

#define MAX 1000005

int T, N, M;

llint B1[MAX];
llint B2[MAX];

llint x1, a1, b1, c1, r1;
llint x2, a2, b2, c2, r2;

map< llint, int > m1, m2;

int main(void)
{
  scanf("%d", &T);

  for (int tc = 1; tc <= T; ++tc) {
    scanf("%d%d", &N, &M);
    scanf("%lld%lld%lld%lld%lld", &x1, &a1, &b1, &c1, &r1);
    scanf("%lld%lld%lld%lld%lld", &x2, &a2, &b2, &c2, &r2);

    B1[0] = x1;
    B2[0] = x2;

    for (int i = 1; i < max(N, M); ++i) {
      if (i < N)
        B1[i] = (a1 * B1[(i - 1) % N] + b1 * B2[(i - 1) % M] + c1) % r1;
      if (i < M)
        B2[i] = (a2 * B1[(i - 1) % N] + b2 * B2[(i - 1) % M] + c2) % r2;
    }

    m1.clear();
    m2.clear();

    int diff = 0;
    llint sol = 0;
    llint last = 0;
    for (int i = 0, j = 0; i < N; ++i) {
      if (m1[B1[i]])
        sol += last;
      else {
        last = 0;
        m1[B1[i]] = 1;
        if (m2[B1[i]]) --diff;
        else ++diff;

        while (j < M && m2[B2[j]])
          ++j;

        if (j < M) {
          m2[B2[j]] = 1;
          if (m1[B2[j]]) --diff;
          else ++diff;

          if (diff == 0) {
            while (j < M && m2[B2[j]])
              ++j, ++last;
          }
        }

        sol += last;
      }
    }

    printf("Case #%d: %lld\n", tc, sol);
  }

  return 0;
}
