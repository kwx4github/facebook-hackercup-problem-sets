
// Tomasz Kulczynski
#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cstdlib>
#include <numeric>
using namespace std;

#define X first
#define Y second
#define MP make_pair
#define PB push_back
typedef long long LL;
typedef double D;
typedef long double LD;
typedef vector<int> VI;
typedef pair<int,int> PII;
#define REP(i,n) for (int i=0;i<(n);++i)
#define FOR(i,a,b) for (VAR(i,a);i<=(b);++i)
#define FORD(i,a,b) for(VAR(i,a);i>=(b);--i)
#define FORE(e,v) for(VAR(e,(v).begin());e!=(v).end();++e)
#define VAR(a,b) __typeof(b) a=(b)
#define SIZE(a) ((int)(a).size())
#define ALL(x) (x).begin(),(x).end()
#define CLR(x,a) memset(x,a,sizeof(x))

vector<PII> tworz(const VI& a) {
    int n = SIZE(a);
    vector<PII> ret;
    set<int> s;
    REP(i, n) {
        s.insert(a[i]);
        if(SIZE(s) > SIZE(ret)) {
            ret.PB(MP(a[i], i));
        }
    }
    return ret;
}

LL testcase() {
    VI a,b;
    int n,m;
    scanf("%d %d",&n,&m);
    int x1,a1,b1,c1,r1;
    scanf("%d %d %d %d %d",&x1,&a1,&b1,&c1,&r1);
    int x2,a2,b2,c2,r2;
    scanf("%d %d %d %d %d",&x2,&a2,&b2,&c2,&r2);
    a.PB(x1);
    b.PB(x2);
    FOR(i, 1, max(n,m)) {
        if(i < n)
            a.PB((a1 * a[(i-1)%n] + b1 * b[(i-1)%m] + c1) % r1);
        if(i < m)
            b.PB((a2 * a[(i-1)%n] + b2 * b[(i-1)%m] + c2) % r2);
    }
    vector<PII> x = tworz(a);
    vector<PII> y = tworz(b);
    set<int> A, B;
    int w = min(SIZE(x), SIZE(y));
    x.PB(MP(-1, n));
    y.PB(MP(-1, m));
    LL ret = 0;
    REP(i, w) {
        if(B.count(x[i].X)) 
            B.erase(x[i].X);
        else
            A.insert(x[i].X);
        if(A.count(y[i].X))
            A.erase(y[i].X);
        else
            B.insert(y[i].X);
        if(A.empty() && B.empty()) {
            ret += ((LL)(x[i+1].Y - x[i].Y)) * (y[i+1].Y - y[i].Y);
        }
    }
    return ret;
}

int main() {
    int dd;
    scanf("%d", &dd);
    FOR(ii, 1, dd) {
        printf("Case #%d: %lld\n", ii, testcase());
    }
    return 0;
}
