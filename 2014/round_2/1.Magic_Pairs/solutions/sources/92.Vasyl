#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

typedef long long Int;
typedef pair<int,int> PII;
typedef vector<int> VInt;

#define FOR(i, a, b) for(i = (a); i < (b); ++i)
#define RFOR(i, a, b) for(i = (a) - 1; i >= (b); --i)
#define CLEAR(a, b) memset(a, b, sizeof(a))
#define SIZE(a) int((a).size())
#define ALL(a) (a).begin(),(a).end()
#define PB push_back
#define MP make_pair

Int A[1 << 21];
Int B[1 << 21];
Int C[1 << 21];

int AA[1 << 21];
int BB[1 << 21];

int SolveTest(int test)
{
	int n, m;
	scanf("%d%d", &n, &m);

	int x1, a1, b1, c1, r1;
	scanf("%d%d%d%d%d", &x1, &a1, &b1, &c1, &r1);

	int x2, a2, b2, c2, r2;
	scanf("%d%d%d%d%d", &x2, &a2, &b2, &c2, &r2);

	A[0] = x1;
	B[0] = x2;

	int i;
	int limit = max(n, m);
	FOR(i, 1, limit)
	{
		if (i < n)
			A[i] = (a1*A[(i - 1) % n] + b1*B[(i - 1) % m] + c1) % r1;

		if (i < m)
			B[i] = (a2*A[(i - 1) % n] + b2*B[(i - 1) % m] + c2) % r2;
	}

	FOR(i, 0, n)
		C[i] = A[i];
	FOR(i, 0, m)
		C[n + i] = B[i];

	sort(C, C + n + m);
	int all = unique(C, C + n + m) - C;

	FOR(i, 0, n)
		A[i] = lower_bound(C, C + all, A[i]) - C;
	FOR(i, 0, m)
		B[i] = lower_bound(C, C + all, B[i]) - C;

	CLEAR(AA, 0);
	CLEAR(BB, 0);

	Int res = 0;
	int from = 0;
	int to = 0;
	int cnt = 0;
	FOR(i, 0, n)
	{
		int a = int(A[i]);
		if (AA[a] == 0)
		{
			AA[a] = 1;
			++cnt;
		}

		if (cnt != 0)
		{
			from = to;
			while (to != m)
			{
				int b = int(B[to]);
				if (AA[b] == 0)
					break;

				++to;
				if (cnt != 0)
					++from;

				if (BB[b] == 0)
				{
					BB[b] = 1;
					--cnt;
				}
			}
		}

		if (cnt == 0)
			res += to - from + 1;
	}

	printf("Case #%d: %lld\n", test + 1, res);
	return 0;
}

int main()
{
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);

	int T, t;
	char buf[1 << 7];
	gets(buf);
	sscanf(buf, "%d", &T);
	FOR(t, 0, T)
	{
		fprintf(stderr, "Solving %d/%d\n", t + 1, T);
		SolveTest(t);
	}

	return 0;
};
