#include<cstdio>
#include<set>

typedef long long LL;
int board1[1000010], board2[1000010];

int main()
{
	int T; scanf("%d", &T);
	for(int ii = 0; ii < T; ii++)
	{
		std::set<int> b_1, b_2;
		int dif_1 = 0, dif_2 = 0;
		int N, M; scanf("%d %d", &N, &M);
		int x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;
		scanf("%d%d%d%d%d",&x1,&a1,&b1,&c1,&r1);
		scanf("%d%d%d%d%d",&x2,&a2,&b2,&c2,&r2);
		board1[0] = x1; board2[0] = x2;
		for(int i = 1; i < N && i < M; i++)
		{
			board1[i] = (LL(a1)*board1[(i-1) %N] + LL(b1)*board2[(i-1)%M]+c1)%r1;
			board2[i] = (LL(a2)*board1[(i-1) %N] + LL(b2)*board2[(i-1)%M]+c2)%r2;
		}
		for(int i = M; i < N; i++)
			board1[i] = (LL(a1)*board1[(i-1) %N] + LL(b1)*board2[(i-1)%M]+c1)%r1;
		for(int i = N; i < M; i++)
			board1[i] = (LL(a2)*board2[(i-1) %N] + LL(b2)*board2[(i-1)%M]+c2)%r2;
		int i = 0, j = 0;
		long long res = 0, prev = 0;
		while(i < N || j < M)
		{
			int X1;
			bool n = 1;
			int mult = 1;
			while(i < N)
			{
				X1 = board1[i];
				i++;
				if(b_1.find(X1) == b_1.end())
					break;
				else
					mult++;
			}
			prev *= mult;
			if(b_1.find(X1) == b_1.end())
				if(b_2.find(X1) != b_2.end())
					dif_2--;
				else
					dif_1++;
			else
				n = 0;
			b_1.insert(X1);
			int X2; mult = 1;
			while(j < M)
			{
				X2 = board2[j];
				j++;
				if(b_2.find(X2) == b_2.end())
					break;
				else
					mult++;
			}
			prev *= mult;
			if(b_2.find(X2) == b_2.end())
				if(b_1.find(X2) != b_1.end())
					dif_1--;
				else
					dif_2++;
			else
				n = 0;
			b_2.insert(X2);

			res += prev;
			
			if(dif_1 == 0 && dif_2 == 0)
			{
				prev = 1;
				if((!(i<N))&&(!(j<M))&&n) res++;
			}
			else
				prev = 0;
		}
		printf("Case #%d: %lld\n",ii+1,res);
	}
	return 0;
}
