// I AM BACK!!!

#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>

using namespace std;

#define pb push_back
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v) ((int)v.size())
#define rep(i,m) for(int i=0;i<(int)(m);i++)
#define rep2(i,n,m) for(int i=n;i<(int)(m);i++)
#define For(it,c) for(__typeof(c.begin()) it=c.begin();it!=c.end();++it)
#define mem(a,b) memset(a,b,sizeof(a))
#define mp make_pair
#define dot(a,b) ((conj(a)*(b)).X)
#define X real()
#define Y imag()
#define length(V) (hypot((V).X,(V).Y))
#define vect(a,b) ((b)-(a))
#define cross(a,b) ((conj(a)*(b)).imag())
#define normalize(v) ((v)/length(v))
#define rotate(p,about,theta) ((p-about)*exp(point(0,theta))+about)
#define pointEqu(a,b) (comp(a.X,b.X)==0 && comp(a.Y,b.Y)==0)

typedef stringstream ss;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
typedef vector<string> vs;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vii;
typedef long double ld;
typedef complex<double> point;
typedef pair<point, point> segment;
typedef pair<double, point> circle;
typedef vector<point> polygon;

const int oo = (int) 1e9;
const double PI = 2 * acos(0.0);
const double eps = 1e-9;

ll board1[1000009], board2[1000009];

ll T;
ll N, M;
ll x1, x2, a1, a2, b1, b2, c1, c2;
ll r1, r2;

int main() {
#ifndef ONLINE_JUDGE
	freopen("a.txt", "rt", stdin);
	freopen("b.txt", "wt", stdout);
#endif
	cin >> T;
	rep2(t,1,T+1)
	{
		cerr << t << " of " << T << endl;
		cin >> N >> M;
		cin >> x1 >> a1 >> b1 >> c1 >> r1;
		cin >> x2 >> a2 >> b2 >> c2 >> r2;
		board1[0] = x1;
		board2[0] = x2;
		rep2(i,1,max(N,M))
		{
			if (i < N)
				board1[i] = (a1 * board1[(i - 1) % N] + b1 * board2[(i - 1) % M]
						+ c1) % r1;
			if (i < M)
				board2[i] = (a2 * board1[(i - 1) % N] + b2 * board2[(i - 1) % M]
						+ c2) % r2;
		}
		ll ret = 0;
		set<ll> in1, in2, notin1, notin2;
		ll i1 = 0, i2 = 0;
		while (i1 < N && i2 < M) {
			in1.insert(board1[i1]);
			in2.insert(board2[i2]);
			if (!in1.count(board2[i2]))
				notin1.insert(board2[i2]);
			if (!in2.count(board1[i1]))
				notin2.insert(board1[i1]);
			i1++;
			i2++;
			while (1) {
				while (i1 < N && !notin1.empty()) {
					in1.insert(board1[i1]);
					notin1.erase(board1[i1]);
					if (!in2.count(board1[i1]))
						notin2.insert(board1[i1]);
					i1++;
				}
				if (!notin1.empty())
					break;
				while (i2 < M && !notin2.empty()) {
					in2.insert(board2[i2]);
					notin2.erase(board2[i2]);
					if (!in1.count(board2[i2]))
						notin1.insert(board2[i2]);
					i2++;
				}
				if (!notin2.empty())
					break;
				if (notin1.empty() && notin2.empty())
					break;
			}
			if (notin1.empty() && notin2.empty()) {
				ll cnt1 = 1, cnt2 = 1;
				while (i1 < N && in1.count(board1[i1])) {
					cnt1++;
					i1++;
				}
				while (i2 < M && in2.count(board2[i2])) {
					cnt2++;
					i2++;
				}
				ret += cnt1 * cnt2;
			}
		}
		cout << "Case #" << t << ": " << ret << endl;
	}
	return 0;
}
