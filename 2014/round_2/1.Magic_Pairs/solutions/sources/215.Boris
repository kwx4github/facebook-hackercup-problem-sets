#include <iostream>
#include <cstdio>
#include <map>

using namespace std;

int n, m;
long long a[1000005];
long long b[1000005];
map<long long, bool> used1;
map<long long, bool> used2;

int main() {
    int tests; scanf("%d", &tests);
    for (int test_id = 1; test_id <= tests; ++test_id) {
        long long x1, a1, b1, c1, r1;
        long long x2, a2, b2, c2, r2;
        cin >> n >> m;
        cin >> x1 >> a1 >> b1 >> c1 >> r1;
        cin >> x2 >> a2 >> b2 >> c2 >> r2;
        a[0] = x1;
        b[0] = x2;
        for (int i = 1; i < max(n, m); ++i) {
            a[i] = (a1 * a[(i - 1) % n] + b1 * b[(i - 1) % m] + c1) % r1;
            b[i] = (a2 * a[(i - 1) % n] + b2 * b[(i - 1) % m] + c2) % r2;
        }
        int p1 = 0;
        int p2 = 0;
        used1.clear();
        used2.clear();
        long long res = 0;
        while (p1 < n || p2 < m) {
            int i = p1 + 1;
            int j = p2;
            if (p1 == n) {
                i = p1;
                j = p2 + 1;
            }
            while (p1 < i || p2 < j) {
                if (p1 < i) {
                    used1[a[p1]] = true;
                    while (!used2.count(a[p1]) && j < m) {
                        used2[b[j++]] = true;
                    }
                    if (!used2.count(a[p1])) goto result;
                    ++p1;
                }
                if (p2 < j) {
                    used2[b[p2]] = true;
                    while (!used1.count(b[p2]) && i < n) {
                        used1[a[i++]] = true;
                    }
                    if (!used1.count(b[p2])) goto result;
                    ++p2;
                }
            }
            long long cnt1 = 1;
            long long cnt2 = 1;
            while (i < n && used1.count(a[i])) i++, cnt1++;
            while (j < m && used2.count(b[j])) j++, cnt2++;
            p1 = i;
            p2 = j;
            res += cnt1 * cnt2;
        }
        result:
        cout << "Case #" << test_id << ": " << res << endl;
    }
    return 0;
}
