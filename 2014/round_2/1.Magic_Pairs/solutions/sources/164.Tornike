/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//#pragma comment(linker,"/STACK:256000000")
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>

#define EPS 0.000000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF 1000000500ll
#define mp make_pair
#define pb push_back
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int,int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector <int>
#define DID (long long)
#define ll long long
#define AL(a) (a).begin(),(a).end()
#define INFF DID INF*INF


using namespace std;

const int T=1e6 + 5;

int Board1[T],Board2[T];
map <int,int> mapp;
set <int> sa,sb;
int la,lb;
pair <int,int> A[T],B[T];


ll solve(){

    ll N,M,a1,x1,b1,c1,r1,a2,x2,b2,c2,r2;
    int i;

    cin>>N>>M;
    cin>>x1>>a1>>b1>>c1>>r1;
    cin>>x2>>a2>>b2>>c2>>r2;

    Board1[0] = x1;
    Board2[0] = x2;
    for (i=1;i<max(N,M);i++){
        Board1[i] = (DID a1 * Board1[(i-1) % N] + DID b1 * Board2[(i-1) % M] + c1) % r1;
        Board2[i] = (DID a2 * Board1[(i-1) % N] + DID b2 * Board2[(i-1) % M] + c2) % r2;
    }

    la=lb=0;

    mapp.clear();

    for (i=0;i<N;i++){
        if (mapp[Board1[i]]) continue;
        mapp[Board1[i]]=1;
        A[la++]=mp(Board1[i],i);
    }

    mapp.clear();

    for(i=0;i<M;i++){
        if (mapp[Board2[i]]) continue;
        mapp[Board2[i]]=1;
        B[lb++]=mp(Board2[i],i);
    }

    A[la].se=N;
    B[lb].se=M;

    sa.clear();
    sb.clear();

    ll ans=0;

    for (i=0;i<min(la,lb);i++){
        if (sb.find(A[i].fi)!=sb.end())
            sb.erase(A[i].fi);
            else
            sa.insert(A[i].fi);

        if (sa.find(B[i].fi)!=sa.end())
            sa.erase(B[i].fi);
            else
            sb.insert(B[i].fi);

        if (sa.empty() && sb.empty()){
            ans+=DID (A[i+1].se-A[i].se)*(B[i+1].se-B[i].se);
        }
    }

    return ans;
}

main(){
    #ifndef ONLINE_JUDGE
            freopen("text.in","r",stdin); freopen("text.out","w",stdout);
    #endif

    int tests;
    cin>>tests;

    for (int t=1;t<=tests;t++){
        cout<<"Case #"<<t<<": "<<solve()<<endl;
    }

}
