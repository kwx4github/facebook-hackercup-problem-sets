package fhc14.r2;

import java.io.File;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class A {
	Scanner in;
	PrintWriter out;
	String DATE = new SimpleDateFormat("HHmmss").format(new Date());
	String BASE = "X:\\facebook\\";
	String INPATH = BASE + "_magic_pairs.txt";
	String OUTPATH = BASE + A.class.getSimpleName() + "-" + DATE + ".txt";
	String INPUT = "";
	
	
	void solve()
	{
		int T = ni();
		for(int cas = 1;cas <= T;cas++){
			out.print("Case #" + cas + ": ");
			int n = ni(), m = ni();
			int x1 = ni(), a1 = ni(), b1 = ni(), c1 = ni(), r1 = ni();
			int x2 = ni(), a2 = ni(), b2 = ni(), c2 = ni(), r2 = ni();
			long[] bo1 = new long[n];
			long[] bo2 = new long[m];
			bo1[0] = x1; bo2[0] = x2;
			for(int i = 1;i < n || i < m;i++){
				if(i < n)bo1[i] = (a1 * bo1[(i-1)%n] + b1 * bo2[(i-1)%m] + c1) % r1;
				if(i < m)bo2[i] = (a2 * bo1[(i-1)%n] + b2 * bo2[(i-1)%m] + c2) % r2;
			}
			
			Set<Long> d1 = new HashSet<Long>();
			Set<Long> d2 = new HashSet<Long>();
			int p = 0;
			long ret = 0;
			for(int i = 0;i < n;){
				if(d1.contains(bo1[i])){
					i++;
				}else{
					d1.add(bo1[i]);
					int j = i;
					while(j < n && d1.contains(bo1[j]))j++;
					while(p < m && !d2.contains(bo1[i])){
						d2.add(bo2[p++]);
					}
//					tr(i, j, p, d1, d2);
					if(!d2.contains(bo1[i])){
						break;
					}else if(d2.size() == d1.size()){
						int q = p;
						while(q < m && d2.contains(bo2[q]))q++;
//						tr(i, j, p, q, d1, d2);
						ret += (long)(q-p+1)*(j-i);
						p = q;
					}
					i = j;
				}
			}
			
			out.println(ret);
		}
	}
	
	void run() throws Exception
	{
		in = INPUT.isEmpty() ? new Scanner(new File(INPATH)) : new Scanner(INPUT);
		out = INPUT.isEmpty() ? new PrintWriter(new File(OUTPATH)) : new PrintWriter(System.out);
		solve();
		out.flush();
	}
	
	public static void main(String[] args) throws Exception
	{
		new A().run();
	}
	
	int ni() { return Integer.parseInt(in.next()); }
	void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }
}
