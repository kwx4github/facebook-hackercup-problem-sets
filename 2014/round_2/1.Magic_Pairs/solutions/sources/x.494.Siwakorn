//
// magic.cpp
//
// Siwakorn Srisakaokul - ping128
// Written on Saturday, 14 December 2013.
//

#include <cstdio>
#include <iostream>
#include <sstream>
#include <cstdlib>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <algorithm>
#include <map>
#include <ctype.h>
#include <string.h>

#include <assert.h>

using namespace std;

typedef long long LL;
typedef pair<int, int> PII;
typedef pair<PII, int> PII2;

#define MAXN 1000005

int N, M;
LL x1, x2, a1, a2, b1, b2, c1, c2, r1, r2;

LL in1[MAXN];
LL in2[MAXN];
LL temp[MAXN];
bool moves[MAXN];

void solve(){
    cin >> N >> M;
    cin >> x1 >> a1 >> b1 >> c1 >> r1;
    cin >> x2 >> a2 >> b2 >> c2 >> r2;
    in1[0] = x1;
    in2[0] = x2;
    for(int i = 1; i < max(N, M); i++ ){
        if(i < N)
            in1[i] = (a1 * in1[(i-1) % N] + b1 * in2[(i-1) % M] + c1) % r1;
        if(i < M)
            in2[i] = (a2 * in1[(i-1) % N] + b2 * in2[(i-1) % M] + c2) % r2;
    }
    for(int i = 0; i < M; i++ ) moves[i] = false;
    int n2 = 0;
    set<LL> s;
    map<LL, LL> cnt;
    map<LL, int> id;
    for(int i = 0; i < M; i++ ){
        if(s.find(in2[i]) == s.end()){
            id[in2[i]] = n2;
            temp[n2++] = in2[i];
            s.insert(in2[i]);
        }
        cnt[n2 - 1]++;
    }

    LL ans = 0;
    set<LL>s2;
    int pre = -1;
/*
    for(int i = 0; i < N; i++ ) cout << in1[i] << " ";
    cout << endl;
    for(int i = 0; i < M; i++ ) cout << in2[i] << " ";
    cout << endl;
*/
    int maxx = -1;
    for(int i = 0; i < N; i++ ){
        if(s2.find(in1[i]) != s2.end()){
            if(pre >= maxx)
                ans += cnt[pre];
        } else {
            s2.insert(in1[i]);
            if(id.find(in1[i]) == id.end()) break;
            else {
                moves[id[in1[i]]] = true;
                maxx = max(maxx, id[in1[i]]);
                while(moves[pre + 1]) pre++;
                if(pre >= maxx)
                    ans += cnt[pre];
            }
//            cout << i << "D" << id[in1[i]] << endl;
        }
//        cout << i << " " << ans << "|" << pre << " " << maxx << endl;
    }
    cout << ans << endl;
}

int main() {
    int test;
    scanf("%d", &test);
    for(int tt = 0; tt < test; tt++ ){
        printf("Case #%d: ", tt + 1);
        solve();
    }
    return 0;
}
