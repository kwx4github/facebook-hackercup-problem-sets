#include<bits/stdc++.h>
using namespace std;
typedef long long int LL;

LL inp1[1000005];
LL inp2[1000005];

int main()
{
	LL t,n,m;
	LL x1, x2, a1, a2, b1, b2, c1, c2,r1,r2 ;
	cin>>t;
	int i;
	for(int it=1;it<=t;it++)
	{
		cin>>n>>m;
		cin>>x1>>a1>>b1>>c1>>r1;	
		cin>>x2>>a2>>b2>>c2>>r2;
		inp1[0]=x1;
		inp2[0]=x2;
		for(i=1;i<max(n,m);i++)
		{
			inp1[i]=(a1*inp1[(i-1)%n]+b1*inp2[(i-1)%m]+c1)%r1;
			inp2[i]=(a2*inp1[(i-1)%n]+b2*inp2[(i-1)%m]+c2)%r2;
		}
		LL counta=0,countb=0,p1=0,p2=0,ans=0;
		LL diff=0;
		map<int,int> mp;
		while(p1<n||p2<m)
		{
			if(counta<=countb && (p1<n))									// take new from A
			{
				while(p1<n)
				{
					if(mp[inp1[p1]]==-1){counta++;mp[inp1[p1]]=2;diff-=1;p1++;break;}
					else if(mp[inp1[p1]]==0){counta++;mp[inp1[p1]]=1;diff++;p1++;break;}	
					p1++;
				}
				if(diff!=0){continue;}
			}
			else if((p2<m))												// take new from B
			{
				while(p2<m)
				{
					if(mp[inp2[p2]]==1){countb++;mp[inp2[p2]]=2;diff-=1;p2++;break;}
					else if(mp[inp2[p2]]==0){countb++;mp[inp2[p2]]=-1;diff++;p2++;break;}	
					p2++;
				}
				if(diff!=0){continue;}
			}
			if(diff==0)
			{
				LL ca=0,cb=0;
				while(p1<n&&mp[inp1[p1]]==2)ca++,p1++;
				while(p2<m&&mp[inp2[p2]]==2)cb++,p2++;
				ans+=(ca+1)*(cb+1);
			}
			if(p1>=n-1&&p2>=m-1&&(p1!=p2))break;
		}
		printf("Case #%d: %lld\n",it,ans);
	}	
	return 0;
}
