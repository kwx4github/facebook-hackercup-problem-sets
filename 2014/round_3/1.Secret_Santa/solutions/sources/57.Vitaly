#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <cmath>
#include <memory.h>
using namespace std;
typedef long long ll;

const int N = 111;

ll mod = 1e9+7;

ll D[N][N];

ll inv[N], f[N], fi[N];

void pre(int n){
    f[0] = 1;
    for(int i=1;i<=n;++i) f[i] = f[i-1]*i%mod;
    inv[1] = 1;
    for(int i=2;i<=n;++i) inv[i] = (mod-mod/i)*inv[mod%i]%mod;
    fi[0] = 1;
    for(int i=1;i<=n;++i) fi[i] = fi[i-1]*inv[i]%mod;
}

ll C(int n, int k){
    return f[n]*fi[k]%mod*fi[n-k]%mod;
}


void solve(int test){
    
    int n, all=0;
    cin>>n;
    vector<int> s(n+1);
    for(int i=1;i<=n;++i){
        cin>>s[i];
        all+=s[i];
    }
    
    pre(all);
    
    memset(D,0,sizeof(D));
    
    for(int i=0;i<=n;++i) D[i][0] = 1;
    
    for(int i=1;i<=n;++i)
    for(int j=1;j<=all;++j){
        D[i][j] = D[i-1][j];
        
        
        for(int k=1;k<=s[i] && k<=j;++k){
            ll res = C(s[i], k);
            for(int h=0;h<k;++h) res=res*(s[i]-h)%mod;
            res = res*D[i-1][j-k]%mod;
            D[i][j] = (D[i][j]+res)%mod;
        }
        
    }
    
    ll ans = 0;
    
    for(int i=0;i<=all;++i){
        ll res = f[all-i]*D[n][i]%mod;
        
        if(i&1) ans = (ans-res+mod)%mod;
        else ans = (ans+res)%mod;
    }
    
    
    cout<<"Case #"<<test<<": ";
    
    cout<<ans;
    
    cout<<endl;
}

int main(){
    freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    
    int tn;
    cin>>tn;
    for(int ti=1;ti<=tn;++ti){
        cerr<<ti<<"..."<<endl;
        solve(ti);
        cerr<<ti<<" ok."<<endl;
    }
    
    
    return 0;
}

