#include <iostream>
#include <string>
#include <set>
#include <map>
#include <cstdio>
#include <bitset>
#include <vector>
#include <cmath>
#include <queue>
#include <algorithm>
#include <ctime>
#include <cstring>
#pragma comment(linker, "/STACK:256000000")

using namespace std;

const int maxN = 120;
const long long mod = 1000000007;

long long a[maxN];
long long cnk[maxN][maxN];
long long f[maxN];

long long d[maxN][maxN];

void solve(int tcase) {
  printf("Case #%d: ", tcase);
  int k;
  cin >> k;

  for (int i = 0; i < k; ++i) {
    cin >> a[i];
  }

  for (int i = 0; i < maxN; ++i) {
    for (int j = 0; j < maxN; ++j) {
      d[i][j] = 0;
    }
  }

  d[0][0] = 1;

  for (int i = 0; i < k; ++i) {
    for (int j = 0; j < maxN; ++j) {
      for (int take = 0; take <= a[i] && take <= j; ++take) {
        for (int take2 = 0; take2 <= a[i] && take2 <= j; ++take2) {
          long long ways = cnk[j][take] * cnk[a[i]][take];
          ways %= mod;
          ways *= f[take];
          ways %= mod;
          ways *= cnk[j][take2];
          ways %= mod;
          ways *= cnk[a[i]][take2];
          ways %= mod;
          ways *= f[take2];
          ways %= mod;
          ways *= d[i][j];
          ways %= mod;
          d[i + 1][j + a[i] - take - take2] += ways;
          d[i + 1][j + a[i] - take - take2] %= mod;
        }        
      }
    }
  }
  cout << d[k][0] << endl;
}

int main() {
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);

  f[0] = 1LL;
  for (int i = 1; i < maxN; ++i) {
    f[i] = (f[i - 1] * i) % mod;
  }
  cnk[0][0] = 1LL;
  for (int i = 1; i < maxN; ++i) {
    cnk[i][0] = 1;
    for (int j = 1; j <= i; ++j) {
      cnk[i][j] = cnk[i - 1][j] + cnk[i - 1][j - 1];
      cnk[i][j] %= mod;
    }
  }

  int t;
  scanf("%d", &t);

  for (int i = 0; i < t; ++i) {
    cerr << i << endl;
    solve(i + 1);
  }

  return 0;
}
