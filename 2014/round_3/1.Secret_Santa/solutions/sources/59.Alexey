program secretSanta;

const	md =	1000000007;

var	t, tt, ans, n, i, j, k, sum, i41, i42, i43, i44, i31, i32, i33, i21, i22, i11, iSum: longInt;
	fact, phi, G: array[ 0..200 ] of int64;
	f: array[ 1..4, 1..4, 0..200 ] of int64;
	c: array[ 0..200, 0..200 ] of longInt;
	cnt: array[ 1..4 ] of longInt;
	c41, c42, c43, c44, c31, c32, c33, c21, c22, c11: int64;

begin
	fact[0] := 1;
	for i := 1 to 200 do
		fact[i] := ( i * fact[i-1] ) mod md;
		
	for i := 1 to 4 do
		for j := 1 to i do
		begin
			f[i][j][0] := 1;
			f[i][j][1] := ( fact[i] * fact[i] ) div ( fact[i-j] * fact[i-j] * fact[j] );
			for k := 2 to 200 do
				f[i][j][k] := ( f[i][j][k-1] * f[i][j][1] ) mod md;
		end;
			
	c[0][0] := 1;
	for i := 1 to 200 do
	begin
		c[i][0] := 1;
		for j := 1 to i do
			c[i][j] := ( c[i-1][j-1] + c[i-1][j] ) mod md;
	end;

	readln( t );
	for tt := 1 to t do
	begin
		fillchar( cnt, sizeOf(cnt), 0 );
		fillchar( phi, sizeOf(phi), 0 );

		readln( n );

		sum := 0;
		for i := 1 to n do
		begin
			read( j );
			inc( cnt[j] );
			inc( sum, j );
		end;
		
		iSum := 0;
		ans := 0;
		for i41 := 0 to cnt[4] do
		begin
			c41 := ( c[ cnt[4] ][i41] * f[4][1][i41] ) mod md;
			inc( iSum, i41 );
			for i42 := 0 to cnt[4] - i41 do
			begin
				c42 := ( ( ( c41 * c[ cnt[4] - i41 ][i42] ) mod md ) * f[4][2][i42] ) mod md;
				inc( iSum, 2 * i42 );
				for i43 := 0 to cnt[4] - i41 - i42 do
				begin
					c43 := ( ( ( c42 * c[ cnt[4] - i41 - i42 ][i43] ) mod md ) * f[4][3][i43] ) mod md;
					inc( iSum, 3 * i43 );
					for i44 := 0 to cnt[4] - i41 - i42 - i43 do
					begin
						c44 := ( ( ( c43 * c[ cnt[4] - i41 - i42 - i43 ][i44] ) mod md ) * f[4][4][i44] ) mod md;
						inc( iSum, 4 * i44 );
						for i31 := 0 to cnt[3] do
						begin
							c31 := ( ( ( c44 * c[ cnt[3] ][i31] ) mod md ) * f[3][1][i31] ) mod md;
							inc( iSum, i31 );
							for i32 := 0 to cnt[3] - i31 do
							begin
								c32 := ( ( ( c31 * c[ cnt[3] - i31 ][i32] ) mod md ) * f[3][2][i32] ) mod md;
								inc( iSum, 2 * i32 );
								for i33 := 0 to cnt[3] - i31 - i32 do
								begin
									c33 := ( ( ( c32 * c[ cnt[3] - i31 - i32 ][i33] ) mod md ) * f[3][3][i33] ) mod md;
									inc( iSum, 3 * i33 );
									for i21 := 0 to cnt[2] do
									begin
										c21 := ( ( ( c33 * c[ cnt[2] ][i21] ) mod md ) * f[2][1][i21] ) mod md;
										inc( iSum, i21 );
										for i22 := 0 to cnt[2] - i21 do
										begin
											c22 := ( ( ( c21 * c[ cnt[2] - i21 ][i22] ) mod md ) * f[2][2][i22] ) mod md;
											inc( iSum, 2 * i22 );
											for i11 := 0 to cnt[1] do
											begin
												c11 := ( ( ( c22 * c[ cnt[1] ][i11] ) mod md ) * f[1][1][i11] ) mod md;
												inc( iSum, i11 );
												
												phi[iSum] := ( phi[iSum] + c11 ) mod md;
												
												dec( iSum, i11 );
											end;
											
											dec( iSum, 2 * i22 );
										end;
										
										dec( iSum, i21 );
									end;
									
									dec( iSum, 3 * i33 );
								end;
								
								dec( iSum, 2 * i32 );
							end;
							
							dec( iSum, i31 );
						end;
						
						dec( iSum, 4 * i44 );
					end;
					
					dec( iSum, 3 * i43 );
				end;
				
				dec( iSum, 2 * i42 );
			end;
			
			dec( iSum, i41 );
		end;

		for i := sum downto 0 do
		begin
			G[i] := ( phi[i] * fact[sum - i] ) mod md;
			
			for j := i + 1 to sum do
				G[i] := ( G[i] - ( ( G[j] * c[j][i] ) mod md ) + md ) mod md;
		end;
		
		ans := G[0];
	
		writeln( 'Case #', tt, ': ', ans );
	end;
end.
