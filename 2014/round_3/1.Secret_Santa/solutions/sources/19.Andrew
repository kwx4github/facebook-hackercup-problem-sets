import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.*;

public class A {

    final static long MOD = 1_000_000_007L;

    void run() throws IOException {
        Random rnd = new Random(238947290478L);

        long[][] c = new long[5][5];
        c[0][0] = 1;
        for (int i = 1; i < 5; i++) {
            c[i][0] = 1;
            for (int j = 1; j < 5; j++) {
                c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
            }
        }

        Scanner in = new Scanner(new File("secret_santa.txt"));
        PrintWriter out = new PrintWriter("secret_santa.out");
        int tn = in.nextInt();
        for (int test = 1; test <= tn; test++) {
            long time = System.currentTimeMillis();
            int n = in.nextInt();
            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = in.nextInt();
            }

            long[][] cnt = new long[n + 1][4 * n + 1];
            cnt[0][0] = 1;

            for (int i = 0; i < n; i++) {
                for (int j = 0; j <= 4 * n; j++) {
                    if (cnt[i][j] != 0) {
//                        System.out.println(i + " " + j + " " + cnt[i][j]);
                        for (int prev = 0; prev <= a[i]; prev++) {
                            for (int from = 0; from <= a[i]; from++) {
                                if (prev > j) {
                                    continue;
                                }
                                if (from > j) {
                                    continue;
                                }
                                int nj = j + a[i] - prev - from;
                                if (nj < 0 || nj > 4 * n) {
                                    continue;
                                }

                                long mul = c[a[i]][from] * c[a[i]][prev] % MOD;
                                for (int k = 0; k < prev; k++) {
                                    mul = (mul * (j - k)) % MOD;
                                }
                                for (int k = 0; k < from; k++) {
                                    mul = (mul * (j - k)) % MOD;
                                }

                                cnt[i + 1][nj] = (cnt[i + 1][nj] + mul * cnt[i][j]) % MOD;
                            }
                        }
                    }
                }
            }

            long ans = cnt[n][0];

            System.out.println("Case #" + test + ": " + ans);
            out.println("Case #" + test + ": " + ans);
        }
        out.close();
    }


    public static void main(String[] args) throws IOException {
        new A().run();
    }
}