#include <cstdio>
#include <set>
#include <algorithm>
using namespace std;

#define MOD 1000000007

int K, N[100];

int mul(int a, int b){ return (long long)a*b%MOD; }
void add(int &a, int b){ a+=b; if(a>=MOD) a-=MOD; }

int solve(){
    scanf("%d", &K);
    for(int i=0; i<K; i++)
        scanf("%d", N+i);
    int dp[2][105]={{}};
    auto cur=dp[0];
    auto next=dp[1];
    cur[0]=1;
    int tot=0;
    for(int i=0; i<K; i++){
        for(int j=0; j<=K; j++)
            next[j]=0;
        for(int j=0; j<=K; j++){
            if(cur[j]==0) continue;
            for(int im=0; im<1<<N[i]; im++)
            for(int om=0; om<1<<N[i]; om++){
                int ic=__builtin_popcount(im);
                int oc=__builtin_popcount(om);
                if(ic>j) continue;
                if(N[i]-oc>j) continue;
                int ways=1;
                for(int b=0; b<ic; b++)
                    ways=mul(ways, j-b);
                for(int b=0; b<N[i]-oc; b++)
                    ways=mul(ways, j-b);
                add(next[j-ic+oc], mul(ways, cur[j]));
            }
        }
        swap(cur, next);
        tot+=N[i];
    }
    return cur[0];
}

int main(){
    int T;
    scanf("%d", &T);
    for(int t=1; t<=T; t++){
        printf("Case #%d: %d\n", t, solve());
    }
}
