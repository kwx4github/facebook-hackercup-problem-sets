#pragma comment(linker, "/STACK:10000000")
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE

#include <cassert>
#include <cstdio>
#include <iostream>
#include <sstream>
#include <numeric>
#include <bitset>
#include <vector>
#include <set>
#include <string>
#include <map>
#include <cmath>
#include <algorithm>
#include <queue>
#include <cstdlib>
#include <functional>
#include <cstring>
#include <ctime>
#include <unordered_set>

#define y1 AAA_BBB
#define y0 AAA_AAA

#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sz(v) (int)((v).size())
#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = (int)(a); i <= (int)(b); ++i)
#define for1(i, n) for(int i = 1; i <= (int)(n); ++i)

using namespace std;

typedef long long i64;
typedef unsigned long long u64;
typedef double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
template <class T> T inline sqr(T x) {
    return x * x;
}
const ld pi = 3.1415926535897932384626433832795;
const ld eps = 1e-8;

i64 mod = 1e9 + 7;

const int maxn = 410;
int d[maxn][maxn][maxn];
int q[maxn];
int C[maxn][maxn];
int A[maxn][maxn];

inline void upd(int& x, i64 y)
{
	x = (x + y) % mod;
}

i64 solve()
{
	int n;
	cin >> n;
	int sq = 0;
	forn (i, n) {
		cin >> q[i];
		sq += q[i];
	}
	forn (i, maxn) forn (j, maxn) forn (k, maxn) d[i][j][k] = 0;
	d[0][0][0] = 1;

	for (int i = 0; i < n; i++)
	{
		int cq = q[i];
		for (int j = 0; j <= sq; j++)
			for (int k = 0; k <= sq; k++)
			if (d[i][j][k] != 0)
			{
				forn (out, cq + 1)
					forn (in, cq + 1)
					{
						if (out > k || in > j) continue;
						i64 w = ((C[in][cq] * 1ll * C[out][cq]) % mod);
						w *= ((A[in][j] * 1ll * A[out][k]) % mod);
						w %= mod;
						upd(d[i + 1][j + (cq - out) - in][k + (cq - in) - out], d[i][j][k] * 1ll * w);
					}
			}
	}
	return d[n][0][0];
}

int main() {
	freopen("a.txt", "r", stdin);
	freopen("output.txt","w", stdout);

	for (int i = 0; i < maxn; i++) C[0][i] = 1;
	for (int i = 1; i < maxn; i++)
		for (int j = i; j < maxn; j++) {
			C[i][j] = C[i - 1][j - 1] + C[i][j - 1];
			if (C[i][j] >= mod) C[i][j] -= mod;
		}
	for (int i = 0; i < maxn; i++)
	{
		A[0][i] = 1;
		for (int j = 1; j <= i; j++)
			A[j][i] = (A[j - 1][i] * 1ll * (i - j + 1)) % mod;
	}

	int T;
	cin >> T;
	for1 (t, T)
	{
		cerr << t << endl;
		cout << "Case #" << t << ": " << solve() << endl;
	}
	return 0;
}
