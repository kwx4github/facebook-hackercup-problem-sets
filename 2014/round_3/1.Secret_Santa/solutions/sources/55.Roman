#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility>
#include <fstream>
#include <time.h>
#include "testlib.h"
using namespace std;

#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,value) memset(A,value,sizeof(A))
#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define y0 gfdssdfer
#define y1 wetgwervbwqr

#define distance sgfsdfgs

typedef long long Int;
typedef unsigned int uint;
typedef vector<int> VI;
typedef pair<int,int> PII;

const double PI = acos(-1.0);
const int INF = 1000000000;
const int MAX = 2048;
const int MAX2 = 1000007;
const int MOD = 1000000007;

Int bpow(Int a,int k){
    if (k == 0)
        return 1;
    if (k & 1)
        return (a * bpow(a,k - 1)) % MOD;
    return bpow ( (a * a) % MOD , k / 2);
}

Int fact[107];
Int fact1[107];

Int dp[107][107];

int main()
{
  freopen("in.txt", "r", stdin);
  freopen("out.txt" , "w" , stdout);
    int t;
    cin >> t;
    fact[0] = 1;
    FOR(i,1,107)
        fact[i] = fact[i - 1] * i % MOD;
    FOR(i,0,107)
        fact1[i] = bpow(fact[i] , MOD - 2);


    FOR(tt,0,t){
        printf("Case #%d: " , tt + 1);
        int n;
        cin >> n;
        vector<int> a(n);
        FOR(i,0,n)
            cin >> a[i];
        vector<int> s(n);
        s[0] = a[0];
        FOR(i,1,n)
            s[i] = s[i - 1] + a[i];
        FILL(dp,0);
        dp[0][0] = 1;
        FOR(i,0,n)
            FOR(j,0,107)
                if (dp[i][j]){
                    int M = (i ? s[i - 1] : 0) - j;
                    FOR(k,0,min(a[i], M) + 1)
                        FOR(nex,0,a[i] + 1){
                            Int coef = 1;
                            int N = s[n - 1] - s[i];
                            int p = a[i];
                            int prev = a[i] - nex;
                            if (prev > M)
                                continue;
                            FOR(u,0,prev){
                                coef *= M - u;
                                coef %= MOD;
                            }
                            if (N < M - k + nex)
                                continue;
                            coef *= fact[M];
                            coef %= MOD;
                            coef *= fact[p];
                            coef %= MOD;
                            coef *= fact1[M - k];
                            coef %= MOD;
                            coef *= fact1[k];
                            coef %= MOD;
                            coef *= fact1[p - k];
                            coef %= MOD;

                            coef *= fact[p];
                            coef %= MOD;
                            coef *= fact1[nex];
                            coef %= MOD;
                            coef *= fact1[p - nex];
                            coef %= MOD;

                            dp[i + 1][j + prev + k] += coef * dp[i][j];
                            dp[i + 1][j + prev + k] %= MOD;
                        }

                }
            cout << dp[n][s[n - 1]] << endl;


    }

}
