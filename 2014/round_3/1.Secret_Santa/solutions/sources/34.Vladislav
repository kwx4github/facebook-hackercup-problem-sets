#include <cstdio>
#include <numeric>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <string>
#include <map>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <queue>
#include <sstream>
#include <deque>

using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i = 0; i < (n); i++)
#define re return
#define fi first
#define se second
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x) * (x))
#define sqrt(x) sqrt(abs(x))
#define y0 y3487465
#define y1 y8687969
#define fill(x,y) memset(x,y,sizeof(x))
                         
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef double D;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef vector<vi> vvi;

template<class T> T abs(T x) { re x > 0 ? x : -x; }

const int mod = 1000000000 + 7;

int n;
int m;
int res[101][101];

int x[101];
int cnk[5][5];

int main () {
	for (int i = 0; i <= 4; i++)
		for (int j = 0; j <= i; j++)
			if (i == 0 || j % i == 0)
				cnk[i][j] = 1;
			else
				cnk[i][j] = cnk[i - 1][j] + cnk[i - 1][j - 1];	
	int tt;
	cin >> tt;
	for (int it = 1; it <= tt; it++) {
		scanf ("%d", &n);	
		for (int i = 0; i < n; i++) scanf ("%d", &x[i]);
		memset (res, 0, sizeof (res));
		res[0][0][0] = 1;
		for (int i = 0; i < n; i++)
			for (int a = 0; a <= 100; a++)
				if (res[i][a]) {
					for (int p = 0; p <= a && p <= x[i]; p++) {
						int q = x[i] - p;
						for (int s = 0; s <= a && s <= x[i]; s++) {
							int t = x[i] - s;
							int tmp = res[i][a];
							for (int l = 0; l < p; l++) tmp = ((ll)tmp * (a - l)) % mod;
							for (int l = 0; l < s; l++) tmp = ((ll)tmp * (a - l)) % mod;
							tmp = ((ll)tmp * cnk[x[i]][p]) % mod;
							tmp = ((ll)tmp * cnk[x[i]][s]) % mod;
							res[i + 1][a - p + t] = (res[i + 1][a - p + t] + tmp) % mod;
						}
					}
				}
		cout << "Case #" << it << ": " << res[n][0];
		cout << endl;
		fprintf (stderr, "%d / %d = %.2f | %.2f\n", it, tt, (double)clock () / CLOCKS_PER_SEC, ((double)clock () / it * tt) / CLOCKS_PER_SEC);
	}
	return 0;
}