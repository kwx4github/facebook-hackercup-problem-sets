#include <queue>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <numeric>
typedef long long ll;
using namespace std;
#define F0(i,n) for (i=0;i<n;i++)
#define F1(i,n) for (i=1;i<=n;i++)
#define CL(a,x) memset(x, a, sizeof(x))
#define SZ(s) ((int)s.size())
const double eps = 1e-9;
const int MOD = 1000000007;
typedef pair<int,int> pii;
int i, j, k, m, n, ans, a[1000];

ll C[1005][1005], F[1005];

ll d[1005][1005];

void add(ll& x, ll y)
{
	x = (x + y) % MOD;
}

void solve()
{
	m = 0;
	F0(i, n) m += a[i];
	CL(0, d);
	d[0][0] = 1;

	for (i = 0; i < n; i++)
	{
		for (j = 0; j <= m; j++) if (d[i][j])
		{
			for (int b = 0; b <= a[i] && b <= j; b++)
			for (int c = 0; c <= a[i] && c <= j; c++)
			{
				ll mult = C[j][b] * F[b] % MOD * C[j][c] % MOD * F[c] % MOD * C[a[i]][b] % MOD * C[a[i]][c] % MOD;
				add(d[i + 1][j + a[i] - b - c], d[i][j] * mult);
			}
		}
	}
	ans = d[n][0];
}

int main() {
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);

	for (i = 0; i <= 1000; i++)
	{
		if (i == 0) F[i] = 1; else F[i] = (F[i - 1] * i) % MOD;
		C[i][0] = C[i][i] = 1;
		for (j = 1; j < i; j++)
			C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % MOD;
	}

	int tn; cin >> tn; for (int ti = 1; ti <= tn; ti++)
	{
		cin >> n;
		F0(i, n) cin >> a[i];
		solve();
		printf("Case #%d: %d\n", ti, ans); 
	}
	//while(1);
	return 0;
} 
