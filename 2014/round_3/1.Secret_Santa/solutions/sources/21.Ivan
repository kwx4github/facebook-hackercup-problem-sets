package contest;

import java.util.*;
import java.io.*;
import java.math.*;

public class SecretSanta {
    final static String PROBLEM_NAME = "secret";
    final static String WORK_DIR = "D:\\HackerCup\\" + PROBLEM_NAME + "\\";

    final long MOD = 1000000007;

    int len;
    long[] cur, next;

    int[] p;
    boolean[] used;

    void go(int pos) {
        if (pos == len) {
            int unk = 0;
            for (int x : p) if (x == -1) unk++;
            for (int i=0; i + unk < cur.length; i++) {
                next[i + unk] += cur[i];
                if (next[i + unk] >= MOD) next[i + unk] -= MOD;
            }
            return;
        }

        p[pos] = -1;
        go(pos+1);
        for (p[pos] = 0; p[pos] < len; p[pos]++) {
            if (!used[p[pos]]) {
                used[p[pos]] = true;
                go(pos+1);
                used[p[pos]] = false;
            }
        }
    }

    void solve(Scanner sc, PrintWriter pw) {
        int K = sc.nextInt();
        int sum = 0;
        int[] n = new int[K];
        for (int i=0; i<K; i++) {
            n[i] = sc.nextInt();
            sum += n[i];
        }

        cur = new long[sum+1];
        cur[0] = 1;
        for (int elm : n) {
            this.len = elm;
            this.p = new int[len];
            this.used = new boolean[len];
            this.next = new long[sum+1];

            go(0);

            cur = next;
        }

        long ans = 0;
        for (int unk = sum; unk >= 0; unk--) {
            long tmp = cur[unk];
            for (long i=1; i <= unk; i++) {
                tmp = (tmp * i) % MOD;
            }
            if (sum % 2 == unk % 2) {
                ans += tmp;
            } else {
                ans -= tmp;
            }
        }

        ans = (ans % MOD + MOD) % MOD;
        pw.println(ans);
    }

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(new FileReader(WORK_DIR + "input.txt"));
        PrintWriter pw = new PrintWriter(new FileWriter(WORK_DIR + "output.txt"));
        int caseCnt = sc.nextInt();
        for (int caseNum=0; caseNum<caseCnt; caseNum++) {
            System.out.println("Processing test case " + (caseNum + 1));
            pw.print("Case #" + (caseNum+1) + ": ");
            new SecretSanta().solve(sc, pw);
        }
        pw.flush();
        pw.close();
        sc.close();
    }
}
