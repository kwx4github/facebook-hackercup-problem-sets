#pragma comment(linker, "/STACK:60000000")
#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <ctime>
#include <cstring>
#include <cassert>
#include <sstream>
#include <iomanip>
#include <complex>
#include <queue>
#include <functional>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define last(a) int(a.size() - 1)
#define all(a) a.begin(), a.end()
#define seta(a,x) memset (a, x, sizeof (a))
#define I (int)
#define next NEXTHUI
#define prev PREVHUI
#define y1 Y1HUI

typedef long long int64;
typedef pair <int, int> pii;
typedef long double ldb;

const long double eps = 1e-9;
const int inf = (1 << 30) - 1;
const int64 inf64 = ((int64)1 << 62) - 1;
const long double pi = 3.1415926535897932384626433832795;

template <class T> T sqr (T x) {return x * x;}

const int64 P = 1e9 + 7;

int s[5];
int k;
int t[101][51][34][26][5][5][2];

int mult(int a, int b) {
	return (int64)a * (int64)b % P;
}

int add(int a, int b) {
	int res = a + b;
	if (res >= P) res -= P;
	return res;
}

int go(int s1, int s2, int s3, int s4, int n1, int n2, int tp) {
	int& res = t[s1][s2][s3][s4][n1][n2][tp];
	if (res != -1) return res;
	res = 0;
	if (n1 == 0) {
		if (s1 > 0) {
			s1--;
			n1 = 1;
		} else if (s2 > 0) {
			s2--;
			n1 = 2;
		} else if (s3 > 0) {
			s3--;
			n1 = 3;
		} else {
			s4--;
			n1 = 4;
		}
		
		if (s1 > 0)
			res = add(res, mult(go(s1-1, s2, s3, s4, n1, 1, 1), s1 * 1));
		if (s2 > 0)
			res = add(res, mult(go(s1, s2-1, s3, s4, n1, 2, 1), s2 * 2));
		if (s3 > 0)
			res = add(res, mult(go(s1, s2, s3-1, s4, n1, 3, 1), s3 * 3));
		if (s4 > 0)
			res = add(res, mult(go(s1, s2, s3, s4-1, n1, 4, 1), s4 * 4));
	} else {
		int S1 = s1, S2 = s2, S3 = s3, S4 = s4;
		if (tp == 1) {
			if (n2 == 2) {
				s1++;
			} else if (n2 == 3) {
				s2++;
			} else if (n2 == 4) {
				s3++;
			}
		}

		if (tp == 1 && n1 > 1) {
			res = add(res, mult(go(s1, s2, s3, s4, n1-1, n1-1, 0), n1-1));
		}

		if (S1 > 0)
			res = add(res, mult(go(s1-1, s2, s3, s4, n1, 1, 1), S1 * 1));
		if (S2 > 0)
			res = add(res, mult(go(s1, s2-1, s3, s4, n1, 2, 1), S2 * 2));
		if (S3 > 0)
			res = add(res, mult(go(s1, s2, s3-1, s4, n1, 3, 1), S3 * 3));
		if (S4 > 0)
			res = add(res, mult(go(s1, s2, s3, s4-1, n1, 4, 1), S4 * 4));

		if (tp == 1) {
			if (n1 == 2) {
				s1++;
			} else if (n1 == 3) {
				s2++;
			} else if (n1 == 4) {
				s3++;
			}
			res = add(res, mult(go(s1, s2, s3, s4, 0, 0, 0), 1));
		}
	}
	return res;
}

int64 solve() {
	seta(s, 0);
	cin >> k;
	forn(i, k) {
		int x;
		cin >> x;
		s[x]++;
	}
	return go(s[1], s[2], s[3], s[4], 0, 0, 0);
}

int main ()
{
	seta(t, 255);
	t[0][0][0][0][0][0][0] = 1;
//	freopen ("input.txt", "r", stdin);
//	freopen ("output.txt", "w", stdout);
	int tt;
	cin >> tt;
	forn(ii, tt) {
		printf("Case #%d: %I64d\n", ii + 1, solve());
	}
	return 0;
}
