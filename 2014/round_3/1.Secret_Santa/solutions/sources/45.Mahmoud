import java.io.File;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class A3 {
	static long[][] C;
	static int MOD = 1000000007;
	static int[] arr;
	static long[] fact = { 1, 1, 2, 3 * 2, 4 * 3 * 2 };
	static long[][] dp;

	public static long f(int i, int in_need, int out_need) throws Exception {
		if (in_need != out_need)
			throw new Exception();
		if (i == arr.length)
			return (in_need == 0 && out_need == 0) ? 1 : 0;
		if (dp[i][in_need] != -1) 
			return dp[i][in_need];
		long result = 0;
		long temp;
		for (int x = 0; x <= arr[i] && x <= in_need; x++)
			for (int y = 0; y <= arr[i] && y <= out_need; y++) {
				temp = (C[in_need][x] * C[arr[i]][x] * fact[x]) % MOD;
				temp = (temp * ((C[out_need][y] * C[arr[i]][y] * fact[y]) % MOD))
						% MOD;
				temp = (temp * f(i + 1, in_need + arr[i] - x - y, out_need
						+ arr[i] - x - y))
						% MOD;
				result = (result + temp) % MOD;
			}
		return dp[i][in_need] = result;
	}

	public static void main(String[] args) throws Exception {
		C = new long[105][105];
		C[0][0] = 1;
		for (int i = 1; i < C.length; i++) {
			C[i][0] = 1;
			for (int j = 1; j < C.length; j++)
				C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % MOD;
		}
		Scanner in = new Scanner(new File("A.in"));
		PrintWriter out = new PrintWriter("A.out");
		int tc = in.nextInt();
		int cc = 1;
		while (tc-- > 0) {
			int sz = in.nextInt();
			arr = new int[sz];
			dp = new long[sz + 1][105];
			for (long[] a : dp)
				Arrays.fill(a, -1);
			for (int i = 0; i < arr.length; i++)
				arr[i] = in.nextInt();
			System.out.printf("Case #%d: %d\n", cc, f(0, 0, 0));
			out.printf("Case #%d: %d\n", cc, f(0, 0, 0));
			cc++;
		}
		out.close();
	}
}
