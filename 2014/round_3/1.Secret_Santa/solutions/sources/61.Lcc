#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <map>
#include <vector>
#include <set>
#include <cmath>
#include <cstring>
#include <string>
using namespace std;
typedef long long LL;

const int maxn = 100 + 1;
LL mod = 1000000007;
LL f[maxn][5], g[maxn][5];
int a[maxn];
int n;
void add(LL &a, LL b){
	a = (a+b)%mod;
}

int main(){
	int T, cas = 0;
	for (cin>>T; T--;){
		cin>>n;
		for (int i = 0; i<n; i++){
			cin>>a[i];
		}
		memset(f, 0, sizeof(f));
		f[0][0] = 1;
		int tot = 0;
		for (int l = 0; l<n; l++){
			for (int r = 1; r<=a[l]; r++){
				memset(g, 0, sizeof(g));
				for (int j = 0; j<=tot; j++){
					for (int k = 0; k<r && k<=j; k++){
						if (j){
							add(g[j-1][k], (j-k)*f[j][k]%mod);
						}
						add(g[j+1][k+1], f[j][k]*(k+1)%mod);
						add(g[j+1][k+1], f[j][k]*(r-1-k)*2%mod);
						add(g[j][k], f[j][k]*(tot-j-2*(r-k-1))%mod);
					}
				}
				memcpy(f, g, sizeof(f));
				tot++;
			}
			memset(g, 0, sizeof(g));
			for (int j = 0; j<=tot; j++){
				for (int k = 0; k<=a[l]; k++){
					add(g[j][0], f[j][k]);
				}
			}
			memcpy(f, g, sizeof(f));
		}
		cout<<"Case #"<<++cas<<": "<<f[0][0]<<endl;
	}
	return 0;
}




