#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <set>
#include <map>
#include <numeric>
#include <queue>

using namespace std;

int K;
int A[110];

#define MOD 1000000007

int madd(int x, int y) {
  return (x + y) % MOD;
}

int mmul(int x, int y) {
  return (1ll * x * y) % MOD;
}

int memo[110][510];

int solve(int x, int num) {
  if(x == K) return !num ? 1 : 0;

  int& result = memo[x][num];
  if(result != -1) return result;

  result = 0;
  for(int i = 0; i < 1 << A[x]; i++) {
    for(int j = 0; j < 1 << A[x]; j++) {
      int insz = __builtin_popcount(i);
      if(insz > num) {
        continue;
      }

      int outsz = __builtin_popcount(j);
      if(outsz > num) {
        continue;
      }

      int mul = 1;
      for(int k = 0; k < insz; k++) mul = mmul(mul, num - k);
      for(int k = 0; k < outsz; k++) mul = mmul(mul, num - k);

      result = madd(result, mmul(mul, solve(x + 1, num + A[x] - insz - outsz)));
    }
  }
  return result;
}

int main() {
  int T; cin >> T;
  for(int t = 1; t <= T; t++) {
    printf("Case #%d: ", t);

    cin >> K;
    for(int i = 0; i < K; i++) {
      cin >> A[i];
    }

    memset(memo, -1, sizeof(memo));
    printf("%d\n", solve(0, 0));
  }
  return 0;
}
