#include<cstdio>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<string>
#include<utility>
#include<iostream>
#include<cmath>
using namespace std;

#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)

#define ll long long
#define ull unsigned ll
#define M 1000000007
#define D 1007

int state = 25;
int enc[5][5];

ll C[300][300];

map< ull, ll > memo;

ll solve(vector<int> in){
  int i, j, k, es;
  int ii, jj;
  int fg = 0;
  ll fr = 0;
  ll res = 0;
  ull hs;
  vector<int> next;

  in[enc[0][0]] = 0;
  REP(i,2,5){
    in[enc[1][0]] += i * in[enc[i][0]]; in[enc[i][0]] = 0;
    in[enc[0][1]] += i * in[enc[0][i]]; in[enc[0][i]] = 0;
  }

  hs = 0;
  rep(i,5) rep(j,5) hs = hs * 1007 + in[enc[i][j]];

  if(memo.count(hs)) return memo[hs];

//  rep(ii,5) rep(jj,5) printf("call %d %d : %d\n",ii,jj,in[enc[ii][jj]]); puts("");

  es = 0;
  REP(i,1,5) rep(j,5) if(in[enc[i][j]]) es++;
  if(es==0) return memo[hs] = 1;

  for(i=4;i>=1;i--) rep(j,5) if(fg==0 && in[enc[i][j]]){
    fg = 1;

    next = in;
    next[enc[i][j]]--;

    rep(ii,5) REP(jj,1,5) if(next[enc[ii][jj]]){
      fr = next[enc[ii][jj]] * jj;
      next[enc[i-1][j]]++;
      next[enc[ii][jj]]--;
      next[enc[ii][jj-1]]++;

      res += solve(next) * fr;
      res %= M;

      next[enc[ii][jj-1]]--;
      next[enc[ii][jj]]++;
      next[enc[i-1][j]]--;
    }
  }

  return memo[hs] = res;
}

int main(){
  int T, K, n[200];
  int count = 0;

  int i, j, m;
  ll res;

  m = 0;
  rep(i,5) rep(j,5) enc[i][j] = m++;
  // printf("%d\n",m); // m = 25

  rep(i,300) C[0][i] = 0;
  rep(i,300) C[i][0] = 1;
  REP(i,1,300) REP(j,1,300) C[i][j] = (C[i-1][j-1] + C[i-1][j]) % M;

  scanf("%d",&T);
  while(T--){
    fprintf(stderr,"test %d\n",T);
    scanf("%d",&K);
    rep(i,K) scanf("%d",n+i);

    vector<int> in;
    rep(i,state) in.push_back(0);
    rep(i,K) in[enc[n[i]][n[i]]]++;

    res = solve(in);

    printf("Case #%d: %lld\n", ++count, res);
  }

  return 0;
}
