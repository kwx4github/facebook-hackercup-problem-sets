#include <bits/stdc++.h>
using namespace std;

int main() {
	cin.sync_with_stdio(0);
	int T;
	cin >> T;

	long long C[10][10];
	for(int i =0; i < 100; i++) C[i/10][i%10] =0;
	for(int i =0; i < 10; i++) C[i][0] =1;
	for(int i =1; i < 10; i++) for(int j =1; j < 10; j++) C[i][j] =C[i-1][j-1]+C[i-1][j];

	for(int t =0; t < T; t++) {
		int K, N =0;
		cin >> K;
		vector<int> n(K);
		for(int i =0; i < K; i++) {
			cin >> n[i];
			N +=n[i];}

		vector< vector<long long> > X(K+1, vector<long long>(N+1,0));
		X[0][0] =1;
		long long mod =1000000007;
		// j spredu dostava, k dopredu dava
		for(int i =0; i < K; i++) for(int j =0; j <= N; j++) if(X[i][j] != 0)
			for(int l =0; l <= n[i]; l++) for(int m =0; m <= n[i]; m++) if(j+n[i]-m-l >= 0 && j+n[i]-m-l <= N) {
				// l dostane zozadu, m da dozadu
				long long c =(C[n[i]][l]*C[n[i]][m])%mod;
				for(int q =j; q > j-l; q--) c =(c*q)%mod;
				for(int q =j; q > j-m; q--) c =(c*q)%mod;
				X[i+1][j+n[i]-m-l] =(X[i+1][j+n[i]-m-l]+c*X[i][j])%mod;
				if(X[i+1][j+n[i]-m-l] < 0) X[i+1][j+n[i]-m-l] +=mod;}

		cout << "Case #" << t+1 << ": " << X[K][0] << "\n";}
	return 0;}
