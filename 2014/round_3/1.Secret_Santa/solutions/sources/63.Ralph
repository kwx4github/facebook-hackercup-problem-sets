#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <map>
using namespace std;
typedef long long i64;

#define fu(i,m,n) for(int i=m; i<n; i++)
#define fd(i,m,n) for(int i=n-1; i>=m; i--)
#define fr(i,m,n) for(typeof(m) i=m; i!=n; ++i)
#define fa(i,c) fr(i,(c).begin(),(c).end())

i64 MOD = 1000000007LL;

i64 dp[101][51][34][26];
i64 dp2[101][51][34][26][5][5];

i64 doit(int a, int b, int c, int d);

i64 doit(int a, int b, int c, int d, int s, int t) {
	i64& ret = dp2[a][b][c][d][s][t];
	if(ret) return ret-1;
	ret=0;
	if(a<0 || b<0 || c<0 || d<0) return 0;
	int v[5] = {0,a,b,c,d};

	i64 mult;
	if(s!=t) mult=(v[t]+1)*t;
	else mult = (v[t]+1)*t;

	//cout << a << " " << b << " " << c << " " << d << " " << s << " " << t << " " << ret << "(" << mult << ")" << endl;
	v[s-1]++; v[t-1]++;
	ret += doit(v[1],v[2],v[3],v[4]) * mult; ret %= MOD;
	v[s-1]--; v[t-1]--;

	//cout << a << " " << b << " " << c << " " << d << " " << s << " " << t << " " << ret << endl;
	v[s-1]++; v[t]++;
	ret += doit(v[1],v[2],v[3],v[4]) * mult; ret %= MOD;
	v[s-1]--; v[t]--;

	//cout << a << " " << b << " " << c << " " << d << " " << s << " " << t << " " << ret << endl;
	if(t>=2) {
		v[s-1]++; v[t-1]++;
		ret += doit(v[1],v[2],v[3],v[4]) * mult * (t-1); ret %=MOD;
		v[s-1]--; v[t-1]--;
	}
	//cout << a << " " << b << " " << c << " " << d << " " << s << " " << t << " " << ret << endl;

	if(s>=2) {
		//v[s-1]++; v[t]++;
		ret -= doit(v[1],v[2],v[3],v[4],s-1,t) * (s-1); ret %= MOD;
		ret = (ret+MOD)%MOD;
		//v[s-1]--; v[t]--;
	}
	//cout << a << " " << b << " " << c << " " << d << " " << s << " " << t << " " << ret << endl;

	/*if(s>=2 && t>=2) {
		v[s-2]++; v[t-1]++;
		ret += doit(v[1],v[2],v[3],v[4]) * mult * (s-1) * (t-1); ret %= MOD;
	}*/

	//cout << a << " " << b << " " << c << " " << d << " " << s << " " << t << " " << ret << endl;

	ret++;
	return ret-1;
}

i64 doit(int a, int b, int c, int d) {
	int v[5] = {0,a,b,c,d};
	if(a<0 || b<0 || c<0 || d<0) return 0;
	i64& ret = dp[a][b][c][d];
	if(ret) return ret-1;
	ret = 0;
	fu(i,1,5) {
		if(v[i]) {
			fu(j,1,5) {
				v[i]--;
				v[j]--;
				ret += doit(v[1],v[2],v[3],v[4],i,j);
				ret %= MOD;
				v[i]++;
				v[j]++;
			}
			break;
		}
	}
	ret++;
	//cout << a << " " << b << " " << c << " " << d << " " << ret-1 << endl;
	return ret-1;
}


int main(void) {
	int TS; cin >> TS;
	dp[0][0][0][0]=2;
	for(int ts=1; ts<=TS; ts++) {
		int K; cin >> K;
		int v[5] = {0,0,0,0,0};
		fu(k,0,K) {
			int s;
			cin >> s;
			v[s]++;
		}

		cout << "Case #" << ts << ": ";
		cout << doit(v[1],v[2],v[3],v[4]);
		cout << endl;
	}
}
