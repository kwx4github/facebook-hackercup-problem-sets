#pragma comment(linker, "/stack:64000000")
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <cmath>
#include <sstream>
#include <stack>
#include <cassert>
#include <string.h>
#include <ctime>

#define pb push_back
#define mp make_pair
#define PI 3.1415926535897932384626433832795
#define sqr(x) (x)*(x)
#define forn(i, n) for(int i = 0; i < n; ++i)
#define ALL(x) x.begin(), x.end()
#define sz(x) int((x).size())
#define X first
#define Y second
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
using namespace std;
typedef pair<int,int> pii;
const int INF = 2147483647;
const ll LLINF = 9223372036854775807LL;
const int maxn = 10010;
vector<int> a[maxn];
int color[maxn];
bool ok;
void dfs(int v, int c) {
	if (color[v] == -1) {
		color[v] = c;
		forn(i, sz(a[v])) dfs(a[v][i], 1-c);
	} else {
		if (color[v] != c) ok = false;
	}
}
void solve() {
	int n, m; scanf("%d%d", &n, &m);
	forn (i, n) a[i].clear();
	forn (i, m) {
		int fr, to; scanf("%d%d", &fr, &to);
		a[fr].pb(to);
		a[to].pb(fr);
	}
	memset(color,-1,sizeof(color));
	ok = true;
	dfs(0, 0);
	ok &= m <= n;
	if (ok) printf("%d\n", n+n-m-2);
	else printf("-1\n");
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int T; scanf("%d", &T); for (int tn = 1; tn <= T; ++tn) {
		cerr << tn << endl;
		printf("Case #%d: ", tn);
		solve();
	}
	return 0;
}