import collections
import sys

def main():
    f = sys.stdin
    if len(sys.argv) >= 2:
        fn = sys.argv[1]
        if fn != '-':
            f = open(fn)

    T = int(f.readline())
    for _T in xrange(T):
        N, M = map(int, f.readline().split())

        conns = {}
        roads = []
        for i in xrange(M):
            s, e = map(int, f.readline().split())
            if s == e:
                continue

            roads.append((s, e))
            conns.setdefault(s, []).append(e)
            conns.setdefault(e, []).append(s)
        s = f.readline().strip()
        assert not s

        nchains = 0

        chainsat = {}
        chainsat[0] = set()
        q = collections.deque([0])

        worked = True
        while q:
            c = q.popleft()
            for n in conns.get(c, []):
                if n in chainsat:
                    if len(chainsat[c].symmetric_difference(chainsat[n])) != 1:
                        worked = False
                else:
                    newchain = set()
                    for b in conns.get(n, []):
                        newchain = newchain | chainsat.get(b, set())
                    if len(newchain) == len(chainsat[c]):
                        newchain.add(nchains)
                        nchains += 1
                    chainsat[n] = newchain
                    q.append(n)
        assert len(chainsat) == N

        # print chainsat
        if not worked:
            nchains = -1

        print "Case #%d: %d" % (_T+1, nchains)
main()



